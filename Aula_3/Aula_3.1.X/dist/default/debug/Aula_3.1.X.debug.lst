

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Nov 21 23:38:50 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    93                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    94  0000                     
    95                           ; Version 2.10
    96                           ; Generated 31/07/2019 GMT
    97                           ; 
    98                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    99                           ; All rights reserved.
   100                           ; 
   101                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   102                           ; 
   103                           ; Redistribution and use in source and binary forms, with or without modification, are
   104                           ; permitted provided that the following conditions are met:
   105                           ; 
   106                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   107                           ;        conditions and the following disclaimer.
   108                           ; 
   109                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   110                           ;        of conditions and the following disclaimer in the documentation and/or other
   111                           ;        materials provided with the distribution.
   112                           ; 
   113                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   114                           ;        software without specific prior written permission.
   115                           ; 
   116                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   117                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   118                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   119                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   120                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   121                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   122                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   123                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   124                           ; 
   125                           ; 
   126                           ; Code-generator required, PIC18F46K80 Definitions
   127                           ; 
   128                           ; SFR Addresses
   129  0000                     
   130                           	psect	idataBANK1
   131  00602A                     __pidataBANK1:
   132                           	opt callstack 0
   133                           
   134                           ;initializer for stoa@F1174
   135  00602A  28                 	db	40
   136  00602B  6E                 	db	110
   137  00602C  75                 	db	117
   138  00602D  6C                 	db	108
   139  00602E  6C                 	db	108
   140  00602F  29                 	db	41
   141  006030  00                 	db	0
   142                           
   143                           	psect	mediumconst
   144  00F188                     __pmediumconst:
   145                           	opt callstack 0
   146  00F188  00                 	db	0
   147  00F189                     _font:
   148                           	opt callstack 0
   149  00F189  0004               	dw	4
   150  00F18B  0000               	dw	0
   151  00F18D  0000               	dw	0
   152  00F18F  0000               	dw	0
   153  00F191  0000               	dw	0
   154  00F193  0000               	dw	0
   155  00F195  0000               	dw	0
   156  00F197  0000               	dw	0
   157  00F199  0000               	dw	0
   158  00F19B  0003               	dw	3
   159  00F19D  0000               	dw	0
   160  00F19F  0000               	dw	0
   161  00F1A1  00FE               	dw	254
   162  00F1A3  001B               	dw	27
   163  00F1A5  0000               	dw	0
   164  00F1A7  0000               	dw	0
   165  00F1A9  0005               	dw	5
   166  00F1AB  001E               	dw	30
   167  00F1AD  0000               	dw	0
   168  00F1AF  0000               	dw	0
   169  00F1B1  0000               	dw	0
   170  00F1B3  0000               	dw	0
   171  00F1B5  0000               	dw	0
   172  00F1B7  001E               	dw	30
   173  00F1B9  0000               	dw	0
   174  00F1BB  0000               	dw	0
   175  00F1BD  0000               	dw	0
   176  00F1BF  000B               	dw	11
   177  00F1C1  0000               	dw	0
   178  00F1C3  0000               	dw	0
   179  00F1C5  0010               	dw	16
   180  00F1C7  0001               	dw	1
   181  00F1C9  0010               	dw	16
   182  00F1CB  001D               	dw	29
   183  00F1CD  00F0               	dw	240
   184  00F1CF  0003               	dw	3
   185  00F1D1  001E               	dw	30
   186  00F1D3  0001               	dw	1
   187  00F1D5  0010               	dw	16
   188  00F1D7  0001               	dw	1
   189  00F1D9  0010               	dw	16
   190  00F1DB  001D               	dw	29
   191  00F1DD  00F0               	dw	240
   192  00F1DF  0003               	dw	3
   193  00F1E1  001E               	dw	30
   194  00F1E3  0001               	dw	1
   195  00F1E5  0010               	dw	16
   196  00F1E7  0001               	dw	1
   197  00F1E9  0000               	dw	0
   198  00F1EB  0000               	dw	0
   199  00F1ED  0009               	dw	9
   200  00F1EF  0000               	dw	0
   201  00F1F1  0004               	dw	4
   202  00F1F3  001C               	dw	28
   203  00F1F5  0008               	dw	8
   204  00F1F7  0022               	dw	34
   205  00F1F9  0010               	dw	16
   206  00F1FB  0042               	dw	66
   207  00F1FD  0010               	dw	16
   208  00F1FF  00FF               	dw	255
   209  00F201  007F               	dw	127
   210  00F203  0042               	dw	66
   211  00F205  0010               	dw	16
   212  00F207  0084               	dw	132
   213  00F209  0010               	dw	16
   214  00F20B  0000               	dw	0
   215  00F20D  000F               	dw	15
   216  00F20F  0000               	dw	0
   217  00F211  0000               	dw	0
   218  00F213  000C               	dw	12
   219  00F215  001C               	dw	28
   220  00F217  0000               	dw	0
   221  00F219  0022               	dw	34
   222  00F21B  0010               	dw	16
   223  00F21D  0022               	dw	34
   224  00F21F  0008               	dw	8
   225  00F221  0022               	dw	34
   226  00F223  0006               	dw	6
   227  00F225  001C               	dw	28
   228  00F227  0001               	dw	1
   229  00F229  00C0               	dw	192
   230  00F22B  0000               	dw	0
   231  00F22D  0020               	dw	32
   232  00F22F  000E               	dw	14
   233  00F231  0018               	dw	24
   234  00F233  0011               	dw	17
   235  00F235  0004               	dw	4
   236  00F237  0011               	dw	17
   237  00F239  0002               	dw	2
   238  00F23B  0011               	dw	17
   239  00F23D  0000               	dw	0
   240  00F23F  000E               	dw	14
   241  00F241  0000               	dw	0
   242  00F243  0000               	dw	0
   243  00F245  000B               	dw	11
   244  00F247  0000               	dw	0
   245  00F249  0000               	dw	0
   246  00F24B  0000               	dw	0
   247  00F24D  000E               	dw	14
   248  00F24F  001C               	dw	28
   249  00F251  0011               	dw	17
   250  00F253  00A2               	dw	162
   251  00F255  0010               	dw	16
   252  00F257  00C2               	dw	194
   253  00F259  0010               	dw	16
   254  00F25B  0022               	dw	34
   255  00F25D  0011               	dw	17
   256  00F25F  001C               	dw	28
   257  00F261  000A               	dw	10
   258  00F263  0000               	dw	0
   259  00F265  000C               	dw	12
   260  00F267  0000               	dw	0
   261  00F269  000C               	dw	12
   262  00F26B  0000               	dw	0
   263  00F26D  0012               	dw	18
   264  00F26F  0000               	dw	0
   265  00F271  0000               	dw	0
   266  00F273  0003               	dw	3
   267  00F275  0000               	dw	0
   268  00F277  0000               	dw	0
   269  00F279  001E               	dw	30
   270  00F27B  0000               	dw	0
   271  00F27D  0000               	dw	0
   272  00F27F  0000               	dw	0
   273  00F281  0006               	dw	6
   274  00F283  0000               	dw	0
   275  00F285  0000               	dw	0
   276  00F287  0000               	dw	0
   277  00F289  0000               	dw	0
   278  00F28B  00E0               	dw	224
   279  00F28D  001F               	dw	31
   280  00F28F  001C               	dw	28
   281  00F291  0060               	dw	96
   282  00F293  0002               	dw	2
   283  00F295  0080               	dw	128
   284  00F297  0000               	dw	0
   285  00F299  0000               	dw	0
   286  00F29B  0004               	dw	4
   287  00F29D  0000               	dw	0
   288  00F29F  0000               	dw	0
   289  00F2A1  0006               	dw	6
   290  00F2A3  00C0               	dw	192
   291  00F2A5  00F8               	dw	248
   292  00F2A7  003F               	dw	63
   293  00F2A9  0000               	dw	0
   294  00F2AB  0000               	dw	0
   295  00F2AD  0006               	dw	6
   296  00F2AF  0024               	dw	36
   297  00F2B1  0000               	dw	0
   298  00F2B3  0018               	dw	24
   299  00F2B5  0000               	dw	0
   300  00F2B7  007E               	dw	126
   301  00F2B9  0000               	dw	0
   302  00F2BB  0018               	dw	24
   303  00F2BD  0000               	dw	0
   304  00F2BF  0024               	dw	36
   305  00F2C1  0000               	dw	0
   306  00F2C3  0000               	dw	0
   307  00F2C5  0000               	dw	0
   308  00F2C7  0009               	dw	9
   309  00F2C9  0000               	dw	0
   310  00F2CB  0000               	dw	0
   311  00F2CD  0080               	dw	128
   312  00F2CF  0000               	dw	0
   313  00F2D1  0080               	dw	128
   314  00F2D3  0000               	dw	0
   315  00F2D5  0080               	dw	128
   316  00F2D7  0000               	dw	0
   317  00F2D9  00F0               	dw	240
   318  00F2DB  0007               	dw	7
   319  00F2DD  0080               	dw	128
   320  00F2DF  0000               	dw	0
   321  00F2E1  0080               	dw	128
   322  00F2E3  0000               	dw	0
   323  00F2E5  0080               	dw	128
   324  00F2E7  0000               	dw	0
   325  00F2E9  0000               	dw	0
   326  00F2EB  0000               	dw	0
   327  00F2ED  0004               	dw	4
   328  00F2EF  0000               	dw	0
   329  00F2F1  0000               	dw	0
   330  00F2F3  0000               	dw	0
   331  00F2F5  0060               	dw	96
   332  00F2F7  0000               	dw	0
   333  00F2F9  0018               	dw	24
   334  00F2FB  0000               	dw	0
   335  00F2FD  0000               	dw	0
   336  00F2FF  0005               	dw	5
   337  00F301  0000               	dw	0
   338  00F303  0001               	dw	1
   339  00F305  0000               	dw	0
   340  00F307  0001               	dw	1
   341  00F309  0000               	dw	0
   342  00F30B  0001               	dw	1
   343  00F30D  0000               	dw	0
   344  00F30F  0001               	dw	1
   345  00F311  0000               	dw	0
   346  00F313  0000               	dw	0
   347  00F315  0004               	dw	4
   348  00F317  0000               	dw	0
   349  00F319  0000               	dw	0
   350  00F31B  0000               	dw	0
   351  00F31D  0018               	dw	24
   352  00F31F  0000               	dw	0
   353  00F321  0018               	dw	24
   354  00F323  0000               	dw	0
   355  00F325  0000               	dw	0
   356  00F327  0008               	dw	8
   357  00F329  0000               	dw	0
   358  00F32B  0000               	dw	0
   359  00F32D  0000               	dw	0
   360  00F32F  0040               	dw	64
   361  00F331  0000               	dw	0
   362  00F333  0038               	dw	56
   363  00F335  0000               	dw	0
   364  00F337  0007               	dw	7
   365  00F339  00E0               	dw	224
   366  00F33B  0000               	dw	0
   367  00F33D  001C               	dw	28
   368  00F33F  0000               	dw	0
   369  00F341  0002               	dw	2
   370  00F343  0000               	dw	0
   371  00F345  0000               	dw	0
   372  00F347  0000               	dw	0
   373  00F349  0009               	dw	9
   374  00F34B  00F8               	dw	248
   375  00F34D  0007               	dw	7
   376  00F34F  0004               	dw	4
   377  00F351  0008               	dw	8
   378  00F353  0002               	dw	2
   379  00F355  0010               	dw	16
   380  00F357  0002               	dw	2
   381  00F359  0010               	dw	16
   382  00F35B  0002               	dw	2
   383  00F35D  0010               	dw	16
   384  00F35F  0002               	dw	2
   385  00F361  0010               	dw	16
   386  00F363  0004               	dw	4
   387  00F365  0008               	dw	8
   388  00F367  00F8               	dw	248
   389  00F369  0007               	dw	7
   390  00F36B  0000               	dw	0
   391  00F36D  0000               	dw	0
   392  00F36F  0006               	dw	6
   393  00F371  0000               	dw	0
   394  00F373  0000               	dw	0
   395  00F375  0000               	dw	0
   396  00F377  0000               	dw	0
   397  00F379  0002               	dw	2
   398  00F37B  0000               	dw	0
   399  00F37D  0002               	dw	2
   400  00F37F  0000               	dw	0
   401  00F381  00FE               	dw	254
   402  00F383  001F               	dw	31
   403  00F385  0000               	dw	0
   404  00F387  0000               	dw	0
   405  00F389  0009               	dw	9
   406  00F38B  0018               	dw	24
   407  00F38D  0010               	dw	16
   408  00F38F  0004               	dw	4
   409  00F391  0018               	dw	24
   410  00F393  0002               	dw	2
   411  00F395  0014               	dw	20
   412  00F397  0002               	dw	2
   413  00F399  0012               	dw	18
   414  00F39B  0002               	dw	2
   415  00F39D  0011               	dw	17
   416  00F39F  0082               	dw	130
   417  00F3A1  0010               	dw	16
   418  00F3A3  0044               	dw	68
   419  00F3A5  0010               	dw	16
   420  00F3A7  0038               	dw	56
   421  00F3A9  0010               	dw	16
   422  00F3AB  0000               	dw	0
   423  00F3AD  0000               	dw	0
   424  00F3AF  0009               	dw	9
   425  00F3B1  0008               	dw	8
   426  00F3B3  000C               	dw	12
   427  00F3B5  0004               	dw	4
   428  00F3B7  0010               	dw	16
   429  00F3B9  0002               	dw	2
   430  00F3BB  0010               	dw	16
   431  00F3BD  0042               	dw	66
   432  00F3BF  0010               	dw	16
   433  00F3C1  0042               	dw	66
   434  00F3C3  0010               	dw	16
   435  00F3C5  0044               	dw	68
   436  00F3C7  0010               	dw	16
   437  00F3C9  00B8               	dw	184
   438  00F3CB  0008               	dw	8
   439  00F3CD  0000               	dw	0
   440  00F3CF  0007               	dw	7
   441  00F3D1  0000               	dw	0
   442  00F3D3  0000               	dw	0
   443  00F3D5  0009               	dw	9
   444  00F3D7  0000               	dw	0
   445  00F3D9  0002               	dw	2
   446  00F3DB  0000               	dw	0
   447  00F3DD  0003               	dw	3
   448  00F3DF  0080               	dw	128
   449  00F3E1  0002               	dw	2
   450  00F3E3  0060               	dw	96
   451  00F3E5  0002               	dw	2
   452  00F3E7  0010               	dw	16
   453  00F3E9  0002               	dw	2
   454  00F3EB  0008               	dw	8
   455  00F3ED  0002               	dw	2
   456  00F3EF  00FE               	dw	254
   457  00F3F1  001F               	dw	31
   458  00F3F3  0000               	dw	0
   459  00F3F5  0002               	dw	2
   460  00F3F7  0000               	dw	0
   461  00F3F9  0000               	dw	0
   462  00F3FB  0009               	dw	9
   463  00F3FD  0000               	dw	0
   464  00F3FF  0004               	dw	4
   465  00F401  0070               	dw	112
   466  00F403  0008               	dw	8
   467  00F405  002E               	dw	46
   468  00F407  0010               	dw	16
   469  00F409  0022               	dw	34
   470  00F40B  0010               	dw	16
   471  00F40D  0022               	dw	34
   472  00F40F  0010               	dw	16
   473  00F411  0022               	dw	34
   474  00F413  0010               	dw	16
   475  00F415  0042               	dw	66
   476  00F417  0008               	dw	8
   477  00F419  0082               	dw	130
   478  00F41B  0007               	dw	7
   479  00F41D  0000               	dw	0
   480  00F41F  0000               	dw	0
   481  00F421  0009               	dw	9
   482  00F423  0000               	dw	0
   483  00F425  0000               	dw	0
   484  00F427  0000               	dw	0
   485  00F429  0007               	dw	7
   486  00F42B  00C0               	dw	192
   487  00F42D  0008               	dw	8
   488  00F42F  0060               	dw	96
   489  00F431  0010               	dw	16
   490  00F433  0058               	dw	88
   491  00F435  0010               	dw	16
   492  00F437  0044               	dw	68
   493  00F439  0010               	dw	16
   494  00F43B  0082               	dw	130
   495  00F43D  0008               	dw	8
   496  00F43F  0000               	dw	0
   497  00F441  0007               	dw	7
   498  00F443  0000               	dw	0
   499  00F445  0000               	dw	0
   500  00F447  0009               	dw	9
   501  00F449  0000               	dw	0
   502  00F44B  0000               	dw	0
   503  00F44D  0002               	dw	2
   504  00F44F  0010               	dw	16
   505  00F451  0002               	dw	2
   506  00F453  000C               	dw	12
   507  00F455  0002               	dw	2
   508  00F457  0003               	dw	3
   509  00F459  00C2               	dw	194
   510  00F45B  0000               	dw	0
   511  00F45D  0032               	dw	50
   512  00F45F  0000               	dw	0
   513  00F461  000E               	dw	14
   514  00F463  0000               	dw	0
   515  00F465  0002               	dw	2
   516  00F467  0000               	dw	0
   517  00F469  0000               	dw	0
   518  00F46B  0000               	dw	0
   519  00F46D  0009               	dw	9
   520  00F46F  0000               	dw	0
   521  00F471  0007               	dw	7
   522  00F473  0098               	dw	152
   523  00F475  0008               	dw	8
   524  00F477  0064               	dw	100
   525  00F479  0010               	dw	16
   526  00F47B  0042               	dw	66
   527  00F47D  0010               	dw	16
   528  00F47F  0042               	dw	66
   529  00F481  0010               	dw	16
   530  00F483  0064               	dw	100
   531  00F485  0010               	dw	16
   532  00F487  0098               	dw	152
   533  00F489  0008               	dw	8
   534  00F48B  0000               	dw	0
   535  00F48D  0007               	dw	7
   536  00F48F  0000               	dw	0
   537  00F491  0000               	dw	0
   538  00F493  0009               	dw	9
   539  00F495  0000               	dw	0
   540  00F497  0000               	dw	0
   541  00F499  0038               	dw	56
   542  00F49B  0000               	dw	0
   543  00F49D  0044               	dw	68
   544  00F49F  0010               	dw	16
   545  00F4A1  0082               	dw	130
   546  00F4A3  0008               	dw	8
   547  00F4A5  0082               	dw	130
   548  00F4A7  0004               	dw	4
   549  00F4A9  0082               	dw	130
   550  00F4AB  0003               	dw	3
   551  00F4AD  0084               	dw	132
   552  00F4AF  0000               	dw	0
   553  00F4B1  0078               	dw	120
   554  00F4B3  0000               	dw	0
   555  00F4B5  0000               	dw	0
   556  00F4B7  0000               	dw	0
   557  00F4B9  0004               	dw	4
   558  00F4BB  0000               	dw	0
   559  00F4BD  0000               	dw	0
   560  00F4BF  0030               	dw	48
   561  00F4C1  0018               	dw	24
   562  00F4C3  0030               	dw	48
   563  00F4C5  0018               	dw	24
   564  00F4C7  0000               	dw	0
   565  00F4C9  0000               	dw	0
   566  00F4CB  0004               	dw	4
   567  00F4CD  0000               	dw	0
   568  00F4CF  0000               	dw	0
   569  00F4D1  0030               	dw	48
   570  00F4D3  0060               	dw	96
   571  00F4D5  0030               	dw	48
   572  00F4D7  0018               	dw	24
   573  00F4D9  0000               	dw	0
   574  00F4DB  0000               	dw	0
   575  00F4DD  000A               	dw	10
   576  00F4DF  0000               	dw	0
   577  00F4E1  0000               	dw	0
   578  00F4E3  0080               	dw	128
   579  00F4E5  0000               	dw	0
   580  00F4E7  0080               	dw	128
   581  00F4E9  0000               	dw	0
   582  00F4EB  0040               	dw	64
   583  00F4ED  0001               	dw	1
   584  00F4EF  0020               	dw	32
   585  00F4F1  0002               	dw	2
   586  00F4F3  0020               	dw	32
   587  00F4F5  0002               	dw	2
   588  00F4F7  0010               	dw	16
   589  00F4F9  0004               	dw	4
   590  00F4FB  0010               	dw	16
   591  00F4FD  0004               	dw	4
   592  00F4FF  0008               	dw	8
   593  00F501  0008               	dw	8
   594  00F503  0000               	dw	0
   595  00F505  0000               	dw	0
   596  00F507  000A               	dw	10
   597  00F509  0000               	dw	0
   598  00F50B  0000               	dw	0
   599  00F50D  0020               	dw	32
   600  00F50F  0001               	dw	1
   601  00F511  0020               	dw	32
   602  00F513  0001               	dw	1
   603  00F515  0020               	dw	32
   604  00F517  0001               	dw	1
   605  00F519  0020               	dw	32
   606  00F51B  0001               	dw	1
   607  00F51D  0020               	dw	32
   608  00F51F  0001               	dw	1
   609  00F521  0020               	dw	32
   610  00F523  0001               	dw	1
   611  00F525  0020               	dw	32
   612  00F527  0001               	dw	1
   613  00F529  0020               	dw	32
   614  00F52B  0001               	dw	1
   615  00F52D  0000               	dw	0
   616  00F52F  0000               	dw	0
   617  00F531  000A               	dw	10
   618  00F533  0000               	dw	0
   619  00F535  0000               	dw	0
   620  00F537  0008               	dw	8
   621  00F539  0008               	dw	8
   622  00F53B  0010               	dw	16
   623  00F53D  0004               	dw	4
   624  00F53F  0010               	dw	16
   625  00F541  0004               	dw	4
   626  00F543  0020               	dw	32
   627  00F545  0002               	dw	2
   628  00F547  0020               	dw	32
   629  00F549  0002               	dw	2
   630  00F54B  0040               	dw	64
   631  00F54D  0001               	dw	1
   632  00F54F  0080               	dw	128
   633  00F551  0000               	dw	0
   634  00F553  0080               	dw	128
   635  00F555  0000               	dw	0
   636  00F557  0000               	dw	0
   637  00F559  0000               	dw	0
   638  00F55B  0008               	dw	8
   639  00F55D  0000               	dw	0
   640  00F55F  0000               	dw	0
   641  00F561  000C               	dw	12
   642  00F563  0000               	dw	0
   643  00F565  0082               	dw	130
   644  00F567  0001               	dw	1
   645  00F569  0042               	dw	66
   646  00F56B  0002               	dw	2
   647  00F56D  0022               	dw	34
   648  00F56F  001A               	dw	26
   649  00F571  0022               	dw	34
   650  00F573  001A               	dw	26
   651  00F575  009C               	dw	156
   652  00F577  0001               	dw	1
   653  00F579  0000               	dw	0
   654  00F57B  0000               	dw	0
   655  00F57D  000E               	dw	14
   656  00F57F  0000               	dw	0
   657  00F581  0000               	dw	0
   658  00F583  00F0               	dw	240
   659  00F585  0003               	dw	3
   660  00F587  0008               	dw	8
   661  00F589  0004               	dw	4
   662  00F58B  0004               	dw	4
   663  00F58D  0008               	dw	8
   664  00F58F  00C2               	dw	194
   665  00F591  0011               	dw	17
   666  00F593  0022               	dw	34
   667  00F595  0012               	dw	18
   668  00F597  0012               	dw	18
   669  00F599  0012               	dw	18
   670  00F59B  0012               	dw	18
   671  00F59D  0012               	dw	18
   672  00F59F  00E2               	dw	226
   673  00F5A1  0011               	dw	17
   674  00F5A3  0012               	dw	18
   675  00F5A5  0012               	dw	18
   676  00F5A7  0004               	dw	4
   677  00F5A9  0012               	dw	18
   678  00F5AB  0008               	dw	8
   679  00F5AD  0009               	dw	9
   680  00F5AF  00F0               	dw	240
   681  00F5B1  0004               	dw	4
   682  00F5B3  0000               	dw	0
   683  00F5B5  0000               	dw	0
   684  00F5B7  000D               	dw	13
   685  00F5B9  0000               	dw	0
   686  00F5BB  0000               	dw	0
   687  00F5BD  0000               	dw	0
   688  00F5BF  0010               	dw	16
   689  00F5C1  0000               	dw	0
   690  00F5C3  000E               	dw	14
   691  00F5C5  0080               	dw	128
   692  00F5C7  0001               	dw	1
   693  00F5C9  0060               	dw	96
   694  00F5CB  0001               	dw	1
   695  00F5CD  001C               	dw	28
   696  00F5CF  0001               	dw	1
   697  00F5D1  0002               	dw	2
   698  00F5D3  0001               	dw	1
   699  00F5D5  001C               	dw	28
   700  00F5D7  0001               	dw	1
   701  00F5D9  0060               	dw	96
   702  00F5DB  0001               	dw	1
   703  00F5DD  0080               	dw	128
   704  00F5DF  0001               	dw	1
   705  00F5E1  0000               	dw	0
   706  00F5E3  000E               	dw	14
   707  00F5E5  0000               	dw	0
   708  00F5E7  0010               	dw	16
   709  00F5E9  0000               	dw	0
   710  00F5EB  0000               	dw	0
   711  00F5ED  0009               	dw	9
   712  00F5EF  0000               	dw	0
   713  00F5F1  0000               	dw	0
   714  00F5F3  0000               	dw	0
   715  00F5F5  0000               	dw	0
   716  00F5F7  00FE               	dw	254
   717  00F5F9  001F               	dw	31
   718  00F5FB  0042               	dw	66
   719  00F5FD  0010               	dw	16
   720  00F5FF  0042               	dw	66
   721  00F601  0010               	dw	16
   722  00F603  0064               	dw	100
   723  00F605  0010               	dw	16
   724  00F607  0098               	dw	152
   725  00F609  0008               	dw	8
   726  00F60B  0000               	dw	0
   727  00F60D  0007               	dw	7
   728  00F60F  0000               	dw	0
   729  00F611  0000               	dw	0
   730  00F613  000D               	dw	13
   731  00F615  0000               	dw	0
   732  00F617  0000               	dw	0
   733  00F619  00F0               	dw	240
   734  00F61B  0003               	dw	3
   735  00F61D  0008               	dw	8
   736  00F61F  0004               	dw	4
   737  00F621  0004               	dw	4
   738  00F623  0008               	dw	8
   739  00F625  0002               	dw	2
   740  00F627  0010               	dw	16
   741  00F629  0002               	dw	2
   742  00F62B  0010               	dw	16
   743  00F62D  0002               	dw	2
   744  00F62F  0010               	dw	16
   745  00F631  0002               	dw	2
   746  00F633  0010               	dw	16
   747  00F635  0002               	dw	2
   748  00F637  0010               	dw	16
   749  00F639  0004               	dw	4
   750  00F63B  0008               	dw	8
   751  00F63D  0004               	dw	4
   752  00F63F  0008               	dw	8
   753  00F641  0008               	dw	8
   754  00F643  0004               	dw	4
   755  00F645  0000               	dw	0
   756  00F647  0000               	dw	0
   757  00F649  000C               	dw	12
   758  00F64B  0000               	dw	0
   759  00F64D  0000               	dw	0
   760  00F64F  0000               	dw	0
   761  00F651  0000               	dw	0
   762  00F653  00FE               	dw	254
   763  00F655  001F               	dw	31
   764  00F657  0002               	dw	2
   765  00F659  0010               	dw	16
   766  00F65B  0002               	dw	2
   767  00F65D  0010               	dw	16
   768  00F65F  0002               	dw	2
   769  00F661  0010               	dw	16
   770  00F663  0002               	dw	2
   771  00F665  0010               	dw	16
   772  00F667  0002               	dw	2
   773  00F669  0010               	dw	16
   774  00F66B  0004               	dw	4
   775  00F66D  0008               	dw	8
   776  00F66F  0008               	dw	8
   777  00F671  0004               	dw	4
   778  00F673  00F0               	dw	240
   779  00F675  0003               	dw	3
   780  00F677  0000               	dw	0
   781  00F679  0000               	dw	0
   782  00F67B  0009               	dw	9
   783  00F67D  0000               	dw	0
   784  00F67F  0000               	dw	0
   785  00F681  0000               	dw	0
   786  00F683  0000               	dw	0
   787  00F685  00FE               	dw	254
   788  00F687  001F               	dw	31
   789  00F689  0042               	dw	66
   790  00F68B  0010               	dw	16
   791  00F68D  0042               	dw	66
   792  00F68F  0010               	dw	16
   793  00F691  0042               	dw	66
   794  00F693  0010               	dw	16
   795  00F695  0042               	dw	66
   796  00F697  0010               	dw	16
   797  00F699  0042               	dw	66
   798  00F69B  0010               	dw	16
   799  00F69D  0000               	dw	0
   800  00F69F  0000               	dw	0
   801  00F6A1  0008               	dw	8
   802  00F6A3  0000               	dw	0
   803  00F6A5  0000               	dw	0
   804  00F6A7  0000               	dw	0
   805  00F6A9  0000               	dw	0
   806  00F6AB  00FE               	dw	254
   807  00F6AD  001F               	dw	31
   808  00F6AF  0042               	dw	66
   809  00F6B1  0000               	dw	0
   810  00F6B3  0042               	dw	66
   811  00F6B5  0000               	dw	0
   812  00F6B7  0042               	dw	66
   813  00F6B9  0000               	dw	0
   814  00F6BB  0042               	dw	66
   815  00F6BD  0000               	dw	0
   816  00F6BF  0000               	dw	0
   817  00F6C1  0000               	dw	0
   818  00F6C3  000E               	dw	14
   819  00F6C5  0000               	dw	0
   820  00F6C7  0000               	dw	0
   821  00F6C9  00F0               	dw	240
   822  00F6CB  0003               	dw	3
   823  00F6CD  0008               	dw	8
   824  00F6CF  0004               	dw	4
   825  00F6D1  0004               	dw	4
   826  00F6D3  0008               	dw	8
   827  00F6D5  0002               	dw	2
   828  00F6D7  0010               	dw	16
   829  00F6D9  0002               	dw	2
   830  00F6DB  0010               	dw	16
   831  00F6DD  0002               	dw	2
   832  00F6DF  0010               	dw	16
   833  00F6E1  0002               	dw	2
   834  00F6E3  0010               	dw	16
   835  00F6E5  0082               	dw	130
   836  00F6E7  0010               	dw	16
   837  00F6E9  0084               	dw	132
   838  00F6EB  0010               	dw	16
   839  00F6ED  0084               	dw	132
   840  00F6EF  0008               	dw	8
   841  00F6F1  0088               	dw	136
   842  00F6F3  0004               	dw	4
   843  00F6F5  0080               	dw	128
   844  00F6F7  0003               	dw	3
   845  00F6F9  0000               	dw	0
   846  00F6FB  0000               	dw	0
   847  00F6FD  000A               	dw	10
   848  00F6FF  0000               	dw	0
   849  00F701  0000               	dw	0
   850  00F703  0000               	dw	0
   851  00F705  0000               	dw	0
   852  00F707  00FE               	dw	254
   853  00F709  001F               	dw	31
   854  00F70B  0040               	dw	64
   855  00F70D  0000               	dw	0
   856  00F70F  0040               	dw	64
   857  00F711  0000               	dw	0
   858  00F713  0040               	dw	64
   859  00F715  0000               	dw	0
   860  00F717  0040               	dw	64
   861  00F719  0000               	dw	0
   862  00F71B  0040               	dw	64
   863  00F71D  0000               	dw	0
   864  00F71F  00FE               	dw	254
   865  00F721  001F               	dw	31
   866  00F723  0000               	dw	0
   867  00F725  0000               	dw	0
   868  00F727  0004               	dw	4
   869  00F729  0000               	dw	0
   870  00F72B  0000               	dw	0
   871  00F72D  0000               	dw	0
   872  00F72F  0000               	dw	0
   873  00F731  00FE               	dw	254
   874  00F733  001F               	dw	31
   875  00F735  0000               	dw	0
   876  00F737  0000               	dw	0
   877  00F739  0007               	dw	7
   878  00F73B  0000               	dw	0
   879  00F73D  0000               	dw	0
   880  00F73F  0000               	dw	0
   881  00F741  0008               	dw	8
   882  00F743  0000               	dw	0
   883  00F745  0010               	dw	16
   884  00F747  0000               	dw	0
   885  00F749  0010               	dw	16
   886  00F74B  0000               	dw	0
   887  00F74D  0008               	dw	8
   888  00F74F  00FE               	dw	254
   889  00F751  0007               	dw	7
   890  00F753  0000               	dw	0
   891  00F755  0000               	dw	0
   892  00F757  0009               	dw	9
   893  00F759  0000               	dw	0
   894  00F75B  0000               	dw	0
   895  00F75D  0000               	dw	0
   896  00F75F  0000               	dw	0
   897  00F761  00FE               	dw	254
   898  00F763  001F               	dw	31
   899  00F765  0060               	dw	96
   900  00F767  0000               	dw	0
   901  00F769  0090               	dw	144
   902  00F76B  0001               	dw	1
   903  00F76D  0008               	dw	8
   904  00F76F  0002               	dw	2
   905  00F771  0004               	dw	4
   906  00F773  000C               	dw	12
   907  00F775  0002               	dw	2
   908  00F777  0010               	dw	16
   909  00F779  0000               	dw	0
   910  00F77B  0000               	dw	0
   911  00F77D  0008               	dw	8
   912  00F77F  0000               	dw	0
   913  00F781  0000               	dw	0
   914  00F783  0000               	dw	0
   915  00F785  0000               	dw	0
   916  00F787  00FE               	dw	254
   917  00F789  001F               	dw	31
   918  00F78B  0000               	dw	0
   919  00F78D  0010               	dw	16
   920  00F78F  0000               	dw	0
   921  00F791  0010               	dw	16
   922  00F793  0000               	dw	0
   923  00F795  0010               	dw	16
   924  00F797  0000               	dw	0
   925  00F799  0010               	dw	16
   926  00F79B  0000               	dw	0
   927  00F79D  0000               	dw	0
   928  00F79F  000F               	dw	15
   929  00F7A1  0000               	dw	0
   930  00F7A3  0000               	dw	0
   931  00F7A5  0000               	dw	0
   932  00F7A7  001C               	dw	28
   933  00F7A9  00F8               	dw	248
   934  00F7AB  0003               	dw	3
   935  00F7AD  0006               	dw	6
   936  00F7AF  0000               	dw	0
   937  00F7B1  0038               	dw	56
   938  00F7B3  0000               	dw	0
   939  00F7B5  00C0               	dw	192
   940  00F7B7  0001               	dw	1
   941  00F7B9  0000               	dw	0
   942  00F7BB  000E               	dw	14
   943  00F7BD  0000               	dw	0
   944  00F7BF  0010               	dw	16
   945  00F7C1  0000               	dw	0
   946  00F7C3  000E               	dw	14
   947  00F7C5  00C0               	dw	192
   948  00F7C7  0001               	dw	1
   949  00F7C9  0038               	dw	56
   950  00F7CB  0000               	dw	0
   951  00F7CD  0006               	dw	6
   952  00F7CF  0000               	dw	0
   953  00F7D1  00F8               	dw	248
   954  00F7D3  0003               	dw	3
   955  00F7D5  0000               	dw	0
   956  00F7D7  001C               	dw	28
   957  00F7D9  0000               	dw	0
   958  00F7DB  0000               	dw	0
   959  00F7DD  000B               	dw	11
   960  00F7DF  0000               	dw	0
   961  00F7E1  0000               	dw	0
   962  00F7E3  0000               	dw	0
   963  00F7E5  0000               	dw	0
   964  00F7E7  00FE               	dw	254
   965  00F7E9  001F               	dw	31
   966  00F7EB  0008               	dw	8
   967  00F7ED  0000               	dw	0
   968  00F7EF  0030               	dw	48
   969  00F7F1  0000               	dw	0
   970  00F7F3  0040               	dw	64
   971  00F7F5  0000               	dw	0
   972  00F7F7  0080               	dw	128
   973  00F7F9  0000               	dw	0
   974  00F7FB  0000               	dw	0
   975  00F7FD  0003               	dw	3
   976  00F7FF  0000               	dw	0
   977  00F801  0004               	dw	4
   978  00F803  00FE               	dw	254
   979  00F805  001F               	dw	31
   980  00F807  0000               	dw	0
   981  00F809  0000               	dw	0
   982  00F80B  000E               	dw	14
   983  00F80D  0000               	dw	0
   984  00F80F  0000               	dw	0
   985  00F811  00F0               	dw	240
   986  00F813  0003               	dw	3
   987  00F815  0008               	dw	8
   988  00F817  0004               	dw	4
   989  00F819  0004               	dw	4
   990  00F81B  0008               	dw	8
   991  00F81D  0002               	dw	2
   992  00F81F  0010               	dw	16
   993  00F821  0002               	dw	2
   994  00F823  0010               	dw	16
   995  00F825  0002               	dw	2
   996  00F827  0010               	dw	16
   997  00F829  0002               	dw	2
   998  00F82B  0010               	dw	16
   999  00F82D  0002               	dw	2
  1000  00F82F  0010               	dw	16
  1001  00F831  0002               	dw	2
  1002  00F833  0010               	dw	16
  1003  00F835  0004               	dw	4
  1004  00F837  0008               	dw	8
  1005  00F839  0008               	dw	8
  1006  00F83B  0004               	dw	4
  1007  00F83D  00F0               	dw	240
  1008  00F83F  0003               	dw	3
  1009  00F841  0000               	dw	0
  1010  00F843  0000               	dw	0
  1011  00F845  0009               	dw	9
  1012  00F847  0000               	dw	0
  1013  00F849  0000               	dw	0
  1014  00F84B  0000               	dw	0
  1015  00F84D  0000               	dw	0
  1016  00F84F  00FE               	dw	254
  1017  00F851  001F               	dw	31
  1018  00F853  0042               	dw	66
  1019  00F855  0000               	dw	0
  1020  00F857  0042               	dw	66
  1021  00F859  0000               	dw	0
  1022  00F85B  0042               	dw	66
  1023  00F85D  0000               	dw	0
  1024  00F85F  0024               	dw	36
  1025  00F861  0000               	dw	0
  1026  00F863  0018               	dw	24
  1027  00F865  0000               	dw	0
  1028  00F867  0000               	dw	0
  1029  00F869  0000               	dw	0
  1030  00F86B  000E               	dw	14
  1031  00F86D  0000               	dw	0
  1032  00F86F  0000               	dw	0
  1033  00F871  00F0               	dw	240
  1034  00F873  0003               	dw	3
  1035  00F875  0008               	dw	8
  1036  00F877  0004               	dw	4
  1037  00F879  0004               	dw	4
  1038  00F87B  0008               	dw	8
  1039  00F87D  0002               	dw	2
  1040  00F87F  0010               	dw	16
  1041  00F881  0002               	dw	2
  1042  00F883  0010               	dw	16
  1043  00F885  0002               	dw	2
  1044  00F887  0010               	dw	16
  1045  00F889  0002               	dw	2
  1046  00F88B  0011               	dw	17
  1047  00F88D  0002               	dw	2
  1048  00F88F  0012               	dw	18
  1049  00F891  0002               	dw	2
  1050  00F893  000C               	dw	12
  1051  00F895  0004               	dw	4
  1052  00F897  0008               	dw	8
  1053  00F899  0008               	dw	8
  1054  00F89B  0016               	dw	22
  1055  00F89D  00F0               	dw	240
  1056  00F89F  0021               	dw	33
  1057  00F8A1  0000               	dw	0
  1058  00F8A3  0000               	dw	0
  1059  00F8A5  000A               	dw	10
  1060  00F8A7  0000               	dw	0
  1061  00F8A9  0000               	dw	0
  1062  00F8AB  0000               	dw	0
  1063  00F8AD  0000               	dw	0
  1064  00F8AF  00FE               	dw	254
  1065  00F8B1  001F               	dw	31
  1066  00F8B3  0042               	dw	66
  1067  00F8B5  0000               	dw	0
  1068  00F8B7  00C2               	dw	194
  1069  00F8B9  0000               	dw	0
  1070  00F8BB  0042               	dw	66
  1071  00F8BD  0001               	dw	1
  1072  00F8BF  0042               	dw	66
  1073  00F8C1  0006               	dw	6
  1074  00F8C3  0024               	dw	36
  1075  00F8C5  0008               	dw	8
  1076  00F8C7  0018               	dw	24
  1077  00F8C9  0010               	dw	16
  1078  00F8CB  0000               	dw	0
  1079  00F8CD  0000               	dw	0
  1080  00F8CF  0008               	dw	8
  1081  00F8D1  0000               	dw	0
  1082  00F8D3  0004               	dw	4
  1083  00F8D5  0018               	dw	24
  1084  00F8D7  0008               	dw	8
  1085  00F8D9  0024               	dw	36
  1086  00F8DB  0010               	dw	16
  1087  00F8DD  0042               	dw	66
  1088  00F8DF  0010               	dw	16
  1089  00F8E1  0042               	dw	66
  1090  00F8E3  0010               	dw	16
  1091  00F8E5  0084               	dw	132
  1092  00F8E7  0008               	dw	8
  1093  00F8E9  0008               	dw	8
  1094  00F8EB  0007               	dw	7
  1095  00F8ED  0000               	dw	0
  1096  00F8EF  0000               	dw	0
  1097  00F8F1  0008               	dw	8
  1098  00F8F3  0002               	dw	2
  1099  00F8F5  0000               	dw	0
  1100  00F8F7  0002               	dw	2
  1101  00F8F9  0000               	dw	0
  1102  00F8FB  0002               	dw	2
  1103  00F8FD  0000               	dw	0
  1104  00F8FF  00FE               	dw	254
  1105  00F901  001F               	dw	31
  1106  00F903  0002               	dw	2
  1107  00F905  0000               	dw	0
  1108  00F907  0002               	dw	2
  1109  00F909  0000               	dw	0
  1110  00F90B  0002               	dw	2
  1111  00F90D  0000               	dw	0
  1112  00F90F  0000               	dw	0
  1113  00F911  0000               	dw	0
  1114  00F913  000A               	dw	10
  1115  00F915  0000               	dw	0
  1116  00F917  0000               	dw	0
  1117  00F919  0000               	dw	0
  1118  00F91B  0000               	dw	0
  1119  00F91D  00FE               	dw	254
  1120  00F91F  0007               	dw	7
  1121  00F921  0000               	dw	0
  1122  00F923  0008               	dw	8
  1123  00F925  0000               	dw	0
  1124  00F927  0010               	dw	16
  1125  00F929  0000               	dw	0
  1126  00F92B  0010               	dw	16
  1127  00F92D  0000               	dw	0
  1128  00F92F  0010               	dw	16
  1129  00F931  0000               	dw	0
  1130  00F933  0008               	dw	8
  1131  00F935  00FE               	dw	254
  1132  00F937  0007               	dw	7
  1133  00F939  0000               	dw	0
  1134  00F93B  0000               	dw	0
  1135  00F93D  000C               	dw	12
  1136  00F93F  0002               	dw	2
  1137  00F941  0000               	dw	0
  1138  00F943  001C               	dw	28
  1139  00F945  0000               	dw	0
  1140  00F947  0060               	dw	96
  1141  00F949  0000               	dw	0
  1142  00F94B  0080               	dw	128
  1143  00F94D  0001               	dw	1
  1144  00F94F  0000               	dw	0
  1145  00F951  000E               	dw	14
  1146  00F953  0000               	dw	0
  1147  00F955  0010               	dw	16
  1148  00F957  0000               	dw	0
  1149  00F959  000E               	dw	14
  1150  00F95B  0080               	dw	128
  1151  00F95D  0001               	dw	1
  1152  00F95F  0060               	dw	96
  1153  00F961  0000               	dw	0
  1154  00F963  001C               	dw	28
  1155  00F965  0000               	dw	0
  1156  00F967  0002               	dw	2
  1157  00F969  0000               	dw	0
  1158  00F96B  0000               	dw	0
  1159  00F96D  0000               	dw	0
  1160  00F96F  000F               	dw	15
  1161  00F971  0000               	dw	0
  1162  00F973  0000               	dw	0
  1163  00F975  0006               	dw	6
  1164  00F977  0000               	dw	0
  1165  00F979  0078               	dw	120
  1166  00F97B  0000               	dw	0
  1167  00F97D  0080               	dw	128
  1168  00F97F  0007               	dw	7
  1169  00F981  0000               	dw	0
  1170  00F983  0018               	dw	24
  1171  00F985  0080               	dw	128
  1172  00F987  0007               	dw	7
  1173  00F989  0078               	dw	120
  1174  00F98B  0000               	dw	0
  1175  00F98D  0006               	dw	6
  1176  00F98F  0000               	dw	0
  1177  00F991  0078               	dw	120
  1178  00F993  0000               	dw	0
  1179  00F995  0080               	dw	128
  1180  00F997  0007               	dw	7
  1181  00F999  0000               	dw	0
  1182  00F99B  0018               	dw	24
  1183  00F99D  0080               	dw	128
  1184  00F99F  0007               	dw	7
  1185  00F9A1  0078               	dw	120
  1186  00F9A3  0000               	dw	0
  1187  00F9A5  0006               	dw	6
  1188  00F9A7  0000               	dw	0
  1189  00F9A9  0000               	dw	0
  1190  00F9AB  0000               	dw	0
  1191  00F9AD  0009               	dw	9
  1192  00F9AF  0000               	dw	0
  1193  00F9B1  0000               	dw	0
  1194  00F9B3  0006               	dw	6
  1195  00F9B5  0018               	dw	24
  1196  00F9B7  0008               	dw	8
  1197  00F9B9  0004               	dw	4
  1198  00F9BB  0030               	dw	48
  1199  00F9BD  0003               	dw	3
  1200  00F9BF  00C0               	dw	192
  1201  00F9C1  0000               	dw	0
  1202  00F9C3  0030               	dw	48
  1203  00F9C5  0003               	dw	3
  1204  00F9C7  0008               	dw	8
  1205  00F9C9  0004               	dw	4
  1206  00F9CB  0006               	dw	6
  1207  00F9CD  0018               	dw	24
  1208  00F9CF  0000               	dw	0
  1209  00F9D1  0000               	dw	0
  1210  00F9D3  000B               	dw	11
  1211  00F9D5  0000               	dw	0
  1212  00F9D7  0000               	dw	0
  1213  00F9D9  0002               	dw	2
  1214  00F9DB  0000               	dw	0
  1215  00F9DD  0004               	dw	4
  1216  00F9DF  0000               	dw	0
  1217  00F9E1  0018               	dw	24
  1218  00F9E3  0000               	dw	0
  1219  00F9E5  0060               	dw	96
  1220  00F9E7  0000               	dw	0
  1221  00F9E9  0080               	dw	128
  1222  00F9EB  001F               	dw	31
  1223  00F9ED  0060               	dw	96
  1224  00F9EF  0000               	dw	0
  1225  00F9F1  0018               	dw	24
  1226  00F9F3  0000               	dw	0
  1227  00F9F5  0004               	dw	4
  1228  00F9F7  0000               	dw	0
  1229  00F9F9  0002               	dw	2
  1230  00F9FB  0000               	dw	0
  1231  00F9FD  0000               	dw	0
  1232  00F9FF  0000               	dw	0
  1233  00FA01  0008               	dw	8
  1234  00FA03  0002               	dw	2
  1235  00FA05  0010               	dw	16
  1236  00FA07  0002               	dw	2
  1237  00FA09  001C               	dw	28
  1238  00FA0B  0002               	dw	2
  1239  00FA0D  0013               	dw	19
  1240  00FA0F  00C2               	dw	194
  1241  00FA11  0010               	dw	16
  1242  00FA13  0032               	dw	50
  1243  00FA15  0010               	dw	16
  1244  00FA17  000E               	dw	14
  1245  00FA19  0010               	dw	16
  1246  00FA1B  0002               	dw	2
  1247  00FA1D  0010               	dw	16
  1248  00FA1F  0000               	dw	0
  1249  00FA21  0000               	dw	0
  1250  00FA23  0006               	dw	6
  1251  00FA25  0000               	dw	0
  1252  00FA27  0000               	dw	0
  1253  00FA29  0000               	dw	0
  1254  00FA2B  0000               	dw	0
  1255  00FA2D  00FE               	dw	254
  1256  00FA2F  00FF               	dw	255
  1257  00FA31  0002               	dw	2
  1258  00FA33  0080               	dw	128
  1259  00FA35  0002               	dw	2
  1260  00FA37  0080               	dw	128
  1261  00FA39  0000               	dw	0
  1262  00FA3B  0000               	dw	0
  1263  00FA3D  000A               	dw	10
  1264  00FA3F  0002               	dw	2
  1265  00FA41  0000               	dw	0
  1266  00FA43  000C               	dw	12
  1267  00FA45  0000               	dw	0
  1268  00FA47  0010               	dw	16
  1269  00FA49  0000               	dw	0
  1270  00FA4B  0060               	dw	96
  1271  00FA4D  0000               	dw	0
  1272  00FA4F  0080               	dw	128
  1273  00FA51  0001               	dw	1
  1274  00FA53  0000               	dw	0
  1275  00FA55  0006               	dw	6
  1276  00FA57  0000               	dw	0
  1277  00FA59  0008               	dw	8
  1278  00FA5B  0000               	dw	0
  1279  00FA5D  0030               	dw	48
  1280  00FA5F  0000               	dw	0
  1281  00FA61  0040               	dw	64
  1282  00FA63  0000               	dw	0
  1283  00FA65  0000               	dw	0
  1284  00FA67  0005               	dw	5
  1285  00FA69  0000               	dw	0
  1286  00FA6B  0000               	dw	0
  1287  00FA6D  0002               	dw	2
  1288  00FA6F  0080               	dw	128
  1289  00FA71  0002               	dw	2
  1290  00FA73  0080               	dw	128
  1291  00FA75  00FE               	dw	254
  1292  00FA77  00FF               	dw	255
  1293  00FA79  0000               	dw	0
  1294  00FA7B  0000               	dw	0
  1295  00FA7D  000B               	dw	11
  1296  00FA7F  0000               	dw	0
  1297  00FA81  0000               	dw	0
  1298  00FA83  0000               	dw	0
  1299  00FA85  0002               	dw	2
  1300  00FA87  0080               	dw	128
  1301  00FA89  0001               	dw	1
  1302  00FA8B  0070               	dw	112
  1303  00FA8D  0000               	dw	0
  1304  00FA8F  000C               	dw	12
  1305  00FA91  0000               	dw	0
  1306  00FA93  0002               	dw	2
  1307  00FA95  0000               	dw	0
  1308  00FA97  000C               	dw	12
  1309  00FA99  0000               	dw	0
  1310  00FA9B  0070               	dw	112
  1311  00FA9D  0000               	dw	0
  1312  00FA9F  0080               	dw	128
  1313  00FAA1  0001               	dw	1
  1314  00FAA3  0000               	dw	0
  1315  00FAA5  0002               	dw	2
  1316  00FAA7  0000               	dw	0
  1317  00FAA9  0000               	dw	0
  1318  00FAAB  0009               	dw	9
  1319  00FAAD  0000               	dw	0
  1320  00FAAF  0040               	dw	64
  1321  00FAB1  0000               	dw	0
  1322  00FAB3  0040               	dw	64
  1323  00FAB5  0000               	dw	0
  1324  00FAB7  0040               	dw	64
  1325  00FAB9  0000               	dw	0
  1326  00FABB  0040               	dw	64
  1327  00FABD  0000               	dw	0
  1328  00FABF  0040               	dw	64
  1329  00FAC1  0000               	dw	0
  1330  00FAC3  0040               	dw	64
  1331  00FAC5  0000               	dw	0
  1332  00FAC7  0040               	dw	64
  1333  00FAC9  0000               	dw	0
  1334  00FACB  0040               	dw	64
  1335  00FACD  0000               	dw	0
  1336  00FACF  0000               	dw	0
  1337  00FAD1  0005               	dw	5
  1338  00FAD3  0000               	dw	0
  1339  00FAD5  0000               	dw	0
  1340  00FAD7  0000               	dw	0
  1341  00FAD9  0000               	dw	0
  1342  00FADB  0002               	dw	2
  1343  00FADD  0000               	dw	0
  1344  00FADF  0004               	dw	4
  1345  00FAE1  0000               	dw	0
  1346  00FAE3  0000               	dw	0
  1347  00FAE5  0000               	dw	0
  1348  00FAE7  000B               	dw	11
  1349  00FAE9  0000               	dw	0
  1350  00FAEB  0000               	dw	0
  1351  00FAED  00C0               	dw	192
  1352  00FAEF  0007               	dw	7
  1353  00FAF1  0020               	dw	32
  1354  00FAF3  0008               	dw	8
  1355  00FAF5  0010               	dw	16
  1356  00FAF7  0010               	dw	16
  1357  00FAF9  0010               	dw	16
  1358  00FAFB  0010               	dw	16
  1359  00FAFD  0010               	dw	16
  1360  00FAFF  0010               	dw	16
  1361  00FB01  0010               	dw	16
  1362  00FB03  0010               	dw	16
  1363  00FB05  0010               	dw	16
  1364  00FB07  0010               	dw	16
  1365  00FB09  0020               	dw	32
  1366  00FB0B  0008               	dw	8
  1367  00FB0D  00F0               	dw	240
  1368  00FB0F  001F               	dw	31
  1369  00FB11  0000               	dw	0
  1370  00FB13  0000               	dw	0
  1371  00FB15  000B               	dw	11
  1372  00FB17  0000               	dw	0
  1373  00FB19  0000               	dw	0
  1374  00FB1B  00FE               	dw	254
  1375  00FB1D  001F               	dw	31
  1376  00FB1F  0020               	dw	32
  1377  00FB21  0008               	dw	8
  1378  00FB23  0010               	dw	16
  1379  00FB25  0010               	dw	16
  1380  00FB27  0010               	dw	16
  1381  00FB29  0010               	dw	16
  1382  00FB2B  0010               	dw	16
  1383  00FB2D  0010               	dw	16
  1384  00FB2F  0010               	dw	16
  1385  00FB31  0010               	dw	16
  1386  00FB33  0010               	dw	16
  1387  00FB35  0010               	dw	16
  1388  00FB37  0020               	dw	32
  1389  00FB39  0008               	dw	8
  1390  00FB3B  00C0               	dw	192
  1391  00FB3D  0007               	dw	7
  1392  00FB3F  0000               	dw	0
  1393  00FB41  0000               	dw	0
  1394  00FB43  000A               	dw	10
  1395  00FB45  0000               	dw	0
  1396  00FB47  0000               	dw	0
  1397  00FB49  00C0               	dw	192
  1398  00FB4B  0007               	dw	7
  1399  00FB4D  0020               	dw	32
  1400  00FB4F  0008               	dw	8
  1401  00FB51  0010               	dw	16
  1402  00FB53  0010               	dw	16
  1403  00FB55  0010               	dw	16
  1404  00FB57  0010               	dw	16
  1405  00FB59  0010               	dw	16
  1406  00FB5B  0010               	dw	16
  1407  00FB5D  0010               	dw	16
  1408  00FB5F  0010               	dw	16
  1409  00FB61  0020               	dw	32
  1410  00FB63  0008               	dw	8
  1411  00FB65  0040               	dw	64
  1412  00FB67  0004               	dw	4
  1413  00FB69  0000               	dw	0
  1414  00FB6B  0000               	dw	0
  1415  00FB6D  000B               	dw	11
  1416  00FB6F  0000               	dw	0
  1417  00FB71  0000               	dw	0
  1418  00FB73  00C0               	dw	192
  1419  00FB75  0007               	dw	7
  1420  00FB77  0020               	dw	32
  1421  00FB79  0008               	dw	8
  1422  00FB7B  0010               	dw	16
  1423  00FB7D  0010               	dw	16
  1424  00FB7F  0010               	dw	16
  1425  00FB81  0010               	dw	16
  1426  00FB83  0010               	dw	16
  1427  00FB85  0010               	dw	16
  1428  00FB87  0010               	dw	16
  1429  00FB89  0010               	dw	16
  1430  00FB8B  0010               	dw	16
  1431  00FB8D  0010               	dw	16
  1432  00FB8F  0020               	dw	32
  1433  00FB91  0008               	dw	8
  1434  00FB93  00FE               	dw	254
  1435  00FB95  001F               	dw	31
  1436  00FB97  0000               	dw	0
  1437  00FB99  0000               	dw	0
  1438  00FB9B  000A               	dw	10
  1439  00FB9D  0000               	dw	0
  1440  00FB9F  0000               	dw	0
  1441  00FBA1  00C0               	dw	192
  1442  00FBA3  0007               	dw	7
  1443  00FBA5  0020               	dw	32
  1444  00FBA7  0009               	dw	9
  1445  00FBA9  0010               	dw	16
  1446  00FBAB  0011               	dw	17
  1447  00FBAD  0010               	dw	16
  1448  00FBAF  0011               	dw	17
  1449  00FBB1  0010               	dw	16
  1450  00FBB3  0011               	dw	17
  1451  00FBB5  0010               	dw	16
  1452  00FBB7  0011               	dw	17
  1453  00FBB9  0020               	dw	32
  1454  00FBBB  0009               	dw	9
  1455  00FBBD  00C0               	dw	192
  1456  00FBBF  0005               	dw	5
  1457  00FBC1  0000               	dw	0
  1458  00FBC3  0000               	dw	0
  1459  00FBC5  0006               	dw	6
  1460  00FBC7  0000               	dw	0
  1461  00FBC9  0000               	dw	0
  1462  00FBCB  0010               	dw	16
  1463  00FBCD  0000               	dw	0
  1464  00FBCF  00FC               	dw	252
  1465  00FBD1  001F               	dw	31
  1466  00FBD3  0012               	dw	18
  1467  00FBD5  0000               	dw	0
  1468  00FBD7  0012               	dw	18
  1469  00FBD9  0000               	dw	0
  1470  00FBDB  0000               	dw	0
  1471  00FBDD  0000               	dw	0
  1472  00FBDF  000B               	dw	11
  1473  00FBE1  0000               	dw	0
  1474  00FBE3  0000               	dw	0
  1475  00FBE5  00C0               	dw	192
  1476  00FBE7  0027               	dw	39
  1477  00FBE9  0020               	dw	32
  1478  00FBEB  0048               	dw	72
  1479  00FBED  0010               	dw	16
  1480  00FBEF  0090               	dw	144
  1481  00FBF1  0010               	dw	16
  1482  00FBF3  0090               	dw	144
  1483  00FBF5  0010               	dw	16
  1484  00FBF7  0090               	dw	144
  1485  00FBF9  0010               	dw	16
  1486  00FBFB  0090               	dw	144
  1487  00FBFD  0010               	dw	16
  1488  00FBFF  0090               	dw	144
  1489  00FC01  0020               	dw	32
  1490  00FC03  0048               	dw	72
  1491  00FC05  00F0               	dw	240
  1492  00FC07  003F               	dw	63
  1493  00FC09  0000               	dw	0
  1494  00FC0B  0000               	dw	0
  1495  00FC0D  000A               	dw	10
  1496  00FC0F  0000               	dw	0
  1497  00FC11  0000               	dw	0
  1498  00FC13  00FE               	dw	254
  1499  00FC15  001F               	dw	31
  1500  00FC17  0020               	dw	32
  1501  00FC19  0000               	dw	0
  1502  00FC1B  0010               	dw	16
  1503  00FC1D  0000               	dw	0
  1504  00FC1F  0010               	dw	16
  1505  00FC21  0000               	dw	0
  1506  00FC23  0010               	dw	16
  1507  00FC25  0000               	dw	0
  1508  00FC27  0010               	dw	16
  1509  00FC29  0000               	dw	0
  1510  00FC2B  0020               	dw	32
  1511  00FC2D  0000               	dw	0
  1512  00FC2F  00C0               	dw	192
  1513  00FC31  001F               	dw	31
  1514  00FC33  0000               	dw	0
  1515  00FC35  0000               	dw	0
  1516  00FC37  0003               	dw	3
  1517  00FC39  0000               	dw	0
  1518  00FC3B  0000               	dw	0
  1519  00FC3D  00F6               	dw	246
  1520  00FC3F  001F               	dw	31
  1521  00FC41  0000               	dw	0
  1522  00FC43  0000               	dw	0
  1523  00FC45  0003               	dw	3
  1524  00FC47  0000               	dw	0
  1525  00FC49  0080               	dw	128
  1526  00FC4B  00F6               	dw	246
  1527  00FC4D  007F               	dw	127
  1528  00FC4F  0000               	dw	0
  1529  00FC51  0000               	dw	0
  1530  00FC53  0008               	dw	8
  1531  00FC55  0000               	dw	0
  1532  00FC57  0000               	dw	0
  1533  00FC59  00FE               	dw	254
  1534  00FC5B  001F               	dw	31
  1535  00FC5D  0000               	dw	0
  1536  00FC5F  0001               	dw	1
  1537  00FC61  0080               	dw	128
  1538  00FC63  0002               	dw	2
  1539  00FC65  0040               	dw	64
  1540  00FC67  0004               	dw	4
  1541  00FC69  0020               	dw	32
  1542  00FC6B  0008               	dw	8
  1543  00FC6D  0010               	dw	16
  1544  00FC6F  0010               	dw	16
  1545  00FC71  0000               	dw	0
  1546  00FC73  0000               	dw	0
  1547  00FC75  0003               	dw	3
  1548  00FC77  0000               	dw	0
  1549  00FC79  0000               	dw	0
  1550  00FC7B  00FE               	dw	254
  1551  00FC7D  001F               	dw	31
  1552  00FC7F  0000               	dw	0
  1553  00FC81  0000               	dw	0
  1554  00FC83  000F               	dw	15
  1555  00FC85  0000               	dw	0
  1556  00FC87  0000               	dw	0
  1557  00FC89  00F0               	dw	240
  1558  00FC8B  001F               	dw	31
  1559  00FC8D  0020               	dw	32
  1560  00FC8F  0000               	dw	0
  1561  00FC91  0010               	dw	16
  1562  00FC93  0000               	dw	0
  1563  00FC95  0010               	dw	16
  1564  00FC97  0000               	dw	0
  1565  00FC99  0010               	dw	16
  1566  00FC9B  0000               	dw	0
  1567  00FC9D  0020               	dw	32
  1568  00FC9F  0000               	dw	0
  1569  00FCA1  00C0               	dw	192
  1570  00FCA3  001F               	dw	31
  1571  00FCA5  0020               	dw	32
  1572  00FCA7  0000               	dw	0
  1573  00FCA9  0010               	dw	16
  1574  00FCAB  0000               	dw	0
  1575  00FCAD  0010               	dw	16
  1576  00FCAF  0000               	dw	0
  1577  00FCB1  0010               	dw	16
  1578  00FCB3  0000               	dw	0
  1579  00FCB5  0020               	dw	32
  1580  00FCB7  0000               	dw	0
  1581  00FCB9  00C0               	dw	192
  1582  00FCBB  001F               	dw	31
  1583  00FCBD  0000               	dw	0
  1584  00FCBF  0000               	dw	0
  1585  00FCC1  000A               	dw	10
  1586  00FCC3  0000               	dw	0
  1587  00FCC5  0000               	dw	0
  1588  00FCC7  00F0               	dw	240
  1589  00FCC9  001F               	dw	31
  1590  00FCCB  0020               	dw	32
  1591  00FCCD  0000               	dw	0
  1592  00FCCF  0010               	dw	16
  1593  00FCD1  0000               	dw	0
  1594  00FCD3  0010               	dw	16
  1595  00FCD5  0000               	dw	0
  1596  00FCD7  0010               	dw	16
  1597  00FCD9  0000               	dw	0
  1598  00FCDB  0010               	dw	16
  1599  00FCDD  0000               	dw	0
  1600  00FCDF  0020               	dw	32
  1601  00FCE1  0000               	dw	0
  1602  00FCE3  00C0               	dw	192
  1603  00FCE5  001F               	dw	31
  1604  00FCE7  0000               	dw	0
  1605  00FCE9  0000               	dw	0
  1606  00FCEB  000A               	dw	10
  1607  00FCED  0000               	dw	0
  1608  00FCEF  0000               	dw	0
  1609  00FCF1  00C0               	dw	192
  1610  00FCF3  0007               	dw	7
  1611  00FCF5  0020               	dw	32
  1612  00FCF7  0008               	dw	8
  1613  00FCF9  0010               	dw	16
  1614  00FCFB  0010               	dw	16
  1615  00FCFD  0010               	dw	16
  1616  00FCFF  0010               	dw	16
  1617  00FD01  0010               	dw	16
  1618  00FD03  0010               	dw	16
  1619  00FD05  0010               	dw	16
  1620  00FD07  0010               	dw	16
  1621  00FD09  0020               	dw	32
  1622  00FD0B  0008               	dw	8
  1623  00FD0D  00C0               	dw	192
  1624  00FD0F  0007               	dw	7
  1625  00FD11  0000               	dw	0
  1626  00FD13  0000               	dw	0
  1627  00FD15  000B               	dw	11
  1628  00FD17  0000               	dw	0
  1629  00FD19  0000               	dw	0
  1630  00FD1B  00F0               	dw	240
  1631  00FD1D  00FF               	dw	255
  1632  00FD1F  0020               	dw	32
  1633  00FD21  0008               	dw	8
  1634  00FD23  0010               	dw	16
  1635  00FD25  0010               	dw	16
  1636  00FD27  0010               	dw	16
  1637  00FD29  0010               	dw	16
  1638  00FD2B  0010               	dw	16
  1639  00FD2D  0010               	dw	16
  1640  00FD2F  0010               	dw	16
  1641  00FD31  0010               	dw	16
  1642  00FD33  0010               	dw	16
  1643  00FD35  0010               	dw	16
  1644  00FD37  0020               	dw	32
  1645  00FD39  0008               	dw	8
  1646  00FD3B  00C0               	dw	192
  1647  00FD3D  0007               	dw	7
  1648  00FD3F  0000               	dw	0
  1649  00FD41  0000               	dw	0
  1650  00FD43  000B               	dw	11
  1651  00FD45  0000               	dw	0
  1652  00FD47  0000               	dw	0
  1653  00FD49  00C0               	dw	192
  1654  00FD4B  0007               	dw	7
  1655  00FD4D  0020               	dw	32
  1656  00FD4F  0008               	dw	8
  1657  00FD51  0010               	dw	16
  1658  00FD53  0010               	dw	16
  1659  00FD55  0010               	dw	16
  1660  00FD57  0010               	dw	16
  1661  00FD59  0010               	dw	16
  1662  00FD5B  0010               	dw	16
  1663  00FD5D  0010               	dw	16
  1664  00FD5F  0010               	dw	16
  1665  00FD61  0010               	dw	16
  1666  00FD63  0010               	dw	16
  1667  00FD65  0020               	dw	32
  1668  00FD67  0008               	dw	8
  1669  00FD69  00F0               	dw	240
  1670  00FD6B  00FF               	dw	255
  1671  00FD6D  0000               	dw	0
  1672  00FD6F  0000               	dw	0
  1673  00FD71  0006               	dw	6
  1674  00FD73  0000               	dw	0
  1675  00FD75  0000               	dw	0
  1676  00FD77  00F0               	dw	240
  1677  00FD79  001F               	dw	31
  1678  00FD7B  0020               	dw	32
  1679  00FD7D  0000               	dw	0
  1680  00FD7F  0010               	dw	16
  1681  00FD81  0000               	dw	0
  1682  00FD83  0010               	dw	16
  1683  00FD85  0000               	dw	0
  1684  00FD87  0000               	dw	0
  1685  00FD89  0000               	dw	0
  1686  00FD8B  0006               	dw	6
  1687  00FD8D  0060               	dw	96
  1688  00FD8F  0008               	dw	8
  1689  00FD91  0090               	dw	144
  1690  00FD93  0010               	dw	16
  1691  00FD95  0010               	dw	16
  1692  00FD97  0011               	dw	17
  1693  00FD99  0010               	dw	16
  1694  00FD9B  0011               	dw	17
  1695  00FD9D  0020               	dw	32
  1696  00FD9F  000E               	dw	14
  1697  00FDA1  0000               	dw	0
  1698  00FDA3  0000               	dw	0
  1699  00FDA5  0007               	dw	7
  1700  00FDA7  0000               	dw	0
  1701  00FDA9  0000               	dw	0
  1702  00FDAB  0010               	dw	16
  1703  00FDAD  0000               	dw	0
  1704  00FDAF  0010               	dw	16
  1705  00FDB1  0000               	dw	0
  1706  00FDB3  00FE               	dw	254
  1707  00FDB5  001F               	dw	31
  1708  00FDB7  0010               	dw	16
  1709  00FDB9  0000               	dw	0
  1710  00FDBB  0010               	dw	16
  1711  00FDBD  0000               	dw	0
  1712  00FDBF  0000               	dw	0
  1713  00FDC1  0000               	dw	0
  1714  00FDC3  000A               	dw	10
  1715  00FDC5  0000               	dw	0
  1716  00FDC7  0000               	dw	0
  1717  00FDC9  00F0               	dw	240
  1718  00FDCB  0007               	dw	7
  1719  00FDCD  0000               	dw	0
  1720  00FDCF  0008               	dw	8
  1721  00FDD1  0000               	dw	0
  1722  00FDD3  0010               	dw	16
  1723  00FDD5  0000               	dw	0
  1724  00FDD7  0010               	dw	16
  1725  00FDD9  0000               	dw	0
  1726  00FDDB  0010               	dw	16
  1727  00FDDD  0000               	dw	0
  1728  00FDDF  0010               	dw	16
  1729  00FDE1  0000               	dw	0
  1730  00FDE3  0008               	dw	8
  1731  00FDE5  00F0               	dw	240
  1732  00FDE7  0007               	dw	7
  1733  00FDE9  0000               	dw	0
  1734  00FDEB  0000               	dw	0
  1735  00FDED  000A               	dw	10
  1736  00FDEF  0010               	dw	16
  1737  00FDF1  0000               	dw	0
  1738  00FDF3  0060               	dw	96
  1739  00FDF5  0000               	dw	0
  1740  00FDF7  0080               	dw	128
  1741  00FDF9  0003               	dw	3
  1742  00FDFB  0000               	dw	0
  1743  00FDFD  000C               	dw	12
  1744  00FDFF  0000               	dw	0
  1745  00FE01  0010               	dw	16
  1746  00FE03  0000               	dw	0
  1747  00FE05  000C               	dw	12
  1748  00FE07  0080               	dw	128
  1749  00FE09  0003               	dw	3
  1750  00FE0B  0060               	dw	96
  1751  00FE0D  0000               	dw	0
  1752  00FE0F  0010               	dw	16
  1753  00FE11  0000               	dw	0
  1754  00FE13  0000               	dw	0
  1755  00FE15  0000               	dw	0
  1756  00FE17  000E               	dw	14
  1757  00FE19  0010               	dw	16
  1758  00FE1B  0000               	dw	0
  1759  00FE1D  00E0               	dw	224
  1760  00FE1F  0000               	dw	0
  1761  00FE21  0000               	dw	0
  1762  00FE23  0007               	dw	7
  1763  00FE25  0000               	dw	0
  1764  00FE27  0018               	dw	24
  1765  00FE29  0000               	dw	0
  1766  00FE2B  0007               	dw	7
  1767  00FE2D  00E0               	dw	224
  1768  00FE2F  0000               	dw	0
  1769  00FE31  0010               	dw	16
  1770  00FE33  0000               	dw	0
  1771  00FE35  00E0               	dw	224
  1772  00FE37  0000               	dw	0
  1773  00FE39  0000               	dw	0
  1774  00FE3B  0007               	dw	7
  1775  00FE3D  0000               	dw	0
  1776  00FE3F  0018               	dw	24
  1777  00FE41  0000               	dw	0
  1778  00FE43  0007               	dw	7
  1779  00FE45  00E0               	dw	224
  1780  00FE47  0000               	dw	0
  1781  00FE49  0010               	dw	16
  1782  00FE4B  0000               	dw	0
  1783  00FE4D  0000               	dw	0
  1784  00FE4F  0000               	dw	0
  1785  00FE51  0009               	dw	9
  1786  00FE53  0010               	dw	16
  1787  00FE55  0010               	dw	16
  1788  00FE57  0020               	dw	32
  1789  00FE59  0008               	dw	8
  1790  00FE5B  0040               	dw	64
  1791  00FE5D  0004               	dw	4
  1792  00FE5F  0080               	dw	128
  1793  00FE61  0003               	dw	3
  1794  00FE63  0080               	dw	128
  1795  00FE65  0003               	dw	3
  1796  00FE67  0040               	dw	64
  1797  00FE69  0004               	dw	4
  1798  00FE6B  0020               	dw	32
  1799  00FE6D  0008               	dw	8
  1800  00FE6F  0010               	dw	16
  1801  00FE71  0010               	dw	16
  1802  00FE73  0000               	dw	0
  1803  00FE75  0000               	dw	0
  1804  00FE77  0009               	dw	9
  1805  00FE79  0010               	dw	16
  1806  00FE7B  0000               	dw	0
  1807  00FE7D  00E0               	dw	224
  1808  00FE7F  0000               	dw	0
  1809  00FE81  0000               	dw	0
  1810  00FE83  0083               	dw	131
  1811  00FE85  0000               	dw	0
  1812  00FE87  007C               	dw	124
  1813  00FE89  0000               	dw	0
  1814  00FE8B  000C               	dw	12
  1815  00FE8D  0000               	dw	0
  1816  00FE8F  0003               	dw	3
  1817  00FE91  00E0               	dw	224
  1818  00FE93  0000               	dw	0
  1819  00FE95  0010               	dw	16
  1820  00FE97  0000               	dw	0
  1821  00FE99  0000               	dw	0
  1822  00FE9B  0000               	dw	0
  1823  00FE9D  0008               	dw	8
  1824  00FE9F  0010               	dw	16
  1825  00FEA1  0010               	dw	16
  1826  00FEA3  0010               	dw	16
  1827  00FEA5  0018               	dw	24
  1828  00FEA7  0010               	dw	16
  1829  00FEA9  0016               	dw	22
  1830  00FEAB  0010               	dw	16
  1831  00FEAD  0011               	dw	17
  1832  00FEAF  00D0               	dw	208
  1833  00FEB1  0010               	dw	16
  1834  00FEB3  0030               	dw	48
  1835  00FEB5  0010               	dw	16
  1836  00FEB7  0010               	dw	16
  1837  00FEB9  0010               	dw	16
  1838  00FEBB  0000               	dw	0
  1839  00FEBD  0000               	dw	0
  1840  00FEBF  0007               	dw	7
  1841  00FEC1  0000               	dw	0
  1842  00FEC3  0000               	dw	0
  1843  00FEC5  0000               	dw	0
  1844  00FEC7  0001               	dw	1
  1845  00FEC9  0080               	dw	128
  1846  00FECB  0002               	dw	2
  1847  00FECD  00FC               	dw	252
  1848  00FECF  007E               	dw	126
  1849  00FED1  0002               	dw	2
  1850  00FED3  0080               	dw	128
  1851  00FED5  0002               	dw	2
  1852  00FED7  0080               	dw	128
  1853  00FED9  0000               	dw	0
  1854  00FEDB  0000               	dw	0
  1855  00FEDD  0007               	dw	7
  1856  00FEDF  0000               	dw	0
  1857  00FEE1  0000               	dw	0
  1858  00FEE3  0000               	dw	0
  1859  00FEE5  0000               	dw	0
  1860  00FEE7  0000               	dw	0
  1861  00FEE9  0000               	dw	0
  1862  00FEEB  0000               	dw	0
  1863  00FEED  0000               	dw	0
  1864  00FEEF  0000               	dw	0
  1865  00FEF1  0000               	dw	0
  1866  00FEF3  00FE               	dw	254
  1867  00FEF5  00FF               	dw	255
  1868  00FEF7  0000               	dw	0
  1869  00FEF9  0000               	dw	0
  1870  00FEFB  0006               	dw	6
  1871  00FEFD  0002               	dw	2
  1872  00FEFF  0080               	dw	128
  1873  00FF01  0002               	dw	2
  1874  00FF03  0080               	dw	128
  1875  00FF05  00FC               	dw	252
  1876  00FF07  007E               	dw	126
  1877  00FF09  0080               	dw	128
  1878  00FF0B  0002               	dw	2
  1879  00FF0D  0000               	dw	0
  1880  00FF0F  0001               	dw	1
  1881  00FF11  0000               	dw	0
  1882  00FF13  0000               	dw	0
  1883  00FF15  000A               	dw	10
  1884  00FF17  0000               	dw	0
  1885  00FF19  0000               	dw	0
  1886  00FF1B  0080               	dw	128
  1887  00FF1D  0000               	dw	0
  1888  00FF1F  0040               	dw	64
  1889  00FF21  0000               	dw	0
  1890  00FF23  0040               	dw	64
  1891  00FF25  0000               	dw	0
  1892  00FF27  0040               	dw	64
  1893  00FF29  0000               	dw	0
  1894  00FF2B  0080               	dw	128
  1895  00FF2D  0000               	dw	0
  1896  00FF2F  0080               	dw	128
  1897  00FF31  0000               	dw	0
  1898  00FF33  0080               	dw	128
  1899  00FF35  0000               	dw	0
  1900  00FF37  0040               	dw	64
  1901  00FF39  0000               	dw	0
  1902  00FF3B  0000               	dw	0
  1903  00FF3D  0000               	dw	0
  1904  00FF3F  0005               	dw	5
  1905  00FF41  00FF               	dw	255
  1906  00FF43  000F               	dw	15
  1907  00FF45  0001               	dw	1
  1908  00FF47  0008               	dw	8
  1909  00FF49  0001               	dw	1
  1910  00FF4B  0008               	dw	8
  1911  00FF4D  00FF               	dw	255
  1912  00FF4F  000F               	dw	15
  1913  00FF51  0000               	dw	0
  1914  00FF53  0000               	dw	0
  1915  00FF55                     __end_of_font:
  1916                           	opt callstack 0
  1917  00FF55                     _spi_configuration:
  1918                           	opt callstack 0
  1919  00FF55  00                 	db	0
  1920  00FF56  40                 	db	64
  1921  00FF57  01                 	db	1
  1922  00FF58  00                 	db	0
  1923  00FF59                     __end_of_spi_configuration:
  1924                           	opt callstack 0
  1925  00FF59                     STR_4:
  1926  00FF59  4E                 	db	78	;'N'
  1927  00FF5A  54                 	db	84	;'T'
  1928  00FF5B  43                 	db	67	;'C'
  1929  00FF5C  3D                 	db	61	;'='
  1930  00FF5D  25                 	db	37
  1931  00FF5E  2E                 	db	46
  1932  00FF5F  66                 	db	102	;'f'
  1933  00FF60  20                 	db	32
  1934  00FF61  43                 	db	67	;'C'
  1935  00FF62  20                 	db	32
  1936  00FF63  20                 	db	32
  1937  00FF64  20                 	db	32
  1938  00FF65  20                 	db	32
  1939  00FF66  20                 	db	32
  1940  00FF67  20                 	db	32
  1941  00FF68  20                 	db	32
  1942  00FF69  20                 	db	32
  1943  00FF6A  20                 	db	32
  1944  00FF6B  20                 	db	32
  1945  00FF6C  20                 	db	32
  1946  00FF6D  20                 	db	32
  1947  00FF6E  00                 	db	0
  1948  00FF6F                     STR_2:
  1949  00FF6F  54                 	db	84	;'T'
  1950  00FF70  65                 	db	101	;'e'
  1951  00FF71  6D                 	db	109	;'m'
  1952  00FF72  70                 	db	112	;'p'
  1953  00FF73  3D                 	db	61	;'='
  1954  00FF74  25                 	db	37
  1955  00FF75  2E                 	db	46
  1956  00FF76  66                 	db	102	;'f'
  1957  00FF77  20                 	db	32
  1958  00FF78  43                 	db	67	;'C'
  1959  00FF79  20                 	db	32
  1960  00FF7A  20                 	db	32
  1961  00FF7B  20                 	db	32
  1962  00FF7C  20                 	db	32
  1963  00FF7D  20                 	db	32
  1964  00FF7E  20                 	db	32
  1965  00FF7F  00                 	db	0
  1966  00FF80                     STR_3:
  1967  00FF80  50                 	db	80	;'P'
  1968  00FF81  6F                 	db	111	;'o'
  1969  00FF82  74                 	db	116	;'t'
  1970  00FF83  3D                 	db	61	;'='
  1971  00FF84  25                 	db	37
  1972  00FF85  2E                 	db	46
  1973  00FF86  66                 	db	102	;'f'
  1974  00FF87  25                 	db	37
  1975  00FF88  25                 	db	37
  1976  00FF89  20                 	db	32
  1977  00FF8A  20                 	db	32
  1978  00FF8B  20                 	db	32
  1979  00FF8C  20                 	db	32
  1980  00FF8D  20                 	db	32
  1981  00FF8E  20                 	db	32
  1982  00FF8F  00                 	db	0
  1983  00FF90                     STR_5:
  1984  00FF90  30                 	db	48	;'0'
  1985  00FF91  46                 	db	70	;'F'
  1986  00FF92  46                 	db	70	;'F'
  1987  00FF93  20                 	db	32
  1988  00FF94  20                 	db	32
  1989  00FF95  20                 	db	32
  1990  00FF96  20                 	db	32
  1991  00FF97  20                 	db	32
  1992  00FF98  20                 	db	32
  1993  00FF99  20                 	db	32
  1994  00FF9A  20                 	db	32
  1995  00FF9B  20                 	db	32
  1996  00FF9C  20                 	db	32
  1997  00FF9D  20                 	db	32
  1998  00FF9E  00                 	db	0
  1999  00FF9F                     STR_6:
  2000  00FF9F  31                 	db	49	;'1'
  2001  00FFA0  46                 	db	70	;'F'
  2002  00FFA1  46                 	db	70	;'F'
  2003  00FFA2  20                 	db	32
  2004  00FFA3  20                 	db	32
  2005  00FFA4  20                 	db	32
  2006  00FFA5  20                 	db	32
  2007  00FFA6  20                 	db	32
  2008  00FFA7  20                 	db	32
  2009  00FFA8  20                 	db	32
  2010  00FFA9  20                 	db	32
  2011  00FFAA  20                 	db	32
  2012  00FFAB  20                 	db	32
  2013  00FFAC  20                 	db	32
  2014  00FFAD  00                 	db	0
  2015  00FFAE                     STR_1:
  2016  00FFAE  48                 	db	72	;'H'
  2017  00FFAF  45                 	db	69	;'E'
  2018  00FFB0  4C                 	db	76	;'L'
  2019  00FFB1  4C                 	db	76	;'L'
  2020  00FFB2  4F                 	db	79	;'O'
  2021  00FFB3  20                 	db	32
  2022  00FFB4  57                 	db	87	;'W'
  2023  00FFB5  4F                 	db	79	;'O'
  2024  00FFB6  52                 	db	82	;'R'
  2025  00FFB7  4C                 	db	76	;'L'
  2026  00FFB8  44                 	db	68	;'D'
  2027  00FFB9  00                 	db	0
  2028  00FFBA                     STR_7:
  2029  00FFBA  49                 	db	73	;'I'
  2030  00FFBB  4E                 	db	78	;'N'
  2031  00FFBC  46                 	db	70	;'F'
  2032  00FFBD  00                 	db	0
  2033  00FFBE                     STR_11:
  2034  00FFBE  4E                 	db	78	;'N'
  2035  00FFBF  41                 	db	65	;'A'
  2036  00FFC0  4E                 	db	78	;'N'
  2037  00FFC1  00                 	db	0
  2038  00FFC2                     STR_96:
  2039  00FFC2  68                 	db	104	;'h'
  2040  00FFC3  68                 	db	104	;'h'
  2041  00FFC4  58                 	db	88	;'X'
  2042  00FFC5  00                 	db	0
  2043  00FFC6                     STR_15:
  2044  00FFC6  68                 	db	104	;'h'
  2045  00FFC7  68                 	db	104	;'h'
  2046  00FFC8  64                 	db	100	;'d'
  2047  00FFC9  00                 	db	0
  2048  00FFCA                     STR_8:
  2049  00FFCA  69                 	db	105	;'i'
  2050  00FFCB  6E                 	db	110	;'n'
  2051  00FFCC  66                 	db	102	;'f'
  2052  00FFCD  00                 	db	0
  2053  00FFCE                     STR_19:
  2054  00FFCE  68                 	db	104	;'h'
  2055  00FFCF  68                 	db	104	;'h'
  2056  00FFD0  69                 	db	105	;'i'
  2057  00FFD1  00                 	db	0
  2058  00FFD2                     STR_12:
  2059  00FFD2  6E                 	db	110	;'n'
  2060  00FFD3  61                 	db	97	;'a'
  2061  00FFD4  6E                 	db	110	;'n'
  2062  00FFD5  00                 	db	0
  2063  00FFD6                     STR_62:
  2064  00FFD6  68                 	db	104	;'h'
  2065  00FFD7  68                 	db	104	;'h'
  2066  00FFD8  6E                 	db	110	;'n'
  2067  00FFD9  00                 	db	0
  2068  00FFDA                     STR_47:
  2069  00FFDA  68                 	db	104	;'h'
  2070  00FFDB  68                 	db	104	;'h'
  2071  00FFDC  6F                 	db	111	;'o'
  2072  00FFDD  00                 	db	0
  2073  00FFDE                     STR_77:
  2074  00FFDE  68                 	db	104	;'h'
  2075  00FFDF  68                 	db	104	;'h'
  2076  00FFE0  75                 	db	117	;'u'
  2077  00FFE1  00                 	db	0
  2078  00FFE2                     STR_92:
  2079  00FFE2  68                 	db	104	;'h'
  2080  00FFE3  68                 	db	104	;'h'
  2081  00FFE4  78                 	db	120	;'x'
  2082  00FFE5  00                 	db	0
  2083  00FFE6                     STR_114:
  2084  00FFE6  7A                 	db	122	;'z'
  2085  00FFE7  58                 	db	88	;'X'
  2086  00FFE8  00                 	db	0
  2087  00FFE9                     STR_33:
  2088  00FFE9  7A                 	db	122	;'z'
  2089  00FFEA  64                 	db	100	;'d'
  2090  00FFEB  00                 	db	0
  2091  00FFEC                     STR_42:
  2092  00FFEC  6C                 	db	108	;'l'
  2093  00FFED  66                 	db	102	;'f'
  2094  00FFEE  00                 	db	0
  2095  00FFEF                     STR_37:
  2096  00FFEF  7A                 	db	122	;'z'
  2097  00FFF0  69                 	db	105	;'i'
  2098  00FFF1  00                 	db	0
  2099  00FFF2                     STR_72:
  2100  00FFF2  7A                 	db	122	;'z'
  2101  00FFF3  6E                 	db	110	;'n'
  2102  00FFF4  00                 	db	0
  2103  00FFF5                     STR_57:
  2104  00FFF5  7A                 	db	122	;'z'
  2105  00FFF6  6F                 	db	111	;'o'
  2106  00FFF7  00                 	db	0
  2107  00FFF8                     STR_87:
  2108  00FFF8  7A                 	db	122	;'z'
  2109  00FFF9  75                 	db	117	;'u'
  2110  00FFFA  00                 	db	0
  2111  00FFFB                     STR_110:
  2112  00FFFB  7A                 	db	122	;'z'
  2113  00FFFC  78                 	db	120	;'x'
  2114  00FFFD  00                 	db	0
  2115  0000                     
  2116                           ; #config settings
  2117  00FFFE  00                 	db	0	; dummy byte at the end
  2118  0000                     
  2119                           	psect	nvBANK1
  2120  0001FB                     __pnvBANK1:
  2121                           	opt callstack 0
  2122  0001FB                     _timer1ReloadVal:
  2123                           	opt callstack 0
  2124  0001FB                     	ds	2
  2125  0001FD                     _IOCB4_InterruptHandler:
  2126                           	opt callstack 0
  2127  0001FD                     	ds	2
  2128  0000                     _IOCBbits	set	3930
  2129  0000                     _WPUB	set	3931
  2130  0000                     _ANCON1	set	3932
  2131  0000                     _ANCON0	set	3933
  2132  0000                     _LATEbits	set	3981
  2133  0000                     _SSPSTATbits	set	4039
  2134  0000                     _LATAbits	set	3977
  2135  0000                     _PORTBbits	set	3969
  2136  0000                     _T1GCONbits	set	4010
  2137  0000                     _T1CONbits	set	4045
  2138  0000                     _T1CON	set	4045
  2139  0000                     _TMR1L	set	4046
  2140  0000                     _TMR1H	set	4047
  2141  0000                     _T1GCON	set	4010
  2142  0000                     _ADCON0bits	set	4034
  2143  0000                     _ADRESL	set	4035
  2144  0000                     _ADRESH	set	4036
  2145  0000                     _ADCON2	set	4032
  2146  0000                     _ADCON1	set	4033
  2147  0000                     _ADCON0	set	4034
  2148  0000                     _PIR1bits	set	3998
  2149  0000                     _SSPBUF	set	4041
  2150  0000                     _SSPCON2	set	4037
  2151  0000                     _SSPCON1bits	set	4038
  2152  0000                     _TRISCbits	set	3988
  2153  0000                     _SSPADD	set	4040
  2154  0000                     _SSPCON1	set	4038
  2155  0000                     _SSPSTAT	set	4039
  2156  0000                     _INTCON2bits	set	4081
  2157  0000                     _TRISD	set	3989
  2158  0000                     _TRISC	set	3988
  2159  0000                     _TRISB	set	3987
  2160  0000                     _TRISA	set	3986
  2161  0000                     _TRISE	set	3990
  2162  0000                     _LATC	set	3979
  2163  0000                     _LATB	set	3978
  2164  0000                     _LATA	set	3977
  2165  0000                     _LATD	set	3980
  2166  0000                     _LATE	set	3981
  2167  0000                     _INTCONbits	set	4082
  2168  0000                     _RCONbits	set	4048
  2169  0000                     _REFOCON	set	3994
  2170  0000                     _OSCTUNE	set	3995
  2171  0000                     _OSCCON2	set	4050
  2172  0000                     _OSCCON	set	4051
  2173                           
  2174                           	psect	cinit
  2175  0059DE                     __pcinit:
  2176                           	opt callstack 0
  2177  0059DE                     start_initialization:
  2178                           	opt callstack 0
  2179  0059DE                     __initialization:
  2180                           	opt callstack 0
  2181                           
  2182                           ; Initialize objects allocated to BANK1 (7 bytes)
  2183                           ; load TBLPTR registers with __pidataBANK1
  2184  0059DE  0E2A               	movlw	low __pidataBANK1
  2185  0059E0  6EF6               	movwf	tblptrl,c
  2186  0059E2  0E60               	movlw	high __pidataBANK1
  2187  0059E4  6EF7               	movwf	tblptrh,c
  2188  0059E6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2189  0059E8  6EF8               	movwf	tblptru,c
  2190  0059EA  EE01  F0F4         	lfsr	0,__pdataBANK1
  2191  0059EE  EE10 F007          	lfsr	1,7
  2192  0059F2                     copy_data0:
  2193  0059F2  0009               	tblrd		*+
  2194  0059F4  CFF5 FFEE          	movff	tablat,postinc0
  2195  0059F8  50E5               	movf	postdec1,w,c
  2196  0059FA  50E1               	movf	fsr1l,w,c
  2197  0059FC  E1FA               	bnz	copy_data0
  2198                           
  2199                           ; Clear objects allocated to BANK3 (200 bytes)
  2200  0059FE  EE03  F000         	lfsr	0,__pbssBANK3
  2201  005A02  0EC8               	movlw	200
  2202  005A04                     clear_0:
  2203  005A04  6AEE               	clrf	postinc0,c
  2204  005A06  06E8               	decf	wreg,f,c
  2205  005A08  E1FD               	bnz	clear_0
  2206                           
  2207                           ; Clear objects allocated to BANK2 (200 bytes)
  2208  005A0A  EE02  F000         	lfsr	0,__pbssBANK2
  2209  005A0E  0EC8               	movlw	200
  2210  005A10                     clear_1:
  2211  005A10  6AEE               	clrf	postinc0,c
  2212  005A12  06E8               	decf	wreg,f,c
  2213  005A14  E1FD               	bnz	clear_1
  2214                           
  2215                           ; Clear objects allocated to BANK1 (220 bytes)
  2216  005A16  EE01  F000         	lfsr	0,__pbssBANK1
  2217  005A1A  0EDC               	movlw	220
  2218  005A1C                     clear_2:
  2219  005A1C  6AEE               	clrf	postinc0,c
  2220  005A1E  06E8               	decf	wreg,f,c
  2221  005A20  E1FD               	bnz	clear_2
  2222                           
  2223                           ; Clear objects allocated to BANK0 (4 bytes)
  2224  005A22  0100               	movlb	0
  2225  005A24  6BFD               	clrf	(__pbssBANK0+3)& (0+255),b
  2226  005A26  6BFC               	clrf	(__pbssBANK0+2)& (0+255),b
  2227  005A28  6BFB               	clrf	(__pbssBANK0+1)& (0+255),b
  2228  005A2A  6BFA               	clrf	__pbssBANK0& (0+255),b
  2229                           
  2230                           ; Clear objects allocated to COMRAM (2 bytes)
  2231  005A2C  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2232  005A2E  6A5B               	clrf	__pbssCOMRAM& (0+255),c
  2233  005A30                     end_of_initialization:
  2234                           	opt callstack 0
  2235  005A30                     __end_of__initialization:
  2236                           	opt callstack 0
  2237  005A30  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2238  005A32  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2239  005A34  0100               	movlb	0
  2240  005A36  EF6D  F010         	goto	_main	;jump to C main() function
  2241                           
  2242                           	psect	bssCOMRAM
  2243  00005B                     __pbssCOMRAM:
  2244                           	opt callstack 0
  2245  00005B                     _prec:
  2246                           	opt callstack 0
  2247  00005B                     	ds	2
  2248                           
  2249                           	psect	bssBANK0
  2250  0000FA                     __pbssBANK0:
  2251                           	opt callstack 0
  2252  0000FA                     _width:
  2253                           	opt callstack 0
  2254  0000FA                     	ds	2
  2255  0000FC                     _flags:
  2256                           	opt callstack 0
  2257  0000FC                     	ds	2
  2258                           
  2259                           	psect	bssBANK1
  2260  000100                     __pbssBANK1:
  2261                           	opt callstack 0
  2262  000100                     floorf@F524:
  2263                           	opt callstack 0
  2264  000100                     	ds	4
  2265  000104                     ___fpclassifyf@F463:
  2266                           	opt callstack 0
  2267  000104                     	ds	4
  2268  000108                     _temp_ntc:
  2269                           	opt callstack 0
  2270  000108                     	ds	4
  2271  00010C                     _ntc_val:
  2272                           	opt callstack 0
  2273  00010C                     	ds	4
  2274  000110                     _pot_val:
  2275                           	opt callstack 0
  2276  000110                     	ds	4
  2277  000114                     _temp:
  2278                           	opt callstack 0
  2279  000114                     	ds	4
  2280  000118                     _errno:
  2281                           	opt callstack 0
  2282  000118                     	ds	2
  2283  00011A                     _nout:
  2284                           	opt callstack 0
  2285  00011A                     	ds	2
  2286  00011C                     _global_bg_color:
  2287                           	opt callstack 0
  2288  00011C                     	ds	2
  2289  00011E                     _botao:
  2290                           	opt callstack 0
  2291  00011E                     	ds	2
  2292  000120                     _codigo_digit:
  2293                           	opt callstack 0
  2294  000120                     	ds	2
  2295  000122                     _ADC_InterruptHandler:
  2296                           	opt callstack 0
  2297  000122                     	ds	2
  2298  000124                     _string_temp:
  2299                           	opt callstack 0
  2300  000124                     	ds	100
  2301  000188                     _dbuf:
  2302                           	opt callstack 0
  2303  000188                     	ds	80
  2304  0001D8                     _tensao_in:
  2305                           	opt callstack 0
  2306  0001D8                     	ds	4
  2307                           
  2308                           	psect	dataBANK1
  2309  0001F4                     __pdataBANK1:
  2310                           	opt callstack 0
  2311  0001F4                     stoa@F1174:
  2312                           	opt callstack 0
  2313  0001F4                     	ds	7
  2314                           
  2315                           	psect	bssBANK2
  2316  000200                     __pbssBANK2:
  2317                           	opt callstack 0
  2318  000200                     _string_ntc:
  2319                           	opt callstack 0
  2320  000200                     	ds	100
  2321  000264                     _string_pot:
  2322                           	opt callstack 0
  2323  000264                     	ds	100
  2324                           
  2325                           	psect	bssBANK3
  2326  000300                     __pbssBANK3:
  2327                           	opt callstack 0
  2328  000300                     _string_ntc_high:
  2329                           	opt callstack 0
  2330  000300                     	ds	100
  2331  000364                     _string_ntc_low:
  2332                           	opt callstack 0
  2333  000364                     	ds	100
  2334                           
  2335                           	psect	cstackBANK1
  2336  0001DC                     __pcstackBANK1:
  2337                           	opt callstack 0
  2338  0001DC                     _vsnprintf$2151:
  2339                           	opt callstack 0
  2340                           
  2341                           ; 2 bytes @ 0x0
  2342  0001DC                     	ds	2
  2343  0001DE                     vsnprintf@cnt:
  2344                           	opt callstack 0
  2345                           
  2346                           ; 2 bytes @ 0x2
  2347  0001DE                     	ds	2
  2348  0001E0                     vsnprintf@f:
  2349                           	opt callstack 0
  2350                           
  2351                           ; 6 bytes @ 0x4
  2352  0001E0                     	ds	6
  2353  0001E6                     ?_snprintf:
  2354                           	opt callstack 0
  2355  0001E6                     snprintf@s:
  2356                           	opt callstack 0
  2357                           
  2358                           ; 2 bytes @ 0xA
  2359  0001E6                     	ds	2
  2360  0001E8                     snprintf@n:
  2361                           	opt callstack 0
  2362                           
  2363                           ; 2 bytes @ 0xC
  2364  0001E8                     	ds	2
  2365  0001EA                     snprintf@fmt:
  2366                           	opt callstack 0
  2367                           
  2368                           ; 2 bytes @ 0xE
  2369  0001EA                     	ds	8
  2370  0001F2                     snprintf@ap:
  2371                           	opt callstack 0
  2372                           
  2373                           ; 2 bytes @ 0x16
  2374  0001F2                     	ds	2
  2375                           
  2376                           	psect	cstackBANK0
  2377  000060                     __pcstackBANK0:
  2378                           	opt callstack 0
  2379  000060                     ?_floorf:
  2380                           	opt callstack 0
  2381  000060                     floorf@x:
  2382                           	opt callstack 0
  2383                           
  2384                           ; 4 bytes @ 0x0
  2385  000060                     	ds	4
  2386  000064                     ??_floorf:
  2387                           
  2388                           ; 1 bytes @ 0x4
  2389  000064                     	ds	6
  2390  00006A                     floorf@m:
  2391                           	opt callstack 0
  2392                           
  2393                           ; 4 bytes @ 0xA
  2394  00006A                     	ds	4
  2395  00006E                     floorf@e:
  2396                           	opt callstack 0
  2397                           
  2398                           ; 2 bytes @ 0xE
  2399  00006E                     	ds	2
  2400  000070                     floorf@u:
  2401                           	opt callstack 0
  2402                           
  2403                           ; 4 bytes @ 0x10
  2404  000070                     	ds	4
  2405  000074                     ?_efgtoa:
  2406                           	opt callstack 0
  2407  000074                     efgtoa@fp:
  2408                           	opt callstack 0
  2409                           
  2410                           ; 2 bytes @ 0x14
  2411  000074                     	ds	2
  2412  000076                     efgtoa@f:
  2413                           	opt callstack 0
  2414                           
  2415                           ; 4 bytes @ 0x16
  2416  000076                     	ds	4
  2417  00007A                     efgtoa@c:
  2418                           	opt callstack 0
  2419                           
  2420                           ; 1 bytes @ 0x1A
  2421  00007A                     	ds	1
  2422  00007B                     ??_efgtoa:
  2423                           
  2424                           ; 1 bytes @ 0x1B
  2425  00007B                     	ds	5
  2426  000080                     efgtoa@ou:
  2427                           	opt callstack 0
  2428                           
  2429                           ; 4 bytes @ 0x20
  2430  000080                     	ds	4
  2431  000084                     _efgtoa$1336:
  2432                           	opt callstack 0
  2433                           
  2434                           ; 2 bytes @ 0x24
  2435  000084                     	ds	2
  2436  000086                     _efgtoa$1337:
  2437                           	opt callstack 0
  2438                           
  2439                           ; 2 bytes @ 0x26
  2440  000086                     	ds	2
  2441  000088                     _efgtoa$1341:
  2442                           	opt callstack 0
  2443                           
  2444                           ; 2 bytes @ 0x28
  2445  000088                     	ds	2
  2446  00008A                     _efgtoa$1345:
  2447                           	opt callstack 0
  2448                           
  2449                           ; 2 bytes @ 0x2A
  2450  00008A                     	ds	2
  2451  00008C                     _efgtoa$1346:
  2452                           	opt callstack 0
  2453                           
  2454                           ; 2 bytes @ 0x2C
  2455  00008C                     	ds	2
  2456  00008E                     _efgtoa$1347:
  2457                           	opt callstack 0
  2458                           
  2459                           ; 2 bytes @ 0x2E
  2460  00008E                     	ds	2
  2461  000090                     efgtoa@t:
  2462                           	opt callstack 0
  2463                           
  2464                           ; 2 bytes @ 0x30
  2465  000090                     	ds	2
  2466  000092                     efgtoa@pp:
  2467                           	opt callstack 0
  2468                           
  2469                           ; 2 bytes @ 0x32
  2470  000092                     	ds	2
  2471  000094                     efgtoa@m:
  2472                           	opt callstack 0
  2473                           
  2474                           ; 2 bytes @ 0x34
  2475  000094                     	ds	2
  2476  000096                     efgtoa@ne:
  2477                           	opt callstack 0
  2478                           
  2479                           ; 2 bytes @ 0x36
  2480  000096                     	ds	2
  2481  000098                     efgtoa@d:
  2482                           	opt callstack 0
  2483                           
  2484                           ; 2 bytes @ 0x38
  2485  000098                     	ds	2
  2486  00009A                     efgtoa@sign:
  2487                           	opt callstack 0
  2488                           
  2489                           ; 2 bytes @ 0x3A
  2490  00009A                     	ds	2
  2491  00009C                     efgtoa@p:
  2492                           	opt callstack 0
  2493                           
  2494                           ; 2 bytes @ 0x3C
  2495  00009C                     	ds	2
  2496  00009E                     efgtoa@nmode:
  2497                           	opt callstack 0
  2498                           
  2499                           ; 1 bytes @ 0x3E
  2500  00009E                     	ds	1
  2501  00009F                     efgtoa@w:
  2502                           	opt callstack 0
  2503                           
  2504                           ; 2 bytes @ 0x3F
  2505  00009F                     	ds	2
  2506  0000A1                     efgtoa@mode:
  2507                           	opt callstack 0
  2508                           
  2509                           ; 1 bytes @ 0x41
  2510  0000A1                     	ds	1
  2511  0000A2                     efgtoa@h:
  2512                           	opt callstack 0
  2513                           
  2514                           ; 4 bytes @ 0x42
  2515  0000A2                     	ds	4
  2516  0000A6                     efgtoa@l:
  2517                           	opt callstack 0
  2518                           
  2519                           ; 4 bytes @ 0x46
  2520  0000A6                     	ds	4
  2521  0000AA                     efgtoa@i:
  2522                           	opt callstack 0
  2523                           
  2524                           ; 2 bytes @ 0x4A
  2525  0000AA                     	ds	2
  2526  0000AC                     efgtoa@g:
  2527                           	opt callstack 0
  2528                           
  2529                           ; 4 bytes @ 0x4C
  2530  0000AC                     	ds	4
  2531  0000B0                     efgtoa@e:
  2532                           	opt callstack 0
  2533                           
  2534                           ; 2 bytes @ 0x50
  2535  0000B0                     	ds	2
  2536  0000B2                     efgtoa@n:
  2537                           	opt callstack 0
  2538                           
  2539                           ; 2 bytes @ 0x52
  2540  0000B2                     	ds	2
  2541  0000B4                     efgtoa@u:
  2542                           	opt callstack 0
  2543                           
  2544                           ; 4 bytes @ 0x54
  2545  0000B4                     	ds	4
  2546  0000B8                     ?_vfpfcnvrt:
  2547                           	opt callstack 0
  2548  0000B8                     vfpfcnvrt@fp:
  2549                           	opt callstack 0
  2550                           
  2551                           ; 2 bytes @ 0x58
  2552  0000B8                     	ds	2
  2553  0000BA                     vfpfcnvrt@fmt:
  2554                           	opt callstack 0
  2555                           
  2556                           ; 2 bytes @ 0x5A
  2557  0000BA                     	ds	2
  2558  0000BC                     vfpfcnvrt@ap:
  2559                           	opt callstack 0
  2560                           
  2561                           ; 2 bytes @ 0x5C
  2562  0000BC                     	ds	2
  2563  0000BE                     ??_vfpfcnvrt:
  2564                           
  2565                           ; 1 bytes @ 0x5E
  2566  0000BE                     	ds	4
  2567  0000C2                     vfpfcnvrt@cp:
  2568                           	opt callstack 0
  2569                           
  2570                           ; 2 bytes @ 0x62
  2571  0000C2                     	ds	2
  2572  0000C4                     vfpfcnvrt@done:
  2573                           	opt callstack 0
  2574                           
  2575                           ; 2 bytes @ 0x64
  2576  0000C4                     	ds	2
  2577  0000C6                     _vfpfcnvrt$1398:
  2578                           	opt callstack 0
  2579                           
  2580                           ; 2 bytes @ 0x66
  2581  0000C6                     	ds	2
  2582  0000C8                     _vfpfcnvrt$1399:
  2583                           	opt callstack 0
  2584                           
  2585                           ; 2 bytes @ 0x68
  2586  0000C8                     	ds	2
  2587  0000CA                     _vfpfcnvrt$1420:
  2588                           	opt callstack 0
  2589                           
  2590                           ; 2 bytes @ 0x6A
  2591  0000CA                     	ds	2
  2592  0000CC                     vfpfcnvrt@f:
  2593                           	opt callstack 0
  2594                           
  2595                           ; 4 bytes @ 0x6C
  2596  0000CC                     	ds	4
  2597  0000D0                     vfpfcnvrt@ct:
  2598                           	opt callstack 0
  2599                           
  2600                           ; 3 bytes @ 0x70
  2601  0000D0                     	ds	3
  2602  0000D3                     vfpfcnvrt@ll:
  2603                           	opt callstack 0
  2604                           
  2605                           ; 8 bytes @ 0x73
  2606  0000D3                     	ds	8
  2607  0000DB                     vfpfcnvrt@vp:
  2608                           	opt callstack 0
  2609                           
  2610                           ; 2 bytes @ 0x7B
  2611  0000DB                     	ds	2
  2612  0000DD                     vfpfcnvrt@c:
  2613                           	opt callstack 0
  2614                           
  2615                           ; 1 bytes @ 0x7D
  2616  0000DD                     	ds	1
  2617  0000DE                     vfpfcnvrt@llu:
  2618                           	opt callstack 0
  2619                           
  2620                           ; 8 bytes @ 0x7E
  2621  0000DE                     	ds	8
  2622  0000E6                     ?_vfprintf:
  2623                           	opt callstack 0
  2624  0000E6                     vfprintf@fp:
  2625                           	opt callstack 0
  2626                           
  2627                           ; 2 bytes @ 0x86
  2628  0000E6                     	ds	2
  2629  0000E8                     vfprintf@fmt:
  2630                           	opt callstack 0
  2631                           
  2632                           ; 2 bytes @ 0x88
  2633  0000E8                     	ds	2
  2634  0000EA                     vfprintf@ap:
  2635                           	opt callstack 0
  2636                           
  2637                           ; 2 bytes @ 0x8A
  2638  0000EA                     	ds	2
  2639  0000EC                     vfprintf@cfmt:
  2640                           	opt callstack 0
  2641                           
  2642                           ; 2 bytes @ 0x8C
  2643  0000EC                     	ds	2
  2644  0000EE                     ?_vsnprintf:
  2645                           	opt callstack 0
  2646  0000EE                     vsnprintf@s:
  2647                           	opt callstack 0
  2648                           
  2649                           ; 2 bytes @ 0x8E
  2650  0000EE                     	ds	2
  2651  0000F0                     vsnprintf@n:
  2652                           	opt callstack 0
  2653                           
  2654                           ; 2 bytes @ 0x90
  2655  0000F0                     	ds	2
  2656  0000F2                     vsnprintf@fmt:
  2657                           	opt callstack 0
  2658                           
  2659                           ; 2 bytes @ 0x92
  2660  0000F2                     	ds	2
  2661  0000F4                     vsnprintf@ap:
  2662                           	opt callstack 0
  2663                           
  2664                           ; 2 bytes @ 0x94
  2665  0000F4                     	ds	2
  2666  0000F6                     ??_vsnprintf:
  2667                           
  2668                           ; 1 bytes @ 0x96
  2669  0000F6                     	ds	4
  2670                           
  2671                           	psect	cstackCOMRAM
  2672  000001                     __pcstackCOMRAM:
  2673                           	opt callstack 0
  2674  000001                     ??_INTERRUPT_InterruptManager:
  2675  000001                     
  2676                           ; 1 bytes @ 0x0
  2677  000001                     	ds	2
  2678  000003                     ??_TMR1_Initialize:
  2679  000003                     ??_SPI_Open:
  2680  000003                     ??_msDelay:
  2681  000003                     ?_strlen:
  2682                           	opt callstack 0
  2683  000003                     ?___fpclassifyf:
  2684                           	opt callstack 0
  2685  000003                     ?_isupper:
  2686                           	opt callstack 0
  2687  000003                     ?_isalpha:
  2688                           	opt callstack 0
  2689  000003                     ?_isdigit:
  2690                           	opt callstack 0
  2691  000003                     ?_strncmp:
  2692                           	opt callstack 0
  2693  000003                     ?_isspace:
  2694                           	opt callstack 0
  2695  000003                     ?_islower:
  2696                           	opt callstack 0
  2697  000003                     ?_ADC_GetConversion:
  2698                           	opt callstack 0
  2699  000003                     ?___wmul:
  2700                           	opt callstack 0
  2701  000003                     ?___awdiv:
  2702                           	opt callstack 0
  2703  000003                     ?___awmod:
  2704                           	opt callstack 0
  2705  000003                     ?___flneg:
  2706                           	opt callstack 0
  2707  000003                     ?___fltol:
  2708                           	opt callstack 0
  2709  000003                     ?___xxtofl:
  2710                           	opt callstack 0
  2711  000003                     ?___aodiv:
  2712                           	opt callstack 0
  2713  000003                     ?___aomod:
  2714                           	opt callstack 0
  2715  000003                     ?___lodiv:
  2716                           	opt callstack 0
  2717  000003                     ?___lomod:
  2718                           	opt callstack 0
  2719  000003                     SPI_ExchangeByte@data:
  2720                           	opt callstack 0
  2721  000003                     IOCB4_SetInterruptHandler@InterruptHandler:
  2722                           	opt callstack 0
  2723  000003                     ___wmul@multiplier:
  2724                           	opt callstack 0
  2725  000003                     ___awdiv@dividend:
  2726                           	opt callstack 0
  2727  000003                     ___awmod@dividend:
  2728                           	opt callstack 0
  2729  000003                     isalpha@c:
  2730                           	opt callstack 0
  2731  000003                     isdigit@c:
  2732                           	opt callstack 0
  2733  000003                     isspace@c:
  2734                           	opt callstack 0
  2735  000003                     isupper@c:
  2736                           	opt callstack 0
  2737  000003                     fputc@c:
  2738                           	opt callstack 0
  2739  000003                     strcpy@dest:
  2740                           	opt callstack 0
  2741  000003                     strlen@s:
  2742                           	opt callstack 0
  2743  000003                     strncmp@_l:
  2744                           	opt callstack 0
  2745  000003                     islower@c:
  2746                           	opt callstack 0
  2747  000003                     ___fleq@ff1:
  2748                           	opt callstack 0
  2749  000003                     ___flneg@f1:
  2750                           	opt callstack 0
  2751  000003                     ___fltol@f1:
  2752                           	opt callstack 0
  2753  000003                     ___xxtofl@val:
  2754                           	opt callstack 0
  2755  000003                     ___fpclassifyf@x:
  2756                           	opt callstack 0
  2757  000003                     ___aodiv@dividend:
  2758                           	opt callstack 0
  2759  000003                     ___aomod@dividend:
  2760                           	opt callstack 0
  2761  000003                     ___lodiv@dividend:
  2762                           	opt callstack 0
  2763  000003                     ___lomod@dividend:
  2764                           	opt callstack 0
  2765                           
  2766                           ; 8 bytes @ 0x2
  2767  000003                     	ds	1
  2768  000004                     SPI_Open@spiUniqueConfiguration:
  2769                           	opt callstack 0
  2770  000004                     msDelay@ms:
  2771                           	opt callstack 0
  2772  000004                     lcd_send@value:
  2773                           	opt callstack 0
  2774                           
  2775                           ; 1 bytes @ 0x3
  2776  000004                     	ds	1
  2777  000005                     ??_isupper:
  2778  000005                     ??_isalpha:
  2779  000005                     ??_isdigit:
  2780  000005                     ??_isspace:
  2781  000005                     ??_islower:
  2782  000005                     ??_ADC_GetConversion:
  2783  000005                     msDelay@k:
  2784                           	opt callstack 0
  2785  000005                     lcd_send@dc:
  2786                           	opt callstack 0
  2787  000005                     ___wmul@multiplicand:
  2788                           	opt callstack 0
  2789  000005                     ___awdiv@divisor:
  2790                           	opt callstack 0
  2791  000005                     ___awmod@divisor:
  2792                           	opt callstack 0
  2793  000005                     fputc@fp:
  2794                           	opt callstack 0
  2795  000005                     strcpy@src:
  2796                           	opt callstack 0
  2797  000005                     strlen@a:
  2798                           	opt callstack 0
  2799  000005                     strncmp@_r:
  2800                           	opt callstack 0
  2801                           
  2802                           ; 2 bytes @ 0x4
  2803  000005                     	ds	1
  2804  000006                     lcd_set_cursor_x@x:
  2805                           	opt callstack 0
  2806  000006                     lcd_set_cursor_y@y:
  2807                           	opt callstack 0
  2808  000006                     lcd_draw_pixel@color:
  2809                           	opt callstack 0
  2810                           
  2811                           ; 2 bytes @ 0x5
  2812  000006                     	ds	1
  2813  000007                     ??_fputc:
  2814  000007                     ??___fpclassifyf:
  2815  000007                     ??_strcpy:
  2816  000007                     ??___fltol:
  2817  000007                     ??___xxtofl:
  2818  000007                     ADC_GetConversion@channel:
  2819                           	opt callstack 0
  2820  000007                     ___awdiv@counter:
  2821                           	opt callstack 0
  2822  000007                     ___awmod@counter:
  2823                           	opt callstack 0
  2824  000007                     ___wmul@product:
  2825                           	opt callstack 0
  2826  000007                     strncmp@n:
  2827                           	opt callstack 0
  2828  000007                     ___fleq@ff2:
  2829                           	opt callstack 0
  2830                           
  2831                           ; 4 bytes @ 0x6
  2832  000007                     	ds	1
  2833  000008                     ___awdiv@sign:
  2834                           	opt callstack 0
  2835  000008                     ___awmod@sign:
  2836                           	opt callstack 0
  2837  000008                     lcd_set_cursor@x:
  2838                           	opt callstack 0
  2839                           
  2840                           ; 2 bytes @ 0x7
  2841  000008                     	ds	1
  2842  000009                     ??_strncmp:
  2843  000009                     ?_tolower:
  2844                           	opt callstack 0
  2845  000009                     ?_toupper:
  2846                           	opt callstack 0
  2847  000009                     _isspace$2021:
  2848                           	opt callstack 0
  2849  000009                     ___awdiv@quotient:
  2850                           	opt callstack 0
  2851  000009                     strcpy@s:
  2852                           	opt callstack 0
  2853  000009                     tolower@c:
  2854                           	opt callstack 0
  2855  000009                     toupper@c:
  2856                           	opt callstack 0
  2857                           
  2858                           ; 2 bytes @ 0x8
  2859  000009                     	ds	1
  2860  00000A                     ?_atoi:
  2861                           	opt callstack 0
  2862  00000A                     lcd_set_cursor@y:
  2863                           	opt callstack 0
  2864  00000A                     atoi@s:
  2865                           	opt callstack 0
  2866  00000A                     strncmp@l:
  2867                           	opt callstack 0
  2868                           
  2869                           ; 2 bytes @ 0x9
  2870  00000A                     	ds	1
  2871  00000B                     ??_tolower:
  2872  00000B                     ??_toupper:
  2873  00000B                     ??___fleq:
  2874  00000B                     ___fltol@sign1:
  2875                           	opt callstack 0
  2876  00000B                     ___xxtofl@sign:
  2877                           	opt callstack 0
  2878  00000B                     ___fpclassifyf@e:
  2879                           	opt callstack 0
  2880  00000B                     strcpy@d:
  2881                           	opt callstack 0
  2882  00000B                     ___aodiv@divisor:
  2883                           	opt callstack 0
  2884  00000B                     ___aomod@divisor:
  2885                           	opt callstack 0
  2886  00000B                     ___lodiv@divisor:
  2887                           	opt callstack 0
  2888  00000B                     ___lomod@divisor:
  2889                           	opt callstack 0
  2890                           
  2891                           ; 8 bytes @ 0xA
  2892  00000B                     	ds	1
  2893  00000C                     ??_atoi:
  2894  00000C                     ?_stoa:
  2895                           	opt callstack 0
  2896  00000C                     ___fltol@exp1:
  2897                           	opt callstack 0
  2898  00000C                     ___xxtofl@exp:
  2899                           	opt callstack 0
  2900  00000C                     lcd_fill@bg_color:
  2901                           	opt callstack 0
  2902  00000C                     lcd_draw_char@x:
  2903                           	opt callstack 0
  2904  00000C                     stoa@fp:
  2905                           	opt callstack 0
  2906  00000C                     fputs@s:
  2907                           	opt callstack 0
  2908  00000C                     strncmp@r:
  2909                           	opt callstack 0
  2910                           
  2911                           ; 2 bytes @ 0xB
  2912  00000C                     	ds	1
  2913  00000D                     ___xxtofl@arg:
  2914                           	opt callstack 0
  2915  00000D                     ___fpclassifyf@u:
  2916                           	opt callstack 0
  2917                           
  2918                           ; 4 bytes @ 0xC
  2919  00000D                     	ds	1
  2920  00000E                     lcd_fill@height:
  2921                           	opt callstack 0
  2922  00000E                     lcd_draw_char@y:
  2923                           	opt callstack 0
  2924  00000E                     stoa@s:
  2925                           	opt callstack 0
  2926  00000E                     fputs@fp:
  2927                           	opt callstack 0
  2928                           
  2929                           ; 2 bytes @ 0xD
  2930  00000E                     	ds	1
  2931  00000F                     _tolower$2104:
  2932                           	opt callstack 0
  2933  00000F                     _toupper$2119:
  2934                           	opt callstack 0
  2935                           
  2936                           ; 2 bytes @ 0xE
  2937  00000F                     	ds	1
  2938  000010                     ??_stoa:
  2939  000010                     fputs@c:
  2940                           	opt callstack 0
  2941  000010                     lcd_fill@width:
  2942                           	opt callstack 0
  2943  000010                     lcd_draw_char@fIndex:
  2944                           	opt callstack 0
  2945  000010                     atoi@neg:
  2946                           	opt callstack 0
  2947                           
  2948                           ; 2 bytes @ 0xF
  2949  000010                     	ds	1
  2950  000011                     ?___flmul:
  2951                           	opt callstack 0
  2952  000011                     fputs@i:
  2953                           	opt callstack 0
  2954  000011                     ___flmul@b:
  2955                           	opt callstack 0
  2956  000011                     stoa@nuls:
  2957                           	opt callstack 0
  2958                           
  2959                           ; 7 bytes @ 0x10
  2960  000011                     	ds	1
  2961  000012                     lcd_draw_char@fg_color:
  2962                           	opt callstack 0
  2963  000012                     _atoi$1981:
  2964                           	opt callstack 0
  2965                           
  2966                           ; 2 bytes @ 0x11
  2967  000012                     	ds	1
  2968  000013                     ?_pad:
  2969                           	opt callstack 0
  2970  000013                     ___aodiv@counter:
  2971                           	opt callstack 0
  2972  000013                     ___aomod@counter:
  2973                           	opt callstack 0
  2974  000013                     ___lomod@counter:
  2975                           	opt callstack 0
  2976  000013                     pad@fp:
  2977                           	opt callstack 0
  2978  000013                     ___lodiv@quotient:
  2979                           	opt callstack 0
  2980                           
  2981                           ; 8 bytes @ 0x12
  2982  000013                     	ds	1
  2983  000014                     ___aodiv@sign:
  2984                           	opt callstack 0
  2985  000014                     ___aomod@sign:
  2986                           	opt callstack 0
  2987  000014                     lcd_draw_char@bg_color:
  2988                           	opt callstack 0
  2989  000014                     _atoi$1983:
  2990                           	opt callstack 0
  2991                           
  2992                           ; 2 bytes @ 0x13
  2993  000014                     	ds	1
  2994  000015                     ?_abs:
  2995                           	opt callstack 0
  2996  000015                     pad@buf:
  2997                           	opt callstack 0
  2998  000015                     abs@a:
  2999                           	opt callstack 0
  3000  000015                     ___flmul@a:
  3001                           	opt callstack 0
  3002  000015                     ___aodiv@quotient:
  3003                           	opt callstack 0
  3004                           
  3005                           ; 8 bytes @ 0x14
  3006  000015                     	ds	1
  3007  000016                     ??_lcd_draw_char:
  3008  000016                     _atoi$1982:
  3009                           	opt callstack 0
  3010                           
  3011                           ; 1 bytes @ 0x15
  3012  000016                     	ds	1
  3013  000017                     ??_abs:
  3014  000017                     pad@p:
  3015                           	opt callstack 0
  3016  000017                     atoi@n:
  3017                           	opt callstack 0
  3018                           
  3019                           ; 2 bytes @ 0x16
  3020  000017                     	ds	1
  3021  000018                     stoa@i:
  3022                           	opt callstack 0
  3023                           
  3024                           ; 2 bytes @ 0x17
  3025  000018                     	ds	1
  3026  000019                     ??___flmul:
  3027  000019                     ??_pad:
  3028                           
  3029                           ; 1 bytes @ 0x18
  3030  000019                     	ds	1
  3031  00001A                     pad@i:
  3032                           	opt callstack 0
  3033  00001A                     stoa@w:
  3034                           	opt callstack 0
  3035                           
  3036                           ; 2 bytes @ 0x19
  3037  00001A                     	ds	1
  3038  00001B                     ___lodiv@counter:
  3039                           	opt callstack 0
  3040                           
  3041                           ; 1 bytes @ 0x1A
  3042  00001B                     	ds	1
  3043  00001C                     pad@w:
  3044                           	opt callstack 0
  3045  00001C                     stoa@cp:
  3046                           	opt callstack 0
  3047                           
  3048                           ; 2 bytes @ 0x1B
  3049  00001C                     	ds	1
  3050  00001D                     ___flmul@sign:
  3051                           	opt callstack 0
  3052                           
  3053                           ; 1 bytes @ 0x1C
  3054  00001D                     	ds	1
  3055  00001E                     ?_ctoa:
  3056                           	opt callstack 0
  3057  00001E                     ?_dtoa:
  3058                           	opt callstack 0
  3059  00001E                     ?_otoa:
  3060                           	opt callstack 0
  3061  00001E                     ?_utoa:
  3062                           	opt callstack 0
  3063  00001E                     ?_xtoa:
  3064                           	opt callstack 0
  3065  00001E                     ___flmul@aexp:
  3066                           	opt callstack 0
  3067  00001E                     ctoa@fp:
  3068                           	opt callstack 0
  3069  00001E                     dtoa@fp:
  3070                           	opt callstack 0
  3071  00001E                     otoa@fp:
  3072                           	opt callstack 0
  3073  00001E                     stoa@p:
  3074                           	opt callstack 0
  3075  00001E                     utoa@fp:
  3076                           	opt callstack 0
  3077  00001E                     xtoa@fp:
  3078                           	opt callstack 0
  3079                           
  3080                           ; 2 bytes @ 0x1D
  3081  00001E                     	ds	1
  3082  00001F                     lcd_draw_char@j:
  3083                           	opt callstack 0
  3084  00001F                     ___flmul@grs:
  3085                           	opt callstack 0
  3086                           
  3087                           ; 4 bytes @ 0x1E
  3088  00001F                     	ds	1
  3089  000020                     lcd_draw_char@k:
  3090                           	opt callstack 0
  3091  000020                     ctoa@c:
  3092                           	opt callstack 0
  3093  000020                     stoa@l:
  3094                           	opt callstack 0
  3095  000020                     dtoa@d:
  3096                           	opt callstack 0
  3097  000020                     otoa@d:
  3098                           	opt callstack 0
  3099  000020                     utoa@d:
  3100                           	opt callstack 0
  3101  000020                     xtoa@d:
  3102                           	opt callstack 0
  3103                           
  3104                           ; 8 bytes @ 0x1F
  3105  000020                     	ds	1
  3106  000021                     lcd_draw_char@i:
  3107                           	opt callstack 0
  3108  000021                     ctoa@w:
  3109                           	opt callstack 0
  3110                           
  3111                           ; 2 bytes @ 0x20
  3112  000021                     	ds	1
  3113  000022                     lcd_draw_string@x:
  3114                           	opt callstack 0
  3115                           
  3116                           ; 2 bytes @ 0x21
  3117  000022                     	ds	1
  3118  000023                     ___flmul@bexp:
  3119                           	opt callstack 0
  3120                           
  3121                           ; 1 bytes @ 0x22
  3122  000023                     	ds	1
  3123  000024                     lcd_draw_string@y:
  3124                           	opt callstack 0
  3125  000024                     ___flmul@prod:
  3126                           	opt callstack 0
  3127                           
  3128                           ; 4 bytes @ 0x23
  3129  000024                     	ds	2
  3130  000026                     lcd_draw_string@pS:
  3131                           	opt callstack 0
  3132                           
  3133                           ; 2 bytes @ 0x25
  3134  000026                     	ds	2
  3135  000028                     ??_dtoa:
  3136  000028                     ??_otoa:
  3137  000028                     ??_utoa:
  3138  000028                     xtoa@x:
  3139                           	opt callstack 0
  3140  000028                     lcd_draw_string@fg_color:
  3141                           	opt callstack 0
  3142  000028                     ___flmul@temp:
  3143                           	opt callstack 0
  3144                           
  3145                           ; 2 bytes @ 0x27
  3146  000028                     	ds	1
  3147  000029                     ??_xtoa:
  3148                           
  3149                           ; 1 bytes @ 0x28
  3150  000029                     	ds	1
  3151  00002A                     ?___fladd:
  3152                           	opt callstack 0
  3153  00002A                     lcd_draw_string@bg_color:
  3154                           	opt callstack 0
  3155  00002A                     ___flge@ff1:
  3156                           	opt callstack 0
  3157  00002A                     ___fladd@b:
  3158                           	opt callstack 0
  3159                           
  3160                           ; 4 bytes @ 0x29
  3161  00002A                     	ds	2
  3162  00002C                     ??_lcd_draw_string:
  3163                           
  3164                           ; 1 bytes @ 0x2B
  3165  00002C                     	ds	2
  3166  00002E                     ___flge@ff2:
  3167                           	opt callstack 0
  3168  00002E                     ___fladd@a:
  3169                           	opt callstack 0
  3170                           
  3171                           ; 4 bytes @ 0x2D
  3172  00002E                     	ds	2
  3173  000030                     lcd_draw_string@k:
  3174                           	opt callstack 0
  3175  000030                     _dtoa$1313:
  3176                           	opt callstack 0
  3177  000030                     otoa@p:
  3178                           	opt callstack 0
  3179  000030                     utoa@p:
  3180                           	opt callstack 0
  3181                           
  3182                           ; 2 bytes @ 0x2F
  3183  000030                     	ds	1
  3184  000031                     _xtoa$1383:
  3185                           	opt callstack 0
  3186                           
  3187                           ; 2 bytes @ 0x30
  3188  000031                     	ds	1
  3189  000032                     ??___fladd:
  3190  000032                     ??___flge:
  3191  000032                     lcd_draw_string@lIndex:
  3192                           	opt callstack 0
  3193  000032                     dtoa@p:
  3194                           	opt callstack 0
  3195  000032                     otoa@t:
  3196                           	opt callstack 0
  3197  000032                     utoa@w:
  3198                           	opt callstack 0
  3199                           
  3200                           ; 2 bytes @ 0x31
  3201  000032                     	ds	1
  3202  000033                     _xtoa$1384:
  3203                           	opt callstack 0
  3204                           
  3205                           ; 2 bytes @ 0x32
  3206  000033                     	ds	1
  3207  000034                     dtoa@w:
  3208                           	opt callstack 0
  3209  000034                     otoa@w:
  3210                           	opt callstack 0
  3211  000034                     utoa@n:
  3212                           	opt callstack 0
  3213                           
  3214                           ; 8 bytes @ 0x33
  3215  000034                     	ds	1
  3216  000035                     xtoa@p:
  3217                           	opt callstack 0
  3218                           
  3219                           ; 2 bytes @ 0x34
  3220  000035                     	ds	1
  3221  000036                     ___fladd@signs:
  3222                           	opt callstack 0
  3223  000036                     dtoa@s:
  3224                           	opt callstack 0
  3225  000036                     otoa@n:
  3226                           	opt callstack 0
  3227                           
  3228                           ; 8 bytes @ 0x35
  3229  000036                     	ds	1
  3230  000037                     ___fladd@aexp:
  3231                           	opt callstack 0
  3232  000037                     xtoa@w:
  3233                           	opt callstack 0
  3234                           
  3235                           ; 2 bytes @ 0x36
  3236  000037                     	ds	1
  3237  000038                     ___fladd@bexp:
  3238                           	opt callstack 0
  3239  000038                     dtoa@n:
  3240                           	opt callstack 0
  3241                           
  3242                           ; 8 bytes @ 0x37
  3243  000038                     	ds	1
  3244  000039                     ___fladd@grs:
  3245                           	opt callstack 0
  3246  000039                     xtoa@n:
  3247                           	opt callstack 0
  3248                           
  3249                           ; 8 bytes @ 0x38
  3250  000039                     	ds	1
  3251  00003A                     ?___flsub:
  3252                           	opt callstack 0
  3253  00003A                     ___flsub@b:
  3254                           	opt callstack 0
  3255                           
  3256                           ; 4 bytes @ 0x39
  3257  00003A                     	ds	2
  3258  00003C                     utoa@i:
  3259                           	opt callstack 0
  3260                           
  3261                           ; 2 bytes @ 0x3B
  3262  00003C                     	ds	2
  3263  00003E                     otoa@i:
  3264                           	opt callstack 0
  3265  00003E                     ___flsub@a:
  3266                           	opt callstack 0
  3267                           
  3268                           ; 4 bytes @ 0x3D
  3269  00003E                     	ds	2
  3270  000040                     dtoa@i:
  3271                           	opt callstack 0
  3272                           
  3273                           ; 2 bytes @ 0x3F
  3274  000040                     	ds	1
  3275  000041                     xtoa@i:
  3276                           	opt callstack 0
  3277                           
  3278                           ; 2 bytes @ 0x40
  3279  000041                     	ds	1
  3280  000042                     ?___fldiv:
  3281                           	opt callstack 0
  3282  000042                     ___fldiv@b:
  3283                           	opt callstack 0
  3284                           
  3285                           ; 4 bytes @ 0x41
  3286  000042                     	ds	1
  3287  000043                     xtoa@c:
  3288                           	opt callstack 0
  3289                           
  3290                           ; 2 bytes @ 0x42
  3291  000043                     	ds	3
  3292  000046                     ___fldiv@a:
  3293                           	opt callstack 0
  3294                           
  3295                           ; 4 bytes @ 0x45
  3296  000046                     	ds	4
  3297  00004A                     ??___fldiv:
  3298                           
  3299                           ; 1 bytes @ 0x49
  3300  00004A                     	ds	4
  3301  00004E                     ___fldiv@rem:
  3302                           	opt callstack 0
  3303                           
  3304                           ; 4 bytes @ 0x4D
  3305  00004E                     	ds	4
  3306  000052                     ___fldiv@sign:
  3307                           	opt callstack 0
  3308                           
  3309                           ; 1 bytes @ 0x51
  3310  000052                     	ds	1
  3311  000053                     ___fldiv@new_exp:
  3312                           	opt callstack 0
  3313                           
  3314                           ; 2 bytes @ 0x52
  3315  000053                     	ds	2
  3316  000055                     ___fldiv@grs:
  3317                           	opt callstack 0
  3318                           
  3319                           ; 4 bytes @ 0x54
  3320  000055                     	ds	4
  3321  000059                     ___fldiv@bexp:
  3322                           	opt callstack 0
  3323                           
  3324                           ; 1 bytes @ 0x58
  3325  000059                     	ds	1
  3326  00005A                     ___fldiv@aexp:
  3327                           	opt callstack 0
  3328                           
  3329                           ; 1 bytes @ 0x59
  3330  00005A                     	ds	1
  3331  00005B                     
  3332                           ; 1 bytes @ 0x5A
  3333 ;;
  3334 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3335 ;;
  3336 ;; *************** function _main *****************
  3337 ;; Defined at:
  3338 ;;		line 34 in file "main.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;		None
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;		None
  3343 ;; Return value:  Size  Location     Type
  3344 ;;                  1    wreg      void 
  3345 ;; Registers used:
  3346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3356 ;;Total ram usage:        0 bytes
  3357 ;; Hardware stack levels required when called:   13
  3358 ;; This function calls:
  3359 ;;		_ADC_GetConversion
  3360 ;;		_IOCB4_SetInterruptHandler
  3361 ;;		_SPI_Open
  3362 ;;		_SYSTEM_Initialize
  3363 ;;		___fladd
  3364 ;;		___fldiv
  3365 ;;		___flge
  3366 ;;		___flmul
  3367 ;;		___flsub
  3368 ;;		___xxtofl
  3369 ;;		_lcd_draw_string
  3370 ;;		_lcd_init
  3371 ;;		_snprintf
  3372 ;; This function is called by:
  3373 ;;		Startup code after reset
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377                           	psect	text0
  3378  0020DA                     __ptext0:
  3379                           	opt callstack 0
  3380  0020DA                     _main:
  3381                           	opt callstack 18
  3382  0020DA                     
  3383                           ;main.c: 37:     SYSTEM_Initialize();
  3384  0020DA  ECC3  F02F         	call	_SYSTEM_Initialize	;wreg free
  3385  0020DE                     
  3386                           ;main.c: 38:     SPI_Open(SPI_DEFAULT);
  3387  0020DE  0E00               	movlw	0
  3388  0020E0  EC3D  F02B         	call	_SPI_Open
  3389  0020E4                     
  3390                           ;main.c: 39:     lcd_init();
  3391  0020E4  EC4A  F019         	call	_lcd_init	;wreg free
  3392  0020E8                     
  3393                           ;main.c: 42:     IOCB4_SetInterruptHandler(IOCB4_InterruptCall);
  3394  0020E8  0E56               	movlw	low _IOCB4_InterruptCall
  3395  0020EA  6E03               	movwf	IOCB4_SetInterruptHandler@InterruptHandler^0,c
  3396  0020EC  0E5E               	movlw	high _IOCB4_InterruptCall
  3397  0020EE  6E04               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)^0,c
  3398  0020F0  EC10  F030         	call	_IOCB4_SetInterruptHandler	;wreg free
  3399  0020F4                     
  3400                           ;main.c: 45:     (INTCONbits.GIE = 1);
  3401  0020F4  8EF2               	bsf	242,7,c	;volatile
  3402  0020F6                     
  3403                           ;main.c: 56:     lcd_draw_string(100,120,"HELLO WORLD",0xFFFF,0x0000);
  3404  0020F6  0E00               	movlw	0
  3405  0020F8  6E23               	movwf	(lcd_draw_string@x+1)^0,c
  3406  0020FA  0E64               	movlw	100
  3407  0020FC  6E22               	movwf	lcd_draw_string@x^0,c
  3408  0020FE  0E00               	movlw	0
  3409  002100  6E25               	movwf	(lcd_draw_string@y+1)^0,c
  3410  002102  0E78               	movlw	120
  3411  002104  6E24               	movwf	lcd_draw_string@y^0,c
  3412  002106  0EAE               	movlw	low STR_1
  3413  002108  6E26               	movwf	lcd_draw_string@pS^0,c
  3414  00210A  0EFF               	movlw	high STR_1
  3415  00210C  6E27               	movwf	(lcd_draw_string@pS+1)^0,c
  3416  00210E  0EFF               	movlw	255
  3417  002110  6E29               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3418  002112  6828               	setf	lcd_draw_string@fg_color^0,c
  3419  002114  0E00               	movlw	0
  3420  002116  6E2B               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3421  002118  0E00               	movlw	0
  3422  00211A  6E2A               	movwf	lcd_draw_string@bg_color^0,c
  3423  00211C  EC2B  F026         	call	_lcd_draw_string	;wreg free
  3424  002120                     l9158:
  3425                           
  3426                           ;main.c: 59:     {;main.c: 61:         if (botao==1){
  3427  002120  0101               	movlb	1	; () banked
  3428  002122  051E               	decf	_botao& (0+255),w,b
  3429  002124  111F               	iorwf	(_botao+1)& (0+255),w,b
  3430  002126  A4D8               	btfss	status,2,c
  3431  002128  EF98  F010         	goto	u12121
  3432  00212C  EF9A  F010         	goto	u12120
  3433  002130                     u12121:
  3434  002130  EF2A  F011         	goto	l9172
  3435  002134                     u12120:
  3436  002134                     
  3437                           ; BSR set to: 1
  3438                           ;main.c: 62:             codigo_digit=ADC_GetConversion(TEMP);
  3439  002134  0E01               	movlw	1
  3440  002136  EC83  F02E         	call	_ADC_GetConversion
  3441  00213A  C003  F120         	movff	?_ADC_GetConversion,_codigo_digit
  3442  00213E  C004  F121         	movff	?_ADC_GetConversion+1,_codigo_digit+1
  3443  002142                     
  3444                           ;main.c: 63:             tensao_in=codigo_digit*0.000805664063;
  3445  002142  C120  F003         	movff	_codigo_digit,___xxtofl@val
  3446  002146  C121  F004         	movff	_codigo_digit+1,___xxtofl@val+1
  3447  00214A  0E00               	movlw	0
  3448  00214C  BE04               	btfsc	(___xxtofl@val+1)^0,7,c
  3449  00214E  0EFF               	movlw	-1
  3450  002150  6E05               	movwf	(___xxtofl@val+2)^0,c
  3451  002152  6E06               	movwf	(___xxtofl@val+3)^0,c
  3452  002154  0E01               	movlw	1
  3453  002156  ECF3  F020         	call	___xxtofl
  3454  00215A  C003  F011         	movff	?___xxtofl,___flmul@b
  3455  00215E  C004  F012         	movff	?___xxtofl+1,___flmul@b+1
  3456  002162  C005  F013         	movff	?___xxtofl+2,___flmul@b+2
  3457  002166  C006  F014         	movff	?___xxtofl+3,___flmul@b+3
  3458  00216A  0E33               	movlw	51
  3459  00216C  6E15               	movwf	___flmul@a^0,c
  3460  00216E  0E33               	movlw	51
  3461  002170  6E16               	movwf	(___flmul@a+1)^0,c
  3462  002172  0E53               	movlw	83
  3463  002174  6E17               	movwf	(___flmul@a+2)^0,c
  3464  002176  0E3A               	movlw	58
  3465  002178  6E18               	movwf	(___flmul@a+3)^0,c
  3466  00217A  EC68  F015         	call	___flmul	;wreg free
  3467  00217E  C011  F1D8         	movff	?___flmul,_tensao_in
  3468  002182  C012  F1D9         	movff	?___flmul+1,_tensao_in+1
  3469  002186  C013  F1DA         	movff	?___flmul+2,_tensao_in+2
  3470  00218A  C014  F1DB         	movff	?___flmul+3,_tensao_in+3
  3471  00218E                     
  3472                           ;main.c: 64:             temp=tensao_in*33.3333333;
  3473  00218E  C1D8  F011         	movff	_tensao_in,___flmul@b
  3474  002192  C1D9  F012         	movff	_tensao_in+1,___flmul@b+1
  3475  002196  C1DA  F013         	movff	_tensao_in+2,___flmul@b+2
  3476  00219A  C1DB  F014         	movff	_tensao_in+3,___flmul@b+3
  3477  00219E  0E55               	movlw	85
  3478  0021A0  6E15               	movwf	___flmul@a^0,c
  3479  0021A2  0E55               	movlw	85
  3480  0021A4  6E16               	movwf	(___flmul@a+1)^0,c
  3481  0021A6  0E05               	movlw	5
  3482  0021A8  6E17               	movwf	(___flmul@a+2)^0,c
  3483  0021AA  0E42               	movlw	66
  3484  0021AC  6E18               	movwf	(___flmul@a+3)^0,c
  3485  0021AE  EC68  F015         	call	___flmul	;wreg free
  3486  0021B2  C011  F114         	movff	?___flmul,_temp
  3487  0021B6  C012  F115         	movff	?___flmul+1,_temp+1
  3488  0021BA  C013  F116         	movff	?___flmul+2,_temp+2
  3489  0021BE  C014  F117         	movff	?___flmul+3,_temp+3
  3490  0021C2                     
  3491                           ;main.c: 65:             snprintf(string_temp,sizeof(string_temp),"Temp=%.f C      ",tem
      +                          p);
  3492  0021C2  0E24               	movlw	low _string_temp
  3493  0021C4  0101               	movlb	1	; () banked
  3494  0021C6  6FE6               	movwf	snprintf@s& (0+255),b
  3495  0021C8  0E01               	movlw	high _string_temp
  3496  0021CA  6FE7               	movwf	(snprintf@s+1)& (0+255),b
  3497  0021CC  0E00               	movlw	0
  3498  0021CE  6FE9               	movwf	(snprintf@n+1)& (0+255),b
  3499  0021D0  0E64               	movlw	100
  3500  0021D2  6FE8               	movwf	snprintf@n& (0+255),b
  3501  0021D4  0E6F               	movlw	low STR_2
  3502  0021D6  6FEA               	movwf	snprintf@fmt& (0+255),b
  3503  0021D8  0EFF               	movlw	high STR_2
  3504  0021DA  6FEB               	movwf	(snprintf@fmt+1)& (0+255),b
  3505  0021DC  C114  F1EC         	movff	_temp,?_snprintf+6
  3506  0021E0  C115  F1ED         	movff	_temp+1,?_snprintf+7
  3507  0021E4  C116  F1EE         	movff	_temp+2,?_snprintf+8
  3508  0021E8  C117  F1EF         	movff	_temp+3,?_snprintf+9
  3509  0021EC  EC46  F02F         	call	_snprintf	;wreg free
  3510  0021F0                     
  3511                           ;main.c: 66:             lcd_draw_string(100,100,string_temp,0xFFFF,0x0000);
  3512  0021F0  0E00               	movlw	0
  3513  0021F2  6E23               	movwf	(lcd_draw_string@x+1)^0,c
  3514  0021F4  0E64               	movlw	100
  3515  0021F6  6E22               	movwf	lcd_draw_string@x^0,c
  3516  0021F8  0E00               	movlw	0
  3517  0021FA  6E25               	movwf	(lcd_draw_string@y+1)^0,c
  3518  0021FC  0E64               	movlw	100
  3519  0021FE  6E24               	movwf	lcd_draw_string@y^0,c
  3520  002200  0E24               	movlw	low _string_temp
  3521  002202  6E26               	movwf	lcd_draw_string@pS^0,c
  3522  002204  0E01               	movlw	high _string_temp
  3523  002206  6E27               	movwf	(lcd_draw_string@pS+1)^0,c
  3524  002208  0EFF               	movlw	255
  3525  00220A  6E29               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3526  00220C  6828               	setf	lcd_draw_string@fg_color^0,c
  3527  00220E  0E00               	movlw	0
  3528  002210  6E2B               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3529  002212  0E00               	movlw	0
  3530  002214  6E2A               	movwf	lcd_draw_string@bg_color^0,c
  3531  002216  EC2B  F026         	call	_lcd_draw_string	;wreg free
  3532  00221A                     
  3533                           ;main.c: 67:                 if (temp >= 90){
  3534  00221A  C114  F02A         	movff	_temp,___flge@ff1
  3535  00221E  C115  F02B         	movff	_temp+1,___flge@ff1+1
  3536  002222  C116  F02C         	movff	_temp+2,___flge@ff1+2
  3537  002226  C117  F02D         	movff	_temp+3,___flge@ff1+3
  3538  00222A  0E00               	movlw	0
  3539  00222C  6E2E               	movwf	___flge@ff2^0,c
  3540  00222E  0E00               	movlw	0
  3541  002230  6E2F               	movwf	(___flge@ff2+1)^0,c
  3542  002232  0EB4               	movlw	180
  3543  002234  6E30               	movwf	(___flge@ff2+2)^0,c
  3544  002236  0E42               	movlw	66
  3545  002238  6E31               	movwf	(___flge@ff2+3)^0,c
  3546  00223A  ECDA  F027         	call	___flge	;wreg free
  3547  00223E  A0D8               	btfss	status,0,c
  3548  002240  EF24  F011         	goto	u12131
  3549  002244  EF26  F011         	goto	u12130
  3550  002248                     u12131:
  3551  002248  EF29  F011         	goto	l305
  3552  00224C                     u12130:
  3553  00224C  8A89               	bsf	137,5,c	;volatile
  3554  00224E  EF2A  F011         	goto	l9172
  3555  002252                     l305:
  3556  002252  9A89               	bcf	137,5,c	;volatile
  3557  002254                     l9172:
  3558                           
  3559                           ;main.c: 74:         if (botao==0){
  3560  002254  0101               	movlb	1	; () banked
  3561  002256  511E               	movf	_botao& (0+255),w,b
  3562  002258  111F               	iorwf	(_botao+1)& (0+255),w,b
  3563  00225A  A4D8               	btfss	status,2,c
  3564  00225C  EF32  F011         	goto	u12141
  3565  002260  EF34  F011         	goto	u12140
  3566  002264                     u12141:
  3567  002264  EF8D  F011         	goto	l9182
  3568  002268                     u12140:
  3569  002268                     
  3570                           ; BSR set to: 1
  3571                           ;main.c: 75:             codigo_digit=ADC_GetConversion(POT);
  3572  002268  0E00               	movlw	0
  3573  00226A  EC83  F02E         	call	_ADC_GetConversion
  3574  00226E  C003  F120         	movff	?_ADC_GetConversion,_codigo_digit
  3575  002272  C004  F121         	movff	?_ADC_GetConversion+1,_codigo_digit+1
  3576  002276                     
  3577                           ;main.c: 76:             pot_val=codigo_digit*0.0244200244200244;
  3578  002276  C120  F003         	movff	_codigo_digit,___xxtofl@val
  3579  00227A  C121  F004         	movff	_codigo_digit+1,___xxtofl@val+1
  3580  00227E  0E00               	movlw	0
  3581  002280  BE04               	btfsc	(___xxtofl@val+1)^0,7,c
  3582  002282  0EFF               	movlw	-1
  3583  002284  6E05               	movwf	(___xxtofl@val+2)^0,c
  3584  002286  6E06               	movwf	(___xxtofl@val+3)^0,c
  3585  002288  0E01               	movlw	1
  3586  00228A  ECF3  F020         	call	___xxtofl
  3587  00228E  C003  F011         	movff	?___xxtofl,___flmul@b
  3588  002292  C004  F012         	movff	?___xxtofl+1,___flmul@b+1
  3589  002296  C005  F013         	movff	?___xxtofl+2,___flmul@b+2
  3590  00229A  C006  F014         	movff	?___xxtofl+3,___flmul@b+3
  3591  00229E  0E81               	movlw	129
  3592  0022A0  6E15               	movwf	___flmul@a^0,c
  3593  0022A2  0E0C               	movlw	12
  3594  0022A4  6E16               	movwf	(___flmul@a+1)^0,c
  3595  0022A6  0EC8               	movlw	200
  3596  0022A8  6E17               	movwf	(___flmul@a+2)^0,c
  3597  0022AA  0E3C               	movlw	60
  3598  0022AC  6E18               	movwf	(___flmul@a+3)^0,c
  3599  0022AE  EC68  F015         	call	___flmul	;wreg free
  3600  0022B2  C011  F110         	movff	?___flmul,_pot_val
  3601  0022B6  C012  F111         	movff	?___flmul+1,_pot_val+1
  3602  0022BA  C013  F112         	movff	?___flmul+2,_pot_val+2
  3603  0022BE  C014  F113         	movff	?___flmul+3,_pot_val+3
  3604  0022C2                     
  3605                           ;main.c: 77:             snprintf(string_pot,sizeof(string_pot),"Pot=%.f%%      ",pot_va
      +                          l);
  3606  0022C2  0E64               	movlw	low _string_pot
  3607  0022C4  0101               	movlb	1	; () banked
  3608  0022C6  6FE6               	movwf	snprintf@s& (0+255),b
  3609  0022C8  0E02               	movlw	high _string_pot
  3610  0022CA  6FE7               	movwf	(snprintf@s+1)& (0+255),b
  3611  0022CC  0E00               	movlw	0
  3612  0022CE  6FE9               	movwf	(snprintf@n+1)& (0+255),b
  3613  0022D0  0E64               	movlw	100
  3614  0022D2  6FE8               	movwf	snprintf@n& (0+255),b
  3615  0022D4  0E80               	movlw	low STR_3
  3616  0022D6  6FEA               	movwf	snprintf@fmt& (0+255),b
  3617  0022D8  0EFF               	movlw	high STR_3
  3618  0022DA  6FEB               	movwf	(snprintf@fmt+1)& (0+255),b
  3619  0022DC  C110  F1EC         	movff	_pot_val,?_snprintf+6
  3620  0022E0  C111  F1ED         	movff	_pot_val+1,?_snprintf+7
  3621  0022E4  C112  F1EE         	movff	_pot_val+2,?_snprintf+8
  3622  0022E8  C113  F1EF         	movff	_pot_val+3,?_snprintf+9
  3623  0022EC  EC46  F02F         	call	_snprintf	;wreg free
  3624  0022F0                     
  3625                           ;main.c: 78:             lcd_draw_string(100,100,string_pot,0xFFFF,0x0000);
  3626  0022F0  0E00               	movlw	0
  3627  0022F2  6E23               	movwf	(lcd_draw_string@x+1)^0,c
  3628  0022F4  0E64               	movlw	100
  3629  0022F6  6E22               	movwf	lcd_draw_string@x^0,c
  3630  0022F8  0E00               	movlw	0
  3631  0022FA  6E25               	movwf	(lcd_draw_string@y+1)^0,c
  3632  0022FC  0E64               	movlw	100
  3633  0022FE  6E24               	movwf	lcd_draw_string@y^0,c
  3634  002300  0E64               	movlw	low _string_pot
  3635  002302  6E26               	movwf	lcd_draw_string@pS^0,c
  3636  002304  0E02               	movlw	high _string_pot
  3637  002306  6E27               	movwf	(lcd_draw_string@pS+1)^0,c
  3638  002308  0EFF               	movlw	255
  3639  00230A  6E29               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3640  00230C  6828               	setf	lcd_draw_string@fg_color^0,c
  3641  00230E  0E00               	movlw	0
  3642  002310  6E2B               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3643  002312  0E00               	movlw	0
  3644  002314  6E2A               	movwf	lcd_draw_string@bg_color^0,c
  3645  002316  EC2B  F026         	call	_lcd_draw_string	;wreg free
  3646  00231A                     l9182:
  3647                           
  3648                           ;main.c: 80:         if (botao==2){
  3649  00231A  0E02               	movlw	2
  3650  00231C  0101               	movlb	1	; () banked
  3651  00231E  191E               	xorwf	_botao& (0+255),w,b
  3652  002320  111F               	iorwf	(_botao+1)& (0+255),w,b
  3653  002322  A4D8               	btfss	status,2,c
  3654  002324  EF96  F011         	goto	u12151
  3655  002328  EF98  F011         	goto	u12150
  3656  00232C                     u12151:
  3657  00232C  EF90  F010         	goto	l9158
  3658  002330                     u12150:
  3659  002330                     
  3660                           ; BSR set to: 1
  3661                           ;main.c: 81:             codigo_digit=ADC_GetConversion(NTC);
  3662  002330  0E08               	movlw	8
  3663  002332  EC83  F02E         	call	_ADC_GetConversion
  3664  002336  C003  F120         	movff	?_ADC_GetConversion,_codigo_digit
  3665  00233A  C004  F121         	movff	?_ADC_GetConversion+1,_codigo_digit+1
  3666  00233E                     
  3667                           ;main.c: 82:             tensao_in=codigo_digit*0.000805664063;
  3668  00233E  C120  F003         	movff	_codigo_digit,___xxtofl@val
  3669  002342  C121  F004         	movff	_codigo_digit+1,___xxtofl@val+1
  3670  002346  0E00               	movlw	0
  3671  002348  BE04               	btfsc	(___xxtofl@val+1)^0,7,c
  3672  00234A  0EFF               	movlw	-1
  3673  00234C  6E05               	movwf	(___xxtofl@val+2)^0,c
  3674  00234E  6E06               	movwf	(___xxtofl@val+3)^0,c
  3675  002350  0E01               	movlw	1
  3676  002352  ECF3  F020         	call	___xxtofl
  3677  002356  C003  F011         	movff	?___xxtofl,___flmul@b
  3678  00235A  C004  F012         	movff	?___xxtofl+1,___flmul@b+1
  3679  00235E  C005  F013         	movff	?___xxtofl+2,___flmul@b+2
  3680  002362  C006  F014         	movff	?___xxtofl+3,___flmul@b+3
  3681  002366  0E33               	movlw	51
  3682  002368  6E15               	movwf	___flmul@a^0,c
  3683  00236A  0E33               	movlw	51
  3684  00236C  6E16               	movwf	(___flmul@a+1)^0,c
  3685  00236E  0E53               	movlw	83
  3686  002370  6E17               	movwf	(___flmul@a+2)^0,c
  3687  002372  0E3A               	movlw	58
  3688  002374  6E18               	movwf	(___flmul@a+3)^0,c
  3689  002376  EC68  F015         	call	___flmul	;wreg free
  3690  00237A  C011  F1D8         	movff	?___flmul,_tensao_in
  3691  00237E  C012  F1D9         	movff	?___flmul+1,_tensao_in+1
  3692  002382  C013  F1DA         	movff	?___flmul+2,_tensao_in+2
  3693  002386  C014  F1DB         	movff	?___flmul+3,_tensao_in+3
  3694  00238A                     
  3695                           ;main.c: 83:             ntc_val=((-1440*tensao_in)-12853.770491803)/(tensao_in-8.926229
      +                          5081968);
  3696  00238A  0E15               	movlw	21
  3697  00238C  6E2E               	movwf	___fladd@a^0,c
  3698  00238E  0ED7               	movlw	215
  3699  002390  6E2F               	movwf	(___fladd@a+1)^0,c
  3700  002392  0E48               	movlw	72
  3701  002394  6E30               	movwf	(___fladd@a+2)^0,c
  3702  002396  0EC6               	movlw	198
  3703  002398  6E31               	movwf	(___fladd@a+3)^0,c
  3704  00239A  0E00               	movlw	0
  3705  00239C  6E15               	movwf	___flmul@a^0,c
  3706  00239E  0E00               	movlw	0
  3707  0023A0  6E16               	movwf	(___flmul@a+1)^0,c
  3708  0023A2  0EB4               	movlw	180
  3709  0023A4  6E17               	movwf	(___flmul@a+2)^0,c
  3710  0023A6  0EC4               	movlw	196
  3711  0023A8  6E18               	movwf	(___flmul@a+3)^0,c
  3712  0023AA  C1D8  F011         	movff	_tensao_in,___flmul@b
  3713  0023AE  C1D9  F012         	movff	_tensao_in+1,___flmul@b+1
  3714  0023B2  C1DA  F013         	movff	_tensao_in+2,___flmul@b+2
  3715  0023B6  C1DB  F014         	movff	_tensao_in+3,___flmul@b+3
  3716  0023BA  EC68  F015         	call	___flmul	;wreg free
  3717  0023BE  C011  F02A         	movff	?___flmul,___fladd@b
  3718  0023C2  C012  F02B         	movff	?___flmul+1,___fladd@b+1
  3719  0023C6  C013  F02C         	movff	?___flmul+2,___fladd@b+2
  3720  0023CA  C014  F02D         	movff	?___flmul+3,___fladd@b+3
  3721  0023CE  EC08  F013         	call	___fladd	;wreg free
  3722  0023D2  C02A  F042         	movff	?___fladd,___fldiv@b
  3723  0023D6  C02B  F043         	movff	?___fladd+1,___fldiv@b+1
  3724  0023DA  C02C  F044         	movff	?___fladd+2,___fldiv@b+2
  3725  0023DE  C02D  F045         	movff	?___fladd+3,___fldiv@b+3
  3726  0023E2  0ED6               	movlw	214
  3727  0023E4  6E2E               	movwf	___fladd@a^0,c
  3728  0023E6  0ED1               	movlw	209
  3729  0023E8  6E2F               	movwf	(___fladd@a+1)^0,c
  3730  0023EA  0E0E               	movlw	14
  3731  0023EC  6E30               	movwf	(___fladd@a+2)^0,c
  3732  0023EE  0EC1               	movlw	193
  3733  0023F0  6E31               	movwf	(___fladd@a+3)^0,c
  3734  0023F2  C1D8  F02A         	movff	_tensao_in,___fladd@b
  3735  0023F6  C1D9  F02B         	movff	_tensao_in+1,___fladd@b+1
  3736  0023FA  C1DA  F02C         	movff	_tensao_in+2,___fladd@b+2
  3737  0023FE  C1DB  F02D         	movff	_tensao_in+3,___fladd@b+3
  3738  002402  EC08  F013         	call	___fladd	;wreg free
  3739  002406  C02A  F046         	movff	?___fladd,___fldiv@a
  3740  00240A  C02B  F047         	movff	?___fladd+1,___fldiv@a+1
  3741  00240E  C02C  F048         	movff	?___fladd+2,___fldiv@a+2
  3742  002412  C02D  F049         	movff	?___fladd+3,___fldiv@a+3
  3743  002416  EC7D  F017         	call	___fldiv	;wreg free
  3744  00241A  C042  F10C         	movff	?___fldiv,_ntc_val
  3745  00241E  C043  F10D         	movff	?___fldiv+1,_ntc_val+1
  3746  002422  C044  F10E         	movff	?___fldiv+2,_ntc_val+2
  3747  002426  C045  F10F         	movff	?___fldiv+3,_ntc_val+3
  3748                           
  3749                           ;main.c: 84:             temp_ntc=(-ntc_val+4425.5)/(85.3);
  3750  00242A  C10C  F03E         	movff	_ntc_val,___flsub@a
  3751  00242E  C10D  F03F         	movff	_ntc_val+1,___flsub@a+1
  3752  002432  C10E  F040         	movff	_ntc_val+2,___flsub@a+2
  3753  002436  C10F  F041         	movff	_ntc_val+3,___flsub@a+3
  3754  00243A  0E00               	movlw	0
  3755  00243C  6E3A               	movwf	___flsub@b^0,c
  3756  00243E  0E4C               	movlw	76
  3757  002440  6E3B               	movwf	(___flsub@b+1)^0,c
  3758  002442  0E8A               	movlw	138
  3759  002444  6E3C               	movwf	(___flsub@b+2)^0,c
  3760  002446  0E45               	movlw	69
  3761  002448  6E3D               	movwf	(___flsub@b+3)^0,c
  3762  00244A  ECBC  F02D         	call	___flsub	;wreg free
  3763  00244E  C03A  F042         	movff	?___flsub,___fldiv@b
  3764  002452  C03B  F043         	movff	?___flsub+1,___fldiv@b+1
  3765  002456  C03C  F044         	movff	?___flsub+2,___fldiv@b+2
  3766  00245A  C03D  F045         	movff	?___flsub+3,___fldiv@b+3
  3767  00245E  0E9A               	movlw	154
  3768  002460  6E46               	movwf	___fldiv@a^0,c
  3769  002462  0E99               	movlw	153
  3770  002464  6E47               	movwf	(___fldiv@a+1)^0,c
  3771  002466  0EAA               	movlw	170
  3772  002468  6E48               	movwf	(___fldiv@a+2)^0,c
  3773  00246A  0E42               	movlw	66
  3774  00246C  6E49               	movwf	(___fldiv@a+3)^0,c
  3775  00246E  EC7D  F017         	call	___fldiv	;wreg free
  3776  002472  C042  F108         	movff	?___fldiv,_temp_ntc
  3777  002476  C043  F109         	movff	?___fldiv+1,_temp_ntc+1
  3778  00247A  C044  F10A         	movff	?___fldiv+2,_temp_ntc+2
  3779  00247E  C045  F10B         	movff	?___fldiv+3,_temp_ntc+3
  3780  002482                     
  3781                           ;main.c: 85:             snprintf(string_ntc,sizeof(string_ntc),"NTC=%.f C            ",
      +                          temp_ntc);
  3782  002482  0E00               	movlw	low _string_ntc
  3783  002484  0101               	movlb	1	; () banked
  3784  002486  6FE6               	movwf	snprintf@s& (0+255),b
  3785  002488  0E02               	movlw	high _string_ntc
  3786  00248A  6FE7               	movwf	(snprintf@s+1)& (0+255),b
  3787  00248C  0E00               	movlw	0
  3788  00248E  6FE9               	movwf	(snprintf@n+1)& (0+255),b
  3789  002490  0E64               	movlw	100
  3790  002492  6FE8               	movwf	snprintf@n& (0+255),b
  3791  002494  0E59               	movlw	low STR_4
  3792  002496  6FEA               	movwf	snprintf@fmt& (0+255),b
  3793  002498  0EFF               	movlw	high STR_4
  3794  00249A  6FEB               	movwf	(snprintf@fmt+1)& (0+255),b
  3795  00249C  C108  F1EC         	movff	_temp_ntc,?_snprintf+6
  3796  0024A0  C109  F1ED         	movff	_temp_ntc+1,?_snprintf+7
  3797  0024A4  C10A  F1EE         	movff	_temp_ntc+2,?_snprintf+8
  3798  0024A8  C10B  F1EF         	movff	_temp_ntc+3,?_snprintf+9
  3799  0024AC  EC46  F02F         	call	_snprintf	;wreg free
  3800  0024B0                     
  3801                           ;main.c: 86:             lcd_draw_string(100,100,string_ntc,0xFFFF,0x0000);
  3802  0024B0  0E00               	movlw	0
  3803  0024B2  6E23               	movwf	(lcd_draw_string@x+1)^0,c
  3804  0024B4  0E64               	movlw	100
  3805  0024B6  6E22               	movwf	lcd_draw_string@x^0,c
  3806  0024B8  0E00               	movlw	0
  3807  0024BA  6E25               	movwf	(lcd_draw_string@y+1)^0,c
  3808  0024BC  0E64               	movlw	100
  3809  0024BE  6E24               	movwf	lcd_draw_string@y^0,c
  3810  0024C0  0E00               	movlw	low _string_ntc
  3811  0024C2  6E26               	movwf	lcd_draw_string@pS^0,c
  3812  0024C4  0E02               	movlw	high _string_ntc
  3813  0024C6  6E27               	movwf	(lcd_draw_string@pS+1)^0,c
  3814  0024C8  0EFF               	movlw	255
  3815  0024CA  6E29               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3816  0024CC  6828               	setf	lcd_draw_string@fg_color^0,c
  3817  0024CE  0E00               	movlw	0
  3818  0024D0  6E2B               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3819  0024D2  0E00               	movlw	0
  3820  0024D4  6E2A               	movwf	lcd_draw_string@bg_color^0,c
  3821  0024D6  EC2B  F026         	call	_lcd_draw_string	;wreg free
  3822  0024DA                     
  3823                           ;main.c: 87:                 if (temp_ntc >= 35){
  3824  0024DA  C108  F02A         	movff	_temp_ntc,___flge@ff1
  3825  0024DE  C109  F02B         	movff	_temp_ntc+1,___flge@ff1+1
  3826  0024E2  C10A  F02C         	movff	_temp_ntc+2,___flge@ff1+2
  3827  0024E6  C10B  F02D         	movff	_temp_ntc+3,___flge@ff1+3
  3828  0024EA  0E00               	movlw	0
  3829  0024EC  6E2E               	movwf	___flge@ff2^0,c
  3830  0024EE  0E00               	movlw	0
  3831  0024F0  6E2F               	movwf	(___flge@ff2+1)^0,c
  3832  0024F2  0E0C               	movlw	12
  3833  0024F4  6E30               	movwf	(___flge@ff2+2)^0,c
  3834  0024F6  0E42               	movlw	66
  3835  0024F8  6E31               	movwf	(___flge@ff2+3)^0,c
  3836  0024FA  ECDA  F027         	call	___flge	;wreg free
  3837  0024FE  A0D8               	btfss	status,0,c
  3838  002500  EF84  F012         	goto	u12161
  3839  002504  EF86  F012         	goto	u12160
  3840  002508                     u12161:
  3841  002508  EF89  F012         	goto	l313
  3842  00250C                     u12160:
  3843  00250C  8C89               	bsf	137,6,c	;volatile
  3844  00250E  EF8A  F012         	goto	l9196
  3845  002512                     l313:
  3846  002512  9C89               	bcf	137,6,c	;volatile
  3847  002514                     l9196:
  3848                           
  3849                           ;main.c: 93:                 if (temp_ntc < 20){
  3850  002514  C108  F02A         	movff	_temp_ntc,___flge@ff1
  3851  002518  C109  F02B         	movff	_temp_ntc+1,___flge@ff1+1
  3852  00251C  C10A  F02C         	movff	_temp_ntc+2,___flge@ff1+2
  3853  002520  C10B  F02D         	movff	_temp_ntc+3,___flge@ff1+3
  3854  002524  0E00               	movlw	0
  3855  002526  6E2E               	movwf	___flge@ff2^0,c
  3856  002528  0E00               	movlw	0
  3857  00252A  6E2F               	movwf	(___flge@ff2+1)^0,c
  3858  00252C  0EA0               	movlw	160
  3859  00252E  6E30               	movwf	(___flge@ff2+2)^0,c
  3860  002530  0E41               	movlw	65
  3861  002532  6E31               	movwf	(___flge@ff2+3)^0,c
  3862  002534  ECDA  F027         	call	___flge	;wreg free
  3863  002538  B0D8               	btfsc	status,0,c
  3864  00253A  EFA1  F012         	goto	u12171
  3865  00253E  EFA3  F012         	goto	u12170
  3866  002542                     u12171:
  3867  002542  EFC7  F012         	goto	l9202
  3868  002546                     u12170:
  3869  002546                     
  3870                           ;main.c: 94:                     snprintf(string_ntc_low,sizeof(string_ntc_low),"0FF    
      +                                 ");
  3871  002546  0E64               	movlw	low _string_ntc_low
  3872  002548  0101               	movlb	1	; () banked
  3873  00254A  6FE6               	movwf	snprintf@s& (0+255),b
  3874  00254C  0E03               	movlw	high _string_ntc_low
  3875  00254E  6FE7               	movwf	(snprintf@s+1)& (0+255),b
  3876  002550  0E00               	movlw	0
  3877  002552  6FE9               	movwf	(snprintf@n+1)& (0+255),b
  3878  002554  0E64               	movlw	100
  3879  002556  6FE8               	movwf	snprintf@n& (0+255),b
  3880  002558  0E90               	movlw	low STR_5
  3881  00255A  6FEA               	movwf	snprintf@fmt& (0+255),b
  3882  00255C  0EFF               	movlw	high STR_5
  3883  00255E  6FEB               	movwf	(snprintf@fmt+1)& (0+255),b
  3884  002560  EC46  F02F         	call	_snprintf	;wreg free
  3885  002564                     
  3886                           ;main.c: 95:                     lcd_draw_string(100,80,string_ntc_low,0xFFFF,0x0000);
  3887  002564  0E00               	movlw	0
  3888  002566  6E23               	movwf	(lcd_draw_string@x+1)^0,c
  3889  002568  0E64               	movlw	100
  3890  00256A  6E22               	movwf	lcd_draw_string@x^0,c
  3891  00256C  0E00               	movlw	0
  3892  00256E  6E25               	movwf	(lcd_draw_string@y+1)^0,c
  3893  002570  0E50               	movlw	80
  3894  002572  6E24               	movwf	lcd_draw_string@y^0,c
  3895  002574  0E64               	movlw	low _string_ntc_low
  3896  002576  6E26               	movwf	lcd_draw_string@pS^0,c
  3897  002578  0E03               	movlw	high _string_ntc_low
  3898  00257A  6E27               	movwf	(lcd_draw_string@pS+1)^0,c
  3899  00257C  0EFF               	movlw	255
  3900  00257E  6E29               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3901  002580  6828               	setf	lcd_draw_string@fg_color^0,c
  3902  002582  0E00               	movlw	0
  3903  002584  6E2B               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3904  002586  0E00               	movlw	0
  3905  002588  6E2A               	movwf	lcd_draw_string@bg_color^0,c
  3906  00258A  EC2B  F026         	call	_lcd_draw_string	;wreg free
  3907  00258E                     l9202:
  3908                           
  3909                           ;main.c: 97:                 if (temp_ntc > 30){
  3910  00258E  0E00               	movlw	0
  3911  002590  6E2A               	movwf	___flge@ff1^0,c
  3912  002592  0E00               	movlw	0
  3913  002594  6E2B               	movwf	(___flge@ff1+1)^0,c
  3914  002596  0EF0               	movlw	240
  3915  002598  6E2C               	movwf	(___flge@ff1+2)^0,c
  3916  00259A  0E41               	movlw	65
  3917  00259C  6E2D               	movwf	(___flge@ff1+3)^0,c
  3918  00259E  C108  F02E         	movff	_temp_ntc,___flge@ff2
  3919  0025A2  C109  F02F         	movff	_temp_ntc+1,___flge@ff2+1
  3920  0025A6  C10A  F030         	movff	_temp_ntc+2,___flge@ff2+2
  3921  0025AA  C10B  F031         	movff	_temp_ntc+3,___flge@ff2+3
  3922  0025AE  ECDA  F027         	call	___flge	;wreg free
  3923  0025B2  B0D8               	btfsc	status,0,c
  3924  0025B4  EFDE  F012         	goto	u12181
  3925  0025B8  EFE0  F012         	goto	u12180
  3926  0025BC                     u12181:
  3927  0025BC  EF90  F010         	goto	l9158
  3928  0025C0                     u12180:
  3929  0025C0                     
  3930                           ;main.c: 98:                     snprintf(string_ntc_high,sizeof(string_ntc_high),"1FF  
      +                                   ");
  3931  0025C0  0E00               	movlw	low _string_ntc_high
  3932  0025C2  0101               	movlb	1	; () banked
  3933  0025C4  6FE6               	movwf	snprintf@s& (0+255),b
  3934  0025C6  0E03               	movlw	high _string_ntc_high
  3935  0025C8  6FE7               	movwf	(snprintf@s+1)& (0+255),b
  3936  0025CA  0E00               	movlw	0
  3937  0025CC  6FE9               	movwf	(snprintf@n+1)& (0+255),b
  3938  0025CE  0E64               	movlw	100
  3939  0025D0  6FE8               	movwf	snprintf@n& (0+255),b
  3940  0025D2  0E9F               	movlw	low STR_6
  3941  0025D4  6FEA               	movwf	snprintf@fmt& (0+255),b
  3942  0025D6  0EFF               	movlw	high STR_6
  3943  0025D8  6FEB               	movwf	(snprintf@fmt+1)& (0+255),b
  3944  0025DA  EC46  F02F         	call	_snprintf	;wreg free
  3945  0025DE                     
  3946                           ;main.c: 99:                     lcd_draw_string(100,80,string_ntc_high,0xFFFF,0x0000);
  3947  0025DE  0E00               	movlw	0
  3948  0025E0  6E23               	movwf	(lcd_draw_string@x+1)^0,c
  3949  0025E2  0E64               	movlw	100
  3950  0025E4  6E22               	movwf	lcd_draw_string@x^0,c
  3951  0025E6  0E00               	movlw	0
  3952  0025E8  6E25               	movwf	(lcd_draw_string@y+1)^0,c
  3953  0025EA  0E50               	movlw	80
  3954  0025EC  6E24               	movwf	lcd_draw_string@y^0,c
  3955  0025EE  0E00               	movlw	low _string_ntc_high
  3956  0025F0  6E26               	movwf	lcd_draw_string@pS^0,c
  3957  0025F2  0E03               	movlw	high _string_ntc_high
  3958  0025F4  6E27               	movwf	(lcd_draw_string@pS+1)^0,c
  3959  0025F6  0EFF               	movlw	255
  3960  0025F8  6E29               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3961  0025FA  6828               	setf	lcd_draw_string@fg_color^0,c
  3962  0025FC  0E00               	movlw	0
  3963  0025FE  6E2B               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3964  002600  0E00               	movlw	0
  3965  002602  6E2A               	movwf	lcd_draw_string@bg_color^0,c
  3966  002604  EC2B  F026         	call	_lcd_draw_string	;wreg free
  3967  002608  EF90  F010         	goto	l9158
  3968  00260C  EF1F  F000         	goto	start
  3969  002610                     __end_of_main:
  3970                           	opt callstack 0
  3971                           
  3972 ;; *************** function _snprintf *****************
  3973 ;; Defined at:
  3974 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\snprintf.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;  s               2   10[BANK1 ] PTR unsigned char 
  3977 ;;		 -> string_ntc_high(100), string_ntc_low(100), string_ntc(100), string_pot(100), 
  3978 ;;		 -> string_temp(100), 
  3979 ;;  n               2   12[BANK1 ] unsigned int 
  3980 ;;  fmt             2   14[BANK1 ] PTR const unsigned char 
  3981 ;;		 -> STR_6(15), STR_5(15), STR_4(22), STR_3(16), 
  3982 ;;		 -> STR_2(17), 
  3983 ;; Auto vars:     Size  Location     Type
  3984 ;;  ap              2   22[BANK1 ] PTR void [1]
  3985 ;;		 -> ?_snprintf(2), 
  3986 ;;  ret             2    0        int 
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  2   10[BANK1 ] int 
  3989 ;; Registers used:
  3990 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3996 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3997 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3999 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4000 ;;Total ram usage:       14 bytes
  4001 ;; Hardware stack levels used:    1
  4002 ;; Hardware stack levels required when called:   12
  4003 ;; This function calls:
  4004 ;;		_vsnprintf
  4005 ;; This function is called by:
  4006 ;;		_main
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           
  4010                           	psect	text1
  4011  005E8C                     __ptext1:
  4012                           	opt callstack 0
  4013  005E8C                     _snprintf:
  4014                           	opt callstack 18
  4015  005E8C  0EEC               	movlw	low (?_snprintf+6)
  4016  005E8E  0101               	movlb	1	; () banked
  4017  005E90  6FF2               	movwf	snprintf@ap& (0+255),b
  4018  005E92  0E01               	movlw	high (?_snprintf+6)
  4019  005E94  6FF3               	movwf	(snprintf@ap+1)& (0+255),b
  4020  005E96                     
  4021                           ; BSR set to: 1
  4022  005E96  C1E6  F0EE         	movff	snprintf@s,vsnprintf@s
  4023  005E9A  C1E7  F0EF         	movff	snprintf@s+1,vsnprintf@s+1
  4024  005E9E  C1E8  F0F0         	movff	snprintf@n,vsnprintf@n
  4025  005EA2  C1E9  F0F1         	movff	snprintf@n+1,vsnprintf@n+1
  4026  005EA6  C1EA  F0F2         	movff	snprintf@fmt,vsnprintf@fmt
  4027  005EAA  C1EB  F0F3         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  4028  005EAE  0EF2               	movlw	low snprintf@ap
  4029  005EB0  0100               	movlb	0	; () banked
  4030  005EB2  6FF4               	movwf	vsnprintf@ap& (0+255),b
  4031  005EB4  0E01               	movlw	high snprintf@ap
  4032  005EB6  6FF5               	movwf	(vsnprintf@ap+1)& (0+255),b
  4033  005EB8  EC90  F025         	call	_vsnprintf	;wreg free
  4034  005EBC  0012               	return		;funcret
  4035  005EBE                     __end_of_snprintf:
  4036                           	opt callstack 0
  4037                           
  4038 ;; *************** function _vsnprintf *****************
  4039 ;; Defined at:
  4040 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_vsnprintf.c"
  4041 ;; Parameters:    Size  Location     Type
  4042 ;;  s               2  142[BANK0 ] PTR unsigned char 
  4043 ;;		 -> string_ntc_high(100), string_ntc_low(100), string_ntc(100), string_pot(100), 
  4044 ;;		 -> string_temp(100), 
  4045 ;;  n               2  144[BANK0 ] unsigned int 
  4046 ;;  fmt             2  146[BANK0 ] PTR const unsigned char 
  4047 ;;		 -> STR_6(15), STR_5(15), STR_4(22), STR_3(16), 
  4048 ;;		 -> STR_2(17), 
  4049 ;;  ap              2  148[BANK0 ] PTR PTR void 
  4050 ;;		 -> snprintf@ap(2), 
  4051 ;; Auto vars:     Size  Location     Type
  4052 ;;  f               6    4[BANK1 ] struct _IO_FILE
  4053 ;;  cnt             2    2[BANK1 ] int 
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  2  142[BANK0 ] int 
  4056 ;; Registers used:
  4057 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4063 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4064 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4065 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4066 ;;      Totals:         0      12      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4067 ;;Total ram usage:       22 bytes
  4068 ;; Hardware stack levels used:    1
  4069 ;; Hardware stack levels required when called:   11
  4070 ;; This function calls:
  4071 ;;		_vfprintf
  4072 ;; This function is called by:
  4073 ;;		_snprintf
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           
  4077                           	psect	text2
  4078  004B20                     __ptext2:
  4079                           	opt callstack 0
  4080  004B20                     _vsnprintf:
  4081                           	opt callstack 18
  4082  004B20  0E80               	movlw	128
  4083  004B22  0100               	movlb	0	; () banked
  4084  004B24  5DF1               	subwf	(vsnprintf@n+1)& (0+255),w,b
  4085  004B26  A0D8               	btfss	status,0,c
  4086  004B28  EF98  F025         	goto	u12071
  4087  004B2C  EF9A  F025         	goto	u12070
  4088  004B30                     u12071:
  4089  004B30  EFA4  F025         	goto	l9116
  4090  004B34                     u12070:
  4091  004B34                     
  4092                           ; BSR set to: 0
  4093  004B34  0E00               	movlw	0
  4094  004B36  0101               	movlb	1	; () banked
  4095  004B38  6F19               	movwf	(_errno+1)& (0+255),b
  4096  004B3A  0E4B               	movlw	75
  4097  004B3C  6F18               	movwf	_errno& (0+255),b
  4098  004B3E                     
  4099                           ; BSR set to: 1
  4100  004B3E  0100               	movlb	0	; () banked
  4101  004B40  69EE               	setf	?_vsnprintf& (0+255),b
  4102  004B42  69EF               	setf	(?_vsnprintf+1)& (0+255),b
  4103  004B44  EF2A  F026         	goto	l1665
  4104  004B48                     l9116:
  4105                           
  4106                           ; BSR set to: 0
  4107  004B48  C0EE  F1E0         	movff	vsnprintf@s,vsnprintf@f
  4108  004B4C  C0EF  F1E1         	movff	vsnprintf@s+1,vsnprintf@f+1
  4109  004B50  51F1               	movf	(vsnprintf@n+1)& (0+255),w,b
  4110  004B52  E109               	bnz	u12080
  4111  004B54  0E02               	movlw	2
  4112  004B56  5DF0               	subwf	vsnprintf@n& (0+255),w,b
  4113  004B58  A0D8               	btfss	status,0,c
  4114  004B5A  EFB1  F025         	goto	u12081
  4115  004B5E  EFB3  F025         	goto	u12080
  4116  004B62                     u12081:
  4117  004B62  EFC2  F025         	goto	l9122
  4118  004B66                     u12080:
  4119  004B66                     
  4120                           ; BSR set to: 0
  4121  004B66  0EFF               	movlw	255
  4122  004B68  25F0               	addwf	vsnprintf@n& (0+255),w,b
  4123  004B6A  0101               	movlb	1	; () banked
  4124  004B6C  6FE4               	movwf	(vsnprintf@f+4)& (0+255),b
  4125  004B6E  0EFF               	movlw	255
  4126  004B70  0100               	movlb	0	; () banked
  4127  004B72  21F1               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  4128  004B74  0101               	movlb	1	; () banked
  4129  004B76  6FE5               	movwf	(vsnprintf@f+5)& (0+255),b
  4130  004B78                     
  4131                           ; BSR set to: 1
  4132  004B78  0E00               	movlw	0
  4133  004B7A  6FE3               	movwf	(vsnprintf@f+3)& (0+255),b
  4134  004B7C  0E00               	movlw	0
  4135  004B7E  6FE2               	movwf	(vsnprintf@f+2)& (0+255),b
  4136  004B80  EFCB  F025         	goto	l9124
  4137  004B84                     l9122:
  4138                           
  4139                           ; BSR set to: 0
  4140  004B84  0E00               	movlw	0
  4141  004B86  0101               	movlb	1	; () banked
  4142  004B88  6FE5               	movwf	(vsnprintf@f+5)& (0+255),b
  4143  004B8A  0E01               	movlw	1
  4144  004B8C  6FE4               	movwf	(vsnprintf@f+4)& (0+255),b
  4145  004B8E  0E00               	movlw	0
  4146  004B90  6FE3               	movwf	(vsnprintf@f+3)& (0+255),b
  4147  004B92  0E01               	movlw	1
  4148  004B94  6FE2               	movwf	(vsnprintf@f+2)& (0+255),b
  4149  004B96                     l9124:
  4150                           
  4151                           ; BSR set to: 1
  4152  004B96  0EE0               	movlw	low vsnprintf@f
  4153  004B98  0100               	movlb	0	; () banked
  4154  004B9A  6FE6               	movwf	vfprintf@fp& (0+255),b
  4155  004B9C  0E01               	movlw	high vsnprintf@f
  4156  004B9E  6FE7               	movwf	(vfprintf@fp+1)& (0+255),b
  4157  004BA0  C0F2  F0E8         	movff	vsnprintf@fmt,vfprintf@fmt
  4158  004BA4  C0F3  F0E9         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  4159  004BA8  C0F4  F0EA         	movff	vsnprintf@ap,vfprintf@ap
  4160  004BAC  C0F5  F0EB         	movff	vsnprintf@ap+1,vfprintf@ap+1
  4161  004BB0  EC2B  F02C         	call	_vfprintf	;wreg free
  4162  004BB4  C0E6  F1DE         	movff	?_vfprintf,vsnprintf@cnt
  4163  004BB8  C0E7  F1DF         	movff	?_vfprintf+1,vsnprintf@cnt+1
  4164  004BBC  0100               	movlb	0	; () banked
  4165  004BBE  51F0               	movf	vsnprintf@n& (0+255),w,b
  4166  004BC0  11F1               	iorwf	(vsnprintf@n+1)& (0+255),w,b
  4167  004BC2  B4D8               	btfsc	status,2,c
  4168  004BC4  EFE6  F025         	goto	u12091
  4169  004BC8  EFE8  F025         	goto	u12090
  4170  004BCC                     u12091:
  4171  004BCC  EF26  F026         	goto	l9136
  4172  004BD0                     u12090:
  4173  004BD0                     
  4174                           ; BSR set to: 0
  4175  004BD0  0101               	movlb	1	; () banked
  4176  004BD2  BFDF               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  4177  004BD4  EFEE  F025         	goto	u12101
  4178  004BD8  EFF0  F025         	goto	u12100
  4179  004BDC                     u12101:
  4180  004BDC  EF26  F026         	goto	l9136
  4181  004BE0                     u12100:
  4182  004BE0                     
  4183                           ; BSR set to: 1
  4184  004BE0  0EFF               	movlw	255
  4185  004BE2  0100               	movlb	0	; () banked
  4186  004BE4  6FF6               	movwf	??_vsnprintf& (0+255),b
  4187  004BE6  0EFF               	movlw	255
  4188  004BE8  6FF7               	movwf	(??_vsnprintf+1)& (0+255),b
  4189  004BEA  C0F0  F0F8         	movff	vsnprintf@n,??_vsnprintf+2
  4190  004BEE  C0F1  F0F9         	movff	vsnprintf@n+1,??_vsnprintf+3
  4191  004BF2  51F6               	movf	??_vsnprintf& (0+255),w,b
  4192  004BF4  27F8               	addwf	(??_vsnprintf+2)& (0+255),f,b
  4193  004BF6  51F7               	movf	(??_vsnprintf+1)& (0+255),w,b
  4194  004BF8  23F9               	addwfc	(??_vsnprintf+3)& (0+255),f,b
  4195  004BFA  51F8               	movf	(??_vsnprintf+2)& (0+255),w,b
  4196  004BFC  0101               	movlb	1	; () banked
  4197  004BFE  5DDE               	subwf	vsnprintf@cnt& (0+255),w,b
  4198  004C00  0100               	movlb	0	; () banked
  4199  004C02  51F9               	movf	(??_vsnprintf+3)& (0+255),w,b
  4200  004C04  0101               	movlb	1	; () banked
  4201  004C06  59DF               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  4202  004C08  A0D8               	btfss	status,0,c
  4203  004C0A  EF09  F026         	goto	u12111
  4204  004C0E  EF0B  F026         	goto	u12110
  4205  004C12                     u12111:
  4206  004C12  EF17  F026         	goto	l1670
  4207  004C16                     u12110:
  4208  004C16                     
  4209                           ; BSR set to: 1
  4210  004C16  0EFF               	movlw	255
  4211  004C18  0100               	movlb	0	; () banked
  4212  004C1A  25F0               	addwf	vsnprintf@n& (0+255),w,b
  4213  004C1C  0101               	movlb	1	; () banked
  4214  004C1E  6FDC               	movwf	_vsnprintf$2151& (0+255),b
  4215  004C20  0EFF               	movlw	255
  4216  004C22  0100               	movlb	0	; () banked
  4217  004C24  21F1               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  4218  004C26  0101               	movlb	1	; () banked
  4219  004C28  6FDD               	movwf	(_vsnprintf$2151+1)& (0+255),b
  4220  004C2A  EF1B  F026         	goto	l9134
  4221  004C2E                     l1670:
  4222                           
  4223                           ; BSR set to: 1
  4224  004C2E  C1DE  F1DC         	movff	vsnprintf@cnt,_vsnprintf$2151
  4225  004C32  C1DF  F1DD         	movff	vsnprintf@cnt+1,_vsnprintf$2151+1
  4226  004C36                     l9134:
  4227                           
  4228                           ; BSR set to: 1
  4229  004C36  51DC               	movf	_vsnprintf$2151& (0+255),w,b
  4230  004C38  0100               	movlb	0	; () banked
  4231  004C3A  25EE               	addwf	vsnprintf@s& (0+255),w,b
  4232  004C3C  6ED9               	movwf	fsr2l,c
  4233  004C3E  0101               	movlb	1	; () banked
  4234  004C40  51DD               	movf	(_vsnprintf$2151+1)& (0+255),w,b
  4235  004C42  0100               	movlb	0	; () banked
  4236  004C44  21EF               	addwfc	(vsnprintf@s+1)& (0+255),w,b
  4237  004C46  6EDA               	movwf	fsr2h,c
  4238  004C48  0E00               	movlw	0
  4239  004C4A  6EDF               	movwf	indf2,c
  4240  004C4C                     l9136:
  4241  004C4C  C1DE  F0EE         	movff	vsnprintf@cnt,?_vsnprintf
  4242  004C50  C1DF  F0EF         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  4243  004C54                     l1665:
  4244  004C54  0012               	return		;funcret
  4245  004C56                     __end_of_vsnprintf:
  4246                           	opt callstack 0
  4247                           
  4248 ;; *************** function _vfprintf *****************
  4249 ;; Defined at:
  4250 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;  fp              2  134[BANK0 ] PTR struct _IO_FILE
  4253 ;;		 -> vsnprintf@f(6), 
  4254 ;;  fmt             2  136[BANK0 ] PTR const unsigned char 
  4255 ;;		 -> STR_6(15), STR_5(15), STR_4(22), STR_3(16), 
  4256 ;;		 -> STR_2(17), 
  4257 ;;  ap              2  138[BANK0 ] PTR PTR void 
  4258 ;;		 -> snprintf@ap(2), 
  4259 ;; Auto vars:     Size  Location     Type
  4260 ;;  cfmt            2  140[BANK0 ] PTR unsigned char 
  4261 ;;		 -> STR_6(15), STR_5(15), STR_4(22), STR_3(16), 
  4262 ;;		 -> STR_2(17), 
  4263 ;; Return value:  Size  Location     Type
  4264 ;;                  2  134[BANK0 ] int 
  4265 ;; Registers used:
  4266 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4267 ;; Tracked objects:
  4268 ;;		On entry : 0/0
  4269 ;;		On exit  : 0/0
  4270 ;;		Unchanged: 0/0
  4271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4272 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4273 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4275 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4276 ;;Total ram usage:        8 bytes
  4277 ;; Hardware stack levels used:    1
  4278 ;; Hardware stack levels required when called:   10
  4279 ;; This function calls:
  4280 ;;		_vfpfcnvrt
  4281 ;; This function is called by:
  4282 ;;		_vsnprintf
  4283 ;; This function uses a non-reentrant model
  4284 ;;
  4285                           
  4286                           	psect	text3
  4287  005856                     __ptext3:
  4288                           	opt callstack 0
  4289  005856                     _vfprintf:
  4290                           	opt callstack 18
  4291  005856                     
  4292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4293  005856  C0E8  F0EC         	movff	vfprintf@fmt,vfprintf@cfmt
  4294  00585A  C0E9  F0ED         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4295  00585E                     
  4296                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  4297  00585E  0E00               	movlw	0
  4298  005860  0101               	movlb	1	; () banked
  4299  005862  6F1B               	movwf	(_nout+1)& (0+255),b
  4300  005864  0E00               	movlw	0
  4301  005866  6F1A               	movwf	_nout& (0+255),b
  4302                           
  4303                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4304  005868  EF4D  F02C         	goto	l9106
  4305  00586C                     l9104:
  4306                           
  4307                           ; BSR set to: 1
  4308                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4309  00586C  C0E6  F0B8         	movff	vfprintf@fp,vfpfcnvrt@fp
  4310  005870  C0E7  F0B9         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4311  005874  0EEC               	movlw	low vfprintf@cfmt
  4312  005876  0100               	movlb	0	; () banked
  4313  005878  6FBA               	movwf	vfpfcnvrt@fmt& (0+255),b
  4314  00587A  0E00               	movlw	high vfprintf@cfmt
  4315  00587C  6FBB               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  4316  00587E  C0EA  F0BC         	movff	vfprintf@ap,vfpfcnvrt@ap
  4317  005882  C0EB  F0BD         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4318  005886  EC21  F000         	call	_vfpfcnvrt	;wreg free
  4319  00588A  0100               	movlb	0	; () banked
  4320  00588C  51B8               	movf	?_vfpfcnvrt& (0+255),w,b
  4321  00588E  0101               	movlb	1	; () banked
  4322  005890  271A               	addwf	_nout& (0+255),f,b
  4323  005892  0100               	movlb	0	; () banked
  4324  005894  51B9               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  4325  005896  0101               	movlb	1	; () banked
  4326  005898  231B               	addwfc	(_nout+1)& (0+255),f,b
  4327  00589A                     l9106:
  4328                           
  4329                           ; BSR set to: 1
  4330                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4331  00589A  C0EC  FFF6         	movff	vfprintf@cfmt,tblptrl
  4332  00589E  C0ED  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4333  0058A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4334  0058A2  6AF8               	clrf	tblptru,c
  4335  0058A4                     	endif
  4336  0058A4                     	if	0	;tblptru may be non-zero
  4337  0058A4                     	endif
  4338  0058A4  0008               	tblrd		*
  4339  0058A6  50F5               	movf	tablat,w,c
  4340  0058A8  0900               	iorlw	0
  4341  0058AA  A4D8               	btfss	status,2,c
  4342  0058AC  EF5A  F02C         	goto	u12061
  4343  0058B0  EF5C  F02C         	goto	u12060
  4344  0058B4                     u12061:
  4345  0058B4  EF36  F02C         	goto	l9104
  4346  0058B8                     u12060:
  4347  0058B8                     
  4348                           ; BSR set to: 1
  4349                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4350  0058B8  C11A  F0E6         	movff	_nout,?_vfprintf
  4351  0058BC  C11B  F0E7         	movff	_nout+1,?_vfprintf+1
  4352  0058C0                     
  4353                           ; BSR set to: 1
  4354  0058C0  0012               	return		;funcret
  4355  0058C2                     __end_of_vfprintf:
  4356                           	opt callstack 0
  4357                           
  4358 ;; *************** function _vfpfcnvrt *****************
  4359 ;; Defined at:
  4360 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4361 ;; Parameters:    Size  Location     Type
  4362 ;;  fp              2   88[BANK0 ] PTR struct _IO_FILE
  4363 ;;		 -> vsnprintf@f(6), 
  4364 ;;  fmt             2   90[BANK0 ] PTR PTR unsigned char 
  4365 ;;		 -> vfprintf@cfmt(2), 
  4366 ;;  ap              2   92[BANK0 ] PTR PTR void 
  4367 ;;		 -> snprintf@ap(2), 
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;  llu             8  126[BANK0 ] unsigned long long 
  4370 ;;  ll              8  115[BANK0 ] long long 
  4371 ;;  f               4  108[BANK0 ] long long 
  4372 ;;  ct              3  112[BANK0 ] unsigned char [3]
  4373 ;;  vp              2  123[BANK0 ] PTR void 
  4374 ;;		 -> ?_snprintf(2), tensao_in(4), 
  4375 ;;  done            2  100[BANK0 ] int 
  4376 ;;  cp              2   98[BANK0 ] PTR unsigned char 
  4377 ;;		 -> ?_snprintf(2), tensao_in(4), 
  4378 ;;  i               2    0        int 
  4379 ;;  c               1  125[BANK0 ] unsigned char 
  4380 ;; Return value:  Size  Location     Type
  4381 ;;                  2   88[BANK0 ] int 
  4382 ;; Registers used:
  4383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4384 ;; Tracked objects:
  4385 ;;		On entry : 0/0
  4386 ;;		On exit  : 0/0
  4387 ;;		Unchanged: 0/0
  4388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4389 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4390 ;;      Locals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4391 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4392 ;;      Totals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4393 ;;Total ram usage:       46 bytes
  4394 ;; Hardware stack levels used:    1
  4395 ;; Hardware stack levels required when called:    9
  4396 ;; This function calls:
  4397 ;;		_atoi
  4398 ;;		_ctoa
  4399 ;;		_dtoa
  4400 ;;		_efgtoa
  4401 ;;		_fputc
  4402 ;;		_isdigit
  4403 ;;		_isupper
  4404 ;;		_otoa
  4405 ;;		_stoa
  4406 ;;		_strncmp
  4407 ;;		_tolower
  4408 ;;		_utoa
  4409 ;;		_xtoa
  4410 ;; This function is called by:
  4411 ;;		_vfprintf
  4412 ;; This function uses a non-reentrant model
  4413 ;;
  4414                           
  4415                           	psect	text4
  4416  000042                     __ptext4:
  4417                           	opt callstack 0
  4418  000042                     _vfpfcnvrt:
  4419                           	opt callstack 18
  4420  000042                     
  4421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4422  000042  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4423  000046  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4424  00004A  CFDE FFF6          	movff	postinc2,tblptrl
  4425  00004E  CFDD FFF7          	movff	postdec2,tblptrh
  4426  000052                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4427  000052  6AF8               	clrf	tblptru,c
  4428  000054                     	endif
  4429  000054                     	if	0	;tblptru may be non-zero
  4430  000054                     	endif
  4431  000054  0008               	tblrd		*
  4432  000056  50F5               	movf	tablat,w,c
  4433  000058  0A25               	xorlw	37
  4434  00005A  A4D8               	btfss	status,2,c
  4435  00005C  EF32  F000         	goto	u11541
  4436  000060  EF34  F000         	goto	u11540
  4437  000064                     u11541:
  4438  000064  EF78  F00A         	goto	l9086
  4439  000068                     u11540:
  4440  000068                     
  4441                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4442  000068  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4443  00006C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4444  000070  2ADE               	incf	postinc2,f,c
  4445  000072  0E00               	movlw	0
  4446  000074  22DD               	addwfc	postdec2,f,c
  4447  000076                     
  4448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4449  000076  0E00               	movlw	0
  4450  000078  0100               	movlb	0	; () banked
  4451  00007A  6FFB               	movwf	(_width+1)& (0+255),b
  4452  00007C  0E00               	movlw	0
  4453  00007E  6FFA               	movwf	_width& (0+255),b
  4454  000080  C0FA  F0FC         	movff	_width,_flags
  4455  000084  C0FB  F0FD         	movff	_width+1,_flags+1
  4456  000088                     
  4457                           ; BSR set to: 0
  4458                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4459  000088  685B               	setf	_prec^0,c
  4460  00008A  685C               	setf	(_prec+1)^0,c
  4461  00008C                     
  4462                           ; BSR set to: 0
  4463                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  4464  00008C  0E00               	movlw	0
  4465  00008E  6FC5               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4466  000090  0E00               	movlw	0
  4467  000092  6FC4               	movwf	vfpfcnvrt@done& (0+255),b
  4468                           
  4469                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4470  000094  EF93  F000         	goto	l8766
  4471  000098                     l8740:
  4472                           
  4473                           ; BSR set to: 0
  4474                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  4475  000098  81FC               	bsf	_flags& (0+255),0,b
  4476  00009A                     l8742:
  4477                           
  4478                           ; BSR set to: 0
  4479                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  4480  00009A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4481  00009E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4482  0000A2  2ADE               	incf	postinc2,f,c
  4483  0000A4  0E00               	movlw	0
  4484  0000A6  22DD               	addwfc	postdec2,f,c
  4485                           
  4486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  4487  0000A8  EF93  F000         	goto	l8766
  4488  0000AC                     l8744:
  4489                           
  4490                           ; BSR set to: 0
  4491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  4492  0000AC  83FC               	bsf	_flags& (0+255),1,b
  4493  0000AE  EF4D  F000         	goto	l8742
  4494  0000B2                     l8748:
  4495                           
  4496                           ; BSR set to: 0
  4497                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  4498  0000B2  85FC               	bsf	_flags& (0+255),2,b
  4499  0000B4  EF4D  F000         	goto	l8742
  4500  0000B8                     l8752:
  4501                           
  4502                           ; BSR set to: 0
  4503                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  4504  0000B8  87FC               	bsf	_flags& (0+255),3,b
  4505  0000BA  EF4D  F000         	goto	l8742
  4506  0000BE                     l8756:
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  4510  0000BE  89FC               	bsf	_flags& (0+255),4,b
  4511  0000C0  EF4D  F000         	goto	l8742
  4512  0000C4                     l8760:
  4513                           
  4514                           ; BSR set to: 0
  4515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  4516  0000C4  0E00               	movlw	0
  4517  0000C6  6FC5               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4518  0000C8  0E01               	movlw	1
  4519  0000CA  6FC4               	movwf	vfpfcnvrt@done& (0+255),b
  4520                           
  4521                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  4522  0000CC  EF93  F000         	goto	l8766
  4523  0000D0                     l8764:
  4524                           
  4525                           ; BSR set to: 0
  4526  0000D0  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4527  0000D4  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4528  0000D8  CFDE FFF6          	movff	postinc2,tblptrl
  4529  0000DC  CFDD FFF7          	movff	postdec2,tblptrh
  4530  0000E0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4531  0000E0  6AF8               	clrf	tblptru,c
  4532  0000E2                     	endif
  4533  0000E2                     	if	0	;tblptru may be non-zero
  4534  0000E2                     	endif
  4535  0000E2  0008               	tblrd		*
  4536  0000E4  50F5               	movf	tablat,w,c
  4537  0000E6  6FBE               	movwf	??_vfpfcnvrt& (0+255),b
  4538  0000E8  6BBF               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  4539                           
  4540                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4541                           ; Switch size 1, requested type "simple"
  4542                           ; Number of cases is 1, Range of values is 0 to 0
  4543                           ; switch strategies available:
  4544                           ; Name         Instructions Cycles
  4545                           ; simple_byte            4     3 (average)
  4546                           ;	Chosen strategy is simple_byte
  4547  0000EA  51BF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4548  0000EC  0A00               	xorlw	0	; case 0
  4549  0000EE  B4D8               	btfsc	status,2,c
  4550  0000F0  EF7C  F000         	goto	l9258
  4551  0000F4  EF62  F000         	goto	l8760
  4552  0000F8                     l9258:
  4553                           
  4554                           ; BSR set to: 0
  4555                           ; Switch size 1, requested type "simple"
  4556                           ; Number of cases is 5, Range of values is 32 to 48
  4557                           ; switch strategies available:
  4558                           ; Name         Instructions Cycles
  4559                           ; simple_byte           16     9 (average)
  4560                           ;	Chosen strategy is simple_byte
  4561  0000F8  51BE               	movf	??_vfpfcnvrt& (0+255),w,b
  4562  0000FA  0A20               	xorlw	32	; case 32
  4563  0000FC  B4D8               	btfsc	status,2,c
  4564  0000FE  EF5C  F000         	goto	l8752
  4565  000102  0A03               	xorlw	3	; case 35
  4566  000104  B4D8               	btfsc	status,2,c
  4567  000106  EF5F  F000         	goto	l8756
  4568  00010A  0A08               	xorlw	8	; case 43
  4569  00010C  B4D8               	btfsc	status,2,c
  4570  00010E  EF59  F000         	goto	l8748
  4571  000112  0A06               	xorlw	6	; case 45
  4572  000114  B4D8               	btfsc	status,2,c
  4573  000116  EF4C  F000         	goto	l8740
  4574  00011A  0A1D               	xorlw	29	; case 48
  4575  00011C  B4D8               	btfsc	status,2,c
  4576  00011E  EF56  F000         	goto	l8744
  4577  000122  EF62  F000         	goto	l8760
  4578  000126                     l8766:
  4579                           
  4580                           ; BSR set to: 0
  4581                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4582  000126  51C4               	movf	vfpfcnvrt@done& (0+255),w,b
  4583  000128  11C5               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  4584  00012A  B4D8               	btfsc	status,2,c
  4585  00012C  EF9A  F000         	goto	u11551
  4586  000130  EF9C  F000         	goto	u11550
  4587  000134                     u11551:
  4588  000134  EF68  F000         	goto	l8764
  4589  000138                     u11550:
  4590  000138                     
  4591                           ; BSR set to: 0
  4592                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  4593  000138  A1FC               	btfss	_flags& (0+255),0,b
  4594  00013A  EFA1  F000         	goto	u11561
  4595  00013E  EFA3  F000         	goto	u11560
  4596  000142                     u11561:
  4597  000142  EFA4  F000         	goto	l8770
  4598  000146                     u11560:
  4599  000146                     
  4600                           ; BSR set to: 0
  4601                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  4602  000146  93FC               	bcf	_flags& (0+255),1,b
  4603  000148                     l8770:
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  4607  000148  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4608  00014C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4609  000150  CFDE FFF6          	movff	postinc2,tblptrl
  4610  000154  CFDD FFF7          	movff	postdec2,tblptrh
  4611  000158                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4612  000158  6AF8               	clrf	tblptru,c
  4613  00015A                     	endif
  4614  00015A                     	if	0	;tblptru may be non-zero
  4615  00015A                     	endif
  4616  00015A  0008               	tblrd		*
  4617  00015C  50F5               	movf	tablat,w,c
  4618  00015E  0A2A               	xorlw	42
  4619  000160  A4D8               	btfss	status,2,c
  4620  000162  EFB5  F000         	goto	u11571
  4621  000166  EFB7  F000         	goto	u11570
  4622  00016A                     u11571:
  4623  00016A  EFE0  F000         	goto	l8778
  4624  00016E                     u11570:
  4625  00016E                     
  4626                           ; BSR set to: 0
  4627                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  4628  00016E  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4629  000172  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4630  000176  2ADE               	incf	postinc2,f,c
  4631  000178  0E00               	movlw	0
  4632  00017A  22DD               	addwfc	postdec2,f,c
  4633                           
  4634                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4635  00017C  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4636  000180  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4637  000184  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  4638  000188  0E02               	movlw	2
  4639  00018A  26DE               	addwf	postinc2,f,c
  4640  00018C  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  4641  000190  0E00               	movlw	0
  4642  000192  22DD               	addwfc	postdec2,f,c
  4643  000194  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4644  000198  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4645  00019C  CFDE F0FA          	movff	postinc2,_width
  4646  0001A0  CFDD F0FB          	movff	postdec2,_width+1
  4647  0001A4                     
  4648                           ; BSR set to: 0
  4649                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  4650  0001A4  BFFB               	btfsc	(_width+1)& (0+255),7,b
  4651  0001A6  EFD9  F000         	goto	u11580
  4652  0001AA  EFD7  F000         	goto	u11581
  4653  0001AE                     u11581:
  4654  0001AE  EF25  F001         	goto	l8788
  4655  0001B2                     u11580:
  4656  0001B2                     
  4657                           ; BSR set to: 0
  4658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  4659  0001B2  81FC               	bsf	_flags& (0+255),0,b
  4660                           
  4661                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  4662  0001B4  6DFA               	negf	_width& (0+255),b
  4663  0001B6  1FFB               	comf	(_width+1)& (0+255),f,b
  4664  0001B8  B0D8               	btfsc	status,0,c
  4665  0001BA  2BFB               	incf	(_width+1)& (0+255),f,b
  4666  0001BC  EF25  F001         	goto	l8788
  4667  0001C0                     l8778:
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  4671  0001C0  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4672  0001C4  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4673  0001C8  CFDE F00A          	movff	postinc2,atoi@s
  4674  0001CC  CFDD F00B          	movff	postdec2,atoi@s+1
  4675  0001D0  ECCD  F021         	call	_atoi	;wreg free
  4676  0001D4  C00A  F0FA         	movff	?_atoi,_width
  4677  0001D8  C00B  F0FB         	movff	?_atoi+1,_width+1
  4678                           
  4679                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4680  0001DC  EFF7  F000         	goto	l8782
  4681  0001E0                     l8780:
  4682                           
  4683                           ; BSR set to: 0
  4684                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  4685  0001E0  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4686  0001E4  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4687  0001E8  2ADE               	incf	postinc2,f,c
  4688  0001EA  0E00               	movlw	0
  4689  0001EC  22DD               	addwfc	postdec2,f,c
  4690  0001EE                     l8782:
  4691  0001EE  0ED0               	movlw	208
  4692  0001F0  0100               	movlb	0	; () banked
  4693  0001F2  6FBE               	movwf	??_vfpfcnvrt& (0+255),b
  4694  0001F4  0EFF               	movlw	255
  4695  0001F6  6FBF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4696  0001F8  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4697  0001FC  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4698  000200  CFDE FFF6          	movff	postinc2,tblptrl
  4699  000204  CFDD FFF7          	movff	postdec2,tblptrh
  4700  000208                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4701  000208  6AF8               	clrf	tblptru,c
  4702  00020A                     	endif
  4703  00020A                     	if	0	;tblptru may be non-zero
  4704  00020A                     	endif
  4705  00020A  0008               	tblrd		*
  4706  00020C  50F5               	movf	tablat,w,c
  4707  00020E  6FC0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4708  000210  6BC1               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4709  000212  51BE               	movf	??_vfpfcnvrt& (0+255),w,b
  4710  000214  27C0               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4711  000216  51BF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4712  000218  23C1               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4713  00021A  51C1               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4714  00021C  E10A               	bnz	u11590
  4715  00021E  0E0A               	movlw	10
  4716  000220  5DC0               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4717  000222  A0D8               	btfss	status,0,c
  4718  000224  EF16  F001         	goto	u11591
  4719  000228  EF19  F001         	goto	u11590
  4720  00022C                     u11591:
  4721  00022C  0E01               	movlw	1
  4722  00022E  EF1A  F001         	goto	u11600
  4723  000232                     u11590:
  4724  000232  0E00               	movlw	0
  4725  000234                     u11600:
  4726  000234  6FC6               	movwf	_vfpfcnvrt$1398& (0+255),b
  4727  000236  6BC7               	clrf	(_vfpfcnvrt$1398+1)& (0+255),b
  4728  000238                     
  4729                           ; BSR set to: 0
  4730  000238  51C6               	movf	_vfpfcnvrt$1398& (0+255),w,b
  4731  00023A  11C7               	iorwf	(_vfpfcnvrt$1398+1)& (0+255),w,b
  4732  00023C  A4D8               	btfss	status,2,c
  4733  00023E  EF23  F001         	goto	u11611
  4734  000242  EF25  F001         	goto	u11610
  4735  000246                     u11611:
  4736  000246  EFF0  F000         	goto	l8780
  4737  00024A                     u11610:
  4738  00024A                     l8788:
  4739                           
  4740                           ; BSR set to: 0
  4741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  4742  00024A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4743  00024E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4744  000252  CFDE FFF6          	movff	postinc2,tblptrl
  4745  000256  CFDD FFF7          	movff	postdec2,tblptrh
  4746  00025A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4747  00025A  6AF8               	clrf	tblptru,c
  4748  00025C                     	endif
  4749  00025C                     	if	0	;tblptru may be non-zero
  4750  00025C                     	endif
  4751  00025C  0008               	tblrd		*
  4752  00025E  50F5               	movf	tablat,w,c
  4753  000260  0A2E               	xorlw	46
  4754  000262  A4D8               	btfss	status,2,c
  4755  000264  EF36  F001         	goto	u11621
  4756  000268  EF38  F001         	goto	u11620
  4757  00026C                     u11621:
  4758  00026C  EFB8  F001         	goto	l8808
  4759  000270                     u11620:
  4760  000270                     
  4761                           ; BSR set to: 0
  4762                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  4763  000270  0E00               	movlw	0
  4764  000272  6E5C               	movwf	(_prec+1)^0,c
  4765  000274  0E00               	movlw	0
  4766  000276  6E5B               	movwf	_prec^0,c
  4767  000278                     
  4768                           ; BSR set to: 0
  4769                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  4770  000278  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4771  00027C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4772  000280  2ADE               	incf	postinc2,f,c
  4773  000282  0E00               	movlw	0
  4774  000284  22DD               	addwfc	postdec2,f,c
  4775  000286                     
  4776                           ; BSR set to: 0
  4777                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  4778  000286  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4779  00028A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4780  00028E  CFDE FFF6          	movff	postinc2,tblptrl
  4781  000292  CFDD FFF7          	movff	postdec2,tblptrh
  4782  000296                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4783  000296  6AF8               	clrf	tblptru,c
  4784  000298                     	endif
  4785  000298                     	if	0	;tblptru may be non-zero
  4786  000298                     	endif
  4787  000298  0008               	tblrd		*
  4788  00029A  50F5               	movf	tablat,w,c
  4789  00029C  0A2A               	xorlw	42
  4790  00029E  A4D8               	btfss	status,2,c
  4791  0002A0  EF54  F001         	goto	u11631
  4792  0002A4  EF56  F001         	goto	u11630
  4793  0002A8                     u11631:
  4794  0002A8  EF73  F001         	goto	l8798
  4795  0002AC                     u11630:
  4796  0002AC                     
  4797                           ; BSR set to: 0
  4798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  4799  0002AC  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4800  0002B0  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4801  0002B4  2ADE               	incf	postinc2,f,c
  4802  0002B6  0E00               	movlw	0
  4803  0002B8  22DD               	addwfc	postdec2,f,c
  4804                           
  4805                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4806  0002BA  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4807  0002BE  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4808  0002C2  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  4809  0002C6  0E02               	movlw	2
  4810  0002C8  26DE               	addwf	postinc2,f,c
  4811  0002CA  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  4812  0002CE  0E00               	movlw	0
  4813  0002D0  22DD               	addwfc	postdec2,f,c
  4814  0002D2  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4815  0002D6  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4816  0002DA  CFDE F05B          	movff	postinc2,_prec
  4817  0002DE  CFDD F05C          	movff	postdec2,_prec+1
  4818                           
  4819                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  4820  0002E2  EFB8  F001         	goto	l8808
  4821  0002E6                     l8798:
  4822                           
  4823                           ; BSR set to: 0
  4824                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  4825  0002E6  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4826  0002EA  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4827  0002EE  CFDE F00A          	movff	postinc2,atoi@s
  4828  0002F2  CFDD F00B          	movff	postdec2,atoi@s+1
  4829  0002F6  ECCD  F021         	call	_atoi	;wreg free
  4830  0002FA  C00A  F05B         	movff	?_atoi,_prec
  4831  0002FE  C00B  F05C         	movff	?_atoi+1,_prec+1
  4832                           
  4833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4834  000302  EF8A  F001         	goto	l8802
  4835  000306                     l8800:
  4836                           
  4837                           ; BSR set to: 0
  4838                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  4839  000306  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4840  00030A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4841  00030E  2ADE               	incf	postinc2,f,c
  4842  000310  0E00               	movlw	0
  4843  000312  22DD               	addwfc	postdec2,f,c
  4844  000314                     l8802:
  4845  000314  0ED0               	movlw	208
  4846  000316  0100               	movlb	0	; () banked
  4847  000318  6FBE               	movwf	??_vfpfcnvrt& (0+255),b
  4848  00031A  0EFF               	movlw	255
  4849  00031C  6FBF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4850  00031E  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4851  000322  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4852  000326  CFDE FFF6          	movff	postinc2,tblptrl
  4853  00032A  CFDD FFF7          	movff	postdec2,tblptrh
  4854  00032E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4855  00032E  6AF8               	clrf	tblptru,c
  4856  000330                     	endif
  4857  000330                     	if	0	;tblptru may be non-zero
  4858  000330                     	endif
  4859  000330  0008               	tblrd		*
  4860  000332  50F5               	movf	tablat,w,c
  4861  000334  6FC0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4862  000336  6BC1               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4863  000338  51BE               	movf	??_vfpfcnvrt& (0+255),w,b
  4864  00033A  27C0               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4865  00033C  51BF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4866  00033E  23C1               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4867  000340  51C1               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4868  000342  E10A               	bnz	u11640
  4869  000344  0E0A               	movlw	10
  4870  000346  5DC0               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4871  000348  A0D8               	btfss	status,0,c
  4872  00034A  EFA9  F001         	goto	u11641
  4873  00034E  EFAC  F001         	goto	u11640
  4874  000352                     u11641:
  4875  000352  0E01               	movlw	1
  4876  000354  EFAD  F001         	goto	u11650
  4877  000358                     u11640:
  4878  000358  0E00               	movlw	0
  4879  00035A                     u11650:
  4880  00035A  6FC8               	movwf	_vfpfcnvrt$1399& (0+255),b
  4881  00035C  6BC9               	clrf	(_vfpfcnvrt$1399+1)& (0+255),b
  4882  00035E                     
  4883                           ; BSR set to: 0
  4884  00035E  51C8               	movf	_vfpfcnvrt$1399& (0+255),w,b
  4885  000360  11C9               	iorwf	(_vfpfcnvrt$1399+1)& (0+255),w,b
  4886  000362  A4D8               	btfss	status,2,c
  4887  000364  EFB6  F001         	goto	u11661
  4888  000368  EFB8  F001         	goto	u11660
  4889  00036C                     u11661:
  4890  00036C  EF83  F001         	goto	l8800
  4891  000370                     u11660:
  4892  000370                     l8808:
  4893                           
  4894                           ; BSR set to: 0
  4895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  4896  000370  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4897  000374  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4898  000378  CFDE FFF6          	movff	postinc2,tblptrl
  4899  00037C  CFDD FFF7          	movff	postdec2,tblptrh
  4900  000380                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4901  000380  6AF8               	clrf	tblptru,c
  4902  000382                     	endif
  4903  000382                     	if	0	;tblptru may be non-zero
  4904  000382                     	endif
  4905  000382  0008               	tblrd		*
  4906  000384  50F5               	movf	tablat,w,c
  4907  000386  6E09               	movwf	tolower@c^0,c
  4908  000388  6A0A               	clrf	(tolower@c+1)^0,c
  4909  00038A  EC61  F02C         	call	_tolower	;wreg free
  4910  00038E  5009               	movf	?_tolower^0,w,c
  4911  000390  0100               	movlb	0	; () banked
  4912  000392  6FD0               	movwf	vfpfcnvrt@ct& (0+255),b
  4913  000394                     
  4914                           ; BSR set to: 0
  4915                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  4916  000394  51D0               	movf	vfpfcnvrt@ct& (0+255),w,b
  4917  000396  B4D8               	btfsc	status,2,c
  4918  000398  EFD0  F001         	goto	u11671
  4919  00039C  EFD2  F001         	goto	u11670
  4920  0003A0                     u11671:
  4921  0003A0  EF0E  F002         	goto	l8818
  4922  0003A4                     u11670:
  4923  0003A4                     
  4924                           ; BSR set to: 0
  4925                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  4926  0003A4  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4927  0003A8  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4928  0003AC  CFDE F0BE          	movff	postinc2,??_vfpfcnvrt
  4929  0003B0  CFDD F0BF          	movff	postdec2,??_vfpfcnvrt+1
  4930  0003B4  0E01               	movlw	1
  4931  0003B6  27BE               	addwf	??_vfpfcnvrt& (0+255),f,b
  4932  0003B8  0E00               	movlw	0
  4933  0003BA  23BF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4934  0003BC  C0BE  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4935  0003C0  C0BF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4936  0003C4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4937  0003C4  6AF8               	clrf	tblptru,c
  4938  0003C6                     	endif
  4939  0003C6                     	if	0	;tblptru may be non-zero
  4940  0003C6                     	endif
  4941  0003C6  0008               	tblrd		*
  4942  0003C8  50F5               	movf	tablat,w,c
  4943  0003CA  6E09               	movwf	tolower@c^0,c
  4944  0003CC  6A0A               	clrf	(tolower@c+1)^0,c
  4945  0003CE  EC61  F02C         	call	_tolower	;wreg free
  4946  0003D2  5009               	movf	?_tolower^0,w,c
  4947  0003D4  0100               	movlb	0	; () banked
  4948  0003D6  6FD1               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  4949  0003D8                     
  4950                           ; BSR set to: 0
  4951                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  4952  0003D8  51D1               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  4953  0003DA  B4D8               	btfsc	status,2,c
  4954  0003DC  EFF2  F001         	goto	u11681
  4955  0003E0  EFF4  F001         	goto	u11680
  4956  0003E4                     u11681:
  4957  0003E4  EF0E  F002         	goto	l8818
  4958  0003E8                     u11680:
  4959  0003E8                     
  4960                           ; BSR set to: 0
  4961                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  4962  0003E8  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4963  0003EC  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4964  0003F0  CFDE F0BE          	movff	postinc2,??_vfpfcnvrt
  4965  0003F4  CFDD F0BF          	movff	postdec2,??_vfpfcnvrt+1
  4966  0003F8  0E02               	movlw	2
  4967  0003FA  27BE               	addwf	??_vfpfcnvrt& (0+255),f,b
  4968  0003FC  0E00               	movlw	0
  4969  0003FE  23BF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4970  000400  C0BE  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4971  000404  C0BF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4972  000408                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4973  000408  6AF8               	clrf	tblptru,c
  4974  00040A                     	endif
  4975  00040A                     	if	0	;tblptru may be non-zero
  4976  00040A                     	endif
  4977  00040A  0008               	tblrd		*
  4978  00040C  50F5               	movf	tablat,w,c
  4979  00040E  6E09               	movwf	tolower@c^0,c
  4980  000410  6A0A               	clrf	(tolower@c+1)^0,c
  4981  000412  EC61  F02C         	call	_tolower	;wreg free
  4982  000416  5009               	movf	?_tolower^0,w,c
  4983  000418  0100               	movlb	0	; () banked
  4984  00041A  6FD2               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4985  00041C                     l8818:
  4986                           
  4987                           ; BSR set to: 0
  4988                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  4989  00041C  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4990  000420  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4991  000424  CFDE FFF6          	movff	postinc2,tblptrl
  4992  000428  CFDD FFF7          	movff	postdec2,tblptrh
  4993  00042C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4994  00042C  6AF8               	clrf	tblptru,c
  4995  00042E                     	endif
  4996  00042E                     	if	0	;tblptru may be non-zero
  4997  00042E                     	endif
  4998  00042E  0008               	tblrd		*
  4999  000430  50F5               	movf	tablat,w,c
  5000  000432  0A63               	xorlw	99
  5001  000434  A4D8               	btfss	status,2,c
  5002  000436  EF1F  F002         	goto	u11691
  5003  00043A  EF21  F002         	goto	u11690
  5004  00043E                     u11691:
  5005  00043E  EF48  F002         	goto	l8826
  5006  000442                     u11690:
  5007  000442                     
  5008                           ; BSR set to: 0
  5009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  5010  000442  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5011  000446  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5012  00044A  2ADE               	incf	postinc2,f,c
  5013  00044C  0E00               	movlw	0
  5014  00044E  22DD               	addwfc	postdec2,f,c
  5015                           
  5016                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5017  000450  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5018  000454  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5019  000458  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5020  00045C  0E02               	movlw	2
  5021  00045E  26DE               	addwf	postinc2,f,c
  5022  000460  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5023  000464  0E00               	movlw	0
  5024  000466  22DD               	addwfc	postdec2,f,c
  5025  000468  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5026  00046C  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5027  000470  50DF               	movf	indf2,w,c
  5028  000472  6FDD               	movwf	vfpfcnvrt@c& (0+255),b
  5029  000474                     
  5030                           ; BSR set to: 0
  5031                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  5032  000474  C0B8  F01E         	movff	vfpfcnvrt@fp,ctoa@fp
  5033  000478  C0B9  F01F         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  5034  00047C  C0DD  F020         	movff	vfpfcnvrt@c,ctoa@c
  5035  000480  EC1D  F02D         	call	_ctoa	;wreg free
  5036  000484  C01E  F0B8         	movff	?_ctoa,?_vfpfcnvrt
  5037  000488  C01F  F0B9         	movff	?_ctoa+1,?_vfpfcnvrt+1
  5038  00048C  EF94  F00A         	goto	l759
  5039  000490                     l8826:
  5040                           
  5041                           ; BSR set to: 0
  5042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
  5043  000490  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5044  000494  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5045  000498  CFDE F003          	movff	postinc2,strncmp@_l
  5046  00049C  CFDD F004          	movff	postdec2,strncmp@_l+1
  5047  0004A0  0EC6               	movlw	low STR_15
  5048  0004A2  6E05               	movwf	strncmp@_r^0,c
  5049  0004A4  0EFF               	movlw	high STR_15
  5050  0004A6  6E06               	movwf	(strncmp@_r+1)^0,c
  5051  0004A8  0E00               	movlw	0
  5052  0004AA  6E08               	movwf	(strncmp@n+1)^0,c
  5053  0004AC  0E03               	movlw	3
  5054  0004AE  6E07               	movwf	strncmp@n^0,c
  5055  0004B0  ECC4  F026         	call	_strncmp	;wreg free
  5056  0004B4  5003               	movf	?_strncmp^0,w,c
  5057  0004B6  1004               	iorwf	(?_strncmp+1)^0,w,c
  5058  0004B8  B4D8               	btfsc	status,2,c
  5059  0004BA  EF61  F002         	goto	u11701
  5060  0004BE  EF63  F002         	goto	u11700
  5061  0004C2                     u11701:
  5062  0004C2  EF7E  F002         	goto	l8830
  5063  0004C6                     u11700:
  5064  0004C6  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5065  0004CA  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5066  0004CE  CFDE F003          	movff	postinc2,strncmp@_l
  5067  0004D2  CFDD F004          	movff	postdec2,strncmp@_l+1
  5068  0004D6  0ECE               	movlw	low STR_19
  5069  0004D8  6E05               	movwf	strncmp@_r^0,c
  5070  0004DA  0EFF               	movlw	high STR_19
  5071  0004DC  6E06               	movwf	(strncmp@_r+1)^0,c
  5072  0004DE  0E00               	movlw	0
  5073  0004E0  6E08               	movwf	(strncmp@n+1)^0,c
  5074  0004E2  0E03               	movlw	3
  5075  0004E4  6E07               	movwf	strncmp@n^0,c
  5076  0004E6  ECC4  F026         	call	_strncmp	;wreg free
  5077  0004EA  5003               	movf	?_strncmp^0,w,c
  5078  0004EC  1004               	iorwf	(?_strncmp+1)^0,w,c
  5079  0004EE  A4D8               	btfss	status,2,c
  5080  0004F0  EF7C  F002         	goto	u11711
  5081  0004F4  EF7E  F002         	goto	u11710
  5082  0004F8                     u11711:
  5083  0004F8  EFBF  F002         	goto	l8836
  5084  0004FC                     u11710:
  5085  0004FC                     l8830:
  5086                           
  5087                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
  5088  0004FC  0E03               	movlw	3
  5089  0004FE  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5090  000502  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5091  000506  26DE               	addwf	postinc2,f,c
  5092  000508  0E00               	movlw	0
  5093  00050A  22DD               	addwfc	postdec2,f,c
  5094                           
  5095                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5096  00050C  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5097  000510  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5098  000514  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5099  000518  0E02               	movlw	2
  5100  00051A  26DE               	addwf	postinc2,f,c
  5101  00051C  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5102  000520  0E00               	movlw	0
  5103  000522  22DD               	addwfc	postdec2,f,c
  5104  000524  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5105  000528  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5106  00052C  50DF               	movf	indf2,w,c
  5107  00052E  0100               	movlb	0	; () banked
  5108  000530  6FD3               	movwf	vfpfcnvrt@ll& (0+255),b
  5109  000532  0E00               	movlw	0
  5110  000534  BFD3               	btfsc	vfpfcnvrt@ll& (0+255),7,b
  5111  000536  0EFF               	movlw	-1
  5112  000538  6FD4               	movwf	(vfpfcnvrt@ll+1)& (0+255),b
  5113  00053A  6FD5               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  5114  00053C  6FD6               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  5115  00053E  6FD7               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  5116  000540  6FD8               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  5117  000542  6FD9               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  5118  000544  6FDA               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  5119  000546                     l8832:
  5120                           
  5121                           ; BSR set to: 0
  5122                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
  5123  000546  C0B8  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  5124  00054A  C0B9  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5125  00054E  C0D3  F020         	movff	vfpfcnvrt@ll,dtoa@d
  5126  000552  C0D4  F021         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5127  000556  C0D5  F022         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5128  00055A  C0D6  F023         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5129  00055E  C0D7  F024         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5130  000562  C0D8  F025         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5131  000566  C0D9  F026         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5132  00056A  C0DA  F027         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5133  00056E  EC0D  F01B         	call	_dtoa	;wreg free
  5134  000572  C01E  F0B8         	movff	?_dtoa,?_vfpfcnvrt
  5135  000576  C01F  F0B9         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5136  00057A  EF94  F00A         	goto	l759
  5137  00057E                     l8836:
  5138                           
  5139                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
  5140  00057E  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5141  000582  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5142  000586  CFDE F003          	movff	postinc2,strncmp@_l
  5143  00058A  CFDD F004          	movff	postdec2,strncmp@_l+1
  5144  00058E  0EC7               	movlw	low (STR_15+1)
  5145  000590  6E05               	movwf	strncmp@_r^0,c
  5146  000592  0EFF               	movlw	high (STR_15+1)
  5147  000594  6E06               	movwf	(strncmp@_r+1)^0,c
  5148  000596  0E00               	movlw	0
  5149  000598  6E08               	movwf	(strncmp@n+1)^0,c
  5150  00059A  0E02               	movlw	2
  5151  00059C  6E07               	movwf	strncmp@n^0,c
  5152  00059E  ECC4  F026         	call	_strncmp	;wreg free
  5153  0005A2  5003               	movf	?_strncmp^0,w,c
  5154  0005A4  1004               	iorwf	(?_strncmp+1)^0,w,c
  5155  0005A6  B4D8               	btfsc	status,2,c
  5156  0005A8  EFD8  F002         	goto	u11721
  5157  0005AC  EFDA  F002         	goto	u11720
  5158  0005B0                     u11721:
  5159  0005B0  EFF5  F002         	goto	l8840
  5160  0005B4                     u11720:
  5161  0005B4  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5162  0005B8  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5163  0005BC  CFDE F003          	movff	postinc2,strncmp@_l
  5164  0005C0  CFDD F004          	movff	postdec2,strncmp@_l+1
  5165  0005C4  0ECF               	movlw	low (STR_19+1)
  5166  0005C6  6E05               	movwf	strncmp@_r^0,c
  5167  0005C8  0EFF               	movlw	high (STR_19+1)
  5168  0005CA  6E06               	movwf	(strncmp@_r+1)^0,c
  5169  0005CC  0E00               	movlw	0
  5170  0005CE  6E08               	movwf	(strncmp@n+1)^0,c
  5171  0005D0  0E02               	movlw	2
  5172  0005D2  6E07               	movwf	strncmp@n^0,c
  5173  0005D4  ECC4  F026         	call	_strncmp	;wreg free
  5174  0005D8  5003               	movf	?_strncmp^0,w,c
  5175  0005DA  1004               	iorwf	(?_strncmp+1)^0,w,c
  5176  0005DC  A4D8               	btfss	status,2,c
  5177  0005DE  EFF3  F002         	goto	u11731
  5178  0005E2  EFF5  F002         	goto	u11730
  5179  0005E6                     u11731:
  5180  0005E6  EF1D  F003         	goto	l8846
  5181  0005EA                     u11730:
  5182  0005EA                     l8840:
  5183                           
  5184                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
  5185  0005EA  0E02               	movlw	2
  5186  0005EC  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5187  0005F0  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5188  0005F4  26DE               	addwf	postinc2,f,c
  5189  0005F6  0E00               	movlw	0
  5190  0005F8  22DD               	addwfc	postdec2,f,c
  5191                           
  5192                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5193  0005FA  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5194  0005FE  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5195  000602  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5196  000606  0E02               	movlw	2
  5197  000608  26DE               	addwf	postinc2,f,c
  5198  00060A  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5199  00060E  0E00               	movlw	0
  5200  000610  22DD               	addwfc	postdec2,f,c
  5201  000612  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5202  000616  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5203  00061A  CFDE F0D3          	movff	postinc2,vfpfcnvrt@ll
  5204  00061E  CFDD F0D4          	movff	postdec2,vfpfcnvrt@ll+1
  5205  000622  0100               	movlb	0	; () banked
  5206  000624  0E00               	movlw	0
  5207  000626  BFD4               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  5208  000628  0EFF               	movlw	-1
  5209  00062A  6FD5               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  5210  00062C  6FD6               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  5211  00062E  6FD7               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  5212  000630  6FD8               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  5213  000632  6FD9               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  5214  000634  6FDA               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  5215  000636  EFA3  F002         	goto	l8832
  5216  00063A                     l8846:
  5217                           
  5218                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5219  00063A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5220  00063E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5221  000642  CFDE FFF6          	movff	postinc2,tblptrl
  5222  000646  CFDD FFF7          	movff	postdec2,tblptrh
  5223  00064A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5224  00064A  6AF8               	clrf	tblptru,c
  5225  00064C                     	endif
  5226  00064C                     	if	0	;tblptru may be non-zero
  5227  00064C                     	endif
  5228  00064C  0008               	tblrd		*
  5229  00064E  50F5               	movf	tablat,w,c
  5230  000650  0A64               	xorlw	100
  5231  000652  B4D8               	btfsc	status,2,c
  5232  000654  EF2E  F003         	goto	u11741
  5233  000658  EF30  F003         	goto	u11740
  5234  00065C                     u11741:
  5235  00065C  EF43  F003         	goto	l8850
  5236  000660                     u11740:
  5237  000660  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5238  000664  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5239  000668  CFDE FFF6          	movff	postinc2,tblptrl
  5240  00066C  CFDD FFF7          	movff	postdec2,tblptrh
  5241  000670                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5242  000670  6AF8               	clrf	tblptru,c
  5243  000672                     	endif
  5244  000672                     	if	0	;tblptru may be non-zero
  5245  000672                     	endif
  5246  000672  0008               	tblrd		*
  5247  000674  50F5               	movf	tablat,w,c
  5248  000676  0A69               	xorlw	105
  5249  000678  A4D8               	btfss	status,2,c
  5250  00067A  EF41  F003         	goto	u11751
  5251  00067E  EF43  F003         	goto	u11750
  5252  000682                     u11751:
  5253  000682  EF6A  F003         	goto	l8856
  5254  000686                     u11750:
  5255  000686                     l8850:
  5256                           
  5257                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  5258  000686  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5259  00068A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5260  00068E  2ADE               	incf	postinc2,f,c
  5261  000690  0E00               	movlw	0
  5262  000692  22DD               	addwfc	postdec2,f,c
  5263                           
  5264                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5265  000694  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5266  000698  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5267  00069C  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5268  0006A0  0E02               	movlw	2
  5269  0006A2  26DE               	addwf	postinc2,f,c
  5270  0006A4  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5271  0006A8  0E00               	movlw	0
  5272  0006AA  22DD               	addwfc	postdec2,f,c
  5273  0006AC  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5274  0006B0  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5275  0006B4  CFDE F0D3          	movff	postinc2,vfpfcnvrt@ll
  5276  0006B8  CFDD F0D4          	movff	postdec2,vfpfcnvrt@ll+1
  5277  0006BC  0100               	movlb	0	; () banked
  5278  0006BE  0E00               	movlw	0
  5279  0006C0  BFD4               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  5280  0006C2  0EFF               	movlw	-1
  5281  0006C4  6FD5               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  5282  0006C6  6FD6               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  5283  0006C8  6FD7               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  5284  0006CA  6FD8               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  5285  0006CC  6FD9               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  5286  0006CE  6FDA               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  5287  0006D0  EFA3  F002         	goto	l8832
  5288  0006D4                     l8856:
  5289                           
  5290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
  5291  0006D4  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5292  0006D8  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5293  0006DC  CFDE F003          	movff	postinc2,strncmp@_l
  5294  0006E0  CFDD F004          	movff	postdec2,strncmp@_l+1
  5295  0006E4  0EE9               	movlw	low STR_33
  5296  0006E6  6E05               	movwf	strncmp@_r^0,c
  5297  0006E8  0EFF               	movlw	high STR_33
  5298  0006EA  6E06               	movwf	(strncmp@_r+1)^0,c
  5299  0006EC  0E00               	movlw	0
  5300  0006EE  6E08               	movwf	(strncmp@n+1)^0,c
  5301  0006F0  0E02               	movlw	2
  5302  0006F2  6E07               	movwf	strncmp@n^0,c
  5303  0006F4  ECC4  F026         	call	_strncmp	;wreg free
  5304  0006F8  5003               	movf	?_strncmp^0,w,c
  5305  0006FA  1004               	iorwf	(?_strncmp+1)^0,w,c
  5306  0006FC  B4D8               	btfsc	status,2,c
  5307  0006FE  EF83  F003         	goto	u11761
  5308  000702  EF85  F003         	goto	u11760
  5309  000706                     u11761:
  5310  000706  EFA0  F003         	goto	l8860
  5311  00070A                     u11760:
  5312  00070A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5313  00070E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5314  000712  CFDE F003          	movff	postinc2,strncmp@_l
  5315  000716  CFDD F004          	movff	postdec2,strncmp@_l+1
  5316  00071A  0EEF               	movlw	low STR_37
  5317  00071C  6E05               	movwf	strncmp@_r^0,c
  5318  00071E  0EFF               	movlw	high STR_37
  5319  000720  6E06               	movwf	(strncmp@_r+1)^0,c
  5320  000722  0E00               	movlw	0
  5321  000724  6E08               	movwf	(strncmp@n+1)^0,c
  5322  000726  0E02               	movlw	2
  5323  000728  6E07               	movwf	strncmp@n^0,c
  5324  00072A  ECC4  F026         	call	_strncmp	;wreg free
  5325  00072E  5003               	movf	?_strncmp^0,w,c
  5326  000730  1004               	iorwf	(?_strncmp+1)^0,w,c
  5327  000732  A4D8               	btfss	status,2,c
  5328  000734  EF9E  F003         	goto	u11771
  5329  000738  EFA0  F003         	goto	u11770
  5330  00073C                     u11771:
  5331  00073C  EFC9  F003         	goto	l8866
  5332  000740                     u11770:
  5333  000740                     l8860:
  5334                           
  5335                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
  5336  000740  0E02               	movlw	2
  5337  000742  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5338  000746  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5339  00074A  26DE               	addwf	postinc2,f,c
  5340  00074C  0E00               	movlw	0
  5341  00074E  22DD               	addwfc	postdec2,f,c
  5342                           
  5343                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5344  000750  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5345  000754  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5346  000758  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5347  00075C  0E02               	movlw	2
  5348  00075E  26DE               	addwf	postinc2,f,c
  5349  000760  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5350  000764  0E00               	movlw	0
  5351  000766  22DD               	addwfc	postdec2,f,c
  5352  000768  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5353  00076C  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5354  000770  CFDE F0C0          	movff	postinc2,??_vfpfcnvrt+2
  5355  000774  CFDD F0C1          	movff	postdec2,??_vfpfcnvrt+3
  5356  000778  C0C0  F0D3         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  5357  00077C  C0C1  F0D4         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  5358  000780  0100               	movlb	0	; () banked
  5359  000782  6BD5               	clrf	(vfpfcnvrt@ll+2)& (0+255),b
  5360  000784  6BD6               	clrf	(vfpfcnvrt@ll+3)& (0+255),b
  5361  000786  6BD7               	clrf	(vfpfcnvrt@ll+4)& (0+255),b
  5362  000788  6BD8               	clrf	(vfpfcnvrt@ll+5)& (0+255),b
  5363  00078A  6BD9               	clrf	(vfpfcnvrt@ll+6)& (0+255),b
  5364  00078C  6BDA               	clrf	(vfpfcnvrt@ll+7)& (0+255),b
  5365  00078E  EFA3  F002         	goto	l8832
  5366  000792                     l8866:
  5367                           
  5368                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  5369  000792  0E66               	movlw	102
  5370  000794  0100               	movlb	0	; () banked
  5371  000796  19D0               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  5372  000798  A4D8               	btfss	status,2,c
  5373  00079A  EFD1  F003         	goto	u11781
  5374  00079E  EFD3  F003         	goto	u11780
  5375  0007A2                     u11781:
  5376  0007A2  EF14  F004         	goto	l8878
  5377  0007A6                     u11780:
  5378  0007A6                     
  5379                           ; BSR set to: 0
  5380                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  5381  0007A6  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5382  0007AA  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5383  0007AE  CFDE FFF6          	movff	postinc2,tblptrl
  5384  0007B2  CFDD FFF7          	movff	postdec2,tblptrh
  5385  0007B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5386  0007B6  6AF8               	clrf	tblptru,c
  5387  0007B8                     	endif
  5388  0007B8                     	if	0	;tblptru may be non-zero
  5389  0007B8                     	endif
  5390  0007B8  0008               	tblrd		*
  5391  0007BA  CFF5 F0DD          	movff	tablat,vfpfcnvrt@c
  5392  0007BE                     
  5393                           ; BSR set to: 0
  5394                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  5395  0007BE  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5396  0007C2  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5397  0007C6  2ADE               	incf	postinc2,f,c
  5398  0007C8  0E00               	movlw	0
  5399  0007CA  22DD               	addwfc	postdec2,f,c
  5400  0007CC                     
  5401                           ; BSR set to: 0
  5402                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5403  0007CC  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5404  0007D0  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5405  0007D4  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5406  0007D8  0E04               	movlw	4
  5407  0007DA  26DE               	addwf	postinc2,f,c
  5408  0007DC  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5409  0007E0  0E00               	movlw	0
  5410  0007E2  22DD               	addwfc	postdec2,f,c
  5411  0007E4  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5412  0007E8  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5413  0007EC  CFDE F0CC          	movff	postinc2,vfpfcnvrt@f
  5414  0007F0  CFDE F0CD          	movff	postinc2,vfpfcnvrt@f+1
  5415  0007F4  CFDE F0CE          	movff	postinc2,vfpfcnvrt@f+2
  5416  0007F8  CFDE F0CF          	movff	postinc2,vfpfcnvrt@f+3
  5417  0007FC                     l8874:
  5418                           
  5419                           ; BSR set to: 0
  5420                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  5421  0007FC  C0B8  F074         	movff	vfpfcnvrt@fp,efgtoa@fp
  5422  000800  C0B9  F075         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  5423  000804  C0CC  F076         	movff	vfpfcnvrt@f,efgtoa@f
  5424  000808  C0CD  F077         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  5425  00080C  C0CE  F078         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  5426  000810  C0CF  F079         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  5427  000814  C0DD  F07A         	movff	vfpfcnvrt@c,efgtoa@c
  5428  000818  EC95  F00A         	call	_efgtoa	;wreg free
  5429  00081C  C074  F0B8         	movff	?_efgtoa,?_vfpfcnvrt
  5430  000820  C075  F0B9         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  5431  000824  EF94  F00A         	goto	l759
  5432  000828                     l8878:
  5433                           
  5434                           ; BSR set to: 0
  5435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  5436  000828  0ED0               	movlw	low vfpfcnvrt@ct
  5437  00082A  6E03               	movwf	strncmp@_l^0,c
  5438  00082C  0E00               	movlw	high vfpfcnvrt@ct
  5439  00082E  6E04               	movwf	(strncmp@_l+1)^0,c
  5440  000830  0EEC               	movlw	low STR_42
  5441  000832  6E05               	movwf	strncmp@_r^0,c
  5442  000834  0EFF               	movlw	high STR_42
  5443  000836  6E06               	movwf	(strncmp@_r+1)^0,c
  5444  000838  0E00               	movlw	0
  5445  00083A  6E08               	movwf	(strncmp@n+1)^0,c
  5446  00083C  0E02               	movlw	2
  5447  00083E  6E07               	movwf	strncmp@n^0,c
  5448  000840  ECC4  F026         	call	_strncmp	;wreg free
  5449  000844  5003               	movf	?_strncmp^0,w,c
  5450  000846  1004               	iorwf	(?_strncmp+1)^0,w,c
  5451  000848  A4D8               	btfss	status,2,c
  5452  00084A  EF29  F004         	goto	u11791
  5453  00084E  EF2B  F004         	goto	u11790
  5454  000852                     u11791:
  5455  000852  EFA9  F004         	goto	l8894
  5456  000856                     u11790:
  5457  000856                     
  5458                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  5459  000856  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5460  00085A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5461  00085E  CFDE F0BE          	movff	postinc2,??_vfpfcnvrt
  5462  000862  CFDD F0BF          	movff	postdec2,??_vfpfcnvrt+1
  5463  000866  0E01               	movlw	1
  5464  000868  0100               	movlb	0	; () banked
  5465  00086A  27BE               	addwf	??_vfpfcnvrt& (0+255),f,b
  5466  00086C  0E00               	movlw	0
  5467  00086E  23BF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  5468  000870  C0BE  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5469  000874  C0BF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5470  000878                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5471  000878  6AF8               	clrf	tblptru,c
  5472  00087A                     	endif
  5473  00087A                     	if	0	;tblptru may be non-zero
  5474  00087A                     	endif
  5475  00087A  0008               	tblrd		*
  5476  00087C  CFF5 F0DD          	movff	tablat,vfpfcnvrt@c
  5477  000880  0EBF               	movlw	191
  5478  000882  6FBE               	movwf	??_vfpfcnvrt& (0+255),b
  5479  000884  0EFF               	movlw	255
  5480  000886  6FBF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5481  000888  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5482  00088C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5483  000890  CFDE FFF6          	movff	postinc2,tblptrl
  5484  000894  CFDD FFF7          	movff	postdec2,tblptrh
  5485  000898                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5486  000898  6AF8               	clrf	tblptru,c
  5487  00089A                     	endif
  5488  00089A                     	if	0	;tblptru may be non-zero
  5489  00089A                     	endif
  5490  00089A  0008               	tblrd		*
  5491  00089C  50F5               	movf	tablat,w,c
  5492  00089E  6FC0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5493  0008A0  6BC1               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5494  0008A2  51BE               	movf	??_vfpfcnvrt& (0+255),w,b
  5495  0008A4  27C0               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5496  0008A6  51BF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5497  0008A8  23C1               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5498  0008AA  51C1               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5499  0008AC  E10A               	bnz	u11800
  5500  0008AE  0E1A               	movlw	26
  5501  0008B0  5DC0               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5502  0008B2  A0D8               	btfss	status,0,c
  5503  0008B4  EF5E  F004         	goto	u11801
  5504  0008B8  EF61  F004         	goto	u11800
  5505  0008BC                     u11801:
  5506  0008BC  0E01               	movlw	1
  5507  0008BE  EF62  F004         	goto	u11810
  5508  0008C2                     u11800:
  5509  0008C2  0E00               	movlw	0
  5510  0008C4                     u11810:
  5511  0008C4  6FCA               	movwf	_vfpfcnvrt$1420& (0+255),b
  5512  0008C6  6BCB               	clrf	(_vfpfcnvrt$1420+1)& (0+255),b
  5513  0008C8                     
  5514                           ; BSR set to: 0
  5515  0008C8  51CA               	movf	_vfpfcnvrt$1420& (0+255),w,b
  5516  0008CA  11CB               	iorwf	(_vfpfcnvrt$1420+1)& (0+255),w,b
  5517  0008CC  B4D8               	btfsc	status,2,c
  5518  0008CE  EF6B  F004         	goto	u11821
  5519  0008D2  EF6D  F004         	goto	u11820
  5520  0008D6                     u11821:
  5521  0008D6  EF87  F004         	goto	l8888
  5522  0008DA                     u11820:
  5523  0008DA                     
  5524                           ; BSR set to: 0
  5525                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  5526  0008DA  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5527  0008DE  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5528  0008E2  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5529  0008E6  0E04               	movlw	4
  5530  0008E8  26DE               	addwf	postinc2,f,c
  5531  0008EA  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5532  0008EE  0E00               	movlw	0
  5533  0008F0  22DD               	addwfc	postdec2,f,c
  5534  0008F2  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5535  0008F6  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5536  0008FA  CFDE F0CC          	movff	postinc2,vfpfcnvrt@f
  5537  0008FE  CFDE F0CD          	movff	postinc2,vfpfcnvrt@f+1
  5538  000902  CFDE F0CE          	movff	postinc2,vfpfcnvrt@f+2
  5539  000906  CFDE F0CF          	movff	postinc2,vfpfcnvrt@f+3
  5540                           
  5541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  5542  00090A  EF9F  F004         	goto	l779
  5543  00090E                     l8888:
  5544                           
  5545                           ; BSR set to: 0
  5546                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5547  00090E  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5548  000912  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5549  000916  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5550  00091A  0E04               	movlw	4
  5551  00091C  26DE               	addwf	postinc2,f,c
  5552  00091E  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5553  000922  0E00               	movlw	0
  5554  000924  22DD               	addwfc	postdec2,f,c
  5555  000926  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5556  00092A  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5557  00092E  CFDE F0CC          	movff	postinc2,vfpfcnvrt@f
  5558  000932  CFDE F0CD          	movff	postinc2,vfpfcnvrt@f+1
  5559  000936  CFDE F0CE          	movff	postinc2,vfpfcnvrt@f+2
  5560  00093A  CFDE F0CF          	movff	postinc2,vfpfcnvrt@f+3
  5561  00093E                     l779:
  5562                           
  5563                           ; BSR set to: 0
  5564                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  5565  00093E  0E02               	movlw	2
  5566  000940  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5567  000944  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5568  000948  26DE               	addwf	postinc2,f,c
  5569  00094A  0E00               	movlw	0
  5570  00094C  22DD               	addwfc	postdec2,f,c
  5571  00094E  EFFE  F003         	goto	l8874
  5572  000952                     l8894:
  5573                           
  5574                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  5575  000952  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5576  000956  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5577  00095A  CFDE F003          	movff	postinc2,strncmp@_l
  5578  00095E  CFDD F004          	movff	postdec2,strncmp@_l+1
  5579  000962  0EDA               	movlw	low STR_47
  5580  000964  6E05               	movwf	strncmp@_r^0,c
  5581  000966  0EFF               	movlw	high STR_47
  5582  000968  6E06               	movwf	(strncmp@_r+1)^0,c
  5583  00096A  0E00               	movlw	0
  5584  00096C  6E08               	movwf	(strncmp@n+1)^0,c
  5585  00096E  0E03               	movlw	3
  5586  000970  6E07               	movwf	strncmp@n^0,c
  5587  000972  ECC4  F026         	call	_strncmp	;wreg free
  5588  000976  5003               	movf	?_strncmp^0,w,c
  5589  000978  1004               	iorwf	(?_strncmp+1)^0,w,c
  5590  00097A  A4D8               	btfss	status,2,c
  5591  00097C  EFC2  F004         	goto	u11831
  5592  000980  EFC4  F004         	goto	u11830
  5593  000984                     u11831:
  5594  000984  EF04  F005         	goto	l8902
  5595  000988                     u11830:
  5596  000988                     
  5597                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  5598  000988  0E03               	movlw	3
  5599  00098A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5600  00098E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5601  000992  26DE               	addwf	postinc2,f,c
  5602  000994  0E00               	movlw	0
  5603  000996  22DD               	addwfc	postdec2,f,c
  5604                           
  5605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5606  000998  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5607  00099C  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5608  0009A0  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5609  0009A4  0E02               	movlw	2
  5610  0009A6  26DE               	addwf	postinc2,f,c
  5611  0009A8  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5612  0009AC  0E00               	movlw	0
  5613  0009AE  22DD               	addwfc	postdec2,f,c
  5614  0009B0  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5615  0009B4  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5616  0009B8  50DF               	movf	indf2,w,c
  5617  0009BA  0100               	movlb	0	; () banked
  5618  0009BC  6FC0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5619  0009BE  51C0               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  5620  0009C0  6FDE               	movwf	vfpfcnvrt@llu& (0+255),b
  5621  0009C2  6BDF               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  5622  0009C4  6BE0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5623  0009C6  6BE1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5624  0009C8  6BE2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5625  0009CA  6BE3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5626  0009CC  6BE4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5627  0009CE  6BE5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5628  0009D0                     l8898:
  5629                           
  5630                           ; BSR set to: 0
  5631                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
  5632  0009D0  C0B8  F01E         	movff	vfpfcnvrt@fp,otoa@fp
  5633  0009D4  C0B9  F01F         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  5634  0009D8  C0DE  F020         	movff	vfpfcnvrt@llu,otoa@d
  5635  0009DC  C0DF  F021         	movff	vfpfcnvrt@llu+1,otoa@d+1
  5636  0009E0  C0E0  F022         	movff	vfpfcnvrt@llu+2,otoa@d+2
  5637  0009E4  C0E1  F023         	movff	vfpfcnvrt@llu+3,otoa@d+3
  5638  0009E8  C0E2  F024         	movff	vfpfcnvrt@llu+4,otoa@d+4
  5639  0009EC  C0E3  F025         	movff	vfpfcnvrt@llu+5,otoa@d+5
  5640  0009F0  C0E4  F026         	movff	vfpfcnvrt@llu+6,otoa@d+6
  5641  0009F4  C0E5  F027         	movff	vfpfcnvrt@llu+7,otoa@d+7
  5642  0009F8  ECFB  F01F         	call	_otoa	;wreg free
  5643  0009FC  C01E  F0B8         	movff	?_otoa,?_vfpfcnvrt
  5644  000A00  C01F  F0B9         	movff	?_otoa+1,?_vfpfcnvrt+1
  5645  000A04  EF94  F00A         	goto	l759
  5646  000A08                     l8902:
  5647                           
  5648                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  5649  000A08  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5650  000A0C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5651  000A10  CFDE F003          	movff	postinc2,strncmp@_l
  5652  000A14  CFDD F004          	movff	postdec2,strncmp@_l+1
  5653  000A18  0EDB               	movlw	low (STR_47+1)
  5654  000A1A  6E05               	movwf	strncmp@_r^0,c
  5655  000A1C  0EFF               	movlw	high (STR_47+1)
  5656  000A1E  6E06               	movwf	(strncmp@_r+1)^0,c
  5657  000A20  0E00               	movlw	0
  5658  000A22  6E08               	movwf	(strncmp@n+1)^0,c
  5659  000A24  0E02               	movlw	2
  5660  000A26  6E07               	movwf	strncmp@n^0,c
  5661  000A28  ECC4  F026         	call	_strncmp	;wreg free
  5662  000A2C  5003               	movf	?_strncmp^0,w,c
  5663  000A2E  1004               	iorwf	(?_strncmp+1)^0,w,c
  5664  000A30  A4D8               	btfss	status,2,c
  5665  000A32  EF1D  F005         	goto	u11841
  5666  000A36  EF1F  F005         	goto	u11840
  5667  000A3A                     u11841:
  5668  000A3A  EF48  F005         	goto	l8910
  5669  000A3E                     u11840:
  5670  000A3E                     
  5671                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  5672  000A3E  0E02               	movlw	2
  5673  000A40  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5674  000A44  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5675  000A48  26DE               	addwf	postinc2,f,c
  5676  000A4A  0E00               	movlw	0
  5677  000A4C  22DD               	addwfc	postdec2,f,c
  5678                           
  5679                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5680  000A4E  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5681  000A52  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5682  000A56  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5683  000A5A  0E02               	movlw	2
  5684  000A5C  26DE               	addwf	postinc2,f,c
  5685  000A5E  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5686  000A62  0E00               	movlw	0
  5687  000A64  22DD               	addwfc	postdec2,f,c
  5688  000A66  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5689  000A6A  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5690  000A6E  CFDE F0C0          	movff	postinc2,??_vfpfcnvrt+2
  5691  000A72  CFDD F0C1          	movff	postdec2,??_vfpfcnvrt+3
  5692  000A76  C0C0  F0DE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5693  000A7A  C0C1  F0DF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5694  000A7E  0100               	movlb	0	; () banked
  5695  000A80  6BE0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5696  000A82  6BE1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5697  000A84  6BE2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5698  000A86  6BE3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5699  000A88  6BE4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5700  000A8A  6BE5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5701  000A8C  EFE8  F004         	goto	l8898
  5702  000A90                     l8910:
  5703                           
  5704                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
  5705  000A90  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5706  000A94  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5707  000A98  CFDE FFF6          	movff	postinc2,tblptrl
  5708  000A9C  CFDD FFF7          	movff	postdec2,tblptrh
  5709  000AA0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5710  000AA0  6AF8               	clrf	tblptru,c
  5711  000AA2                     	endif
  5712  000AA2                     	if	0	;tblptru may be non-zero
  5713  000AA2                     	endif
  5714  000AA2  0008               	tblrd		*
  5715  000AA4  50F5               	movf	tablat,w,c
  5716  000AA6  0A6F               	xorlw	111
  5717  000AA8  A4D8               	btfss	status,2,c
  5718  000AAA  EF59  F005         	goto	u11851
  5719  000AAE  EF5B  F005         	goto	u11850
  5720  000AB2                     u11851:
  5721  000AB2  EF83  F005         	goto	l8918
  5722  000AB6                     u11850:
  5723  000AB6                     
  5724                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
  5725  000AB6  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5726  000ABA  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5727  000ABE  2ADE               	incf	postinc2,f,c
  5728  000AC0  0E00               	movlw	0
  5729  000AC2  22DD               	addwfc	postdec2,f,c
  5730                           
  5731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
  5732  000AC4  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5733  000AC8  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5734  000ACC  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5735  000AD0  0E02               	movlw	2
  5736  000AD2  26DE               	addwf	postinc2,f,c
  5737  000AD4  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5738  000AD8  0E00               	movlw	0
  5739  000ADA  22DD               	addwfc	postdec2,f,c
  5740  000ADC  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5741  000AE0  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5742  000AE4  CFDE F0C0          	movff	postinc2,??_vfpfcnvrt+2
  5743  000AE8  CFDD F0C1          	movff	postdec2,??_vfpfcnvrt+3
  5744  000AEC  C0C0  F0DE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5745  000AF0  C0C1  F0DF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5746  000AF4  0100               	movlb	0	; () banked
  5747  000AF6  6BE0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5748  000AF8  6BE1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5749  000AFA  6BE2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5750  000AFC  6BE3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5751  000AFE  6BE4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5752  000B00  6BE5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5753  000B02  EFE8  F004         	goto	l8898
  5754  000B06                     l8918:
  5755                           
  5756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  5757  000B06  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5758  000B0A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5759  000B0E  CFDE F003          	movff	postinc2,strncmp@_l
  5760  000B12  CFDD F004          	movff	postdec2,strncmp@_l+1
  5761  000B16  0EF5               	movlw	low STR_57
  5762  000B18  6E05               	movwf	strncmp@_r^0,c
  5763  000B1A  0EFF               	movlw	high STR_57
  5764  000B1C  6E06               	movwf	(strncmp@_r+1)^0,c
  5765  000B1E  0E00               	movlw	0
  5766  000B20  6E08               	movwf	(strncmp@n+1)^0,c
  5767  000B22  0E02               	movlw	2
  5768  000B24  6E07               	movwf	strncmp@n^0,c
  5769  000B26  ECC4  F026         	call	_strncmp	;wreg free
  5770  000B2A  5003               	movf	?_strncmp^0,w,c
  5771  000B2C  1004               	iorwf	(?_strncmp+1)^0,w,c
  5772  000B2E  A4D8               	btfss	status,2,c
  5773  000B30  EF9C  F005         	goto	u11861
  5774  000B34  EF9E  F005         	goto	u11860
  5775  000B38                     u11861:
  5776  000B38  EFC7  F005         	goto	l8926
  5777  000B3C                     u11860:
  5778  000B3C                     
  5779                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  5780  000B3C  0E02               	movlw	2
  5781  000B3E  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5782  000B42  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5783  000B46  26DE               	addwf	postinc2,f,c
  5784  000B48  0E00               	movlw	0
  5785  000B4A  22DD               	addwfc	postdec2,f,c
  5786                           
  5787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5788  000B4C  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5789  000B50  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5790  000B54  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5791  000B58  0E02               	movlw	2
  5792  000B5A  26DE               	addwf	postinc2,f,c
  5793  000B5C  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5794  000B60  0E00               	movlw	0
  5795  000B62  22DD               	addwfc	postdec2,f,c
  5796  000B64  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5797  000B68  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5798  000B6C  CFDE F0C0          	movff	postinc2,??_vfpfcnvrt+2
  5799  000B70  CFDD F0C1          	movff	postdec2,??_vfpfcnvrt+3
  5800  000B74  C0C0  F0DE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5801  000B78  C0C1  F0DF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5802  000B7C  0100               	movlb	0	; () banked
  5803  000B7E  6BE0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5804  000B80  6BE1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5805  000B82  6BE2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5806  000B84  6BE3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5807  000B86  6BE4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5808  000B88  6BE5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5809  000B8A  EFE8  F004         	goto	l8898
  5810  000B8E                     l8926:
  5811                           
  5812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  5813  000B8E  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5814  000B92  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5815  000B96  CFDE F003          	movff	postinc2,strncmp@_l
  5816  000B9A  CFDD F004          	movff	postdec2,strncmp@_l+1
  5817  000B9E  0ED6               	movlw	low STR_62
  5818  000BA0  6E05               	movwf	strncmp@_r^0,c
  5819  000BA2  0EFF               	movlw	high STR_62
  5820  000BA4  6E06               	movwf	(strncmp@_r+1)^0,c
  5821  000BA6  0E00               	movlw	0
  5822  000BA8  6E08               	movwf	(strncmp@n+1)^0,c
  5823  000BAA  0E03               	movlw	3
  5824  000BAC  6E07               	movwf	strncmp@n^0,c
  5825  000BAE  ECC4  F026         	call	_strncmp	;wreg free
  5826  000BB2  5003               	movf	?_strncmp^0,w,c
  5827  000BB4  1004               	iorwf	(?_strncmp+1)^0,w,c
  5828  000BB6  A4D8               	btfss	status,2,c
  5829  000BB8  EFE0  F005         	goto	u11871
  5830  000BBC  EFE2  F005         	goto	u11870
  5831  000BC0                     u11871:
  5832  000BC0  EF0B  F006         	goto	l8936
  5833  000BC4                     u11870:
  5834  000BC4                     
  5835                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  5836  000BC4  0E03               	movlw	3
  5837  000BC6  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5838  000BCA  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5839  000BCE  26DE               	addwf	postinc2,f,c
  5840  000BD0  0E00               	movlw	0
  5841  000BD2  22DD               	addwfc	postdec2,f,c
  5842                           
  5843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5844  000BD4  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5845  000BD8  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5846  000BDC  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5847  000BE0  0E02               	movlw	2
  5848  000BE2  26DE               	addwf	postinc2,f,c
  5849  000BE4  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5850  000BE8  0E00               	movlw	0
  5851  000BEA  22DD               	addwfc	postdec2,f,c
  5852  000BEC  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5853  000BF0  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5854  000BF4  CFDE F0DB          	movff	postinc2,vfpfcnvrt@vp
  5855  000BF8  CFDD F0DC          	movff	postdec2,vfpfcnvrt@vp+1
  5856  000BFC                     
  5857                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
  5858  000BFC  C0DB  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5859  000C00  C0DC  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5860  000C04  C11A  FFDF         	movff	_nout,indf2
  5861  000C08                     l8932:
  5862                           
  5863                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
  5864  000C08  0E00               	movlw	0
  5865  000C0A  0100               	movlb	0	; () banked
  5866  000C0C  6FB9               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  5867  000C0E  0E00               	movlw	0
  5868  000C10  6FB8               	movwf	?_vfpfcnvrt& (0+255),b
  5869  000C12  EF94  F00A         	goto	l759
  5870  000C16                     l8936:
  5871                           
  5872                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  5873  000C16  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5874  000C1A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5875  000C1E  CFDE F003          	movff	postinc2,strncmp@_l
  5876  000C22  CFDD F004          	movff	postdec2,strncmp@_l+1
  5877  000C26  0ED7               	movlw	low (STR_62+1)
  5878  000C28  6E05               	movwf	strncmp@_r^0,c
  5879  000C2A  0EFF               	movlw	high (STR_62+1)
  5880  000C2C  6E06               	movwf	(strncmp@_r+1)^0,c
  5881  000C2E  0E00               	movlw	0
  5882  000C30  6E08               	movwf	(strncmp@n+1)^0,c
  5883  000C32  0E02               	movlw	2
  5884  000C34  6E07               	movwf	strncmp@n^0,c
  5885  000C36  ECC4  F026         	call	_strncmp	;wreg free
  5886  000C3A  5003               	movf	?_strncmp^0,w,c
  5887  000C3C  1004               	iorwf	(?_strncmp+1)^0,w,c
  5888  000C3E  A4D8               	btfss	status,2,c
  5889  000C40  EF24  F006         	goto	u11881
  5890  000C44  EF26  F006         	goto	u11880
  5891  000C48                     u11881:
  5892  000C48  EF4C  F006         	goto	l8946
  5893  000C4C                     u11880:
  5894  000C4C                     
  5895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  5896  000C4C  0E02               	movlw	2
  5897  000C4E  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5898  000C52  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5899  000C56  26DE               	addwf	postinc2,f,c
  5900  000C58  0E00               	movlw	0
  5901  000C5A  22DD               	addwfc	postdec2,f,c
  5902                           
  5903                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  5904  000C5C  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5905  000C60  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5906  000C64  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5907  000C68  0E02               	movlw	2
  5908  000C6A  26DE               	addwf	postinc2,f,c
  5909  000C6C  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5910  000C70  0E00               	movlw	0
  5911  000C72  22DD               	addwfc	postdec2,f,c
  5912  000C74  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5913  000C78  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5914  000C7C  CFDE F0DB          	movff	postinc2,vfpfcnvrt@vp
  5915  000C80  CFDD F0DC          	movff	postdec2,vfpfcnvrt@vp+1
  5916  000C84                     
  5917                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
  5918  000C84  C0DB  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5919  000C88  C0DC  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5920  000C8C  C11A  FFDE         	movff	_nout,postinc2
  5921  000C90  C11B  FFDD         	movff	_nout+1,postdec2
  5922  000C94  EF04  F006         	goto	l8932
  5923  000C98                     l8946:
  5924                           
  5925                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  5926  000C98  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5927  000C9C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5928  000CA0  CFDE FFF6          	movff	postinc2,tblptrl
  5929  000CA4  CFDD FFF7          	movff	postdec2,tblptrh
  5930  000CA8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5931  000CA8  6AF8               	clrf	tblptru,c
  5932  000CAA                     	endif
  5933  000CAA                     	if	0	;tblptru may be non-zero
  5934  000CAA                     	endif
  5935  000CAA  0008               	tblrd		*
  5936  000CAC  50F5               	movf	tablat,w,c
  5937  000CAE  0A6E               	xorlw	110
  5938  000CB0  A4D8               	btfss	status,2,c
  5939  000CB2  EF5D  F006         	goto	u11891
  5940  000CB6  EF5F  F006         	goto	u11890
  5941  000CBA                     u11891:
  5942  000CBA  EF84  F006         	goto	l8956
  5943  000CBE                     u11890:
  5944  000CBE                     
  5945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  5946  000CBE  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5947  000CC2  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5948  000CC6  2ADE               	incf	postinc2,f,c
  5949  000CC8  0E00               	movlw	0
  5950  000CCA  22DD               	addwfc	postdec2,f,c
  5951                           
  5952                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  5953  000CCC  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5954  000CD0  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5955  000CD4  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5956  000CD8  0E02               	movlw	2
  5957  000CDA  26DE               	addwf	postinc2,f,c
  5958  000CDC  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5959  000CE0  0E00               	movlw	0
  5960  000CE2  22DD               	addwfc	postdec2,f,c
  5961  000CE4  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5962  000CE8  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5963  000CEC  CFDE F0DB          	movff	postinc2,vfpfcnvrt@vp
  5964  000CF0  CFDD F0DC          	movff	postdec2,vfpfcnvrt@vp+1
  5965  000CF4                     
  5966                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  5967  000CF4  C0DB  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5968  000CF8  C0DC  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5969  000CFC  C11A  FFDE         	movff	_nout,postinc2
  5970  000D00  C11B  FFDD         	movff	_nout+1,postdec2
  5971  000D04  EF04  F006         	goto	l8932
  5972  000D08                     l8956:
  5973                           
  5974                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  5975  000D08  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5976  000D0C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5977  000D10  CFDE F003          	movff	postinc2,strncmp@_l
  5978  000D14  CFDD F004          	movff	postdec2,strncmp@_l+1
  5979  000D18  0EF2               	movlw	low STR_72
  5980  000D1A  6E05               	movwf	strncmp@_r^0,c
  5981  000D1C  0EFF               	movlw	high STR_72
  5982  000D1E  6E06               	movwf	(strncmp@_r+1)^0,c
  5983  000D20  0E00               	movlw	0
  5984  000D22  6E08               	movwf	(strncmp@n+1)^0,c
  5985  000D24  0E02               	movlw	2
  5986  000D26  6E07               	movwf	strncmp@n^0,c
  5987  000D28  ECC4  F026         	call	_strncmp	;wreg free
  5988  000D2C  5003               	movf	?_strncmp^0,w,c
  5989  000D2E  1004               	iorwf	(?_strncmp+1)^0,w,c
  5990  000D30  A4D8               	btfss	status,2,c
  5991  000D32  EF9D  F006         	goto	u11901
  5992  000D36  EF9F  F006         	goto	u11900
  5993  000D3A                     u11901:
  5994  000D3A  EFC5  F006         	goto	l8966
  5995  000D3E                     u11900:
  5996  000D3E                     
  5997                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  5998  000D3E  0E02               	movlw	2
  5999  000D40  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6000  000D44  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6001  000D48  26DE               	addwf	postinc2,f,c
  6002  000D4A  0E00               	movlw	0
  6003  000D4C  22DD               	addwfc	postdec2,f,c
  6004                           
  6005                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  6006  000D4E  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6007  000D52  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6008  000D56  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  6009  000D5A  0E02               	movlw	2
  6010  000D5C  26DE               	addwf	postinc2,f,c
  6011  000D5E  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  6012  000D62  0E00               	movlw	0
  6013  000D64  22DD               	addwfc	postdec2,f,c
  6014  000D66  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6015  000D6A  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6016  000D6E  CFDE F0DB          	movff	postinc2,vfpfcnvrt@vp
  6017  000D72  CFDD F0DC          	movff	postdec2,vfpfcnvrt@vp+1
  6018  000D76                     
  6019                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
  6020  000D76  C0DB  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  6021  000D7A  C0DC  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  6022  000D7E  C11A  FFDE         	movff	_nout,postinc2
  6023  000D82  C11B  FFDD         	movff	_nout+1,postdec2
  6024  000D86  EF04  F006         	goto	l8932
  6025  000D8A                     l8966:
  6026                           
  6027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
  6028  000D8A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6029  000D8E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6030  000D92  CFDE FFF6          	movff	postinc2,tblptrl
  6031  000D96  CFDD FFF7          	movff	postdec2,tblptrh
  6032  000D9A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6033  000D9A  6AF8               	clrf	tblptru,c
  6034  000D9C                     	endif
  6035  000D9C                     	if	0	;tblptru may be non-zero
  6036  000D9C                     	endif
  6037  000D9C  0008               	tblrd		*
  6038  000D9E  50F5               	movf	tablat,w,c
  6039  000DA0  0A70               	xorlw	112
  6040  000DA2  A4D8               	btfss	status,2,c
  6041  000DA4  EFD6  F006         	goto	u11911
  6042  000DA8  EFD8  F006         	goto	u11910
  6043  000DAC                     u11911:
  6044  000DAC  EF1C  F007         	goto	l8974
  6045  000DB0                     u11910:
  6046  000DB0                     
  6047                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
  6048  000DB0  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6049  000DB4  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6050  000DB8  2ADE               	incf	postinc2,f,c
  6051  000DBA  0E00               	movlw	0
  6052  000DBC  22DD               	addwfc	postdec2,f,c
  6053                           
  6054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
  6055  000DBE  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6056  000DC2  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6057  000DC6  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  6058  000DCA  0E02               	movlw	2
  6059  000DCC  26DE               	addwf	postinc2,f,c
  6060  000DCE  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  6061  000DD2  0E00               	movlw	0
  6062  000DD4  22DD               	addwfc	postdec2,f,c
  6063  000DD6  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6064  000DDA  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6065  000DDE  CFDE F0C0          	movff	postinc2,??_vfpfcnvrt+2
  6066  000DE2  CFDD F0C1          	movff	postdec2,??_vfpfcnvrt+3
  6067  000DE6  C0C0  F0DE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6068  000DEA  C0C1  F0DF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6069  000DEE  0100               	movlb	0	; () banked
  6070  000DF0  6BE0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6071  000DF2  6BE1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6072  000DF4  6BE2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6073  000DF6  6BE3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6074  000DF8  6BE4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6075  000DFA  6BE5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6076  000DFC                     
  6077                           ; BSR set to: 0
  6078                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
  6079  000DFC  C0B8  F01E         	movff	vfpfcnvrt@fp,xtoa@fp
  6080  000E00  C0B9  F01F         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6081  000E04  C0DE  F020         	movff	vfpfcnvrt@llu,xtoa@d
  6082  000E08  C0DF  F021         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6083  000E0C  C0E0  F022         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6084  000E10  C0E1  F023         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6085  000E14  C0E2  F024         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6086  000E18  C0E3  F025         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6087  000E1C  C0E4  F026         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6088  000E20  C0E5  F027         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6089  000E24  0E78               	movlw	120
  6090  000E26  6E28               	movwf	xtoa@x^0,c
  6091  000E28  EC80  F01C         	call	_xtoa	;wreg free
  6092  000E2C  C01E  F0B8         	movff	?_xtoa,?_vfpfcnvrt
  6093  000E30  C01F  F0B9         	movff	?_xtoa+1,?_vfpfcnvrt+1
  6094  000E34  EF94  F00A         	goto	l759
  6095  000E38                     l8974:
  6096                           
  6097                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  6098  000E38  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6099  000E3C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6100  000E40  CFDE FFF6          	movff	postinc2,tblptrl
  6101  000E44  CFDD FFF7          	movff	postdec2,tblptrh
  6102  000E48                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6103  000E48  6AF8               	clrf	tblptru,c
  6104  000E4A                     	endif
  6105  000E4A                     	if	0	;tblptru may be non-zero
  6106  000E4A                     	endif
  6107  000E4A  0008               	tblrd		*
  6108  000E4C  50F5               	movf	tablat,w,c
  6109  000E4E  0A73               	xorlw	115
  6110  000E50  A4D8               	btfss	status,2,c
  6111  000E52  EF2D  F007         	goto	u11921
  6112  000E56  EF2F  F007         	goto	u11920
  6113  000E5A                     u11921:
  6114  000E5A  EF5A  F007         	goto	l8982
  6115  000E5E                     u11920:
  6116  000E5E                     
  6117                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  6118  000E5E  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6119  000E62  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6120  000E66  2ADE               	incf	postinc2,f,c
  6121  000E68  0E00               	movlw	0
  6122  000E6A  22DD               	addwfc	postdec2,f,c
  6123                           
  6124                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  6125  000E6C  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6126  000E70  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6127  000E74  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  6128  000E78  0E02               	movlw	2
  6129  000E7A  26DE               	addwf	postinc2,f,c
  6130  000E7C  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  6131  000E80  0E00               	movlw	0
  6132  000E82  22DD               	addwfc	postdec2,f,c
  6133  000E84  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6134  000E88  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6135  000E8C  CFDE F0C2          	movff	postinc2,vfpfcnvrt@cp
  6136  000E90  CFDD F0C3          	movff	postdec2,vfpfcnvrt@cp+1
  6137  000E94                     
  6138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  6139  000E94  C0B8  F00C         	movff	vfpfcnvrt@fp,stoa@fp
  6140  000E98  C0B9  F00D         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  6141  000E9C  C0C2  F00E         	movff	vfpfcnvrt@cp,stoa@s
  6142  000EA0  C0C3  F00F         	movff	vfpfcnvrt@cp+1,stoa@s+1
  6143  000EA4  EC5E  F023         	call	_stoa	;wreg free
  6144  000EA8  C00C  F0B8         	movff	?_stoa,?_vfpfcnvrt
  6145  000EAC  C00D  F0B9         	movff	?_stoa+1,?_vfpfcnvrt+1
  6146  000EB0  EF94  F00A         	goto	l759
  6147  000EB4                     l8982:
  6148                           
  6149                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  6150  000EB4  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6151  000EB8  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6152  000EBC  CFDE F003          	movff	postinc2,strncmp@_l
  6153  000EC0  CFDD F004          	movff	postdec2,strncmp@_l+1
  6154  000EC4  0EDE               	movlw	low STR_77
  6155  000EC6  6E05               	movwf	strncmp@_r^0,c
  6156  000EC8  0EFF               	movlw	high STR_77
  6157  000ECA  6E06               	movwf	(strncmp@_r+1)^0,c
  6158  000ECC  0E00               	movlw	0
  6159  000ECE  6E08               	movwf	(strncmp@n+1)^0,c
  6160  000ED0  0E03               	movlw	3
  6161  000ED2  6E07               	movwf	strncmp@n^0,c
  6162  000ED4  ECC4  F026         	call	_strncmp	;wreg free
  6163  000ED8  5003               	movf	?_strncmp^0,w,c
  6164  000EDA  1004               	iorwf	(?_strncmp+1)^0,w,c
  6165  000EDC  A4D8               	btfss	status,2,c
  6166  000EDE  EF73  F007         	goto	u11931
  6167  000EE2  EF75  F007         	goto	u11930
  6168  000EE6                     u11931:
  6169  000EE6  EFB5  F007         	goto	l8990
  6170  000EEA                     u11930:
  6171  000EEA                     
  6172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  6173  000EEA  0E03               	movlw	3
  6174  000EEC  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6175  000EF0  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6176  000EF4  26DE               	addwf	postinc2,f,c
  6177  000EF6  0E00               	movlw	0
  6178  000EF8  22DD               	addwfc	postdec2,f,c
  6179                           
  6180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6181  000EFA  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6182  000EFE  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6183  000F02  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  6184  000F06  0E02               	movlw	2
  6185  000F08  26DE               	addwf	postinc2,f,c
  6186  000F0A  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  6187  000F0E  0E00               	movlw	0
  6188  000F10  22DD               	addwfc	postdec2,f,c
  6189  000F12  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6190  000F16  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6191  000F1A  50DF               	movf	indf2,w,c
  6192  000F1C  0100               	movlb	0	; () banked
  6193  000F1E  6FC0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6194  000F20  51C0               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  6195  000F22  6FDE               	movwf	vfpfcnvrt@llu& (0+255),b
  6196  000F24  6BDF               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  6197  000F26  6BE0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6198  000F28  6BE1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6199  000F2A  6BE2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6200  000F2C  6BE3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6201  000F2E  6BE4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6202  000F30  6BE5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6203  000F32                     l8986:
  6204                           
  6205                           ; BSR set to: 0
  6206                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
  6207  000F32  C0B8  F01E         	movff	vfpfcnvrt@fp,utoa@fp
  6208  000F36  C0B9  F01F         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  6209  000F3A  C0DE  F020         	movff	vfpfcnvrt@llu,utoa@d
  6210  000F3E  C0DF  F021         	movff	vfpfcnvrt@llu+1,utoa@d+1
  6211  000F42  C0E0  F022         	movff	vfpfcnvrt@llu+2,utoa@d+2
  6212  000F46  C0E1  F023         	movff	vfpfcnvrt@llu+3,utoa@d+3
  6213  000F4A  C0E2  F024         	movff	vfpfcnvrt@llu+4,utoa@d+4
  6214  000F4E  C0E3  F025         	movff	vfpfcnvrt@llu+5,utoa@d+5
  6215  000F52  C0E4  F026         	movff	vfpfcnvrt@llu+6,utoa@d+6
  6216  000F56  C0E5  F027         	movff	vfpfcnvrt@llu+7,utoa@d+7
  6217  000F5A  ECF9  F01E         	call	_utoa	;wreg free
  6218  000F5E  C01E  F0B8         	movff	?_utoa,?_vfpfcnvrt
  6219  000F62  C01F  F0B9         	movff	?_utoa+1,?_vfpfcnvrt+1
  6220  000F66  EF94  F00A         	goto	l759
  6221  000F6A                     l8990:
  6222                           
  6223                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  6224  000F6A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6225  000F6E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6226  000F72  CFDE F003          	movff	postinc2,strncmp@_l
  6227  000F76  CFDD F004          	movff	postdec2,strncmp@_l+1
  6228  000F7A  0EDF               	movlw	low (STR_77+1)
  6229  000F7C  6E05               	movwf	strncmp@_r^0,c
  6230  000F7E  0EFF               	movlw	high (STR_77+1)
  6231  000F80  6E06               	movwf	(strncmp@_r+1)^0,c
  6232  000F82  0E00               	movlw	0
  6233  000F84  6E08               	movwf	(strncmp@n+1)^0,c
  6234  000F86  0E02               	movlw	2
  6235  000F88  6E07               	movwf	strncmp@n^0,c
  6236  000F8A  ECC4  F026         	call	_strncmp	;wreg free
  6237  000F8E  5003               	movf	?_strncmp^0,w,c
  6238  000F90  1004               	iorwf	(?_strncmp+1)^0,w,c
  6239  000F92  A4D8               	btfss	status,2,c
  6240  000F94  EFCE  F007         	goto	u11941
  6241  000F98  EFD0  F007         	goto	u11940
  6242  000F9C                     u11941:
  6243  000F9C  EFF9  F007         	goto	l8998
  6244  000FA0                     u11940:
  6245  000FA0                     
  6246                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  6247  000FA0  0E02               	movlw	2
  6248  000FA2  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6249  000FA6  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6250  000FAA  26DE               	addwf	postinc2,f,c
  6251  000FAC  0E00               	movlw	0
  6252  000FAE  22DD               	addwfc	postdec2,f,c
  6253                           
  6254                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  6255  000FB0  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6256  000FB4  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6257  000FB8  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  6258  000FBC  0E02               	movlw	2
  6259  000FBE  26DE               	addwf	postinc2,f,c
  6260  000FC0  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  6261  000FC4  0E00               	movlw	0
  6262  000FC6  22DD               	addwfc	postdec2,f,c
  6263  000FC8  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6264  000FCC  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6265  000FD0  CFDE F0C0          	movff	postinc2,??_vfpfcnvrt+2
  6266  000FD4  CFDD F0C1          	movff	postdec2,??_vfpfcnvrt+3
  6267  000FD8  C0C0  F0DE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6268  000FDC  C0C1  F0DF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6269  000FE0  0100               	movlb	0	; () banked
  6270  000FE2  6BE0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6271  000FE4  6BE1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6272  000FE6  6BE2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6273  000FE8  6BE3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6274  000FEA  6BE4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6275  000FEC  6BE5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6276  000FEE  EF99  F007         	goto	l8986
  6277  000FF2                     l8998:
  6278                           
  6279                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  6280  000FF2  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6281  000FF6  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6282  000FFA  CFDE FFF6          	movff	postinc2,tblptrl
  6283  000FFE  CFDD FFF7          	movff	postdec2,tblptrh
  6284  001002                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6285  001002  6AF8               	clrf	tblptru,c
  6286  001004                     	endif
  6287  001004                     	if	0	;tblptru may be non-zero
  6288  001004                     	endif
  6289  001004  0008               	tblrd		*
  6290  001006  50F5               	movf	tablat,w,c
  6291  001008  0A75               	xorlw	117
  6292  00100A  A4D8               	btfss	status,2,c
  6293  00100C  EF0A  F008         	goto	u11951
  6294  001010  EF0C  F008         	goto	u11950
  6295  001014                     u11951:
  6296  001014  EF34  F008         	goto	l9006
  6297  001018                     u11950:
  6298  001018                     
  6299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  6300  001018  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6301  00101C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6302  001020  2ADE               	incf	postinc2,f,c
  6303  001022  0E00               	movlw	0
  6304  001024  22DD               	addwfc	postdec2,f,c
  6305                           
  6306                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  6307  001026  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6308  00102A  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6309  00102E  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  6310  001032  0E02               	movlw	2
  6311  001034  26DE               	addwf	postinc2,f,c
  6312  001036  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  6313  00103A  0E00               	movlw	0
  6314  00103C  22DD               	addwfc	postdec2,f,c
  6315  00103E  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6316  001042  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6317  001046  CFDE F0C0          	movff	postinc2,??_vfpfcnvrt+2
  6318  00104A  CFDD F0C1          	movff	postdec2,??_vfpfcnvrt+3
  6319  00104E  C0C0  F0DE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6320  001052  C0C1  F0DF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6321  001056  0100               	movlb	0	; () banked
  6322  001058  6BE0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6323  00105A  6BE1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6324  00105C  6BE2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6325  00105E  6BE3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6326  001060  6BE4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6327  001062  6BE5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6328  001064  EF99  F007         	goto	l8986
  6329  001068                     l9006:
  6330                           
  6331                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  6332  001068  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6333  00106C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6334  001070  CFDE F003          	movff	postinc2,strncmp@_l
  6335  001074  CFDD F004          	movff	postdec2,strncmp@_l+1
  6336  001078  0EF8               	movlw	low STR_87
  6337  00107A  6E05               	movwf	strncmp@_r^0,c
  6338  00107C  0EFF               	movlw	high STR_87
  6339  00107E  6E06               	movwf	(strncmp@_r+1)^0,c
  6340  001080  0E00               	movlw	0
  6341  001082  6E08               	movwf	(strncmp@n+1)^0,c
  6342  001084  0E02               	movlw	2
  6343  001086  6E07               	movwf	strncmp@n^0,c
  6344  001088  ECC4  F026         	call	_strncmp	;wreg free
  6345  00108C  5003               	movf	?_strncmp^0,w,c
  6346  00108E  1004               	iorwf	(?_strncmp+1)^0,w,c
  6347  001090  A4D8               	btfss	status,2,c
  6348  001092  EF4D  F008         	goto	u11961
  6349  001096  EF4F  F008         	goto	u11960
  6350  00109A                     u11961:
  6351  00109A  EF78  F008         	goto	l9014
  6352  00109E                     u11960:
  6353  00109E                     
  6354                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  6355  00109E  0E02               	movlw	2
  6356  0010A0  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6357  0010A4  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6358  0010A8  26DE               	addwf	postinc2,f,c
  6359  0010AA  0E00               	movlw	0
  6360  0010AC  22DD               	addwfc	postdec2,f,c
  6361                           
  6362                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6363  0010AE  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6364  0010B2  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6365  0010B6  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  6366  0010BA  0E02               	movlw	2
  6367  0010BC  26DE               	addwf	postinc2,f,c
  6368  0010BE  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  6369  0010C2  0E00               	movlw	0
  6370  0010C4  22DD               	addwfc	postdec2,f,c
  6371  0010C6  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6372  0010CA  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6373  0010CE  CFDE F0C0          	movff	postinc2,??_vfpfcnvrt+2
  6374  0010D2  CFDD F0C1          	movff	postdec2,??_vfpfcnvrt+3
  6375  0010D6  C0C0  F0DE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6376  0010DA  C0C1  F0DF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6377  0010DE  0100               	movlb	0	; () banked
  6378  0010E0  6BE0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6379  0010E2  6BE1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6380  0010E4  6BE2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6381  0010E6  6BE3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6382  0010E8  6BE4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6383  0010EA  6BE5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6384  0010EC  EF99  F007         	goto	l8986
  6385  0010F0                     l9014:
  6386                           
  6387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  6388  0010F0  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6389  0010F4  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6390  0010F8  CFDE F003          	movff	postinc2,strncmp@_l
  6391  0010FC  CFDD F004          	movff	postdec2,strncmp@_l+1
  6392  001100  0EE2               	movlw	low STR_92
  6393  001102  6E05               	movwf	strncmp@_r^0,c
  6394  001104  0EFF               	movlw	high STR_92
  6395  001106  6E06               	movwf	(strncmp@_r+1)^0,c
  6396  001108  0E00               	movlw	0
  6397  00110A  6E08               	movwf	(strncmp@n+1)^0,c
  6398  00110C  0E03               	movlw	3
  6399  00110E  6E07               	movwf	strncmp@n^0,c
  6400  001110  ECC4  F026         	call	_strncmp	;wreg free
  6401  001114  5003               	movf	?_strncmp^0,w,c
  6402  001116  1004               	iorwf	(?_strncmp+1)^0,w,c
  6403  001118  B4D8               	btfsc	status,2,c
  6404  00111A  EF91  F008         	goto	u11971
  6405  00111E  EF93  F008         	goto	u11970
  6406  001122                     u11971:
  6407  001122  EFAE  F008         	goto	l9018
  6408  001126                     u11970:
  6409  001126  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6410  00112A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6411  00112E  CFDE F003          	movff	postinc2,strncmp@_l
  6412  001132  CFDD F004          	movff	postdec2,strncmp@_l+1
  6413  001136  0EC2               	movlw	low STR_96
  6414  001138  6E05               	movwf	strncmp@_r^0,c
  6415  00113A  0EFF               	movlw	high STR_96
  6416  00113C  6E06               	movwf	(strncmp@_r+1)^0,c
  6417  00113E  0E00               	movlw	0
  6418  001140  6E08               	movwf	(strncmp@n+1)^0,c
  6419  001142  0E03               	movlw	3
  6420  001144  6E07               	movwf	strncmp@n^0,c
  6421  001146  ECC4  F026         	call	_strncmp	;wreg free
  6422  00114A  5003               	movf	?_strncmp^0,w,c
  6423  00114C  1004               	iorwf	(?_strncmp+1)^0,w,c
  6424  00114E  A4D8               	btfss	status,2,c
  6425  001150  EFAC  F008         	goto	u11981
  6426  001154  EFAE  F008         	goto	u11980
  6427  001158                     u11981:
  6428  001158  EF04  F009         	goto	l9028
  6429  00115C                     u11980:
  6430  00115C                     l9018:
  6431                           
  6432                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
  6433  00115C  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6434  001160  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6435  001164  CFDE F0BE          	movff	postinc2,??_vfpfcnvrt
  6436  001168  CFDD F0BF          	movff	postdec2,??_vfpfcnvrt+1
  6437  00116C  0E02               	movlw	2
  6438  00116E  0100               	movlb	0	; () banked
  6439  001170  27BE               	addwf	??_vfpfcnvrt& (0+255),f,b
  6440  001172  0E00               	movlw	0
  6441  001174  23BF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6442  001176  C0BE  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6443  00117A  C0BF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6444  00117E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6445  00117E  6AF8               	clrf	tblptru,c
  6446  001180                     	endif
  6447  001180                     	if	0	;tblptru may be non-zero
  6448  001180                     	endif
  6449  001180  0008               	tblrd		*
  6450  001182  CFF5 F0DD          	movff	tablat,vfpfcnvrt@c
  6451  001186                     
  6452                           ; BSR set to: 0
  6453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  6454  001186  0E03               	movlw	3
  6455  001188  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6456  00118C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6457  001190  26DE               	addwf	postinc2,f,c
  6458  001192  0E00               	movlw	0
  6459  001194  22DD               	addwfc	postdec2,f,c
  6460  001196                     
  6461                           ; BSR set to: 0
  6462                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6463  001196  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6464  00119A  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6465  00119E  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  6466  0011A2  0E02               	movlw	2
  6467  0011A4  26DE               	addwf	postinc2,f,c
  6468  0011A6  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  6469  0011AA  0E00               	movlw	0
  6470  0011AC  22DD               	addwfc	postdec2,f,c
  6471  0011AE  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6472  0011B2  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6473  0011B6  50DF               	movf	indf2,w,c
  6474  0011B8  6FC0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6475  0011BA  51C0               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  6476  0011BC  6FDE               	movwf	vfpfcnvrt@llu& (0+255),b
  6477  0011BE  6BDF               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  6478  0011C0  6BE0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6479  0011C2  6BE1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6480  0011C4  6BE2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6481  0011C6  6BE3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6482  0011C8  6BE4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6483  0011CA  6BE5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6484  0011CC                     l9024:
  6485                           
  6486                           ; BSR set to: 0
  6487                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
  6488  0011CC  C0B8  F01E         	movff	vfpfcnvrt@fp,xtoa@fp
  6489  0011D0  C0B9  F01F         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6490  0011D4  C0DE  F020         	movff	vfpfcnvrt@llu,xtoa@d
  6491  0011D8  C0DF  F021         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6492  0011DC  C0E0  F022         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6493  0011E0  C0E1  F023         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6494  0011E4  C0E2  F024         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6495  0011E8  C0E3  F025         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6496  0011EC  C0E4  F026         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6497  0011F0  C0E5  F027         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6498  0011F4  C0DD  F028         	movff	vfpfcnvrt@c,xtoa@x
  6499  0011F8  EC80  F01C         	call	_xtoa	;wreg free
  6500  0011FC  C01E  F0B8         	movff	?_xtoa,?_vfpfcnvrt
  6501  001200  C01F  F0B9         	movff	?_xtoa+1,?_vfpfcnvrt+1
  6502  001204  EF94  F00A         	goto	l759
  6503  001208                     l9028:
  6504                           
  6505                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
  6506  001208  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6507  00120C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6508  001210  CFDE F003          	movff	postinc2,strncmp@_l
  6509  001214  CFDD F004          	movff	postdec2,strncmp@_l+1
  6510  001218  0EE3               	movlw	low (STR_92+1)
  6511  00121A  6E05               	movwf	strncmp@_r^0,c
  6512  00121C  0EFF               	movlw	high (STR_92+1)
  6513  00121E  6E06               	movwf	(strncmp@_r+1)^0,c
  6514  001220  0E00               	movlw	0
  6515  001222  6E08               	movwf	(strncmp@n+1)^0,c
  6516  001224  0E02               	movlw	2
  6517  001226  6E07               	movwf	strncmp@n^0,c
  6518  001228  ECC4  F026         	call	_strncmp	;wreg free
  6519  00122C  5003               	movf	?_strncmp^0,w,c
  6520  00122E  1004               	iorwf	(?_strncmp+1)^0,w,c
  6521  001230  B4D8               	btfsc	status,2,c
  6522  001232  EF1D  F009         	goto	u11991
  6523  001236  EF1F  F009         	goto	u11990
  6524  00123A                     u11991:
  6525  00123A  EF3A  F009         	goto	l9032
  6526  00123E                     u11990:
  6527  00123E  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6528  001242  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6529  001246  CFDE F003          	movff	postinc2,strncmp@_l
  6530  00124A  CFDD F004          	movff	postdec2,strncmp@_l+1
  6531  00124E  0EC3               	movlw	low (STR_96+1)
  6532  001250  6E05               	movwf	strncmp@_r^0,c
  6533  001252  0EFF               	movlw	high (STR_96+1)
  6534  001254  6E06               	movwf	(strncmp@_r+1)^0,c
  6535  001256  0E00               	movlw	0
  6536  001258  6E08               	movwf	(strncmp@n+1)^0,c
  6537  00125A  0E02               	movlw	2
  6538  00125C  6E07               	movwf	strncmp@n^0,c
  6539  00125E  ECC4  F026         	call	_strncmp	;wreg free
  6540  001262  5003               	movf	?_strncmp^0,w,c
  6541  001264  1004               	iorwf	(?_strncmp+1)^0,w,c
  6542  001266  A4D8               	btfss	status,2,c
  6543  001268  EF38  F009         	goto	u12001
  6544  00126C  EF3A  F009         	goto	u12000
  6545  001270                     u12001:
  6546  001270  EF77  F009         	goto	l9042
  6547  001274                     u12000:
  6548  001274                     l9032:
  6549                           
  6550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
  6551  001274  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6552  001278  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6553  00127C  CFDE F0BE          	movff	postinc2,??_vfpfcnvrt
  6554  001280  CFDD F0BF          	movff	postdec2,??_vfpfcnvrt+1
  6555  001284  0E01               	movlw	1
  6556  001286  0100               	movlb	0	; () banked
  6557  001288  27BE               	addwf	??_vfpfcnvrt& (0+255),f,b
  6558  00128A  0E00               	movlw	0
  6559  00128C  23BF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6560  00128E  C0BE  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6561  001292  C0BF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6562  001296                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6563  001296  6AF8               	clrf	tblptru,c
  6564  001298                     	endif
  6565  001298                     	if	0	;tblptru may be non-zero
  6566  001298                     	endif
  6567  001298  0008               	tblrd		*
  6568  00129A  CFF5 F0DD          	movff	tablat,vfpfcnvrt@c
  6569  00129E                     
  6570                           ; BSR set to: 0
  6571                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  6572  00129E  0E02               	movlw	2
  6573  0012A0  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6574  0012A4  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6575  0012A8  26DE               	addwf	postinc2,f,c
  6576  0012AA  0E00               	movlw	0
  6577  0012AC  22DD               	addwfc	postdec2,f,c
  6578  0012AE                     
  6579                           ; BSR set to: 0
  6580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  6581  0012AE  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6582  0012B2  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6583  0012B6  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  6584  0012BA  0E02               	movlw	2
  6585  0012BC  26DE               	addwf	postinc2,f,c
  6586  0012BE  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  6587  0012C2  0E00               	movlw	0
  6588  0012C4  22DD               	addwfc	postdec2,f,c
  6589  0012C6  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6590  0012CA  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6591  0012CE  CFDE F0C0          	movff	postinc2,??_vfpfcnvrt+2
  6592  0012D2  CFDD F0C1          	movff	postdec2,??_vfpfcnvrt+3
  6593  0012D6  C0C0  F0DE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6594  0012DA  C0C1  F0DF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6595  0012DE  6BE0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6596  0012E0  6BE1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6597  0012E2  6BE2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6598  0012E4  6BE3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6599  0012E6  6BE4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6600  0012E8  6BE5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6601  0012EA  EFE6  F008         	goto	l9024
  6602  0012EE                     l9042:
  6603                           
  6604                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  6605  0012EE  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6606  0012F2  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6607  0012F6  CFDE FFF6          	movff	postinc2,tblptrl
  6608  0012FA  CFDD FFF7          	movff	postdec2,tblptrh
  6609  0012FE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6610  0012FE  6AF8               	clrf	tblptru,c
  6611  001300                     	endif
  6612  001300                     	if	0	;tblptru may be non-zero
  6613  001300                     	endif
  6614  001300  0008               	tblrd		*
  6615  001302  50F5               	movf	tablat,w,c
  6616  001304  0A78               	xorlw	120
  6617  001306  B4D8               	btfsc	status,2,c
  6618  001308  EF88  F009         	goto	u12011
  6619  00130C  EF8A  F009         	goto	u12010
  6620  001310                     u12011:
  6621  001310  EF9D  F009         	goto	l9046
  6622  001314                     u12010:
  6623  001314  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6624  001318  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6625  00131C  CFDE FFF6          	movff	postinc2,tblptrl
  6626  001320  CFDD FFF7          	movff	postdec2,tblptrh
  6627  001324                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6628  001324  6AF8               	clrf	tblptru,c
  6629  001326                     	endif
  6630  001326                     	if	0	;tblptru may be non-zero
  6631  001326                     	endif
  6632  001326  0008               	tblrd		*
  6633  001328  50F5               	movf	tablat,w,c
  6634  00132A  0A58               	xorlw	88
  6635  00132C  A4D8               	btfss	status,2,c
  6636  00132E  EF9B  F009         	goto	u12021
  6637  001332  EF9D  F009         	goto	u12020
  6638  001336                     u12021:
  6639  001336  EFD1  F009         	goto	l9056
  6640  00133A                     u12020:
  6641  00133A                     l9046:
  6642                           
  6643                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  6644  00133A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6645  00133E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6646  001342  CFDE FFF6          	movff	postinc2,tblptrl
  6647  001346  CFDD FFF7          	movff	postdec2,tblptrh
  6648  00134A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6649  00134A  6AF8               	clrf	tblptru,c
  6650  00134C                     	endif
  6651  00134C                     	if	0	;tblptru may be non-zero
  6652  00134C                     	endif
  6653  00134C  0008               	tblrd		*
  6654  00134E  CFF5 F0DD          	movff	tablat,vfpfcnvrt@c
  6655  001352                     
  6656                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  6657  001352  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6658  001356  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6659  00135A  2ADE               	incf	postinc2,f,c
  6660  00135C  0E00               	movlw	0
  6661  00135E  22DD               	addwfc	postdec2,f,c
  6662  001360                     
  6663                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  6664  001360  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6665  001364  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6666  001368  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  6667  00136C  0E02               	movlw	2
  6668  00136E  26DE               	addwf	postinc2,f,c
  6669  001370  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  6670  001374  0E00               	movlw	0
  6671  001376  22DD               	addwfc	postdec2,f,c
  6672  001378  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6673  00137C  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6674  001380  CFDE F0C0          	movff	postinc2,??_vfpfcnvrt+2
  6675  001384  CFDD F0C1          	movff	postdec2,??_vfpfcnvrt+3
  6676  001388  C0C0  F0DE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6677  00138C  C0C1  F0DF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6678  001390  0100               	movlb	0	; () banked
  6679  001392  6BE0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6680  001394  6BE1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6681  001396  6BE2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6682  001398  6BE3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6683  00139A  6BE4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6684  00139C  6BE5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6685  00139E  EFE6  F008         	goto	l9024
  6686  0013A2                     l9056:
  6687                           
  6688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
  6689  0013A2  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6690  0013A6  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6691  0013AA  CFDE F003          	movff	postinc2,strncmp@_l
  6692  0013AE  CFDD F004          	movff	postdec2,strncmp@_l+1
  6693  0013B2  0EFB               	movlw	low STR_110
  6694  0013B4  6E05               	movwf	strncmp@_r^0,c
  6695  0013B6  0EFF               	movlw	high STR_110
  6696  0013B8  6E06               	movwf	(strncmp@_r+1)^0,c
  6697  0013BA  0E00               	movlw	0
  6698  0013BC  6E08               	movwf	(strncmp@n+1)^0,c
  6699  0013BE  0E02               	movlw	2
  6700  0013C0  6E07               	movwf	strncmp@n^0,c
  6701  0013C2  ECC4  F026         	call	_strncmp	;wreg free
  6702  0013C6  5003               	movf	?_strncmp^0,w,c
  6703  0013C8  1004               	iorwf	(?_strncmp+1)^0,w,c
  6704  0013CA  B4D8               	btfsc	status,2,c
  6705  0013CC  EFEA  F009         	goto	u12031
  6706  0013D0  EFEC  F009         	goto	u12030
  6707  0013D4                     u12031:
  6708  0013D4  EF07  F00A         	goto	l9060
  6709  0013D8                     u12030:
  6710  0013D8  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6711  0013DC  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6712  0013E0  CFDE F003          	movff	postinc2,strncmp@_l
  6713  0013E4  CFDD F004          	movff	postdec2,strncmp@_l+1
  6714  0013E8  0EE6               	movlw	low STR_114
  6715  0013EA  6E05               	movwf	strncmp@_r^0,c
  6716  0013EC  0EFF               	movlw	high STR_114
  6717  0013EE  6E06               	movwf	(strncmp@_r+1)^0,c
  6718  0013F0  0E00               	movlw	0
  6719  0013F2  6E08               	movwf	(strncmp@n+1)^0,c
  6720  0013F4  0E02               	movlw	2
  6721  0013F6  6E07               	movwf	strncmp@n^0,c
  6722  0013F8  ECC4  F026         	call	_strncmp	;wreg free
  6723  0013FC  5003               	movf	?_strncmp^0,w,c
  6724  0013FE  1004               	iorwf	(?_strncmp+1)^0,w,c
  6725  001400  A4D8               	btfss	status,2,c
  6726  001402  EF05  F00A         	goto	u12041
  6727  001406  EF07  F00A         	goto	u12040
  6728  00140A                     u12041:
  6729  00140A  EF44  F00A         	goto	l9070
  6730  00140E                     u12040:
  6731  00140E                     l9060:
  6732                           
  6733                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
  6734  00140E  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6735  001412  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6736  001416  CFDE F0BE          	movff	postinc2,??_vfpfcnvrt
  6737  00141A  CFDD F0BF          	movff	postdec2,??_vfpfcnvrt+1
  6738  00141E  0E01               	movlw	1
  6739  001420  0100               	movlb	0	; () banked
  6740  001422  27BE               	addwf	??_vfpfcnvrt& (0+255),f,b
  6741  001424  0E00               	movlw	0
  6742  001426  23BF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6743  001428  C0BE  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6744  00142C  C0BF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6745  001430                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6746  001430  6AF8               	clrf	tblptru,c
  6747  001432                     	endif
  6748  001432                     	if	0	;tblptru may be non-zero
  6749  001432                     	endif
  6750  001432  0008               	tblrd		*
  6751  001434  CFF5 F0DD          	movff	tablat,vfpfcnvrt@c
  6752  001438                     
  6753                           ; BSR set to: 0
  6754                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  6755  001438  0E02               	movlw	2
  6756  00143A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6757  00143E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6758  001442  26DE               	addwf	postinc2,f,c
  6759  001444  0E00               	movlw	0
  6760  001446  22DD               	addwfc	postdec2,f,c
  6761  001448                     
  6762                           ; BSR set to: 0
  6763                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6764  001448  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6765  00144C  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6766  001450  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  6767  001454  0E02               	movlw	2
  6768  001456  26DE               	addwf	postinc2,f,c
  6769  001458  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  6770  00145C  0E00               	movlw	0
  6771  00145E  22DD               	addwfc	postdec2,f,c
  6772  001460  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6773  001464  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6774  001468  CFDE F0C0          	movff	postinc2,??_vfpfcnvrt+2
  6775  00146C  CFDD F0C1          	movff	postdec2,??_vfpfcnvrt+3
  6776  001470  C0C0  F0DE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6777  001474  C0C1  F0DF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6778  001478  6BE0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6779  00147A  6BE1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6780  00147C  6BE2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6781  00147E  6BE3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6782  001480  6BE4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6783  001482  6BE5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6784  001484  EFE6  F008         	goto	l9024
  6785  001488                     l9070:
  6786                           
  6787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  6788  001488  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6789  00148C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6790  001490  CFDE FFF6          	movff	postinc2,tblptrl
  6791  001494  CFDD FFF7          	movff	postdec2,tblptrh
  6792  001498                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6793  001498  6AF8               	clrf	tblptru,c
  6794  00149A                     	endif
  6795  00149A                     	if	0	;tblptru may be non-zero
  6796  00149A                     	endif
  6797  00149A  0008               	tblrd		*
  6798  00149C  50F5               	movf	tablat,w,c
  6799  00149E  0A25               	xorlw	37
  6800  0014A0  A4D8               	btfss	status,2,c
  6801  0014A2  EF55  F00A         	goto	u12051
  6802  0014A6  EF57  F00A         	goto	u12050
  6803  0014AA                     u12051:
  6804  0014AA  EF6F  F00A         	goto	l9080
  6805  0014AE                     u12050:
  6806  0014AE                     
  6807                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  6808  0014AE  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6809  0014B2  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6810  0014B6  2ADE               	incf	postinc2,f,c
  6811  0014B8  0E00               	movlw	0
  6812  0014BA  22DD               	addwfc	postdec2,f,c
  6813  0014BC                     
  6814                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  6815  0014BC  0E00               	movlw	0
  6816  0014BE  6E04               	movwf	(fputc@c+1)^0,c
  6817  0014C0  0E25               	movlw	37
  6818  0014C2  6E03               	movwf	fputc@c^0,c
  6819  0014C4  C0B8  F005         	movff	vfpfcnvrt@fp,fputc@fp
  6820  0014C8  C0B9  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6821  0014CC  ECBB  F029         	call	_fputc	;wreg free
  6822  0014D0                     l9076:
  6823                           
  6824                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  6825  0014D0  0E00               	movlw	0
  6826  0014D2  0100               	movlb	0	; () banked
  6827  0014D4  6FB9               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  6828  0014D6  0E01               	movlw	1
  6829  0014D8  6FB8               	movwf	?_vfpfcnvrt& (0+255),b
  6830  0014DA  EF94  F00A         	goto	l759
  6831  0014DE                     l9080:
  6832                           
  6833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  6834  0014DE  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6835  0014E2  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6836  0014E6  2ADE               	incf	postinc2,f,c
  6837  0014E8  0E00               	movlw	0
  6838  0014EA  22DD               	addwfc	postdec2,f,c
  6839  0014EC  EF04  F006         	goto	l8932
  6840  0014F0                     l9086:
  6841                           
  6842                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  6843  0014F0  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6844  0014F4  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6845  0014F8  CFDE FFF6          	movff	postinc2,tblptrl
  6846  0014FC  CFDD FFF7          	movff	postdec2,tblptrh
  6847  001500                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6848  001500  6AF8               	clrf	tblptru,c
  6849  001502                     	endif
  6850  001502                     	if	0	;tblptru may be non-zero
  6851  001502                     	endif
  6852  001502  0008               	tblrd		*
  6853  001504  50F5               	movf	tablat,w,c
  6854  001506  6E03               	movwf	fputc@c^0,c
  6855  001508  6A04               	clrf	(fputc@c+1)^0,c
  6856  00150A  C0B8  F005         	movff	vfpfcnvrt@fp,fputc@fp
  6857  00150E  C0B9  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6858  001512  ECBB  F029         	call	_fputc	;wreg free
  6859  001516                     
  6860                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  6861  001516  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6862  00151A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6863  00151E  2ADE               	incf	postinc2,f,c
  6864  001520  0E00               	movlw	0
  6865  001522  22DD               	addwfc	postdec2,f,c
  6866  001524  EF68  F00A         	goto	l9076
  6867  001528                     l759:
  6868  001528  0012               	return		;funcret
  6869  00152A                     __end_of_vfpfcnvrt:
  6870                           	opt callstack 0
  6871                           
  6872 ;; *************** function _xtoa *****************
  6873 ;; Defined at:
  6874 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6875 ;; Parameters:    Size  Location     Type
  6876 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  6877 ;;		 -> vsnprintf@f(6), 
  6878 ;;  d               8   31[COMRAM] unsigned long long 
  6879 ;;  x               1   39[COMRAM] unsigned char 
  6880 ;; Auto vars:     Size  Location     Type
  6881 ;;  n               8   56[COMRAM] unsigned long long 
  6882 ;;  c               2   66[COMRAM] int 
  6883 ;;  i               2   64[COMRAM] int 
  6884 ;;  w               2   54[COMRAM] int 
  6885 ;;  p               2   52[COMRAM] int 
  6886 ;; Return value:  Size  Location     Type
  6887 ;;                  2   29[COMRAM] int 
  6888 ;; Registers used:
  6889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6890 ;; Tracked objects:
  6891 ;;		On entry : 0/0
  6892 ;;		On exit  : 0/0
  6893 ;;		Unchanged: 0/0
  6894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6895 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6896 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6897 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6898 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6899 ;;Total ram usage:       39 bytes
  6900 ;; Hardware stack levels used:    1
  6901 ;; Hardware stack levels required when called:    8
  6902 ;; This function calls:
  6903 ;;		_isalpha
  6904 ;;		_isupper
  6905 ;;		_pad
  6906 ;;		_toupper
  6907 ;; This function is called by:
  6908 ;;		_vfpfcnvrt
  6909 ;; This function uses a non-reentrant model
  6910 ;;
  6911                           
  6912                           	psect	text5
  6913  003900                     __ptext5:
  6914                           	opt callstack 0
  6915  003900                     _xtoa:
  6916                           	opt callstack 18
  6917  003900                     
  6918                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  6919  003900  BE5C               	btfsc	(_prec+1)^0,7,c
  6920  003902  EF85  F01C         	goto	u11231
  6921  003906  EF87  F01C         	goto	u11230
  6922  00390A                     u11231:
  6923  00390A  EF89  F01C         	goto	l8606
  6924  00390E                     u11230:
  6925  00390E                     
  6926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  6927  00390E  0100               	movlb	0	; () banked
  6928  003910  93FC               	bcf	_flags& (0+255),1,b
  6929  003912                     l8606:
  6930                           
  6931                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  6932  003912  BE5C               	btfsc	(_prec+1)^0,7,c
  6933  003914  EF96  F01C         	goto	u11240
  6934  003918  505C               	movf	(_prec+1)^0,w,c
  6935  00391A  E106               	bnz	u11241
  6936  00391C  045B               	decf	_prec^0,w,c
  6937  00391E  B0D8               	btfsc	status,0,c
  6938  003920  EF94  F01C         	goto	u11241
  6939  003924  EF96  F01C         	goto	u11240
  6940  003928                     u11241:
  6941  003928  EF9C  F01C         	goto	l695
  6942  00392C                     u11240:
  6943  00392C  0E00               	movlw	0
  6944  00392E  6E36               	movwf	(xtoa@p+1)^0,c
  6945  003930  0E01               	movlw	1
  6946  003932  6E35               	movwf	xtoa@p^0,c
  6947  003934  EFA0  F01C         	goto	l697
  6948  003938                     l695:
  6949  003938  C05B  F035         	movff	_prec,xtoa@p
  6950  00393C  C05C  F036         	movff	_prec+1,xtoa@p+1
  6951  003940                     l697:
  6952                           
  6953                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  6954  003940  C0FA  F037         	movff	_width,xtoa@w
  6955  003944  C0FB  F038         	movff	_width+1,xtoa@w+1
  6956                           
  6957                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  6958  003948  0100               	movlb	0	; () banked
  6959  00394A  A9FC               	btfss	_flags& (0+255),4,b
  6960  00394C  EFAA  F01C         	goto	u11251
  6961  003950  EFAC  F01C         	goto	u11250
  6962  003954                     u11251:
  6963  003954  EFB0  F01C         	goto	l8612
  6964  003958                     u11250:
  6965  003958                     
  6966                           ; BSR set to: 0
  6967                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  6968  003958  0EFE               	movlw	254
  6969  00395A  2637               	addwf	xtoa@w^0,f,c
  6970  00395C  0EFF               	movlw	255
  6971  00395E  2238               	addwfc	(xtoa@w+1)^0,f,c
  6972  003960                     l8612:
  6973                           
  6974                           ; BSR set to: 0
  6975                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  6976  003960  C020  F039         	movff	xtoa@d,xtoa@n
  6977  003964  C021  F03A         	movff	xtoa@d+1,xtoa@n+1
  6978  003968  C022  F03B         	movff	xtoa@d+2,xtoa@n+2
  6979  00396C  C023  F03C         	movff	xtoa@d+3,xtoa@n+3
  6980  003970  C024  F03D         	movff	xtoa@d+4,xtoa@n+4
  6981  003974  C025  F03E         	movff	xtoa@d+5,xtoa@n+5
  6982  003978  C026  F03F         	movff	xtoa@d+6,xtoa@n+6
  6983  00397C  C027  F040         	movff	xtoa@d+7,xtoa@n+7
  6984  003980                     
  6985                           ; BSR set to: 0
  6986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  6987  003980  0E00               	movlw	0
  6988  003982  6E42               	movwf	(xtoa@i+1)^0,c
  6989  003984  0E4F               	movlw	79
  6990  003986  6E41               	movwf	xtoa@i^0,c
  6991  003988                     
  6992                           ; BSR set to: 0
  6993                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  6994  003988  0E00               	movlw	0
  6995  00398A  0101               	movlb	1	; () banked
  6996  00398C  6FD7               	movwf	(_dbuf+79)& (0+255),b
  6997                           
  6998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6999  00398E  EF7C  F01D         	goto	l8648
  7000  003992                     l8618:
  7001                           
  7002                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  7003  003992  0641               	decf	xtoa@i^0,f,c
  7004  003994  A0D8               	btfss	status,0,c
  7005  003996  0642               	decf	(xtoa@i+1)^0,f,c
  7006  003998                     
  7007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  7008  003998  0E0F               	movlw	15
  7009  00399A  1439               	andwf	xtoa@n^0,w,c
  7010  00399C  6E43               	movwf	xtoa@c^0,c
  7011  00399E  6A44               	clrf	(xtoa@c+1)^0,c
  7012  0039A0                     
  7013                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  7014  0039A0  BE44               	btfsc	(xtoa@c+1)^0,7,c
  7015  0039A2  EFDC  F01C         	goto	u11261
  7016  0039A6  5044               	movf	(xtoa@c+1)^0,w,c
  7017  0039A8  E109               	bnz	u11260
  7018  0039AA  0E0A               	movlw	10
  7019  0039AC  5C43               	subwf	xtoa@c^0,w,c
  7020  0039AE  A0D8               	btfss	status,0,c
  7021  0039B0  EFDC  F01C         	goto	u11261
  7022  0039B4  EFDE  F01C         	goto	u11260
  7023  0039B8                     u11261:
  7024  0039B8  EFE6  F01C         	goto	l8626
  7025  0039BC                     u11260:
  7026  0039BC  0E57               	movlw	87
  7027  0039BE  2443               	addwf	xtoa@c^0,w,c
  7028  0039C0  6E43               	movwf	xtoa@c^0,c
  7029  0039C2  0E00               	movlw	0
  7030  0039C4  2044               	addwfc	(xtoa@c+1)^0,w,c
  7031  0039C6  6E44               	movwf	(xtoa@c+1)^0,c
  7032  0039C8  EFEC  F01C         	goto	l704
  7033  0039CC                     l8626:
  7034  0039CC  0E30               	movlw	48
  7035  0039CE  2443               	addwf	xtoa@c^0,w,c
  7036  0039D0  6E43               	movwf	xtoa@c^0,c
  7037  0039D2  0E00               	movlw	0
  7038  0039D4  2044               	addwfc	(xtoa@c+1)^0,w,c
  7039  0039D6  6E44               	movwf	(xtoa@c+1)^0,c
  7040  0039D8                     l704:
  7041  0039D8  0EBF               	movlw	191
  7042  0039DA  6E29               	movwf	??_xtoa^0,c
  7043  0039DC  0EFF               	movlw	255
  7044  0039DE  6E2A               	movwf	(??_xtoa+1)^0,c
  7045  0039E0  5028               	movf	xtoa@x^0,w,c
  7046  0039E2  6E2B               	movwf	(??_xtoa+2)^0,c
  7047  0039E4  6A2C               	clrf	(??_xtoa+3)^0,c
  7048  0039E6  5029               	movf	??_xtoa^0,w,c
  7049  0039E8  262B               	addwf	(??_xtoa+2)^0,f,c
  7050  0039EA  502A               	movf	(??_xtoa+1)^0,w,c
  7051  0039EC  222C               	addwfc	(??_xtoa+3)^0,f,c
  7052  0039EE  502C               	movf	(??_xtoa+3)^0,w,c
  7053  0039F0  E10A               	bnz	u11270
  7054  0039F2  0E1A               	movlw	26
  7055  0039F4  5C2B               	subwf	(??_xtoa+2)^0,w,c
  7056  0039F6  A0D8               	btfss	status,0,c
  7057  0039F8  EF00  F01D         	goto	u11271
  7058  0039FC  EF03  F01D         	goto	u11270
  7059  003A00                     u11271:
  7060  003A00  0E01               	movlw	1
  7061  003A02  EF04  F01D         	goto	u11280
  7062  003A06                     u11270:
  7063  003A06  0E00               	movlw	0
  7064  003A08                     u11280:
  7065  003A08  6E31               	movwf	_xtoa$1383^0,c
  7066  003A0A  6A32               	clrf	(_xtoa$1383+1)^0,c
  7067  003A0C  5031               	movf	_xtoa$1383^0,w,c
  7068  003A0E  1032               	iorwf	(_xtoa$1383+1)^0,w,c
  7069  003A10  B4D8               	btfsc	status,2,c
  7070  003A12  EF0D  F01D         	goto	u11291
  7071  003A16  EF0F  F01D         	goto	u11290
  7072  003A1A                     u11291:
  7073  003A1A  EF3F  F01D         	goto	l8640
  7074  003A1E                     u11290:
  7075  003A1E  0E9F               	movlw	159
  7076  003A20  6E29               	movwf	??_xtoa^0,c
  7077  003A22  0EFF               	movlw	255
  7078  003A24  6E2A               	movwf	(??_xtoa+1)^0,c
  7079  003A26  0E20               	movlw	32
  7080  003A28  1043               	iorwf	xtoa@c^0,w,c
  7081  003A2A  6E2B               	movwf	(??_xtoa+2)^0,c
  7082  003A2C  0E00               	movlw	0
  7083  003A2E  1044               	iorwf	(xtoa@c+1)^0,w,c
  7084  003A30  6E2C               	movwf	(??_xtoa+3)^0,c
  7085  003A32  5029               	movf	??_xtoa^0,w,c
  7086  003A34  262B               	addwf	(??_xtoa+2)^0,f,c
  7087  003A36  502A               	movf	(??_xtoa+1)^0,w,c
  7088  003A38  222C               	addwfc	(??_xtoa+3)^0,f,c
  7089  003A3A  502C               	movf	(??_xtoa+3)^0,w,c
  7090  003A3C  E10A               	bnz	u11300
  7091  003A3E  0E1A               	movlw	26
  7092  003A40  5C2B               	subwf	(??_xtoa+2)^0,w,c
  7093  003A42  A0D8               	btfss	status,0,c
  7094  003A44  EF26  F01D         	goto	u11301
  7095  003A48  EF29  F01D         	goto	u11300
  7096  003A4C                     u11301:
  7097  003A4C  0E01               	movlw	1
  7098  003A4E  EF2A  F01D         	goto	u11310
  7099  003A52                     u11300:
  7100  003A52  0E00               	movlw	0
  7101  003A54                     u11310:
  7102  003A54  6E33               	movwf	_xtoa$1384^0,c
  7103  003A56  6A34               	clrf	(_xtoa$1384+1)^0,c
  7104  003A58  5033               	movf	_xtoa$1384^0,w,c
  7105  003A5A  1034               	iorwf	(_xtoa$1384+1)^0,w,c
  7106  003A5C  B4D8               	btfsc	status,2,c
  7107  003A5E  EF33  F01D         	goto	u11321
  7108  003A62  EF35  F01D         	goto	u11320
  7109  003A66                     u11321:
  7110  003A66  EF3F  F01D         	goto	l8640
  7111  003A6A                     u11320:
  7112  003A6A                     
  7113                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  7114  003A6A  C043  F009         	movff	xtoa@c,toupper@c
  7115  003A6E  C044  F00A         	movff	xtoa@c+1,toupper@c+1
  7116  003A72  EC91  F02C         	call	_toupper	;wreg free
  7117  003A76  C009  F043         	movff	?_toupper,xtoa@c
  7118  003A7A  C00A  F044         	movff	?_toupper+1,xtoa@c+1
  7119  003A7E                     l8640:
  7120                           
  7121                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  7122  003A7E  0E88               	movlw	low _dbuf
  7123  003A80  2441               	addwf	xtoa@i^0,w,c
  7124  003A82  6ED9               	movwf	fsr2l,c
  7125  003A84  0E01               	movlw	high _dbuf
  7126  003A86  2042               	addwfc	(xtoa@i+1)^0,w,c
  7127  003A88  6EDA               	movwf	fsr2h,c
  7128  003A8A  C043  FFDF         	movff	xtoa@c,indf2
  7129  003A8E                     
  7130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  7131  003A8E  0635               	decf	xtoa@p^0,f,c
  7132  003A90  A0D8               	btfss	status,0,c
  7133  003A92  0636               	decf	(xtoa@p+1)^0,f,c
  7134  003A94                     
  7135                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  7136  003A94  0637               	decf	xtoa@w^0,f,c
  7137  003A96  A0D8               	btfss	status,0,c
  7138  003A98  0638               	decf	(xtoa@w+1)^0,f,c
  7139  003A9A                     
  7140                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  7141  003A9A  C039  F029         	movff	xtoa@n,??_xtoa
  7142  003A9E  C03A  F02A         	movff	xtoa@n+1,??_xtoa+1
  7143  003AA2  C03B  F02B         	movff	xtoa@n+2,??_xtoa+2
  7144  003AA6  C03C  F02C         	movff	xtoa@n+3,??_xtoa+3
  7145  003AAA  C03D  F02D         	movff	xtoa@n+4,??_xtoa+4
  7146  003AAE  C03E  F02E         	movff	xtoa@n+5,??_xtoa+5
  7147  003AB2  C03F  F02F         	movff	xtoa@n+6,??_xtoa+6
  7148  003AB6  C040  F030         	movff	xtoa@n+7,??_xtoa+7
  7149  003ABA  0E05               	movlw	5
  7150  003ABC  EF69  F01D         	goto	u11330
  7151  003AC0                     u11335:
  7152  003AC0  90D8               	bcf	status,0,c
  7153  003AC2  3230               	rrcf	(??_xtoa+7)^0,f,c
  7154  003AC4  322F               	rrcf	(??_xtoa+6)^0,f,c
  7155  003AC6  322E               	rrcf	(??_xtoa+5)^0,f,c
  7156  003AC8  322D               	rrcf	(??_xtoa+4)^0,f,c
  7157  003ACA  322C               	rrcf	(??_xtoa+3)^0,f,c
  7158  003ACC  322B               	rrcf	(??_xtoa+2)^0,f,c
  7159  003ACE  322A               	rrcf	(??_xtoa+1)^0,f,c
  7160  003AD0  3229               	rrcf	??_xtoa^0,f,c
  7161  003AD2                     u11330:
  7162  003AD2  2EE8               	decfsz	wreg,f,c
  7163  003AD4  EF60  F01D         	goto	u11335
  7164  003AD8  C029  F039         	movff	??_xtoa,xtoa@n
  7165  003ADC  C02A  F03A         	movff	??_xtoa+1,xtoa@n+1
  7166  003AE0  C02B  F03B         	movff	??_xtoa+2,xtoa@n+2
  7167  003AE4  C02C  F03C         	movff	??_xtoa+3,xtoa@n+3
  7168  003AE8  C02D  F03D         	movff	??_xtoa+4,xtoa@n+4
  7169  003AEC  C02E  F03E         	movff	??_xtoa+5,xtoa@n+5
  7170  003AF0  C02F  F03F         	movff	??_xtoa+6,xtoa@n+6
  7171  003AF4  C030  F040         	movff	??_xtoa+7,xtoa@n+7
  7172  003AF8                     l8648:
  7173                           
  7174                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7175  003AF8  BE42               	btfsc	(xtoa@i+1)^0,7,c
  7176  003AFA  EF88  F01D         	goto	u11341
  7177  003AFE  5042               	movf	(xtoa@i+1)^0,w,c
  7178  003B00  E109               	bnz	u11340
  7179  003B02  0E02               	movlw	2
  7180  003B04  5C41               	subwf	xtoa@i^0,w,c
  7181  003B06  A0D8               	btfss	status,0,c
  7182  003B08  EF88  F01D         	goto	u11341
  7183  003B0C  EF8A  F01D         	goto	u11340
  7184  003B10                     u11341:
  7185  003B10  EFBB  F01D         	goto	l718
  7186  003B14                     u11340:
  7187  003B14  5039               	movf	xtoa@n^0,w,c
  7188  003B16  103A               	iorwf	(xtoa@n+1)^0,w,c
  7189  003B18  103B               	iorwf	(xtoa@n+2)^0,w,c
  7190  003B1A  103C               	iorwf	(xtoa@n+3)^0,w,c
  7191  003B1C  103D               	iorwf	(xtoa@n+4)^0,w,c
  7192  003B1E  103E               	iorwf	(xtoa@n+5)^0,w,c
  7193  003B20  103F               	iorwf	(xtoa@n+6)^0,w,c
  7194  003B22  1040               	iorwf	(xtoa@n+7)^0,w,c
  7195  003B24  A4D8               	btfss	status,2,c
  7196  003B26  EF97  F01D         	goto	u11351
  7197  003B2A  EF99  F01D         	goto	u11350
  7198  003B2E                     u11351:
  7199  003B2E  EFC9  F01C         	goto	l8618
  7200  003B32                     u11350:
  7201  003B32  BE36               	btfsc	(xtoa@p+1)^0,7,c
  7202  003B34  EFA6  F01D         	goto	u11360
  7203  003B38  5036               	movf	(xtoa@p+1)^0,w,c
  7204  003B3A  E106               	bnz	u11361
  7205  003B3C  0435               	decf	xtoa@p^0,w,c
  7206  003B3E  B0D8               	btfsc	status,0,c
  7207  003B40  EFA4  F01D         	goto	u11361
  7208  003B44  EFA6  F01D         	goto	u11360
  7209  003B48                     u11361:
  7210  003B48  EFC9  F01C         	goto	l8618
  7211  003B4C                     u11360:
  7212  003B4C  BE38               	btfsc	(xtoa@w+1)^0,7,c
  7213  003B4E  EFB1  F01D         	goto	u11371
  7214  003B52  5038               	movf	(xtoa@w+1)^0,w,c
  7215  003B54  E108               	bnz	u11370
  7216  003B56  0437               	decf	xtoa@w^0,w,c
  7217  003B58  A0D8               	btfss	status,0,c
  7218  003B5A  EFB1  F01D         	goto	u11371
  7219  003B5E  EFB3  F01D         	goto	u11370
  7220  003B62                     u11371:
  7221  003B62  EFBB  F01D         	goto	l718
  7222  003B66                     u11370:
  7223  003B66  0100               	movlb	0	; () banked
  7224  003B68  B3FC               	btfsc	_flags& (0+255),1,b
  7225  003B6A  EFB9  F01D         	goto	u11381
  7226  003B6E  EFBB  F01D         	goto	u11380
  7227  003B72                     u11381:
  7228  003B72  EFC9  F01C         	goto	l8618
  7229  003B76                     u11380:
  7230  003B76                     l718:
  7231                           
  7232                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  7233  003B76  0100               	movlb	0	; () banked
  7234  003B78  A9FC               	btfss	_flags& (0+255),4,b
  7235  003B7A  EFC1  F01D         	goto	u11391
  7236  003B7E  EFC3  F01D         	goto	u11390
  7237  003B82                     u11391:
  7238  003B82  EFD9  F01D         	goto	l8664
  7239  003B86                     u11390:
  7240  003B86                     
  7241                           ; BSR set to: 0
  7242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  7243  003B86  0641               	decf	xtoa@i^0,f,c
  7244  003B88  A0D8               	btfss	status,0,c
  7245  003B8A  0642               	decf	(xtoa@i+1)^0,f,c
  7246  003B8C                     
  7247                           ; BSR set to: 0
  7248                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  7249  003B8C  0E88               	movlw	low _dbuf
  7250  003B8E  2441               	addwf	xtoa@i^0,w,c
  7251  003B90  6ED9               	movwf	fsr2l,c
  7252  003B92  0E01               	movlw	high _dbuf
  7253  003B94  2042               	addwfc	(xtoa@i+1)^0,w,c
  7254  003B96  6EDA               	movwf	fsr2h,c
  7255  003B98  C028  FFDF         	movff	xtoa@x,indf2
  7256  003B9C                     
  7257                           ; BSR set to: 0
  7258                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  7259  003B9C  0641               	decf	xtoa@i^0,f,c
  7260  003B9E  A0D8               	btfss	status,0,c
  7261  003BA0  0642               	decf	(xtoa@i+1)^0,f,c
  7262                           
  7263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  7264  003BA2  0E88               	movlw	low _dbuf
  7265  003BA4  2441               	addwf	xtoa@i^0,w,c
  7266  003BA6  6ED9               	movwf	fsr2l,c
  7267  003BA8  0E01               	movlw	high _dbuf
  7268  003BAA  2042               	addwfc	(xtoa@i+1)^0,w,c
  7269  003BAC  6EDA               	movwf	fsr2h,c
  7270  003BAE  0E30               	movlw	48
  7271  003BB0  6EDF               	movwf	indf2,c
  7272  003BB2                     l8664:
  7273                           
  7274                           ; BSR set to: 0
  7275                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  7276  003BB2  C01E  F013         	movff	xtoa@fp,pad@fp
  7277  003BB6  C01F  F014         	movff	xtoa@fp+1,pad@fp+1
  7278  003BBA  0E88               	movlw	low _dbuf
  7279  003BBC  2441               	addwf	xtoa@i^0,w,c
  7280  003BBE  6E15               	movwf	pad@buf^0,c
  7281  003BC0  0E01               	movlw	high _dbuf
  7282  003BC2  2042               	addwfc	(xtoa@i+1)^0,w,c
  7283  003BC4  6E16               	movwf	(pad@buf+1)^0,c
  7284  003BC6  C037  F017         	movff	xtoa@w,pad@p
  7285  003BCA  C038  F018         	movff	xtoa@w+1,pad@p+1
  7286  003BCE  EC20  F02A         	call	_pad	;wreg free
  7287  003BD2  C013  F01E         	movff	?_pad,?_xtoa
  7288  003BD6  C014  F01F         	movff	?_pad+1,?_xtoa+1
  7289  003BDA  0012               	return		;funcret
  7290  003BDC                     __end_of_xtoa:
  7291                           	opt callstack 0
  7292                           
  7293 ;; *************** function _toupper *****************
  7294 ;; Defined at:
  7295 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  7296 ;; Parameters:    Size  Location     Type
  7297 ;;  c               2    8[COMRAM] int 
  7298 ;; Auto vars:     Size  Location     Type
  7299 ;;		None
  7300 ;; Return value:  Size  Location     Type
  7301 ;;                  2    8[COMRAM] int 
  7302 ;; Registers used:
  7303 ;;		wreg, status,2, status,0
  7304 ;; Tracked objects:
  7305 ;;		On entry : 0/0
  7306 ;;		On exit  : 0/0
  7307 ;;		Unchanged: 0/0
  7308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7309 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7310 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7311 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7312 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7313 ;;Total ram usage:        8 bytes
  7314 ;; Hardware stack levels used:    1
  7315 ;; Hardware stack levels required when called:    5
  7316 ;; This function calls:
  7317 ;;		_islower
  7318 ;; This function is called by:
  7319 ;;		_xtoa
  7320 ;; This function uses a non-reentrant model
  7321 ;;
  7322                           
  7323                           	psect	text6
  7324  005922                     __ptext6:
  7325                           	opt callstack 0
  7326  005922                     _toupper:
  7327                           	opt callstack 20
  7328  005922  0E9F               	movlw	159
  7329  005924  6E0B               	movwf	??_toupper^0,c
  7330  005926  0EFF               	movlw	255
  7331  005928  6E0C               	movwf	(??_toupper+1)^0,c
  7332  00592A  C009  F00D         	movff	toupper@c,??_toupper+2
  7333  00592E  C00A  F00E         	movff	toupper@c+1,??_toupper+3
  7334  005932  500B               	movf	??_toupper^0,w,c
  7335  005934  260D               	addwf	(??_toupper+2)^0,f,c
  7336  005936  500C               	movf	(??_toupper+1)^0,w,c
  7337  005938  220E               	addwfc	(??_toupper+3)^0,f,c
  7338  00593A  500E               	movf	(??_toupper+3)^0,w,c
  7339  00593C  E10A               	bnz	u9320
  7340  00593E  0E1A               	movlw	26
  7341  005940  5C0D               	subwf	(??_toupper+2)^0,w,c
  7342  005942  A0D8               	btfss	status,0,c
  7343  005944  EFA6  F02C         	goto	u9321
  7344  005948  EFA9  F02C         	goto	u9320
  7345  00594C                     u9321:
  7346  00594C  0E01               	movlw	1
  7347  00594E  EFAA  F02C         	goto	u9330
  7348  005952                     u9320:
  7349  005952  0E00               	movlw	0
  7350  005954                     u9330:
  7351  005954  6E0F               	movwf	_toupper$2119^0,c
  7352  005956  6A10               	clrf	(_toupper$2119+1)^0,c
  7353  005958  500F               	movf	_toupper$2119^0,w,c
  7354  00595A  1010               	iorwf	(_toupper$2119+1)^0,w,c
  7355  00595C  B4D8               	btfsc	status,2,c
  7356  00595E  EFB3  F02C         	goto	u9341
  7357  005962  EFB5  F02C         	goto	u9340
  7358  005966                     u9341:
  7359  005966  EFBB  F02C         	goto	l1643
  7360  00596A                     u9340:
  7361  00596A  0E5F               	movlw	95
  7362  00596C  1409               	andwf	toupper@c^0,w,c
  7363  00596E  6E09               	movwf	?_toupper^0,c
  7364  005970  6A0A               	clrf	(?_toupper+1)^0,c
  7365  005972  EFBF  F02C         	goto	l1648
  7366  005976                     l1643:
  7367  005976  C009  F009         	movff	toupper@c,?_toupper
  7368  00597A  C00A  F00A         	movff	toupper@c+1,?_toupper+1
  7369  00597E                     l1648:
  7370  00597E  0012               	return		;funcret
  7371  005980                     __end_of_toupper:
  7372                           	opt callstack 0
  7373                           
  7374 ;; *************** function _islower *****************
  7375 ;; Defined at:
  7376 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  7377 ;; Parameters:    Size  Location     Type
  7378 ;;  c               2    2[COMRAM] int 
  7379 ;; Auto vars:     Size  Location     Type
  7380 ;;		None
  7381 ;; Return value:  Size  Location     Type
  7382 ;;                  2    2[COMRAM] int 
  7383 ;; Registers used:
  7384 ;;		wreg, status,2, status,0
  7385 ;; Tracked objects:
  7386 ;;		On entry : 0/0
  7387 ;;		On exit  : 0/0
  7388 ;;		Unchanged: 0/0
  7389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7390 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7392 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7393 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7394 ;;Total ram usage:        6 bytes
  7395 ;; Hardware stack levels used:    1
  7396 ;; Hardware stack levels required when called:    4
  7397 ;; This function calls:
  7398 ;;		Nothing
  7399 ;; This function is called by:
  7400 ;;		_toupper
  7401 ;; This function uses a non-reentrant model
  7402 ;;
  7403                           
  7404                           	psect	text7
  7405  005D40                     __ptext7:
  7406                           	opt callstack 0
  7407  005D40                     _islower:
  7408                           	opt callstack 20
  7409  005D40  0E9F               	movlw	159
  7410  005D42  6E05               	movwf	??_islower^0,c
  7411  005D44  0EFF               	movlw	255
  7412  005D46  6E06               	movwf	(??_islower+1)^0,c
  7413  005D48  C003  F007         	movff	islower@c,??_islower+2
  7414  005D4C  C004  F008         	movff	islower@c+1,??_islower+3
  7415  005D50  5005               	movf	??_islower^0,w,c
  7416  005D52  2607               	addwf	(??_islower+2)^0,f,c
  7417  005D54  5006               	movf	(??_islower+1)^0,w,c
  7418  005D56  2208               	addwfc	(??_islower+3)^0,f,c
  7419  005D58  5008               	movf	(??_islower+3)^0,w,c
  7420  005D5A  E10A               	bnz	u9010
  7421  005D5C  0E1A               	movlw	26
  7422  005D5E  5C07               	subwf	(??_islower+2)^0,w,c
  7423  005D60  A0D8               	btfss	status,0,c
  7424  005D62  EFB5  F02E         	goto	u9011
  7425  005D66  EFB8  F02E         	goto	u9010
  7426  005D6A                     u9011:
  7427  005D6A  0E01               	movlw	1
  7428  005D6C  EFB9  F02E         	goto	u9020
  7429  005D70                     u9010:
  7430  005D70  0E00               	movlw	0
  7431  005D72                     u9020:
  7432  005D72  6E03               	movwf	?_islower^0,c
  7433  005D74  6A04               	clrf	(?_islower+1)^0,c
  7434  005D76  0012               	return		;funcret
  7435  005D78                     __end_of_islower:
  7436                           	opt callstack 0
  7437                           
  7438 ;; *************** function _isalpha *****************
  7439 ;; Defined at:
  7440 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  7441 ;; Parameters:    Size  Location     Type
  7442 ;;  c               2    2[COMRAM] int 
  7443 ;; Auto vars:     Size  Location     Type
  7444 ;;		None
  7445 ;; Return value:  Size  Location     Type
  7446 ;;                  2    2[COMRAM] int 
  7447 ;; Registers used:
  7448 ;;		wreg, status,2, status,0
  7449 ;; Tracked objects:
  7450 ;;		On entry : 0/0
  7451 ;;		On exit  : 0/0
  7452 ;;		Unchanged: 0/0
  7453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7454 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7456 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7457 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7458 ;;Total ram usage:        6 bytes
  7459 ;; Hardware stack levels used:    1
  7460 ;; Hardware stack levels required when called:    4
  7461 ;; This function calls:
  7462 ;;		Nothing
  7463 ;; This function is called by:
  7464 ;;		_xtoa
  7465 ;; This function uses a non-reentrant model
  7466 ;;
  7467                           
  7468                           	psect	text8
  7469  005CCA                     __ptext8:
  7470                           	opt callstack 0
  7471  005CCA                     _isalpha:
  7472                           	opt callstack 21
  7473  005CCA  0E9F               	movlw	159
  7474  005CCC  6E05               	movwf	??_isalpha^0,c
  7475  005CCE  0EFF               	movlw	255
  7476  005CD0  6E06               	movwf	(??_isalpha+1)^0,c
  7477  005CD2  0E20               	movlw	32
  7478  005CD4  1003               	iorwf	isalpha@c^0,w,c
  7479  005CD6  6E07               	movwf	(??_isalpha+2)^0,c
  7480  005CD8  0E00               	movlw	0
  7481  005CDA  1004               	iorwf	(isalpha@c+1)^0,w,c
  7482  005CDC  6E08               	movwf	(??_isalpha+3)^0,c
  7483  005CDE  5005               	movf	??_isalpha^0,w,c
  7484  005CE0  2607               	addwf	(??_isalpha+2)^0,f,c
  7485  005CE2  5006               	movf	(??_isalpha+1)^0,w,c
  7486  005CE4  2208               	addwfc	(??_isalpha+3)^0,f,c
  7487  005CE6  5008               	movf	(??_isalpha+3)^0,w,c
  7488  005CE8  E10A               	bnz	u9300
  7489  005CEA  0E1A               	movlw	26
  7490  005CEC  5C07               	subwf	(??_isalpha+2)^0,w,c
  7491  005CEE  A0D8               	btfss	status,0,c
  7492  005CF0  EF7C  F02E         	goto	u9301
  7493  005CF4  EF7F  F02E         	goto	u9300
  7494  005CF8                     u9301:
  7495  005CF8  0E01               	movlw	1
  7496  005CFA  EF80  F02E         	goto	u9310
  7497  005CFE                     u9300:
  7498  005CFE  0E00               	movlw	0
  7499  005D00                     u9310:
  7500  005D00  6E03               	movwf	?_isalpha^0,c
  7501  005D02  6A04               	clrf	(?_isalpha+1)^0,c
  7502  005D04  0012               	return		;funcret
  7503  005D06                     __end_of_isalpha:
  7504                           	opt callstack 0
  7505                           
  7506 ;; *************** function _utoa *****************
  7507 ;; Defined at:
  7508 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7509 ;; Parameters:    Size  Location     Type
  7510 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  7511 ;;		 -> vsnprintf@f(6), 
  7512 ;;  d               8   31[COMRAM] unsigned long long 
  7513 ;; Auto vars:     Size  Location     Type
  7514 ;;  n               8   51[COMRAM] unsigned long long 
  7515 ;;  i               2   59[COMRAM] int 
  7516 ;;  w               2   49[COMRAM] int 
  7517 ;;  p               2   47[COMRAM] int 
  7518 ;; Return value:  Size  Location     Type
  7519 ;;                  2   29[COMRAM] int 
  7520 ;; Registers used:
  7521 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7522 ;; Tracked objects:
  7523 ;;		On entry : 0/0
  7524 ;;		On exit  : 0/0
  7525 ;;		Unchanged: 0/0
  7526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7527 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7528 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7529 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7530 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7531 ;;Total ram usage:       32 bytes
  7532 ;; Hardware stack levels used:    1
  7533 ;; Hardware stack levels required when called:    8
  7534 ;; This function calls:
  7535 ;;		___lodiv
  7536 ;;		___lomod
  7537 ;;		_pad
  7538 ;; This function is called by:
  7539 ;;		_vfpfcnvrt
  7540 ;; This function uses a non-reentrant model
  7541 ;;
  7542                           
  7543                           	psect	text9
  7544  003DF2                     __ptext9:
  7545                           	opt callstack 0
  7546  003DF2                     _utoa:
  7547                           	opt callstack 18
  7548  003DF2                     
  7549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  7550  003DF2  BE5C               	btfsc	(_prec+1)^0,7,c
  7551  003DF4  EFFE  F01E         	goto	u11161
  7552  003DF8  EF00  F01F         	goto	u11160
  7553  003DFC                     u11161:
  7554  003DFC  EF02  F01F         	goto	l8570
  7555  003E00                     u11160:
  7556  003E00                     
  7557                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  7558  003E00  0100               	movlb	0	; () banked
  7559  003E02  93FC               	bcf	_flags& (0+255),1,b
  7560  003E04                     l8570:
  7561                           
  7562                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  7563  003E04  BE5C               	btfsc	(_prec+1)^0,7,c
  7564  003E06  EF0F  F01F         	goto	u11170
  7565  003E0A  505C               	movf	(_prec+1)^0,w,c
  7566  003E0C  E106               	bnz	u11171
  7567  003E0E  045B               	decf	_prec^0,w,c
  7568  003E10  B0D8               	btfsc	status,0,c
  7569  003E12  EF0D  F01F         	goto	u11171
  7570  003E16  EF0F  F01F         	goto	u11170
  7571  003E1A                     u11171:
  7572  003E1A  EF15  F01F         	goto	l680
  7573  003E1E                     u11170:
  7574  003E1E  0E00               	movlw	0
  7575  003E20  6E31               	movwf	(utoa@p+1)^0,c
  7576  003E22  0E01               	movlw	1
  7577  003E24  6E30               	movwf	utoa@p^0,c
  7578  003E26  EF19  F01F         	goto	l682
  7579  003E2A                     l680:
  7580  003E2A  C05B  F030         	movff	_prec,utoa@p
  7581  003E2E  C05C  F031         	movff	_prec+1,utoa@p+1
  7582  003E32                     l682:
  7583                           
  7584                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  7585  003E32  C0FA  F032         	movff	_width,utoa@w
  7586  003E36  C0FB  F033         	movff	_width+1,utoa@w+1
  7587                           
  7588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  7589  003E3A  C020  F034         	movff	utoa@d,utoa@n
  7590  003E3E  C021  F035         	movff	utoa@d+1,utoa@n+1
  7591  003E42  C022  F036         	movff	utoa@d+2,utoa@n+2
  7592  003E46  C023  F037         	movff	utoa@d+3,utoa@n+3
  7593  003E4A  C024  F038         	movff	utoa@d+4,utoa@n+4
  7594  003E4E  C025  F039         	movff	utoa@d+5,utoa@n+5
  7595  003E52  C026  F03A         	movff	utoa@d+6,utoa@n+6
  7596  003E56  C027  F03B         	movff	utoa@d+7,utoa@n+7
  7597  003E5A                     
  7598                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  7599  003E5A  0E00               	movlw	0
  7600  003E5C  6E3D               	movwf	(utoa@i+1)^0,c
  7601  003E5E  0E4F               	movlw	79
  7602  003E60  6E3C               	movwf	utoa@i^0,c
  7603  003E62                     
  7604                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  7605  003E62  0E00               	movlw	0
  7606  003E64  0101               	movlb	1	; () banked
  7607  003E66  6FD7               	movwf	(_dbuf+79)& (0+255),b
  7608                           
  7609                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7610  003E68  EFAC  F01F         	goto	l8588
  7611  003E6C                     l8578:
  7612                           
  7613                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  7614  003E6C  063C               	decf	utoa@i^0,f,c
  7615  003E6E  A0D8               	btfss	status,0,c
  7616  003E70  063D               	decf	(utoa@i+1)^0,f,c
  7617  003E72                     
  7618                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  7619  003E72  0E88               	movlw	low _dbuf
  7620  003E74  243C               	addwf	utoa@i^0,w,c
  7621  003E76  6ED9               	movwf	fsr2l,c
  7622  003E78  0E01               	movlw	high _dbuf
  7623  003E7A  203D               	addwfc	(utoa@i+1)^0,w,c
  7624  003E7C  6EDA               	movwf	fsr2h,c
  7625  003E7E  C034  F003         	movff	utoa@n,___lomod@dividend
  7626  003E82  C035  F004         	movff	utoa@n+1,___lomod@dividend+1
  7627  003E86  C036  F005         	movff	utoa@n+2,___lomod@dividend+2
  7628  003E8A  C037  F006         	movff	utoa@n+3,___lomod@dividend+3
  7629  003E8E  C038  F007         	movff	utoa@n+4,___lomod@dividend+4
  7630  003E92  C039  F008         	movff	utoa@n+5,___lomod@dividend+5
  7631  003E96  C03A  F009         	movff	utoa@n+6,___lomod@dividend+6
  7632  003E9A  C03B  F00A         	movff	utoa@n+7,___lomod@dividend+7
  7633  003E9E  0E0A               	movlw	10
  7634  003EA0  6E0B               	movwf	___lomod@divisor^0,c
  7635  003EA2  0E00               	movlw	0
  7636  003EA4  6E0C               	movwf	(___lomod@divisor+1)^0,c
  7637  003EA6  0E00               	movlw	0
  7638  003EA8  6E0D               	movwf	(___lomod@divisor+2)^0,c
  7639  003EAA  0E00               	movlw	0
  7640  003EAC  6E0E               	movwf	(___lomod@divisor+3)^0,c
  7641  003EAE  0E00               	movlw	0
  7642  003EB0  6E0F               	movwf	(___lomod@divisor+4)^0,c
  7643  003EB2  0E00               	movlw	0
  7644  003EB4  6E10               	movwf	(___lomod@divisor+5)^0,c
  7645  003EB6  0E00               	movlw	0
  7646  003EB8  6E11               	movwf	(___lomod@divisor+6)^0,c
  7647  003EBA  0E00               	movlw	0
  7648  003EBC  6E12               	movwf	(___lomod@divisor+7)^0,c
  7649  003EBE  EC53  F029         	call	___lomod	;wreg free
  7650  003EC2  C003  F028         	movff	?___lomod,??_utoa
  7651  003EC6  C004  F029         	movff	?___lomod+1,??_utoa+1
  7652  003ECA  C005  F02A         	movff	?___lomod+2,??_utoa+2
  7653  003ECE  C006  F02B         	movff	?___lomod+3,??_utoa+3
  7654  003ED2  C007  F02C         	movff	?___lomod+4,??_utoa+4
  7655  003ED6  C008  F02D         	movff	?___lomod+5,??_utoa+5
  7656  003EDA  C009  F02E         	movff	?___lomod+6,??_utoa+6
  7657  003EDE  C00A  F02F         	movff	?___lomod+7,??_utoa+7
  7658  003EE2  5028               	movf	??_utoa^0,w,c
  7659  003EE4  0F30               	addlw	48
  7660  003EE6  6EDF               	movwf	indf2,c
  7661  003EE8                     
  7662                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  7663  003EE8  0630               	decf	utoa@p^0,f,c
  7664  003EEA  A0D8               	btfss	status,0,c
  7665  003EEC  0631               	decf	(utoa@p+1)^0,f,c
  7666  003EEE                     
  7667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  7668  003EEE  0632               	decf	utoa@w^0,f,c
  7669  003EF0  A0D8               	btfss	status,0,c
  7670  003EF2  0633               	decf	(utoa@w+1)^0,f,c
  7671  003EF4                     
  7672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  7673  003EF4  C034  F003         	movff	utoa@n,___lodiv@dividend
  7674  003EF8  C035  F004         	movff	utoa@n+1,___lodiv@dividend+1
  7675  003EFC  C036  F005         	movff	utoa@n+2,___lodiv@dividend+2
  7676  003F00  C037  F006         	movff	utoa@n+3,___lodiv@dividend+3
  7677  003F04  C038  F007         	movff	utoa@n+4,___lodiv@dividend+4
  7678  003F08  C039  F008         	movff	utoa@n+5,___lodiv@dividend+5
  7679  003F0C  C03A  F009         	movff	utoa@n+6,___lodiv@dividend+6
  7680  003F10  C03B  F00A         	movff	utoa@n+7,___lodiv@dividend+7
  7681  003F14  0E0A               	movlw	10
  7682  003F16  6E0B               	movwf	___lodiv@divisor^0,c
  7683  003F18  0E00               	movlw	0
  7684  003F1A  6E0C               	movwf	(___lodiv@divisor+1)^0,c
  7685  003F1C  0E00               	movlw	0
  7686  003F1E  6E0D               	movwf	(___lodiv@divisor+2)^0,c
  7687  003F20  0E00               	movlw	0
  7688  003F22  6E0E               	movwf	(___lodiv@divisor+3)^0,c
  7689  003F24  0E00               	movlw	0
  7690  003F26  6E0F               	movwf	(___lodiv@divisor+4)^0,c
  7691  003F28  0E00               	movlw	0
  7692  003F2A  6E10               	movwf	(___lodiv@divisor+5)^0,c
  7693  003F2C  0E00               	movlw	0
  7694  003F2E  6E11               	movwf	(___lodiv@divisor+6)^0,c
  7695  003F30  0E00               	movlw	0
  7696  003F32  6E12               	movwf	(___lodiv@divisor+7)^0,c
  7697  003F34  ECDB  F028         	call	___lodiv	;wreg free
  7698  003F38  C003  F034         	movff	?___lodiv,utoa@n
  7699  003F3C  C004  F035         	movff	?___lodiv+1,utoa@n+1
  7700  003F40  C005  F036         	movff	?___lodiv+2,utoa@n+2
  7701  003F44  C006  F037         	movff	?___lodiv+3,utoa@n+3
  7702  003F48  C007  F038         	movff	?___lodiv+4,utoa@n+4
  7703  003F4C  C008  F039         	movff	?___lodiv+5,utoa@n+5
  7704  003F50  C009  F03A         	movff	?___lodiv+6,utoa@n+6
  7705  003F54  C00A  F03B         	movff	?___lodiv+7,utoa@n+7
  7706  003F58                     l8588:
  7707                           
  7708                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7709  003F58  503C               	movf	utoa@i^0,w,c
  7710  003F5A  103D               	iorwf	(utoa@i+1)^0,w,c
  7711  003F5C  B4D8               	btfsc	status,2,c
  7712  003F5E  EFB3  F01F         	goto	u11181
  7713  003F62  EFB5  F01F         	goto	u11180
  7714  003F66                     u11181:
  7715  003F66  EFE6  F01F         	goto	l8598
  7716  003F6A                     u11180:
  7717  003F6A  5034               	movf	utoa@n^0,w,c
  7718  003F6C  1035               	iorwf	(utoa@n+1)^0,w,c
  7719  003F6E  1036               	iorwf	(utoa@n+2)^0,w,c
  7720  003F70  1037               	iorwf	(utoa@n+3)^0,w,c
  7721  003F72  1038               	iorwf	(utoa@n+4)^0,w,c
  7722  003F74  1039               	iorwf	(utoa@n+5)^0,w,c
  7723  003F76  103A               	iorwf	(utoa@n+6)^0,w,c
  7724  003F78  103B               	iorwf	(utoa@n+7)^0,w,c
  7725  003F7A  A4D8               	btfss	status,2,c
  7726  003F7C  EFC2  F01F         	goto	u11191
  7727  003F80  EFC4  F01F         	goto	u11190
  7728  003F84                     u11191:
  7729  003F84  EF36  F01F         	goto	l8578
  7730  003F88                     u11190:
  7731  003F88  BE31               	btfsc	(utoa@p+1)^0,7,c
  7732  003F8A  EFD1  F01F         	goto	u11200
  7733  003F8E  5031               	movf	(utoa@p+1)^0,w,c
  7734  003F90  E106               	bnz	u11201
  7735  003F92  0430               	decf	utoa@p^0,w,c
  7736  003F94  B0D8               	btfsc	status,0,c
  7737  003F96  EFCF  F01F         	goto	u11201
  7738  003F9A  EFD1  F01F         	goto	u11200
  7739  003F9E                     u11201:
  7740  003F9E  EF36  F01F         	goto	l8578
  7741  003FA2                     u11200:
  7742  003FA2  BE33               	btfsc	(utoa@w+1)^0,7,c
  7743  003FA4  EFDC  F01F         	goto	u11211
  7744  003FA8  5033               	movf	(utoa@w+1)^0,w,c
  7745  003FAA  E108               	bnz	u11210
  7746  003FAC  0432               	decf	utoa@w^0,w,c
  7747  003FAE  A0D8               	btfss	status,0,c
  7748  003FB0  EFDC  F01F         	goto	u11211
  7749  003FB4  EFDE  F01F         	goto	u11210
  7750  003FB8                     u11211:
  7751  003FB8  EFE6  F01F         	goto	l8598
  7752  003FBC                     u11210:
  7753  003FBC  0100               	movlb	0	; () banked
  7754  003FBE  B3FC               	btfsc	_flags& (0+255),1,b
  7755  003FC0  EFE4  F01F         	goto	u11221
  7756  003FC4  EFE6  F01F         	goto	u11220
  7757  003FC8                     u11221:
  7758  003FC8  EF36  F01F         	goto	l8578
  7759  003FCC                     u11220:
  7760  003FCC                     l8598:
  7761                           
  7762                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  7763  003FCC  C01E  F013         	movff	utoa@fp,pad@fp
  7764  003FD0  C01F  F014         	movff	utoa@fp+1,pad@fp+1
  7765  003FD4  0E88               	movlw	low _dbuf
  7766  003FD6  243C               	addwf	utoa@i^0,w,c
  7767  003FD8  6E15               	movwf	pad@buf^0,c
  7768  003FDA  0E01               	movlw	high _dbuf
  7769  003FDC  203D               	addwfc	(utoa@i+1)^0,w,c
  7770  003FDE  6E16               	movwf	(pad@buf+1)^0,c
  7771  003FE0  C032  F017         	movff	utoa@w,pad@p
  7772  003FE4  C033  F018         	movff	utoa@w+1,pad@p+1
  7773  003FE8  EC20  F02A         	call	_pad	;wreg free
  7774  003FEC  C013  F01E         	movff	?_pad,?_utoa
  7775  003FF0  C014  F01F         	movff	?_pad+1,?_utoa+1
  7776  003FF4  0012               	return		;funcret
  7777  003FF6                     __end_of_utoa:
  7778                           	opt callstack 0
  7779                           
  7780 ;; *************** function ___lomod *****************
  7781 ;; Defined at:
  7782 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  7783 ;; Parameters:    Size  Location     Type
  7784 ;;  dividend        8    2[COMRAM] unsigned long long 
  7785 ;;  divisor         8   10[COMRAM] unsigned long long 
  7786 ;; Auto vars:     Size  Location     Type
  7787 ;;  counter         1   18[COMRAM] unsigned char 
  7788 ;; Return value:  Size  Location     Type
  7789 ;;                  8    2[COMRAM] unsigned long long 
  7790 ;; Registers used:
  7791 ;;		wreg, status,2, status,0
  7792 ;; Tracked objects:
  7793 ;;		On entry : 0/0
  7794 ;;		On exit  : 0/0
  7795 ;;		Unchanged: 0/0
  7796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7797 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7798 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7800 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7801 ;;Total ram usage:       17 bytes
  7802 ;; Hardware stack levels used:    1
  7803 ;; Hardware stack levels required when called:    4
  7804 ;; This function calls:
  7805 ;;		Nothing
  7806 ;; This function is called by:
  7807 ;;		_utoa
  7808 ;; This function uses a non-reentrant model
  7809 ;;
  7810                           
  7811                           	psect	text10
  7812  0052A6                     __ptext10:
  7813                           	opt callstack 0
  7814  0052A6                     ___lomod:
  7815                           	opt callstack 21
  7816  0052A6  500B               	movf	___lomod@divisor^0,w,c
  7817  0052A8  100C               	iorwf	(___lomod@divisor+1)^0,w,c
  7818  0052AA  100D               	iorwf	(___lomod@divisor+2)^0,w,c
  7819  0052AC  100E               	iorwf	(___lomod@divisor+3)^0,w,c
  7820  0052AE  100F               	iorwf	(___lomod@divisor+4)^0,w,c
  7821  0052B0  1010               	iorwf	(___lomod@divisor+5)^0,w,c
  7822  0052B2  1011               	iorwf	(___lomod@divisor+6)^0,w,c
  7823  0052B4  1012               	iorwf	(___lomod@divisor+7)^0,w,c
  7824  0052B6  B4D8               	btfsc	status,2,c
  7825  0052B8  EF60  F029         	goto	u10241
  7826  0052BC  EF62  F029         	goto	u10240
  7827  0052C0                     u10241:
  7828  0052C0  EFAA  F029         	goto	l1263
  7829  0052C4                     u10240:
  7830  0052C4  0E01               	movlw	1
  7831  0052C6  6E13               	movwf	___lomod@counter^0,c
  7832  0052C8  EF70  F029         	goto	l8080
  7833  0052CC                     l8078:
  7834  0052CC  90D8               	bcf	status,0,c
  7835  0052CE  360B               	rlcf	___lomod@divisor^0,f,c
  7836  0052D0  360C               	rlcf	(___lomod@divisor+1)^0,f,c
  7837  0052D2  360D               	rlcf	(___lomod@divisor+2)^0,f,c
  7838  0052D4  360E               	rlcf	(___lomod@divisor+3)^0,f,c
  7839  0052D6  360F               	rlcf	(___lomod@divisor+4)^0,f,c
  7840  0052D8  3610               	rlcf	(___lomod@divisor+5)^0,f,c
  7841  0052DA  3611               	rlcf	(___lomod@divisor+6)^0,f,c
  7842  0052DC  3612               	rlcf	(___lomod@divisor+7)^0,f,c
  7843  0052DE  2A13               	incf	___lomod@counter^0,f,c
  7844  0052E0                     l8080:
  7845  0052E0  AE12               	btfss	(___lomod@divisor+7)^0,7,c
  7846  0052E2  EF75  F029         	goto	u10251
  7847  0052E6  EF77  F029         	goto	u10250
  7848  0052EA                     u10251:
  7849  0052EA  EF66  F029         	goto	l8078
  7850  0052EE                     u10250:
  7851  0052EE                     l8082:
  7852  0052EE  500B               	movf	___lomod@divisor^0,w,c
  7853  0052F0  5C03               	subwf	___lomod@dividend^0,w,c
  7854  0052F2  500C               	movf	(___lomod@divisor+1)^0,w,c
  7855  0052F4  5804               	subwfb	(___lomod@dividend+1)^0,w,c
  7856  0052F6  500D               	movf	(___lomod@divisor+2)^0,w,c
  7857  0052F8  5805               	subwfb	(___lomod@dividend+2)^0,w,c
  7858  0052FA  500E               	movf	(___lomod@divisor+3)^0,w,c
  7859  0052FC  5806               	subwfb	(___lomod@dividend+3)^0,w,c
  7860  0052FE  500F               	movf	(___lomod@divisor+4)^0,w,c
  7861  005300  5807               	subwfb	(___lomod@dividend+4)^0,w,c
  7862  005302  5010               	movf	(___lomod@divisor+5)^0,w,c
  7863  005304  5808               	subwfb	(___lomod@dividend+5)^0,w,c
  7864  005306  5011               	movf	(___lomod@divisor+6)^0,w,c
  7865  005308  5809               	subwfb	(___lomod@dividend+6)^0,w,c
  7866  00530A  5012               	movf	(___lomod@divisor+7)^0,w,c
  7867  00530C  580A               	subwfb	(___lomod@dividend+7)^0,w,c
  7868  00530E  A0D8               	btfss	status,0,c
  7869  005310  EF8C  F029         	goto	u10261
  7870  005314  EF8E  F029         	goto	u10260
  7871  005318                     u10261:
  7872  005318  EF9E  F029         	goto	l8086
  7873  00531C                     u10260:
  7874  00531C  500B               	movf	___lomod@divisor^0,w,c
  7875  00531E  5E03               	subwf	___lomod@dividend^0,f,c
  7876  005320  500C               	movf	(___lomod@divisor+1)^0,w,c
  7877  005322  5A04               	subwfb	(___lomod@dividend+1)^0,f,c
  7878  005324  500D               	movf	(___lomod@divisor+2)^0,w,c
  7879  005326  5A05               	subwfb	(___lomod@dividend+2)^0,f,c
  7880  005328  500E               	movf	(___lomod@divisor+3)^0,w,c
  7881  00532A  5A06               	subwfb	(___lomod@dividend+3)^0,f,c
  7882  00532C  500F               	movf	(___lomod@divisor+4)^0,w,c
  7883  00532E  5A07               	subwfb	(___lomod@dividend+4)^0,f,c
  7884  005330  5010               	movf	(___lomod@divisor+5)^0,w,c
  7885  005332  5A08               	subwfb	(___lomod@dividend+5)^0,f,c
  7886  005334  5011               	movf	(___lomod@divisor+6)^0,w,c
  7887  005336  5A09               	subwfb	(___lomod@dividend+6)^0,f,c
  7888  005338  5012               	movf	(___lomod@divisor+7)^0,w,c
  7889  00533A  5A0A               	subwfb	(___lomod@dividend+7)^0,f,c
  7890  00533C                     l8086:
  7891  00533C  90D8               	bcf	status,0,c
  7892  00533E  3212               	rrcf	(___lomod@divisor+7)^0,f,c
  7893  005340  3211               	rrcf	(___lomod@divisor+6)^0,f,c
  7894  005342  3210               	rrcf	(___lomod@divisor+5)^0,f,c
  7895  005344  320F               	rrcf	(___lomod@divisor+4)^0,f,c
  7896  005346  320E               	rrcf	(___lomod@divisor+3)^0,f,c
  7897  005348  320D               	rrcf	(___lomod@divisor+2)^0,f,c
  7898  00534A  320C               	rrcf	(___lomod@divisor+1)^0,f,c
  7899  00534C  320B               	rrcf	___lomod@divisor^0,f,c
  7900  00534E  2E13               	decfsz	___lomod@counter^0,f,c
  7901  005350  EF77  F029         	goto	l8082
  7902  005354                     l1263:
  7903  005354  C003  F003         	movff	___lomod@dividend,?___lomod
  7904  005358  C004  F004         	movff	___lomod@dividend+1,?___lomod+1
  7905  00535C  C005  F005         	movff	___lomod@dividend+2,?___lomod+2
  7906  005360  C006  F006         	movff	___lomod@dividend+3,?___lomod+3
  7907  005364  C007  F007         	movff	___lomod@dividend+4,?___lomod+4
  7908  005368  C008  F008         	movff	___lomod@dividend+5,?___lomod+5
  7909  00536C  C009  F009         	movff	___lomod@dividend+6,?___lomod+6
  7910  005370  C00A  F00A         	movff	___lomod@dividend+7,?___lomod+7
  7911  005374  0012               	return		;funcret
  7912  005376                     __end_of___lomod:
  7913                           	opt callstack 0
  7914                           
  7915 ;; *************** function ___lodiv *****************
  7916 ;; Defined at:
  7917 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  7918 ;; Parameters:    Size  Location     Type
  7919 ;;  dividend        8    2[COMRAM] unsigned long long 
  7920 ;;  divisor         8   10[COMRAM] unsigned long long 
  7921 ;; Auto vars:     Size  Location     Type
  7922 ;;  quotient        8   18[COMRAM] unsigned long long 
  7923 ;;  counter         1   26[COMRAM] unsigned char 
  7924 ;; Return value:  Size  Location     Type
  7925 ;;                  8    2[COMRAM] unsigned long long 
  7926 ;; Registers used:
  7927 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7928 ;; Tracked objects:
  7929 ;;		On entry : 0/0
  7930 ;;		On exit  : 0/0
  7931 ;;		Unchanged: 0/0
  7932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7933 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7934 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7936 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7937 ;;Total ram usage:       25 bytes
  7938 ;; Hardware stack levels used:    1
  7939 ;; Hardware stack levels required when called:    4
  7940 ;; This function calls:
  7941 ;;		Nothing
  7942 ;; This function is called by:
  7943 ;;		_utoa
  7944 ;; This function uses a non-reentrant model
  7945 ;;
  7946                           
  7947                           	psect	text11
  7948  0051B6                     __ptext11:
  7949                           	opt callstack 0
  7950  0051B6                     ___lodiv:
  7951                           	opt callstack 21
  7952  0051B6  EE20  F013         	lfsr	2,___lodiv@quotient
  7953  0051BA  0E07               	movlw	7
  7954  0051BC                     u10201:
  7955  0051BC  6ADE               	clrf	postinc2,c
  7956  0051BE  06E8               	decf	wreg,f,c
  7957  0051C0  E2FD               	bc	u10201
  7958  0051C2  500B               	movf	___lodiv@divisor^0,w,c
  7959  0051C4  100C               	iorwf	(___lodiv@divisor+1)^0,w,c
  7960  0051C6  100D               	iorwf	(___lodiv@divisor+2)^0,w,c
  7961  0051C8  100E               	iorwf	(___lodiv@divisor+3)^0,w,c
  7962  0051CA  100F               	iorwf	(___lodiv@divisor+4)^0,w,c
  7963  0051CC  1010               	iorwf	(___lodiv@divisor+5)^0,w,c
  7964  0051CE  1011               	iorwf	(___lodiv@divisor+6)^0,w,c
  7965  0051D0  1012               	iorwf	(___lodiv@divisor+7)^0,w,c
  7966  0051D2  B4D8               	btfsc	status,2,c
  7967  0051D4  EFEE  F028         	goto	u10211
  7968  0051D8  EFF0  F028         	goto	u10210
  7969  0051DC                     u10211:
  7970  0051DC  EF42  F029         	goto	l1253
  7971  0051E0                     u10210:
  7972  0051E0  0E01               	movlw	1
  7973  0051E2  6E1B               	movwf	___lodiv@counter^0,c
  7974  0051E4  EFFE  F028         	goto	l8060
  7975  0051E8                     l8058:
  7976  0051E8  90D8               	bcf	status,0,c
  7977  0051EA  360B               	rlcf	___lodiv@divisor^0,f,c
  7978  0051EC  360C               	rlcf	(___lodiv@divisor+1)^0,f,c
  7979  0051EE  360D               	rlcf	(___lodiv@divisor+2)^0,f,c
  7980  0051F0  360E               	rlcf	(___lodiv@divisor+3)^0,f,c
  7981  0051F2  360F               	rlcf	(___lodiv@divisor+4)^0,f,c
  7982  0051F4  3610               	rlcf	(___lodiv@divisor+5)^0,f,c
  7983  0051F6  3611               	rlcf	(___lodiv@divisor+6)^0,f,c
  7984  0051F8  3612               	rlcf	(___lodiv@divisor+7)^0,f,c
  7985  0051FA  2A1B               	incf	___lodiv@counter^0,f,c
  7986  0051FC                     l8060:
  7987  0051FC  AE12               	btfss	(___lodiv@divisor+7)^0,7,c
  7988  0051FE  EF03  F029         	goto	u10221
  7989  005202  EF05  F029         	goto	u10220
  7990  005206                     u10221:
  7991  005206  EFF4  F028         	goto	l8058
  7992  00520A                     u10220:
  7993  00520A                     l8062:
  7994  00520A  90D8               	bcf	status,0,c
  7995  00520C  3613               	rlcf	___lodiv@quotient^0,f,c
  7996  00520E  3614               	rlcf	(___lodiv@quotient+1)^0,f,c
  7997  005210  3615               	rlcf	(___lodiv@quotient+2)^0,f,c
  7998  005212  3616               	rlcf	(___lodiv@quotient+3)^0,f,c
  7999  005214  3617               	rlcf	(___lodiv@quotient+4)^0,f,c
  8000  005216  3618               	rlcf	(___lodiv@quotient+5)^0,f,c
  8001  005218  3619               	rlcf	(___lodiv@quotient+6)^0,f,c
  8002  00521A  361A               	rlcf	(___lodiv@quotient+7)^0,f,c
  8003  00521C  500B               	movf	___lodiv@divisor^0,w,c
  8004  00521E  5C03               	subwf	___lodiv@dividend^0,w,c
  8005  005220  500C               	movf	(___lodiv@divisor+1)^0,w,c
  8006  005222  5804               	subwfb	(___lodiv@dividend+1)^0,w,c
  8007  005224  500D               	movf	(___lodiv@divisor+2)^0,w,c
  8008  005226  5805               	subwfb	(___lodiv@dividend+2)^0,w,c
  8009  005228  500E               	movf	(___lodiv@divisor+3)^0,w,c
  8010  00522A  5806               	subwfb	(___lodiv@dividend+3)^0,w,c
  8011  00522C  500F               	movf	(___lodiv@divisor+4)^0,w,c
  8012  00522E  5807               	subwfb	(___lodiv@dividend+4)^0,w,c
  8013  005230  5010               	movf	(___lodiv@divisor+5)^0,w,c
  8014  005232  5808               	subwfb	(___lodiv@dividend+5)^0,w,c
  8015  005234  5011               	movf	(___lodiv@divisor+6)^0,w,c
  8016  005236  5809               	subwfb	(___lodiv@dividend+6)^0,w,c
  8017  005238  5012               	movf	(___lodiv@divisor+7)^0,w,c
  8018  00523A  580A               	subwfb	(___lodiv@dividend+7)^0,w,c
  8019  00523C  A0D8               	btfss	status,0,c
  8020  00523E  EF23  F029         	goto	u10231
  8021  005242  EF25  F029         	goto	u10230
  8022  005246                     u10231:
  8023  005246  EF36  F029         	goto	l8070
  8024  00524A                     u10230:
  8025  00524A  500B               	movf	___lodiv@divisor^0,w,c
  8026  00524C  5E03               	subwf	___lodiv@dividend^0,f,c
  8027  00524E  500C               	movf	(___lodiv@divisor+1)^0,w,c
  8028  005250  5A04               	subwfb	(___lodiv@dividend+1)^0,f,c
  8029  005252  500D               	movf	(___lodiv@divisor+2)^0,w,c
  8030  005254  5A05               	subwfb	(___lodiv@dividend+2)^0,f,c
  8031  005256  500E               	movf	(___lodiv@divisor+3)^0,w,c
  8032  005258  5A06               	subwfb	(___lodiv@dividend+3)^0,f,c
  8033  00525A  500F               	movf	(___lodiv@divisor+4)^0,w,c
  8034  00525C  5A07               	subwfb	(___lodiv@dividend+4)^0,f,c
  8035  00525E  5010               	movf	(___lodiv@divisor+5)^0,w,c
  8036  005260  5A08               	subwfb	(___lodiv@dividend+5)^0,f,c
  8037  005262  5011               	movf	(___lodiv@divisor+6)^0,w,c
  8038  005264  5A09               	subwfb	(___lodiv@dividend+6)^0,f,c
  8039  005266  5012               	movf	(___lodiv@divisor+7)^0,w,c
  8040  005268  5A0A               	subwfb	(___lodiv@dividend+7)^0,f,c
  8041  00526A  8013               	bsf	___lodiv@quotient^0,0,c
  8042  00526C                     l8070:
  8043  00526C  90D8               	bcf	status,0,c
  8044  00526E  3212               	rrcf	(___lodiv@divisor+7)^0,f,c
  8045  005270  3211               	rrcf	(___lodiv@divisor+6)^0,f,c
  8046  005272  3210               	rrcf	(___lodiv@divisor+5)^0,f,c
  8047  005274  320F               	rrcf	(___lodiv@divisor+4)^0,f,c
  8048  005276  320E               	rrcf	(___lodiv@divisor+3)^0,f,c
  8049  005278  320D               	rrcf	(___lodiv@divisor+2)^0,f,c
  8050  00527A  320C               	rrcf	(___lodiv@divisor+1)^0,f,c
  8051  00527C  320B               	rrcf	___lodiv@divisor^0,f,c
  8052  00527E  2E1B               	decfsz	___lodiv@counter^0,f,c
  8053  005280  EF05  F029         	goto	l8062
  8054  005284                     l1253:
  8055  005284  C013  F003         	movff	___lodiv@quotient,?___lodiv
  8056  005288  C014  F004         	movff	___lodiv@quotient+1,?___lodiv+1
  8057  00528C  C015  F005         	movff	___lodiv@quotient+2,?___lodiv+2
  8058  005290  C016  F006         	movff	___lodiv@quotient+3,?___lodiv+3
  8059  005294  C017  F007         	movff	___lodiv@quotient+4,?___lodiv+4
  8060  005298  C018  F008         	movff	___lodiv@quotient+5,?___lodiv+5
  8061  00529C  C019  F009         	movff	___lodiv@quotient+6,?___lodiv+6
  8062  0052A0  C01A  F00A         	movff	___lodiv@quotient+7,?___lodiv+7
  8063  0052A4  0012               	return		;funcret
  8064  0052A6                     __end_of___lodiv:
  8065                           	opt callstack 0
  8066                           
  8067 ;; *************** function _strncmp *****************
  8068 ;; Defined at:
  8069 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  8070 ;; Parameters:    Size  Location     Type
  8071 ;;  _l              2    2[COMRAM] PTR const unsigned char 
  8072 ;;		 -> vfpfcnvrt@ct(3), STR_6(15), STR_5(15), STR_4(22), 
  8073 ;;		 -> STR_3(16), STR_2(17), 
  8074 ;;  _r              2    4[COMRAM] PTR const unsigned char 
  8075 ;;		 -> STR_116(3), STR_112(3), STR_107(3), STR_103(3), 
  8076 ;;		 -> STR_98(4), STR_94(4), STR_89(3), STR_84(3), 
  8077 ;;		 -> STR_79(4), STR_74(3), STR_69(3), STR_64(4), 
  8078 ;;		 -> STR_59(3), STR_54(3), STR_49(4), STR_44(3), 
  8079 ;;		 -> STR_39(3), STR_35(3), STR_30(3), STR_26(3), 
  8080 ;;		 -> STR_21(4), STR_17(4), 
  8081 ;;  n               2    6[COMRAM] unsigned int 
  8082 ;; Auto vars:     Size  Location     Type
  8083 ;;  r               2   11[COMRAM] PTR const unsigned char 
  8084 ;;		 -> STR_116(3), STR_112(3), STR_107(3), STR_103(3), 
  8085 ;;		 -> STR_98(4), STR_94(4), STR_89(3), STR_84(3), 
  8086 ;;		 -> STR_79(4), STR_74(3), STR_69(3), STR_64(4), 
  8087 ;;		 -> STR_59(3), STR_54(3), STR_49(4), STR_44(3), 
  8088 ;;		 -> STR_39(3), STR_35(3), STR_30(3), STR_26(3), 
  8089 ;;		 -> STR_21(4), STR_17(4), 
  8090 ;;  l               2    9[COMRAM] PTR const unsigned char 
  8091 ;;		 -> vfpfcnvrt@ct(3), STR_6(15), STR_5(15), STR_4(22), 
  8092 ;;		 -> STR_3(16), STR_2(17), 
  8093 ;; Return value:  Size  Location     Type
  8094 ;;                  2    2[COMRAM] int 
  8095 ;; Registers used:
  8096 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  8097 ;; Tracked objects:
  8098 ;;		On entry : 0/0
  8099 ;;		On exit  : 0/0
  8100 ;;		Unchanged: 0/0
  8101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8102 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8103 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8104 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8105 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8106 ;;Total ram usage:       11 bytes
  8107 ;; Hardware stack levels used:    1
  8108 ;; Hardware stack levels required when called:    4
  8109 ;; This function calls:
  8110 ;;		Nothing
  8111 ;; This function is called by:
  8112 ;;		_vfpfcnvrt
  8113 ;; This function uses a non-reentrant model
  8114 ;;
  8115                           
  8116                           	psect	text12
  8117  004D88                     __ptext12:
  8118                           	opt callstack 0
  8119  004D88                     _strncmp:
  8120                           	opt callstack 22
  8121  004D88  C003  F00A         	movff	strncmp@_l,strncmp@l
  8122  004D8C  C004  F00B         	movff	strncmp@_l+1,strncmp@l+1
  8123  004D90  C005  F00C         	movff	strncmp@_r,strncmp@r
  8124  004D94  C006  F00D         	movff	strncmp@_r+1,strncmp@r+1
  8125  004D98  0607               	decf	strncmp@n^0,f,c
  8126  004D9A  A0D8               	btfss	status,0,c
  8127  004D9C  0608               	decf	(strncmp@n+1)^0,f,c
  8128  004D9E  2807               	incf	strncmp@n^0,w,c
  8129  004DA0  E106               	bnz	u11471
  8130  004DA2  2808               	incf	(strncmp@n+1)^0,w,c
  8131  004DA4  A4D8               	btfss	status,2,c
  8132  004DA6  EFD7  F026         	goto	u11471
  8133  004DAA  EFD9  F026         	goto	u11470
  8134  004DAE                     u11471:
  8135  004DAE  EFE6  F026         	goto	l8718
  8136  004DB2                     u11470:
  8137  004DB2  0E00               	movlw	0
  8138  004DB4  6E04               	movwf	(?_strncmp+1)^0,c
  8139  004DB6  0E00               	movlw	0
  8140  004DB8  6E03               	movwf	?_strncmp^0,c
  8141  004DBA  EF56  F027         	goto	l1620
  8142  004DBE                     l8716:
  8143  004DBE  4A0A               	infsnz	strncmp@l^0,f,c
  8144  004DC0  2A0B               	incf	(strncmp@l+1)^0,f,c
  8145  004DC2  4A0C               	infsnz	strncmp@r^0,f,c
  8146  004DC4  2A0D               	incf	(strncmp@r+1)^0,f,c
  8147  004DC6  0607               	decf	strncmp@n^0,f,c
  8148  004DC8  A0D8               	btfss	status,0,c
  8149  004DCA  0608               	decf	(strncmp@n+1)^0,f,c
  8150  004DCC                     l8718:
  8151  004DCC  C00A  FFF6         	movff	strncmp@l,tblptrl
  8152  004DD0  C00B  FFF7         	movff	strncmp@l+1,tblptrh
  8153  004DD4  0E00               	movlw	low (__mediumconst shr (0+16))
  8154  004DD6  6EF8               	movwf	tblptru,c
  8155  004DD8  0E0E               	movlw	(high __ramtop+-1)
  8156  004DDA  64F7               	cpfsgt	tblptrh,c
  8157  004DDC  D003               	bra	u11487
  8158  004DDE  0008               	tblrd		*
  8159  004DE0  50F5               	movf	tablat,w,c
  8160  004DE2  D005               	bra	u11480
  8161  004DE4                     u11487:
  8162  004DE4  CFF6 FFE1          	movff	tblptrl,fsr1l
  8163  004DE8  CFF7 FFE2          	movff	tblptrh,fsr1h
  8164  004DEC  50E7               	movf	indf1,w,c
  8165  004DEE                     u11480:
  8166  004DEE  0900               	iorlw	0
  8167  004DF0  B4D8               	btfsc	status,2,c
  8168  004DF2  EFFD  F026         	goto	u11491
  8169  004DF6  EFFF  F026         	goto	u11490
  8170  004DFA                     u11491:
  8171  004DFA  EF38  F027         	goto	l8726
  8172  004DFE                     u11490:
  8173  004DFE  C00C  FFF6         	movff	strncmp@r,tblptrl
  8174  004E02  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  8175  004E06                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8176  004E06  6AF8               	clrf	tblptru,c
  8177  004E08                     	endif
  8178  004E08                     	if	0	;tblptru may be non-zero
  8179  004E08                     	endif
  8180  004E08  0008               	tblrd		*
  8181  004E0A  50F5               	movf	tablat,w,c
  8182  004E0C  0900               	iorlw	0
  8183  004E0E  B4D8               	btfsc	status,2,c
  8184  004E10  EF0C  F027         	goto	u11501
  8185  004E14  EF0E  F027         	goto	u11500
  8186  004E18                     u11501:
  8187  004E18  EF38  F027         	goto	l8726
  8188  004E1C                     u11500:
  8189  004E1C  5007               	movf	strncmp@n^0,w,c
  8190  004E1E  1008               	iorwf	(strncmp@n+1)^0,w,c
  8191  004E20  B4D8               	btfsc	status,2,c
  8192  004E22  EF15  F027         	goto	u11511
  8193  004E26  EF17  F027         	goto	u11510
  8194  004E2A                     u11511:
  8195  004E2A  EF38  F027         	goto	l8726
  8196  004E2E                     u11510:
  8197  004E2E  C00C  FFF6         	movff	strncmp@r,tblptrl
  8198  004E32  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  8199  004E36                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8200  004E36  6AF8               	clrf	tblptru,c
  8201  004E38                     	endif
  8202  004E38                     	if	0	;tblptru may be non-zero
  8203  004E38                     	endif
  8204  004E38  0008               	tblrd		*
  8205  004E3A  CFF5 F009          	movff	tablat,??_strncmp
  8206  004E3E  C00A  FFF6         	movff	strncmp@l,tblptrl
  8207  004E42  C00B  FFF7         	movff	strncmp@l+1,tblptrh
  8208  004E46  0E00               	movlw	low (__mediumconst shr (0+16))
  8209  004E48  6EF8               	movwf	tblptru,c
  8210  004E4A  0E0E               	movlw	(high __ramtop+-1)
  8211  004E4C  64F7               	cpfsgt	tblptrh,c
  8212  004E4E  D003               	bra	u11527
  8213  004E50  0008               	tblrd		*
  8214  004E52  50F5               	movf	tablat,w,c
  8215  004E54  D005               	bra	u11525
  8216  004E56                     u11527:
  8217  004E56  CFF6 FFE1          	movff	tblptrl,fsr1l
  8218  004E5A  CFF7 FFE2          	movff	tblptrh,fsr1h
  8219  004E5E  50E7               	movf	indf1,w,c
  8220  004E60                     u11525:
  8221  004E60  1809               	xorwf	??_strncmp^0,w,c
  8222  004E62  B4D8               	btfsc	status,2,c
  8223  004E64  EF36  F027         	goto	u11521
  8224  004E68  EF38  F027         	goto	u11520
  8225  004E6C                     u11521:
  8226  004E6C  EFDF  F026         	goto	l8716
  8227  004E70                     u11520:
  8228  004E70                     l8726:
  8229  004E70  C00A  FFF6         	movff	strncmp@l,tblptrl
  8230  004E74  C00B  FFF7         	movff	strncmp@l+1,tblptrh
  8231  004E78  0E00               	movlw	low (__mediumconst shr (0+16))
  8232  004E7A  6EF8               	movwf	tblptru,c
  8233  004E7C  0E0E               	movlw	(high __ramtop+-1)
  8234  004E7E  64F7               	cpfsgt	tblptrh,c
  8235  004E80  D003               	bra	u11537
  8236  004E82  0008               	tblrd		*
  8237  004E84  50F5               	movf	tablat,w,c
  8238  004E86  D005               	bra	u11530
  8239  004E88                     u11537:
  8240  004E88  CFF6 FFE1          	movff	tblptrl,fsr1l
  8241  004E8C  CFF7 FFE2          	movff	tblptrh,fsr1h
  8242  004E90  50E7               	movf	indf1,w,c
  8243  004E92                     u11530:
  8244  004E92  6E09               	movwf	??_strncmp^0,c
  8245  004E94  C00C  FFF6         	movff	strncmp@r,tblptrl
  8246  004E98  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  8247  004E9C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8248  004E9C  6AF8               	clrf	tblptru,c
  8249  004E9E                     	endif
  8250  004E9E                     	if	0	;tblptru may be non-zero
  8251  004E9E                     	endif
  8252  004E9E  0008               	tblrd		*
  8253  004EA0  50F5               	movf	tablat,w,c
  8254  004EA2  5C09               	subwf	??_strncmp^0,w,c
  8255  004EA4  6E03               	movwf	?_strncmp^0,c
  8256  004EA6  6A04               	clrf	(?_strncmp+1)^0,c
  8257  004EA8  A0D8               	btfss	status,0,c
  8258  004EAA  0604               	decf	(?_strncmp+1)^0,f,c
  8259  004EAC                     l1620:
  8260  004EAC  0012               	return		;funcret
  8261  004EAE                     __end_of_strncmp:
  8262                           	opt callstack 0
  8263                           
  8264 ;; *************** function _stoa *****************
  8265 ;; Defined at:
  8266 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8267 ;; Parameters:    Size  Location     Type
  8268 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8269 ;;		 -> vsnprintf@f(6), 
  8270 ;;  s               2   13[COMRAM] PTR unsigned char 
  8271 ;;		 -> ?_snprintf(2), tensao_in(4), 
  8272 ;; Auto vars:     Size  Location     Type
  8273 ;;  nuls            7   16[COMRAM] unsigned char [7]
  8274 ;;  l               2   31[COMRAM] int 
  8275 ;;  p               2   29[COMRAM] int 
  8276 ;;  cp              2   27[COMRAM] PTR unsigned char 
  8277 ;;		 -> ?_snprintf(2), stoa@nuls(7), tensao_in(4), 
  8278 ;;  w               2   25[COMRAM] int 
  8279 ;;  i               2   23[COMRAM] int 
  8280 ;; Return value:  Size  Location     Type
  8281 ;;                  2   11[COMRAM] int 
  8282 ;; Registers used:
  8283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8284 ;; Tracked objects:
  8285 ;;		On entry : 0/0
  8286 ;;		On exit  : 0/0
  8287 ;;		Unchanged: 0/0
  8288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8289 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8290 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8291 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8292 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8293 ;;Total ram usage:       22 bytes
  8294 ;; Hardware stack levels used:    1
  8295 ;; Hardware stack levels required when called:    6
  8296 ;; This function calls:
  8297 ;;		_fputc
  8298 ;;		_strlen
  8299 ;; This function is called by:
  8300 ;;		_vfpfcnvrt
  8301 ;; This function uses a non-reentrant model
  8302 ;;
  8303                           
  8304                           	psect	text13
  8305  0046BC                     __ptext13:
  8306                           	opt callstack 0
  8307  0046BC                     _stoa:
  8308                           	opt callstack 20
  8309  0046BC                     
  8310                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8311  0046BC  EE21  F0F4         	lfsr	2,stoa@F1174
  8312  0046C0  EE10  F011         	lfsr	1,stoa@nuls
  8313  0046C4  0E06               	movlw	6
  8314  0046C6                     u11071:
  8315  0046C6  CFDB FFE3          	movff	plusw2,plusw1
  8316  0046CA  06E8               	decf	wreg,f,c
  8317  0046CC  E2FC               	bc	u11071
  8318  0046CE                     
  8319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  8320  0046CE  C00E  F01C         	movff	stoa@s,stoa@cp
  8321  0046D2  C00F  F01D         	movff	stoa@s+1,stoa@cp+1
  8322  0046D6                     
  8323                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  8324  0046D6  501C               	movf	stoa@cp^0,w,c
  8325  0046D8  101D               	iorwf	(stoa@cp+1)^0,w,c
  8326  0046DA  A4D8               	btfss	status,2,c
  8327  0046DC  EF72  F023         	goto	u11081
  8328  0046E0  EF74  F023         	goto	u11080
  8329  0046E4                     u11081:
  8330  0046E4  EF78  F023         	goto	l8532
  8331  0046E8                     u11080:
  8332  0046E8                     
  8333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  8334  0046E8  0E11               	movlw	low stoa@nuls
  8335  0046EA  6E1C               	movwf	stoa@cp^0,c
  8336  0046EC  0E00               	movlw	high stoa@nuls
  8337  0046EE  6E1D               	movwf	(stoa@cp+1)^0,c
  8338  0046F0                     l8532:
  8339                           
  8340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  8341  0046F0  C01C  F003         	movff	stoa@cp,strlen@s
  8342  0046F4  C01D  F004         	movff	stoa@cp+1,strlen@s+1
  8343  0046F8  EC10  F02F         	call	_strlen	;wreg free
  8344  0046FC  C003  F020         	movff	?_strlen,stoa@l
  8345  004700  C004  F021         	movff	?_strlen+1,stoa@l+1
  8346  004704                     
  8347                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8348  004704  C05B  F01E         	movff	_prec,stoa@p
  8349  004708  C05C  F01F         	movff	_prec+1,stoa@p+1
  8350  00470C                     
  8351                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8352  00470C  BE1F               	btfsc	(stoa@p+1)^0,7,c
  8353  00470E  EF8B  F023         	goto	u11091
  8354  004712  EF8D  F023         	goto	u11090
  8355  004716                     u11091:
  8356  004716  EFA2  F023         	goto	l661
  8357  00471A                     u11090:
  8358  00471A  5020               	movf	stoa@l^0,w,c
  8359  00471C  5C1E               	subwf	stoa@p^0,w,c
  8360  00471E  501F               	movf	(stoa@p+1)^0,w,c
  8361  004720  0A80               	xorlw	128
  8362  004722  6E10               	movwf	??_stoa^0,c
  8363  004724  5021               	movf	(stoa@l+1)^0,w,c
  8364  004726  0A80               	xorlw	128
  8365  004728  5810               	subwfb	??_stoa^0,w,c
  8366  00472A  A0D8               	btfss	status,0,c
  8367  00472C  EF9A  F023         	goto	u11101
  8368  004730  EF9C  F023         	goto	u11100
  8369  004734                     u11101:
  8370  004734  EF9E  F023         	goto	l659
  8371  004738                     u11100:
  8372  004738  EFA2  F023         	goto	l661
  8373  00473C                     l659:
  8374  00473C  C01E  F020         	movff	stoa@p,stoa@l
  8375  004740  C01F  F021         	movff	stoa@p+1,stoa@l+1
  8376  004744                     l661:
  8377                           
  8378                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8379  004744  C020  F01E         	movff	stoa@l,stoa@p
  8380  004748  C021  F01F         	movff	stoa@l+1,stoa@p+1
  8381                           
  8382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8383  00474C  C0FA  F01A         	movff	_width,stoa@w
  8384  004750  C0FB  F01B         	movff	_width+1,stoa@w+1
  8385                           
  8386                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8387  004754  0100               	movlb	0	; () banked
  8388  004756  B1FC               	btfsc	_flags& (0+255),0,b
  8389  004758  EFB0  F023         	goto	u11111
  8390  00475C  EFB2  F023         	goto	u11110
  8391  004760                     u11111:
  8392  004760  EFCF  F023         	goto	l8548
  8393  004764                     u11110:
  8394  004764  EFC0  F023         	goto	l8546
  8395  004768                     l8542:
  8396                           
  8397                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8398  004768  0E00               	movlw	0
  8399  00476A  6E04               	movwf	(fputc@c+1)^0,c
  8400  00476C  0E20               	movlw	32
  8401  00476E  6E03               	movwf	fputc@c^0,c
  8402  004770  C00C  F005         	movff	stoa@fp,fputc@fp
  8403  004774  C00D  F006         	movff	stoa@fp+1,fputc@fp+1
  8404  004778  ECBB  F029         	call	_fputc	;wreg free
  8405  00477C                     
  8406                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8407  00477C  4A20               	infsnz	stoa@l^0,f,c
  8408  00477E  2A21               	incf	(stoa@l+1)^0,f,c
  8409  004780                     l8546:
  8410                           
  8411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8412  004780  501A               	movf	stoa@w^0,w,c
  8413  004782  5C20               	subwf	stoa@l^0,w,c
  8414  004784  5021               	movf	(stoa@l+1)^0,w,c
  8415  004786  0A80               	xorlw	128
  8416  004788  6E10               	movwf	??_stoa^0,c
  8417  00478A  501B               	movf	(stoa@w+1)^0,w,c
  8418  00478C  0A80               	xorlw	128
  8419  00478E  5810               	subwfb	??_stoa^0,w,c
  8420  004790  A0D8               	btfss	status,0,c
  8421  004792  EFCD  F023         	goto	u11121
  8422  004796  EFCF  F023         	goto	u11120
  8423  00479A                     u11121:
  8424  00479A  EFB4  F023         	goto	l8542
  8425  00479E                     u11120:
  8426  00479E                     l8548:
  8427                           
  8428                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  8429  00479E  0E00               	movlw	0
  8430  0047A0  6E19               	movwf	(stoa@i+1)^0,c
  8431  0047A2  0E00               	movlw	0
  8432  0047A4  6E18               	movwf	stoa@i^0,c
  8433                           
  8434                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8435  0047A6  EFE8  F023         	goto	l8556
  8436  0047AA                     l8550:
  8437                           
  8438                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  8439  0047AA  C01C  FFD9         	movff	stoa@cp,fsr2l
  8440  0047AE  C01D  FFDA         	movff	stoa@cp+1,fsr2h
  8441  0047B2  50DF               	movf	indf2,w,c
  8442  0047B4  6E10               	movwf	??_stoa^0,c
  8443  0047B6  5010               	movf	??_stoa^0,w,c
  8444  0047B8  6E03               	movwf	fputc@c^0,c
  8445  0047BA  6A04               	clrf	(fputc@c+1)^0,c
  8446  0047BC  C00C  F005         	movff	stoa@fp,fputc@fp
  8447  0047C0  C00D  F006         	movff	stoa@fp+1,fputc@fp+1
  8448  0047C4  ECBB  F029         	call	_fputc	;wreg free
  8449  0047C8                     
  8450                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  8451  0047C8  4A1C               	infsnz	stoa@cp^0,f,c
  8452  0047CA  2A1D               	incf	(stoa@cp+1)^0,f,c
  8453  0047CC                     
  8454                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  8455  0047CC  4A18               	infsnz	stoa@i^0,f,c
  8456  0047CE  2A19               	incf	(stoa@i+1)^0,f,c
  8457  0047D0                     l8556:
  8458                           
  8459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8460  0047D0  501E               	movf	stoa@p^0,w,c
  8461  0047D2  5C18               	subwf	stoa@i^0,w,c
  8462  0047D4  5019               	movf	(stoa@i+1)^0,w,c
  8463  0047D6  0A80               	xorlw	128
  8464  0047D8  6E10               	movwf	??_stoa^0,c
  8465  0047DA  501F               	movf	(stoa@p+1)^0,w,c
  8466  0047DC  0A80               	xorlw	128
  8467  0047DE  5810               	subwfb	??_stoa^0,w,c
  8468  0047E0  A0D8               	btfss	status,0,c
  8469  0047E2  EFF5  F023         	goto	u11131
  8470  0047E6  EFF7  F023         	goto	u11130
  8471  0047EA                     u11131:
  8472  0047EA  EFD5  F023         	goto	l8550
  8473  0047EE                     u11130:
  8474  0047EE                     
  8475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  8476  0047EE  0100               	movlb	0	; () banked
  8477  0047F0  A1FC               	btfss	_flags& (0+255),0,b
  8478  0047F2  EFFD  F023         	goto	u11141
  8479  0047F6  EFFF  F023         	goto	u11140
  8480  0047FA                     u11141:
  8481  0047FA  EF1C  F024         	goto	l671
  8482  0047FE                     u11140:
  8483  0047FE  EF0D  F024         	goto	l8564
  8484  004802                     l8560:
  8485                           
  8486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  8487  004802  0E00               	movlw	0
  8488  004804  6E04               	movwf	(fputc@c+1)^0,c
  8489  004806  0E20               	movlw	32
  8490  004808  6E03               	movwf	fputc@c^0,c
  8491  00480A  C00C  F005         	movff	stoa@fp,fputc@fp
  8492  00480E  C00D  F006         	movff	stoa@fp+1,fputc@fp+1
  8493  004812  ECBB  F029         	call	_fputc	;wreg free
  8494  004816                     
  8495                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  8496  004816  4A20               	infsnz	stoa@l^0,f,c
  8497  004818  2A21               	incf	(stoa@l+1)^0,f,c
  8498  00481A                     l8564:
  8499                           
  8500                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  8501  00481A  501A               	movf	stoa@w^0,w,c
  8502  00481C  5C20               	subwf	stoa@l^0,w,c
  8503  00481E  5021               	movf	(stoa@l+1)^0,w,c
  8504  004820  0A80               	xorlw	128
  8505  004822  6E10               	movwf	??_stoa^0,c
  8506  004824  501B               	movf	(stoa@w+1)^0,w,c
  8507  004826  0A80               	xorlw	128
  8508  004828  5810               	subwfb	??_stoa^0,w,c
  8509  00482A  A0D8               	btfss	status,0,c
  8510  00482C  EF1A  F024         	goto	u11151
  8511  004830  EF1C  F024         	goto	u11150
  8512  004834                     u11151:
  8513  004834  EF01  F024         	goto	l8560
  8514  004838                     u11150:
  8515  004838                     l671:
  8516                           
  8517                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  8518  004838  C020  F00C         	movff	stoa@l,?_stoa
  8519  00483C  C021  F00D         	movff	stoa@l+1,?_stoa+1
  8520  004840  0012               	return		;funcret
  8521  004842                     __end_of_stoa:
  8522                           	opt callstack 0
  8523                           
  8524 ;; *************** function _otoa *****************
  8525 ;; Defined at:
  8526 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8527 ;; Parameters:    Size  Location     Type
  8528 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  8529 ;;		 -> vsnprintf@f(6), 
  8530 ;;  d               8   31[COMRAM] unsigned long long 
  8531 ;; Auto vars:     Size  Location     Type
  8532 ;;  n               8   53[COMRAM] unsigned long long 
  8533 ;;  i               2   61[COMRAM] int 
  8534 ;;  w               2   51[COMRAM] int 
  8535 ;;  t               2   49[COMRAM] int 
  8536 ;;  p               2   47[COMRAM] int 
  8537 ;; Return value:  Size  Location     Type
  8538 ;;                  2   29[COMRAM] int 
  8539 ;; Registers used:
  8540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8541 ;; Tracked objects:
  8542 ;;		On entry : 0/0
  8543 ;;		On exit  : 0/0
  8544 ;;		Unchanged: 0/0
  8545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8546 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8547 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8548 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8549 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8550 ;;Total ram usage:       34 bytes
  8551 ;; Hardware stack levels used:    1
  8552 ;; Hardware stack levels required when called:    8
  8553 ;; This function calls:
  8554 ;;		_pad
  8555 ;; This function is called by:
  8556 ;;		_vfpfcnvrt
  8557 ;; This function uses a non-reentrant model
  8558 ;;
  8559                           
  8560                           	psect	text14
  8561  003FF6                     __ptext14:
  8562                           	opt callstack 0
  8563  003FF6                     _otoa:
  8564                           	opt callstack 18
  8565  003FF6                     
  8566                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  8567  003FF6  BE5C               	btfsc	(_prec+1)^0,7,c
  8568  003FF8  EF00  F020         	goto	u10971
  8569  003FFC  EF02  F020         	goto	u10970
  8570  004000                     u10971:
  8571  004000  EF04  F020         	goto	l8480
  8572  004004                     u10970:
  8573  004004                     
  8574                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  8575  004004  0100               	movlb	0	; () banked
  8576  004006  93FC               	bcf	_flags& (0+255),1,b
  8577  004008                     l8480:
  8578                           
  8579                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  8580  004008  BE5C               	btfsc	(_prec+1)^0,7,c
  8581  00400A  EF11  F020         	goto	u10980
  8582  00400E  505C               	movf	(_prec+1)^0,w,c
  8583  004010  E106               	bnz	u10981
  8584  004012  045B               	decf	_prec^0,w,c
  8585  004014  B0D8               	btfsc	status,0,c
  8586  004016  EF0F  F020         	goto	u10981
  8587  00401A  EF11  F020         	goto	u10980
  8588  00401E                     u10981:
  8589  00401E  EF17  F020         	goto	l641
  8590  004022                     u10980:
  8591  004022  0E00               	movlw	0
  8592  004024  6E31               	movwf	(otoa@p+1)^0,c
  8593  004026  0E01               	movlw	1
  8594  004028  6E30               	movwf	otoa@p^0,c
  8595  00402A  EF1B  F020         	goto	l643
  8596  00402E                     l641:
  8597  00402E  C05B  F030         	movff	_prec,otoa@p
  8598  004032  C05C  F031         	movff	_prec+1,otoa@p+1
  8599  004036                     l643:
  8600                           
  8601                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  8602  004036  C0FA  F034         	movff	_width,otoa@w
  8603  00403A  C0FB  F035         	movff	_width+1,otoa@w+1
  8604                           
  8605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  8606  00403E  C020  F036         	movff	otoa@d,otoa@n
  8607  004042  C021  F037         	movff	otoa@d+1,otoa@n+1
  8608  004046  C022  F038         	movff	otoa@d+2,otoa@n+2
  8609  00404A  C023  F039         	movff	otoa@d+3,otoa@n+3
  8610  00404E  C024  F03A         	movff	otoa@d+4,otoa@n+4
  8611  004052  C025  F03B         	movff	otoa@d+5,otoa@n+5
  8612  004056  C026  F03C         	movff	otoa@d+6,otoa@n+6
  8613  00405A  C027  F03D         	movff	otoa@d+7,otoa@n+7
  8614  00405E                     
  8615                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  8616  00405E  0E00               	movlw	0
  8617  004060  6E3F               	movwf	(otoa@i+1)^0,c
  8618  004062  0E4F               	movlw	79
  8619  004064  6E3E               	movwf	otoa@i^0,c
  8620  004066                     
  8621                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  8622  004066  0E00               	movlw	0
  8623  004068  0101               	movlb	1	; () banked
  8624  00406A  6FD7               	movwf	(_dbuf+79)& (0+255),b
  8625  00406C                     
  8626                           ; BSR set to: 1
  8627                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  8628  00406C  0E00               	movlw	0
  8629  00406E  6E33               	movwf	(otoa@t+1)^0,c
  8630  004070  0E00               	movlw	0
  8631  004072  6E32               	movwf	otoa@t^0,c
  8632                           
  8633                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8634  004074  EF81  F020         	goto	l8502
  8635  004078                     l8490:
  8636                           
  8637                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  8638  004078  063E               	decf	otoa@i^0,f,c
  8639  00407A  A0D8               	btfss	status,0,c
  8640  00407C  063F               	decf	(otoa@i+1)^0,f,c
  8641  00407E                     
  8642                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  8643  00407E  0E07               	movlw	7
  8644  004080  1436               	andwf	otoa@n^0,w,c
  8645  004082  6E32               	movwf	otoa@t^0,c
  8646  004084  6A33               	clrf	(otoa@t+1)^0,c
  8647  004086                     
  8648                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  8649  004086  0E88               	movlw	low _dbuf
  8650  004088  243E               	addwf	otoa@i^0,w,c
  8651  00408A  6ED9               	movwf	fsr2l,c
  8652  00408C  0E01               	movlw	high _dbuf
  8653  00408E  203F               	addwfc	(otoa@i+1)^0,w,c
  8654  004090  6EDA               	movwf	fsr2h,c
  8655  004092  5032               	movf	otoa@t^0,w,c
  8656  004094  0F30               	addlw	48
  8657  004096  6EDF               	movwf	indf2,c
  8658  004098                     
  8659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  8660  004098  0630               	decf	otoa@p^0,f,c
  8661  00409A  A0D8               	btfss	status,0,c
  8662  00409C  0631               	decf	(otoa@p+1)^0,f,c
  8663  00409E                     
  8664                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  8665  00409E  0634               	decf	otoa@w^0,f,c
  8666  0040A0  A0D8               	btfss	status,0,c
  8667  0040A2  0635               	decf	(otoa@w+1)^0,f,c
  8668  0040A4                     
  8669                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  8670  0040A4  C036  F028         	movff	otoa@n,??_otoa
  8671  0040A8  C037  F029         	movff	otoa@n+1,??_otoa+1
  8672  0040AC  C038  F02A         	movff	otoa@n+2,??_otoa+2
  8673  0040B0  C039  F02B         	movff	otoa@n+3,??_otoa+3
  8674  0040B4  C03A  F02C         	movff	otoa@n+4,??_otoa+4
  8675  0040B8  C03B  F02D         	movff	otoa@n+5,??_otoa+5
  8676  0040BC  C03C  F02E         	movff	otoa@n+6,??_otoa+6
  8677  0040C0  C03D  F02F         	movff	otoa@n+7,??_otoa+7
  8678  0040C4  0E04               	movlw	4
  8679  0040C6  EF6E  F020         	goto	u10990
  8680  0040CA                     u10995:
  8681  0040CA  90D8               	bcf	status,0,c
  8682  0040CC  322F               	rrcf	(??_otoa+7)^0,f,c
  8683  0040CE  322E               	rrcf	(??_otoa+6)^0,f,c
  8684  0040D0  322D               	rrcf	(??_otoa+5)^0,f,c
  8685  0040D2  322C               	rrcf	(??_otoa+4)^0,f,c
  8686  0040D4  322B               	rrcf	(??_otoa+3)^0,f,c
  8687  0040D6  322A               	rrcf	(??_otoa+2)^0,f,c
  8688  0040D8  3229               	rrcf	(??_otoa+1)^0,f,c
  8689  0040DA  3228               	rrcf	??_otoa^0,f,c
  8690  0040DC                     u10990:
  8691  0040DC  2EE8               	decfsz	wreg,f,c
  8692  0040DE  EF65  F020         	goto	u10995
  8693  0040E2  C028  F036         	movff	??_otoa,otoa@n
  8694  0040E6  C029  F037         	movff	??_otoa+1,otoa@n+1
  8695  0040EA  C02A  F038         	movff	??_otoa+2,otoa@n+2
  8696  0040EE  C02B  F039         	movff	??_otoa+3,otoa@n+3
  8697  0040F2  C02C  F03A         	movff	??_otoa+4,otoa@n+4
  8698  0040F6  C02D  F03B         	movff	??_otoa+5,otoa@n+5
  8699  0040FA  C02E  F03C         	movff	??_otoa+6,otoa@n+6
  8700  0040FE  C02F  F03D         	movff	??_otoa+7,otoa@n+7
  8701  004102                     l8502:
  8702                           
  8703                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8704  004102  BE3F               	btfsc	(otoa@i+1)^0,7,c
  8705  004104  EF8C  F020         	goto	u11001
  8706  004108  503F               	movf	(otoa@i+1)^0,w,c
  8707  00410A  E108               	bnz	u11000
  8708  00410C  043E               	decf	otoa@i^0,w,c
  8709  00410E  A0D8               	btfss	status,0,c
  8710  004110  EF8C  F020         	goto	u11001
  8711  004114  EF8E  F020         	goto	u11000
  8712  004118                     u11001:
  8713  004118  EFBF  F020         	goto	l650
  8714  00411C                     u11000:
  8715  00411C  5036               	movf	otoa@n^0,w,c
  8716  00411E  1037               	iorwf	(otoa@n+1)^0,w,c
  8717  004120  1038               	iorwf	(otoa@n+2)^0,w,c
  8718  004122  1039               	iorwf	(otoa@n+3)^0,w,c
  8719  004124  103A               	iorwf	(otoa@n+4)^0,w,c
  8720  004126  103B               	iorwf	(otoa@n+5)^0,w,c
  8721  004128  103C               	iorwf	(otoa@n+6)^0,w,c
  8722  00412A  103D               	iorwf	(otoa@n+7)^0,w,c
  8723  00412C  A4D8               	btfss	status,2,c
  8724  00412E  EF9B  F020         	goto	u11011
  8725  004132  EF9D  F020         	goto	u11010
  8726  004136                     u11011:
  8727  004136  EF3C  F020         	goto	l8490
  8728  00413A                     u11010:
  8729  00413A  BE31               	btfsc	(otoa@p+1)^0,7,c
  8730  00413C  EFAA  F020         	goto	u11020
  8731  004140  5031               	movf	(otoa@p+1)^0,w,c
  8732  004142  E106               	bnz	u11021
  8733  004144  0430               	decf	otoa@p^0,w,c
  8734  004146  B0D8               	btfsc	status,0,c
  8735  004148  EFA8  F020         	goto	u11021
  8736  00414C  EFAA  F020         	goto	u11020
  8737  004150                     u11021:
  8738  004150  EF3C  F020         	goto	l8490
  8739  004154                     u11020:
  8740  004154  BE35               	btfsc	(otoa@w+1)^0,7,c
  8741  004156  EFB5  F020         	goto	u11031
  8742  00415A  5035               	movf	(otoa@w+1)^0,w,c
  8743  00415C  E108               	bnz	u11030
  8744  00415E  0434               	decf	otoa@w^0,w,c
  8745  004160  A0D8               	btfss	status,0,c
  8746  004162  EFB5  F020         	goto	u11031
  8747  004166  EFB7  F020         	goto	u11030
  8748  00416A                     u11031:
  8749  00416A  EFBF  F020         	goto	l650
  8750  00416E                     u11030:
  8751  00416E  0100               	movlb	0	; () banked
  8752  004170  B3FC               	btfsc	_flags& (0+255),1,b
  8753  004172  EFBD  F020         	goto	u11041
  8754  004176  EFBF  F020         	goto	u11040
  8755  00417A                     u11041:
  8756  00417A  EF3C  F020         	goto	l8490
  8757  00417E                     u11040:
  8758  00417E                     l650:
  8759                           
  8760                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  8761  00417E  0100               	movlb	0	; () banked
  8762  004180  A9FC               	btfss	_flags& (0+255),4,b
  8763  004182  EFC5  F020         	goto	u11051
  8764  004186  EFC7  F020         	goto	u11050
  8765  00418A                     u11051:
  8766  00418A  EFDE  F020         	goto	l8520
  8767  00418E                     u11050:
  8768  00418E                     
  8769                           ; BSR set to: 0
  8770  00418E  5032               	movf	otoa@t^0,w,c
  8771  004190  1033               	iorwf	(otoa@t+1)^0,w,c
  8772  004192  B4D8               	btfsc	status,2,c
  8773  004194  EFCE  F020         	goto	u11061
  8774  004198  EFD0  F020         	goto	u11060
  8775  00419C                     u11061:
  8776  00419C  EFDE  F020         	goto	l8520
  8777  0041A0                     u11060:
  8778  0041A0                     
  8779                           ; BSR set to: 0
  8780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  8781  0041A0  063E               	decf	otoa@i^0,f,c
  8782  0041A2  A0D8               	btfss	status,0,c
  8783  0041A4  063F               	decf	(otoa@i+1)^0,f,c
  8784  0041A6                     
  8785                           ; BSR set to: 0
  8786                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  8787  0041A6  0E88               	movlw	low _dbuf
  8788  0041A8  243E               	addwf	otoa@i^0,w,c
  8789  0041AA  6ED9               	movwf	fsr2l,c
  8790  0041AC  0E01               	movlw	high _dbuf
  8791  0041AE  203F               	addwfc	(otoa@i+1)^0,w,c
  8792  0041B0  6EDA               	movwf	fsr2h,c
  8793  0041B2  0E30               	movlw	48
  8794  0041B4  6EDF               	movwf	indf2,c
  8795  0041B6                     
  8796                           ; BSR set to: 0
  8797                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  8798  0041B6  0634               	decf	otoa@w^0,f,c
  8799  0041B8  A0D8               	btfss	status,0,c
  8800  0041BA  0635               	decf	(otoa@w+1)^0,f,c
  8801  0041BC                     l8520:
  8802                           
  8803                           ; BSR set to: 0
  8804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  8805  0041BC  C01E  F013         	movff	otoa@fp,pad@fp
  8806  0041C0  C01F  F014         	movff	otoa@fp+1,pad@fp+1
  8807  0041C4  0E88               	movlw	low _dbuf
  8808  0041C6  243E               	addwf	otoa@i^0,w,c
  8809  0041C8  6E15               	movwf	pad@buf^0,c
  8810  0041CA  0E01               	movlw	high _dbuf
  8811  0041CC  203F               	addwfc	(otoa@i+1)^0,w,c
  8812  0041CE  6E16               	movwf	(pad@buf+1)^0,c
  8813  0041D0  C034  F017         	movff	otoa@w,pad@p
  8814  0041D4  C035  F018         	movff	otoa@w+1,pad@p+1
  8815  0041D8  EC20  F02A         	call	_pad	;wreg free
  8816  0041DC  C013  F01E         	movff	?_pad,?_otoa
  8817  0041E0  C014  F01F         	movff	?_pad+1,?_otoa+1
  8818  0041E4  0012               	return		;funcret
  8819  0041E6                     __end_of_otoa:
  8820                           	opt callstack 0
  8821                           
  8822 ;; *************** function _efgtoa *****************
  8823 ;; Defined at:
  8824 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8825 ;; Parameters:    Size  Location     Type
  8826 ;;  fp              2   20[BANK0 ] PTR struct _IO_FILE
  8827 ;;		 -> vsnprintf@f(6), 
  8828 ;;  f               4   22[BANK0 ] PTR struct _IO_FILE
  8829 ;;  c               1   26[BANK0 ] unsigned char 
  8830 ;; Auto vars:     Size  Location     Type
  8831 ;;  u               4   84[BANK0 ] unsigned char 
  8832 ;;  g               4   76[BANK0 ] unsigned char 
  8833 ;;  l               4   70[BANK0 ] unsigned char 
  8834 ;;  h               4   66[BANK0 ] unsigned char 
  8835 ;;  ou              4   32[BANK0 ] unsigned char 
  8836 ;;  n               2   82[BANK0 ] int 
  8837 ;;  e               2   80[BANK0 ] int 
  8838 ;;  i               2   74[BANK0 ] int 
  8839 ;;  w               2   63[BANK0 ] int 
  8840 ;;  p               2   60[BANK0 ] int 
  8841 ;;  sign            2   58[BANK0 ] int 
  8842 ;;  d               2   56[BANK0 ] int 
  8843 ;;  ne              2   54[BANK0 ] int 
  8844 ;;  m               2   52[BANK0 ] int 
  8845 ;;  pp              2   50[BANK0 ] int 
  8846 ;;  t               2   48[BANK0 ] int 
  8847 ;;  mode            1   65[BANK0 ] unsigned char 
  8848 ;;  nmode           1   62[BANK0 ] unsigned char 
  8849 ;; Return value:  Size  Location     Type
  8850 ;;                  2   20[BANK0 ] int 
  8851 ;; Registers used:
  8852 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8853 ;; Tracked objects:
  8854 ;;		On entry : 0/0
  8855 ;;		On exit  : 0/0
  8856 ;;		Unchanged: 0/0
  8857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8858 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8859 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8860 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8861 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8862 ;;Total ram usage:       68 bytes
  8863 ;; Hardware stack levels used:    1
  8864 ;; Hardware stack levels required when called:    8
  8865 ;; This function calls:
  8866 ;;		___awdiv
  8867 ;;		___awmod
  8868 ;;		___fladd
  8869 ;;		___fldiv
  8870 ;;		___fleq
  8871 ;;		___flge
  8872 ;;		___flmul
  8873 ;;		___flneg
  8874 ;;		___flsub
  8875 ;;		___fltol
  8876 ;;		___fpclassifyf
  8877 ;;		_floorf
  8878 ;;		_isupper
  8879 ;;		_pad
  8880 ;;		_strcpy
  8881 ;;		_tolower
  8882 ;; This function is called by:
  8883 ;;		_vfpfcnvrt
  8884 ;; This function uses a non-reentrant model
  8885 ;;
  8886                           
  8887                           	psect	text15
  8888  00152A                     __ptext15:
  8889                           	opt callstack 0
  8890  00152A                     _efgtoa:
  8891                           	opt callstack 18
  8892  00152A                     
  8893                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  8894  00152A  0E00               	movlw	0
  8895  00152C  0100               	movlb	0	; () banked
  8896  00152E  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  8897  001530  0E00               	movlw	0
  8898  001532  6F9A               	movwf	efgtoa@sign& (0+255),b
  8899  001534                     
  8900                           ; BSR set to: 0
  8901                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  8902  001534  C076  F0AC         	movff	efgtoa@f,efgtoa@g
  8903  001538  C077  F0AD         	movff	efgtoa@f+1,efgtoa@g+1
  8904  00153C  C078  F0AE         	movff	efgtoa@f+2,efgtoa@g+2
  8905  001540  C079  F0AF         	movff	efgtoa@f+3,efgtoa@g+3
  8906  001544                     
  8907                           ; BSR set to: 0
  8908                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  8909  001544  BFAF               	btfsc	(efgtoa@g+3)& (0+255),7,b
  8910  001546  EFA9  F00A         	goto	u10450
  8911  00154A  EFA7  F00A         	goto	u10451
  8912  00154E                     u10451:
  8913  00154E  EFBF  F00A         	goto	l8188
  8914  001552                     u10450:
  8915  001552                     
  8916                           ; BSR set to: 0
  8917                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  8918  001552  0E00               	movlw	0
  8919  001554  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  8920  001556  0E01               	movlw	1
  8921  001558  6F9A               	movwf	efgtoa@sign& (0+255),b
  8922  00155A                     
  8923                           ; BSR set to: 0
  8924                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  8925  00155A  C0AC  F003         	movff	efgtoa@g,___flneg@f1
  8926  00155E  C0AD  F004         	movff	efgtoa@g+1,___flneg@f1+1
  8927  001562  C0AE  F005         	movff	efgtoa@g+2,___flneg@f1+2
  8928  001566  C0AF  F006         	movff	efgtoa@g+3,___flneg@f1+3
  8929  00156A  ECD8  F02E         	call	___flneg	;wreg free
  8930  00156E  C003  F0AC         	movff	?___flneg,efgtoa@g
  8931  001572  C004  F0AD         	movff	?___flneg+1,efgtoa@g+1
  8932  001576  C005  F0AE         	movff	?___flneg+2,efgtoa@g+2
  8933  00157A  C006  F0AF         	movff	?___flneg+3,efgtoa@g+3
  8934  00157E                     l8188:
  8935                           
  8936                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  8937  00157E  0E00               	movlw	0
  8938  001580  0100               	movlb	0	; () banked
  8939  001582  6FB3               	movwf	(efgtoa@n+1)& (0+255),b
  8940  001584  0E00               	movlw	0
  8941  001586  6FB2               	movwf	efgtoa@n& (0+255),b
  8942  001588                     
  8943                           ; BSR set to: 0
  8944                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  8945  001588  C0FA  F09F         	movff	_width,efgtoa@w
  8946  00158C  C0FB  F0A0         	movff	_width+1,efgtoa@w+1
  8947  001590                     
  8948                           ; BSR set to: 0
  8949                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  8950  001590  519A               	movf	efgtoa@sign& (0+255),w,b
  8951  001592  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8952  001594  A4D8               	btfss	status,2,c
  8953  001596  EFCF  F00A         	goto	u10461
  8954  00159A  EFD1  F00A         	goto	u10460
  8955  00159E                     u10461:
  8956  00159E  EFD8  F00A         	goto	l8196
  8957  0015A2                     u10460:
  8958  0015A2                     
  8959                           ; BSR set to: 0
  8960  0015A2  A5FC               	btfss	_flags& (0+255),2,b
  8961  0015A4  EFD6  F00A         	goto	u10471
  8962  0015A8  EFD8  F00A         	goto	u10470
  8963  0015AC                     u10471:
  8964  0015AC  EFF2  F00A         	goto	l8208
  8965  0015B0                     u10470:
  8966  0015B0                     l8196:
  8967                           
  8968                           ; BSR set to: 0
  8969                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  8970  0015B0  519A               	movf	efgtoa@sign& (0+255),w,b
  8971  0015B2  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8972  0015B4  A4D8               	btfss	status,2,c
  8973  0015B6  EFDF  F00A         	goto	u10481
  8974  0015BA  EFE1  F00A         	goto	u10480
  8975  0015BE                     u10481:
  8976  0015BE  EFE7  F00A         	goto	l8200
  8977  0015C2                     u10480:
  8978  0015C2                     
  8979                           ; BSR set to: 0
  8980  0015C2  0E00               	movlw	0
  8981  0015C4  6F85               	movwf	(_efgtoa$1336+1)& (0+255),b
  8982  0015C6  0E2B               	movlw	43
  8983  0015C8  6F84               	movwf	_efgtoa$1336& (0+255),b
  8984  0015CA  EFEB  F00A         	goto	l8202
  8985  0015CE                     l8200:
  8986                           
  8987                           ; BSR set to: 0
  8988  0015CE  0E00               	movlw	0
  8989  0015D0  6F85               	movwf	(_efgtoa$1336+1)& (0+255),b
  8990  0015D2  0E2D               	movlw	45
  8991  0015D4  6F84               	movwf	_efgtoa$1336& (0+255),b
  8992  0015D6                     l8202:
  8993                           
  8994                           ; BSR set to: 0
  8995  0015D6  C084  F188         	movff	_efgtoa$1336,_dbuf
  8996  0015DA                     
  8997                           ; BSR set to: 0
  8998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  8999  0015DA  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  9000  0015DC  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  9001  0015DE                     
  9002                           ; BSR set to: 0
  9003                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  9004  0015DE  079F               	decf	efgtoa@w& (0+255),f,b
  9005  0015E0  A0D8               	btfss	status,0,c
  9006  0015E2  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  9007  0015E4                     l8208:
  9008                           
  9009                           ; BSR set to: 0
  9010                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9011  0015E4  C0AC  F003         	movff	efgtoa@g,___fpclassifyf@x
  9012  0015E8  C0AD  F004         	movff	efgtoa@g+1,___fpclassifyf@x+1
  9013  0015EC  C0AE  F005         	movff	efgtoa@g+2,___fpclassifyf@x+2
  9014  0015F0  C0AF  F006         	movff	efgtoa@g+3,___fpclassifyf@x+3
  9015  0015F4  EC5C  F028         	call	___fpclassifyf	;wreg free
  9016  0015F8  0403               	decf	?___fpclassifyf^0,w,c
  9017  0015FA  1004               	iorwf	(?___fpclassifyf+1)^0,w,c
  9018  0015FC  A4D8               	btfss	status,2,c
  9019  0015FE  EF03  F00B         	goto	u10491
  9020  001602  EF05  F00B         	goto	u10490
  9021  001606                     u10491:
  9022  001606  EF5C  F00B         	goto	l8226
  9023  00160A                     u10490:
  9024  00160A  0EBF               	movlw	191
  9025  00160C  0100               	movlb	0	; () banked
  9026  00160E  6F7B               	movwf	??_efgtoa& (0+255),b
  9027  001610  0EFF               	movlw	255
  9028  001612  6F7C               	movwf	(??_efgtoa+1)& (0+255),b
  9029  001614  517A               	movf	efgtoa@c& (0+255),w,b
  9030  001616  6F7D               	movwf	(??_efgtoa+2)& (0+255),b
  9031  001618  6B7E               	clrf	(??_efgtoa+3)& (0+255),b
  9032  00161A  517B               	movf	??_efgtoa& (0+255),w,b
  9033  00161C  277D               	addwf	(??_efgtoa+2)& (0+255),f,b
  9034  00161E  517C               	movf	(??_efgtoa+1)& (0+255),w,b
  9035  001620  237E               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9036  001622  517E               	movf	(??_efgtoa+3)& (0+255),w,b
  9037  001624  E10A               	bnz	u10500
  9038  001626  0E1A               	movlw	26
  9039  001628  5D7D               	subwf	(??_efgtoa+2)& (0+255),w,b
  9040  00162A  A0D8               	btfss	status,0,c
  9041  00162C  EF1A  F00B         	goto	u10501
  9042  001630  EF1D  F00B         	goto	u10500
  9043  001634                     u10501:
  9044  001634  0E01               	movlw	1
  9045  001636  EF1E  F00B         	goto	u10510
  9046  00163A                     u10500:
  9047  00163A  0E00               	movlw	0
  9048  00163C                     u10510:
  9049  00163C  6F86               	movwf	_efgtoa$1337& (0+255),b
  9050  00163E  6B87               	clrf	(_efgtoa$1337+1)& (0+255),b
  9051  001640                     
  9052                           ; BSR set to: 0
  9053  001640  5186               	movf	_efgtoa$1337& (0+255),w,b
  9054  001642  1187               	iorwf	(_efgtoa$1337+1)& (0+255),w,b
  9055  001644  B4D8               	btfsc	status,2,c
  9056  001646  EF27  F00B         	goto	u10521
  9057  00164A  EF29  F00B         	goto	u10520
  9058  00164E                     u10521:
  9059  00164E  EF37  F00B         	goto	l8218
  9060  001652                     u10520:
  9061  001652                     
  9062                           ; BSR set to: 0
  9063                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  9064  001652  0E88               	movlw	low _dbuf
  9065  001654  25B2               	addwf	efgtoa@n& (0+255),w,b
  9066  001656  6E03               	movwf	strcpy@dest^0,c
  9067  001658  0E01               	movlw	high _dbuf
  9068  00165A  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9069  00165C  6E04               	movwf	(strcpy@dest+1)^0,c
  9070  00165E  0EBA               	movlw	low STR_7
  9071  001660  6E05               	movwf	strcpy@src^0,c
  9072  001662  0EFF               	movlw	high STR_7
  9073  001664  6E06               	movwf	(strcpy@src+1)^0,c
  9074  001666  ECC0  F02C         	call	_strcpy	;wreg free
  9075                           
  9076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  9077  00166A  EF43  F00B         	goto	l8220
  9078  00166E                     l8218:
  9079                           
  9080                           ; BSR set to: 0
  9081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  9082  00166E  0E88               	movlw	low _dbuf
  9083  001670  25B2               	addwf	efgtoa@n& (0+255),w,b
  9084  001672  6E03               	movwf	strcpy@dest^0,c
  9085  001674  0E01               	movlw	high _dbuf
  9086  001676  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9087  001678  6E04               	movwf	(strcpy@dest+1)^0,c
  9088  00167A  0ECA               	movlw	low STR_8
  9089  00167C  6E05               	movwf	strcpy@src^0,c
  9090  00167E  0EFF               	movlw	high STR_8
  9091  001680  6E06               	movwf	(strcpy@src+1)^0,c
  9092  001682  ECC0  F02C         	call	_strcpy	;wreg free
  9093  001686                     l8220:
  9094                           
  9095                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  9096  001686  0100               	movlb	0	; () banked
  9097  001688  0EFD               	movlw	253
  9098  00168A  279F               	addwf	efgtoa@w& (0+255),f,b
  9099  00168C  0EFF               	movlw	255
  9100  00168E  23A0               	addwfc	(efgtoa@w+1)& (0+255),f,b
  9101  001690                     l8222:
  9102                           
  9103                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  9104  001690  C074  F013         	movff	efgtoa@fp,pad@fp
  9105  001694  C075  F014         	movff	efgtoa@fp+1,pad@fp+1
  9106  001698  0E88               	movlw	low _dbuf
  9107  00169A  6E15               	movwf	pad@buf^0,c
  9108  00169C  0E01               	movlw	high _dbuf
  9109  00169E  6E16               	movwf	(pad@buf+1)^0,c
  9110  0016A0  C09F  F017         	movff	efgtoa@w,pad@p
  9111  0016A4  C0A0  F018         	movff	efgtoa@w+1,pad@p+1
  9112  0016A8  EC20  F02A         	call	_pad	;wreg free
  9113  0016AC  C013  F074         	movff	?_pad,?_efgtoa
  9114  0016B0  C014  F075         	movff	?_pad+1,?_efgtoa+1
  9115  0016B4  EF6C  F010         	goto	l563
  9116  0016B8                     l8226:
  9117                           
  9118                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9119  0016B8  C0AC  F003         	movff	efgtoa@g,___fpclassifyf@x
  9120  0016BC  C0AD  F004         	movff	efgtoa@g+1,___fpclassifyf@x+1
  9121  0016C0  C0AE  F005         	movff	efgtoa@g+2,___fpclassifyf@x+2
  9122  0016C4  C0AF  F006         	movff	efgtoa@g+3,___fpclassifyf@x+3
  9123  0016C8  EC5C  F028         	call	___fpclassifyf	;wreg free
  9124  0016CC  5003               	movf	?___fpclassifyf^0,w,c
  9125  0016CE  1004               	iorwf	(?___fpclassifyf+1)^0,w,c
  9126  0016D0  A4D8               	btfss	status,2,c
  9127  0016D2  EF6D  F00B         	goto	u10531
  9128  0016D6  EF6F  F00B         	goto	u10530
  9129  0016DA                     u10531:
  9130  0016DA  EFAF  F00B         	goto	l8244
  9131  0016DE                     u10530:
  9132  0016DE  0EBF               	movlw	191
  9133  0016E0  0100               	movlb	0	; () banked
  9134  0016E2  6F7B               	movwf	??_efgtoa& (0+255),b
  9135  0016E4  0EFF               	movlw	255
  9136  0016E6  6F7C               	movwf	(??_efgtoa+1)& (0+255),b
  9137  0016E8  517A               	movf	efgtoa@c& (0+255),w,b
  9138  0016EA  6F7D               	movwf	(??_efgtoa+2)& (0+255),b
  9139  0016EC  6B7E               	clrf	(??_efgtoa+3)& (0+255),b
  9140  0016EE  517B               	movf	??_efgtoa& (0+255),w,b
  9141  0016F0  277D               	addwf	(??_efgtoa+2)& (0+255),f,b
  9142  0016F2  517C               	movf	(??_efgtoa+1)& (0+255),w,b
  9143  0016F4  237E               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9144  0016F6  517E               	movf	(??_efgtoa+3)& (0+255),w,b
  9145  0016F8  E10A               	bnz	u10540
  9146  0016FA  0E1A               	movlw	26
  9147  0016FC  5D7D               	subwf	(??_efgtoa+2)& (0+255),w,b
  9148  0016FE  A0D8               	btfss	status,0,c
  9149  001700  EF84  F00B         	goto	u10541
  9150  001704  EF87  F00B         	goto	u10540
  9151  001708                     u10541:
  9152  001708  0E01               	movlw	1
  9153  00170A  EF88  F00B         	goto	u10550
  9154  00170E                     u10540:
  9155  00170E  0E00               	movlw	0
  9156  001710                     u10550:
  9157  001710  6F88               	movwf	_efgtoa$1341& (0+255),b
  9158  001712  6B89               	clrf	(_efgtoa$1341+1)& (0+255),b
  9159  001714                     
  9160                           ; BSR set to: 0
  9161  001714  5188               	movf	_efgtoa$1341& (0+255),w,b
  9162  001716  1189               	iorwf	(_efgtoa$1341+1)& (0+255),w,b
  9163  001718  B4D8               	btfsc	status,2,c
  9164  00171A  EF91  F00B         	goto	u10561
  9165  00171E  EF93  F00B         	goto	u10560
  9166  001722                     u10561:
  9167  001722  EFA1  F00B         	goto	l8236
  9168  001726                     u10560:
  9169  001726                     
  9170                           ; BSR set to: 0
  9171                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  9172  001726  0E88               	movlw	low _dbuf
  9173  001728  25B2               	addwf	efgtoa@n& (0+255),w,b
  9174  00172A  6E03               	movwf	strcpy@dest^0,c
  9175  00172C  0E01               	movlw	high _dbuf
  9176  00172E  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9177  001730  6E04               	movwf	(strcpy@dest+1)^0,c
  9178  001732  0EBE               	movlw	low STR_11
  9179  001734  6E05               	movwf	strcpy@src^0,c
  9180  001736  0EFF               	movlw	high STR_11
  9181  001738  6E06               	movwf	(strcpy@src+1)^0,c
  9182  00173A  ECC0  F02C         	call	_strcpy	;wreg free
  9183                           
  9184                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  9185  00173E  EF43  F00B         	goto	l8220
  9186  001742                     l8236:
  9187                           
  9188                           ; BSR set to: 0
  9189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  9190  001742  0E88               	movlw	low _dbuf
  9191  001744  25B2               	addwf	efgtoa@n& (0+255),w,b
  9192  001746  6E03               	movwf	strcpy@dest^0,c
  9193  001748  0E01               	movlw	high _dbuf
  9194  00174A  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9195  00174C  6E04               	movwf	(strcpy@dest+1)^0,c
  9196  00174E  0ED2               	movlw	low STR_12
  9197  001750  6E05               	movwf	strcpy@src^0,c
  9198  001752  0EFF               	movlw	high STR_12
  9199  001754  6E06               	movwf	(strcpy@src+1)^0,c
  9200  001756  ECC0  F02C         	call	_strcpy	;wreg free
  9201  00175A  EF43  F00B         	goto	l8220
  9202  00175E                     l8244:
  9203                           
  9204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  9205  00175E  0E00               	movlw	0
  9206  001760  0100               	movlb	0	; () banked
  9207  001762  6FB4               	movwf	efgtoa@u& (0+255),b
  9208  001764  0E00               	movlw	0
  9209  001766  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  9210  001768  0E80               	movlw	128
  9211  00176A  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  9212  00176C  0E3F               	movlw	63
  9213  00176E  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  9214                           
  9215                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  9216  001770  0E00               	movlw	0
  9217  001772  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  9218  001774  0E00               	movlw	0
  9219  001776  6FB0               	movwf	efgtoa@e& (0+255),b
  9220  001778                     
  9221                           ; BSR set to: 0
  9222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  9223  001778  C0AC  F003         	movff	efgtoa@g,___fleq@ff1
  9224  00177C  C0AD  F004         	movff	efgtoa@g+1,___fleq@ff1+1
  9225  001780  C0AE  F005         	movff	efgtoa@g+2,___fleq@ff1+2
  9226  001784  C0AF  F006         	movff	efgtoa@g+3,___fleq@ff1+3
  9227  001788  0E00               	movlw	0
  9228  00178A  6E07               	movwf	___fleq@ff2^0,c
  9229  00178C  0E00               	movlw	0
  9230  00178E  6E08               	movwf	(___fleq@ff2+1)^0,c
  9231  001790  0E00               	movlw	0
  9232  001792  6E09               	movwf	(___fleq@ff2+2)^0,c
  9233  001794  0E00               	movlw	0
  9234  001796  6E0A               	movwf	(___fleq@ff2+3)^0,c
  9235  001798  EC95  F02B         	call	___fleq	;wreg free
  9236  00179C  B0D8               	btfsc	status,0,c
  9237  00179E  EFD3  F00B         	goto	u10571
  9238  0017A2  EFD5  F00B         	goto	u10570
  9239  0017A6                     u10571:
  9240  0017A6  EF58  F00C         	goto	l8262
  9241  0017AA                     u10570:
  9242  0017AA  EFF4  F00B         	goto	l8254
  9243  0017AE                     l8250:
  9244                           
  9245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  9246  0017AE  C0B4  F011         	movff	efgtoa@u,___flmul@b
  9247  0017B2  C0B5  F012         	movff	efgtoa@u+1,___flmul@b+1
  9248  0017B6  C0B6  F013         	movff	efgtoa@u+2,___flmul@b+2
  9249  0017BA  C0B7  F014         	movff	efgtoa@u+3,___flmul@b+3
  9250  0017BE  0E00               	movlw	0
  9251  0017C0  6E15               	movwf	___flmul@a^0,c
  9252  0017C2  0E00               	movlw	0
  9253  0017C4  6E16               	movwf	(___flmul@a+1)^0,c
  9254  0017C6  0E20               	movlw	32
  9255  0017C8  6E17               	movwf	(___flmul@a+2)^0,c
  9256  0017CA  0E41               	movlw	65
  9257  0017CC  6E18               	movwf	(___flmul@a+3)^0,c
  9258  0017CE  EC68  F015         	call	___flmul	;wreg free
  9259  0017D2  C011  F0B4         	movff	?___flmul,efgtoa@u
  9260  0017D6  C012  F0B5         	movff	?___flmul+1,efgtoa@u+1
  9261  0017DA  C013  F0B6         	movff	?___flmul+2,efgtoa@u+2
  9262  0017DE  C014  F0B7         	movff	?___flmul+3,efgtoa@u+3
  9263  0017E2                     
  9264                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  9265  0017E2  0100               	movlb	0	; () banked
  9266  0017E4  4BB0               	infsnz	efgtoa@e& (0+255),f,b
  9267  0017E6  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  9268  0017E8                     l8254:
  9269                           
  9270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  9271  0017E8  C0AC  F02A         	movff	efgtoa@g,___flge@ff1
  9272  0017EC  C0AD  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  9273  0017F0  C0AE  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  9274  0017F4  C0AF  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  9275  0017F8  0E00               	movlw	0
  9276  0017FA  6E15               	movwf	___flmul@a^0,c
  9277  0017FC  0E00               	movlw	0
  9278  0017FE  6E16               	movwf	(___flmul@a+1)^0,c
  9279  001800  0E20               	movlw	32
  9280  001802  6E17               	movwf	(___flmul@a+2)^0,c
  9281  001804  0E41               	movlw	65
  9282  001806  6E18               	movwf	(___flmul@a+3)^0,c
  9283  001808  C0B4  F011         	movff	efgtoa@u,___flmul@b
  9284  00180C  C0B5  F012         	movff	efgtoa@u+1,___flmul@b+1
  9285  001810  C0B6  F013         	movff	efgtoa@u+2,___flmul@b+2
  9286  001814  C0B7  F014         	movff	efgtoa@u+3,___flmul@b+3
  9287  001818  EC68  F015         	call	___flmul	;wreg free
  9288  00181C  C011  F02E         	movff	?___flmul,___flge@ff2
  9289  001820  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  9290  001824  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  9291  001828  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  9292  00182C  ECDA  F027         	call	___flge	;wreg free
  9293  001830  B0D8               	btfsc	status,0,c
  9294  001832  EF1D  F00C         	goto	u10581
  9295  001836  EF1F  F00C         	goto	u10580
  9296  00183A                     u10581:
  9297  00183A  EFD7  F00B         	goto	l8250
  9298  00183E                     u10580:
  9299  00183E  EF3F  F00C         	goto	l8260
  9300  001842                     l8256:
  9301                           
  9302                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  9303  001842  C0B4  F042         	movff	efgtoa@u,___fldiv@b
  9304  001846  C0B5  F043         	movff	efgtoa@u+1,___fldiv@b+1
  9305  00184A  C0B6  F044         	movff	efgtoa@u+2,___fldiv@b+2
  9306  00184E  C0B7  F045         	movff	efgtoa@u+3,___fldiv@b+3
  9307  001852  0E00               	movlw	0
  9308  001854  6E46               	movwf	___fldiv@a^0,c
  9309  001856  0E00               	movlw	0
  9310  001858  6E47               	movwf	(___fldiv@a+1)^0,c
  9311  00185A  0E20               	movlw	32
  9312  00185C  6E48               	movwf	(___fldiv@a+2)^0,c
  9313  00185E  0E41               	movlw	65
  9314  001860  6E49               	movwf	(___fldiv@a+3)^0,c
  9315  001862  EC7D  F017         	call	___fldiv	;wreg free
  9316  001866  C042  F0B4         	movff	?___fldiv,efgtoa@u
  9317  00186A  C043  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  9318  00186E  C044  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  9319  001872  C045  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  9320  001876                     
  9321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  9322  001876  0100               	movlb	0	; () banked
  9323  001878  07B0               	decf	efgtoa@e& (0+255),f,b
  9324  00187A  A0D8               	btfss	status,0,c
  9325  00187C  07B1               	decf	(efgtoa@e+1)& (0+255),f,b
  9326  00187E                     l8260:
  9327                           
  9328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  9329  00187E  C0AC  F02A         	movff	efgtoa@g,___flge@ff1
  9330  001882  C0AD  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  9331  001886  C0AE  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  9332  00188A  C0AF  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  9333  00188E  C0B4  F02E         	movff	efgtoa@u,___flge@ff2
  9334  001892  C0B5  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  9335  001896  C0B6  F030         	movff	efgtoa@u+2,___flge@ff2+2
  9336  00189A  C0B7  F031         	movff	efgtoa@u+3,___flge@ff2+3
  9337  00189E  ECDA  F027         	call	___flge	;wreg free
  9338  0018A2  A0D8               	btfss	status,0,c
  9339  0018A4  EF56  F00C         	goto	u10591
  9340  0018A8  EF58  F00C         	goto	u10590
  9341  0018AC                     u10591:
  9342  0018AC  EF21  F00C         	goto	l8256
  9343  0018B0                     u10590:
  9344  0018B0                     l8262:
  9345                           
  9346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  9347  0018B0  C07A  F009         	movff	efgtoa@c,tolower@c
  9348  0018B4  6A0A               	clrf	(tolower@c+1)^0,c
  9349  0018B6  EC61  F02C         	call	_tolower	;wreg free
  9350  0018BA  5009               	movf	?_tolower^0,w,c
  9351  0018BC  0100               	movlb	0	; () banked
  9352  0018BE  6FA1               	movwf	efgtoa@mode& (0+255),b
  9353  0018C0                     
  9354                           ; BSR set to: 0
  9355                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  9356  0018C0  C0A1  F09E         	movff	efgtoa@mode,efgtoa@nmode
  9357  0018C4                     
  9358                           ; BSR set to: 0
  9359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  9360  0018C4  0E67               	movlw	103
  9361  0018C6  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  9362  0018C8  A4D8               	btfss	status,2,c
  9363  0018CA  EF69  F00C         	goto	u10601
  9364  0018CE  EF6B  F00C         	goto	u10600
  9365  0018D2                     u10601:
  9366  0018D2  EF91  F00C         	goto	l8276
  9367  0018D6                     u10600:
  9368  0018D6                     
  9369                           ; BSR set to: 0
  9370                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  9371  0018D6  505B               	movf	_prec^0,w,c
  9372  0018D8  105C               	iorwf	(_prec+1)^0,w,c
  9373  0018DA  A4D8               	btfss	status,2,c
  9374  0018DC  EF72  F00C         	goto	u10611
  9375  0018E0  EF74  F00C         	goto	u10610
  9376  0018E4                     u10611:
  9377  0018E4  EF78  F00C         	goto	l8272
  9378  0018E8                     u10610:
  9379  0018E8                     
  9380                           ; BSR set to: 0
  9381                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  9382  0018E8  0E00               	movlw	0
  9383  0018EA  6E5C               	movwf	(_prec+1)^0,c
  9384  0018EC  0E01               	movlw	1
  9385  0018EE  6E5B               	movwf	_prec^0,c
  9386  0018F0                     l8272:
  9387                           
  9388                           ; BSR set to: 0
  9389                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  9390  0018F0  BE5C               	btfsc	(_prec+1)^0,7,c
  9391  0018F2  EF85  F00C         	goto	u10620
  9392  0018F6  505C               	movf	(_prec+1)^0,w,c
  9393  0018F8  E106               	bnz	u10621
  9394  0018FA  045B               	decf	_prec^0,w,c
  9395  0018FC  B0D8               	btfsc	status,0,c
  9396  0018FE  EF83  F00C         	goto	u10621
  9397  001902  EF85  F00C         	goto	u10620
  9398  001906                     u10621:
  9399  001906  EF8B  F00C         	goto	l581
  9400  00190A                     u10620:
  9401  00190A                     l8274:
  9402                           
  9403                           ; BSR set to: 0
  9404  00190A  0E00               	movlw	0
  9405  00190C  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  9406  00190E  0E06               	movlw	6
  9407  001910  6F9C               	movwf	efgtoa@p& (0+255),b
  9408  001912  EF9A  F00C         	goto	l8282
  9409  001916                     l581:
  9410                           
  9411                           ; BSR set to: 0
  9412  001916  C05B  F09C         	movff	_prec,efgtoa@p
  9413  00191A  C05C  F09D         	movff	_prec+1,efgtoa@p+1
  9414  00191E  EF9A  F00C         	goto	l8282
  9415  001922                     l8276:
  9416                           
  9417                           ; BSR set to: 0
  9418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  9419  001922  BE5C               	btfsc	(_prec+1)^0,7,c
  9420  001924  EF96  F00C         	goto	u10631
  9421  001928  EF98  F00C         	goto	u10630
  9422  00192C                     u10631:
  9423  00192C  EF85  F00C         	goto	l8274
  9424  001930                     u10630:
  9425  001930  EF8B  F00C         	goto	l581
  9426  001934                     l8282:
  9427                           
  9428                           ; BSR set to: 0
  9429                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  9430  001934  0E67               	movlw	103
  9431  001936  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  9432  001938  A4D8               	btfss	status,2,c
  9433  00193A  EFA1  F00C         	goto	u10641
  9434  00193E  EFA3  F00C         	goto	u10640
  9435  001942                     u10641:
  9436  001942  EFD2  F00C         	goto	l8292
  9437  001946                     u10640:
  9438  001946                     
  9439                           ; BSR set to: 0
  9440                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  9441  001946  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  9442  001948  EFB1  F00C         	goto	u10650
  9443  00194C  0EFC               	movlw	252
  9444  00194E  5DB0               	subwf	efgtoa@e& (0+255),w,b
  9445  001950  0EFF               	movlw	255
  9446  001952  59B1               	subwfb	(efgtoa@e+1)& (0+255),w,b
  9447  001954  A0D8               	btfss	status,0,c
  9448  001956  EFAF  F00C         	goto	u10651
  9449  00195A  EFB1  F00C         	goto	u10650
  9450  00195E                     u10651:
  9451  00195E  EFD0  F00C         	goto	l8290
  9452  001962                     u10650:
  9453  001962                     
  9454                           ; BSR set to: 0
  9455  001962  0EFF               	movlw	255
  9456  001964  6F7B               	movwf	??_efgtoa& (0+255),b
  9457  001966  0EFF               	movlw	255
  9458  001968  6F7C               	movwf	(??_efgtoa+1)& (0+255),b
  9459  00196A  C09C  F07D         	movff	efgtoa@p,??_efgtoa+2
  9460  00196E  C09D  F07E         	movff	efgtoa@p+1,??_efgtoa+3
  9461  001972  517B               	movf	??_efgtoa& (0+255),w,b
  9462  001974  277D               	addwf	(??_efgtoa+2)& (0+255),f,b
  9463  001976  517C               	movf	(??_efgtoa+1)& (0+255),w,b
  9464  001978  237E               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9465  00197A  51B0               	movf	efgtoa@e& (0+255),w,b
  9466  00197C  5D7D               	subwf	(??_efgtoa+2)& (0+255),w,b
  9467  00197E  517E               	movf	(??_efgtoa+3)& (0+255),w,b
  9468  001980  0A80               	xorlw	128
  9469  001982  6F7F               	movwf	(??_efgtoa+4)& (0+255),b
  9470  001984  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  9471  001986  0A80               	xorlw	128
  9472  001988  597F               	subwfb	(??_efgtoa+4)& (0+255),w,b
  9473  00198A  A0D8               	btfss	status,0,c
  9474  00198C  EFCA  F00C         	goto	u10661
  9475  001990  EFCC  F00C         	goto	u10660
  9476  001994                     u10661:
  9477  001994  EFD0  F00C         	goto	l8290
  9478  001998                     u10660:
  9479  001998                     
  9480                           ; BSR set to: 0
  9481                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  9482  001998  0E66               	movlw	102
  9483  00199A  6F9E               	movwf	efgtoa@nmode& (0+255),b
  9484                           
  9485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  9486  00199C  EFD2  F00C         	goto	l8292
  9487  0019A0                     l8290:
  9488                           
  9489                           ; BSR set to: 0
  9490                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  9491  0019A0  0E65               	movlw	101
  9492  0019A2  6F9E               	movwf	efgtoa@nmode& (0+255),b
  9493  0019A4                     l8292:
  9494                           
  9495                           ; BSR set to: 0
  9496                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  9497  0019A4  C09C  F094         	movff	efgtoa@p,efgtoa@m
  9498  0019A8  C09D  F095         	movff	efgtoa@p+1,efgtoa@m+1
  9499  0019AC                     
  9500                           ; BSR set to: 0
  9501                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  9502  0019AC  0E67               	movlw	103
  9503  0019AE  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  9504  0019B0  A4D8               	btfss	status,2,c
  9505  0019B2  EFDD  F00C         	goto	u10671
  9506  0019B6  EFDF  F00C         	goto	u10670
  9507  0019BA                     u10671:
  9508  0019BA  EFEF  F00C         	goto	l8300
  9509  0019BE                     u10670:
  9510  0019BE                     
  9511                           ; BSR set to: 0
  9512  0019BE  0E66               	movlw	102
  9513  0019C0  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  9514  0019C2  A4D8               	btfss	status,2,c
  9515  0019C4  EFE6  F00C         	goto	u10681
  9516  0019C8  EFE8  F00C         	goto	u10680
  9517  0019CC                     u10681:
  9518  0019CC  EFF1  F00C         	goto	l8302
  9519  0019D0                     u10680:
  9520  0019D0                     
  9521                           ; BSR set to: 0
  9522  0019D0  BFB1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9523  0019D2  EFEF  F00C         	goto	u10690
  9524  0019D6  EFED  F00C         	goto	u10691
  9525  0019DA                     u10691:
  9526  0019DA  EFF1  F00C         	goto	l8302
  9527  0019DE                     u10690:
  9528  0019DE                     l8300:
  9529                           
  9530                           ; BSR set to: 0
  9531                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  9532  0019DE  4B94               	infsnz	efgtoa@m& (0+255),f,b
  9533  0019E0  2B95               	incf	(efgtoa@m+1)& (0+255),f,b
  9534  0019E2                     l8302:
  9535                           
  9536                           ; BSR set to: 0
  9537                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  9538  0019E2  0E66               	movlw	102
  9539  0019E4  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  9540  0019E6  A4D8               	btfss	status,2,c
  9541  0019E8  EFF8  F00C         	goto	u10701
  9542  0019EC  EFFA  F00C         	goto	u10700
  9543  0019F0                     u10701:
  9544  0019F0  EF1A  F00D         	goto	l8312
  9545  0019F4                     u10700:
  9546  0019F4                     
  9547                           ; BSR set to: 0
  9548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  9549  0019F4  BFB1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9550  0019F6  EF01  F00D         	goto	u10710
  9551  0019FA  EFFF  F00C         	goto	u10711
  9552  0019FE                     u10711:
  9553  0019FE  EF0D  F00D         	goto	l8308
  9554  001A02                     u10710:
  9555  001A02                     
  9556                           ; BSR set to: 0
  9557                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  9558  001A02  0E00               	movlw	0
  9559  001A04  6FB4               	movwf	efgtoa@u& (0+255),b
  9560  001A06  0E00               	movlw	0
  9561  001A08  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  9562  001A0A  0E80               	movlw	128
  9563  001A0C  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  9564  001A0E  0E3F               	movlw	63
  9565  001A10  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  9566                           
  9567                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  9568  001A12  0E00               	movlw	0
  9569  001A14  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  9570  001A16  0E00               	movlw	0
  9571  001A18  6FB0               	movwf	efgtoa@e& (0+255),b
  9572  001A1A                     l8308:
  9573                           
  9574                           ; BSR set to: 0
  9575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  9576  001A1A  0E67               	movlw	103
  9577  001A1C  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  9578  001A1E  B4D8               	btfsc	status,2,c
  9579  001A20  EF14  F00D         	goto	u10721
  9580  001A24  EF16  F00D         	goto	u10720
  9581  001A28                     u10721:
  9582  001A28  EF1A  F00D         	goto	l8312
  9583  001A2C                     u10720:
  9584  001A2C                     
  9585                           ; BSR set to: 0
  9586                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  9587  001A2C  51B0               	movf	efgtoa@e& (0+255),w,b
  9588  001A2E  2794               	addwf	efgtoa@m& (0+255),f,b
  9589  001A30  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  9590  001A32  2395               	addwfc	(efgtoa@m+1)& (0+255),f,b
  9591  001A34                     l8312:
  9592                           
  9593                           ; BSR set to: 0
  9594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  9595  001A34  0E00               	movlw	0
  9596  001A36  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  9597  001A38  0E00               	movlw	0
  9598  001A3A  6FAA               	movwf	efgtoa@i& (0+255),b
  9599  001A3C                     
  9600                           ; BSR set to: 0
  9601                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  9602  001A3C  C0AC  F0A2         	movff	efgtoa@g,efgtoa@h
  9603  001A40  C0AD  F0A3         	movff	efgtoa@g+1,efgtoa@h+1
  9604  001A44  C0AE  F0A4         	movff	efgtoa@g+2,efgtoa@h+2
  9605  001A48  C0AF  F0A5         	movff	efgtoa@g+3,efgtoa@h+3
  9606  001A4C                     
  9607                           ; BSR set to: 0
  9608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  9609  001A4C  C0B4  F080         	movff	efgtoa@u,efgtoa@ou
  9610  001A50  C0B5  F081         	movff	efgtoa@u+1,efgtoa@ou+1
  9611  001A54  C0B6  F082         	movff	efgtoa@u+2,efgtoa@ou+2
  9612  001A58  C0B7  F083         	movff	efgtoa@u+3,efgtoa@ou+3
  9613                           
  9614                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9615  001A5C  EFAB  F00D         	goto	l8326
  9616  001A60                     l8318:
  9617                           
  9618                           ; BSR set to: 0
  9619                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  9620  001A60  C0A2  F042         	movff	efgtoa@h,___fldiv@b
  9621  001A64  C0A3  F043         	movff	efgtoa@h+1,___fldiv@b+1
  9622  001A68  C0A4  F044         	movff	efgtoa@h+2,___fldiv@b+2
  9623  001A6C  C0A5  F045         	movff	efgtoa@h+3,___fldiv@b+3
  9624  001A70  C0B4  F046         	movff	efgtoa@u,___fldiv@a
  9625  001A74  C0B5  F047         	movff	efgtoa@u+1,___fldiv@a+1
  9626  001A78  C0B6  F048         	movff	efgtoa@u+2,___fldiv@a+2
  9627  001A7C  C0B7  F049         	movff	efgtoa@u+3,___fldiv@a+3
  9628  001A80  EC7D  F017         	call	___fldiv	;wreg free
  9629  001A84  C042  F060         	movff	?___fldiv,floorf@x
  9630  001A88  C043  F061         	movff	?___fldiv+1,floorf@x+1
  9631  001A8C  C044  F062         	movff	?___fldiv+2,floorf@x+2
  9632  001A90  C045  F063         	movff	?___fldiv+3,floorf@x+3
  9633  001A94  ECEE  F01D         	call	_floorf	;wreg free
  9634  001A98  C060  F0A6         	movff	?_floorf,efgtoa@l
  9635  001A9C  C061  F0A7         	movff	?_floorf+1,efgtoa@l+1
  9636  001AA0  C062  F0A8         	movff	?_floorf+2,efgtoa@l+2
  9637  001AA4  C063  F0A9         	movff	?_floorf+3,efgtoa@l+3
  9638                           
  9639                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  9640  001AA8  C0A6  F003         	movff	efgtoa@l,___fltol@f1
  9641  001AAC  C0A7  F004         	movff	efgtoa@l+1,___fltol@f1+1
  9642  001AB0  C0A8  F005         	movff	efgtoa@l+2,___fltol@f1+2
  9643  001AB4  C0A9  F006         	movff	efgtoa@l+3,___fltol@f1+3
  9644  001AB8  EC57  F027         	call	___fltol	;wreg free
  9645  001ABC  C003  F098         	movff	?___fltol,efgtoa@d
  9646  001AC0  C004  F099         	movff	?___fltol+1,efgtoa@d+1
  9647  001AC4                     
  9648                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  9649  001AC4  C0A2  F03A         	movff	efgtoa@h,___flsub@b
  9650  001AC8  C0A3  F03B         	movff	efgtoa@h+1,___flsub@b+1
  9651  001ACC  C0A4  F03C         	movff	efgtoa@h+2,___flsub@b+2
  9652  001AD0  C0A5  F03D         	movff	efgtoa@h+3,___flsub@b+3
  9653  001AD4  C0B4  F015         	movff	efgtoa@u,___flmul@a
  9654  001AD8  C0B5  F016         	movff	efgtoa@u+1,___flmul@a+1
  9655  001ADC  C0B6  F017         	movff	efgtoa@u+2,___flmul@a+2
  9656  001AE0  C0B7  F018         	movff	efgtoa@u+3,___flmul@a+3
  9657  001AE4  C0A6  F011         	movff	efgtoa@l,___flmul@b
  9658  001AE8  C0A7  F012         	movff	efgtoa@l+1,___flmul@b+1
  9659  001AEC  C0A8  F013         	movff	efgtoa@l+2,___flmul@b+2
  9660  001AF0  C0A9  F014         	movff	efgtoa@l+3,___flmul@b+3
  9661  001AF4  EC68  F015         	call	___flmul	;wreg free
  9662  001AF8  C011  F03E         	movff	?___flmul,___flsub@a
  9663  001AFC  C012  F03F         	movff	?___flmul+1,___flsub@a+1
  9664  001B00  C013  F040         	movff	?___flmul+2,___flsub@a+2
  9665  001B04  C014  F041         	movff	?___flmul+3,___flsub@a+3
  9666  001B08  ECBC  F02D         	call	___flsub	;wreg free
  9667  001B0C  C03A  F0A2         	movff	?___flsub,efgtoa@h
  9668  001B10  C03B  F0A3         	movff	?___flsub+1,efgtoa@h+1
  9669  001B14  C03C  F0A4         	movff	?___flsub+2,efgtoa@h+2
  9670  001B18  C03D  F0A5         	movff	?___flsub+3,efgtoa@h+3
  9671  001B1C                     
  9672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  9673  001B1C  C0B4  F042         	movff	efgtoa@u,___fldiv@b
  9674  001B20  C0B5  F043         	movff	efgtoa@u+1,___fldiv@b+1
  9675  001B24  C0B6  F044         	movff	efgtoa@u+2,___fldiv@b+2
  9676  001B28  C0B7  F045         	movff	efgtoa@u+3,___fldiv@b+3
  9677  001B2C  0E00               	movlw	0
  9678  001B2E  6E46               	movwf	___fldiv@a^0,c
  9679  001B30  0E00               	movlw	0
  9680  001B32  6E47               	movwf	(___fldiv@a+1)^0,c
  9681  001B34  0E20               	movlw	32
  9682  001B36  6E48               	movwf	(___fldiv@a+2)^0,c
  9683  001B38  0E41               	movlw	65
  9684  001B3A  6E49               	movwf	(___fldiv@a+3)^0,c
  9685  001B3C  EC7D  F017         	call	___fldiv	;wreg free
  9686  001B40  C042  F0B4         	movff	?___fldiv,efgtoa@u
  9687  001B44  C043  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  9688  001B48  C044  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  9689  001B4C  C045  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  9690  001B50                     
  9691                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  9692  001B50  0100               	movlb	0	; () banked
  9693  001B52  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  9694  001B54  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  9695  001B56                     l8326:
  9696                           
  9697                           ; BSR set to: 0
  9698                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9699  001B56  5194               	movf	efgtoa@m& (0+255),w,b
  9700  001B58  5DAA               	subwf	efgtoa@i& (0+255),w,b
  9701  001B5A  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  9702  001B5C  0A80               	xorlw	128
  9703  001B5E  6F7B               	movwf	??_efgtoa& (0+255),b
  9704  001B60  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  9705  001B62  0A80               	xorlw	128
  9706  001B64  597B               	subwfb	??_efgtoa& (0+255),w,b
  9707  001B66  A0D8               	btfss	status,0,c
  9708  001B68  EFB8  F00D         	goto	u10731
  9709  001B6C  EFBA  F00D         	goto	u10730
  9710  001B70                     u10731:
  9711  001B70  EF30  F00D         	goto	l8318
  9712  001B74                     u10730:
  9713  001B74                     
  9714                           ; BSR set to: 0
  9715                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  9716  001B74  C0B4  F011         	movff	efgtoa@u,___flmul@b
  9717  001B78  C0B5  F012         	movff	efgtoa@u+1,___flmul@b+1
  9718  001B7C  C0B6  F013         	movff	efgtoa@u+2,___flmul@b+2
  9719  001B80  C0B7  F014         	movff	efgtoa@u+3,___flmul@b+3
  9720  001B84  0E00               	movlw	0
  9721  001B86  6E15               	movwf	___flmul@a^0,c
  9722  001B88  0E00               	movlw	0
  9723  001B8A  6E16               	movwf	(___flmul@a+1)^0,c
  9724  001B8C  0EA0               	movlw	160
  9725  001B8E  6E17               	movwf	(___flmul@a+2)^0,c
  9726  001B90  0E40               	movlw	64
  9727  001B92  6E18               	movwf	(___flmul@a+3)^0,c
  9728  001B94  EC68  F015         	call	___flmul	;wreg free
  9729  001B98  C011  F0A6         	movff	?___flmul,efgtoa@l
  9730  001B9C  C012  F0A7         	movff	?___flmul+1,efgtoa@l+1
  9731  001BA0  C013  F0A8         	movff	?___flmul+2,efgtoa@l+2
  9732  001BA4  C014  F0A9         	movff	?___flmul+3,efgtoa@l+3
  9733  001BA8                     
  9734                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  9735  001BA8  C0A2  F02A         	movff	efgtoa@h,___flge@ff1
  9736  001BAC  C0A3  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  9737  001BB0  C0A4  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  9738  001BB4  C0A5  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  9739  001BB8  C0A6  F02E         	movff	efgtoa@l,___flge@ff2
  9740  001BBC  C0A7  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  9741  001BC0  C0A8  F030         	movff	efgtoa@l+2,___flge@ff2+2
  9742  001BC4  C0A9  F031         	movff	efgtoa@l+3,___flge@ff2+3
  9743  001BC8  ECDA  F027         	call	___flge	;wreg free
  9744  001BCC  B0D8               	btfsc	status,0,c
  9745  001BCE  EFEB  F00D         	goto	u10741
  9746  001BD2  EFED  F00D         	goto	u10740
  9747  001BD6                     u10741:
  9748  001BD6  EFF8  F00D         	goto	l8334
  9749  001BDA                     u10740:
  9750  001BDA                     
  9751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  9752  001BDA  0E00               	movlw	0
  9753  001BDC  0100               	movlb	0	; () banked
  9754  001BDE  6FA6               	movwf	efgtoa@l& (0+255),b
  9755  001BE0  0E00               	movlw	0
  9756  001BE2  6FA7               	movwf	(efgtoa@l+1)& (0+255),b
  9757  001BE4  0E00               	movlw	0
  9758  001BE6  6FA8               	movwf	(efgtoa@l+2)& (0+255),b
  9759  001BE8  0E00               	movlw	0
  9760  001BEA  6FA9               	movwf	(efgtoa@l+3)& (0+255),b
  9761                           
  9762                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  9763  001BEC  EF21  F00E         	goto	l8340
  9764  001BF0                     l8334:
  9765                           
  9766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  9767  001BF0  C0A2  F003         	movff	efgtoa@h,___fleq@ff1
  9768  001BF4  C0A3  F004         	movff	efgtoa@h+1,___fleq@ff1+1
  9769  001BF8  C0A4  F005         	movff	efgtoa@h+2,___fleq@ff1+2
  9770  001BFC  C0A5  F006         	movff	efgtoa@h+3,___fleq@ff1+3
  9771  001C00  C0A6  F007         	movff	efgtoa@l,___fleq@ff2
  9772  001C04  C0A7  F008         	movff	efgtoa@l+1,___fleq@ff2+1
  9773  001C08  C0A8  F009         	movff	efgtoa@l+2,___fleq@ff2+2
  9774  001C0C  C0A9  F00A         	movff	efgtoa@l+3,___fleq@ff2+3
  9775  001C10  EC95  F02B         	call	___fleq	;wreg free
  9776  001C14  A0D8               	btfss	status,0,c
  9777  001C16  EF0F  F00E         	goto	u10751
  9778  001C1A  EF11  F00E         	goto	u10750
  9779  001C1E                     u10751:
  9780  001C1E  EF21  F00E         	goto	l8340
  9781  001C22                     u10750:
  9782  001C22  0100               	movlb	0	; () banked
  9783  001C24  B198               	btfsc	efgtoa@d& (0+255),0,b
  9784  001C26  EF17  F00E         	goto	u10761
  9785  001C2A  EF19  F00E         	goto	u10760
  9786  001C2E                     u10761:
  9787  001C2E  EF21  F00E         	goto	l8340
  9788  001C32                     u10760:
  9789  001C32                     
  9790                           ; BSR set to: 0
  9791                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  9792  001C32  0E00               	movlw	0
  9793  001C34  6FA6               	movwf	efgtoa@l& (0+255),b
  9794  001C36  0E00               	movlw	0
  9795  001C38  6FA7               	movwf	(efgtoa@l+1)& (0+255),b
  9796  001C3A  0E00               	movlw	0
  9797  001C3C  6FA8               	movwf	(efgtoa@l+2)& (0+255),b
  9798  001C3E  0E00               	movlw	0
  9799  001C40  6FA9               	movwf	(efgtoa@l+3)& (0+255),b
  9800  001C42                     l8340:
  9801                           
  9802                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  9803  001C42  C0AC  F02A         	movff	efgtoa@g,___fladd@b
  9804  001C46  C0AD  F02B         	movff	efgtoa@g+1,___fladd@b+1
  9805  001C4A  C0AE  F02C         	movff	efgtoa@g+2,___fladd@b+2
  9806  001C4E  C0AF  F02D         	movff	efgtoa@g+3,___fladd@b+3
  9807  001C52  C0A6  F02E         	movff	efgtoa@l,___fladd@a
  9808  001C56  C0A7  F02F         	movff	efgtoa@l+1,___fladd@a+1
  9809  001C5A  C0A8  F030         	movff	efgtoa@l+2,___fladd@a+2
  9810  001C5E  C0A9  F031         	movff	efgtoa@l+3,___fladd@a+3
  9811  001C62  EC08  F013         	call	___fladd	;wreg free
  9812  001C66  C02A  F0A2         	movff	?___fladd,efgtoa@h
  9813  001C6A  C02B  F0A3         	movff	?___fladd+1,efgtoa@h+1
  9814  001C6E  C02C  F0A4         	movff	?___fladd+2,efgtoa@h+2
  9815  001C72  C02D  F0A5         	movff	?___fladd+3,efgtoa@h+3
  9816  001C76                     
  9817                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  9818  001C76  C080  F0B4         	movff	efgtoa@ou,efgtoa@u
  9819  001C7A  C081  F0B5         	movff	efgtoa@ou+1,efgtoa@u+1
  9820  001C7E  C082  F0B6         	movff	efgtoa@ou+2,efgtoa@u+2
  9821  001C82  C083  F0B7         	movff	efgtoa@ou+3,efgtoa@u+3
  9822  001C86                     
  9823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  9824  001C86  0E65               	movlw	101
  9825  001C88  0100               	movlb	0	; () banked
  9826  001C8A  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  9827  001C8C  B4D8               	btfsc	status,2,c
  9828  001C8E  EF4B  F00E         	goto	u10771
  9829  001C92  EF4D  F00E         	goto	u10770
  9830  001C96                     u10771:
  9831  001C96  EF53  F00E         	goto	l8348
  9832  001C9A                     u10770:
  9833  001C9A                     
  9834                           ; BSR set to: 0
  9835  001C9A  C0B0  F096         	movff	efgtoa@e,efgtoa@ne
  9836  001C9E  C0B1  F097         	movff	efgtoa@e+1,efgtoa@ne+1
  9837  001CA2  EF57  F00E         	goto	l607
  9838  001CA6                     l8348:
  9839                           
  9840                           ; BSR set to: 0
  9841  001CA6  0E00               	movlw	0
  9842  001CA8  6F97               	movwf	(efgtoa@ne+1)& (0+255),b
  9843  001CAA  0E00               	movlw	0
  9844  001CAC  6F96               	movwf	efgtoa@ne& (0+255),b
  9845  001CAE                     l607:
  9846                           
  9847                           ; BSR set to: 0
  9848                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  9849  001CAE  0E00               	movlw	0
  9850  001CB0  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  9851  001CB2  0E00               	movlw	0
  9852  001CB4  6F92               	movwf	efgtoa@pp& (0+255),b
  9853                           
  9854                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  9855  001CB6  0E00               	movlw	0
  9856  001CB8  6F91               	movwf	(efgtoa@t+1)& (0+255),b
  9857  001CBA  0E00               	movlw	0
  9858  001CBC  6F90               	movwf	efgtoa@t& (0+255),b
  9859                           
  9860                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  9861  001CBE  0E00               	movlw	0
  9862  001CC0  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  9863  001CC2  0E00               	movlw	0
  9864  001CC4  6FAA               	movwf	efgtoa@i& (0+255),b
  9865                           
  9866                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  9867  001CC6  EF52  F00F         	goto	l8398
  9868  001CCA                     l8350:
  9869                           
  9870                           ; BSR set to: 0
  9871                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  9872  001CCA  C0A2  F042         	movff	efgtoa@h,___fldiv@b
  9873  001CCE  C0A3  F043         	movff	efgtoa@h+1,___fldiv@b+1
  9874  001CD2  C0A4  F044         	movff	efgtoa@h+2,___fldiv@b+2
  9875  001CD6  C0A5  F045         	movff	efgtoa@h+3,___fldiv@b+3
  9876  001CDA  C0B4  F046         	movff	efgtoa@u,___fldiv@a
  9877  001CDE  C0B5  F047         	movff	efgtoa@u+1,___fldiv@a+1
  9878  001CE2  C0B6  F048         	movff	efgtoa@u+2,___fldiv@a+2
  9879  001CE6  C0B7  F049         	movff	efgtoa@u+3,___fldiv@a+3
  9880  001CEA  EC7D  F017         	call	___fldiv	;wreg free
  9881  001CEE  C042  F060         	movff	?___fldiv,floorf@x
  9882  001CF2  C043  F061         	movff	?___fldiv+1,floorf@x+1
  9883  001CF6  C044  F062         	movff	?___fldiv+2,floorf@x+2
  9884  001CFA  C045  F063         	movff	?___fldiv+3,floorf@x+3
  9885  001CFE  ECEE  F01D         	call	_floorf	;wreg free
  9886  001D02  C060  F0A6         	movff	?_floorf,efgtoa@l
  9887  001D06  C061  F0A7         	movff	?_floorf+1,efgtoa@l+1
  9888  001D0A  C062  F0A8         	movff	?_floorf+2,efgtoa@l+2
  9889  001D0E  C063  F0A9         	movff	?_floorf+3,efgtoa@l+3
  9890                           
  9891                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  9892  001D12  C0A6  F003         	movff	efgtoa@l,___fltol@f1
  9893  001D16  C0A7  F004         	movff	efgtoa@l+1,___fltol@f1+1
  9894  001D1A  C0A8  F005         	movff	efgtoa@l+2,___fltol@f1+2
  9895  001D1E  C0A9  F006         	movff	efgtoa@l+3,___fltol@f1+3
  9896  001D22  EC57  F027         	call	___fltol	;wreg free
  9897  001D26  C003  F098         	movff	?___fltol,efgtoa@d
  9898  001D2A  C004  F099         	movff	?___fltol+1,efgtoa@d+1
  9899  001D2E                     
  9900                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  9901  001D2E  0100               	movlb	0	; () banked
  9902  001D30  B9FC               	btfsc	_flags& (0+255),4,b
  9903  001D32  EF9D  F00E         	goto	u10781
  9904  001D36  EF9F  F00E         	goto	u10780
  9905  001D3A                     u10781:
  9906  001D3A  EFBC  F00E         	goto	l8362
  9907  001D3E                     u10780:
  9908  001D3E                     
  9909                           ; BSR set to: 0
  9910  001D3E  5198               	movf	efgtoa@d& (0+255),w,b
  9911  001D40  1199               	iorwf	(efgtoa@d+1)& (0+255),w,b
  9912  001D42  A4D8               	btfss	status,2,c
  9913  001D44  EFA6  F00E         	goto	u10791
  9914  001D48  EFA8  F00E         	goto	u10790
  9915  001D4C                     u10791:
  9916  001D4C  EFBC  F00E         	goto	l8362
  9917  001D50                     u10790:
  9918  001D50                     
  9919                           ; BSR set to: 0
  9920  001D50  0E67               	movlw	103
  9921  001D52  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  9922  001D54  A4D8               	btfss	status,2,c
  9923  001D56  EFAF  F00E         	goto	u10801
  9924  001D5A  EFB1  F00E         	goto	u10800
  9925  001D5E                     u10801:
  9926  001D5E  EFBC  F00E         	goto	l8362
  9927  001D62                     u10800:
  9928  001D62                     
  9929                           ; BSR set to: 0
  9930  001D62  BF97               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9931  001D64  EFB8  F00E         	goto	u10810
  9932  001D68  EFB6  F00E         	goto	u10811
  9933  001D6C                     u10811:
  9934  001D6C  EFBC  F00E         	goto	l8362
  9935  001D70                     u10810:
  9936  001D70                     
  9937                           ; BSR set to: 0
  9938                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  9939  001D70  4B90               	infsnz	efgtoa@t& (0+255),f,b
  9940  001D72  2B91               	incf	(efgtoa@t+1)& (0+255),f,b
  9941                           
  9942                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  9943  001D74  EF06  F00F         	goto	l8390
  9944  001D78                     l8362:
  9945                           
  9946                           ; BSR set to: 0
  9947                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  9948  001D78  5192               	movf	efgtoa@pp& (0+255),w,b
  9949  001D7A  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9950  001D7C  A4D8               	btfss	status,2,c
  9951  001D7E  EFC3  F00E         	goto	u10821
  9952  001D82  EFC5  F00E         	goto	u10820
  9953  001D86                     u10821:
  9954  001D86  EFEF  F00E         	goto	l8382
  9955  001D8A                     u10820:
  9956  001D8A                     
  9957                           ; BSR set to: 0
  9958  001D8A  BF97               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9959  001D8C  EFCC  F00E         	goto	u10830
  9960  001D90  EFCA  F00E         	goto	u10831
  9961  001D94                     u10831:
  9962  001D94  EFEF  F00E         	goto	l8382
  9963  001D98                     u10830:
  9964  001D98                     
  9965                           ; BSR set to: 0
  9966                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  9967  001D98  0E88               	movlw	low _dbuf
  9968  001D9A  25B2               	addwf	efgtoa@n& (0+255),w,b
  9969  001D9C  6ED9               	movwf	fsr2l,c
  9970  001D9E  0E01               	movlw	high _dbuf
  9971  001DA0  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9972  001DA2  6EDA               	movwf	fsr2h,c
  9973  001DA4  0E2E               	movlw	46
  9974  001DA6  6EDF               	movwf	indf2,c
  9975  001DA8                     
  9976                           ; BSR set to: 0
  9977  001DA8  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  9978  001DAA  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  9979  001DAC                     
  9980                           ; BSR set to: 0
  9981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  9982  001DAC  079F               	decf	efgtoa@w& (0+255),f,b
  9983  001DAE  A0D8               	btfss	status,0,c
  9984  001DB0  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  9985  001DB2                     
  9986                           ; BSR set to: 0
  9987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  9988  001DB2  0E00               	movlw	0
  9989  001DB4  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  9990  001DB6  0E01               	movlw	1
  9991  001DB8  6F92               	movwf	efgtoa@pp& (0+255),b
  9992  001DBA  EFEF  F00E         	goto	l8382
  9993  001DBE                     l8374:
  9994                           
  9995                           ; BSR set to: 0
  9996                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  9997  001DBE  0E88               	movlw	low _dbuf
  9998  001DC0  25B2               	addwf	efgtoa@n& (0+255),w,b
  9999  001DC2  6ED9               	movwf	fsr2l,c
 10000  001DC4  0E01               	movlw	high _dbuf
 10001  001DC6  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10002  001DC8  6EDA               	movwf	fsr2h,c
 10003  001DCA  0E30               	movlw	48
 10004  001DCC  6EDF               	movwf	indf2,c
 10005  001DCE                     
 10006                           ; BSR set to: 0
 10007  001DCE  4BB2               	infsnz	efgtoa@n& (0+255),f,b
 10008  001DD0  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
 10009  001DD2                     
 10010                           ; BSR set to: 0
 10011                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
 10012  001DD2  079F               	decf	efgtoa@w& (0+255),f,b
 10013  001DD4  A0D8               	btfss	status,0,c
 10014  001DD6  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
 10015  001DD8                     
 10016                           ; BSR set to: 0
 10017                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
 10018  001DD8  0790               	decf	efgtoa@t& (0+255),f,b
 10019  001DDA  A0D8               	btfss	status,0,c
 10020  001DDC  0791               	decf	(efgtoa@t+1)& (0+255),f,b
 10021  001DDE                     l8382:
 10022                           
 10023                           ; BSR set to: 0
 10024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
 10025  001DDE  5190               	movf	efgtoa@t& (0+255),w,b
 10026  001DE0  1191               	iorwf	(efgtoa@t+1)& (0+255),w,b
 10027  001DE2  A4D8               	btfss	status,2,c
 10028  001DE4  EFF6  F00E         	goto	u10841
 10029  001DE8  EFF8  F00E         	goto	u10840
 10030  001DEC                     u10841:
 10031  001DEC  EFDF  F00E         	goto	l8374
 10032  001DF0                     u10840:
 10033  001DF0                     
 10034                           ; BSR set to: 0
 10035                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
 10036  001DF0  0E88               	movlw	low _dbuf
 10037  001DF2  25B2               	addwf	efgtoa@n& (0+255),w,b
 10038  001DF4  6ED9               	movwf	fsr2l,c
 10039  001DF6  0E01               	movlw	high _dbuf
 10040  001DF8  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10041  001DFA  6EDA               	movwf	fsr2h,c
 10042  001DFC  5198               	movf	efgtoa@d& (0+255),w,b
 10043  001DFE  0F30               	addlw	48
 10044  001E00  6EDF               	movwf	indf2,c
 10045  001E02                     
 10046                           ; BSR set to: 0
 10047  001E02  4BB2               	infsnz	efgtoa@n& (0+255),f,b
 10048  001E04  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
 10049  001E06                     
 10050                           ; BSR set to: 0
 10051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
 10052  001E06  079F               	decf	efgtoa@w& (0+255),f,b
 10053  001E08  A0D8               	btfss	status,0,c
 10054  001E0A  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
 10055  001E0C                     l8390:
 10056                           
 10057                           ; BSR set to: 0
 10058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
 10059  001E0C  C0A2  F03A         	movff	efgtoa@h,___flsub@b
 10060  001E10  C0A3  F03B         	movff	efgtoa@h+1,___flsub@b+1
 10061  001E14  C0A4  F03C         	movff	efgtoa@h+2,___flsub@b+2
 10062  001E18  C0A5  F03D         	movff	efgtoa@h+3,___flsub@b+3
 10063  001E1C  C0B4  F015         	movff	efgtoa@u,___flmul@a
 10064  001E20  C0B5  F016         	movff	efgtoa@u+1,___flmul@a+1
 10065  001E24  C0B6  F017         	movff	efgtoa@u+2,___flmul@a+2
 10066  001E28  C0B7  F018         	movff	efgtoa@u+3,___flmul@a+3
 10067  001E2C  C0A6  F011         	movff	efgtoa@l,___flmul@b
 10068  001E30  C0A7  F012         	movff	efgtoa@l+1,___flmul@b+1
 10069  001E34  C0A8  F013         	movff	efgtoa@l+2,___flmul@b+2
 10070  001E38  C0A9  F014         	movff	efgtoa@l+3,___flmul@b+3
 10071  001E3C  EC68  F015         	call	___flmul	;wreg free
 10072  001E40  C011  F03E         	movff	?___flmul,___flsub@a
 10073  001E44  C012  F03F         	movff	?___flmul+1,___flsub@a+1
 10074  001E48  C013  F040         	movff	?___flmul+2,___flsub@a+2
 10075  001E4C  C014  F041         	movff	?___flmul+3,___flsub@a+3
 10076  001E50  ECBC  F02D         	call	___flsub	;wreg free
 10077  001E54  C03A  F0A2         	movff	?___flsub,efgtoa@h
 10078  001E58  C03B  F0A3         	movff	?___flsub+1,efgtoa@h+1
 10079  001E5C  C03C  F0A4         	movff	?___flsub+2,efgtoa@h+2
 10080  001E60  C03D  F0A5         	movff	?___flsub+3,efgtoa@h+3
 10081  001E64                     
 10082                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
 10083  001E64  C0B4  F042         	movff	efgtoa@u,___fldiv@b
 10084  001E68  C0B5  F043         	movff	efgtoa@u+1,___fldiv@b+1
 10085  001E6C  C0B6  F044         	movff	efgtoa@u+2,___fldiv@b+2
 10086  001E70  C0B7  F045         	movff	efgtoa@u+3,___fldiv@b+3
 10087  001E74  0E00               	movlw	0
 10088  001E76  6E46               	movwf	___fldiv@a^0,c
 10089  001E78  0E00               	movlw	0
 10090  001E7A  6E47               	movwf	(___fldiv@a+1)^0,c
 10091  001E7C  0E20               	movlw	32
 10092  001E7E  6E48               	movwf	(___fldiv@a+2)^0,c
 10093  001E80  0E41               	movlw	65
 10094  001E82  6E49               	movwf	(___fldiv@a+3)^0,c
 10095  001E84  EC7D  F017         	call	___fldiv	;wreg free
 10096  001E88  C042  F0B4         	movff	?___fldiv,efgtoa@u
 10097  001E8C  C043  F0B5         	movff	?___fldiv+1,efgtoa@u+1
 10098  001E90  C044  F0B6         	movff	?___fldiv+2,efgtoa@u+2
 10099  001E94  C045  F0B7         	movff	?___fldiv+3,efgtoa@u+3
 10100  001E98                     
 10101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
 10102  001E98  0100               	movlb	0	; () banked
 10103  001E9A  0796               	decf	efgtoa@ne& (0+255),f,b
 10104  001E9C  A0D8               	btfss	status,0,c
 10105  001E9E  0797               	decf	(efgtoa@ne+1)& (0+255),f,b
 10106  001EA0                     
 10107                           ; BSR set to: 0
 10108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
 10109  001EA0  4BAA               	infsnz	efgtoa@i& (0+255),f,b
 10110  001EA2  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
 10111  001EA4                     l8398:
 10112                           
 10113                           ; BSR set to: 0
 10114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 10115  001EA4  5194               	movf	efgtoa@m& (0+255),w,b
 10116  001EA6  5DAA               	subwf	efgtoa@i& (0+255),w,b
 10117  001EA8  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
 10118  001EAA  0A80               	xorlw	128
 10119  001EAC  6F7B               	movwf	??_efgtoa& (0+255),b
 10120  001EAE  5195               	movf	(efgtoa@m+1)& (0+255),w,b
 10121  001EB0  0A80               	xorlw	128
 10122  001EB2  597B               	subwfb	??_efgtoa& (0+255),w,b
 10123  001EB4  B0D8               	btfsc	status,0,c
 10124  001EB6  EF5F  F00F         	goto	u10851
 10125  001EBA  EF61  F00F         	goto	u10850
 10126  001EBE                     u10851:
 10127  001EBE  EF6F  F00F         	goto	l8402
 10128  001EC2                     u10850:
 10129  001EC2                     
 10130                           ; BSR set to: 0
 10131  001EC2  BFB3               	btfsc	(efgtoa@n+1)& (0+255),7,b
 10132  001EC4  EF6D  F00F         	goto	u10861
 10133  001EC8  51B3               	movf	(efgtoa@n+1)& (0+255),w,b
 10134  001ECA  E109               	bnz	u10860
 10135  001ECC  0E4B               	movlw	75
 10136  001ECE  5DB2               	subwf	efgtoa@n& (0+255),w,b
 10137  001ED0  A0D8               	btfss	status,0,c
 10138  001ED2  EF6D  F00F         	goto	u10861
 10139  001ED6  EF6F  F00F         	goto	u10860
 10140  001EDA                     u10861:
 10141  001EDA  EF65  F00E         	goto	l8350
 10142  001EDE                     u10860:
 10143  001EDE                     l8402:
 10144                           
 10145                           ; BSR set to: 0
 10146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
 10147  001EDE  5192               	movf	efgtoa@pp& (0+255),w,b
 10148  001EE0  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
 10149  001EE2  A4D8               	btfss	status,2,c
 10150  001EE4  EF76  F00F         	goto	u10871
 10151  001EE8  EF78  F00F         	goto	u10870
 10152  001EEC                     u10871:
 10153  001EEC  EF89  F00F         	goto	l8410
 10154  001EF0                     u10870:
 10155  001EF0                     
 10156                           ; BSR set to: 0
 10157  001EF0  A9FC               	btfss	_flags& (0+255),4,b
 10158  001EF2  EF7D  F00F         	goto	u10881
 10159  001EF6  EF7F  F00F         	goto	u10880
 10160  001EFA                     u10881:
 10161  001EFA  EF89  F00F         	goto	l8410
 10162  001EFE                     u10880:
 10163  001EFE                     
 10164                           ; BSR set to: 0
 10165                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
 10166  001EFE  0E88               	movlw	low _dbuf
 10167  001F00  25B2               	addwf	efgtoa@n& (0+255),w,b
 10168  001F02  6ED9               	movwf	fsr2l,c
 10169  001F04  0E01               	movlw	high _dbuf
 10170  001F06  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10171  001F08  6EDA               	movwf	fsr2h,c
 10172  001F0A  0E2E               	movlw	46
 10173  001F0C  6EDF               	movwf	indf2,c
 10174  001F0E                     
 10175                           ; BSR set to: 0
 10176  001F0E  4BB2               	infsnz	efgtoa@n& (0+255),f,b
 10177  001F10  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
 10178  001F12                     l8410:
 10179                           
 10180                           ; BSR set to: 0
 10181                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
 10182  001F12  0E88               	movlw	low _dbuf
 10183  001F14  25B2               	addwf	efgtoa@n& (0+255),w,b
 10184  001F16  6ED9               	movwf	fsr2l,c
 10185  001F18  0E01               	movlw	high _dbuf
 10186  001F1A  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10187  001F1C  6EDA               	movwf	fsr2h,c
 10188  001F1E  0E00               	movlw	0
 10189  001F20  6EDF               	movwf	indf2,c
 10190  001F22                     
 10191                           ; BSR set to: 0
 10192                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
 10193  001F22  0E65               	movlw	101
 10194  001F24  199E               	xorwf	efgtoa@nmode& (0+255),w,b
 10195  001F26  A4D8               	btfss	status,2,c
 10196  001F28  EF98  F00F         	goto	u10891
 10197  001F2C  EF9A  F00F         	goto	u10890
 10198  001F30                     u10891:
 10199  001F30  EF48  F00B         	goto	l8222
 10200  001F34                     u10890:
 10201  001F34                     
 10202                           ; BSR set to: 0
 10203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
 10204  001F34  0E00               	movlw	0
 10205  001F36  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
 10206  001F38  0E4F               	movlw	79
 10207  001F3A  6FAA               	movwf	efgtoa@i& (0+255),b
 10208  001F3C                     
 10209                           ; BSR set to: 0
 10210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
 10211  001F3C  0E88               	movlw	low _dbuf
 10212  001F3E  25AA               	addwf	efgtoa@i& (0+255),w,b
 10213  001F40  6ED9               	movwf	fsr2l,c
 10214  001F42  0E01               	movlw	high _dbuf
 10215  001F44  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10216  001F46  6EDA               	movwf	fsr2h,c
 10217  001F48  0E00               	movlw	0
 10218  001F4A  6EDF               	movwf	indf2,c
 10219  001F4C                     
 10220                           ; BSR set to: 0
 10221                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
 10222  001F4C  0E00               	movlw	0
 10223  001F4E  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
 10224  001F50  0E00               	movlw	0
 10225  001F52  6F9A               	movwf	efgtoa@sign& (0+255),b
 10226  001F54                     
 10227                           ; BSR set to: 0
 10228                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
 10229  001F54  BFB1               	btfsc	(efgtoa@e+1)& (0+255),7,b
 10230  001F56  EFB1  F00F         	goto	u10900
 10231  001F5A  EFAF  F00F         	goto	u10901
 10232  001F5E                     u10901:
 10233  001F5E  EFB9  F00F         	goto	l8426
 10234  001F62                     u10900:
 10235  001F62                     
 10236                           ; BSR set to: 0
 10237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
 10238  001F62  0E00               	movlw	0
 10239  001F64  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
 10240  001F66  0E01               	movlw	1
 10241  001F68  6F9A               	movwf	efgtoa@sign& (0+255),b
 10242  001F6A                     
 10243                           ; BSR set to: 0
 10244                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
 10245  001F6A  6DB0               	negf	efgtoa@e& (0+255),b
 10246  001F6C  1FB1               	comf	(efgtoa@e+1)& (0+255),f,b
 10247  001F6E  B0D8               	btfsc	status,0,c
 10248  001F70  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
 10249  001F72                     l8426:
 10250                           
 10251                           ; BSR set to: 0
 10252                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
 10253  001F72  0E00               	movlw	0
 10254  001F74  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
 10255  001F76  0E02               	movlw	2
 10256  001F78  6F9C               	movwf	efgtoa@p& (0+255),b
 10257                           
 10258                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 10259  001F7A  EFEA  F00F         	goto	l8438
 10260  001F7E                     l8428:
 10261                           
 10262                           ; BSR set to: 0
 10263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
 10264  001F7E  07AA               	decf	efgtoa@i& (0+255),f,b
 10265  001F80  A0D8               	btfss	status,0,c
 10266  001F82  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
 10267  001F84                     
 10268                           ; BSR set to: 0
 10269                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
 10270  001F84  0E88               	movlw	low _dbuf
 10271  001F86  25AA               	addwf	efgtoa@i& (0+255),w,b
 10272  001F88  6ED9               	movwf	fsr2l,c
 10273  001F8A  0E01               	movlw	high _dbuf
 10274  001F8C  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10275  001F8E  6EDA               	movwf	fsr2h,c
 10276  001F90  C0B0  F003         	movff	efgtoa@e,___awmod@dividend
 10277  001F94  C0B1  F004         	movff	efgtoa@e+1,___awmod@dividend+1
 10278  001F98  0E00               	movlw	0
 10279  001F9A  6E06               	movwf	(___awmod@divisor+1)^0,c
 10280  001F9C  0E0A               	movlw	10
 10281  001F9E  6E05               	movwf	___awmod@divisor^0,c
 10282  001FA0  ECE5  F02A         	call	___awmod	;wreg free
 10283  001FA4  5003               	movf	?___awmod^0,w,c
 10284  001FA6  0F30               	addlw	48
 10285  001FA8  6EDF               	movwf	indf2,c
 10286  001FAA                     
 10287                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
 10288  001FAA  C0B0  F003         	movff	efgtoa@e,___awdiv@dividend
 10289  001FAE  C0B1  F004         	movff	efgtoa@e+1,___awdiv@dividend+1
 10290  001FB2  0E00               	movlw	0
 10291  001FB4  6E06               	movwf	(___awdiv@divisor+1)^0,c
 10292  001FB6  0E0A               	movlw	10
 10293  001FB8  6E05               	movwf	___awdiv@divisor^0,c
 10294  001FBA  EC83  F02A         	call	___awdiv	;wreg free
 10295  001FBE  C003  F0B0         	movff	?___awdiv,efgtoa@e
 10296  001FC2  C004  F0B1         	movff	?___awdiv+1,efgtoa@e+1
 10297  001FC6                     
 10298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
 10299  001FC6  0100               	movlb	0	; () banked
 10300  001FC8  079C               	decf	efgtoa@p& (0+255),f,b
 10301  001FCA  A0D8               	btfss	status,0,c
 10302  001FCC  079D               	decf	(efgtoa@p+1)& (0+255),f,b
 10303  001FCE                     
 10304                           ; BSR set to: 0
 10305                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
 10306  001FCE  079F               	decf	efgtoa@w& (0+255),f,b
 10307  001FD0  A0D8               	btfss	status,0,c
 10308  001FD2  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
 10309  001FD4                     l8438:
 10310                           
 10311                           ; BSR set to: 0
 10312                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 10313  001FD4  51B0               	movf	efgtoa@e& (0+255),w,b
 10314  001FD6  11B1               	iorwf	(efgtoa@e+1)& (0+255),w,b
 10315  001FD8  A4D8               	btfss	status,2,c
 10316  001FDA  EFF1  F00F         	goto	u10911
 10317  001FDE  EFF3  F00F         	goto	u10910
 10318  001FE2                     u10911:
 10319  001FE2  EFBF  F00F         	goto	l8428
 10320  001FE6                     u10910:
 10321  001FE6                     
 10322                           ; BSR set to: 0
 10323  001FE6  BF9D               	btfsc	(efgtoa@p+1)& (0+255),7,b
 10324  001FE8  EF00  F010         	goto	u10920
 10325  001FEC  519D               	movf	(efgtoa@p+1)& (0+255),w,b
 10326  001FEE  E106               	bnz	u10921
 10327  001FF0  059C               	decf	efgtoa@p& (0+255),w,b
 10328  001FF2  B0D8               	btfsc	status,0,c
 10329  001FF4  EFFE  F00F         	goto	u10921
 10330  001FF8  EF00  F010         	goto	u10920
 10331  001FFC                     u10921:
 10332  001FFC  EFBF  F00F         	goto	l8428
 10333  002000                     u10920:
 10334  002000                     
 10335                           ; BSR set to: 0
 10336                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
 10337  002000  07AA               	decf	efgtoa@i& (0+255),f,b
 10338  002002  A0D8               	btfss	status,0,c
 10339  002004  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
 10340  002006                     
 10341                           ; BSR set to: 0
 10342                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
 10343  002006  519A               	movf	efgtoa@sign& (0+255),w,b
 10344  002008  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
 10345  00200A  A4D8               	btfss	status,2,c
 10346  00200C  EF0A  F010         	goto	u10931
 10347  002010  EF0C  F010         	goto	u10930
 10348  002014                     u10931:
 10349  002014  EF12  F010         	goto	l8448
 10350  002018                     u10930:
 10351  002018                     
 10352                           ; BSR set to: 0
 10353  002018  0E00               	movlw	0
 10354  00201A  6F8B               	movwf	(_efgtoa$1345+1)& (0+255),b
 10355  00201C  0E2B               	movlw	43
 10356  00201E  6F8A               	movwf	_efgtoa$1345& (0+255),b
 10357  002020  EF16  F010         	goto	l8450
 10358  002024                     l8448:
 10359                           
 10360                           ; BSR set to: 0
 10361  002024  0E00               	movlw	0
 10362  002026  6F8B               	movwf	(_efgtoa$1345+1)& (0+255),b
 10363  002028  0E2D               	movlw	45
 10364  00202A  6F8A               	movwf	_efgtoa$1345& (0+255),b
 10365  00202C                     l8450:
 10366                           
 10367                           ; BSR set to: 0
 10368  00202C  0E88               	movlw	low _dbuf
 10369  00202E  25AA               	addwf	efgtoa@i& (0+255),w,b
 10370  002030  6ED9               	movwf	fsr2l,c
 10371  002032  0E01               	movlw	high _dbuf
 10372  002034  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10373  002036  6EDA               	movwf	fsr2h,c
 10374  002038  C08A  FFDF         	movff	_efgtoa$1345,indf2
 10375  00203C                     
 10376                           ; BSR set to: 0
 10377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
 10378  00203C  079F               	decf	efgtoa@w& (0+255),f,b
 10379  00203E  A0D8               	btfss	status,0,c
 10380  002040  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
 10381  002042                     
 10382                           ; BSR set to: 0
 10383                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 10384  002042  07AA               	decf	efgtoa@i& (0+255),f,b
 10385  002044  A0D8               	btfss	status,0,c
 10386  002046  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
 10387  002048                     
 10388                           ; BSR set to: 0
 10389  002048  0EBF               	movlw	191
 10390  00204A  6F7B               	movwf	??_efgtoa& (0+255),b
 10391  00204C  0EFF               	movlw	255
 10392  00204E  6F7C               	movwf	(??_efgtoa+1)& (0+255),b
 10393  002050  517A               	movf	efgtoa@c& (0+255),w,b
 10394  002052  6F7D               	movwf	(??_efgtoa+2)& (0+255),b
 10395  002054  6B7E               	clrf	(??_efgtoa+3)& (0+255),b
 10396  002056  517B               	movf	??_efgtoa& (0+255),w,b
 10397  002058  277D               	addwf	(??_efgtoa+2)& (0+255),f,b
 10398  00205A  517C               	movf	(??_efgtoa+1)& (0+255),w,b
 10399  00205C  237E               	addwfc	(??_efgtoa+3)& (0+255),f,b
 10400  00205E  517E               	movf	(??_efgtoa+3)& (0+255),w,b
 10401  002060  E10A               	bnz	u10940
 10402  002062  0E1A               	movlw	26
 10403  002064  5D7D               	subwf	(??_efgtoa+2)& (0+255),w,b
 10404  002066  A0D8               	btfss	status,0,c
 10405  002068  EF38  F010         	goto	u10941
 10406  00206C  EF3B  F010         	goto	u10940
 10407  002070                     u10941:
 10408  002070  0E01               	movlw	1
 10409  002072  EF3C  F010         	goto	u10950
 10410  002076                     u10940:
 10411  002076  0E00               	movlw	0
 10412  002078                     u10950:
 10413  002078  6F8E               	movwf	_efgtoa$1347& (0+255),b
 10414  00207A  6B8F               	clrf	(_efgtoa$1347+1)& (0+255),b
 10415  00207C                     
 10416                           ; BSR set to: 0
 10417  00207C  518E               	movf	_efgtoa$1347& (0+255),w,b
 10418  00207E  118F               	iorwf	(_efgtoa$1347+1)& (0+255),w,b
 10419  002080  A4D8               	btfss	status,2,c
 10420  002082  EF45  F010         	goto	u10961
 10421  002086  EF47  F010         	goto	u10960
 10422  00208A                     u10961:
 10423  00208A  EF4D  F010         	goto	l8464
 10424  00208E                     u10960:
 10425  00208E                     
 10426                           ; BSR set to: 0
 10427  00208E  0E00               	movlw	0
 10428  002090  6F8D               	movwf	(_efgtoa$1346+1)& (0+255),b
 10429  002092  0E65               	movlw	101
 10430  002094  6F8C               	movwf	_efgtoa$1346& (0+255),b
 10431  002096  EF51  F010         	goto	l8466
 10432  00209A                     l8464:
 10433                           
 10434                           ; BSR set to: 0
 10435  00209A  0E00               	movlw	0
 10436  00209C  6F8D               	movwf	(_efgtoa$1346+1)& (0+255),b
 10437  00209E  0E45               	movlw	69
 10438  0020A0  6F8C               	movwf	_efgtoa$1346& (0+255),b
 10439  0020A2                     l8466:
 10440                           
 10441                           ; BSR set to: 0
 10442  0020A2  0E88               	movlw	low _dbuf
 10443  0020A4  25AA               	addwf	efgtoa@i& (0+255),w,b
 10444  0020A6  6ED9               	movwf	fsr2l,c
 10445  0020A8  0E01               	movlw	high _dbuf
 10446  0020AA  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10447  0020AC  6EDA               	movwf	fsr2h,c
 10448  0020AE  C08C  FFDF         	movff	_efgtoa$1346,indf2
 10449  0020B2                     
 10450                           ; BSR set to: 0
 10451                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
 10452  0020B2  079F               	decf	efgtoa@w& (0+255),f,b
 10453  0020B4  A0D8               	btfss	status,0,c
 10454  0020B6  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
 10455  0020B8                     
 10456                           ; BSR set to: 0
 10457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
 10458  0020B8  0E88               	movlw	low _dbuf
 10459  0020BA  25B2               	addwf	efgtoa@n& (0+255),w,b
 10460  0020BC  6E03               	movwf	strcpy@dest^0,c
 10461  0020BE  0E01               	movlw	high _dbuf
 10462  0020C0  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10463  0020C2  6E04               	movwf	(strcpy@dest+1)^0,c
 10464  0020C4  0E88               	movlw	low _dbuf
 10465  0020C6  25AA               	addwf	efgtoa@i& (0+255),w,b
 10466  0020C8  6E05               	movwf	strcpy@src^0,c
 10467  0020CA  0E01               	movlw	high _dbuf
 10468  0020CC  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10469  0020CE  6E06               	movwf	(strcpy@src+1)^0,c
 10470  0020D0  ECC0  F02C         	call	_strcpy	;wreg free
 10471  0020D4  EF48  F00B         	goto	l8222
 10472  0020D8                     l563:
 10473  0020D8  0012               	return		;funcret
 10474  0020DA                     __end_of_efgtoa:
 10475                           	opt callstack 0
 10476                           
 10477 ;; *************** function _tolower *****************
 10478 ;; Defined at:
 10479 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
 10480 ;; Parameters:    Size  Location     Type
 10481 ;;  c               2    8[COMRAM] int 
 10482 ;; Auto vars:     Size  Location     Type
 10483 ;;		None
 10484 ;; Return value:  Size  Location     Type
 10485 ;;                  2    8[COMRAM] int 
 10486 ;; Registers used:
 10487 ;;		wreg, status,2, status,0
 10488 ;; Tracked objects:
 10489 ;;		On entry : 0/0
 10490 ;;		On exit  : 0/0
 10491 ;;		Unchanged: 0/0
 10492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10493 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10494 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10495 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10496 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10497 ;;Total ram usage:        8 bytes
 10498 ;; Hardware stack levels used:    1
 10499 ;; Hardware stack levels required when called:    5
 10500 ;; This function calls:
 10501 ;;		_isupper
 10502 ;; This function is called by:
 10503 ;;		_efgtoa
 10504 ;;		_vfpfcnvrt
 10505 ;; This function uses a non-reentrant model
 10506 ;;
 10507                           
 10508                           	psect	text16
 10509  0058C2                     __ptext16:
 10510                           	opt callstack 0
 10511  0058C2                     _tolower:
 10512                           	opt callstack 21
 10513  0058C2  0EBF               	movlw	191
 10514  0058C4  6E0B               	movwf	??_tolower^0,c
 10515  0058C6  0EFF               	movlw	255
 10516  0058C8  6E0C               	movwf	(??_tolower+1)^0,c
 10517  0058CA  C009  F00D         	movff	tolower@c,??_tolower+2
 10518  0058CE  C00A  F00E         	movff	tolower@c+1,??_tolower+3
 10519  0058D2  500B               	movf	??_tolower^0,w,c
 10520  0058D4  260D               	addwf	(??_tolower+2)^0,f,c
 10521  0058D6  500C               	movf	(??_tolower+1)^0,w,c
 10522  0058D8  220E               	addwfc	(??_tolower+3)^0,f,c
 10523  0058DA  500E               	movf	(??_tolower+3)^0,w,c
 10524  0058DC  E10A               	bnz	u9170
 10525  0058DE  0E1A               	movlw	26
 10526  0058E0  5C0D               	subwf	(??_tolower+2)^0,w,c
 10527  0058E2  A0D8               	btfss	status,0,c
 10528  0058E4  EF76  F02C         	goto	u9171
 10529  0058E8  EF79  F02C         	goto	u9170
 10530  0058EC                     u9171:
 10531  0058EC  0E01               	movlw	1
 10532  0058EE  EF7A  F02C         	goto	u9180
 10533  0058F2                     u9170:
 10534  0058F2  0E00               	movlw	0
 10535  0058F4                     u9180:
 10536  0058F4  6E0F               	movwf	_tolower$2104^0,c
 10537  0058F6  6A10               	clrf	(_tolower$2104+1)^0,c
 10538  0058F8  500F               	movf	_tolower$2104^0,w,c
 10539  0058FA  1010               	iorwf	(_tolower$2104+1)^0,w,c
 10540  0058FC  B4D8               	btfsc	status,2,c
 10541  0058FE  EF83  F02C         	goto	u9191
 10542  005902  EF85  F02C         	goto	u9190
 10543  005906                     u9191:
 10544  005906  EF8C  F02C         	goto	l1630
 10545  00590A                     u9190:
 10546  00590A  0E20               	movlw	32
 10547  00590C  1009               	iorwf	tolower@c^0,w,c
 10548  00590E  6E09               	movwf	?_tolower^0,c
 10549  005910  500A               	movf	(tolower@c+1)^0,w,c
 10550  005912  6E0A               	movwf	(?_tolower+1)^0,c
 10551  005914  EF90  F02C         	goto	l1635
 10552  005918                     l1630:
 10553  005918  C009  F009         	movff	tolower@c,?_tolower
 10554  00591C  C00A  F00A         	movff	tolower@c+1,?_tolower+1
 10555  005920                     l1635:
 10556  005920  0012               	return		;funcret
 10557  005922                     __end_of_tolower:
 10558                           	opt callstack 0
 10559                           
 10560 ;; *************** function _isupper *****************
 10561 ;; Defined at:
 10562 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 10563 ;; Parameters:    Size  Location     Type
 10564 ;;  c               2    2[COMRAM] int 
 10565 ;; Auto vars:     Size  Location     Type
 10566 ;;		None
 10567 ;; Return value:  Size  Location     Type
 10568 ;;                  2    2[COMRAM] int 
 10569 ;; Registers used:
 10570 ;;		wreg, status,2, status,0
 10571 ;; Tracked objects:
 10572 ;;		On entry : 0/0
 10573 ;;		On exit  : 0/0
 10574 ;;		Unchanged: 0/0
 10575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10576 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10578 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10579 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10580 ;;Total ram usage:        6 bytes
 10581 ;; Hardware stack levels used:    1
 10582 ;; Hardware stack levels required when called:    4
 10583 ;; This function calls:
 10584 ;;		Nothing
 10585 ;; This function is called by:
 10586 ;;		_efgtoa
 10587 ;;		_xtoa
 10588 ;;		_vfpfcnvrt
 10589 ;;		_tolower
 10590 ;; This function uses a non-reentrant model
 10591 ;;
 10592                           
 10593                           	psect	text17
 10594  005D78                     __ptext17:
 10595                           	opt callstack 0
 10596  005D78                     _isupper:
 10597                           	opt callstack 21
 10598  005D78  0EBF               	movlw	191
 10599  005D7A  6E05               	movwf	??_isupper^0,c
 10600  005D7C  0EFF               	movlw	255
 10601  005D7E  6E06               	movwf	(??_isupper+1)^0,c
 10602  005D80  C003  F007         	movff	isupper@c,??_isupper+2
 10603  005D84  C004  F008         	movff	isupper@c+1,??_isupper+3
 10604  005D88  5005               	movf	??_isupper^0,w,c
 10605  005D8A  2607               	addwf	(??_isupper+2)^0,f,c
 10606  005D8C  5006               	movf	(??_isupper+1)^0,w,c
 10607  005D8E  2208               	addwfc	(??_isupper+3)^0,f,c
 10608  005D90  5008               	movf	(??_isupper+3)^0,w,c
 10609  005D92  E10A               	bnz	u8600
 10610  005D94  0E1A               	movlw	26
 10611  005D96  5C07               	subwf	(??_isupper+2)^0,w,c
 10612  005D98  A0D8               	btfss	status,0,c
 10613  005D9A  EFD1  F02E         	goto	u8601
 10614  005D9E  EFD4  F02E         	goto	u8600
 10615  005DA2                     u8601:
 10616  005DA2  0E01               	movlw	1
 10617  005DA4  EFD5  F02E         	goto	u8610
 10618  005DA8                     u8600:
 10619  005DA8  0E00               	movlw	0
 10620  005DAA                     u8610:
 10621  005DAA  6E03               	movwf	?_isupper^0,c
 10622  005DAC  6A04               	clrf	(?_isupper+1)^0,c
 10623  005DAE  0012               	return		;funcret
 10624  005DB0                     __end_of_isupper:
 10625                           	opt callstack 0
 10626                           
 10627 ;; *************** function _strcpy *****************
 10628 ;; Defined at:
 10629 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
 10630 ;; Parameters:    Size  Location     Type
 10631 ;;  dest            2    2[COMRAM] PTR unsigned char 
 10632 ;;		 -> dbuf(80), 
 10633 ;;  src             2    4[COMRAM] PTR const unsigned char 
 10634 ;;		 -> STR_12(4), STR_11(4), STR_8(4), STR_7(4), 
 10635 ;;		 -> dbuf(80), 
 10636 ;; Auto vars:     Size  Location     Type
 10637 ;;  d               2   10[COMRAM] PTR unsigned char 
 10638 ;;		 -> dbuf(80), 
 10639 ;;  s               2    8[COMRAM] PTR const unsigned char 
 10640 ;;		 -> STR_12(4), STR_11(4), STR_8(4), STR_7(4), 
 10641 ;;		 -> dbuf(80), 
 10642 ;; Return value:  Size  Location     Type
 10643 ;;                  2    2[COMRAM] PTR unsigned char 
 10644 ;; Registers used:
 10645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10646 ;; Tracked objects:
 10647 ;;		On entry : 0/0
 10648 ;;		On exit  : 0/0
 10649 ;;		Unchanged: 0/0
 10650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10651 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10652 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10653 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10654 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10655 ;;Total ram usage:       10 bytes
 10656 ;; Hardware stack levels used:    1
 10657 ;; Hardware stack levels required when called:    4
 10658 ;; This function calls:
 10659 ;;		Nothing
 10660 ;; This function is called by:
 10661 ;;		_efgtoa
 10662 ;; This function uses a non-reentrant model
 10663 ;;
 10664                           
 10665                           	psect	text18
 10666  005980                     __ptext18:
 10667                           	opt callstack 0
 10668  005980                     _strcpy:
 10669                           	opt callstack 21
 10670  005980  C005  F009         	movff	strcpy@src,strcpy@s
 10671  005984  C006  F00A         	movff	strcpy@src+1,strcpy@s+1
 10672  005988  C003  F00B         	movff	strcpy@dest,strcpy@d
 10673  00598C  C004  F00C         	movff	strcpy@dest+1,strcpy@d+1
 10674  005990                     l7464:
 10675  005990  5009               	movf	strcpy@s^0,w,c
 10676  005992  6E07               	movwf	??_strcpy^0,c
 10677  005994  500A               	movf	(strcpy@s+1)^0,w,c
 10678  005996  6E08               	movwf	(??_strcpy+1)^0,c
 10679  005998  4A09               	infsnz	strcpy@s^0,f,c
 10680  00599A  2A0A               	incf	(strcpy@s+1)^0,f,c
 10681  00599C  C007  FFF6         	movff	??_strcpy,tblptrl
 10682  0059A0  C008  FFF7         	movff	??_strcpy+1,tblptrh
 10683  0059A4  0E00               	movlw	low (__mediumconst shr (0+16))
 10684  0059A6  6EF8               	movwf	tblptru,c
 10685  0059A8  C00B  FFD9         	movff	strcpy@d,fsr2l
 10686  0059AC  C00C  FFDA         	movff	strcpy@d+1,fsr2h
 10687  0059B0  4A0B               	infsnz	strcpy@d^0,f,c
 10688  0059B2  2A0C               	incf	(strcpy@d+1)^0,f,c
 10689  0059B4  0E0E               	movlw	(high __ramtop+-1)
 10690  0059B6  64F7               	cpfsgt	tblptrh,c
 10691  0059B8  D003               	bra	u9157
 10692  0059BA  0008               	tblrd		*
 10693  0059BC  50F5               	movf	tablat,w,c
 10694  0059BE  D005               	bra	u9150
 10695  0059C0                     u9157:
 10696  0059C0  CFF6 FFE1          	movff	tblptrl,fsr1l
 10697  0059C4  CFF7 FFE2          	movff	tblptrh,fsr1h
 10698  0059C8  50E7               	movf	indf1,w,c
 10699  0059CA                     u9150:
 10700  0059CA  6EDF               	movwf	indf2,c
 10701  0059CC  50DF               	movf	indf2,w,c
 10702  0059CE  A4D8               	btfss	status,2,c
 10703  0059D0  EFEC  F02C         	goto	u9161
 10704  0059D4  EFEE  F02C         	goto	u9160
 10705  0059D8                     u9161:
 10706  0059D8  EFC8  F02C         	goto	l7464
 10707  0059DC                     u9160:
 10708  0059DC  0012               	return		;funcret
 10709  0059DE                     __end_of_strcpy:
 10710                           	opt callstack 0
 10711                           
 10712 ;; *************** function _floorf *****************
 10713 ;; Defined at:
 10714 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
 10715 ;; Parameters:    Size  Location     Type
 10716 ;;  x               4    0[BANK0 ] float 
 10717 ;; Auto vars:     Size  Location     Type
 10718 ;;  u               4   16[BANK0 ] struct .
 10719 ;;  m               4   10[BANK0 ] unsigned long 
 10720 ;;  e               2   14[BANK0 ] int 
 10721 ;; Return value:  Size  Location     Type
 10722 ;;                  4    0[BANK0 ] float 
 10723 ;; Registers used:
 10724 ;;		wreg, status,2, status,0
 10725 ;; Tracked objects:
 10726 ;;		On entry : 0/0
 10727 ;;		On exit  : 0/0
 10728 ;;		Unchanged: 0/0
 10729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10730 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10731 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10732 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10733 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10734 ;;Total ram usage:       20 bytes
 10735 ;; Hardware stack levels used:    1
 10736 ;; Hardware stack levels required when called:    4
 10737 ;; This function calls:
 10738 ;;		Nothing
 10739 ;; This function is called by:
 10740 ;;		_efgtoa
 10741 ;; This function uses a non-reentrant model
 10742 ;;
 10743                           
 10744                           	psect	text19
 10745  003BDC                     __ptext19:
 10746                           	opt callstack 0
 10747  003BDC                     _floorf:
 10748                           	opt callstack 21
 10749  003BDC  C100  F070         	movff	floorf@F524,floorf@u
 10750  003BE0  C101  F071         	movff	floorf@F524+1,floorf@u+1
 10751  003BE4  C102  F072         	movff	floorf@F524+2,floorf@u+2
 10752  003BE8  C103  F073         	movff	floorf@F524+3,floorf@u+3
 10753  003BEC  C060  F070         	movff	floorf@x,floorf@u
 10754  003BF0  C061  F071         	movff	floorf@x+1,floorf@u+1
 10755  003BF4  C062  F072         	movff	floorf@x+2,floorf@u+2
 10756  003BF8  C063  F073         	movff	floorf@x+3,floorf@u+3
 10757  003BFC  0E81               	movlw	129
 10758  003BFE  0100               	movlb	0	; () banked
 10759  003C00  6F64               	movwf	??_floorf& (0+255),b
 10760  003C02  0EFF               	movlw	255
 10761  003C04  6F65               	movwf	(??_floorf+1)& (0+255),b
 10762  003C06  C070  F066         	movff	floorf@u,??_floorf+2
 10763  003C0A  C071  F067         	movff	floorf@u+1,??_floorf+3
 10764  003C0E  C072  F068         	movff	floorf@u+2,??_floorf+4
 10765  003C12  C073  F069         	movff	floorf@u+3,??_floorf+5
 10766  003C16  0E18               	movlw	24
 10767  003C18  EF13  F01E         	goto	u9200
 10768  003C1C                     u9205:
 10769  003C1C  90D8               	bcf	status,0,c
 10770  003C1E  3369               	rrcf	(??_floorf+5)& (0+255),f,b
 10771  003C20  3368               	rrcf	(??_floorf+4)& (0+255),f,b
 10772  003C22  3367               	rrcf	(??_floorf+3)& (0+255),f,b
 10773  003C24  3366               	rrcf	(??_floorf+2)& (0+255),f,b
 10774  003C26                     u9200:
 10775  003C26  2EE8               	decfsz	wreg,f,c
 10776  003C28  EF0E  F01E         	goto	u9205
 10777  003C2C  5166               	movf	(??_floorf+2)& (0+255),w,b
 10778  003C2E  2564               	addwf	??_floorf& (0+255),w,b
 10779  003C30  6F6E               	movwf	floorf@e& (0+255),b
 10780  003C32  0E00               	movlw	0
 10781  003C34  2165               	addwfc	(??_floorf+1)& (0+255),w,b
 10782  003C36  6F6F               	movwf	(floorf@e+1)& (0+255),b
 10783  003C38  BF6F               	btfsc	(floorf@e+1)& (0+255),7,b
 10784  003C3A  EF28  F01E         	goto	u9211
 10785  003C3E  516F               	movf	(floorf@e+1)& (0+255),w,b
 10786  003C40  E109               	bnz	u9210
 10787  003C42  0E17               	movlw	23
 10788  003C44  5D6E               	subwf	floorf@e& (0+255),w,b
 10789  003C46  A0D8               	btfss	status,0,c
 10790  003C48  EF28  F01E         	goto	u9211
 10791  003C4C  EF2A  F01E         	goto	u9210
 10792  003C50                     u9211:
 10793  003C50  EF34  F01E         	goto	l7482
 10794  003C54                     u9210:
 10795  003C54                     l7480:
 10796                           
 10797                           ; BSR set to: 0
 10798  003C54  C060  F060         	movff	floorf@x,?_floorf
 10799  003C58  C061  F061         	movff	floorf@x+1,?_floorf+1
 10800  003C5C  C062  F062         	movff	floorf@x+2,?_floorf+2
 10801  003C60  C063  F063         	movff	floorf@x+3,?_floorf+3
 10802  003C64  EFF8  F01E         	goto	l1541
 10803  003C68                     l7482:
 10804                           
 10805                           ; BSR set to: 0
 10806  003C68  BF6F               	btfsc	(floorf@e+1)& (0+255),7,b
 10807  003C6A  EF39  F01E         	goto	u9221
 10808  003C6E  EF3B  F01E         	goto	u9220
 10809  003C72                     u9221:
 10810  003C72  EFAC  F01E         	goto	l7492
 10811  003C76                     u9220:
 10812  003C76                     
 10813                           ; BSR set to: 0
 10814  003C76  C06E  F064         	movff	floorf@e,??_floorf
 10815  003C7A  0EFF               	movlw	255
 10816  003C7C  6F65               	movwf	(??_floorf+1)& (0+255),b
 10817  003C7E  0EFF               	movlw	255
 10818  003C80  6F66               	movwf	(??_floorf+2)& (0+255),b
 10819  003C82  0E7F               	movlw	127
 10820  003C84  6F67               	movwf	(??_floorf+3)& (0+255),b
 10821  003C86  0E00               	movlw	0
 10822  003C88  6F68               	movwf	(??_floorf+4)& (0+255),b
 10823  003C8A                     u9235:
 10824  003C8A  6764               	tstfsz	??_floorf& (0+255),b
 10825  003C8C  EF4A  F01E         	goto	u9236
 10826  003C90  EF52  F01E         	goto	u9237
 10827  003C94                     u9236:
 10828  003C94  3568               	rlcf	(??_floorf+4)& (0+255),w,b
 10829  003C96  3368               	rrcf	(??_floorf+4)& (0+255),f,b
 10830  003C98  3367               	rrcf	(??_floorf+3)& (0+255),f,b
 10831  003C9A  3366               	rrcf	(??_floorf+2)& (0+255),f,b
 10832  003C9C  3365               	rrcf	(??_floorf+1)& (0+255),f,b
 10833  003C9E  2F64               	decfsz	??_floorf& (0+255),f,b
 10834  003CA0  EF45  F01E         	goto	u9235
 10835  003CA4                     u9237:
 10836  003CA4  C065  F06A         	movff	??_floorf+1,floorf@m
 10837  003CA8  C066  F06B         	movff	??_floorf+2,floorf@m+1
 10838  003CAC  C067  F06C         	movff	??_floorf+3,floorf@m+2
 10839  003CB0  C068  F06D         	movff	??_floorf+4,floorf@m+3
 10840  003CB4  0100               	movlb	0	; () banked
 10841  003CB6  516A               	movf	floorf@m& (0+255),w,b
 10842  003CB8  1570               	andwf	floorf@u& (0+255),w,b
 10843  003CBA  6F64               	movwf	??_floorf& (0+255),b
 10844  003CBC  516B               	movf	(floorf@m+1)& (0+255),w,b
 10845  003CBE  1571               	andwf	(floorf@u+1)& (0+255),w,b
 10846  003CC0  6F65               	movwf	(??_floorf+1)& (0+255),b
 10847  003CC2  516C               	movf	(floorf@m+2)& (0+255),w,b
 10848  003CC4  1572               	andwf	(floorf@u+2)& (0+255),w,b
 10849  003CC6  6F66               	movwf	(??_floorf+2)& (0+255),b
 10850  003CC8  516D               	movf	(floorf@m+3)& (0+255),w,b
 10851  003CCA  1573               	andwf	(floorf@u+3)& (0+255),w,b
 10852  003CCC  6F67               	movwf	(??_floorf+3)& (0+255),b
 10853  003CCE  5164               	movf	??_floorf& (0+255),w,b
 10854  003CD0  1165               	iorwf	(??_floorf+1)& (0+255),w,b
 10855  003CD2  1166               	iorwf	(??_floorf+2)& (0+255),w,b
 10856  003CD4  1167               	iorwf	(??_floorf+3)& (0+255),w,b
 10857  003CD6  A4D8               	btfss	status,2,c
 10858  003CD8  EF70  F01E         	goto	u9241
 10859  003CDC  EF72  F01E         	goto	u9240
 10860  003CE0                     u9241:
 10861  003CE0  EF74  F01E         	goto	l7488
 10862  003CE4                     u9240:
 10863  003CE4  EF2A  F01E         	goto	l7480
 10864  003CE8                     l7488:
 10865                           
 10866                           ; BSR set to: 0
 10867  003CE8  C070  F064         	movff	floorf@u,??_floorf
 10868  003CEC  C071  F065         	movff	floorf@u+1,??_floorf+1
 10869  003CF0  C072  F066         	movff	floorf@u+2,??_floorf+2
 10870  003CF4  C073  F067         	movff	floorf@u+3,??_floorf+3
 10871  003CF8  0E20               	movlw	32
 10872  003CFA  EF84  F01E         	goto	u9250
 10873  003CFE                     u9255:
 10874  003CFE  90D8               	bcf	status,0,c
 10875  003D00  3367               	rrcf	(??_floorf+3)& (0+255),f,b
 10876  003D02  3366               	rrcf	(??_floorf+2)& (0+255),f,b
 10877  003D04  3365               	rrcf	(??_floorf+1)& (0+255),f,b
 10878  003D06  3364               	rrcf	??_floorf& (0+255),f,b
 10879  003D08                     u9250:
 10880  003D08  2EE8               	decfsz	wreg,f,c
 10881  003D0A  EF7F  F01E         	goto	u9255
 10882  003D0E  5164               	movf	??_floorf& (0+255),w,b
 10883  003D10  1165               	iorwf	(??_floorf+1)& (0+255),w,b
 10884  003D12  1166               	iorwf	(??_floorf+2)& (0+255),w,b
 10885  003D14  1167               	iorwf	(??_floorf+3)& (0+255),w,b
 10886  003D16  B4D8               	btfsc	status,2,c
 10887  003D18  EF90  F01E         	goto	u9261
 10888  003D1C  EF92  F01E         	goto	u9260
 10889  003D20                     u9261:
 10890  003D20  EF9A  F01E         	goto	l1544
 10891  003D24                     u9260:
 10892  003D24                     
 10893                           ; BSR set to: 0
 10894  003D24  516A               	movf	floorf@m& (0+255),w,b
 10895  003D26  2770               	addwf	floorf@u& (0+255),f,b
 10896  003D28  516B               	movf	(floorf@m+1)& (0+255),w,b
 10897  003D2A  2371               	addwfc	(floorf@u+1)& (0+255),f,b
 10898  003D2C  516C               	movf	(floorf@m+2)& (0+255),w,b
 10899  003D2E  2372               	addwfc	(floorf@u+2)& (0+255),f,b
 10900  003D30  516D               	movf	(floorf@m+3)& (0+255),w,b
 10901  003D32  2373               	addwfc	(floorf@u+3)& (0+255),f,b
 10902  003D34                     l1544:
 10903                           
 10904                           ; BSR set to: 0
 10905  003D34  1D6A               	comf	floorf@m& (0+255),w,b
 10906  003D36  6F64               	movwf	??_floorf& (0+255),b
 10907  003D38  1D6B               	comf	(floorf@m+1)& (0+255),w,b
 10908  003D3A  6F65               	movwf	(??_floorf+1)& (0+255),b
 10909  003D3C  1D6C               	comf	(floorf@m+2)& (0+255),w,b
 10910  003D3E  6F66               	movwf	(??_floorf+2)& (0+255),b
 10911  003D40  1D6D               	comf	(floorf@m+3)& (0+255),w,b
 10912  003D42  6F67               	movwf	(??_floorf+3)& (0+255),b
 10913  003D44  5164               	movf	??_floorf& (0+255),w,b
 10914  003D46  1770               	andwf	floorf@u& (0+255),f,b
 10915  003D48  5165               	movf	(??_floorf+1)& (0+255),w,b
 10916  003D4A  1771               	andwf	(floorf@u+1)& (0+255),f,b
 10917  003D4C  5166               	movf	(??_floorf+2)& (0+255),w,b
 10918  003D4E  1772               	andwf	(floorf@u+2)& (0+255),f,b
 10919  003D50  5167               	movf	(??_floorf+3)& (0+255),w,b
 10920  003D52  1773               	andwf	(floorf@u+3)& (0+255),f,b
 10921  003D54  EFF0  F01E         	goto	l7500
 10922  003D58                     l7492:
 10923                           
 10924                           ; BSR set to: 0
 10925  003D58  C070  F064         	movff	floorf@u,??_floorf
 10926  003D5C  C071  F065         	movff	floorf@u+1,??_floorf+1
 10927  003D60  C072  F066         	movff	floorf@u+2,??_floorf+2
 10928  003D64  C073  F067         	movff	floorf@u+3,??_floorf+3
 10929  003D68  0E20               	movlw	32
 10930  003D6A  EFBC  F01E         	goto	u9270
 10931  003D6E                     u9275:
 10932  003D6E  90D8               	bcf	status,0,c
 10933  003D70  3367               	rrcf	(??_floorf+3)& (0+255),f,b
 10934  003D72  3366               	rrcf	(??_floorf+2)& (0+255),f,b
 10935  003D74  3365               	rrcf	(??_floorf+1)& (0+255),f,b
 10936  003D76  3364               	rrcf	??_floorf& (0+255),f,b
 10937  003D78                     u9270:
 10938  003D78  2EE8               	decfsz	wreg,f,c
 10939  003D7A  EFB7  F01E         	goto	u9275
 10940  003D7E  5164               	movf	??_floorf& (0+255),w,b
 10941  003D80  1165               	iorwf	(??_floorf+1)& (0+255),w,b
 10942  003D82  1166               	iorwf	(??_floorf+2)& (0+255),w,b
 10943  003D84  1167               	iorwf	(??_floorf+3)& (0+255),w,b
 10944  003D86  A4D8               	btfss	status,2,c
 10945  003D88  EFC8  F01E         	goto	u9281
 10946  003D8C  EFCA  F01E         	goto	u9280
 10947  003D90                     u9281:
 10948  003D90  EFD4  F01E         	goto	l7496
 10949  003D94                     u9280:
 10950  003D94                     
 10951                           ; BSR set to: 0
 10952  003D94  0E00               	movlw	0
 10953  003D96  6F70               	movwf	floorf@u& (0+255),b
 10954  003D98  0E00               	movlw	0
 10955  003D9A  6F71               	movwf	(floorf@u+1)& (0+255),b
 10956  003D9C  0E00               	movlw	0
 10957  003D9E  6F72               	movwf	(floorf@u+2)& (0+255),b
 10958  003DA0  0E00               	movlw	0
 10959  003DA2  6F73               	movwf	(floorf@u+3)& (0+255),b
 10960  003DA4  EFF0  F01E         	goto	l7500
 10961  003DA8                     l7496:
 10962                           
 10963                           ; BSR set to: 0
 10964  003DA8  90D8               	bcf	status,0,c
 10965  003DAA  3570               	rlcf	floorf@u& (0+255),w,b
 10966  003DAC  6F64               	movwf	??_floorf& (0+255),b
 10967  003DAE  3571               	rlcf	(floorf@u+1)& (0+255),w,b
 10968  003DB0  6F65               	movwf	(??_floorf+1)& (0+255),b
 10969  003DB2  3572               	rlcf	(floorf@u+2)& (0+255),w,b
 10970  003DB4  6F66               	movwf	(??_floorf+2)& (0+255),b
 10971  003DB6  3573               	rlcf	(floorf@u+3)& (0+255),w,b
 10972  003DB8  6F67               	movwf	(??_floorf+3)& (0+255),b
 10973  003DBA  5164               	movf	??_floorf& (0+255),w,b
 10974  003DBC  1165               	iorwf	(??_floorf+1)& (0+255),w,b
 10975  003DBE  1166               	iorwf	(??_floorf+2)& (0+255),w,b
 10976  003DC0  1167               	iorwf	(??_floorf+3)& (0+255),w,b
 10977  003DC2  B4D8               	btfsc	status,2,c
 10978  003DC4  EFE6  F01E         	goto	u9291
 10979  003DC8  EFE8  F01E         	goto	u9290
 10980  003DCC                     u9291:
 10981  003DCC  EFF0  F01E         	goto	l7500
 10982  003DD0                     u9290:
 10983  003DD0                     
 10984                           ; BSR set to: 0
 10985  003DD0  0E00               	movlw	0
 10986  003DD2  6F70               	movwf	floorf@u& (0+255),b
 10987  003DD4  0E00               	movlw	0
 10988  003DD6  6F71               	movwf	(floorf@u+1)& (0+255),b
 10989  003DD8  0E80               	movlw	128
 10990  003DDA  6F72               	movwf	(floorf@u+2)& (0+255),b
 10991  003DDC  0EBF               	movlw	191
 10992  003DDE  6F73               	movwf	(floorf@u+3)& (0+255),b
 10993  003DE0                     l7500:
 10994                           
 10995                           ; BSR set to: 0
 10996  003DE0  C070  F060         	movff	floorf@u,?_floorf
 10997  003DE4  C071  F061         	movff	floorf@u+1,?_floorf+1
 10998  003DE8  C072  F062         	movff	floorf@u+2,?_floorf+2
 10999  003DEC  C073  F063         	movff	floorf@u+3,?_floorf+3
 11000  003DF0                     l1541:
 11001                           
 11002                           ; BSR set to: 0
 11003  003DF0  0012               	return		;funcret
 11004  003DF2                     __end_of_floorf:
 11005                           	opt callstack 0
 11006                           
 11007 ;; *************** function ___fpclassifyf *****************
 11008 ;; Defined at:
 11009 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
 11010 ;; Parameters:    Size  Location     Type
 11011 ;;  x               4    2[COMRAM] float 
 11012 ;; Auto vars:     Size  Location     Type
 11013 ;;  u               4   12[COMRAM] struct .
 11014 ;;  e               2   10[COMRAM] int 
 11015 ;; Return value:  Size  Location     Type
 11016 ;;                  2    2[COMRAM] int 
 11017 ;; Registers used:
 11018 ;;		wreg, status,2, status,0
 11019 ;; Tracked objects:
 11020 ;;		On entry : 0/0
 11021 ;;		On exit  : 0/0
 11022 ;;		Unchanged: 0/0
 11023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11024 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11025 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11026 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11027 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11028 ;;Total ram usage:       14 bytes
 11029 ;; Hardware stack levels used:    1
 11030 ;; Hardware stack levels required when called:    4
 11031 ;; This function calls:
 11032 ;;		Nothing
 11033 ;; This function is called by:
 11034 ;;		_efgtoa
 11035 ;; This function uses a non-reentrant model
 11036 ;;
 11037                           
 11038                           	psect	text20
 11039  0050B8                     __ptext20:
 11040                           	opt callstack 0
 11041  0050B8                     ___fpclassifyf:
 11042                           	opt callstack 21
 11043  0050B8  C104  F00D         	movff	___fpclassifyf@F463,___fpclassifyf@u
 11044  0050BC  C105  F00E         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
 11045  0050C0  C106  F00F         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
 11046  0050C4  C107  F010         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
 11047  0050C8  C003  F00D         	movff	___fpclassifyf@x,___fpclassifyf@u
 11048  0050CC  C004  F00E         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 11049  0050D0  C005  F00F         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 11050  0050D4  C006  F010         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 11051  0050D8  C00D  F007         	movff	___fpclassifyf@u,??___fpclassifyf
 11052  0050DC  C00E  F008         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11053  0050E0  C00F  F009         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11054  0050E4  C010  F00A         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11055  0050E8  0E18               	movlw	24
 11056  0050EA  EF7C  F028         	goto	u9080
 11057  0050EE                     u9085:
 11058  0050EE  90D8               	bcf	status,0,c
 11059  0050F0  320A               	rrcf	(??___fpclassifyf+3)^0,f,c
 11060  0050F2  3209               	rrcf	(??___fpclassifyf+2)^0,f,c
 11061  0050F4  3208               	rrcf	(??___fpclassifyf+1)^0,f,c
 11062  0050F6  3207               	rrcf	??___fpclassifyf^0,f,c
 11063  0050F8                     u9080:
 11064  0050F8  2EE8               	decfsz	wreg,f,c
 11065  0050FA  EF77  F028         	goto	u9085
 11066  0050FE  5007               	movf	??___fpclassifyf^0,w,c
 11067  005100  6E0B               	movwf	___fpclassifyf@e^0,c
 11068  005102  6A0C               	clrf	(___fpclassifyf@e+1)^0,c
 11069  005104  500B               	movf	___fpclassifyf@e^0,w,c
 11070  005106  100C               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11071  005108  A4D8               	btfss	status,2,c
 11072  00510A  EF89  F028         	goto	u9091
 11073  00510E  EF8B  F028         	goto	u9090
 11074  005112                     u9091:
 11075  005112  EFAB  F028         	goto	l7452
 11076  005116                     u9090:
 11077  005116  90D8               	bcf	status,0,c
 11078  005118  340D               	rlcf	___fpclassifyf@u^0,w,c
 11079  00511A  6E07               	movwf	??___fpclassifyf^0,c
 11080  00511C  340E               	rlcf	(___fpclassifyf@u+1)^0,w,c
 11081  00511E  6E08               	movwf	(??___fpclassifyf+1)^0,c
 11082  005120  340F               	rlcf	(___fpclassifyf@u+2)^0,w,c
 11083  005122  6E09               	movwf	(??___fpclassifyf+2)^0,c
 11084  005124  3410               	rlcf	(___fpclassifyf@u+3)^0,w,c
 11085  005126  6E0A               	movwf	(??___fpclassifyf+3)^0,c
 11086  005128  5007               	movf	??___fpclassifyf^0,w,c
 11087  00512A  1008               	iorwf	(??___fpclassifyf+1)^0,w,c
 11088  00512C  1009               	iorwf	(??___fpclassifyf+2)^0,w,c
 11089  00512E  100A               	iorwf	(??___fpclassifyf+3)^0,w,c
 11090  005130  A4D8               	btfss	status,2,c
 11091  005132  EF9D  F028         	goto	u9101
 11092  005136  EF9F  F028         	goto	u9100
 11093  00513A                     u9101:
 11094  00513A  EFA5  F028         	goto	l7448
 11095  00513E                     u9100:
 11096  00513E  0E00               	movlw	0
 11097  005140  6E04               	movwf	(?___fpclassifyf+1)^0,c
 11098  005142  0E02               	movlw	2
 11099  005144  6E03               	movwf	?___fpclassifyf^0,c
 11100  005146  EFDA  F028         	goto	l1496
 11101  00514A                     l7448:
 11102  00514A  0E00               	movlw	0
 11103  00514C  6E04               	movwf	(?___fpclassifyf+1)^0,c
 11104  00514E  0E03               	movlw	3
 11105  005150  6E03               	movwf	?___fpclassifyf^0,c
 11106  005152  EFDA  F028         	goto	l1496
 11107  005156                     l7452:
 11108  005156  280B               	incf	___fpclassifyf@e^0,w,c
 11109  005158  100C               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11110  00515A  A4D8               	btfss	status,2,c
 11111  00515C  EFB2  F028         	goto	u9111
 11112  005160  EFB4  F028         	goto	u9110
 11113  005164                     u9111:
 11114  005164  EFD6  F028         	goto	l7458
 11115  005168                     u9110:
 11116  005168  C00D  F007         	movff	___fpclassifyf@u,??___fpclassifyf
 11117  00516C  C00E  F008         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11118  005170  C00F  F009         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11119  005174  C010  F00A         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11120  005178  0E09               	movlw	9
 11121  00517A                     u9125:
 11122  00517A  90D8               	bcf	status,0,c
 11123  00517C  3607               	rlcf	??___fpclassifyf^0,f,c
 11124  00517E  3608               	rlcf	(??___fpclassifyf+1)^0,f,c
 11125  005180  3609               	rlcf	(??___fpclassifyf+2)^0,f,c
 11126  005182  360A               	rlcf	(??___fpclassifyf+3)^0,f,c
 11127  005184  2EE8               	decfsz	wreg,f,c
 11128  005186  EFBD  F028         	goto	u9125
 11129  00518A  5007               	movf	??___fpclassifyf^0,w,c
 11130  00518C  1008               	iorwf	(??___fpclassifyf+1)^0,w,c
 11131  00518E  1009               	iorwf	(??___fpclassifyf+2)^0,w,c
 11132  005190  100A               	iorwf	(??___fpclassifyf+3)^0,w,c
 11133  005192  B4D8               	btfsc	status,2,c
 11134  005194  EFCE  F028         	goto	u9131
 11135  005198  EFD1  F028         	goto	u9130
 11136  00519C                     u9131:
 11137  00519C  0E01               	movlw	1
 11138  00519E  EFD2  F028         	goto	u9140
 11139  0051A2                     u9130:
 11140  0051A2  0E00               	movlw	0
 11141  0051A4                     u9140:
 11142  0051A4  6E03               	movwf	?___fpclassifyf^0,c
 11143  0051A6  6A04               	clrf	(?___fpclassifyf+1)^0,c
 11144  0051A8  EFDA  F028         	goto	l1496
 11145  0051AC                     l7458:
 11146  0051AC  0E00               	movlw	0
 11147  0051AE  6E04               	movwf	(?___fpclassifyf+1)^0,c
 11148  0051B0  0E04               	movlw	4
 11149  0051B2  6E03               	movwf	?___fpclassifyf^0,c
 11150  0051B4                     l1496:
 11151  0051B4  0012               	return		;funcret
 11152  0051B6                     __end_of___fpclassifyf:
 11153                           	opt callstack 0
 11154                           
 11155 ;; *************** function ___fltol *****************
 11156 ;; Defined at:
 11157 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 11158 ;; Parameters:    Size  Location     Type
 11159 ;;  f1              4    2[COMRAM] int 
 11160 ;; Auto vars:     Size  Location     Type
 11161 ;;  exp1            1   11[COMRAM] unsigned char 
 11162 ;;  sign1           1   10[COMRAM] unsigned char 
 11163 ;; Return value:  Size  Location     Type
 11164 ;;                  4    2[COMRAM] long 
 11165 ;; Registers used:
 11166 ;;		wreg, status,2, status,0
 11167 ;; Tracked objects:
 11168 ;;		On entry : 0/0
 11169 ;;		On exit  : 0/0
 11170 ;;		Unchanged: 0/0
 11171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11172 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11173 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11174 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11175 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11176 ;;Total ram usage:       10 bytes
 11177 ;; Hardware stack levels used:    1
 11178 ;; Hardware stack levels required when called:    4
 11179 ;; This function calls:
 11180 ;;		Nothing
 11181 ;; This function is called by:
 11182 ;;		_efgtoa
 11183 ;; This function uses a non-reentrant model
 11184 ;;
 11185                           
 11186                           	psect	text21
 11187  004EAE                     __ptext21:
 11188                           	opt callstack 0
 11189  004EAE                     ___fltol:
 11190                           	opt callstack 21
 11191  004EAE  3405               	rlcf	(___fltol@f1+2)^0,w,c
 11192  004EB0  3406               	rlcf	(___fltol@f1+3)^0,w,c
 11193  004EB2  6E0C               	movwf	___fltol@exp1^0,c
 11194  004EB4  500C               	movf	___fltol@exp1^0,w,c
 11195  004EB6  A4D8               	btfss	status,2,c
 11196  004EB8  EF60  F027         	goto	u10131
 11197  004EBC  EF62  F027         	goto	u10130
 11198  004EC0                     u10131:
 11199  004EC0  EF6C  F027         	goto	l8014
 11200  004EC4                     u10130:
 11201  004EC4                     l8010:
 11202  004EC4  0E00               	movlw	0
 11203  004EC6  6E03               	movwf	?___fltol^0,c
 11204  004EC8  0E00               	movlw	0
 11205  004ECA  6E04               	movwf	(?___fltol+1)^0,c
 11206  004ECC  0E00               	movlw	0
 11207  004ECE  6E05               	movwf	(?___fltol+2)^0,c
 11208  004ED0  0E00               	movlw	0
 11209  004ED2  6E06               	movwf	(?___fltol+3)^0,c
 11210  004ED4  EFD9  F027         	goto	l1112
 11211  004ED8                     l8014:
 11212  004ED8  C003  F007         	movff	___fltol@f1,??___fltol
 11213  004EDC  C004  F008         	movff	___fltol@f1+1,??___fltol+1
 11214  004EE0  C005  F009         	movff	___fltol@f1+2,??___fltol+2
 11215  004EE4  C006  F00A         	movff	___fltol@f1+3,??___fltol+3
 11216  004EE8  0E20               	movlw	32
 11217  004EEA  EF7C  F027         	goto	u10140
 11218  004EEE                     u10145:
 11219  004EEE  90D8               	bcf	status,0,c
 11220  004EF0  320A               	rrcf	(??___fltol+3)^0,f,c
 11221  004EF2  3209               	rrcf	(??___fltol+2)^0,f,c
 11222  004EF4  3208               	rrcf	(??___fltol+1)^0,f,c
 11223  004EF6  3207               	rrcf	??___fltol^0,f,c
 11224  004EF8                     u10140:
 11225  004EF8  2EE8               	decfsz	wreg,f,c
 11226  004EFA  EF77  F027         	goto	u10145
 11227  004EFE  5007               	movf	??___fltol^0,w,c
 11228  004F00  6E0B               	movwf	___fltol@sign1^0,c
 11229  004F02  8E05               	bsf	(___fltol@f1+2)^0,7,c
 11230  004F04  0EFF               	movlw	255
 11231  004F06  1603               	andwf	___fltol@f1^0,f,c
 11232  004F08  0EFF               	movlw	255
 11233  004F0A  1604               	andwf	(___fltol@f1+1)^0,f,c
 11234  004F0C  0EFF               	movlw	255
 11235  004F0E  1605               	andwf	(___fltol@f1+2)^0,f,c
 11236  004F10  0E00               	movlw	0
 11237  004F12  1606               	andwf	(___fltol@f1+3)^0,f,c
 11238  004F14  0E96               	movlw	150
 11239  004F16  5E0C               	subwf	___fltol@exp1^0,f,c
 11240  004F18  BE0C               	btfsc	___fltol@exp1^0,7,c
 11241  004F1A  EF93  F027         	goto	u10150
 11242  004F1E  EF91  F027         	goto	u10151
 11243  004F22                     u10151:
 11244  004F22  EFA9  F027         	goto	l8034
 11245  004F26                     u10150:
 11246  004F26  500C               	movf	___fltol@exp1^0,w,c
 11247  004F28  0A80               	xorlw	128
 11248  004F2A  0F97               	addlw	151
 11249  004F2C  B0D8               	btfsc	status,0,c
 11250  004F2E  EF9B  F027         	goto	u10161
 11251  004F32  EF9D  F027         	goto	u10160
 11252  004F36                     u10161:
 11253  004F36  EF9F  F027         	goto	l8030
 11254  004F3A                     u10160:
 11255  004F3A  EF62  F027         	goto	l8010
 11256  004F3E                     l8030:
 11257  004F3E  90D8               	bcf	status,0,c
 11258  004F40  3206               	rrcf	(___fltol@f1+3)^0,f,c
 11259  004F42  3205               	rrcf	(___fltol@f1+2)^0,f,c
 11260  004F44  3204               	rrcf	(___fltol@f1+1)^0,f,c
 11261  004F46  3203               	rrcf	___fltol@f1^0,f,c
 11262  004F48  3E0C               	incfsz	___fltol@exp1^0,f,c
 11263  004F4A  EF9F  F027         	goto	l8030
 11264  004F4E  EFC1  F027         	goto	l8044
 11265  004F52                     l8034:
 11266  004F52  0E1F               	movlw	31
 11267  004F54  640C               	cpfsgt	___fltol@exp1^0,c
 11268  004F56  EFAF  F027         	goto	u10171
 11269  004F5A  EFB1  F027         	goto	u10170
 11270  004F5E                     u10171:
 11271  004F5E  EFB9  F027         	goto	l8042
 11272  004F62                     u10170:
 11273  004F62  EF62  F027         	goto	l8010
 11274  004F66                     l8040:
 11275  004F66  90D8               	bcf	status,0,c
 11276  004F68  3603               	rlcf	___fltol@f1^0,f,c
 11277  004F6A  3604               	rlcf	(___fltol@f1+1)^0,f,c
 11278  004F6C  3605               	rlcf	(___fltol@f1+2)^0,f,c
 11279  004F6E  3606               	rlcf	(___fltol@f1+3)^0,f,c
 11280  004F70  060C               	decf	___fltol@exp1^0,f,c
 11281  004F72                     l8042:
 11282  004F72  500C               	movf	___fltol@exp1^0,w,c
 11283  004F74  A4D8               	btfss	status,2,c
 11284  004F76  EFBF  F027         	goto	u10181
 11285  004F7A  EFC1  F027         	goto	u10180
 11286  004F7E                     u10181:
 11287  004F7E  EFB3  F027         	goto	l8040
 11288  004F82                     u10180:
 11289  004F82                     l8044:
 11290  004F82  500B               	movf	___fltol@sign1^0,w,c
 11291  004F84  B4D8               	btfsc	status,2,c
 11292  004F86  EFC7  F027         	goto	u10191
 11293  004F8A  EFC9  F027         	goto	u10190
 11294  004F8E                     u10191:
 11295  004F8E  EFD1  F027         	goto	l8048
 11296  004F92                     u10190:
 11297  004F92  1E06               	comf	(___fltol@f1+3)^0,f,c
 11298  004F94  1E05               	comf	(___fltol@f1+2)^0,f,c
 11299  004F96  1E04               	comf	(___fltol@f1+1)^0,f,c
 11300  004F98  6C03               	negf	___fltol@f1^0,c
 11301  004F9A  0E00               	movlw	0
 11302  004F9C  2204               	addwfc	(___fltol@f1+1)^0,f,c
 11303  004F9E  2205               	addwfc	(___fltol@f1+2)^0,f,c
 11304  004FA0  2206               	addwfc	(___fltol@f1+3)^0,f,c
 11305  004FA2                     l8048:
 11306  004FA2  C003  F003         	movff	___fltol@f1,?___fltol
 11307  004FA6  C004  F004         	movff	___fltol@f1+1,?___fltol+1
 11308  004FAA  C005  F005         	movff	___fltol@f1+2,?___fltol+2
 11309  004FAE  C006  F006         	movff	___fltol@f1+3,?___fltol+3
 11310  004FB2                     l1112:
 11311  004FB2  0012               	return		;funcret
 11312  004FB4                     __end_of___fltol:
 11313                           	opt callstack 0
 11314                           
 11315 ;; *************** function ___flsub *****************
 11316 ;; Defined at:
 11317 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 11318 ;; Parameters:    Size  Location     Type
 11319 ;;  b               4   57[COMRAM] long 
 11320 ;;  a               4   61[COMRAM] long 
 11321 ;; Auto vars:     Size  Location     Type
 11322 ;;		None
 11323 ;; Return value:  Size  Location     Type
 11324 ;;                  4   57[COMRAM] long 
 11325 ;; Registers used:
 11326 ;;		wreg, status,2, status,0, cstack
 11327 ;; Tracked objects:
 11328 ;;		On entry : 0/0
 11329 ;;		On exit  : 0/0
 11330 ;;		Unchanged: 0/0
 11331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11332 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11335 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11336 ;;Total ram usage:        8 bytes
 11337 ;; Hardware stack levels used:    1
 11338 ;; Hardware stack levels required when called:    5
 11339 ;; This function calls:
 11340 ;;		___fladd
 11341 ;; This function is called by:
 11342 ;;		_main
 11343 ;;		_efgtoa
 11344 ;; This function uses a non-reentrant model
 11345 ;;
 11346                           
 11347                           	psect	text22
 11348  005B78                     __ptext22:
 11349                           	opt callstack 0
 11350  005B78                     ___flsub:
 11351                           	opt callstack 20
 11352  005B78  0E00               	movlw	0
 11353  005B7A  1A3E               	xorwf	___flsub@a^0,f,c
 11354  005B7C  0E00               	movlw	0
 11355  005B7E  1A3F               	xorwf	(___flsub@a+1)^0,f,c
 11356  005B80  0E00               	movlw	0
 11357  005B82  1A40               	xorwf	(___flsub@a+2)^0,f,c
 11358  005B84  0E80               	movlw	128
 11359  005B86  1A41               	xorwf	(___flsub@a+3)^0,f,c
 11360  005B88  C03A  F02A         	movff	___flsub@b,___fladd@b
 11361  005B8C  C03B  F02B         	movff	___flsub@b+1,___fladd@b+1
 11362  005B90  C03C  F02C         	movff	___flsub@b+2,___fladd@b+2
 11363  005B94  C03D  F02D         	movff	___flsub@b+3,___fladd@b+3
 11364  005B98  C03E  F02E         	movff	___flsub@a,___fladd@a
 11365  005B9C  C03F  F02F         	movff	___flsub@a+1,___fladd@a+1
 11366  005BA0  C040  F030         	movff	___flsub@a+2,___fladd@a+2
 11367  005BA4  C041  F031         	movff	___flsub@a+3,___fladd@a+3
 11368  005BA8  EC08  F013         	call	___fladd	;wreg free
 11369  005BAC  C02A  F03A         	movff	?___fladd,?___flsub
 11370  005BB0  C02B  F03B         	movff	?___fladd+1,?___flsub+1
 11371  005BB4  C02C  F03C         	movff	?___fladd+2,?___flsub+2
 11372  005BB8  C02D  F03D         	movff	?___fladd+3,?___flsub+3
 11373  005BBC  0012               	return		;funcret
 11374  005BBE                     __end_of___flsub:
 11375                           	opt callstack 0
 11376                           
 11377 ;; *************** function ___fladd *****************
 11378 ;; Defined at:
 11379 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 11380 ;; Parameters:    Size  Location     Type
 11381 ;;  b               4   41[COMRAM] long 
 11382 ;;  a               4   45[COMRAM] long 
 11383 ;; Auto vars:     Size  Location     Type
 11384 ;;  grs             1   56[COMRAM] unsigned char 
 11385 ;;  bexp            1   55[COMRAM] unsigned char 
 11386 ;;  aexp            1   54[COMRAM] unsigned char 
 11387 ;;  signs           1   53[COMRAM] unsigned char 
 11388 ;; Return value:  Size  Location     Type
 11389 ;;                  4   41[COMRAM] unsigned char 
 11390 ;; Registers used:
 11391 ;;		wreg, status,2, status,0
 11392 ;; Tracked objects:
 11393 ;;		On entry : 0/0
 11394 ;;		On exit  : 0/0
 11395 ;;		Unchanged: 0/0
 11396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11397 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11398 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11399 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11400 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11401 ;;Total ram usage:       16 bytes
 11402 ;; Hardware stack levels used:    1
 11403 ;; Hardware stack levels required when called:    4
 11404 ;; This function calls:
 11405 ;;		Nothing
 11406 ;; This function is called by:
 11407 ;;		_main
 11408 ;;		_efgtoa
 11409 ;;		___flsub
 11410 ;; This function uses a non-reentrant model
 11411 ;;
 11412                           
 11413                           	psect	text23
 11414  002610                     __ptext23:
 11415                           	opt callstack 0
 11416  002610                     ___fladd:
 11417                           	opt callstack 20
 11418  002610  502D               	movf	(___fladd@b+3)^0,w,c
 11419  002612  0B80               	andlw	128
 11420  002614  6E36               	movwf	___fladd@signs^0,c
 11421  002616  502D               	movf	(___fladd@b+3)^0,w,c
 11422  002618  242D               	addwf	(___fladd@b+3)^0,w,c
 11423  00261A  6E38               	movwf	___fladd@bexp^0,c
 11424  00261C  AE2C               	btfss	(___fladd@b+2)^0,7,c
 11425  00261E  EF13  F013         	goto	u8621
 11426  002622  EF15  F013         	goto	u8620
 11427  002626                     u8621:
 11428  002626  EF16  F013         	goto	l7214
 11429  00262A                     u8620:
 11430  00262A  8038               	bsf	___fladd@bexp^0,0,c
 11431  00262C                     l7214:
 11432  00262C  5038               	movf	___fladd@bexp^0,w,c
 11433  00262E  B4D8               	btfsc	status,2,c
 11434  002630  EF1C  F013         	goto	u8631
 11435  002634  EF1E  F013         	goto	u8630
 11436  002638                     u8631:
 11437  002638  EF33  F013         	goto	l7224
 11438  00263C                     u8630:
 11439  00263C  2838               	incf	___fladd@bexp^0,w,c
 11440  00263E  A4D8               	btfss	status,2,c
 11441  002640  EF24  F013         	goto	u8641
 11442  002644  EF26  F013         	goto	u8640
 11443  002648                     u8641:
 11444  002648  EF2E  F013         	goto	l7220
 11445  00264C                     u8640:
 11446  00264C  0E00               	movlw	0
 11447  00264E  6E2A               	movwf	___fladd@b^0,c
 11448  002650  0E00               	movlw	0
 11449  002652  6E2B               	movwf	(___fladd@b+1)^0,c
 11450  002654  0E00               	movlw	0
 11451  002656  6E2C               	movwf	(___fladd@b+2)^0,c
 11452  002658  0E00               	movlw	0
 11453  00265A  6E2D               	movwf	(___fladd@b+3)^0,c
 11454  00265C                     l7220:
 11455  00265C  8E2C               	bsf	(___fladd@b+2)^0,7,c
 11456  00265E  0E00               	movlw	0
 11457  002660  6E2D               	movwf	(___fladd@b+3)^0,c
 11458  002662  EF3B  F013         	goto	l7226
 11459  002666                     l7224:
 11460  002666  0E00               	movlw	0
 11461  002668  6E2A               	movwf	___fladd@b^0,c
 11462  00266A  0E00               	movlw	0
 11463  00266C  6E2B               	movwf	(___fladd@b+1)^0,c
 11464  00266E  0E00               	movlw	0
 11465  002670  6E2C               	movwf	(___fladd@b+2)^0,c
 11466  002672  0E00               	movlw	0
 11467  002674  6E2D               	movwf	(___fladd@b+3)^0,c
 11468  002676                     l7226:
 11469  002676  5031               	movf	(___fladd@a+3)^0,w,c
 11470  002678  0B80               	andlw	128
 11471  00267A  6E37               	movwf	___fladd@aexp^0,c
 11472  00267C  5036               	movf	___fladd@signs^0,w,c
 11473  00267E  1837               	xorwf	___fladd@aexp^0,w,c
 11474  002680  B4D8               	btfsc	status,2,c
 11475  002682  EF45  F013         	goto	u8651
 11476  002686  EF47  F013         	goto	u8650
 11477  00268A                     u8651:
 11478  00268A  EF48  F013         	goto	l7232
 11479  00268E                     u8650:
 11480  00268E  8C36               	bsf	___fladd@signs^0,6,c
 11481  002690                     l7232:
 11482  002690  5031               	movf	(___fladd@a+3)^0,w,c
 11483  002692  2431               	addwf	(___fladd@a+3)^0,w,c
 11484  002694  6E37               	movwf	___fladd@aexp^0,c
 11485  002696  AE30               	btfss	(___fladd@a+2)^0,7,c
 11486  002698  EF50  F013         	goto	u8661
 11487  00269C  EF52  F013         	goto	u8660
 11488  0026A0                     u8661:
 11489  0026A0  EF53  F013         	goto	l7238
 11490  0026A4                     u8660:
 11491  0026A4  8037               	bsf	___fladd@aexp^0,0,c
 11492  0026A6                     l7238:
 11493  0026A6  5037               	movf	___fladd@aexp^0,w,c
 11494  0026A8  B4D8               	btfsc	status,2,c
 11495  0026AA  EF59  F013         	goto	u8671
 11496  0026AE  EF5B  F013         	goto	u8670
 11497  0026B2                     u8671:
 11498  0026B2  EF70  F013         	goto	l7248
 11499  0026B6                     u8670:
 11500  0026B6  2837               	incf	___fladd@aexp^0,w,c
 11501  0026B8  A4D8               	btfss	status,2,c
 11502  0026BA  EF61  F013         	goto	u8681
 11503  0026BE  EF63  F013         	goto	u8680
 11504  0026C2                     u8681:
 11505  0026C2  EF6B  F013         	goto	l7244
 11506  0026C6                     u8680:
 11507  0026C6  0E00               	movlw	0
 11508  0026C8  6E2E               	movwf	___fladd@a^0,c
 11509  0026CA  0E00               	movlw	0
 11510  0026CC  6E2F               	movwf	(___fladd@a+1)^0,c
 11511  0026CE  0E00               	movlw	0
 11512  0026D0  6E30               	movwf	(___fladd@a+2)^0,c
 11513  0026D2  0E00               	movlw	0
 11514  0026D4  6E31               	movwf	(___fladd@a+3)^0,c
 11515  0026D6                     l7244:
 11516  0026D6  8E30               	bsf	(___fladd@a+2)^0,7,c
 11517  0026D8  0E00               	movlw	0
 11518  0026DA  6E31               	movwf	(___fladd@a+3)^0,c
 11519  0026DC  EF78  F013         	goto	l7250
 11520  0026E0                     l7248:
 11521  0026E0  0E00               	movlw	0
 11522  0026E2  6E2E               	movwf	___fladd@a^0,c
 11523  0026E4  0E00               	movlw	0
 11524  0026E6  6E2F               	movwf	(___fladd@a+1)^0,c
 11525  0026E8  0E00               	movlw	0
 11526  0026EA  6E30               	movwf	(___fladd@a+2)^0,c
 11527  0026EC  0E00               	movlw	0
 11528  0026EE  6E31               	movwf	(___fladd@a+3)^0,c
 11529  0026F0                     l7250:
 11530  0026F0  5038               	movf	___fladd@bexp^0,w,c
 11531  0026F2  5C37               	subwf	___fladd@aexp^0,w,c
 11532  0026F4  B0D8               	btfsc	status,0,c
 11533  0026F6  EF7F  F013         	goto	u8691
 11534  0026FA  EF81  F013         	goto	u8690
 11535  0026FE                     u8691:
 11536  0026FE  EFA8  F013         	goto	l7286
 11537  002702                     u8690:
 11538  002702  AC36               	btfss	___fladd@signs^0,6,c
 11539  002704  EF86  F013         	goto	u8701
 11540  002708  EF88  F013         	goto	u8700
 11541  00270C                     u8701:
 11542  00270C  EF8A  F013         	goto	l7256
 11543  002710                     u8700:
 11544  002710  0E80               	movlw	128
 11545  002712  1A36               	xorwf	___fladd@signs^0,f,c
 11546  002714                     l7256:
 11547  002714  C038  F039         	movff	___fladd@bexp,___fladd@grs
 11548  002718  C037  F038         	movff	___fladd@aexp,___fladd@bexp
 11549  00271C  C039  F037         	movff	___fladd@grs,___fladd@aexp
 11550  002720  C02A  F039         	movff	___fladd@b,___fladd@grs
 11551  002724  C02E  F02A         	movff	___fladd@a,___fladd@b
 11552  002728  C039  F02E         	movff	___fladd@grs,___fladd@a
 11553  00272C  C02B  F039         	movff	___fladd@b+1,___fladd@grs
 11554  002730  C02F  F02B         	movff	___fladd@a+1,___fladd@b+1
 11555  002734  C039  F02F         	movff	___fladd@grs,___fladd@a+1
 11556  002738  C02C  F039         	movff	___fladd@b+2,___fladd@grs
 11557  00273C  C030  F02C         	movff	___fladd@a+2,___fladd@b+2
 11558  002740  C039  F030         	movff	___fladd@grs,___fladd@a+2
 11559  002744  C02D  F039         	movff	___fladd@b+3,___fladd@grs
 11560  002748  C031  F02D         	movff	___fladd@a+3,___fladd@b+3
 11561  00274C  C039  F031         	movff	___fladd@grs,___fladd@a+3
 11562  002750                     l7286:
 11563  002750  0E00               	movlw	0
 11564  002752  6E39               	movwf	___fladd@grs^0,c
 11565  002754  5038               	movf	___fladd@bexp^0,w,c
 11566  002756  C037  F032         	movff	___fladd@aexp,??___fladd
 11567  00275A  6A33               	clrf	(??___fladd+1)^0,c
 11568  00275C  5E32               	subwf	??___fladd^0,f,c
 11569  00275E  0E00               	movlw	0
 11570  002760  5A33               	subwfb	(??___fladd+1)^0,f,c
 11571  002762  BE33               	btfsc	(??___fladd+1)^0,7,c
 11572  002764  EFBD  F013         	goto	u8711
 11573  002768  5033               	movf	(??___fladd+1)^0,w,c
 11574  00276A  E109               	bnz	u8710
 11575  00276C  0E1A               	movlw	26
 11576  00276E  5C32               	subwf	??___fladd^0,w,c
 11577  002770  A0D8               	btfss	status,0,c
 11578  002772  EFBD  F013         	goto	u8711
 11579  002776  EFBF  F013         	goto	u8710
 11580  00277A                     u8711:
 11581  00277A  EFF6  F013         	goto	l1344
 11582  00277E                     u8710:
 11583  00277E  502A               	movf	___fladd@b^0,w,c
 11584  002780  102B               	iorwf	(___fladd@b+1)^0,w,c
 11585  002782  102C               	iorwf	(___fladd@b+2)^0,w,c
 11586  002784  102D               	iorwf	(___fladd@b+3)^0,w,c
 11587  002786  A4D8               	btfss	status,2,c
 11588  002788  EFC8  F013         	goto	u8721
 11589  00278C  EFCB  F013         	goto	u8720
 11590  002790                     u8721:
 11591  002790  0E01               	movlw	1
 11592  002792  EFCC  F013         	goto	u8730
 11593  002796                     u8720:
 11594  002796  0E00               	movlw	0
 11595  002798                     u8730:
 11596  002798  6E39               	movwf	___fladd@grs^0,c
 11597  00279A  0E00               	movlw	0
 11598  00279C  6E2A               	movwf	___fladd@b^0,c
 11599  00279E  0E00               	movlw	0
 11600  0027A0  6E2B               	movwf	(___fladd@b+1)^0,c
 11601  0027A2  0E00               	movlw	0
 11602  0027A4  6E2C               	movwf	(___fladd@b+2)^0,c
 11603  0027A6  0E00               	movlw	0
 11604  0027A8  6E2D               	movwf	(___fladd@b+3)^0,c
 11605  0027AA  C037  F038         	movff	___fladd@aexp,___fladd@bexp
 11606  0027AE  EFFF  F013         	goto	l1343
 11607  0027B2                     l1345:
 11608  0027B2  A039               	btfss	___fladd@grs^0,0,c
 11609  0027B4  EFDE  F013         	goto	u8741
 11610  0027B8  EFE0  F013         	goto	u8740
 11611  0027BC                     u8741:
 11612  0027BC  EFE6  F013         	goto	l7298
 11613  0027C0                     u8740:
 11614  0027C0  90D8               	bcf	status,0,c
 11615  0027C2  3039               	rrcf	___fladd@grs^0,w,c
 11616  0027C4  0901               	iorlw	1
 11617  0027C6  6E39               	movwf	___fladd@grs^0,c
 11618  0027C8  EFE8  F013         	goto	l7300
 11619  0027CC                     l7298:
 11620  0027CC  90D8               	bcf	status,0,c
 11621  0027CE  3239               	rrcf	___fladd@grs^0,f,c
 11622  0027D0                     l7300:
 11623  0027D0  A02A               	btfss	___fladd@b^0,0,c
 11624  0027D2  EFED  F013         	goto	u8751
 11625  0027D6  EFEF  F013         	goto	u8750
 11626  0027DA                     u8751:
 11627  0027DA  EFF0  F013         	goto	l7304
 11628  0027DE                     u8750:
 11629  0027DE  8E39               	bsf	___fladd@grs^0,7,c
 11630  0027E0                     l7304:
 11631  0027E0  342D               	rlcf	(___fladd@b+3)^0,w,c
 11632  0027E2  322D               	rrcf	(___fladd@b+3)^0,f,c
 11633  0027E4  322C               	rrcf	(___fladd@b+2)^0,f,c
 11634  0027E6  322B               	rrcf	(___fladd@b+1)^0,f,c
 11635  0027E8  322A               	rrcf	___fladd@b^0,f,c
 11636  0027EA  2A38               	incf	___fladd@bexp^0,f,c
 11637  0027EC                     l1344:
 11638  0027EC  5037               	movf	___fladd@aexp^0,w,c
 11639  0027EE  5C38               	subwf	___fladd@bexp^0,w,c
 11640  0027F0  A0D8               	btfss	status,0,c
 11641  0027F2  EFFD  F013         	goto	u8761
 11642  0027F6  EFFF  F013         	goto	u8760
 11643  0027FA                     u8761:
 11644  0027FA  EFD9  F013         	goto	l1345
 11645  0027FE                     u8760:
 11646  0027FE                     l1343:
 11647  0027FE  BC36               	btfsc	___fladd@signs^0,6,c
 11648  002800  EF04  F014         	goto	u8771
 11649  002804  EF06  F014         	goto	u8770
 11650  002808                     u8771:
 11651  002808  EF46  F014         	goto	l7332
 11652  00280C                     u8770:
 11653  00280C  5038               	movf	___fladd@bexp^0,w,c
 11654  00280E  A4D8               	btfss	status,2,c
 11655  002810  EF0C  F014         	goto	u8781
 11656  002814  EF0E  F014         	goto	u8780
 11657  002818                     u8781:
 11658  002818  EF18  F014         	goto	l7314
 11659  00281C                     u8780:
 11660  00281C  0E00               	movlw	0
 11661  00281E  6E2A               	movwf	?___fladd^0,c
 11662  002820  0E00               	movlw	0
 11663  002822  6E2B               	movwf	(?___fladd+1)^0,c
 11664  002824  0E00               	movlw	0
 11665  002826  6E2C               	movwf	(?___fladd+2)^0,c
 11666  002828  0E00               	movlw	0
 11667  00282A  6E2D               	movwf	(?___fladd+3)^0,c
 11668  00282C  EF67  F015         	goto	l1352
 11669  002830                     l7314:
 11670  002830  502E               	movf	___fladd@a^0,w,c
 11671  002832  262A               	addwf	___fladd@b^0,f,c
 11672  002834  502F               	movf	(___fladd@a+1)^0,w,c
 11673  002836  222B               	addwfc	(___fladd@b+1)^0,f,c
 11674  002838  5030               	movf	(___fladd@a+2)^0,w,c
 11675  00283A  222C               	addwfc	(___fladd@b+2)^0,f,c
 11676  00283C  5031               	movf	(___fladd@a+3)^0,w,c
 11677  00283E  222D               	addwfc	(___fladd@b+3)^0,f,c
 11678  002840  A02D               	btfss	(___fladd@b+3)^0,0,c
 11679  002842  EF25  F014         	goto	u8791
 11680  002846  EF27  F014         	goto	u8790
 11681  00284A                     u8791:
 11682  00284A  EFD3  F014         	goto	l7368
 11683  00284E                     u8790:
 11684  00284E  A039               	btfss	___fladd@grs^0,0,c
 11685  002850  EF2C  F014         	goto	u8801
 11686  002854  EF2E  F014         	goto	u8800
 11687  002858                     u8801:
 11688  002858  EF34  F014         	goto	l7322
 11689  00285C                     u8800:
 11690  00285C  90D8               	bcf	status,0,c
 11691  00285E  3039               	rrcf	___fladd@grs^0,w,c
 11692  002860  0901               	iorlw	1
 11693  002862  6E39               	movwf	___fladd@grs^0,c
 11694  002864  EF36  F014         	goto	l7324
 11695  002868                     l7322:
 11696  002868  90D8               	bcf	status,0,c
 11697  00286A  3239               	rrcf	___fladd@grs^0,f,c
 11698  00286C                     l7324:
 11699  00286C  A02A               	btfss	___fladd@b^0,0,c
 11700  00286E  EF3B  F014         	goto	u8811
 11701  002872  EF3D  F014         	goto	u8810
 11702  002876                     u8811:
 11703  002876  EF3E  F014         	goto	l7328
 11704  00287A                     u8810:
 11705  00287A  8E39               	bsf	___fladd@grs^0,7,c
 11706  00287C                     l7328:
 11707  00287C  342D               	rlcf	(___fladd@b+3)^0,w,c
 11708  00287E  322D               	rrcf	(___fladd@b+3)^0,f,c
 11709  002880  322C               	rrcf	(___fladd@b+2)^0,f,c
 11710  002882  322B               	rrcf	(___fladd@b+1)^0,f,c
 11711  002884  322A               	rrcf	___fladd@b^0,f,c
 11712  002886  2A38               	incf	___fladd@bexp^0,f,c
 11713  002888  EFD3  F014         	goto	l7368
 11714  00288C                     l7332:
 11715  00288C  502E               	movf	___fladd@a^0,w,c
 11716  00288E  5C2A               	subwf	___fladd@b^0,w,c
 11717  002890  502F               	movf	(___fladd@a+1)^0,w,c
 11718  002892  582B               	subwfb	(___fladd@b+1)^0,w,c
 11719  002894  5030               	movf	(___fladd@a+2)^0,w,c
 11720  002896  582C               	subwfb	(___fladd@b+2)^0,w,c
 11721  002898  502D               	movf	(___fladd@b+3)^0,w,c
 11722  00289A  0A80               	xorlw	128
 11723  00289C  6E32               	movwf	??___fladd^0,c
 11724  00289E  5031               	movf	(___fladd@a+3)^0,w,c
 11725  0028A0  0A80               	xorlw	128
 11726  0028A2  5832               	subwfb	??___fladd^0,w,c
 11727  0028A4  B0D8               	btfsc	status,0,c
 11728  0028A6  EF57  F014         	goto	u8821
 11729  0028AA  EF59  F014         	goto	u8820
 11730  0028AE                     u8821:
 11731  0028AE  EF84  F014         	goto	l7342
 11732  0028B2                     u8820:
 11733  0028B2  502A               	movf	___fladd@b^0,w,c
 11734  0028B4  5C2E               	subwf	___fladd@a^0,w,c
 11735  0028B6  6E32               	movwf	??___fladd^0,c
 11736  0028B8  502B               	movf	(___fladd@b+1)^0,w,c
 11737  0028BA  582F               	subwfb	(___fladd@a+1)^0,w,c
 11738  0028BC  6E33               	movwf	(??___fladd+1)^0,c
 11739  0028BE  502C               	movf	(___fladd@b+2)^0,w,c
 11740  0028C0  5830               	subwfb	(___fladd@a+2)^0,w,c
 11741  0028C2  6E34               	movwf	(??___fladd+2)^0,c
 11742  0028C4  502D               	movf	(___fladd@b+3)^0,w,c
 11743  0028C6  5831               	subwfb	(___fladd@a+3)^0,w,c
 11744  0028C8  6E35               	movwf	(??___fladd+3)^0,c
 11745  0028CA  0EFF               	movlw	255
 11746  0028CC  2432               	addwf	??___fladd^0,w,c
 11747  0028CE  6E2A               	movwf	___fladd@b^0,c
 11748  0028D0  0EFF               	movlw	255
 11749  0028D2  2033               	addwfc	(??___fladd+1)^0,w,c
 11750  0028D4  6E2B               	movwf	(___fladd@b+1)^0,c
 11751  0028D6  0EFF               	movlw	255
 11752  0028D8  2034               	addwfc	(??___fladd+2)^0,w,c
 11753  0028DA  6E2C               	movwf	(___fladd@b+2)^0,c
 11754  0028DC  0EFF               	movlw	255
 11755  0028DE  2035               	addwfc	(??___fladd+3)^0,w,c
 11756  0028E0  6E2D               	movwf	(___fladd@b+3)^0,c
 11757  0028E2  0E80               	movlw	128
 11758  0028E4  1A36               	xorwf	___fladd@signs^0,f,c
 11759  0028E6  6C39               	negf	___fladd@grs^0,c
 11760  0028E8  5039               	movf	___fladd@grs^0,w,c
 11761  0028EA  A4D8               	btfss	status,2,c
 11762  0028EC  EF7A  F014         	goto	u8831
 11763  0028F0  EF7C  F014         	goto	u8830
 11764  0028F4                     u8831:
 11765  0028F4  EF8C  F014         	goto	l1360
 11766  0028F8                     u8830:
 11767  0028F8  0E01               	movlw	1
 11768  0028FA  262A               	addwf	___fladd@b^0,f,c
 11769  0028FC  0E00               	movlw	0
 11770  0028FE  222B               	addwfc	(___fladd@b+1)^0,f,c
 11771  002900  222C               	addwfc	(___fladd@b+2)^0,f,c
 11772  002902  222D               	addwfc	(___fladd@b+3)^0,f,c
 11773  002904  EF8C  F014         	goto	l1360
 11774  002908                     l7342:
 11775  002908  502E               	movf	___fladd@a^0,w,c
 11776  00290A  5E2A               	subwf	___fladd@b^0,f,c
 11777  00290C  502F               	movf	(___fladd@a+1)^0,w,c
 11778  00290E  5A2B               	subwfb	(___fladd@b+1)^0,f,c
 11779  002910  5030               	movf	(___fladd@a+2)^0,w,c
 11780  002912  5A2C               	subwfb	(___fladd@b+2)^0,f,c
 11781  002914  5031               	movf	(___fladd@a+3)^0,w,c
 11782  002916  5A2D               	subwfb	(___fladd@b+3)^0,f,c
 11783  002918                     l1360:
 11784  002918  502A               	movf	___fladd@b^0,w,c
 11785  00291A  102B               	iorwf	(___fladd@b+1)^0,w,c
 11786  00291C  102C               	iorwf	(___fladd@b+2)^0,w,c
 11787  00291E  102D               	iorwf	(___fladd@b+3)^0,w,c
 11788  002920  A4D8               	btfss	status,2,c
 11789  002922  EF95  F014         	goto	u8841
 11790  002926  EF97  F014         	goto	u8840
 11791  00292A                     u8841:
 11792  00292A  EFCC  F014         	goto	l7366
 11793  00292E                     u8840:
 11794  00292E  5039               	movf	___fladd@grs^0,w,c
 11795  002930  A4D8               	btfss	status,2,c
 11796  002932  EF9D  F014         	goto	u8851
 11797  002936  EF9F  F014         	goto	u8850
 11798  00293A                     u8851:
 11799  00293A  EFCC  F014         	goto	l7366
 11800  00293E                     u8850:
 11801  00293E  0E00               	movlw	0
 11802  002940  6E2A               	movwf	?___fladd^0,c
 11803  002942  0E00               	movlw	0
 11804  002944  6E2B               	movwf	(?___fladd+1)^0,c
 11805  002946  0E00               	movlw	0
 11806  002948  6E2C               	movwf	(?___fladd+2)^0,c
 11807  00294A  0E00               	movlw	0
 11808  00294C  6E2D               	movwf	(?___fladd+3)^0,c
 11809  00294E  EF67  F015         	goto	l1352
 11810  002952                     l7350:
 11811  002952  90D8               	bcf	status,0,c
 11812  002954  362A               	rlcf	___fladd@b^0,f,c
 11813  002956  362B               	rlcf	(___fladd@b+1)^0,f,c
 11814  002958  362C               	rlcf	(___fladd@b+2)^0,f,c
 11815  00295A  362D               	rlcf	(___fladd@b+3)^0,f,c
 11816  00295C  AE39               	btfss	___fladd@grs^0,7,c
 11817  00295E  EFB3  F014         	goto	u8861
 11818  002962  EFB5  F014         	goto	u8860
 11819  002966                     u8861:
 11820  002966  EFB6  F014         	goto	l7356
 11821  00296A                     u8860:
 11822  00296A  802A               	bsf	___fladd@b^0,0,c
 11823  00296C                     l7356:
 11824  00296C  A039               	btfss	___fladd@grs^0,0,c
 11825  00296E  EFBB  F014         	goto	u8871
 11826  002972  EFBD  F014         	goto	u8870
 11827  002976                     u8871:
 11828  002976  EFC1  F014         	goto	l7360
 11829  00297A                     u8870:
 11830  00297A  80D8               	bsf	status,0,c
 11831  00297C  3639               	rlcf	___fladd@grs^0,f,c
 11832  00297E  EFC3  F014         	goto	l7362
 11833  002982                     l7360:
 11834  002982  90D8               	bcf	status,0,c
 11835  002984  3639               	rlcf	___fladd@grs^0,f,c
 11836  002986                     l7362:
 11837  002986  5038               	movf	___fladd@bexp^0,w,c
 11838  002988  B4D8               	btfsc	status,2,c
 11839  00298A  EFC9  F014         	goto	u8881
 11840  00298E  EFCB  F014         	goto	u8880
 11841  002992                     u8881:
 11842  002992  EFCC  F014         	goto	l7366
 11843  002996                     u8880:
 11844  002996  0638               	decf	___fladd@bexp^0,f,c
 11845  002998                     l7366:
 11846  002998  AE2C               	btfss	(___fladd@b+2)^0,7,c
 11847  00299A  EFD1  F014         	goto	u8891
 11848  00299E  EFD3  F014         	goto	u8890
 11849  0029A2                     u8891:
 11850  0029A2  EFA9  F014         	goto	l7350
 11851  0029A6                     u8890:
 11852  0029A6                     l7368:
 11853  0029A6  0E00               	movlw	0
 11854  0029A8  6E37               	movwf	___fladd@aexp^0,c
 11855  0029AA  AE39               	btfss	___fladd@grs^0,7,c
 11856  0029AC  EFDA  F014         	goto	u8901
 11857  0029B0  EFDC  F014         	goto	u8900
 11858  0029B4                     u8901:
 11859  0029B4  EFF4  F014         	goto	l1369
 11860  0029B8                     u8900:
 11861  0029B8  C039  F032         	movff	___fladd@grs,??___fladd
 11862  0029BC  0E7F               	movlw	127
 11863  0029BE  1632               	andwf	??___fladd^0,f,c
 11864  0029C0  B4D8               	btfsc	status,2,c
 11865  0029C2  EFE5  F014         	goto	u8911
 11866  0029C6  EFE7  F014         	goto	u8910
 11867  0029CA                     u8911:
 11868  0029CA  EFEB  F014         	goto	l1370
 11869  0029CE                     u8910:
 11870  0029CE                     l7374:
 11871  0029CE  0E01               	movlw	1
 11872  0029D0  6E37               	movwf	___fladd@aexp^0,c
 11873  0029D2  EFF4  F014         	goto	l1369
 11874  0029D6                     l1370:
 11875  0029D6  A02A               	btfss	___fladd@b^0,0,c
 11876  0029D8  EFF0  F014         	goto	u8921
 11877  0029DC  EFF2  F014         	goto	u8920
 11878  0029E0                     u8921:
 11879  0029E0  EFF4  F014         	goto	l1369
 11880  0029E4                     u8920:
 11881  0029E4  EFE7  F014         	goto	l7374
 11882  0029E8                     l1369:
 11883  0029E8  5037               	movf	___fladd@aexp^0,w,c
 11884  0029EA  B4D8               	btfsc	status,2,c
 11885  0029EC  EFFA  F014         	goto	u8931
 11886  0029F0  EFFC  F014         	goto	u8930
 11887  0029F4                     u8931:
 11888  0029F4  EF27  F015         	goto	l7386
 11889  0029F8                     u8930:
 11890  0029F8  0E01               	movlw	1
 11891  0029FA  262A               	addwf	___fladd@b^0,f,c
 11892  0029FC  0E00               	movlw	0
 11893  0029FE  222B               	addwfc	(___fladd@b+1)^0,f,c
 11894  002A00  222C               	addwfc	(___fladd@b+2)^0,f,c
 11895  002A02  222D               	addwfc	(___fladd@b+3)^0,f,c
 11896  002A04  A02D               	btfss	(___fladd@b+3)^0,0,c
 11897  002A06  EF07  F015         	goto	u8941
 11898  002A0A  EF09  F015         	goto	u8940
 11899  002A0E                     u8941:
 11900  002A0E  EF27  F015         	goto	l7386
 11901  002A12                     u8940:
 11902  002A12  C02A  F032         	movff	___fladd@b,??___fladd
 11903  002A16  C02B  F033         	movff	___fladd@b+1,??___fladd+1
 11904  002A1A  C02C  F034         	movff	___fladd@b+2,??___fladd+2
 11905  002A1E  C02D  F035         	movff	___fladd@b+3,??___fladd+3
 11906  002A22  3435               	rlcf	(??___fladd+3)^0,w,c
 11907  002A24  3235               	rrcf	(??___fladd+3)^0,f,c
 11908  002A26  3234               	rrcf	(??___fladd+2)^0,f,c
 11909  002A28  3233               	rrcf	(??___fladd+1)^0,f,c
 11910  002A2A  3232               	rrcf	??___fladd^0,f,c
 11911  002A2C  C032  F02A         	movff	??___fladd,___fladd@b
 11912  002A30  C033  F02B         	movff	??___fladd+1,___fladd@b+1
 11913  002A34  C034  F02C         	movff	??___fladd+2,___fladd@b+2
 11914  002A38  C035  F02D         	movff	??___fladd+3,___fladd@b+3
 11915  002A3C  2838               	incf	___fladd@bexp^0,w,c
 11916  002A3E  B4D8               	btfsc	status,2,c
 11917  002A40  EF24  F015         	goto	u8951
 11918  002A44  EF26  F015         	goto	u8950
 11919  002A48                     u8951:
 11920  002A48  EF27  F015         	goto	l7386
 11921  002A4C                     u8950:
 11922  002A4C  2A38               	incf	___fladd@bexp^0,f,c
 11923  002A4E                     l7386:
 11924  002A4E  2838               	incf	___fladd@bexp^0,w,c
 11925  002A50  B4D8               	btfsc	status,2,c
 11926  002A52  EF2D  F015         	goto	u8961
 11927  002A56  EF2F  F015         	goto	u8960
 11928  002A5A                     u8961:
 11929  002A5A  EF37  F015         	goto	l7390
 11930  002A5E                     u8960:
 11931  002A5E  5038               	movf	___fladd@bexp^0,w,c
 11932  002A60  A4D8               	btfss	status,2,c
 11933  002A62  EF35  F015         	goto	u8971
 11934  002A66  EF37  F015         	goto	u8970
 11935  002A6A                     u8971:
 11936  002A6A  EF49  F015         	goto	l7394
 11937  002A6E                     u8970:
 11938  002A6E                     l7390:
 11939  002A6E  0E00               	movlw	0
 11940  002A70  6E2A               	movwf	___fladd@b^0,c
 11941  002A72  0E00               	movlw	0
 11942  002A74  6E2B               	movwf	(___fladd@b+1)^0,c
 11943  002A76  0E00               	movlw	0
 11944  002A78  6E2C               	movwf	(___fladd@b+2)^0,c
 11945  002A7A  0E00               	movlw	0
 11946  002A7C  6E2D               	movwf	(___fladd@b+3)^0,c
 11947  002A7E  5038               	movf	___fladd@bexp^0,w,c
 11948  002A80  A4D8               	btfss	status,2,c
 11949  002A82  EF45  F015         	goto	u8981
 11950  002A86  EF47  F015         	goto	u8980
 11951  002A8A                     u8981:
 11952  002A8A  EF49  F015         	goto	l7394
 11953  002A8E                     u8980:
 11954  002A8E  0E00               	movlw	0
 11955  002A90  6E36               	movwf	___fladd@signs^0,c
 11956  002A92                     l7394:
 11957  002A92  A038               	btfss	___fladd@bexp^0,0,c
 11958  002A94  EF4E  F015         	goto	u8991
 11959  002A98  EF50  F015         	goto	u8990
 11960  002A9C                     u8991:
 11961  002A9C  EF53  F015         	goto	l7398
 11962  002AA0                     u8990:
 11963  002AA0  8E2C               	bsf	(___fladd@b+2)^0,7,c
 11964  002AA2  EF54  F015         	goto	l7400
 11965  002AA6                     l7398:
 11966  002AA6  9E2C               	bcf	(___fladd@b+2)^0,7,c
 11967  002AA8                     l7400:
 11968  002AA8  90D8               	bcf	status,0,c
 11969  002AAA  3038               	rrcf	___fladd@bexp^0,w,c
 11970  002AAC  6E2D               	movwf	(___fladd@b+3)^0,c
 11971  002AAE  AE36               	btfss	___fladd@signs^0,7,c
 11972  002AB0  EF5C  F015         	goto	u9001
 11973  002AB4  EF5E  F015         	goto	u9000
 11974  002AB8                     u9001:
 11975  002AB8  EF5F  F015         	goto	l7406
 11976  002ABC                     u9000:
 11977  002ABC  8E2D               	bsf	(___fladd@b+3)^0,7,c
 11978  002ABE                     l7406:
 11979  002ABE  C02A  F02A         	movff	___fladd@b,?___fladd
 11980  002AC2  C02B  F02B         	movff	___fladd@b+1,?___fladd+1
 11981  002AC6  C02C  F02C         	movff	___fladd@b+2,?___fladd+2
 11982  002ACA  C02D  F02D         	movff	___fladd@b+3,?___fladd+3
 11983  002ACE                     l1352:
 11984  002ACE  0012               	return		;funcret
 11985  002AD0                     __end_of___fladd:
 11986                           	opt callstack 0
 11987                           
 11988 ;; *************** function ___flneg *****************
 11989 ;; Defined at:
 11990 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
 11991 ;; Parameters:    Size  Location     Type
 11992 ;;  f1              4    2[COMRAM] unsigned char 
 11993 ;; Auto vars:     Size  Location     Type
 11994 ;;		None
 11995 ;; Return value:  Size  Location     Type
 11996 ;;                  4    2[COMRAM] unsigned char 
 11997 ;; Registers used:
 11998 ;;		wreg, status,2, status,0
 11999 ;; Tracked objects:
 12000 ;;		On entry : 0/0
 12001 ;;		On exit  : 0/0
 12002 ;;		Unchanged: 0/0
 12003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12004 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12007 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12008 ;;Total ram usage:        4 bytes
 12009 ;; Hardware stack levels used:    1
 12010 ;; Hardware stack levels required when called:    4
 12011 ;; This function calls:
 12012 ;;		Nothing
 12013 ;; This function is called by:
 12014 ;;		_efgtoa
 12015 ;; This function uses a non-reentrant model
 12016 ;;
 12017                           
 12018                           	psect	text24
 12019  005DB0                     __ptext24:
 12020                           	opt callstack 0
 12021  005DB0                     ___flneg:
 12022                           	opt callstack 21
 12023  005DB0  5003               	movf	___flneg@f1^0,w,c
 12024  005DB2  1004               	iorwf	(___flneg@f1+1)^0,w,c
 12025  005DB4  1005               	iorwf	(___flneg@f1+2)^0,w,c
 12026  005DB6  1006               	iorwf	(___flneg@f1+3)^0,w,c
 12027  005DB8  B4D8               	btfsc	status,2,c
 12028  005DBA  EFE1  F02E         	goto	u10121
 12029  005DBE  EFE3  F02E         	goto	u10120
 12030  005DC2                     u10121:
 12031  005DC2  EFEB  F02E         	goto	l8004
 12032  005DC6                     u10120:
 12033  005DC6  0E00               	movlw	0
 12034  005DC8  1A03               	xorwf	___flneg@f1^0,f,c
 12035  005DCA  0E00               	movlw	0
 12036  005DCC  1A04               	xorwf	(___flneg@f1+1)^0,f,c
 12037  005DCE  0E00               	movlw	0
 12038  005DD0  1A05               	xorwf	(___flneg@f1+2)^0,f,c
 12039  005DD2  0E80               	movlw	128
 12040  005DD4  1A06               	xorwf	(___flneg@f1+3)^0,f,c
 12041  005DD6                     l8004:
 12042  005DD6  C003  F003         	movff	___flneg@f1,?___flneg
 12043  005DDA  C004  F004         	movff	___flneg@f1+1,?___flneg+1
 12044  005DDE  C005  F005         	movff	___flneg@f1+2,?___flneg+2
 12045  005DE2  C006  F006         	movff	___flneg@f1+3,?___flneg+3
 12046  005DE6  0012               	return		;funcret
 12047  005DE8                     __end_of___flneg:
 12048                           	opt callstack 0
 12049                           
 12050 ;; *************** function ___flmul *****************
 12051 ;; Defined at:
 12052 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 12053 ;; Parameters:    Size  Location     Type
 12054 ;;  b               4   16[COMRAM] unsigned char 
 12055 ;;  a               4   20[COMRAM] unsigned char 
 12056 ;; Auto vars:     Size  Location     Type
 12057 ;;  prod            4   35[COMRAM] struct .
 12058 ;;  grs             4   30[COMRAM] unsigned long 
 12059 ;;  temp            2   39[COMRAM] struct .
 12060 ;;  bexp            1   34[COMRAM] unsigned char 
 12061 ;;  aexp            1   29[COMRAM] unsigned char 
 12062 ;;  sign            1   28[COMRAM] unsigned char 
 12063 ;; Return value:  Size  Location     Type
 12064 ;;                  4   16[COMRAM] unsigned char 
 12065 ;; Registers used:
 12066 ;;		wreg, status,2, status,0, prodl, prodh
 12067 ;; Tracked objects:
 12068 ;;		On entry : 0/0
 12069 ;;		On exit  : 0/0
 12070 ;;		Unchanged: 0/0
 12071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12072 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12073 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12074 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12075 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12076 ;;Total ram usage:       25 bytes
 12077 ;; Hardware stack levels used:    1
 12078 ;; Hardware stack levels required when called:    4
 12079 ;; This function calls:
 12080 ;;		Nothing
 12081 ;; This function is called by:
 12082 ;;		_main
 12083 ;;		_efgtoa
 12084 ;; This function uses a non-reentrant model
 12085 ;;
 12086                           
 12087                           	psect	text25
 12088  002AD0                     __ptext25:
 12089                           	opt callstack 0
 12090  002AD0                     ___flmul:
 12091                           	opt callstack 21
 12092  002AD0  5014               	movf	(___flmul@b+3)^0,w,c
 12093  002AD2  0B80               	andlw	128
 12094  002AD4  6E1D               	movwf	___flmul@sign^0,c
 12095  002AD6  5014               	movf	(___flmul@b+3)^0,w,c
 12096  002AD8  2414               	addwf	(___flmul@b+3)^0,w,c
 12097  002ADA  6E23               	movwf	___flmul@bexp^0,c
 12098  002ADC  AE13               	btfss	(___flmul@b+2)^0,7,c
 12099  002ADE  EF73  F015         	goto	u9731
 12100  002AE2  EF75  F015         	goto	u9730
 12101  002AE6                     u9731:
 12102  002AE6  EF76  F015         	goto	l7752
 12103  002AEA                     u9730:
 12104  002AEA  8023               	bsf	___flmul@bexp^0,0,c
 12105  002AEC                     l7752:
 12106  002AEC  5023               	movf	___flmul@bexp^0,w,c
 12107  002AEE  B4D8               	btfsc	status,2,c
 12108  002AF0  EF7C  F015         	goto	u9741
 12109  002AF4  EF7E  F015         	goto	u9740
 12110  002AF8                     u9741:
 12111  002AF8  EF91  F015         	goto	l7760
 12112  002AFC                     u9740:
 12113  002AFC  2823               	incf	___flmul@bexp^0,w,c
 12114  002AFE  A4D8               	btfss	status,2,c
 12115  002B00  EF84  F015         	goto	u9751
 12116  002B04  EF86  F015         	goto	u9750
 12117  002B08                     u9751:
 12118  002B08  EF8E  F015         	goto	l7758
 12119  002B0C                     u9750:
 12120  002B0C  0E00               	movlw	0
 12121  002B0E  6E11               	movwf	___flmul@b^0,c
 12122  002B10  0E00               	movlw	0
 12123  002B12  6E12               	movwf	(___flmul@b+1)^0,c
 12124  002B14  0E00               	movlw	0
 12125  002B16  6E13               	movwf	(___flmul@b+2)^0,c
 12126  002B18  0E00               	movlw	0
 12127  002B1A  6E14               	movwf	(___flmul@b+3)^0,c
 12128  002B1C                     l7758:
 12129  002B1C  8E13               	bsf	(___flmul@b+2)^0,7,c
 12130  002B1E  EF99  F015         	goto	l7762
 12131  002B22                     l7760:
 12132  002B22  0E00               	movlw	0
 12133  002B24  6E11               	movwf	___flmul@b^0,c
 12134  002B26  0E00               	movlw	0
 12135  002B28  6E12               	movwf	(___flmul@b+1)^0,c
 12136  002B2A  0E00               	movlw	0
 12137  002B2C  6E13               	movwf	(___flmul@b+2)^0,c
 12138  002B2E  0E00               	movlw	0
 12139  002B30  6E14               	movwf	(___flmul@b+3)^0,c
 12140  002B32                     l7762:
 12141  002B32  5018               	movf	(___flmul@a+3)^0,w,c
 12142  002B34  0B80               	andlw	128
 12143  002B36  1A1D               	xorwf	___flmul@sign^0,f,c
 12144  002B38  5018               	movf	(___flmul@a+3)^0,w,c
 12145  002B3A  2418               	addwf	(___flmul@a+3)^0,w,c
 12146  002B3C  6E1E               	movwf	___flmul@aexp^0,c
 12147  002B3E  AE17               	btfss	(___flmul@a+2)^0,7,c
 12148  002B40  EFA4  F015         	goto	u9761
 12149  002B44  EFA6  F015         	goto	u9760
 12150  002B48                     u9761:
 12151  002B48  EFA7  F015         	goto	l7770
 12152  002B4C                     u9760:
 12153  002B4C  801E               	bsf	___flmul@aexp^0,0,c
 12154  002B4E                     l7770:
 12155  002B4E  501E               	movf	___flmul@aexp^0,w,c
 12156  002B50  B4D8               	btfsc	status,2,c
 12157  002B52  EFAD  F015         	goto	u9771
 12158  002B56  EFAF  F015         	goto	u9770
 12159  002B5A                     u9771:
 12160  002B5A  EFC2  F015         	goto	l7778
 12161  002B5E                     u9770:
 12162  002B5E  281E               	incf	___flmul@aexp^0,w,c
 12163  002B60  A4D8               	btfss	status,2,c
 12164  002B62  EFB5  F015         	goto	u9781
 12165  002B66  EFB7  F015         	goto	u9780
 12166  002B6A                     u9781:
 12167  002B6A  EFBF  F015         	goto	l7776
 12168  002B6E                     u9780:
 12169  002B6E  0E00               	movlw	0
 12170  002B70  6E15               	movwf	___flmul@a^0,c
 12171  002B72  0E00               	movlw	0
 12172  002B74  6E16               	movwf	(___flmul@a+1)^0,c
 12173  002B76  0E00               	movlw	0
 12174  002B78  6E17               	movwf	(___flmul@a+2)^0,c
 12175  002B7A  0E00               	movlw	0
 12176  002B7C  6E18               	movwf	(___flmul@a+3)^0,c
 12177  002B7E                     l7776:
 12178  002B7E  8E17               	bsf	(___flmul@a+2)^0,7,c
 12179  002B80  EFCA  F015         	goto	l1429
 12180  002B84                     l7778:
 12181  002B84  0E00               	movlw	0
 12182  002B86  6E15               	movwf	___flmul@a^0,c
 12183  002B88  0E00               	movlw	0
 12184  002B8A  6E16               	movwf	(___flmul@a+1)^0,c
 12185  002B8C  0E00               	movlw	0
 12186  002B8E  6E17               	movwf	(___flmul@a+2)^0,c
 12187  002B90  0E00               	movlw	0
 12188  002B92  6E18               	movwf	(___flmul@a+3)^0,c
 12189  002B94                     l1429:
 12190  002B94  501E               	movf	___flmul@aexp^0,w,c
 12191  002B96  B4D8               	btfsc	status,2,c
 12192  002B98  EFD0  F015         	goto	u9791
 12193  002B9C  EFD2  F015         	goto	u9790
 12194  002BA0                     u9791:
 12195  002BA0  EFDA  F015         	goto	l7782
 12196  002BA4                     u9790:
 12197  002BA4  5023               	movf	___flmul@bexp^0,w,c
 12198  002BA6  A4D8               	btfss	status,2,c
 12199  002BA8  EFD8  F015         	goto	u9801
 12200  002BAC  EFDA  F015         	goto	u9800
 12201  002BB0                     u9801:
 12202  002BB0  EFE4  F015         	goto	l7786
 12203  002BB4                     u9800:
 12204  002BB4                     l7782:
 12205  002BB4  0E00               	movlw	0
 12206  002BB6  6E11               	movwf	?___flmul^0,c
 12207  002BB8  0E00               	movlw	0
 12208  002BBA  6E12               	movwf	(?___flmul+1)^0,c
 12209  002BBC  0E00               	movlw	0
 12210  002BBE  6E13               	movwf	(?___flmul+2)^0,c
 12211  002BC0  0E00               	movlw	0
 12212  002BC2  6E14               	movwf	(?___flmul+3)^0,c
 12213  002BC4  EF7C  F017         	goto	l1433
 12214  002BC8                     l7786:
 12215  002BC8  5017               	movf	(___flmul@a+2)^0,w,c
 12216  002BCA  0211               	mulwf	___flmul@b^0,c
 12217  002BCC  CFF3 F028          	movff	prodl,___flmul@temp
 12218  002BD0  CFF4 F029          	movff	prodh,___flmul@temp+1
 12219  002BD4  5028               	movf	___flmul@temp^0,w,c
 12220  002BD6  6E1F               	movwf	___flmul@grs^0,c
 12221  002BD8  6A20               	clrf	(___flmul@grs+1)^0,c
 12222  002BDA  6A21               	clrf	(___flmul@grs+2)^0,c
 12223  002BDC  6A22               	clrf	(___flmul@grs+3)^0,c
 12224  002BDE  5029               	movf	(___flmul@temp+1)^0,w,c
 12225  002BE0  6E24               	movwf	___flmul@prod^0,c
 12226  002BE2  6A25               	clrf	(___flmul@prod+1)^0,c
 12227  002BE4  6A26               	clrf	(___flmul@prod+2)^0,c
 12228  002BE6  6A27               	clrf	(___flmul@prod+3)^0,c
 12229  002BE8  5016               	movf	(___flmul@a+1)^0,w,c
 12230  002BEA  0212               	mulwf	(___flmul@b+1)^0,c
 12231  002BEC  CFF3 F028          	movff	prodl,___flmul@temp
 12232  002BF0  CFF4 F029          	movff	prodh,___flmul@temp+1
 12233  002BF4  5028               	movf	___flmul@temp^0,w,c
 12234  002BF6  261F               	addwf	___flmul@grs^0,f,c
 12235  002BF8  0E00               	movlw	0
 12236  002BFA  2220               	addwfc	(___flmul@grs+1)^0,f,c
 12237  002BFC  2221               	addwfc	(___flmul@grs+2)^0,f,c
 12238  002BFE  2222               	addwfc	(___flmul@grs+3)^0,f,c
 12239  002C00  5029               	movf	(___flmul@temp+1)^0,w,c
 12240  002C02  2624               	addwf	___flmul@prod^0,f,c
 12241  002C04  0E00               	movlw	0
 12242  002C06  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12243  002C08  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12244  002C0A  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12245  002C0C  5015               	movf	___flmul@a^0,w,c
 12246  002C0E  0213               	mulwf	(___flmul@b+2)^0,c
 12247  002C10  CFF3 F028          	movff	prodl,___flmul@temp
 12248  002C14  CFF4 F029          	movff	prodh,___flmul@temp+1
 12249  002C18  5028               	movf	___flmul@temp^0,w,c
 12250  002C1A  261F               	addwf	___flmul@grs^0,f,c
 12251  002C1C  0E00               	movlw	0
 12252  002C1E  2220               	addwfc	(___flmul@grs+1)^0,f,c
 12253  002C20  2221               	addwfc	(___flmul@grs+2)^0,f,c
 12254  002C22  2222               	addwfc	(___flmul@grs+3)^0,f,c
 12255  002C24  5029               	movf	(___flmul@temp+1)^0,w,c
 12256  002C26  2624               	addwf	___flmul@prod^0,f,c
 12257  002C28  0E00               	movlw	0
 12258  002C2A  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12259  002C2C  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12260  002C2E  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12261  002C30  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
 12262  002C34  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
 12263  002C38  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
 12264  002C3C  6A1F               	clrf	___flmul@grs^0,c
 12265  002C3E  5015               	movf	___flmul@a^0,w,c
 12266  002C40  0212               	mulwf	(___flmul@b+1)^0,c
 12267  002C42  CFF3 F028          	movff	prodl,___flmul@temp
 12268  002C46  CFF4 F029          	movff	prodh,___flmul@temp+1
 12269  002C4A  5028               	movf	___flmul@temp^0,w,c
 12270  002C4C  261F               	addwf	___flmul@grs^0,f,c
 12271  002C4E  5029               	movf	(___flmul@temp+1)^0,w,c
 12272  002C50  2220               	addwfc	(___flmul@grs+1)^0,f,c
 12273  002C52  0E00               	movlw	0
 12274  002C54  2221               	addwfc	(___flmul@grs+2)^0,f,c
 12275  002C56  0E00               	movlw	0
 12276  002C58  2222               	addwfc	(___flmul@grs+3)^0,f,c
 12277  002C5A  5016               	movf	(___flmul@a+1)^0,w,c
 12278  002C5C  0211               	mulwf	___flmul@b^0,c
 12279  002C5E  CFF3 F028          	movff	prodl,___flmul@temp
 12280  002C62  CFF4 F029          	movff	prodh,___flmul@temp+1
 12281  002C66  5028               	movf	___flmul@temp^0,w,c
 12282  002C68  261F               	addwf	___flmul@grs^0,f,c
 12283  002C6A  5029               	movf	(___flmul@temp+1)^0,w,c
 12284  002C6C  2220               	addwfc	(___flmul@grs+1)^0,f,c
 12285  002C6E  0E00               	movlw	0
 12286  002C70  2221               	addwfc	(___flmul@grs+2)^0,f,c
 12287  002C72  0E00               	movlw	0
 12288  002C74  2222               	addwfc	(___flmul@grs+3)^0,f,c
 12289  002C76  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
 12290  002C7A  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
 12291  002C7E  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
 12292  002C82  6A1F               	clrf	___flmul@grs^0,c
 12293  002C84  5015               	movf	___flmul@a^0,w,c
 12294  002C86  0211               	mulwf	___flmul@b^0,c
 12295  002C88  CFF3 F028          	movff	prodl,___flmul@temp
 12296  002C8C  CFF4 F029          	movff	prodh,___flmul@temp+1
 12297  002C90  5028               	movf	___flmul@temp^0,w,c
 12298  002C92  261F               	addwf	___flmul@grs^0,f,c
 12299  002C94  5029               	movf	(___flmul@temp+1)^0,w,c
 12300  002C96  2220               	addwfc	(___flmul@grs+1)^0,f,c
 12301  002C98  0E00               	movlw	0
 12302  002C9A  2221               	addwfc	(___flmul@grs+2)^0,f,c
 12303  002C9C  0E00               	movlw	0
 12304  002C9E  2222               	addwfc	(___flmul@grs+3)^0,f,c
 12305  002CA0  5017               	movf	(___flmul@a+2)^0,w,c
 12306  002CA2  0212               	mulwf	(___flmul@b+1)^0,c
 12307  002CA4  CFF3 F028          	movff	prodl,___flmul@temp
 12308  002CA8  CFF4 F029          	movff	prodh,___flmul@temp+1
 12309  002CAC  5028               	movf	___flmul@temp^0,w,c
 12310  002CAE  2624               	addwf	___flmul@prod^0,f,c
 12311  002CB0  5029               	movf	(___flmul@temp+1)^0,w,c
 12312  002CB2  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12313  002CB4  0E00               	movlw	0
 12314  002CB6  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12315  002CB8  0E00               	movlw	0
 12316  002CBA  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12317  002CBC  5016               	movf	(___flmul@a+1)^0,w,c
 12318  002CBE  0213               	mulwf	(___flmul@b+2)^0,c
 12319  002CC0  CFF3 F028          	movff	prodl,___flmul@temp
 12320  002CC4  CFF4 F029          	movff	prodh,___flmul@temp+1
 12321  002CC8  5028               	movf	___flmul@temp^0,w,c
 12322  002CCA  2624               	addwf	___flmul@prod^0,f,c
 12323  002CCC  5029               	movf	(___flmul@temp+1)^0,w,c
 12324  002CCE  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12325  002CD0  0E00               	movlw	0
 12326  002CD2  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12327  002CD4  0E00               	movlw	0
 12328  002CD6  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12329  002CD8  5017               	movf	(___flmul@a+2)^0,w,c
 12330  002CDA  0213               	mulwf	(___flmul@b+2)^0,c
 12331  002CDC  CFF3 F028          	movff	prodl,___flmul@temp
 12332  002CE0  CFF4 F029          	movff	prodh,___flmul@temp+1
 12333  002CE4  5028               	movf	___flmul@temp^0,w,c
 12334  002CE6  6E19               	movwf	??___flmul^0,c
 12335  002CE8  5029               	movf	(___flmul@temp+1)^0,w,c
 12336  002CEA  6E1A               	movwf	(??___flmul+1)^0,c
 12337  002CEC  6A1B               	clrf	(??___flmul+2)^0,c
 12338  002CEE  6A1C               	clrf	(??___flmul+3)^0,c
 12339  002CF0  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 12340  002CF4  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 12341  002CF8  C019  F01A         	movff	??___flmul,??___flmul+1
 12342  002CFC  6A19               	clrf	??___flmul^0,c
 12343  002CFE  5019               	movf	??___flmul^0,w,c
 12344  002D00  2624               	addwf	___flmul@prod^0,f,c
 12345  002D02  501A               	movf	(??___flmul+1)^0,w,c
 12346  002D04  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12347  002D06  501B               	movf	(??___flmul+2)^0,w,c
 12348  002D08  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12349  002D0A  501C               	movf	(??___flmul+3)^0,w,c
 12350  002D0C  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12351  002D0E  C01F  F019         	movff	___flmul@grs,??___flmul
 12352  002D12  C020  F01A         	movff	___flmul@grs+1,??___flmul+1
 12353  002D16  C021  F01B         	movff	___flmul@grs+2,??___flmul+2
 12354  002D1A  C022  F01C         	movff	___flmul@grs+3,??___flmul+3
 12355  002D1E  0E19               	movlw	25
 12356  002D20  EF97  F016         	goto	u9810
 12357  002D24                     u9815:
 12358  002D24  90D8               	bcf	status,0,c
 12359  002D26  321C               	rrcf	(??___flmul+3)^0,f,c
 12360  002D28  321B               	rrcf	(??___flmul+2)^0,f,c
 12361  002D2A  321A               	rrcf	(??___flmul+1)^0,f,c
 12362  002D2C  3219               	rrcf	??___flmul^0,f,c
 12363  002D2E                     u9810:
 12364  002D2E  2EE8               	decfsz	wreg,f,c
 12365  002D30  EF92  F016         	goto	u9815
 12366  002D34  5019               	movf	??___flmul^0,w,c
 12367  002D36  2624               	addwf	___flmul@prod^0,f,c
 12368  002D38  501A               	movf	(??___flmul+1)^0,w,c
 12369  002D3A  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12370  002D3C  501B               	movf	(??___flmul+2)^0,w,c
 12371  002D3E  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12372  002D40  501C               	movf	(??___flmul+3)^0,w,c
 12373  002D42  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12374  002D44  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
 12375  002D48  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
 12376  002D4C  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
 12377  002D50  6A1F               	clrf	___flmul@grs^0,c
 12378  002D52  501E               	movf	___flmul@aexp^0,w,c
 12379  002D54  C023  F019         	movff	___flmul@bexp,??___flmul
 12380  002D58  6A1A               	clrf	(??___flmul+1)^0,c
 12381  002D5A  2619               	addwf	??___flmul^0,f,c
 12382  002D5C  0E00               	movlw	0
 12383  002D5E  221A               	addwfc	(??___flmul+1)^0,f,c
 12384  002D60  0E82               	movlw	130
 12385  002D62  2419               	addwf	??___flmul^0,w,c
 12386  002D64  6E28               	movwf	___flmul@temp^0,c
 12387  002D66  0EFF               	movlw	255
 12388  002D68  201A               	addwfc	(??___flmul+1)^0,w,c
 12389  002D6A  6E29               	movwf	(___flmul@temp+1)^0,c
 12390  002D6C  EFCD  F016         	goto	l7834
 12391  002D70                     l7828:
 12392  002D70  90D8               	bcf	status,0,c
 12393  002D72  3624               	rlcf	___flmul@prod^0,f,c
 12394  002D74  3625               	rlcf	(___flmul@prod+1)^0,f,c
 12395  002D76  3626               	rlcf	(___flmul@prod+2)^0,f,c
 12396  002D78  3627               	rlcf	(___flmul@prod+3)^0,f,c
 12397  002D7A  AE22               	btfss	(___flmul@grs+3)^0,7,c
 12398  002D7C  EFC2  F016         	goto	u9821
 12399  002D80  EFC4  F016         	goto	u9820
 12400  002D84                     u9821:
 12401  002D84  EFC5  F016         	goto	l1436
 12402  002D88                     u9820:
 12403  002D88  8024               	bsf	___flmul@prod^0,0,c
 12404  002D8A                     l1436:
 12405  002D8A  90D8               	bcf	status,0,c
 12406  002D8C  361F               	rlcf	___flmul@grs^0,f,c
 12407  002D8E  3620               	rlcf	(___flmul@grs+1)^0,f,c
 12408  002D90  3621               	rlcf	(___flmul@grs+2)^0,f,c
 12409  002D92  3622               	rlcf	(___flmul@grs+3)^0,f,c
 12410  002D94  0628               	decf	___flmul@temp^0,f,c
 12411  002D96  A0D8               	btfss	status,0,c
 12412  002D98  0629               	decf	(___flmul@temp+1)^0,f,c
 12413  002D9A                     l7834:
 12414  002D9A  AE26               	btfss	(___flmul@prod+2)^0,7,c
 12415  002D9C  EFD2  F016         	goto	u9831
 12416  002DA0  EFD4  F016         	goto	u9830
 12417  002DA4                     u9831:
 12418  002DA4  EFB8  F016         	goto	l7828
 12419  002DA8                     u9830:
 12420  002DA8  0E00               	movlw	0
 12421  002DAA  6E1E               	movwf	___flmul@aexp^0,c
 12422  002DAC  AE22               	btfss	(___flmul@grs+3)^0,7,c
 12423  002DAE  EFDB  F016         	goto	u9841
 12424  002DB2  EFDD  F016         	goto	u9840
 12425  002DB6                     u9841:
 12426  002DB6  EF01  F017         	goto	l1438
 12427  002DBA                     u9840:
 12428  002DBA  0EFF               	movlw	255
 12429  002DBC  141F               	andwf	___flmul@grs^0,w,c
 12430  002DBE  6E19               	movwf	??___flmul^0,c
 12431  002DC0  0EFF               	movlw	255
 12432  002DC2  1420               	andwf	(___flmul@grs+1)^0,w,c
 12433  002DC4  6E1A               	movwf	(??___flmul+1)^0,c
 12434  002DC6  0EFF               	movlw	255
 12435  002DC8  1421               	andwf	(___flmul@grs+2)^0,w,c
 12436  002DCA  6E1B               	movwf	(??___flmul+2)^0,c
 12437  002DCC  0E7F               	movlw	127
 12438  002DCE  1422               	andwf	(___flmul@grs+3)^0,w,c
 12439  002DD0  6E1C               	movwf	(??___flmul+3)^0,c
 12440  002DD2  5019               	movf	??___flmul^0,w,c
 12441  002DD4  101A               	iorwf	(??___flmul+1)^0,w,c
 12442  002DD6  101B               	iorwf	(??___flmul+2)^0,w,c
 12443  002DD8  101C               	iorwf	(??___flmul+3)^0,w,c
 12444  002DDA  B4D8               	btfsc	status,2,c
 12445  002DDC  EFF2  F016         	goto	u9851
 12446  002DE0  EFF4  F016         	goto	u9850
 12447  002DE4                     u9851:
 12448  002DE4  EFF8  F016         	goto	l1439
 12449  002DE8                     u9850:
 12450  002DE8                     l7842:
 12451  002DE8  0E01               	movlw	1
 12452  002DEA  6E1E               	movwf	___flmul@aexp^0,c
 12453  002DEC  EF01  F017         	goto	l1438
 12454  002DF0                     l1439:
 12455  002DF0  A024               	btfss	___flmul@prod^0,0,c
 12456  002DF2  EFFD  F016         	goto	u9861
 12457  002DF6  EFFF  F016         	goto	u9860
 12458  002DFA                     u9861:
 12459  002DFA  EF01  F017         	goto	l1438
 12460  002DFE                     u9860:
 12461  002DFE  EFF4  F016         	goto	l7842
 12462  002E02                     l1438:
 12463  002E02  501E               	movf	___flmul@aexp^0,w,c
 12464  002E04  B4D8               	btfsc	status,2,c
 12465  002E06  EF07  F017         	goto	u9871
 12466  002E0A  EF09  F017         	goto	u9870
 12467  002E0E                     u9871:
 12468  002E0E  EF2D  F017         	goto	l7854
 12469  002E12                     u9870:
 12470  002E12  0E01               	movlw	1
 12471  002E14  2624               	addwf	___flmul@prod^0,f,c
 12472  002E16  0E00               	movlw	0
 12473  002E18  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12474  002E1A  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12475  002E1C  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12476  002E1E  A027               	btfss	(___flmul@prod+3)^0,0,c
 12477  002E20  EF14  F017         	goto	u9881
 12478  002E24  EF16  F017         	goto	u9880
 12479  002E28                     u9881:
 12480  002E28  EF2D  F017         	goto	l7854
 12481  002E2C                     u9880:
 12482  002E2C  C024  F019         	movff	___flmul@prod,??___flmul
 12483  002E30  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 12484  002E34  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 12485  002E38  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 12486  002E3C  341C               	rlcf	(??___flmul+3)^0,w,c
 12487  002E3E  321C               	rrcf	(??___flmul+3)^0,f,c
 12488  002E40  321B               	rrcf	(??___flmul+2)^0,f,c
 12489  002E42  321A               	rrcf	(??___flmul+1)^0,f,c
 12490  002E44  3219               	rrcf	??___flmul^0,f,c
 12491  002E46  C019  F024         	movff	??___flmul,___flmul@prod
 12492  002E4A  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 12493  002E4E  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 12494  002E52  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 12495  002E56  4A28               	infsnz	___flmul@temp^0,f,c
 12496  002E58  2A29               	incf	(___flmul@temp+1)^0,f,c
 12497  002E5A                     l7854:
 12498  002E5A  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 12499  002E5C  EF38  F017         	goto	u9891
 12500  002E60  5029               	movf	(___flmul@temp+1)^0,w,c
 12501  002E62  E108               	bnz	u9890
 12502  002E64  2828               	incf	___flmul@temp^0,w,c
 12503  002E66  A0D8               	btfss	status,0,c
 12504  002E68  EF38  F017         	goto	u9891
 12505  002E6C  EF3A  F017         	goto	u9890
 12506  002E70                     u9891:
 12507  002E70  EF44  F017         	goto	l7858
 12508  002E74                     u9890:
 12509  002E74  0E00               	movlw	0
 12510  002E76  6E24               	movwf	___flmul@prod^0,c
 12511  002E78  0E00               	movlw	0
 12512  002E7A  6E25               	movwf	(___flmul@prod+1)^0,c
 12513  002E7C  0E80               	movlw	128
 12514  002E7E  6E26               	movwf	(___flmul@prod+2)^0,c
 12515  002E80  0E7F               	movlw	127
 12516  002E82  6E27               	movwf	(___flmul@prod+3)^0,c
 12517  002E84  EF72  F017         	goto	l7870
 12518  002E88                     l7858:
 12519  002E88  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 12520  002E8A  EF51  F017         	goto	u9900
 12521  002E8E  5029               	movf	(___flmul@temp+1)^0,w,c
 12522  002E90  E106               	bnz	u9901
 12523  002E92  0428               	decf	___flmul@temp^0,w,c
 12524  002E94  B0D8               	btfsc	status,0,c
 12525  002E96  EF4F  F017         	goto	u9901
 12526  002E9A  EF51  F017         	goto	u9900
 12527  002E9E                     u9901:
 12528  002E9E  EF5D  F017         	goto	l1446
 12529  002EA2                     u9900:
 12530  002EA2  0E00               	movlw	0
 12531  002EA4  6E24               	movwf	___flmul@prod^0,c
 12532  002EA6  0E00               	movlw	0
 12533  002EA8  6E25               	movwf	(___flmul@prod+1)^0,c
 12534  002EAA  0E00               	movlw	0
 12535  002EAC  6E26               	movwf	(___flmul@prod+2)^0,c
 12536  002EAE  0E00               	movlw	0
 12537  002EB0  6E27               	movwf	(___flmul@prod+3)^0,c
 12538  002EB2  0E00               	movlw	0
 12539  002EB4  6E1D               	movwf	___flmul@sign^0,c
 12540  002EB6  EF72  F017         	goto	l7870
 12541  002EBA                     l1446:
 12542  002EBA  C028  F023         	movff	___flmul@temp,___flmul@bexp
 12543  002EBE  0EFF               	movlw	255
 12544  002EC0  1624               	andwf	___flmul@prod^0,f,c
 12545  002EC2  0EFF               	movlw	255
 12546  002EC4  1625               	andwf	(___flmul@prod+1)^0,f,c
 12547  002EC6  0E7F               	movlw	127
 12548  002EC8  1626               	andwf	(___flmul@prod+2)^0,f,c
 12549  002ECA  0E00               	movlw	0
 12550  002ECC  1627               	andwf	(___flmul@prod+3)^0,f,c
 12551  002ECE  A023               	btfss	___flmul@bexp^0,0,c
 12552  002ED0  EF6C  F017         	goto	u9911
 12553  002ED4  EF6E  F017         	goto	u9910
 12554  002ED8                     u9911:
 12555  002ED8  EF6F  F017         	goto	l7868
 12556  002EDC                     u9910:
 12557  002EDC  8E26               	bsf	(___flmul@prod+2)^0,7,c
 12558  002EDE                     l7868:
 12559  002EDE  90D8               	bcf	status,0,c
 12560  002EE0  3023               	rrcf	___flmul@bexp^0,w,c
 12561  002EE2  6E27               	movwf	(___flmul@prod+3)^0,c
 12562  002EE4                     l7870:
 12563  002EE4  501D               	movf	___flmul@sign^0,w,c
 12564  002EE6  1227               	iorwf	(___flmul@prod+3)^0,f,c
 12565  002EE8  C024  F011         	movff	___flmul@prod,?___flmul
 12566  002EEC  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 12567  002EF0  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 12568  002EF4  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 12569  002EF8                     l1433:
 12570  002EF8  0012               	return		;funcret
 12571  002EFA                     __end_of___flmul:
 12572                           	opt callstack 0
 12573                           
 12574 ;; *************** function ___flge *****************
 12575 ;; Defined at:
 12576 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 12577 ;; Parameters:    Size  Location     Type
 12578 ;;  ff1             4   41[COMRAM] unsigned char 
 12579 ;;  ff2             4   45[COMRAM] unsigned char 
 12580 ;; Auto vars:     Size  Location     Type
 12581 ;;		None
 12582 ;; Return value:  Size  Location     Type
 12583 ;;		None               void
 12584 ;; Registers used:
 12585 ;;		wreg, status,2, status,0
 12586 ;; Tracked objects:
 12587 ;;		On entry : 0/0
 12588 ;;		On exit  : 0/0
 12589 ;;		Unchanged: 0/0
 12590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12591 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12593 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12594 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12595 ;;Total ram usage:       12 bytes
 12596 ;; Hardware stack levels used:    1
 12597 ;; Hardware stack levels required when called:    4
 12598 ;; This function calls:
 12599 ;;		Nothing
 12600 ;; This function is called by:
 12601 ;;		_main
 12602 ;;		_efgtoa
 12603 ;; This function uses a non-reentrant model
 12604 ;;
 12605                           
 12606                           	psect	text26
 12607  004FB4                     __ptext26:
 12608                           	opt callstack 0
 12609  004FB4                     ___flge:
 12610                           	opt callstack 21
 12611  004FB4  0E00               	movlw	0
 12612  004FB6  142A               	andwf	___flge@ff1^0,w,c
 12613  004FB8  6E32               	movwf	??___flge^0,c
 12614  004FBA  0E00               	movlw	0
 12615  004FBC  142B               	andwf	(___flge@ff1+1)^0,w,c
 12616  004FBE  6E33               	movwf	(??___flge+1)^0,c
 12617  004FC0  0E80               	movlw	128
 12618  004FC2  142C               	andwf	(___flge@ff1+2)^0,w,c
 12619  004FC4  6E34               	movwf	(??___flge+2)^0,c
 12620  004FC6  0E7F               	movlw	127
 12621  004FC8  142D               	andwf	(___flge@ff1+3)^0,w,c
 12622  004FCA  6E35               	movwf	(??___flge+3)^0,c
 12623  004FCC  5032               	movf	??___flge^0,w,c
 12624  004FCE  1033               	iorwf	(??___flge+1)^0,w,c
 12625  004FD0  1034               	iorwf	(??___flge+2)^0,w,c
 12626  004FD2  1035               	iorwf	(??___flge+3)^0,w,c
 12627  004FD4  A4D8               	btfss	status,2,c
 12628  004FD6  EFEF  F027         	goto	u10071
 12629  004FDA  EFF1  F027         	goto	u10070
 12630  004FDE                     u10071:
 12631  004FDE  EFF9  F027         	goto	l7982
 12632  004FE2                     u10070:
 12633  004FE2  0E00               	movlw	0
 12634  004FE4  6E2A               	movwf	___flge@ff1^0,c
 12635  004FE6  0E00               	movlw	0
 12636  004FE8  6E2B               	movwf	(___flge@ff1+1)^0,c
 12637  004FEA  0E00               	movlw	0
 12638  004FEC  6E2C               	movwf	(___flge@ff1+2)^0,c
 12639  004FEE  0E00               	movlw	0
 12640  004FF0  6E2D               	movwf	(___flge@ff1+3)^0,c
 12641  004FF2                     l7982:
 12642  004FF2  0E00               	movlw	0
 12643  004FF4  142E               	andwf	___flge@ff2^0,w,c
 12644  004FF6  6E32               	movwf	??___flge^0,c
 12645  004FF8  0E00               	movlw	0
 12646  004FFA  142F               	andwf	(___flge@ff2+1)^0,w,c
 12647  004FFC  6E33               	movwf	(??___flge+1)^0,c
 12648  004FFE  0E80               	movlw	128
 12649  005000  1430               	andwf	(___flge@ff2+2)^0,w,c
 12650  005002  6E34               	movwf	(??___flge+2)^0,c
 12651  005004  0E7F               	movlw	127
 12652  005006  1431               	andwf	(___flge@ff2+3)^0,w,c
 12653  005008  6E35               	movwf	(??___flge+3)^0,c
 12654  00500A  5032               	movf	??___flge^0,w,c
 12655  00500C  1033               	iorwf	(??___flge+1)^0,w,c
 12656  00500E  1034               	iorwf	(??___flge+2)^0,w,c
 12657  005010  1035               	iorwf	(??___flge+3)^0,w,c
 12658  005012  A4D8               	btfss	status,2,c
 12659  005014  EF0E  F028         	goto	u10081
 12660  005018  EF10  F028         	goto	u10080
 12661  00501C                     u10081:
 12662  00501C  EF18  F028         	goto	l7986
 12663  005020                     u10080:
 12664  005020  0E00               	movlw	0
 12665  005022  6E2E               	movwf	___flge@ff2^0,c
 12666  005024  0E00               	movlw	0
 12667  005026  6E2F               	movwf	(___flge@ff2+1)^0,c
 12668  005028  0E00               	movlw	0
 12669  00502A  6E30               	movwf	(___flge@ff2+2)^0,c
 12670  00502C  0E00               	movlw	0
 12671  00502E  6E31               	movwf	(___flge@ff2+3)^0,c
 12672  005030                     l7986:
 12673  005030  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 12674  005032  EF1D  F028         	goto	u10091
 12675  005036  EF1F  F028         	goto	u10090
 12676  00503A                     u10091:
 12677  00503A  EF28  F028         	goto	l7990
 12678  00503E                     u10090:
 12679  00503E  6C2A               	negf	___flge@ff1^0,c
 12680  005040  1E2B               	comf	(___flge@ff1+1)^0,f,c
 12681  005042  B0D8               	btfsc	status,0,c
 12682  005044  2A2B               	incf	(___flge@ff1+1)^0,f,c
 12683  005046  1E2C               	comf	(___flge@ff1+2)^0,f,c
 12684  005048  B0D8               	btfsc	status,0,c
 12685  00504A  2A2C               	incf	(___flge@ff1+2)^0,f,c
 12686  00504C  0E80               	movlw	128
 12687  00504E  562D               	subfwb	(___flge@ff1+3)^0,f,c
 12688  005050                     l7990:
 12689  005050  AE31               	btfss	(___flge@ff2+3)^0,7,c
 12690  005052  EF2D  F028         	goto	u10101
 12691  005056  EF2F  F028         	goto	u10100
 12692  00505A                     u10101:
 12693  00505A  EF38  F028         	goto	l1080
 12694  00505E                     u10100:
 12695  00505E  6C2E               	negf	___flge@ff2^0,c
 12696  005060  1E2F               	comf	(___flge@ff2+1)^0,f,c
 12697  005062  B0D8               	btfsc	status,0,c
 12698  005064  2A2F               	incf	(___flge@ff2+1)^0,f,c
 12699  005066  1E30               	comf	(___flge@ff2+2)^0,f,c
 12700  005068  B0D8               	btfsc	status,0,c
 12701  00506A  2A30               	incf	(___flge@ff2+2)^0,f,c
 12702  00506C  0E80               	movlw	128
 12703  00506E  5631               	subfwb	(___flge@ff2+3)^0,f,c
 12704  005070                     l1080:
 12705  005070  0E00               	movlw	0
 12706  005072  1A2A               	xorwf	___flge@ff1^0,f,c
 12707  005074  0E00               	movlw	0
 12708  005076  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 12709  005078  0E00               	movlw	0
 12710  00507A  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 12711  00507C  0E80               	movlw	128
 12712  00507E  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 12713  005080  0E00               	movlw	0
 12714  005082  1A2E               	xorwf	___flge@ff2^0,f,c
 12715  005084  0E00               	movlw	0
 12716  005086  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 12717  005088  0E00               	movlw	0
 12718  00508A  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 12719  00508C  0E80               	movlw	128
 12720  00508E  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 12721  005090  502E               	movf	___flge@ff2^0,w,c
 12722  005092  5C2A               	subwf	___flge@ff1^0,w,c
 12723  005094  502F               	movf	(___flge@ff2+1)^0,w,c
 12724  005096  582B               	subwfb	(___flge@ff1+1)^0,w,c
 12725  005098  5030               	movf	(___flge@ff2+2)^0,w,c
 12726  00509A  582C               	subwfb	(___flge@ff1+2)^0,w,c
 12727  00509C  5031               	movf	(___flge@ff2+3)^0,w,c
 12728  00509E  582D               	subwfb	(___flge@ff1+3)^0,w,c
 12729  0050A0  B0D8               	btfsc	status,0,c
 12730  0050A2  EF55  F028         	goto	u10111
 12731  0050A6  EF57  F028         	goto	u10110
 12732  0050AA                     u10111:
 12733  0050AA  EF5A  F028         	goto	l7996
 12734  0050AE                     u10110:
 12735  0050AE  90D8               	bcf	status,0,c
 12736  0050B0  EF5B  F028         	goto	l1085
 12737  0050B4                     l7996:
 12738  0050B4  80D8               	bsf	status,0,c
 12739  0050B6                     l1085:
 12740  0050B6  0012               	return		;funcret
 12741  0050B8                     __end_of___flge:
 12742                           	opt callstack 0
 12743                           
 12744 ;; *************** function ___fleq *****************
 12745 ;; Defined at:
 12746 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
 12747 ;; Parameters:    Size  Location     Type
 12748 ;;  ff1             4    2[COMRAM] unsigned char 
 12749 ;;  ff2             4    6[COMRAM] unsigned char 
 12750 ;; Auto vars:     Size  Location     Type
 12751 ;;		None
 12752 ;; Return value:  Size  Location     Type
 12753 ;;		None               void
 12754 ;; Registers used:
 12755 ;;		wreg, status,2, status,0
 12756 ;; Tracked objects:
 12757 ;;		On entry : 0/0
 12758 ;;		On exit  : 0/0
 12759 ;;		Unchanged: 0/0
 12760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12761 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12763 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12764 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12765 ;;Total ram usage:       12 bytes
 12766 ;; Hardware stack levels used:    1
 12767 ;; Hardware stack levels required when called:    4
 12768 ;; This function calls:
 12769 ;;		Nothing
 12770 ;; This function is called by:
 12771 ;;		_efgtoa
 12772 ;; This function uses a non-reentrant model
 12773 ;;
 12774                           
 12775                           	psect	text27
 12776  00572A                     __ptext27:
 12777                           	opt callstack 0
 12778  00572A                     ___fleq:
 12779                           	opt callstack 21
 12780  00572A  0E00               	movlw	0
 12781  00572C  1403               	andwf	___fleq@ff1^0,w,c
 12782  00572E  6E0B               	movwf	??___fleq^0,c
 12783  005730  0E00               	movlw	0
 12784  005732  1404               	andwf	(___fleq@ff1+1)^0,w,c
 12785  005734  6E0C               	movwf	(??___fleq+1)^0,c
 12786  005736  0E80               	movlw	128
 12787  005738  1405               	andwf	(___fleq@ff1+2)^0,w,c
 12788  00573A  6E0D               	movwf	(??___fleq+2)^0,c
 12789  00573C  0E7F               	movlw	127
 12790  00573E  1406               	andwf	(___fleq@ff1+3)^0,w,c
 12791  005740  6E0E               	movwf	(??___fleq+3)^0,c
 12792  005742  500B               	movf	??___fleq^0,w,c
 12793  005744  100C               	iorwf	(??___fleq+1)^0,w,c
 12794  005746  100D               	iorwf	(??___fleq+2)^0,w,c
 12795  005748  100E               	iorwf	(??___fleq+3)^0,w,c
 12796  00574A  A4D8               	btfss	status,2,c
 12797  00574C  EFAA  F02B         	goto	u10041
 12798  005750  EFAC  F02B         	goto	u10040
 12799  005754                     u10041:
 12800  005754  EFB4  F02B         	goto	l7966
 12801  005758                     u10040:
 12802  005758  0E00               	movlw	0
 12803  00575A  6E03               	movwf	___fleq@ff1^0,c
 12804  00575C  0E00               	movlw	0
 12805  00575E  6E04               	movwf	(___fleq@ff1+1)^0,c
 12806  005760  0E00               	movlw	0
 12807  005762  6E05               	movwf	(___fleq@ff1+2)^0,c
 12808  005764  0E00               	movlw	0
 12809  005766  6E06               	movwf	(___fleq@ff1+3)^0,c
 12810  005768                     l7966:
 12811  005768  0E00               	movlw	0
 12812  00576A  1407               	andwf	___fleq@ff2^0,w,c
 12813  00576C  6E0B               	movwf	??___fleq^0,c
 12814  00576E  0E00               	movlw	0
 12815  005770  1408               	andwf	(___fleq@ff2+1)^0,w,c
 12816  005772  6E0C               	movwf	(??___fleq+1)^0,c
 12817  005774  0E80               	movlw	128
 12818  005776  1409               	andwf	(___fleq@ff2+2)^0,w,c
 12819  005778  6E0D               	movwf	(??___fleq+2)^0,c
 12820  00577A  0E7F               	movlw	127
 12821  00577C  140A               	andwf	(___fleq@ff2+3)^0,w,c
 12822  00577E  6E0E               	movwf	(??___fleq+3)^0,c
 12823  005780  500B               	movf	??___fleq^0,w,c
 12824  005782  100C               	iorwf	(??___fleq+1)^0,w,c
 12825  005784  100D               	iorwf	(??___fleq+2)^0,w,c
 12826  005786  100E               	iorwf	(??___fleq+3)^0,w,c
 12827  005788  A4D8               	btfss	status,2,c
 12828  00578A  EFC9  F02B         	goto	u10051
 12829  00578E  EFCB  F02B         	goto	u10050
 12830  005792                     u10051:
 12831  005792  EFD3  F02B         	goto	l7970
 12832  005796                     u10050:
 12833  005796  0E00               	movlw	0
 12834  005798  6E07               	movwf	___fleq@ff2^0,c
 12835  00579A  0E00               	movlw	0
 12836  00579C  6E08               	movwf	(___fleq@ff2+1)^0,c
 12837  00579E  0E00               	movlw	0
 12838  0057A0  6E09               	movwf	(___fleq@ff2+2)^0,c
 12839  0057A2  0E00               	movlw	0
 12840  0057A4  6E0A               	movwf	(___fleq@ff2+3)^0,c
 12841  0057A6                     l7970:
 12842  0057A6  5007               	movf	___fleq@ff2^0,w,c
 12843  0057A8  1803               	xorwf	___fleq@ff1^0,w,c
 12844  0057AA  E10F               	bnz	u10060
 12845  0057AC  5008               	movf	(___fleq@ff2+1)^0,w,c
 12846  0057AE  1804               	xorwf	(___fleq@ff1+1)^0,w,c
 12847  0057B0  E10C               	bnz	u10060
 12848  0057B2  5009               	movf	(___fleq@ff2+2)^0,w,c
 12849  0057B4  1805               	xorwf	(___fleq@ff1+2)^0,w,c
 12850  0057B6  E109               	bnz	u10060
 12851  0057B8  500A               	movf	(___fleq@ff2+3)^0,w,c
 12852  0057BA  1806               	xorwf	(___fleq@ff1+3)^0,w,c
 12853  0057BC  B4D8               	btfsc	status,2,c
 12854  0057BE  EFE3  F02B         	goto	u10061
 12855  0057C2  EFE5  F02B         	goto	u10060
 12856  0057C6                     u10061:
 12857  0057C6  EFE8  F02B         	goto	l7974
 12858  0057CA                     u10060:
 12859  0057CA  90D8               	bcf	status,0,c
 12860  0057CC  EFE9  F02B         	goto	l1074
 12861  0057D0                     l7974:
 12862  0057D0  80D8               	bsf	status,0,c
 12863  0057D2                     l1074:
 12864  0057D2  0012               	return		;funcret
 12865  0057D4                     __end_of___fleq:
 12866                           	opt callstack 0
 12867                           
 12868 ;; *************** function ___fldiv *****************
 12869 ;; Defined at:
 12870 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 12871 ;; Parameters:    Size  Location     Type
 12872 ;;  b               4   65[COMRAM] unsigned char 
 12873 ;;  a               4   69[COMRAM] unsigned char 
 12874 ;; Auto vars:     Size  Location     Type
 12875 ;;  grs             4   84[COMRAM] unsigned long 
 12876 ;;  rem             4   77[COMRAM] unsigned long 
 12877 ;;  new_exp         2   82[COMRAM] short 
 12878 ;;  aexp            1   89[COMRAM] unsigned char 
 12879 ;;  bexp            1   88[COMRAM] unsigned char 
 12880 ;;  sign            1   81[COMRAM] unsigned char 
 12881 ;; Return value:  Size  Location     Type
 12882 ;;                  4   65[COMRAM] unsigned char 
 12883 ;; Registers used:
 12884 ;;		wreg, status,2, status,0
 12885 ;; Tracked objects:
 12886 ;;		On entry : 0/0
 12887 ;;		On exit  : 0/0
 12888 ;;		Unchanged: 0/0
 12889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12890 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12891 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12892 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12893 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12894 ;;Total ram usage:       25 bytes
 12895 ;; Hardware stack levels used:    1
 12896 ;; Hardware stack levels required when called:    4
 12897 ;; This function calls:
 12898 ;;		Nothing
 12899 ;; This function is called by:
 12900 ;;		_main
 12901 ;;		_efgtoa
 12902 ;; This function uses a non-reentrant model
 12903 ;;
 12904                           
 12905                           	psect	text28
 12906  002EFA                     __ptext28:
 12907                           	opt callstack 0
 12908  002EFA                     ___fldiv:
 12909                           	opt callstack 21
 12910  002EFA  5045               	movf	(___fldiv@b+3)^0,w,c
 12911  002EFC  0B80               	andlw	128
 12912  002EFE  6E52               	movwf	___fldiv@sign^0,c
 12913  002F00  5045               	movf	(___fldiv@b+3)^0,w,c
 12914  002F02  2445               	addwf	(___fldiv@b+3)^0,w,c
 12915  002F04  6E59               	movwf	___fldiv@bexp^0,c
 12916  002F06  AE44               	btfss	(___fldiv@b+2)^0,7,c
 12917  002F08  EF88  F017         	goto	u9501
 12918  002F0C  EF8A  F017         	goto	u9500
 12919  002F10                     u9501:
 12920  002F10  EF8B  F017         	goto	l7614
 12921  002F14                     u9500:
 12922  002F14  8059               	bsf	___fldiv@bexp^0,0,c
 12923  002F16                     l7614:
 12924  002F16  5059               	movf	___fldiv@bexp^0,w,c
 12925  002F18  B4D8               	btfsc	status,2,c
 12926  002F1A  EF91  F017         	goto	u9511
 12927  002F1E  EF93  F017         	goto	u9510
 12928  002F22                     u9511:
 12929  002F22  EFA8  F017         	goto	l7624
 12930  002F26                     u9510:
 12931  002F26  2859               	incf	___fldiv@bexp^0,w,c
 12932  002F28  A4D8               	btfss	status,2,c
 12933  002F2A  EF99  F017         	goto	u9521
 12934  002F2E  EF9B  F017         	goto	u9520
 12935  002F32                     u9521:
 12936  002F32  EFA3  F017         	goto	l7620
 12937  002F36                     u9520:
 12938  002F36  0E00               	movlw	0
 12939  002F38  6E42               	movwf	___fldiv@b^0,c
 12940  002F3A  0E00               	movlw	0
 12941  002F3C  6E43               	movwf	(___fldiv@b+1)^0,c
 12942  002F3E  0E00               	movlw	0
 12943  002F40  6E44               	movwf	(___fldiv@b+2)^0,c
 12944  002F42  0E00               	movlw	0
 12945  002F44  6E45               	movwf	(___fldiv@b+3)^0,c
 12946  002F46                     l7620:
 12947  002F46  8E44               	bsf	(___fldiv@b+2)^0,7,c
 12948  002F48  0E00               	movlw	0
 12949  002F4A  6E45               	movwf	(___fldiv@b+3)^0,c
 12950  002F4C  EFB0  F017         	goto	l7626
 12951  002F50                     l7624:
 12952  002F50  0E00               	movlw	0
 12953  002F52  6E42               	movwf	___fldiv@b^0,c
 12954  002F54  0E00               	movlw	0
 12955  002F56  6E43               	movwf	(___fldiv@b+1)^0,c
 12956  002F58  0E00               	movlw	0
 12957  002F5A  6E44               	movwf	(___fldiv@b+2)^0,c
 12958  002F5C  0E00               	movlw	0
 12959  002F5E  6E45               	movwf	(___fldiv@b+3)^0,c
 12960  002F60                     l7626:
 12961  002F60  5049               	movf	(___fldiv@a+3)^0,w,c
 12962  002F62  0B80               	andlw	128
 12963  002F64  1A52               	xorwf	___fldiv@sign^0,f,c
 12964  002F66  5049               	movf	(___fldiv@a+3)^0,w,c
 12965  002F68  2449               	addwf	(___fldiv@a+3)^0,w,c
 12966  002F6A  6E5A               	movwf	___fldiv@aexp^0,c
 12967  002F6C  AE48               	btfss	(___fldiv@a+2)^0,7,c
 12968  002F6E  EFBB  F017         	goto	u9531
 12969  002F72  EFBD  F017         	goto	u9530
 12970  002F76                     u9531:
 12971  002F76  EFBE  F017         	goto	l7634
 12972  002F7A                     u9530:
 12973  002F7A  805A               	bsf	___fldiv@aexp^0,0,c
 12974  002F7C                     l7634:
 12975  002F7C  505A               	movf	___fldiv@aexp^0,w,c
 12976  002F7E  B4D8               	btfsc	status,2,c
 12977  002F80  EFC4  F017         	goto	u9541
 12978  002F84  EFC6  F017         	goto	u9540
 12979  002F88                     u9541:
 12980  002F88  EFDB  F017         	goto	l7644
 12981  002F8C                     u9540:
 12982  002F8C  285A               	incf	___fldiv@aexp^0,w,c
 12983  002F8E  A4D8               	btfss	status,2,c
 12984  002F90  EFCC  F017         	goto	u9551
 12985  002F94  EFCE  F017         	goto	u9550
 12986  002F98                     u9551:
 12987  002F98  EFD6  F017         	goto	l7640
 12988  002F9C                     u9550:
 12989  002F9C  0E00               	movlw	0
 12990  002F9E  6E46               	movwf	___fldiv@a^0,c
 12991  002FA0  0E00               	movlw	0
 12992  002FA2  6E47               	movwf	(___fldiv@a+1)^0,c
 12993  002FA4  0E00               	movlw	0
 12994  002FA6  6E48               	movwf	(___fldiv@a+2)^0,c
 12995  002FA8  0E00               	movlw	0
 12996  002FAA  6E49               	movwf	(___fldiv@a+3)^0,c
 12997  002FAC                     l7640:
 12998  002FAC  8E48               	bsf	(___fldiv@a+2)^0,7,c
 12999  002FAE  0E00               	movlw	0
 13000  002FB0  6E49               	movwf	(___fldiv@a+3)^0,c
 13001  002FB2  EFE3  F017         	goto	l7646
 13002  002FB6                     l7644:
 13003  002FB6  0E00               	movlw	0
 13004  002FB8  6E46               	movwf	___fldiv@a^0,c
 13005  002FBA  0E00               	movlw	0
 13006  002FBC  6E47               	movwf	(___fldiv@a+1)^0,c
 13007  002FBE  0E00               	movlw	0
 13008  002FC0  6E48               	movwf	(___fldiv@a+2)^0,c
 13009  002FC2  0E00               	movlw	0
 13010  002FC4  6E49               	movwf	(___fldiv@a+3)^0,c
 13011  002FC6                     l7646:
 13012  002FC6  5046               	movf	___fldiv@a^0,w,c
 13013  002FC8  1047               	iorwf	(___fldiv@a+1)^0,w,c
 13014  002FCA  1048               	iorwf	(___fldiv@a+2)^0,w,c
 13015  002FCC  1049               	iorwf	(___fldiv@a+3)^0,w,c
 13016  002FCE  A4D8               	btfss	status,2,c
 13017  002FD0  EFEC  F017         	goto	u9561
 13018  002FD4  EFEE  F017         	goto	u9560
 13019  002FD8                     u9561:
 13020  002FD8  EF06  F018         	goto	l7658
 13021  002FDC                     u9560:
 13022  002FDC  0E00               	movlw	0
 13023  002FDE  6E42               	movwf	___fldiv@b^0,c
 13024  002FE0  0E00               	movlw	0
 13025  002FE2  6E43               	movwf	(___fldiv@b+1)^0,c
 13026  002FE4  0E00               	movlw	0
 13027  002FE6  6E44               	movwf	(___fldiv@b+2)^0,c
 13028  002FE8  0E00               	movlw	0
 13029  002FEA  6E45               	movwf	(___fldiv@b+3)^0,c
 13030  002FEC  0E80               	movlw	128
 13031  002FEE  1244               	iorwf	(___fldiv@b+2)^0,f,c
 13032  002FF0  0E7F               	movlw	127
 13033  002FF2  1245               	iorwf	(___fldiv@b+3)^0,f,c
 13034  002FF4                     l7652:
 13035  002FF4  5052               	movf	___fldiv@sign^0,w,c
 13036  002FF6  1245               	iorwf	(___fldiv@b+3)^0,f,c
 13037  002FF8  C042  F042         	movff	___fldiv@b,?___fldiv
 13038  002FFC  C043  F043         	movff	___fldiv@b+1,?___fldiv+1
 13039  003000  C044  F044         	movff	___fldiv@b+2,?___fldiv+2
 13040  003004  C045  F045         	movff	___fldiv@b+3,?___fldiv+3
 13041  003008  EF49  F019         	goto	l1397
 13042  00300C                     l7658:
 13043  00300C  5059               	movf	___fldiv@bexp^0,w,c
 13044  00300E  A4D8               	btfss	status,2,c
 13045  003010  EF0C  F018         	goto	u9571
 13046  003014  EF0E  F018         	goto	u9570
 13047  003018                     u9571:
 13048  003018  EF18  F018         	goto	l7666
 13049  00301C                     u9570:
 13050  00301C  0E00               	movlw	0
 13051  00301E  6E42               	movwf	?___fldiv^0,c
 13052  003020  0E00               	movlw	0
 13053  003022  6E43               	movwf	(?___fldiv+1)^0,c
 13054  003024  0E00               	movlw	0
 13055  003026  6E44               	movwf	(?___fldiv+2)^0,c
 13056  003028  0E00               	movlw	0
 13057  00302A  6E45               	movwf	(?___fldiv+3)^0,c
 13058  00302C  EF49  F019         	goto	l1397
 13059  003030                     l7666:
 13060  003030  505A               	movf	___fldiv@aexp^0,w,c
 13061  003032  C059  F04A         	movff	___fldiv@bexp,??___fldiv
 13062  003036  6A4B               	clrf	(??___fldiv+1)^0,c
 13063  003038  5E4A               	subwf	??___fldiv^0,f,c
 13064  00303A  0E00               	movlw	0
 13065  00303C  5A4B               	subwfb	(??___fldiv+1)^0,f,c
 13066  00303E  0E7F               	movlw	127
 13067  003040  244A               	addwf	??___fldiv^0,w,c
 13068  003042  6E53               	movwf	___fldiv@new_exp^0,c
 13069  003044  0E00               	movlw	0
 13070  003046  204B               	addwfc	(??___fldiv+1)^0,w,c
 13071  003048  6E54               	movwf	(___fldiv@new_exp+1)^0,c
 13072  00304A  C042  F04E         	movff	___fldiv@b,___fldiv@rem
 13073  00304E  C043  F04F         	movff	___fldiv@b+1,___fldiv@rem+1
 13074  003052  C044  F050         	movff	___fldiv@b+2,___fldiv@rem+2
 13075  003056  C045  F051         	movff	___fldiv@b+3,___fldiv@rem+3
 13076  00305A  0E00               	movlw	0
 13077  00305C  6E42               	movwf	___fldiv@b^0,c
 13078  00305E  0E00               	movlw	0
 13079  003060  6E43               	movwf	(___fldiv@b+1)^0,c
 13080  003062  0E00               	movlw	0
 13081  003064  6E44               	movwf	(___fldiv@b+2)^0,c
 13082  003066  0E00               	movlw	0
 13083  003068  6E45               	movwf	(___fldiv@b+3)^0,c
 13084  00306A  0E00               	movlw	0
 13085  00306C  6E55               	movwf	___fldiv@grs^0,c
 13086  00306E  0E00               	movlw	0
 13087  003070  6E56               	movwf	(___fldiv@grs+1)^0,c
 13088  003072  0E00               	movlw	0
 13089  003074  6E57               	movwf	(___fldiv@grs+2)^0,c
 13090  003076  0E00               	movlw	0
 13091  003078  6E58               	movwf	(___fldiv@grs+3)^0,c
 13092  00307A  0E00               	movlw	0
 13093  00307C  6E5A               	movwf	___fldiv@aexp^0,c
 13094  00307E  EF79  F018         	goto	l1399
 13095  003082                     l7676:
 13096  003082  505A               	movf	___fldiv@aexp^0,w,c
 13097  003084  B4D8               	btfsc	status,2,c
 13098  003086  EF47  F018         	goto	u9581
 13099  00308A  EF49  F018         	goto	u9580
 13100  00308E                     u9581:
 13101  00308E  EF60  F018         	goto	l7684
 13102  003092                     u9580:
 13103  003092  90D8               	bcf	status,0,c
 13104  003094  364E               	rlcf	___fldiv@rem^0,f,c
 13105  003096  364F               	rlcf	(___fldiv@rem+1)^0,f,c
 13106  003098  3650               	rlcf	(___fldiv@rem+2)^0,f,c
 13107  00309A  3651               	rlcf	(___fldiv@rem+3)^0,f,c
 13108  00309C  90D8               	bcf	status,0,c
 13109  00309E  3642               	rlcf	___fldiv@b^0,f,c
 13110  0030A0  3643               	rlcf	(___fldiv@b+1)^0,f,c
 13111  0030A2  3644               	rlcf	(___fldiv@b+2)^0,f,c
 13112  0030A4  3645               	rlcf	(___fldiv@b+3)^0,f,c
 13113  0030A6  AE58               	btfss	(___fldiv@grs+3)^0,7,c
 13114  0030A8  EF58  F018         	goto	u9591
 13115  0030AC  EF5A  F018         	goto	u9590
 13116  0030B0                     u9591:
 13117  0030B0  EF5B  F018         	goto	l1402
 13118  0030B4                     u9590:
 13119  0030B4  8042               	bsf	___fldiv@b^0,0,c
 13120  0030B6                     l1402:
 13121  0030B6  90D8               	bcf	status,0,c
 13122  0030B8  3655               	rlcf	___fldiv@grs^0,f,c
 13123  0030BA  3656               	rlcf	(___fldiv@grs+1)^0,f,c
 13124  0030BC  3657               	rlcf	(___fldiv@grs+2)^0,f,c
 13125  0030BE  3658               	rlcf	(___fldiv@grs+3)^0,f,c
 13126  0030C0                     l7684:
 13127  0030C0  5046               	movf	___fldiv@a^0,w,c
 13128  0030C2  5C4E               	subwf	___fldiv@rem^0,w,c
 13129  0030C4  5047               	movf	(___fldiv@a+1)^0,w,c
 13130  0030C6  584F               	subwfb	(___fldiv@rem+1)^0,w,c
 13131  0030C8  5048               	movf	(___fldiv@a+2)^0,w,c
 13132  0030CA  5850               	subwfb	(___fldiv@rem+2)^0,w,c
 13133  0030CC  5049               	movf	(___fldiv@a+3)^0,w,c
 13134  0030CE  5851               	subwfb	(___fldiv@rem+3)^0,w,c
 13135  0030D0  A0D8               	btfss	status,0,c
 13136  0030D2  EF6D  F018         	goto	u9601
 13137  0030D6  EF6F  F018         	goto	u9600
 13138  0030DA                     u9601:
 13139  0030DA  EF78  F018         	goto	l7690
 13140  0030DE                     u9600:
 13141  0030DE  8C58               	bsf	(___fldiv@grs+3)^0,6,c
 13142  0030E0  5046               	movf	___fldiv@a^0,w,c
 13143  0030E2  5E4E               	subwf	___fldiv@rem^0,f,c
 13144  0030E4  5047               	movf	(___fldiv@a+1)^0,w,c
 13145  0030E6  5A4F               	subwfb	(___fldiv@rem+1)^0,f,c
 13146  0030E8  5048               	movf	(___fldiv@a+2)^0,w,c
 13147  0030EA  5A50               	subwfb	(___fldiv@rem+2)^0,f,c
 13148  0030EC  5049               	movf	(___fldiv@a+3)^0,w,c
 13149  0030EE  5A51               	subwfb	(___fldiv@rem+3)^0,f,c
 13150  0030F0                     l7690:
 13151  0030F0  2A5A               	incf	___fldiv@aexp^0,f,c
 13152  0030F2                     l1399:
 13153  0030F2  0E19               	movlw	25
 13154  0030F4  645A               	cpfsgt	___fldiv@aexp^0,c
 13155  0030F6  EF7F  F018         	goto	u9611
 13156  0030FA  EF81  F018         	goto	u9610
 13157  0030FE                     u9611:
 13158  0030FE  EF41  F018         	goto	l7676
 13159  003102                     u9610:
 13160  003102  504E               	movf	___fldiv@rem^0,w,c
 13161  003104  104F               	iorwf	(___fldiv@rem+1)^0,w,c
 13162  003106  1050               	iorwf	(___fldiv@rem+2)^0,w,c
 13163  003108  1051               	iorwf	(___fldiv@rem+3)^0,w,c
 13164  00310A  B4D8               	btfsc	status,2,c
 13165  00310C  EF8A  F018         	goto	u9621
 13166  003110  EF8C  F018         	goto	u9620
 13167  003114                     u9621:
 13168  003114  EFA4  F018         	goto	l7702
 13169  003118                     u9620:
 13170  003118  8055               	bsf	___fldiv@grs^0,0,c
 13171  00311A  EFA4  F018         	goto	l7702
 13172  00311E                     l7696:
 13173  00311E  90D8               	bcf	status,0,c
 13174  003120  3642               	rlcf	___fldiv@b^0,f,c
 13175  003122  3643               	rlcf	(___fldiv@b+1)^0,f,c
 13176  003124  3644               	rlcf	(___fldiv@b+2)^0,f,c
 13177  003126  3645               	rlcf	(___fldiv@b+3)^0,f,c
 13178  003128  AE58               	btfss	(___fldiv@grs+3)^0,7,c
 13179  00312A  EF99  F018         	goto	u9631
 13180  00312E  EF9B  F018         	goto	u9630
 13181  003132                     u9631:
 13182  003132  EF9C  F018         	goto	l1408
 13183  003136                     u9630:
 13184  003136  8042               	bsf	___fldiv@b^0,0,c
 13185  003138                     l1408:
 13186  003138  90D8               	bcf	status,0,c
 13187  00313A  3655               	rlcf	___fldiv@grs^0,f,c
 13188  00313C  3656               	rlcf	(___fldiv@grs+1)^0,f,c
 13189  00313E  3657               	rlcf	(___fldiv@grs+2)^0,f,c
 13190  003140  3658               	rlcf	(___fldiv@grs+3)^0,f,c
 13191  003142  0653               	decf	___fldiv@new_exp^0,f,c
 13192  003144  A0D8               	btfss	status,0,c
 13193  003146  0654               	decf	(___fldiv@new_exp+1)^0,f,c
 13194  003148                     l7702:
 13195  003148  AE44               	btfss	(___fldiv@b+2)^0,7,c
 13196  00314A  EFA9  F018         	goto	u9641
 13197  00314E  EFAB  F018         	goto	u9640
 13198  003152                     u9641:
 13199  003152  EF8F  F018         	goto	l7696
 13200  003156                     u9640:
 13201  003156  0E00               	movlw	0
 13202  003158  6E5A               	movwf	___fldiv@aexp^0,c
 13203  00315A  AE58               	btfss	(___fldiv@grs+3)^0,7,c
 13204  00315C  EFB2  F018         	goto	u9651
 13205  003160  EFB4  F018         	goto	u9650
 13206  003164                     u9651:
 13207  003164  EFD8  F018         	goto	l1410
 13208  003168                     u9650:
 13209  003168  0EFF               	movlw	255
 13210  00316A  1455               	andwf	___fldiv@grs^0,w,c
 13211  00316C  6E4A               	movwf	??___fldiv^0,c
 13212  00316E  0EFF               	movlw	255
 13213  003170  1456               	andwf	(___fldiv@grs+1)^0,w,c
 13214  003172  6E4B               	movwf	(??___fldiv+1)^0,c
 13215  003174  0EFF               	movlw	255
 13216  003176  1457               	andwf	(___fldiv@grs+2)^0,w,c
 13217  003178  6E4C               	movwf	(??___fldiv+2)^0,c
 13218  00317A  0E7F               	movlw	127
 13219  00317C  1458               	andwf	(___fldiv@grs+3)^0,w,c
 13220  00317E  6E4D               	movwf	(??___fldiv+3)^0,c
 13221  003180  504A               	movf	??___fldiv^0,w,c
 13222  003182  104B               	iorwf	(??___fldiv+1)^0,w,c
 13223  003184  104C               	iorwf	(??___fldiv+2)^0,w,c
 13224  003186  104D               	iorwf	(??___fldiv+3)^0,w,c
 13225  003188  B4D8               	btfsc	status,2,c
 13226  00318A  EFC9  F018         	goto	u9661
 13227  00318E  EFCB  F018         	goto	u9660
 13228  003192                     u9661:
 13229  003192  EFCF  F018         	goto	l1411
 13230  003196                     u9660:
 13231  003196                     l7710:
 13232  003196  0E01               	movlw	1
 13233  003198  6E5A               	movwf	___fldiv@aexp^0,c
 13234  00319A  EFD8  F018         	goto	l1410
 13235  00319E                     l1411:
 13236  00319E  A042               	btfss	___fldiv@b^0,0,c
 13237  0031A0  EFD4  F018         	goto	u9671
 13238  0031A4  EFD6  F018         	goto	u9670
 13239  0031A8                     u9671:
 13240  0031A8  EFD8  F018         	goto	l1410
 13241  0031AC                     u9670:
 13242  0031AC  EFCB  F018         	goto	l7710
 13243  0031B0                     l1410:
 13244  0031B0  505A               	movf	___fldiv@aexp^0,w,c
 13245  0031B2  B4D8               	btfsc	status,2,c
 13246  0031B4  EFDE  F018         	goto	u9681
 13247  0031B8  EFE0  F018         	goto	u9680
 13248  0031BC                     u9681:
 13249  0031BC  EF04  F019         	goto	l7722
 13250  0031C0                     u9680:
 13251  0031C0  0E01               	movlw	1
 13252  0031C2  2642               	addwf	___fldiv@b^0,f,c
 13253  0031C4  0E00               	movlw	0
 13254  0031C6  2243               	addwfc	(___fldiv@b+1)^0,f,c
 13255  0031C8  2244               	addwfc	(___fldiv@b+2)^0,f,c
 13256  0031CA  2245               	addwfc	(___fldiv@b+3)^0,f,c
 13257  0031CC  A045               	btfss	(___fldiv@b+3)^0,0,c
 13258  0031CE  EFEB  F018         	goto	u9691
 13259  0031D2  EFED  F018         	goto	u9690
 13260  0031D6                     u9691:
 13261  0031D6  EF04  F019         	goto	l7722
 13262  0031DA                     u9690:
 13263  0031DA  C042  F04A         	movff	___fldiv@b,??___fldiv
 13264  0031DE  C043  F04B         	movff	___fldiv@b+1,??___fldiv+1
 13265  0031E2  C044  F04C         	movff	___fldiv@b+2,??___fldiv+2
 13266  0031E6  C045  F04D         	movff	___fldiv@b+3,??___fldiv+3
 13267  0031EA  344D               	rlcf	(??___fldiv+3)^0,w,c
 13268  0031EC  324D               	rrcf	(??___fldiv+3)^0,f,c
 13269  0031EE  324C               	rrcf	(??___fldiv+2)^0,f,c
 13270  0031F0  324B               	rrcf	(??___fldiv+1)^0,f,c
 13271  0031F2  324A               	rrcf	??___fldiv^0,f,c
 13272  0031F4  C04A  F042         	movff	??___fldiv,___fldiv@b
 13273  0031F8  C04B  F043         	movff	??___fldiv+1,___fldiv@b+1
 13274  0031FC  C04C  F044         	movff	??___fldiv+2,___fldiv@b+2
 13275  003200  C04D  F045         	movff	??___fldiv+3,___fldiv@b+3
 13276  003204  4A53               	infsnz	___fldiv@new_exp^0,f,c
 13277  003206  2A54               	incf	(___fldiv@new_exp+1)^0,f,c
 13278  003208                     l7722:
 13279  003208  BE54               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13280  00320A  EF0F  F019         	goto	u9701
 13281  00320E  5054               	movf	(___fldiv@new_exp+1)^0,w,c
 13282  003210  E108               	bnz	u9700
 13283  003212  2853               	incf	___fldiv@new_exp^0,w,c
 13284  003214  A0D8               	btfss	status,0,c
 13285  003216  EF0F  F019         	goto	u9701
 13286  00321A  EF11  F019         	goto	u9700
 13287  00321E                     u9701:
 13288  00321E  EF1C  F019         	goto	l7726
 13289  003222                     u9700:
 13290  003222  0E00               	movlw	0
 13291  003224  6E54               	movwf	(___fldiv@new_exp+1)^0,c
 13292  003226  6853               	setf	___fldiv@new_exp^0,c
 13293  003228  0E00               	movlw	0
 13294  00322A  6E42               	movwf	___fldiv@b^0,c
 13295  00322C  0E00               	movlw	0
 13296  00322E  6E43               	movwf	(___fldiv@b+1)^0,c
 13297  003230  0E00               	movlw	0
 13298  003232  6E44               	movwf	(___fldiv@b+2)^0,c
 13299  003234  0E00               	movlw	0
 13300  003236  6E45               	movwf	(___fldiv@b+3)^0,c
 13301  003238                     l7726:
 13302  003238  BE54               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13303  00323A  EF29  F019         	goto	u9710
 13304  00323E  5054               	movf	(___fldiv@new_exp+1)^0,w,c
 13305  003240  E106               	bnz	u9711
 13306  003242  0453               	decf	___fldiv@new_exp^0,w,c
 13307  003244  B0D8               	btfsc	status,0,c
 13308  003246  EF27  F019         	goto	u9711
 13309  00324A  EF29  F019         	goto	u9710
 13310  00324E                     u9711:
 13311  00324E  EF37  F019         	goto	l7730
 13312  003252                     u9710:
 13313  003252  0E00               	movlw	0
 13314  003254  6E54               	movwf	(___fldiv@new_exp+1)^0,c
 13315  003256  0E00               	movlw	0
 13316  003258  6E53               	movwf	___fldiv@new_exp^0,c
 13317  00325A  0E00               	movlw	0
 13318  00325C  6E42               	movwf	___fldiv@b^0,c
 13319  00325E  0E00               	movlw	0
 13320  003260  6E43               	movwf	(___fldiv@b+1)^0,c
 13321  003262  0E00               	movlw	0
 13322  003264  6E44               	movwf	(___fldiv@b+2)^0,c
 13323  003266  0E00               	movlw	0
 13324  003268  6E45               	movwf	(___fldiv@b+3)^0,c
 13325  00326A  0E00               	movlw	0
 13326  00326C  6E52               	movwf	___fldiv@sign^0,c
 13327  00326E                     l7730:
 13328  00326E  C053  F059         	movff	___fldiv@new_exp,___fldiv@bexp
 13329  003272  A059               	btfss	___fldiv@bexp^0,0,c
 13330  003274  EF3E  F019         	goto	u9721
 13331  003278  EF40  F019         	goto	u9720
 13332  00327C                     u9721:
 13333  00327C  EF43  F019         	goto	l7736
 13334  003280                     u9720:
 13335  003280  8E44               	bsf	(___fldiv@b+2)^0,7,c
 13336  003282  EF44  F019         	goto	l7738
 13337  003286                     l7736:
 13338  003286  9E44               	bcf	(___fldiv@b+2)^0,7,c
 13339  003288                     l7738:
 13340  003288  90D8               	bcf	status,0,c
 13341  00328A  3059               	rrcf	___fldiv@bexp^0,w,c
 13342  00328C  6E45               	movwf	(___fldiv@b+3)^0,c
 13343  00328E  EFFA  F017         	goto	l7652
 13344  003292                     l1397:
 13345  003292  0012               	return		;funcret
 13346  003294                     __end_of___fldiv:
 13347                           	opt callstack 0
 13348                           
 13349 ;; *************** function ___awmod *****************
 13350 ;; Defined at:
 13351 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 13352 ;; Parameters:    Size  Location     Type
 13353 ;;  dividend        2    2[COMRAM] int 
 13354 ;;  divisor         2    4[COMRAM] int 
 13355 ;; Auto vars:     Size  Location     Type
 13356 ;;  sign            1    7[COMRAM] unsigned char 
 13357 ;;  counter         1    6[COMRAM] unsigned char 
 13358 ;; Return value:  Size  Location     Type
 13359 ;;                  2    2[COMRAM] int 
 13360 ;; Registers used:
 13361 ;;		wreg, status,2, status,0
 13362 ;; Tracked objects:
 13363 ;;		On entry : 0/0
 13364 ;;		On exit  : 0/0
 13365 ;;		Unchanged: 0/0
 13366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13367 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13368 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13370 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13371 ;;Total ram usage:        6 bytes
 13372 ;; Hardware stack levels used:    1
 13373 ;; Hardware stack levels required when called:    4
 13374 ;; This function calls:
 13375 ;;		Nothing
 13376 ;; This function is called by:
 13377 ;;		_efgtoa
 13378 ;; This function uses a non-reentrant model
 13379 ;;
 13380                           
 13381                           	psect	text29
 13382  0055CA                     __ptext29:
 13383                           	opt callstack 0
 13384  0055CA                     ___awmod:
 13385                           	opt callstack 21
 13386  0055CA  0E00               	movlw	0
 13387  0055CC  6E08               	movwf	___awmod@sign^0,c
 13388  0055CE  BE04               	btfsc	(___awmod@dividend+1)^0,7,c
 13389  0055D0  EFEE  F02A         	goto	u9980
 13390  0055D4  EFEC  F02A         	goto	u9981
 13391  0055D8                     u9981:
 13392  0055D8  EFF4  F02A         	goto	l7934
 13393  0055DC                     u9980:
 13394  0055DC  6C03               	negf	___awmod@dividend^0,c
 13395  0055DE  1E04               	comf	(___awmod@dividend+1)^0,f,c
 13396  0055E0  B0D8               	btfsc	status,0,c
 13397  0055E2  2A04               	incf	(___awmod@dividend+1)^0,f,c
 13398  0055E4  0E01               	movlw	1
 13399  0055E6  6E08               	movwf	___awmod@sign^0,c
 13400  0055E8                     l7934:
 13401  0055E8  BE06               	btfsc	(___awmod@divisor+1)^0,7,c
 13402  0055EA  EFFB  F02A         	goto	u9990
 13403  0055EE  EFF9  F02A         	goto	u9991
 13404  0055F2                     u9991:
 13405  0055F2  EFFF  F02A         	goto	l7938
 13406  0055F6                     u9990:
 13407  0055F6  6C05               	negf	___awmod@divisor^0,c
 13408  0055F8  1E06               	comf	(___awmod@divisor+1)^0,f,c
 13409  0055FA  B0D8               	btfsc	status,0,c
 13410  0055FC  2A06               	incf	(___awmod@divisor+1)^0,f,c
 13411  0055FE                     l7938:
 13412  0055FE  5005               	movf	___awmod@divisor^0,w,c
 13413  005600  1006               	iorwf	(___awmod@divisor+1)^0,w,c
 13414  005602  B4D8               	btfsc	status,2,c
 13415  005604  EF06  F02B         	goto	u10001
 13416  005608  EF08  F02B         	goto	u10000
 13417  00560C                     u10001:
 13418  00560C  EF2C  F02B         	goto	l7954
 13419  005610                     u10000:
 13420  005610  0E01               	movlw	1
 13421  005612  6E07               	movwf	___awmod@counter^0,c
 13422  005614  EF10  F02B         	goto	l7944
 13423  005618                     l7942:
 13424  005618  90D8               	bcf	status,0,c
 13425  00561A  3605               	rlcf	___awmod@divisor^0,f,c
 13426  00561C  3606               	rlcf	(___awmod@divisor+1)^0,f,c
 13427  00561E  2A07               	incf	___awmod@counter^0,f,c
 13428  005620                     l7944:
 13429  005620  AE06               	btfss	(___awmod@divisor+1)^0,7,c
 13430  005622  EF15  F02B         	goto	u10011
 13431  005626  EF17  F02B         	goto	u10010
 13432  00562A                     u10011:
 13433  00562A  EF0C  F02B         	goto	l7942
 13434  00562E                     u10010:
 13435  00562E                     l7946:
 13436  00562E  5005               	movf	___awmod@divisor^0,w,c
 13437  005630  5C03               	subwf	___awmod@dividend^0,w,c
 13438  005632  5006               	movf	(___awmod@divisor+1)^0,w,c
 13439  005634  5804               	subwfb	(___awmod@dividend+1)^0,w,c
 13440  005636  A0D8               	btfss	status,0,c
 13441  005638  EF20  F02B         	goto	u10021
 13442  00563C  EF22  F02B         	goto	u10020
 13443  005640                     u10021:
 13444  005640  EF26  F02B         	goto	l7950
 13445  005644                     u10020:
 13446  005644  5005               	movf	___awmod@divisor^0,w,c
 13447  005646  5E03               	subwf	___awmod@dividend^0,f,c
 13448  005648  5006               	movf	(___awmod@divisor+1)^0,w,c
 13449  00564A  5A04               	subwfb	(___awmod@dividend+1)^0,f,c
 13450  00564C                     l7950:
 13451  00564C  90D8               	bcf	status,0,c
 13452  00564E  3206               	rrcf	(___awmod@divisor+1)^0,f,c
 13453  005650  3205               	rrcf	___awmod@divisor^0,f,c
 13454  005652  2E07               	decfsz	___awmod@counter^0,f,c
 13455  005654  EF17  F02B         	goto	l7946
 13456  005658                     l7954:
 13457  005658  5008               	movf	___awmod@sign^0,w,c
 13458  00565A  B4D8               	btfsc	status,2,c
 13459  00565C  EF32  F02B         	goto	u10031
 13460  005660  EF34  F02B         	goto	u10030
 13461  005664                     u10031:
 13462  005664  EF38  F02B         	goto	l7958
 13463  005668                     u10030:
 13464  005668  6C03               	negf	___awmod@dividend^0,c
 13465  00566A  1E04               	comf	(___awmod@dividend+1)^0,f,c
 13466  00566C  B0D8               	btfsc	status,0,c
 13467  00566E  2A04               	incf	(___awmod@dividend+1)^0,f,c
 13468  005670                     l7958:
 13469  005670  C003  F003         	movff	___awmod@dividend,?___awmod
 13470  005674  C004  F004         	movff	___awmod@dividend+1,?___awmod+1
 13471  005678  0012               	return		;funcret
 13472  00567A                     __end_of___awmod:
 13473                           	opt callstack 0
 13474                           
 13475 ;; *************** function ___awdiv *****************
 13476 ;; Defined at:
 13477 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 13478 ;; Parameters:    Size  Location     Type
 13479 ;;  dividend        2    2[COMRAM] int 
 13480 ;;  divisor         2    4[COMRAM] int 
 13481 ;; Auto vars:     Size  Location     Type
 13482 ;;  quotient        2    8[COMRAM] int 
 13483 ;;  sign            1    7[COMRAM] unsigned char 
 13484 ;;  counter         1    6[COMRAM] unsigned char 
 13485 ;; Return value:  Size  Location     Type
 13486 ;;                  2    2[COMRAM] int 
 13487 ;; Registers used:
 13488 ;;		wreg, status,2, status,0
 13489 ;; Tracked objects:
 13490 ;;		On entry : 0/0
 13491 ;;		On exit  : 0/0
 13492 ;;		Unchanged: 0/0
 13493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13494 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13495 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13497 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13498 ;;Total ram usage:        8 bytes
 13499 ;; Hardware stack levels used:    1
 13500 ;; Hardware stack levels required when called:    4
 13501 ;; This function calls:
 13502 ;;		Nothing
 13503 ;; This function is called by:
 13504 ;;		_efgtoa
 13505 ;; This function uses a non-reentrant model
 13506 ;;
 13507                           
 13508                           	psect	text30
 13509  005506                     __ptext30:
 13510                           	opt callstack 0
 13511  005506                     ___awdiv:
 13512                           	opt callstack 21
 13513  005506  0E00               	movlw	0
 13514  005508  6E08               	movwf	___awdiv@sign^0,c
 13515  00550A  BE06               	btfsc	(___awdiv@divisor+1)^0,7,c
 13516  00550C  EF8C  F02A         	goto	u9920
 13517  005510  EF8A  F02A         	goto	u9921
 13518  005514                     u9921:
 13519  005514  EF92  F02A         	goto	l7890
 13520  005518                     u9920:
 13521  005518  6C05               	negf	___awdiv@divisor^0,c
 13522  00551A  1E06               	comf	(___awdiv@divisor+1)^0,f,c
 13523  00551C  B0D8               	btfsc	status,0,c
 13524  00551E  2A06               	incf	(___awdiv@divisor+1)^0,f,c
 13525  005520  0E01               	movlw	1
 13526  005522  6E08               	movwf	___awdiv@sign^0,c
 13527  005524                     l7890:
 13528  005524  BE04               	btfsc	(___awdiv@dividend+1)^0,7,c
 13529  005526  EF99  F02A         	goto	u9930
 13530  00552A  EF97  F02A         	goto	u9931
 13531  00552E                     u9931:
 13532  00552E  EF9F  F02A         	goto	l7896
 13533  005532                     u9930:
 13534  005532  6C03               	negf	___awdiv@dividend^0,c
 13535  005534  1E04               	comf	(___awdiv@dividend+1)^0,f,c
 13536  005536  B0D8               	btfsc	status,0,c
 13537  005538  2A04               	incf	(___awdiv@dividend+1)^0,f,c
 13538  00553A  0E01               	movlw	1
 13539  00553C  1A08               	xorwf	___awdiv@sign^0,f,c
 13540  00553E                     l7896:
 13541  00553E  0E00               	movlw	0
 13542  005540  6E0A               	movwf	(___awdiv@quotient+1)^0,c
 13543  005542  0E00               	movlw	0
 13544  005544  6E09               	movwf	___awdiv@quotient^0,c
 13545  005546  5005               	movf	___awdiv@divisor^0,w,c
 13546  005548  1006               	iorwf	(___awdiv@divisor+1)^0,w,c
 13547  00554A  B4D8               	btfsc	status,2,c
 13548  00554C  EFAA  F02A         	goto	u9941
 13549  005550  EFAC  F02A         	goto	u9940
 13550  005554                     u9941:
 13551  005554  EFD4  F02A         	goto	l7918
 13552  005558                     u9940:
 13553  005558  0E01               	movlw	1
 13554  00555A  6E07               	movwf	___awdiv@counter^0,c
 13555  00555C  EFB4  F02A         	goto	l7904
 13556  005560                     l7902:
 13557  005560  90D8               	bcf	status,0,c
 13558  005562  3605               	rlcf	___awdiv@divisor^0,f,c
 13559  005564  3606               	rlcf	(___awdiv@divisor+1)^0,f,c
 13560  005566  2A07               	incf	___awdiv@counter^0,f,c
 13561  005568                     l7904:
 13562  005568  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
 13563  00556A  EFB9  F02A         	goto	u9951
 13564  00556E  EFBB  F02A         	goto	u9950
 13565  005572                     u9951:
 13566  005572  EFB0  F02A         	goto	l7902
 13567  005576                     u9950:
 13568  005576                     l7906:
 13569  005576  90D8               	bcf	status,0,c
 13570  005578  3609               	rlcf	___awdiv@quotient^0,f,c
 13571  00557A  360A               	rlcf	(___awdiv@quotient+1)^0,f,c
 13572  00557C  5005               	movf	___awdiv@divisor^0,w,c
 13573  00557E  5C03               	subwf	___awdiv@dividend^0,w,c
 13574  005580  5006               	movf	(___awdiv@divisor+1)^0,w,c
 13575  005582  5804               	subwfb	(___awdiv@dividend+1)^0,w,c
 13576  005584  A0D8               	btfss	status,0,c
 13577  005586  EFC7  F02A         	goto	u9961
 13578  00558A  EFC9  F02A         	goto	u9960
 13579  00558E                     u9961:
 13580  00558E  EFCE  F02A         	goto	l7914
 13581  005592                     u9960:
 13582  005592  5005               	movf	___awdiv@divisor^0,w,c
 13583  005594  5E03               	subwf	___awdiv@dividend^0,f,c
 13584  005596  5006               	movf	(___awdiv@divisor+1)^0,w,c
 13585  005598  5A04               	subwfb	(___awdiv@dividend+1)^0,f,c
 13586  00559A  8009               	bsf	___awdiv@quotient^0,0,c
 13587  00559C                     l7914:
 13588  00559C  90D8               	bcf	status,0,c
 13589  00559E  3206               	rrcf	(___awdiv@divisor+1)^0,f,c
 13590  0055A0  3205               	rrcf	___awdiv@divisor^0,f,c
 13591  0055A2  2E07               	decfsz	___awdiv@counter^0,f,c
 13592  0055A4  EFBB  F02A         	goto	l7906
 13593  0055A8                     l7918:
 13594  0055A8  5008               	movf	___awdiv@sign^0,w,c
 13595  0055AA  B4D8               	btfsc	status,2,c
 13596  0055AC  EFDA  F02A         	goto	u9971
 13597  0055B0  EFDC  F02A         	goto	u9970
 13598  0055B4                     u9971:
 13599  0055B4  EFE0  F02A         	goto	l7922
 13600  0055B8                     u9970:
 13601  0055B8  6C09               	negf	___awdiv@quotient^0,c
 13602  0055BA  1E0A               	comf	(___awdiv@quotient+1)^0,f,c
 13603  0055BC  B0D8               	btfsc	status,0,c
 13604  0055BE  2A0A               	incf	(___awdiv@quotient+1)^0,f,c
 13605  0055C0                     l7922:
 13606  0055C0  C009  F003         	movff	___awdiv@quotient,?___awdiv
 13607  0055C4  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
 13608  0055C8  0012               	return		;funcret
 13609  0055CA                     __end_of___awdiv:
 13610                           	opt callstack 0
 13611                           
 13612 ;; *************** function _dtoa *****************
 13613 ;; Defined at:
 13614 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13615 ;; Parameters:    Size  Location     Type
 13616 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 13617 ;;		 -> vsnprintf@f(6), 
 13618 ;;  d               8   31[COMRAM] long long 
 13619 ;; Auto vars:     Size  Location     Type
 13620 ;;  n               8   55[COMRAM] long long 
 13621 ;;  i               2   63[COMRAM] int 
 13622 ;;  s               2   53[COMRAM] int 
 13623 ;;  w               2   51[COMRAM] int 
 13624 ;;  p               2   49[COMRAM] int 
 13625 ;; Return value:  Size  Location     Type
 13626 ;;                  2   29[COMRAM] int 
 13627 ;; Registers used:
 13628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13629 ;; Tracked objects:
 13630 ;;		On entry : 0/0
 13631 ;;		On exit  : 0/0
 13632 ;;		Unchanged: 0/0
 13633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13634 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13635 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13636 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13637 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13638 ;;Total ram usage:       36 bytes
 13639 ;; Hardware stack levels used:    1
 13640 ;; Hardware stack levels required when called:    8
 13641 ;; This function calls:
 13642 ;;		___aodiv
 13643 ;;		___aomod
 13644 ;;		_abs
 13645 ;;		_pad
 13646 ;; This function is called by:
 13647 ;;		_vfpfcnvrt
 13648 ;; This function uses a non-reentrant model
 13649 ;;
 13650                           
 13651                           	psect	text31
 13652  00361A                     __ptext31:
 13653                           	opt callstack 0
 13654  00361A                     _dtoa:
 13655                           	opt callstack 18
 13656  00361A                     
 13657                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 13658  00361A  C020  F038         	movff	dtoa@d,dtoa@n
 13659  00361E  C021  F039         	movff	dtoa@d+1,dtoa@n+1
 13660  003622  C022  F03A         	movff	dtoa@d+2,dtoa@n+2
 13661  003626  C023  F03B         	movff	dtoa@d+3,dtoa@n+3
 13662  00362A  C024  F03C         	movff	dtoa@d+4,dtoa@n+4
 13663  00362E  C025  F03D         	movff	dtoa@d+5,dtoa@n+5
 13664  003632  C026  F03E         	movff	dtoa@d+6,dtoa@n+6
 13665  003636  C027  F03F         	movff	dtoa@d+7,dtoa@n+7
 13666  00363A                     
 13667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 13668  00363A  BE3F               	btfsc	(dtoa@n+7)^0,7,c
 13669  00363C  EF22  F01B         	goto	u10301
 13670  003640  EF25  F01B         	goto	u10300
 13671  003644                     u10301:
 13672  003644  0E01               	movlw	1
 13673  003646  EF26  F01B         	goto	u10310
 13674  00364A                     u10300:
 13675  00364A  0E00               	movlw	0
 13676  00364C                     u10310:
 13677  00364C  6E36               	movwf	dtoa@s^0,c
 13678  00364E  6A37               	clrf	(dtoa@s+1)^0,c
 13679                           
 13680                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 13681  003650  5036               	movf	dtoa@s^0,w,c
 13682  003652  1037               	iorwf	(dtoa@s+1)^0,w,c
 13683  003654  B4D8               	btfsc	status,2,c
 13684  003656  EF2F  F01B         	goto	u10321
 13685  00365A  EF31  F01B         	goto	u10320
 13686  00365E                     u10321:
 13687  00365E  EF41  F01B         	goto	l8122
 13688  003662                     u10320:
 13689  003662                     
 13690                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 13691  003662  1E3F               	comf	(dtoa@n+7)^0,f,c
 13692  003664  1E3E               	comf	(dtoa@n+6)^0,f,c
 13693  003666  1E3D               	comf	(dtoa@n+5)^0,f,c
 13694  003668  1E3C               	comf	(dtoa@n+4)^0,f,c
 13695  00366A  1E3B               	comf	(dtoa@n+3)^0,f,c
 13696  00366C  1E3A               	comf	(dtoa@n+2)^0,f,c
 13697  00366E  1E39               	comf	(dtoa@n+1)^0,f,c
 13698  003670  6C38               	negf	dtoa@n^0,c
 13699  003672  0E00               	movlw	0
 13700  003674  2239               	addwfc	(dtoa@n+1)^0,f,c
 13701  003676  223A               	addwfc	(dtoa@n+2)^0,f,c
 13702  003678  223B               	addwfc	(dtoa@n+3)^0,f,c
 13703  00367A  223C               	addwfc	(dtoa@n+4)^0,f,c
 13704  00367C  223D               	addwfc	(dtoa@n+5)^0,f,c
 13705  00367E  223E               	addwfc	(dtoa@n+6)^0,f,c
 13706  003680  223F               	addwfc	(dtoa@n+7)^0,f,c
 13707  003682                     l8122:
 13708                           
 13709                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 13710  003682  BE5C               	btfsc	(_prec+1)^0,7,c
 13711  003684  EF46  F01B         	goto	u10331
 13712  003688  EF48  F01B         	goto	u10330
 13713  00368C                     u10331:
 13714  00368C  EF4A  F01B         	goto	l8126
 13715  003690                     u10330:
 13716  003690                     
 13717                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 13718  003690  0100               	movlb	0	; () banked
 13719  003692  93FC               	bcf	_flags& (0+255),1,b
 13720  003694                     l8126:
 13721                           
 13722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 13723  003694  BE5C               	btfsc	(_prec+1)^0,7,c
 13724  003696  EF57  F01B         	goto	u10340
 13725  00369A  505C               	movf	(_prec+1)^0,w,c
 13726  00369C  E106               	bnz	u10341
 13727  00369E  045B               	decf	_prec^0,w,c
 13728  0036A0  B0D8               	btfsc	status,0,c
 13729  0036A2  EF55  F01B         	goto	u10341
 13730  0036A6  EF57  F01B         	goto	u10340
 13731  0036AA                     u10341:
 13732  0036AA  EF5D  F01B         	goto	l525
 13733  0036AE                     u10340:
 13734  0036AE  0E00               	movlw	0
 13735  0036B0  6E33               	movwf	(dtoa@p+1)^0,c
 13736  0036B2  0E01               	movlw	1
 13737  0036B4  6E32               	movwf	dtoa@p^0,c
 13738  0036B6  EF61  F01B         	goto	l527
 13739  0036BA                     l525:
 13740  0036BA  C05B  F032         	movff	_prec,dtoa@p
 13741  0036BE  C05C  F033         	movff	_prec+1,dtoa@p+1
 13742  0036C2                     l527:
 13743                           
 13744                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 13745  0036C2  C0FA  F034         	movff	_width,dtoa@w
 13746  0036C6  C0FB  F035         	movff	_width+1,dtoa@w+1
 13747  0036CA                     
 13748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 13749  0036CA  5036               	movf	dtoa@s^0,w,c
 13750  0036CC  1037               	iorwf	(dtoa@s+1)^0,w,c
 13751  0036CE  A4D8               	btfss	status,2,c
 13752  0036D0  EF6C  F01B         	goto	u10351
 13753  0036D4  EF6E  F01B         	goto	u10350
 13754  0036D8                     u10351:
 13755  0036D8  EF76  F01B         	goto	l8134
 13756  0036DC                     u10350:
 13757  0036DC  0100               	movlb	0	; () banked
 13758  0036DE  A5FC               	btfss	_flags& (0+255),2,b
 13759  0036E0  EF74  F01B         	goto	u10361
 13760  0036E4  EF76  F01B         	goto	u10360
 13761  0036E8                     u10361:
 13762  0036E8  EF79  F01B         	goto	l8136
 13763  0036EC                     u10360:
 13764  0036EC                     l8134:
 13765                           
 13766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 13767  0036EC  0634               	decf	dtoa@w^0,f,c
 13768  0036EE  A0D8               	btfss	status,0,c
 13769  0036F0  0635               	decf	(dtoa@w+1)^0,f,c
 13770  0036F2                     l8136:
 13771                           
 13772                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 13773  0036F2  0E00               	movlw	0
 13774  0036F4  6E41               	movwf	(dtoa@i+1)^0,c
 13775  0036F6  0E4F               	movlw	79
 13776  0036F8  6E40               	movwf	dtoa@i^0,c
 13777  0036FA                     
 13778                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 13779  0036FA  0E00               	movlw	0
 13780  0036FC  0101               	movlb	1	; () banked
 13781  0036FE  6FD7               	movwf	(_dbuf+79)& (0+255),b
 13782                           
 13783                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13784  003700  EFFE  F01B         	goto	l8150
 13785  003704                     l8140:
 13786                           
 13787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 13788  003704  0640               	decf	dtoa@i^0,f,c
 13789  003706  A0D8               	btfss	status,0,c
 13790  003708  0641               	decf	(dtoa@i+1)^0,f,c
 13791  00370A                     
 13792                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 13793  00370A  0E88               	movlw	low _dbuf
 13794  00370C  2440               	addwf	dtoa@i^0,w,c
 13795  00370E  6ED9               	movwf	fsr2l,c
 13796  003710  0E01               	movlw	high _dbuf
 13797  003712  2041               	addwfc	(dtoa@i+1)^0,w,c
 13798  003714  6EDA               	movwf	fsr2h,c
 13799  003716  C038  F003         	movff	dtoa@n,___aomod@dividend
 13800  00371A  C039  F004         	movff	dtoa@n+1,___aomod@dividend+1
 13801  00371E  C03A  F005         	movff	dtoa@n+2,___aomod@dividend+2
 13802  003722  C03B  F006         	movff	dtoa@n+3,___aomod@dividend+3
 13803  003726  C03C  F007         	movff	dtoa@n+4,___aomod@dividend+4
 13804  00372A  C03D  F008         	movff	dtoa@n+5,___aomod@dividend+5
 13805  00372E  C03E  F009         	movff	dtoa@n+6,___aomod@dividend+6
 13806  003732  C03F  F00A         	movff	dtoa@n+7,___aomod@dividend+7
 13807  003736  0E0A               	movlw	10
 13808  003738  6E0B               	movwf	___aomod@divisor^0,c
 13809  00373A  0E00               	movlw	0
 13810  00373C  6E0C               	movwf	(___aomod@divisor+1)^0,c
 13811  00373E  0E00               	movlw	0
 13812  003740  6E0D               	movwf	(___aomod@divisor+2)^0,c
 13813  003742  0E00               	movlw	0
 13814  003744  6E0E               	movwf	(___aomod@divisor+3)^0,c
 13815  003746  0E00               	movlw	0
 13816  003748  6E0F               	movwf	(___aomod@divisor+4)^0,c
 13817  00374A  0E00               	movlw	0
 13818  00374C  6E10               	movwf	(___aomod@divisor+5)^0,c
 13819  00374E  0E00               	movlw	0
 13820  003750  6E11               	movwf	(___aomod@divisor+6)^0,c
 13821  003752  0E00               	movlw	0
 13822  003754  6E12               	movwf	(___aomod@divisor+7)^0,c
 13823  003756  ECDE  F024         	call	___aomod	;wreg free
 13824  00375A  C003  F028         	movff	?___aomod,??_dtoa
 13825  00375E  C004  F029         	movff	?___aomod+1,??_dtoa+1
 13826  003762  C005  F02A         	movff	?___aomod+2,??_dtoa+2
 13827  003766  C006  F02B         	movff	?___aomod+3,??_dtoa+3
 13828  00376A  C007  F02C         	movff	?___aomod+4,??_dtoa+4
 13829  00376E  C008  F02D         	movff	?___aomod+5,??_dtoa+5
 13830  003772  C009  F02E         	movff	?___aomod+6,??_dtoa+6
 13831  003776  C00A  F02F         	movff	?___aomod+7,??_dtoa+7
 13832  00377A  C028  F015         	movff	??_dtoa,abs@a
 13833  00377E  C02A  F016         	movff	??_dtoa+2,abs@a+1
 13834  003782  EC45  F02E         	call	_abs	;wreg free
 13835  003786  5015               	movf	?_abs^0,w,c
 13836  003788  0F30               	addlw	48
 13837  00378A  6EDF               	movwf	indf2,c
 13838  00378C                     
 13839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 13840  00378C  0632               	decf	dtoa@p^0,f,c
 13841  00378E  A0D8               	btfss	status,0,c
 13842  003790  0633               	decf	(dtoa@p+1)^0,f,c
 13843  003792                     
 13844                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 13845  003792  0634               	decf	dtoa@w^0,f,c
 13846  003794  A0D8               	btfss	status,0,c
 13847  003796  0635               	decf	(dtoa@w+1)^0,f,c
 13848  003798                     
 13849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 13850  003798  C038  F003         	movff	dtoa@n,___aodiv@dividend
 13851  00379C  C039  F004         	movff	dtoa@n+1,___aodiv@dividend+1
 13852  0037A0  C03A  F005         	movff	dtoa@n+2,___aodiv@dividend+2
 13853  0037A4  C03B  F006         	movff	dtoa@n+3,___aodiv@dividend+3
 13854  0037A8  C03C  F007         	movff	dtoa@n+4,___aodiv@dividend+4
 13855  0037AC  C03D  F008         	movff	dtoa@n+5,___aodiv@dividend+5
 13856  0037B0  C03E  F009         	movff	dtoa@n+6,___aodiv@dividend+6
 13857  0037B4  C03F  F00A         	movff	dtoa@n+7,___aodiv@dividend+7
 13858  0037B8  0E0A               	movlw	10
 13859  0037BA  6E0B               	movwf	___aodiv@divisor^0,c
 13860  0037BC  0E00               	movlw	0
 13861  0037BE  6E0C               	movwf	(___aodiv@divisor+1)^0,c
 13862  0037C0  0E00               	movlw	0
 13863  0037C2  6E0D               	movwf	(___aodiv@divisor+2)^0,c
 13864  0037C4  0E00               	movlw	0
 13865  0037C6  6E0E               	movwf	(___aodiv@divisor+3)^0,c
 13866  0037C8  0E00               	movlw	0
 13867  0037CA  6E0F               	movwf	(___aodiv@divisor+4)^0,c
 13868  0037CC  0E00               	movlw	0
 13869  0037CE  6E10               	movwf	(___aodiv@divisor+5)^0,c
 13870  0037D0  0E00               	movlw	0
 13871  0037D2  6E11               	movwf	(___aodiv@divisor+6)^0,c
 13872  0037D4  0E00               	movlw	0
 13873  0037D6  6E12               	movwf	(___aodiv@divisor+7)^0,c
 13874  0037D8  EC9A  F022         	call	___aodiv	;wreg free
 13875  0037DC  C003  F038         	movff	?___aodiv,dtoa@n
 13876  0037E0  C004  F039         	movff	?___aodiv+1,dtoa@n+1
 13877  0037E4  C005  F03A         	movff	?___aodiv+2,dtoa@n+2
 13878  0037E8  C006  F03B         	movff	?___aodiv+3,dtoa@n+3
 13879  0037EC  C007  F03C         	movff	?___aodiv+4,dtoa@n+4
 13880  0037F0  C008  F03D         	movff	?___aodiv+5,dtoa@n+5
 13881  0037F4  C009  F03E         	movff	?___aodiv+6,dtoa@n+6
 13882  0037F8  C00A  F03F         	movff	?___aodiv+7,dtoa@n+7
 13883  0037FC                     l8150:
 13884                           
 13885                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13886  0037FC  BE41               	btfsc	(dtoa@i+1)^0,7,c
 13887  0037FE  EF09  F01C         	goto	u10371
 13888  003802  5041               	movf	(dtoa@i+1)^0,w,c
 13889  003804  E108               	bnz	u10370
 13890  003806  0440               	decf	dtoa@i^0,w,c
 13891  003808  A0D8               	btfss	status,0,c
 13892  00380A  EF09  F01C         	goto	u10371
 13893  00380E  EF0B  F01C         	goto	u10370
 13894  003812                     u10371:
 13895  003812  EF3C  F01C         	goto	l8160
 13896  003816                     u10370:
 13897  003816  5038               	movf	dtoa@n^0,w,c
 13898  003818  1039               	iorwf	(dtoa@n+1)^0,w,c
 13899  00381A  103A               	iorwf	(dtoa@n+2)^0,w,c
 13900  00381C  103B               	iorwf	(dtoa@n+3)^0,w,c
 13901  00381E  103C               	iorwf	(dtoa@n+4)^0,w,c
 13902  003820  103D               	iorwf	(dtoa@n+5)^0,w,c
 13903  003822  103E               	iorwf	(dtoa@n+6)^0,w,c
 13904  003824  103F               	iorwf	(dtoa@n+7)^0,w,c
 13905  003826  A4D8               	btfss	status,2,c
 13906  003828  EF18  F01C         	goto	u10381
 13907  00382C  EF1A  F01C         	goto	u10380
 13908  003830                     u10381:
 13909  003830  EF82  F01B         	goto	l8140
 13910  003834                     u10380:
 13911  003834  BE33               	btfsc	(dtoa@p+1)^0,7,c
 13912  003836  EF27  F01C         	goto	u10390
 13913  00383A  5033               	movf	(dtoa@p+1)^0,w,c
 13914  00383C  E106               	bnz	u10391
 13915  00383E  0432               	decf	dtoa@p^0,w,c
 13916  003840  B0D8               	btfsc	status,0,c
 13917  003842  EF25  F01C         	goto	u10391
 13918  003846  EF27  F01C         	goto	u10390
 13919  00384A                     u10391:
 13920  00384A  EF82  F01B         	goto	l8140
 13921  00384E                     u10390:
 13922  00384E  BE35               	btfsc	(dtoa@w+1)^0,7,c
 13923  003850  EF32  F01C         	goto	u10401
 13924  003854  5035               	movf	(dtoa@w+1)^0,w,c
 13925  003856  E108               	bnz	u10400
 13926  003858  0434               	decf	dtoa@w^0,w,c
 13927  00385A  A0D8               	btfss	status,0,c
 13928  00385C  EF32  F01C         	goto	u10401
 13929  003860  EF34  F01C         	goto	u10400
 13930  003864                     u10401:
 13931  003864  EF3C  F01C         	goto	l8160
 13932  003868                     u10400:
 13933  003868  0100               	movlb	0	; () banked
 13934  00386A  B3FC               	btfsc	_flags& (0+255),1,b
 13935  00386C  EF3A  F01C         	goto	u10411
 13936  003870  EF3C  F01C         	goto	u10410
 13937  003874                     u10411:
 13938  003874  EF82  F01B         	goto	l8140
 13939  003878                     u10410:
 13940  003878                     l8160:
 13941                           
 13942                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 13943  003878  5036               	movf	dtoa@s^0,w,c
 13944  00387A  1037               	iorwf	(dtoa@s+1)^0,w,c
 13945  00387C  A4D8               	btfss	status,2,c
 13946  00387E  EF43  F01C         	goto	u10421
 13947  003882  EF45  F01C         	goto	u10420
 13948  003886                     u10421:
 13949  003886  EF4D  F01C         	goto	l8164
 13950  00388A                     u10420:
 13951  00388A  0100               	movlb	0	; () banked
 13952  00388C  A5FC               	btfss	_flags& (0+255),2,b
 13953  00388E  EF4B  F01C         	goto	u10431
 13954  003892  EF4D  F01C         	goto	u10430
 13955  003896                     u10431:
 13956  003896  EF6B  F01C         	goto	l8174
 13957  00389A                     u10430:
 13958  00389A                     l8164:
 13959                           
 13960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 13961  00389A  0640               	decf	dtoa@i^0,f,c
 13962  00389C  A0D8               	btfss	status,0,c
 13963  00389E  0641               	decf	(dtoa@i+1)^0,f,c
 13964  0038A0                     
 13965                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 13966  0038A0  5036               	movf	dtoa@s^0,w,c
 13967  0038A2  1037               	iorwf	(dtoa@s+1)^0,w,c
 13968  0038A4  A4D8               	btfss	status,2,c
 13969  0038A6  EF57  F01C         	goto	u10441
 13970  0038AA  EF59  F01C         	goto	u10440
 13971  0038AE                     u10441:
 13972  0038AE  EF5F  F01C         	goto	l8170
 13973  0038B2                     u10440:
 13974  0038B2  0E00               	movlw	0
 13975  0038B4  6E31               	movwf	(_dtoa$1313+1)^0,c
 13976  0038B6  0E2B               	movlw	43
 13977  0038B8  6E30               	movwf	_dtoa$1313^0,c
 13978  0038BA  EF63  F01C         	goto	l8172
 13979  0038BE                     l8170:
 13980  0038BE  0E00               	movlw	0
 13981  0038C0  6E31               	movwf	(_dtoa$1313+1)^0,c
 13982  0038C2  0E2D               	movlw	45
 13983  0038C4  6E30               	movwf	_dtoa$1313^0,c
 13984  0038C6                     l8172:
 13985  0038C6  0E88               	movlw	low _dbuf
 13986  0038C8  2440               	addwf	dtoa@i^0,w,c
 13987  0038CA  6ED9               	movwf	fsr2l,c
 13988  0038CC  0E01               	movlw	high _dbuf
 13989  0038CE  2041               	addwfc	(dtoa@i+1)^0,w,c
 13990  0038D0  6EDA               	movwf	fsr2h,c
 13991  0038D2  C030  FFDF         	movff	_dtoa$1313,indf2
 13992  0038D6                     l8174:
 13993                           
 13994                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 13995  0038D6  C01E  F013         	movff	dtoa@fp,pad@fp
 13996  0038DA  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
 13997  0038DE  0E88               	movlw	low _dbuf
 13998  0038E0  2440               	addwf	dtoa@i^0,w,c
 13999  0038E2  6E15               	movwf	pad@buf^0,c
 14000  0038E4  0E01               	movlw	high _dbuf
 14001  0038E6  2041               	addwfc	(dtoa@i+1)^0,w,c
 14002  0038E8  6E16               	movwf	(pad@buf+1)^0,c
 14003  0038EA  C034  F017         	movff	dtoa@w,pad@p
 14004  0038EE  C035  F018         	movff	dtoa@w+1,pad@p+1
 14005  0038F2  EC20  F02A         	call	_pad	;wreg free
 14006  0038F6  C013  F01E         	movff	?_pad,?_dtoa
 14007  0038FA  C014  F01F         	movff	?_pad+1,?_dtoa+1
 14008  0038FE  0012               	return		;funcret
 14009  003900                     __end_of_dtoa:
 14010                           	opt callstack 0
 14011                           
 14012 ;; *************** function _abs *****************
 14013 ;; Defined at:
 14014 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 14015 ;; Parameters:    Size  Location     Type
 14016 ;;  a               2   20[COMRAM] int 
 14017 ;; Auto vars:     Size  Location     Type
 14018 ;;		None
 14019 ;; Return value:  Size  Location     Type
 14020 ;;                  2   20[COMRAM] int 
 14021 ;; Registers used:
 14022 ;;		wreg, status,2, status,0
 14023 ;; Tracked objects:
 14024 ;;		On entry : 0/0
 14025 ;;		On exit  : 0/0
 14026 ;;		Unchanged: 0/0
 14027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14028 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14030 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14031 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14032 ;;Total ram usage:        4 bytes
 14033 ;; Hardware stack levels used:    1
 14034 ;; Hardware stack levels required when called:    4
 14035 ;; This function calls:
 14036 ;;		Nothing
 14037 ;; This function is called by:
 14038 ;;		_dtoa
 14039 ;; This function uses a non-reentrant model
 14040 ;;
 14041                           
 14042                           	psect	text32
 14043  005C8A                     __ptext32:
 14044                           	opt callstack 0
 14045  005C8A                     _abs:
 14046                           	opt callstack 21
 14047  005C8A  BE16               	btfsc	(abs@a+1)^0,7,c
 14048  005C8C  EF52  F02E         	goto	u9070
 14049  005C90  5016               	movf	(abs@a+1)^0,w,c
 14050  005C92  E106               	bnz	u9071
 14051  005C94  0415               	decf	abs@a^0,w,c
 14052  005C96  B0D8               	btfsc	status,0,c
 14053  005C98  EF50  F02E         	goto	u9071
 14054  005C9C  EF52  F02E         	goto	u9070
 14055  005CA0                     u9071:
 14056  005CA0  EF60  F02E         	goto	l1501
 14057  005CA4                     u9070:
 14058  005CA4  C015  F017         	movff	abs@a,??_abs
 14059  005CA8  C016  F018         	movff	abs@a+1,??_abs+1
 14060  005CAC  1E17               	comf	??_abs^0,f,c
 14061  005CAE  1E18               	comf	(??_abs+1)^0,f,c
 14062  005CB0  4A17               	infsnz	??_abs^0,f,c
 14063  005CB2  2A18               	incf	(??_abs+1)^0,f,c
 14064  005CB4  C017  F015         	movff	??_abs,?_abs
 14065  005CB8  C018  F016         	movff	??_abs+1,?_abs+1
 14066  005CBC  EF64  F02E         	goto	l1504
 14067  005CC0                     l1501:
 14068  005CC0  C015  F015         	movff	abs@a,?_abs
 14069  005CC4  C016  F016         	movff	abs@a+1,?_abs+1
 14070  005CC8                     l1504:
 14071  005CC8  0012               	return		;funcret
 14072  005CCA                     __end_of_abs:
 14073                           	opt callstack 0
 14074                           
 14075 ;; *************** function ___aomod *****************
 14076 ;; Defined at:
 14077 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 14078 ;; Parameters:    Size  Location     Type
 14079 ;;  dividend        8    2[COMRAM] long long 
 14080 ;;  divisor         8   10[COMRAM] long long 
 14081 ;; Auto vars:     Size  Location     Type
 14082 ;;  sign            1   19[COMRAM] unsigned char 
 14083 ;;  counter         1   18[COMRAM] unsigned char 
 14084 ;; Return value:  Size  Location     Type
 14085 ;;                  8    2[COMRAM] long long 
 14086 ;; Registers used:
 14087 ;;		wreg, status,2, status,0
 14088 ;; Tracked objects:
 14089 ;;		On entry : 0/0
 14090 ;;		On exit  : 0/0
 14091 ;;		Unchanged: 0/0
 14092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14093 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14094 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14096 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14097 ;;Total ram usage:       18 bytes
 14098 ;; Hardware stack levels used:    1
 14099 ;; Hardware stack levels required when called:    4
 14100 ;; This function calls:
 14101 ;;		Nothing
 14102 ;; This function is called by:
 14103 ;;		_dtoa
 14104 ;; This function uses a non-reentrant model
 14105 ;;
 14106                           
 14107                           	psect	text33
 14108  0049BC                     __ptext33:
 14109                           	opt callstack 0
 14110  0049BC                     ___aomod:
 14111                           	opt callstack 21
 14112  0049BC  0E00               	movlw	0
 14113  0049BE  6E14               	movwf	___aomod@sign^0,c
 14114  0049C0  BE0A               	btfsc	(___aomod@dividend+7)^0,7,c
 14115  0049C2  EFE7  F024         	goto	u9440
 14116  0049C6  EFE5  F024         	goto	u9441
 14117  0049CA                     u9441:
 14118  0049CA  EFF9  F024         	goto	l7580
 14119  0049CE                     u9440:
 14120  0049CE  1E0A               	comf	(___aomod@dividend+7)^0,f,c
 14121  0049D0  1E09               	comf	(___aomod@dividend+6)^0,f,c
 14122  0049D2  1E08               	comf	(___aomod@dividend+5)^0,f,c
 14123  0049D4  1E07               	comf	(___aomod@dividend+4)^0,f,c
 14124  0049D6  1E06               	comf	(___aomod@dividend+3)^0,f,c
 14125  0049D8  1E05               	comf	(___aomod@dividend+2)^0,f,c
 14126  0049DA  1E04               	comf	(___aomod@dividend+1)^0,f,c
 14127  0049DC  6C03               	negf	___aomod@dividend^0,c
 14128  0049DE  0E00               	movlw	0
 14129  0049E0  2204               	addwfc	(___aomod@dividend+1)^0,f,c
 14130  0049E2  2205               	addwfc	(___aomod@dividend+2)^0,f,c
 14131  0049E4  2206               	addwfc	(___aomod@dividend+3)^0,f,c
 14132  0049E6  2207               	addwfc	(___aomod@dividend+4)^0,f,c
 14133  0049E8  2208               	addwfc	(___aomod@dividend+5)^0,f,c
 14134  0049EA  2209               	addwfc	(___aomod@dividend+6)^0,f,c
 14135  0049EC  220A               	addwfc	(___aomod@dividend+7)^0,f,c
 14136  0049EE  0E01               	movlw	1
 14137  0049F0  6E14               	movwf	___aomod@sign^0,c
 14138  0049F2                     l7580:
 14139  0049F2  BE12               	btfsc	(___aomod@divisor+7)^0,7,c
 14140  0049F4  EF00  F025         	goto	u9450
 14141  0049F8  EFFE  F024         	goto	u9451
 14142  0049FC                     u9451:
 14143  0049FC  EF10  F025         	goto	l7584
 14144  004A00                     u9450:
 14145  004A00  1E12               	comf	(___aomod@divisor+7)^0,f,c
 14146  004A02  1E11               	comf	(___aomod@divisor+6)^0,f,c
 14147  004A04  1E10               	comf	(___aomod@divisor+5)^0,f,c
 14148  004A06  1E0F               	comf	(___aomod@divisor+4)^0,f,c
 14149  004A08  1E0E               	comf	(___aomod@divisor+3)^0,f,c
 14150  004A0A  1E0D               	comf	(___aomod@divisor+2)^0,f,c
 14151  004A0C  1E0C               	comf	(___aomod@divisor+1)^0,f,c
 14152  004A0E  6C0B               	negf	___aomod@divisor^0,c
 14153  004A10  0E00               	movlw	0
 14154  004A12  220C               	addwfc	(___aomod@divisor+1)^0,f,c
 14155  004A14  220D               	addwfc	(___aomod@divisor+2)^0,f,c
 14156  004A16  220E               	addwfc	(___aomod@divisor+3)^0,f,c
 14157  004A18  220F               	addwfc	(___aomod@divisor+4)^0,f,c
 14158  004A1A  2210               	addwfc	(___aomod@divisor+5)^0,f,c
 14159  004A1C  2211               	addwfc	(___aomod@divisor+6)^0,f,c
 14160  004A1E  2212               	addwfc	(___aomod@divisor+7)^0,f,c
 14161  004A20                     l7584:
 14162  004A20  500B               	movf	___aomod@divisor^0,w,c
 14163  004A22  100C               	iorwf	(___aomod@divisor+1)^0,w,c
 14164  004A24  100D               	iorwf	(___aomod@divisor+2)^0,w,c
 14165  004A26  100E               	iorwf	(___aomod@divisor+3)^0,w,c
 14166  004A28  100F               	iorwf	(___aomod@divisor+4)^0,w,c
 14167  004A2A  1010               	iorwf	(___aomod@divisor+5)^0,w,c
 14168  004A2C  1011               	iorwf	(___aomod@divisor+6)^0,w,c
 14169  004A2E  1012               	iorwf	(___aomod@divisor+7)^0,w,c
 14170  004A30  B4D8               	btfsc	status,2,c
 14171  004A32  EF1D  F025         	goto	u9461
 14172  004A36  EF1F  F025         	goto	u9460
 14173  004A3A                     u9461:
 14174  004A3A  EF67  F025         	goto	l7600
 14175  004A3E                     u9460:
 14176  004A3E  0E01               	movlw	1
 14177  004A40  6E13               	movwf	___aomod@counter^0,c
 14178  004A42  EF2D  F025         	goto	l7590
 14179  004A46                     l7588:
 14180  004A46  90D8               	bcf	status,0,c
 14181  004A48  360B               	rlcf	___aomod@divisor^0,f,c
 14182  004A4A  360C               	rlcf	(___aomod@divisor+1)^0,f,c
 14183  004A4C  360D               	rlcf	(___aomod@divisor+2)^0,f,c
 14184  004A4E  360E               	rlcf	(___aomod@divisor+3)^0,f,c
 14185  004A50  360F               	rlcf	(___aomod@divisor+4)^0,f,c
 14186  004A52  3610               	rlcf	(___aomod@divisor+5)^0,f,c
 14187  004A54  3611               	rlcf	(___aomod@divisor+6)^0,f,c
 14188  004A56  3612               	rlcf	(___aomod@divisor+7)^0,f,c
 14189  004A58  2A13               	incf	___aomod@counter^0,f,c
 14190  004A5A                     l7590:
 14191  004A5A  AE12               	btfss	(___aomod@divisor+7)^0,7,c
 14192  004A5C  EF32  F025         	goto	u9471
 14193  004A60  EF34  F025         	goto	u9470
 14194  004A64                     u9471:
 14195  004A64  EF23  F025         	goto	l7588
 14196  004A68                     u9470:
 14197  004A68                     l7592:
 14198  004A68  500B               	movf	___aomod@divisor^0,w,c
 14199  004A6A  5C03               	subwf	___aomod@dividend^0,w,c
 14200  004A6C  500C               	movf	(___aomod@divisor+1)^0,w,c
 14201  004A6E  5804               	subwfb	(___aomod@dividend+1)^0,w,c
 14202  004A70  500D               	movf	(___aomod@divisor+2)^0,w,c
 14203  004A72  5805               	subwfb	(___aomod@dividend+2)^0,w,c
 14204  004A74  500E               	movf	(___aomod@divisor+3)^0,w,c
 14205  004A76  5806               	subwfb	(___aomod@dividend+3)^0,w,c
 14206  004A78  500F               	movf	(___aomod@divisor+4)^0,w,c
 14207  004A7A  5807               	subwfb	(___aomod@dividend+4)^0,w,c
 14208  004A7C  5010               	movf	(___aomod@divisor+5)^0,w,c
 14209  004A7E  5808               	subwfb	(___aomod@dividend+5)^0,w,c
 14210  004A80  5011               	movf	(___aomod@divisor+6)^0,w,c
 14211  004A82  5809               	subwfb	(___aomod@dividend+6)^0,w,c
 14212  004A84  5012               	movf	(___aomod@divisor+7)^0,w,c
 14213  004A86  580A               	subwfb	(___aomod@dividend+7)^0,w,c
 14214  004A88  A0D8               	btfss	status,0,c
 14215  004A8A  EF49  F025         	goto	u9481
 14216  004A8E  EF4B  F025         	goto	u9480
 14217  004A92                     u9481:
 14218  004A92  EF5B  F025         	goto	l7596
 14219  004A96                     u9480:
 14220  004A96  500B               	movf	___aomod@divisor^0,w,c
 14221  004A98  5E03               	subwf	___aomod@dividend^0,f,c
 14222  004A9A  500C               	movf	(___aomod@divisor+1)^0,w,c
 14223  004A9C  5A04               	subwfb	(___aomod@dividend+1)^0,f,c
 14224  004A9E  500D               	movf	(___aomod@divisor+2)^0,w,c
 14225  004AA0  5A05               	subwfb	(___aomod@dividend+2)^0,f,c
 14226  004AA2  500E               	movf	(___aomod@divisor+3)^0,w,c
 14227  004AA4  5A06               	subwfb	(___aomod@dividend+3)^0,f,c
 14228  004AA6  500F               	movf	(___aomod@divisor+4)^0,w,c
 14229  004AA8  5A07               	subwfb	(___aomod@dividend+4)^0,f,c
 14230  004AAA  5010               	movf	(___aomod@divisor+5)^0,w,c
 14231  004AAC  5A08               	subwfb	(___aomod@dividend+5)^0,f,c
 14232  004AAE  5011               	movf	(___aomod@divisor+6)^0,w,c
 14233  004AB0  5A09               	subwfb	(___aomod@dividend+6)^0,f,c
 14234  004AB2  5012               	movf	(___aomod@divisor+7)^0,w,c
 14235  004AB4  5A0A               	subwfb	(___aomod@dividend+7)^0,f,c
 14236  004AB6                     l7596:
 14237  004AB6  90D8               	bcf	status,0,c
 14238  004AB8  3212               	rrcf	(___aomod@divisor+7)^0,f,c
 14239  004ABA  3211               	rrcf	(___aomod@divisor+6)^0,f,c
 14240  004ABC  3210               	rrcf	(___aomod@divisor+5)^0,f,c
 14241  004ABE  320F               	rrcf	(___aomod@divisor+4)^0,f,c
 14242  004AC0  320E               	rrcf	(___aomod@divisor+3)^0,f,c
 14243  004AC2  320D               	rrcf	(___aomod@divisor+2)^0,f,c
 14244  004AC4  320C               	rrcf	(___aomod@divisor+1)^0,f,c
 14245  004AC6  320B               	rrcf	___aomod@divisor^0,f,c
 14246  004AC8  2E13               	decfsz	___aomod@counter^0,f,c
 14247  004ACA  EF34  F025         	goto	l7592
 14248  004ACE                     l7600:
 14249  004ACE  5014               	movf	___aomod@sign^0,w,c
 14250  004AD0  B4D8               	btfsc	status,2,c
 14251  004AD2  EF6D  F025         	goto	u9491
 14252  004AD6  EF6F  F025         	goto	u9490
 14253  004ADA                     u9491:
 14254  004ADA  EF7F  F025         	goto	l7604
 14255  004ADE                     u9490:
 14256  004ADE  1E0A               	comf	(___aomod@dividend+7)^0,f,c
 14257  004AE0  1E09               	comf	(___aomod@dividend+6)^0,f,c
 14258  004AE2  1E08               	comf	(___aomod@dividend+5)^0,f,c
 14259  004AE4  1E07               	comf	(___aomod@dividend+4)^0,f,c
 14260  004AE6  1E06               	comf	(___aomod@dividend+3)^0,f,c
 14261  004AE8  1E05               	comf	(___aomod@dividend+2)^0,f,c
 14262  004AEA  1E04               	comf	(___aomod@dividend+1)^0,f,c
 14263  004AEC  6C03               	negf	___aomod@dividend^0,c
 14264  004AEE  0E00               	movlw	0
 14265  004AF0  2204               	addwfc	(___aomod@dividend+1)^0,f,c
 14266  004AF2  2205               	addwfc	(___aomod@dividend+2)^0,f,c
 14267  004AF4  2206               	addwfc	(___aomod@dividend+3)^0,f,c
 14268  004AF6  2207               	addwfc	(___aomod@dividend+4)^0,f,c
 14269  004AF8  2208               	addwfc	(___aomod@dividend+5)^0,f,c
 14270  004AFA  2209               	addwfc	(___aomod@dividend+6)^0,f,c
 14271  004AFC  220A               	addwfc	(___aomod@dividend+7)^0,f,c
 14272  004AFE                     l7604:
 14273  004AFE  C003  F003         	movff	___aomod@dividend,?___aomod
 14274  004B02  C004  F004         	movff	___aomod@dividend+1,?___aomod+1
 14275  004B06  C005  F005         	movff	___aomod@dividend+2,?___aomod+2
 14276  004B0A  C006  F006         	movff	___aomod@dividend+3,?___aomod+3
 14277  004B0E  C007  F007         	movff	___aomod@dividend+4,?___aomod+4
 14278  004B12  C008  F008         	movff	___aomod@dividend+5,?___aomod+5
 14279  004B16  C009  F009         	movff	___aomod@dividend+6,?___aomod+6
 14280  004B1A  C00A  F00A         	movff	___aomod@dividend+7,?___aomod+7
 14281  004B1E  0012               	return		;funcret
 14282  004B20                     __end_of___aomod:
 14283                           	opt callstack 0
 14284                           
 14285 ;; *************** function ___aodiv *****************
 14286 ;; Defined at:
 14287 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 14288 ;; Parameters:    Size  Location     Type
 14289 ;;  dividend        8    2[COMRAM] long long 
 14290 ;;  divisor         8   10[COMRAM] long long 
 14291 ;; Auto vars:     Size  Location     Type
 14292 ;;  quotient        8   20[COMRAM] long long 
 14293 ;;  sign            1   19[COMRAM] unsigned char 
 14294 ;;  counter         1   18[COMRAM] unsigned char 
 14295 ;; Return value:  Size  Location     Type
 14296 ;;                  8    2[COMRAM] long long 
 14297 ;; Registers used:
 14298 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14299 ;; Tracked objects:
 14300 ;;		On entry : 0/0
 14301 ;;		On exit  : 0/0
 14302 ;;		Unchanged: 0/0
 14303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14304 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14305 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14307 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14308 ;;Total ram usage:       26 bytes
 14309 ;; Hardware stack levels used:    1
 14310 ;; Hardware stack levels required when called:    4
 14311 ;; This function calls:
 14312 ;;		Nothing
 14313 ;; This function is called by:
 14314 ;;		_dtoa
 14315 ;; This function uses a non-reentrant model
 14316 ;;
 14317                           
 14318                           	psect	text34
 14319  004534                     __ptext34:
 14320                           	opt callstack 0
 14321  004534                     ___aodiv:
 14322                           	opt callstack 21
 14323  004534  0E00               	movlw	0
 14324  004536  6E14               	movwf	___aodiv@sign^0,c
 14325  004538  BE12               	btfsc	(___aodiv@divisor+7)^0,7,c
 14326  00453A  EFA3  F022         	goto	u9370
 14327  00453E  EFA1  F022         	goto	u9371
 14328  004542                     u9371:
 14329  004542  EFB5  F022         	goto	l7536
 14330  004546                     u9370:
 14331  004546  1E12               	comf	(___aodiv@divisor+7)^0,f,c
 14332  004548  1E11               	comf	(___aodiv@divisor+6)^0,f,c
 14333  00454A  1E10               	comf	(___aodiv@divisor+5)^0,f,c
 14334  00454C  1E0F               	comf	(___aodiv@divisor+4)^0,f,c
 14335  00454E  1E0E               	comf	(___aodiv@divisor+3)^0,f,c
 14336  004550  1E0D               	comf	(___aodiv@divisor+2)^0,f,c
 14337  004552  1E0C               	comf	(___aodiv@divisor+1)^0,f,c
 14338  004554  6C0B               	negf	___aodiv@divisor^0,c
 14339  004556  0E00               	movlw	0
 14340  004558  220C               	addwfc	(___aodiv@divisor+1)^0,f,c
 14341  00455A  220D               	addwfc	(___aodiv@divisor+2)^0,f,c
 14342  00455C  220E               	addwfc	(___aodiv@divisor+3)^0,f,c
 14343  00455E  220F               	addwfc	(___aodiv@divisor+4)^0,f,c
 14344  004560  2210               	addwfc	(___aodiv@divisor+5)^0,f,c
 14345  004562  2211               	addwfc	(___aodiv@divisor+6)^0,f,c
 14346  004564  2212               	addwfc	(___aodiv@divisor+7)^0,f,c
 14347  004566  0E01               	movlw	1
 14348  004568  6E14               	movwf	___aodiv@sign^0,c
 14349  00456A                     l7536:
 14350  00456A  BE0A               	btfsc	(___aodiv@dividend+7)^0,7,c
 14351  00456C  EFBC  F022         	goto	u9380
 14352  004570  EFBA  F022         	goto	u9381
 14353  004574                     u9381:
 14354  004574  EFCE  F022         	goto	l7542
 14355  004578                     u9380:
 14356  004578  1E0A               	comf	(___aodiv@dividend+7)^0,f,c
 14357  00457A  1E09               	comf	(___aodiv@dividend+6)^0,f,c
 14358  00457C  1E08               	comf	(___aodiv@dividend+5)^0,f,c
 14359  00457E  1E07               	comf	(___aodiv@dividend+4)^0,f,c
 14360  004580  1E06               	comf	(___aodiv@dividend+3)^0,f,c
 14361  004582  1E05               	comf	(___aodiv@dividend+2)^0,f,c
 14362  004584  1E04               	comf	(___aodiv@dividend+1)^0,f,c
 14363  004586  6C03               	negf	___aodiv@dividend^0,c
 14364  004588  0E00               	movlw	0
 14365  00458A  2204               	addwfc	(___aodiv@dividend+1)^0,f,c
 14366  00458C  2205               	addwfc	(___aodiv@dividend+2)^0,f,c
 14367  00458E  2206               	addwfc	(___aodiv@dividend+3)^0,f,c
 14368  004590  2207               	addwfc	(___aodiv@dividend+4)^0,f,c
 14369  004592  2208               	addwfc	(___aodiv@dividend+5)^0,f,c
 14370  004594  2209               	addwfc	(___aodiv@dividend+6)^0,f,c
 14371  004596  220A               	addwfc	(___aodiv@dividend+7)^0,f,c
 14372  004598  0E01               	movlw	1
 14373  00459A  1A14               	xorwf	___aodiv@sign^0,f,c
 14374  00459C                     l7542:
 14375  00459C  EE20  F015         	lfsr	2,___aodiv@quotient
 14376  0045A0  0E07               	movlw	7
 14377  0045A2                     u9391:
 14378  0045A2  6ADE               	clrf	postinc2,c
 14379  0045A4  06E8               	decf	wreg,f,c
 14380  0045A6  E2FD               	bc	u9391
 14381  0045A8  500B               	movf	___aodiv@divisor^0,w,c
 14382  0045AA  100C               	iorwf	(___aodiv@divisor+1)^0,w,c
 14383  0045AC  100D               	iorwf	(___aodiv@divisor+2)^0,w,c
 14384  0045AE  100E               	iorwf	(___aodiv@divisor+3)^0,w,c
 14385  0045B0  100F               	iorwf	(___aodiv@divisor+4)^0,w,c
 14386  0045B2  1010               	iorwf	(___aodiv@divisor+5)^0,w,c
 14387  0045B4  1011               	iorwf	(___aodiv@divisor+6)^0,w,c
 14388  0045B6  1012               	iorwf	(___aodiv@divisor+7)^0,w,c
 14389  0045B8  B4D8               	btfsc	status,2,c
 14390  0045BA  EFE1  F022         	goto	u9401
 14391  0045BE  EFE3  F022         	goto	u9400
 14392  0045C2                     u9401:
 14393  0045C2  EF35  F023         	goto	l7564
 14394  0045C6                     u9400:
 14395  0045C6  0E01               	movlw	1
 14396  0045C8  6E13               	movwf	___aodiv@counter^0,c
 14397  0045CA  EFF1  F022         	goto	l7550
 14398  0045CE                     l7548:
 14399  0045CE  90D8               	bcf	status,0,c
 14400  0045D0  360B               	rlcf	___aodiv@divisor^0,f,c
 14401  0045D2  360C               	rlcf	(___aodiv@divisor+1)^0,f,c
 14402  0045D4  360D               	rlcf	(___aodiv@divisor+2)^0,f,c
 14403  0045D6  360E               	rlcf	(___aodiv@divisor+3)^0,f,c
 14404  0045D8  360F               	rlcf	(___aodiv@divisor+4)^0,f,c
 14405  0045DA  3610               	rlcf	(___aodiv@divisor+5)^0,f,c
 14406  0045DC  3611               	rlcf	(___aodiv@divisor+6)^0,f,c
 14407  0045DE  3612               	rlcf	(___aodiv@divisor+7)^0,f,c
 14408  0045E0  2A13               	incf	___aodiv@counter^0,f,c
 14409  0045E2                     l7550:
 14410  0045E2  AE12               	btfss	(___aodiv@divisor+7)^0,7,c
 14411  0045E4  EFF6  F022         	goto	u9411
 14412  0045E8  EFF8  F022         	goto	u9410
 14413  0045EC                     u9411:
 14414  0045EC  EFE7  F022         	goto	l7548
 14415  0045F0                     u9410:
 14416  0045F0                     l7552:
 14417  0045F0  90D8               	bcf	status,0,c
 14418  0045F2  3615               	rlcf	___aodiv@quotient^0,f,c
 14419  0045F4  3616               	rlcf	(___aodiv@quotient+1)^0,f,c
 14420  0045F6  3617               	rlcf	(___aodiv@quotient+2)^0,f,c
 14421  0045F8  3618               	rlcf	(___aodiv@quotient+3)^0,f,c
 14422  0045FA  3619               	rlcf	(___aodiv@quotient+4)^0,f,c
 14423  0045FC  361A               	rlcf	(___aodiv@quotient+5)^0,f,c
 14424  0045FE  361B               	rlcf	(___aodiv@quotient+6)^0,f,c
 14425  004600  361C               	rlcf	(___aodiv@quotient+7)^0,f,c
 14426  004602  500B               	movf	___aodiv@divisor^0,w,c
 14427  004604  5C03               	subwf	___aodiv@dividend^0,w,c
 14428  004606  500C               	movf	(___aodiv@divisor+1)^0,w,c
 14429  004608  5804               	subwfb	(___aodiv@dividend+1)^0,w,c
 14430  00460A  500D               	movf	(___aodiv@divisor+2)^0,w,c
 14431  00460C  5805               	subwfb	(___aodiv@dividend+2)^0,w,c
 14432  00460E  500E               	movf	(___aodiv@divisor+3)^0,w,c
 14433  004610  5806               	subwfb	(___aodiv@dividend+3)^0,w,c
 14434  004612  500F               	movf	(___aodiv@divisor+4)^0,w,c
 14435  004614  5807               	subwfb	(___aodiv@dividend+4)^0,w,c
 14436  004616  5010               	movf	(___aodiv@divisor+5)^0,w,c
 14437  004618  5808               	subwfb	(___aodiv@dividend+5)^0,w,c
 14438  00461A  5011               	movf	(___aodiv@divisor+6)^0,w,c
 14439  00461C  5809               	subwfb	(___aodiv@dividend+6)^0,w,c
 14440  00461E  5012               	movf	(___aodiv@divisor+7)^0,w,c
 14441  004620  580A               	subwfb	(___aodiv@dividend+7)^0,w,c
 14442  004622  A0D8               	btfss	status,0,c
 14443  004624  EF16  F023         	goto	u9421
 14444  004628  EF18  F023         	goto	u9420
 14445  00462C                     u9421:
 14446  00462C  EF29  F023         	goto	l7560
 14447  004630                     u9420:
 14448  004630  500B               	movf	___aodiv@divisor^0,w,c
 14449  004632  5E03               	subwf	___aodiv@dividend^0,f,c
 14450  004634  500C               	movf	(___aodiv@divisor+1)^0,w,c
 14451  004636  5A04               	subwfb	(___aodiv@dividend+1)^0,f,c
 14452  004638  500D               	movf	(___aodiv@divisor+2)^0,w,c
 14453  00463A  5A05               	subwfb	(___aodiv@dividend+2)^0,f,c
 14454  00463C  500E               	movf	(___aodiv@divisor+3)^0,w,c
 14455  00463E  5A06               	subwfb	(___aodiv@dividend+3)^0,f,c
 14456  004640  500F               	movf	(___aodiv@divisor+4)^0,w,c
 14457  004642  5A07               	subwfb	(___aodiv@dividend+4)^0,f,c
 14458  004644  5010               	movf	(___aodiv@divisor+5)^0,w,c
 14459  004646  5A08               	subwfb	(___aodiv@dividend+5)^0,f,c
 14460  004648  5011               	movf	(___aodiv@divisor+6)^0,w,c
 14461  00464A  5A09               	subwfb	(___aodiv@dividend+6)^0,f,c
 14462  00464C  5012               	movf	(___aodiv@divisor+7)^0,w,c
 14463  00464E  5A0A               	subwfb	(___aodiv@dividend+7)^0,f,c
 14464  004650  8015               	bsf	___aodiv@quotient^0,0,c
 14465  004652                     l7560:
 14466  004652  90D8               	bcf	status,0,c
 14467  004654  3212               	rrcf	(___aodiv@divisor+7)^0,f,c
 14468  004656  3211               	rrcf	(___aodiv@divisor+6)^0,f,c
 14469  004658  3210               	rrcf	(___aodiv@divisor+5)^0,f,c
 14470  00465A  320F               	rrcf	(___aodiv@divisor+4)^0,f,c
 14471  00465C  320E               	rrcf	(___aodiv@divisor+3)^0,f,c
 14472  00465E  320D               	rrcf	(___aodiv@divisor+2)^0,f,c
 14473  004660  320C               	rrcf	(___aodiv@divisor+1)^0,f,c
 14474  004662  320B               	rrcf	___aodiv@divisor^0,f,c
 14475  004664  2E13               	decfsz	___aodiv@counter^0,f,c
 14476  004666  EFF8  F022         	goto	l7552
 14477  00466A                     l7564:
 14478  00466A  5014               	movf	___aodiv@sign^0,w,c
 14479  00466C  B4D8               	btfsc	status,2,c
 14480  00466E  EF3B  F023         	goto	u9431
 14481  004672  EF3D  F023         	goto	u9430
 14482  004676                     u9431:
 14483  004676  EF4D  F023         	goto	l7568
 14484  00467A                     u9430:
 14485  00467A  1E1C               	comf	(___aodiv@quotient+7)^0,f,c
 14486  00467C  1E1B               	comf	(___aodiv@quotient+6)^0,f,c
 14487  00467E  1E1A               	comf	(___aodiv@quotient+5)^0,f,c
 14488  004680  1E19               	comf	(___aodiv@quotient+4)^0,f,c
 14489  004682  1E18               	comf	(___aodiv@quotient+3)^0,f,c
 14490  004684  1E17               	comf	(___aodiv@quotient+2)^0,f,c
 14491  004686  1E16               	comf	(___aodiv@quotient+1)^0,f,c
 14492  004688  6C15               	negf	___aodiv@quotient^0,c
 14493  00468A  0E00               	movlw	0
 14494  00468C  2216               	addwfc	(___aodiv@quotient+1)^0,f,c
 14495  00468E  2217               	addwfc	(___aodiv@quotient+2)^0,f,c
 14496  004690  2218               	addwfc	(___aodiv@quotient+3)^0,f,c
 14497  004692  2219               	addwfc	(___aodiv@quotient+4)^0,f,c
 14498  004694  221A               	addwfc	(___aodiv@quotient+5)^0,f,c
 14499  004696  221B               	addwfc	(___aodiv@quotient+6)^0,f,c
 14500  004698  221C               	addwfc	(___aodiv@quotient+7)^0,f,c
 14501  00469A                     l7568:
 14502  00469A  C015  F003         	movff	___aodiv@quotient,?___aodiv
 14503  00469E  C016  F004         	movff	___aodiv@quotient+1,?___aodiv+1
 14504  0046A2  C017  F005         	movff	___aodiv@quotient+2,?___aodiv+2
 14505  0046A6  C018  F006         	movff	___aodiv@quotient+3,?___aodiv+3
 14506  0046AA  C019  F007         	movff	___aodiv@quotient+4,?___aodiv+4
 14507  0046AE  C01A  F008         	movff	___aodiv@quotient+5,?___aodiv+5
 14508  0046B2  C01B  F009         	movff	___aodiv@quotient+6,?___aodiv+6
 14509  0046B6  C01C  F00A         	movff	___aodiv@quotient+7,?___aodiv+7
 14510  0046BA  0012               	return		;funcret
 14511  0046BC                     __end_of___aodiv:
 14512                           	opt callstack 0
 14513                           
 14514 ;; *************** function _ctoa *****************
 14515 ;; Defined at:
 14516 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 14517 ;; Parameters:    Size  Location     Type
 14518 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 14519 ;;		 -> vsnprintf@f(6), 
 14520 ;;  c               1   31[COMRAM] unsigned char 
 14521 ;; Auto vars:     Size  Location     Type
 14522 ;;  w               2   32[COMRAM] int 
 14523 ;;  l               2    0        int 
 14524 ;; Return value:  Size  Location     Type
 14525 ;;                  2   29[COMRAM] int 
 14526 ;; Registers used:
 14527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14528 ;; Tracked objects:
 14529 ;;		On entry : 0/0
 14530 ;;		On exit  : 0/0
 14531 ;;		Unchanged: 0/0
 14532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14533 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14534 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14536 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14537 ;;Total ram usage:        5 bytes
 14538 ;; Hardware stack levels used:    1
 14539 ;; Hardware stack levels required when called:    8
 14540 ;; This function calls:
 14541 ;;		_pad
 14542 ;; This function is called by:
 14543 ;;		_vfpfcnvrt
 14544 ;; This function uses a non-reentrant model
 14545 ;;
 14546                           
 14547                           	psect	text35
 14548  005A3A                     __ptext35:
 14549                           	opt callstack 0
 14550  005A3A                     _ctoa:
 14551                           	opt callstack 18
 14552  005A3A                     
 14553                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 14554  005A3A  0100               	movlb	0	; () banked
 14555  005A3C  51FA               	movf	_width& (0+255),w,b
 14556  005A3E  11FB               	iorwf	(_width+1)& (0+255),w,b
 14557  005A40  A4D8               	btfss	status,2,c
 14558  005A42  EF25  F02D         	goto	u10291
 14559  005A46  EF27  F02D         	goto	u10290
 14560  005A4A                     u10291:
 14561  005A4A  EF2D  F02D         	goto	l8106
 14562  005A4E                     u10290:
 14563  005A4E                     
 14564                           ; BSR set to: 0
 14565  005A4E  C0FA  F021         	movff	_width,ctoa@w
 14566  005A52  C0FB  F022         	movff	_width+1,ctoa@w+1
 14567  005A56  EF33  F02D         	goto	l8108
 14568  005A5A                     l8106:
 14569                           
 14570                           ; BSR set to: 0
 14571  005A5A  0EFF               	movlw	255
 14572  005A5C  25FA               	addwf	_width& (0+255),w,b
 14573  005A5E  6E21               	movwf	ctoa@w^0,c
 14574  005A60  0EFF               	movlw	255
 14575  005A62  21FB               	addwfc	(_width+1)& (0+255),w,b
 14576  005A64  6E22               	movwf	(ctoa@w+1)^0,c
 14577  005A66                     l8108:
 14578                           
 14579                           ; BSR set to: 0
 14580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 14581  005A66  C020  F188         	movff	ctoa@c,_dbuf
 14582  005A6A                     
 14583                           ; BSR set to: 0
 14584                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 14585  005A6A  0E00               	movlw	0
 14586  005A6C  0101               	movlb	1	; () banked
 14587  005A6E  6F89               	movwf	(_dbuf+1)& (0+255),b
 14588  005A70                     
 14589                           ; BSR set to: 1
 14590                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 14591  005A70  C01E  F013         	movff	ctoa@fp,pad@fp
 14592  005A74  C01F  F014         	movff	ctoa@fp+1,pad@fp+1
 14593  005A78  0E88               	movlw	low _dbuf
 14594  005A7A  6E15               	movwf	pad@buf^0,c
 14595  005A7C  0E01               	movlw	high _dbuf
 14596  005A7E  6E16               	movwf	(pad@buf+1)^0,c
 14597  005A80  C021  F017         	movff	ctoa@w,pad@p
 14598  005A84  C022  F018         	movff	ctoa@w+1,pad@p+1
 14599  005A88  EC20  F02A         	call	_pad	;wreg free
 14600  005A8C  C013  F01E         	movff	?_pad,?_ctoa
 14601  005A90  C014  F01F         	movff	?_pad+1,?_ctoa+1
 14602  005A94  0012               	return		;funcret
 14603  005A96                     __end_of_ctoa:
 14604                           	opt callstack 0
 14605                           
 14606 ;; *************** function _pad *****************
 14607 ;; Defined at:
 14608 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 14609 ;; Parameters:    Size  Location     Type
 14610 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
 14611 ;;		 -> vsnprintf@f(6), 
 14612 ;;  buf             2   20[COMRAM] PTR unsigned char 
 14613 ;;		 -> dbuf(80), 
 14614 ;;  p               2   22[COMRAM] int 
 14615 ;; Auto vars:     Size  Location     Type
 14616 ;;  w               2   27[COMRAM] int 
 14617 ;;  i               2   25[COMRAM] int 
 14618 ;; Return value:  Size  Location     Type
 14619 ;;                  2   18[COMRAM] int 
 14620 ;; Registers used:
 14621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14622 ;; Tracked objects:
 14623 ;;		On entry : 0/0
 14624 ;;		On exit  : 0/0
 14625 ;;		Unchanged: 0/0
 14626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14627 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14628 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14629 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14630 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14631 ;;Total ram usage:       11 bytes
 14632 ;; Hardware stack levels used:    1
 14633 ;; Hardware stack levels required when called:    7
 14634 ;; This function calls:
 14635 ;;		_fputc
 14636 ;;		_fputs
 14637 ;;		_strlen
 14638 ;; This function is called by:
 14639 ;;		_ctoa
 14640 ;;		_dtoa
 14641 ;;		_efgtoa
 14642 ;;		_otoa
 14643 ;;		_utoa
 14644 ;;		_xtoa
 14645 ;; This function uses a non-reentrant model
 14646 ;;
 14647                           
 14648                           	psect	text36
 14649  005440                     __ptext36:
 14650                           	opt callstack 0
 14651  005440                     _pad:
 14652                           	opt callstack 18
 14653  005440                     
 14654                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 14655  005440  0100               	movlb	0	; () banked
 14656  005442  A1FC               	btfss	_flags& (0+255),0,b
 14657  005444  EF26  F02A         	goto	u9031
 14658  005448  EF28  F02A         	goto	u9030
 14659  00544C                     u9031:
 14660  00544C  EF32  F02A         	goto	l7418
 14661  005450                     u9030:
 14662  005450                     
 14663                           ; BSR set to: 0
 14664                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 14665  005450  C015  F00C         	movff	pad@buf,fputs@s
 14666  005454  C016  F00D         	movff	pad@buf+1,fputs@s+1
 14667  005458  C013  F00E         	movff	pad@fp,fputs@fp
 14668  00545C  C014  F00F         	movff	pad@fp+1,fputs@fp+1
 14669  005460  EC02  F02E         	call	_fputs	;wreg free
 14670  005464                     l7418:
 14671                           
 14672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 14673  005464  BE18               	btfsc	(pad@p+1)^0,7,c
 14674  005466  EF37  F02A         	goto	u9041
 14675  00546A  EF39  F02A         	goto	u9040
 14676  00546E                     u9041:
 14677  00546E  EF3F  F02A         	goto	l7422
 14678  005472                     u9040:
 14679  005472  C017  F01C         	movff	pad@p,pad@w
 14680  005476  C018  F01D         	movff	pad@p+1,pad@w+1
 14681  00547A  EF43  F02A         	goto	l507
 14682  00547E                     l7422:
 14683  00547E  0E00               	movlw	0
 14684  005480  6E1D               	movwf	(pad@w+1)^0,c
 14685  005482  0E00               	movlw	0
 14686  005484  6E1C               	movwf	pad@w^0,c
 14687  005486                     l507:
 14688                           
 14689                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 14690  005486  0E00               	movlw	0
 14691  005488  6E1B               	movwf	(pad@i+1)^0,c
 14692  00548A  0E00               	movlw	0
 14693  00548C  6E1A               	movwf	pad@i^0,c
 14694                           
 14695                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14696  00548E  EF55  F02A         	goto	l7428
 14697  005492                     l7424:
 14698                           
 14699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 14700  005492  0E00               	movlw	0
 14701  005494  6E04               	movwf	(fputc@c+1)^0,c
 14702  005496  0E20               	movlw	32
 14703  005498  6E03               	movwf	fputc@c^0,c
 14704  00549A  C013  F005         	movff	pad@fp,fputc@fp
 14705  00549E  C014  F006         	movff	pad@fp+1,fputc@fp+1
 14706  0054A2  ECBB  F029         	call	_fputc	;wreg free
 14707  0054A6                     
 14708                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 14709  0054A6  4A1A               	infsnz	pad@i^0,f,c
 14710  0054A8  2A1B               	incf	(pad@i+1)^0,f,c
 14711  0054AA                     l7428:
 14712                           
 14713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14714  0054AA  501C               	movf	pad@w^0,w,c
 14715  0054AC  5C1A               	subwf	pad@i^0,w,c
 14716  0054AE  501B               	movf	(pad@i+1)^0,w,c
 14717  0054B0  0A80               	xorlw	128
 14718  0054B2  6E19               	movwf	??_pad^0,c
 14719  0054B4  501D               	movf	(pad@w+1)^0,w,c
 14720  0054B6  0A80               	xorlw	128
 14721  0054B8  5819               	subwfb	??_pad^0,w,c
 14722  0054BA  A0D8               	btfss	status,0,c
 14723  0054BC  EF62  F02A         	goto	u9051
 14724  0054C0  EF64  F02A         	goto	u9050
 14725  0054C4                     u9051:
 14726  0054C4  EF49  F02A         	goto	l7424
 14727  0054C8                     u9050:
 14728  0054C8                     
 14729                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 14730  0054C8  0100               	movlb	0	; () banked
 14731  0054CA  B1FC               	btfsc	_flags& (0+255),0,b
 14732  0054CC  EF6A  F02A         	goto	u9061
 14733  0054D0  EF6C  F02A         	goto	u9060
 14734  0054D4                     u9061:
 14735  0054D4  EF76  F02A         	goto	l7432
 14736  0054D8                     u9060:
 14737  0054D8                     
 14738                           ; BSR set to: 0
 14739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 14740  0054D8  C015  F00C         	movff	pad@buf,fputs@s
 14741  0054DC  C016  F00D         	movff	pad@buf+1,fputs@s+1
 14742  0054E0  C013  F00E         	movff	pad@fp,fputs@fp
 14743  0054E4  C014  F00F         	movff	pad@fp+1,fputs@fp+1
 14744  0054E8  EC02  F02E         	call	_fputs	;wreg free
 14745  0054EC                     l7432:
 14746                           
 14747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 14748  0054EC  C015  F003         	movff	pad@buf,strlen@s
 14749  0054F0  C016  F004         	movff	pad@buf+1,strlen@s+1
 14750  0054F4  EC10  F02F         	call	_strlen	;wreg free
 14751  0054F8  501C               	movf	pad@w^0,w,c
 14752  0054FA  2403               	addwf	?_strlen^0,w,c
 14753  0054FC  6E13               	movwf	?_pad^0,c
 14754  0054FE  501D               	movf	(pad@w+1)^0,w,c
 14755  005500  2004               	addwfc	(?_strlen+1)^0,w,c
 14756  005502  6E14               	movwf	(?_pad+1)^0,c
 14757  005504  0012               	return		;funcret
 14758  005506                     __end_of_pad:
 14759                           	opt callstack 0
 14760                           
 14761 ;; *************** function _strlen *****************
 14762 ;; Defined at:
 14763 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 14764 ;; Parameters:    Size  Location     Type
 14765 ;;  s               2    2[COMRAM] PTR const unsigned char 
 14766 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), tensao_in(4), 
 14767 ;; Auto vars:     Size  Location     Type
 14768 ;;  a               2    4[COMRAM] PTR const unsigned char 
 14769 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), tensao_in(4), 
 14770 ;; Return value:  Size  Location     Type
 14771 ;;                  2    2[COMRAM] unsigned int 
 14772 ;; Registers used:
 14773 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14774 ;; Tracked objects:
 14775 ;;		On entry : 0/0
 14776 ;;		On exit  : 0/0
 14777 ;;		Unchanged: 0/0
 14778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14779 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14780 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14782 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14783 ;;Total ram usage:        4 bytes
 14784 ;; Hardware stack levels used:    1
 14785 ;; Hardware stack levels required when called:    4
 14786 ;; This function calls:
 14787 ;;		Nothing
 14788 ;; This function is called by:
 14789 ;;		_pad
 14790 ;;		_stoa
 14791 ;; This function uses a non-reentrant model
 14792 ;;
 14793                           
 14794                           	psect	text37
 14795  005E20                     __ptext37:
 14796                           	opt callstack 0
 14797  005E20                     _strlen:
 14798                           	opt callstack 20
 14799  005E20  C003  F005         	movff	strlen@s,strlen@a
 14800  005E24  C004  F006         	movff	strlen@s+1,strlen@a+1
 14801  005E28  EF18  F02F         	goto	l7198
 14802  005E2C                     l7196:
 14803  005E2C  4A03               	infsnz	strlen@s^0,f,c
 14804  005E2E  2A04               	incf	(strlen@s+1)^0,f,c
 14805  005E30                     l7198:
 14806  005E30  C003  FFD9         	movff	strlen@s,fsr2l
 14807  005E34  C004  FFDA         	movff	strlen@s+1,fsr2h
 14808  005E38  50DF               	movf	indf2,w,c
 14809  005E3A  A4D8               	btfss	status,2,c
 14810  005E3C  EF22  F02F         	goto	u8591
 14811  005E40  EF24  F02F         	goto	u8590
 14812  005E44                     u8591:
 14813  005E44  EF16  F02F         	goto	l7196
 14814  005E48                     u8590:
 14815  005E48  5005               	movf	strlen@a^0,w,c
 14816  005E4A  5C03               	subwf	strlen@s^0,w,c
 14817  005E4C  6E03               	movwf	?_strlen^0,c
 14818  005E4E  5006               	movf	(strlen@a+1)^0,w,c
 14819  005E50  5804               	subwfb	(strlen@s+1)^0,w,c
 14820  005E52  6E04               	movwf	(?_strlen+1)^0,c
 14821  005E54  0012               	return		;funcret
 14822  005E56                     __end_of_strlen:
 14823                           	opt callstack 0
 14824                           
 14825 ;; *************** function _fputs *****************
 14826 ;; Defined at:
 14827 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 14828 ;; Parameters:    Size  Location     Type
 14829 ;;  s               2   11[COMRAM] PTR const unsigned char 
 14830 ;;		 -> dbuf(80), 
 14831 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
 14832 ;;		 -> vsnprintf@f(6), 
 14833 ;; Auto vars:     Size  Location     Type
 14834 ;;  i               2   16[COMRAM] int 
 14835 ;;  c               1   15[COMRAM] unsigned char 
 14836 ;; Return value:  Size  Location     Type
 14837 ;;                  2   11[COMRAM] int 
 14838 ;; Registers used:
 14839 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14840 ;; Tracked objects:
 14841 ;;		On entry : 0/0
 14842 ;;		On exit  : 0/0
 14843 ;;		Unchanged: 0/0
 14844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14845 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14846 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14848 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14849 ;;Total ram usage:        7 bytes
 14850 ;; Hardware stack levels used:    1
 14851 ;; Hardware stack levels required when called:    6
 14852 ;; This function calls:
 14853 ;;		_fputc
 14854 ;; This function is called by:
 14855 ;;		_pad
 14856 ;; This function uses a non-reentrant model
 14857 ;;
 14858                           
 14859                           	psect	text38
 14860  005C04                     __ptext38:
 14861                           	opt callstack 0
 14862  005C04                     _fputs:
 14863                           	opt callstack 18
 14864  005C04  0E00               	movlw	0
 14865  005C06  6E12               	movwf	(fputs@i+1)^0,c
 14866  005C08  0E00               	movlw	0
 14867  005C0A  6E11               	movwf	fputs@i^0,c
 14868  005C0C  EF13  F02E         	goto	l7192
 14869  005C10                     l7188:
 14870  005C10  C010  F003         	movff	fputs@c,fputc@c
 14871  005C14  6A04               	clrf	(fputc@c+1)^0,c
 14872  005C16  C00E  F005         	movff	fputs@fp,fputc@fp
 14873  005C1A  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
 14874  005C1E  ECBB  F029         	call	_fputc	;wreg free
 14875  005C22  4A11               	infsnz	fputs@i^0,f,c
 14876  005C24  2A12               	incf	(fputs@i+1)^0,f,c
 14877  005C26                     l7192:
 14878  005C26  5011               	movf	fputs@i^0,w,c
 14879  005C28  240C               	addwf	fputs@s^0,w,c
 14880  005C2A  6ED9               	movwf	fsr2l,c
 14881  005C2C  5012               	movf	(fputs@i+1)^0,w,c
 14882  005C2E  200D               	addwfc	(fputs@s+1)^0,w,c
 14883  005C30  6EDA               	movwf	fsr2h,c
 14884  005C32  50DF               	movf	indf2,w,c
 14885  005C34  6E10               	movwf	fputs@c^0,c
 14886  005C36  5010               	movf	fputs@c^0,w,c
 14887  005C38  A4D8               	btfss	status,2,c
 14888  005C3A  EF21  F02E         	goto	u8581
 14889  005C3E  EF23  F02E         	goto	u8580
 14890  005C42                     u8581:
 14891  005C42  EF08  F02E         	goto	l7188
 14892  005C46                     u8580:
 14893  005C46  0012               	return		;funcret
 14894  005C48                     __end_of_fputs:
 14895                           	opt callstack 0
 14896                           
 14897 ;; *************** function _fputc *****************
 14898 ;; Defined at:
 14899 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 14900 ;; Parameters:    Size  Location     Type
 14901 ;;  c               2    2[COMRAM] int 
 14902 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
 14903 ;;		 -> vsnprintf@f(6), 
 14904 ;; Auto vars:     Size  Location     Type
 14905 ;;		None
 14906 ;; Return value:  Size  Location     Type
 14907 ;;                  2    2[COMRAM] int 
 14908 ;; Registers used:
 14909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14910 ;; Tracked objects:
 14911 ;;		On entry : 0/0
 14912 ;;		On exit  : 0/0
 14913 ;;		Unchanged: 0/0
 14914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14915 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14917 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14918 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14919 ;;Total ram usage:        9 bytes
 14920 ;; Hardware stack levels used:    1
 14921 ;; Hardware stack levels required when called:    5
 14922 ;; This function calls:
 14923 ;;		_putch
 14924 ;; This function is called by:
 14925 ;;		_pad
 14926 ;;		_stoa
 14927 ;;		_vfpfcnvrt
 14928 ;;		_fputs
 14929 ;; This function uses a non-reentrant model
 14930 ;;
 14931                           
 14932                           	psect	text39
 14933  005376                     __ptext39:
 14934                           	opt callstack 0
 14935  005376                     _fputc:
 14936                           	opt callstack 18
 14937  005376  5005               	movf	fputc@fp^0,w,c
 14938  005378  1006               	iorwf	(fputc@fp+1)^0,w,c
 14939  00537A  B4D8               	btfsc	status,2,c
 14940  00537C  EFC2  F029         	goto	u8541
 14941  005380  EFC4  F029         	goto	u8540
 14942  005384                     u8541:
 14943  005384  EFCD  F029         	goto	l7176
 14944  005388                     u8540:
 14945  005388  5005               	movf	fputc@fp^0,w,c
 14946  00538A  1006               	iorwf	(fputc@fp+1)^0,w,c
 14947  00538C  A4D8               	btfss	status,2,c
 14948  00538E  EFCB  F029         	goto	u8551
 14949  005392  EFCD  F029         	goto	u8550
 14950  005396                     u8551:
 14951  005396  EFD2  F029         	goto	l7178
 14952  00539A                     u8550:
 14953  00539A                     l7176:
 14954  00539A  5003               	movf	fputc@c^0,w,c
 14955  00539C  EC1B  F030         	call	_putch
 14956  0053A0  EF1F  F02A         	goto	l1586
 14957  0053A4                     l7178:
 14958  0053A4  EE20 F004          	lfsr	2,4
 14959  0053A8  5005               	movf	fputc@fp^0,w,c
 14960  0053AA  26D9               	addwf	fsr2l,f,c
 14961  0053AC  5006               	movf	(fputc@fp+1)^0,w,c
 14962  0053AE  22DA               	addwfc	fsr2h,f,c
 14963  0053B0  50DE               	movf	postinc2,w,c
 14964  0053B2  10DE               	iorwf	postinc2,w,c
 14965  0053B4  B4D8               	btfsc	status,2,c
 14966  0053B6  EFDF  F029         	goto	u8561
 14967  0053BA  EFE1  F029         	goto	u8560
 14968  0053BE                     u8561:
 14969  0053BE  EFFC  F029         	goto	l7182
 14970  0053C2                     u8560:
 14971  0053C2  EE20 F004          	lfsr	2,4
 14972  0053C6  5005               	movf	fputc@fp^0,w,c
 14973  0053C8  26D9               	addwf	fsr2l,f,c
 14974  0053CA  5006               	movf	(fputc@fp+1)^0,w,c
 14975  0053CC  22DA               	addwfc	fsr2h,f,c
 14976  0053CE  EE10 F002          	lfsr	1,2
 14977  0053D2  5005               	movf	fputc@fp^0,w,c
 14978  0053D4  26E1               	addwf	fsr1l,f,c
 14979  0053D6  5006               	movf	(fputc@fp+1)^0,w,c
 14980  0053D8  22E2               	addwfc	fsr1h,f,c
 14981  0053DA  50DE               	movf	postinc2,w,c
 14982  0053DC  5CE6               	subwf	postinc1,w,c
 14983  0053DE  50E6               	movf	postinc1,w,c
 14984  0053E0  0A80               	xorlw	128
 14985  0053E2  6E0B               	movwf	(??_fputc+4)^0,c
 14986  0053E4  50DE               	movf	postinc2,w,c
 14987  0053E6  0A80               	xorlw	128
 14988  0053E8  580B               	subwfb	(??_fputc+4)^0,w,c
 14989  0053EA  B0D8               	btfsc	status,0,c
 14990  0053EC  EFFA  F029         	goto	u8571
 14991  0053F0  EFFC  F029         	goto	u8570
 14992  0053F4                     u8571:
 14993  0053F4  EF1F  F02A         	goto	l1586
 14994  0053F8                     u8570:
 14995  0053F8                     l7182:
 14996  0053F8  EE20 F002          	lfsr	2,2
 14997  0053FC  5005               	movf	fputc@fp^0,w,c
 14998  0053FE  26D9               	addwf	fsr2l,f,c
 14999  005400  5006               	movf	(fputc@fp+1)^0,w,c
 15000  005402  22DA               	addwfc	fsr2h,f,c
 15001  005404  CFDE F007          	movff	postinc2,??_fputc
 15002  005408  CFDD F008          	movff	postdec2,??_fputc+1
 15003  00540C  C005  FFD9         	movff	fputc@fp,fsr2l
 15004  005410  C006  FFDA         	movff	fputc@fp+1,fsr2h
 15005  005414  CFDE F009          	movff	postinc2,??_fputc+2
 15006  005418  CFDD F00A          	movff	postdec2,??_fputc+3
 15007  00541C  5007               	movf	??_fputc^0,w,c
 15008  00541E  2409               	addwf	(??_fputc+2)^0,w,c
 15009  005420  6ED9               	movwf	fsr2l,c
 15010  005422  5008               	movf	(??_fputc+1)^0,w,c
 15011  005424  200A               	addwfc	(??_fputc+3)^0,w,c
 15012  005426  6EDA               	movwf	fsr2h,c
 15013  005428  C003  FFDF         	movff	fputc@c,indf2
 15014  00542C  EE20 F002          	lfsr	2,2
 15015  005430  5005               	movf	fputc@fp^0,w,c
 15016  005432  26D9               	addwf	fsr2l,f,c
 15017  005434  5006               	movf	(fputc@fp+1)^0,w,c
 15018  005436  22DA               	addwfc	fsr2h,f,c
 15019  005438  2ADE               	incf	postinc2,f,c
 15020  00543A  0E00               	movlw	0
 15021  00543C  22DD               	addwfc	postdec2,f,c
 15022  00543E                     l1586:
 15023  00543E  0012               	return		;funcret
 15024  005440                     __end_of_fputc:
 15025                           	opt callstack 0
 15026                           
 15027 ;; *************** function _putch *****************
 15028 ;; Defined at:
 15029 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
 15030 ;; Parameters:    Size  Location     Type
 15031 ;;  c               1    wreg     unsigned char 
 15032 ;; Auto vars:     Size  Location     Type
 15033 ;;  c               1    0[COMRAM] unsigned char 
 15034 ;; Return value:  Size  Location     Type
 15035 ;;                  1    wreg      void 
 15036 ;; Registers used:
 15037 ;;		wreg
 15038 ;; Tracked objects:
 15039 ;;		On entry : 0/0
 15040 ;;		On exit  : 0/0
 15041 ;;		Unchanged: 0/0
 15042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15047 ;;Total ram usage:        0 bytes
 15048 ;; Hardware stack levels used:    1
 15049 ;; Hardware stack levels required when called:    4
 15050 ;; This function calls:
 15051 ;;		Nothing
 15052 ;; This function is called by:
 15053 ;;		_fputc
 15054 ;; This function uses a non-reentrant model
 15055 ;;
 15056                           
 15057                           	psect	text40
 15058  006036                     __ptext40:
 15059                           	opt callstack 0
 15060  006036                     _putch:
 15061                           	opt callstack 18
 15062  006036  0012               	return		;funcret
 15063  006038                     __end_of_putch:
 15064                           	opt callstack 0
 15065                           
 15066 ;; *************** function _atoi *****************
 15067 ;; Defined at:
 15068 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 15069 ;; Parameters:    Size  Location     Type
 15070 ;;  s               2    9[COMRAM] PTR const unsigned char 
 15071 ;;		 -> STR_6(15), STR_5(15), STR_4(22), STR_3(16), 
 15072 ;;		 -> STR_2(17), 
 15073 ;; Auto vars:     Size  Location     Type
 15074 ;;  n               2   22[COMRAM] int 
 15075 ;;  neg             2   15[COMRAM] int 
 15076 ;; Return value:  Size  Location     Type
 15077 ;;                  2    9[COMRAM] int 
 15078 ;; Registers used:
 15079 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15080 ;; Tracked objects:
 15081 ;;		On entry : 0/0
 15082 ;;		On exit  : 0/0
 15083 ;;		Unchanged: 0/0
 15084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15085 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15086 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15087 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15088 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15089 ;;Total ram usage:       15 bytes
 15090 ;; Hardware stack levels used:    1
 15091 ;; Hardware stack levels required when called:    5
 15092 ;; This function calls:
 15093 ;;		___wmul
 15094 ;;		_isdigit
 15095 ;;		_isspace
 15096 ;; This function is called by:
 15097 ;;		_vfpfcnvrt
 15098 ;; This function uses a non-reentrant model
 15099 ;;
 15100                           
 15101                           	psect	text41
 15102  00439A                     __ptext41:
 15103                           	opt callstack 0
 15104  00439A                     _atoi:
 15105                           	opt callstack 21
 15106  00439A  0E00               	movlw	0
 15107  00439C  6E18               	movwf	(atoi@n+1)^0,c
 15108  00439E  0E00               	movlw	0
 15109  0043A0  6E17               	movwf	atoi@n^0,c
 15110  0043A2  0E00               	movlw	0
 15111  0043A4  6E11               	movwf	(atoi@neg+1)^0,c
 15112  0043A6  0E00               	movlw	0
 15113  0043A8  6E10               	movwf	atoi@neg^0,c
 15114  0043AA  EFD9  F021         	goto	l8672
 15115  0043AE                     l8670:
 15116  0043AE  4A0A               	infsnz	atoi@s^0,f,c
 15117  0043B0  2A0B               	incf	(atoi@s+1)^0,f,c
 15118  0043B2                     l8672:
 15119  0043B2  0E01               	movlw	1
 15120  0043B4  6E16               	movwf	_atoi$1982^0,c
 15121  0043B6  C00A  FFF6         	movff	atoi@s,tblptrl
 15122  0043BA  C00B  FFF7         	movff	atoi@s+1,tblptrh
 15123  0043BE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15124  0043BE  6AF8               	clrf	tblptru,c
 15125  0043C0                     	endif
 15126  0043C0                     	if	0	;tblptru may be non-zero
 15127  0043C0                     	endif
 15128  0043C0  0008               	tblrd		*
 15129  0043C2  50F5               	movf	tablat,w,c
 15130  0043C4  0A20               	xorlw	32
 15131  0043C6  B4D8               	btfsc	status,2,c
 15132  0043C8  EFE8  F021         	goto	u11401
 15133  0043CC  EFEA  F021         	goto	u11400
 15134  0043D0                     u11401:
 15135  0043D0  EF08  F022         	goto	l8680
 15136  0043D4                     u11400:
 15137  0043D4  0EF7               	movlw	247
 15138  0043D6  6E0C               	movwf	??_atoi^0,c
 15139  0043D8  0EFF               	movlw	255
 15140  0043DA  6E0D               	movwf	(??_atoi+1)^0,c
 15141  0043DC  C00A  FFF6         	movff	atoi@s,tblptrl
 15142  0043E0  C00B  FFF7         	movff	atoi@s+1,tblptrh
 15143  0043E4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15144  0043E4  6AF8               	clrf	tblptru,c
 15145  0043E6                     	endif
 15146  0043E6                     	if	0	;tblptru may be non-zero
 15147  0043E6                     	endif
 15148  0043E6  0008               	tblrd		*
 15149  0043E8  50F5               	movf	tablat,w,c
 15150  0043EA  6E0E               	movwf	(??_atoi+2)^0,c
 15151  0043EC  6A0F               	clrf	(??_atoi+3)^0,c
 15152  0043EE  500C               	movf	??_atoi^0,w,c
 15153  0043F0  260E               	addwf	(??_atoi+2)^0,f,c
 15154  0043F2  500D               	movf	(??_atoi+1)^0,w,c
 15155  0043F4  220F               	addwfc	(??_atoi+3)^0,f,c
 15156  0043F6  500F               	movf	(??_atoi+3)^0,w,c
 15157  0043F8  E109               	bnz	u11410
 15158  0043FA  0E05               	movlw	5
 15159  0043FC  5C0E               	subwf	(??_atoi+2)^0,w,c
 15160  0043FE  A0D8               	btfss	status,0,c
 15161  004400  EF04  F022         	goto	u11411
 15162  004404  EF06  F022         	goto	u11410
 15163  004408                     u11411:
 15164  004408  EF08  F022         	goto	l8680
 15165  00440C                     u11410:
 15166  00440C  0E00               	movlw	0
 15167  00440E  6E16               	movwf	_atoi$1982^0,c
 15168  004410                     l8680:
 15169  004410  C016  F012         	movff	_atoi$1982,_atoi$1981
 15170  004414  6A13               	clrf	(_atoi$1981+1)^0,c
 15171  004416  5012               	movf	_atoi$1981^0,w,c
 15172  004418  1013               	iorwf	(_atoi$1981+1)^0,w,c
 15173  00441A  A4D8               	btfss	status,2,c
 15174  00441C  EF12  F022         	goto	u11421
 15175  004420  EF14  F022         	goto	u11420
 15176  004424                     u11421:
 15177  004424  EFD7  F021         	goto	l8670
 15178  004428                     u11420:
 15179  004428  EF1E  F022         	goto	l8690
 15180  00442C                     l8686:
 15181  00442C  0E00               	movlw	0
 15182  00442E  6E11               	movwf	(atoi@neg+1)^0,c
 15183  004430  0E01               	movlw	1
 15184  004432  6E10               	movwf	atoi@neg^0,c
 15185  004434                     l8688:
 15186  004434  4A0A               	infsnz	atoi@s^0,f,c
 15187  004436  2A0B               	incf	(atoi@s+1)^0,f,c
 15188  004438  EF55  F022         	goto	l8696
 15189  00443C                     l8690:
 15190  00443C  C00A  FFF6         	movff	atoi@s,tblptrl
 15191  004440  C00B  FFF7         	movff	atoi@s+1,tblptrh
 15192  004444                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15193  004444  6AF8               	clrf	tblptru,c
 15194  004446                     	endif
 15195  004446                     	if	0	;tblptru may be non-zero
 15196  004446                     	endif
 15197  004446  0008               	tblrd		*
 15198  004448  50F5               	movf	tablat,w,c
 15199  00444A  6E0C               	movwf	??_atoi^0,c
 15200  00444C  6A0D               	clrf	(??_atoi+1)^0,c
 15201                           
 15202                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15203                           ; Switch size 1, requested type "simple"
 15204                           ; Number of cases is 1, Range of values is 0 to 0
 15205                           ; switch strategies available:
 15206                           ; Name         Instructions Cycles
 15207                           ; simple_byte            4     3 (average)
 15208                           ;	Chosen strategy is simple_byte
 15209  00444E  500D               	movf	(??_atoi+1)^0,w,c
 15210  004450  0A00               	xorlw	0	; case 0
 15211  004452  B4D8               	btfsc	status,2,c
 15212  004454  EF2E  F022         	goto	l9260
 15213  004458  EF55  F022         	goto	l8696
 15214  00445C                     l9260:
 15215                           
 15216                           ; Switch size 1, requested type "simple"
 15217                           ; Number of cases is 2, Range of values is 43 to 45
 15218                           ; switch strategies available:
 15219                           ; Name         Instructions Cycles
 15220                           ; simple_byte            7     4 (average)
 15221                           ;	Chosen strategy is simple_byte
 15222  00445C  500C               	movf	??_atoi^0,w,c
 15223  00445E  0A2B               	xorlw	43	; case 43
 15224  004460  B4D8               	btfsc	status,2,c
 15225  004462  EF1A  F022         	goto	l8688
 15226  004466  0A06               	xorlw	6	; case 45
 15227  004468  B4D8               	btfsc	status,2,c
 15228  00446A  EF16  F022         	goto	l8686
 15229  00446E  EF55  F022         	goto	l8696
 15230  004472                     l8692:
 15231  004472  C017  F003         	movff	atoi@n,___wmul@multiplier
 15232  004476  C018  F004         	movff	atoi@n+1,___wmul@multiplier+1
 15233  00447A  0E00               	movlw	0
 15234  00447C  6E06               	movwf	(___wmul@multiplicand+1)^0,c
 15235  00447E  0E0A               	movlw	10
 15236  004480  6E05               	movwf	___wmul@multiplicand^0,c
 15237  004482  ECA3  F02F         	call	___wmul	;wreg free
 15238  004486  C00A  FFF6         	movff	atoi@s,tblptrl
 15239  00448A  C00B  FFF7         	movff	atoi@s+1,tblptrh
 15240  00448E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15241  00448E  6AF8               	clrf	tblptru,c
 15242  004490                     	endif
 15243  004490                     	if	0	;tblptru may be non-zero
 15244  004490                     	endif
 15245  004490  0008               	tblrd		*
 15246  004492  50F5               	movf	tablat,w,c
 15247  004494  5E03               	subwf	?___wmul^0,f,c
 15248  004496  0E00               	movlw	0
 15249  004498  5A04               	subwfb	(?___wmul+1)^0,f,c
 15250  00449A  0E30               	movlw	48
 15251  00449C  2403               	addwf	?___wmul^0,w,c
 15252  00449E  6E17               	movwf	atoi@n^0,c
 15253  0044A0  0E00               	movlw	0
 15254  0044A2  2004               	addwfc	(?___wmul+1)^0,w,c
 15255  0044A4  6E18               	movwf	(atoi@n+1)^0,c
 15256  0044A6  EF1A  F022         	goto	l8688
 15257  0044AA                     l8696:
 15258  0044AA  0ED0               	movlw	208
 15259  0044AC  6E0C               	movwf	??_atoi^0,c
 15260  0044AE  0EFF               	movlw	255
 15261  0044B0  6E0D               	movwf	(??_atoi+1)^0,c
 15262  0044B2  C00A  FFF6         	movff	atoi@s,tblptrl
 15263  0044B6  C00B  FFF7         	movff	atoi@s+1,tblptrh
 15264  0044BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15265  0044BA  6AF8               	clrf	tblptru,c
 15266  0044BC                     	endif
 15267  0044BC                     	if	0	;tblptru may be non-zero
 15268  0044BC                     	endif
 15269  0044BC  0008               	tblrd		*
 15270  0044BE  50F5               	movf	tablat,w,c
 15271  0044C0  6E0E               	movwf	(??_atoi+2)^0,c
 15272  0044C2  6A0F               	clrf	(??_atoi+3)^0,c
 15273  0044C4  500C               	movf	??_atoi^0,w,c
 15274  0044C6  260E               	addwf	(??_atoi+2)^0,f,c
 15275  0044C8  500D               	movf	(??_atoi+1)^0,w,c
 15276  0044CA  220F               	addwfc	(??_atoi+3)^0,f,c
 15277  0044CC  500F               	movf	(??_atoi+3)^0,w,c
 15278  0044CE  E10A               	bnz	u11430
 15279  0044D0  0E0A               	movlw	10
 15280  0044D2  5C0E               	subwf	(??_atoi+2)^0,w,c
 15281  0044D4  A0D8               	btfss	status,0,c
 15282  0044D6  EF6F  F022         	goto	u11431
 15283  0044DA  EF72  F022         	goto	u11430
 15284  0044DE                     u11431:
 15285  0044DE  0E01               	movlw	1
 15286  0044E0  EF73  F022         	goto	u11440
 15287  0044E4                     u11430:
 15288  0044E4  0E00               	movlw	0
 15289  0044E6                     u11440:
 15290  0044E6  6E14               	movwf	_atoi$1983^0,c
 15291  0044E8  6A15               	clrf	(_atoi$1983+1)^0,c
 15292  0044EA  5014               	movf	_atoi$1983^0,w,c
 15293  0044EC  1015               	iorwf	(_atoi$1983+1)^0,w,c
 15294  0044EE  A4D8               	btfss	status,2,c
 15295  0044F0  EF7C  F022         	goto	u11451
 15296  0044F4  EF7E  F022         	goto	u11450
 15297  0044F8                     u11451:
 15298  0044F8  EF39  F022         	goto	l8692
 15299  0044FC                     u11450:
 15300  0044FC  5010               	movf	atoi@neg^0,w,c
 15301  0044FE  1011               	iorwf	(atoi@neg+1)^0,w,c
 15302  004500  A4D8               	btfss	status,2,c
 15303  004502  EF85  F022         	goto	u11461
 15304  004506  EF87  F022         	goto	u11460
 15305  00450A                     u11461:
 15306  00450A  EF95  F022         	goto	l1532
 15307  00450E                     u11460:
 15308  00450E  C017  F00C         	movff	atoi@n,??_atoi
 15309  004512  C018  F00D         	movff	atoi@n+1,??_atoi+1
 15310  004516  1E0C               	comf	??_atoi^0,f,c
 15311  004518  1E0D               	comf	(??_atoi+1)^0,f,c
 15312  00451A  4A0C               	infsnz	??_atoi^0,f,c
 15313  00451C  2A0D               	incf	(??_atoi+1)^0,f,c
 15314  00451E  C00C  F00A         	movff	??_atoi,?_atoi
 15315  004522  C00D  F00B         	movff	??_atoi+1,?_atoi+1
 15316  004526  EF99  F022         	goto	l1535
 15317  00452A                     l1532:
 15318  00452A  C017  F00A         	movff	atoi@n,?_atoi
 15319  00452E  C018  F00B         	movff	atoi@n+1,?_atoi+1
 15320  004532                     l1535:
 15321  004532  0012               	return		;funcret
 15322  004534                     __end_of_atoi:
 15323                           	opt callstack 0
 15324                           
 15325 ;; *************** function _isspace *****************
 15326 ;; Defined at:
 15327 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 15328 ;; Parameters:    Size  Location     Type
 15329 ;;  c               2    2[COMRAM] int 
 15330 ;; Auto vars:     Size  Location     Type
 15331 ;;		None
 15332 ;; Return value:  Size  Location     Type
 15333 ;;                  2    2[COMRAM] int 
 15334 ;; Registers used:
 15335 ;;		wreg, status,2, status,0
 15336 ;; Tracked objects:
 15337 ;;		On entry : 0/0
 15338 ;;		On exit  : 0/0
 15339 ;;		Unchanged: 0/0
 15340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15341 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15342 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15343 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15344 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15345 ;;Total ram usage:        7 bytes
 15346 ;; Hardware stack levels used:    1
 15347 ;; Hardware stack levels required when called:    4
 15348 ;; This function calls:
 15349 ;;		Nothing
 15350 ;; This function is called by:
 15351 ;;		_atoi
 15352 ;; This function uses a non-reentrant model
 15353 ;;
 15354                           
 15355                           	psect	text42
 15356  005A96                     __ptext42:
 15357                           	opt callstack 0
 15358  005A96                     _isspace:
 15359                           	opt callstack 21
 15360  005A96  0E01               	movlw	1
 15361  005A98  6E09               	movwf	_isspace$2021^0,c
 15362  005A9A  0E20               	movlw	32
 15363  005A9C  1803               	xorwf	isspace@c^0,w,c
 15364  005A9E  1004               	iorwf	(isspace@c+1)^0,w,c
 15365  005AA0  B4D8               	btfsc	status,2,c
 15366  005AA2  EF55  F02D         	goto	u10271
 15367  005AA6  EF57  F02D         	goto	u10270
 15368  005AAA                     u10271:
 15369  005AAA  EF70  F02D         	goto	l8098
 15370  005AAE                     u10270:
 15371  005AAE  0EF7               	movlw	247
 15372  005AB0  6E05               	movwf	??_isspace^0,c
 15373  005AB2  0EFF               	movlw	255
 15374  005AB4  6E06               	movwf	(??_isspace+1)^0,c
 15375  005AB6  C003  F007         	movff	isspace@c,??_isspace+2
 15376  005ABA  C004  F008         	movff	isspace@c+1,??_isspace+3
 15377  005ABE  5005               	movf	??_isspace^0,w,c
 15378  005AC0  2607               	addwf	(??_isspace+2)^0,f,c
 15379  005AC2  5006               	movf	(??_isspace+1)^0,w,c
 15380  005AC4  2208               	addwfc	(??_isspace+3)^0,f,c
 15381  005AC6  5008               	movf	(??_isspace+3)^0,w,c
 15382  005AC8  E109               	bnz	u10280
 15383  005ACA  0E05               	movlw	5
 15384  005ACC  5C07               	subwf	(??_isspace+2)^0,w,c
 15385  005ACE  A0D8               	btfss	status,0,c
 15386  005AD0  EF6C  F02D         	goto	u10281
 15387  005AD4  EF6E  F02D         	goto	u10280
 15388  005AD8                     u10281:
 15389  005AD8  EF70  F02D         	goto	l8098
 15390  005ADC                     u10280:
 15391  005ADC  0E00               	movlw	0
 15392  005ADE  6E09               	movwf	_isspace$2021^0,c
 15393  005AE0                     l8098:
 15394  005AE0  C009  F003         	movff	_isspace$2021,?_isspace
 15395  005AE4  6A04               	clrf	(?_isspace+1)^0,c
 15396  005AE6  0012               	return		;funcret
 15397  005AE8                     __end_of_isspace:
 15398                           	opt callstack 0
 15399                           
 15400 ;; *************** function _isdigit *****************
 15401 ;; Defined at:
 15402 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 15403 ;; Parameters:    Size  Location     Type
 15404 ;;  c               2    2[COMRAM] int 
 15405 ;; Auto vars:     Size  Location     Type
 15406 ;;		None
 15407 ;; Return value:  Size  Location     Type
 15408 ;;                  2    2[COMRAM] int 
 15409 ;; Registers used:
 15410 ;;		wreg, status,2, status,0
 15411 ;; Tracked objects:
 15412 ;;		On entry : 0/0
 15413 ;;		On exit  : 0/0
 15414 ;;		Unchanged: 0/0
 15415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15416 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15418 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15419 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15420 ;;Total ram usage:        6 bytes
 15421 ;; Hardware stack levels used:    1
 15422 ;; Hardware stack levels required when called:    4
 15423 ;; This function calls:
 15424 ;;		Nothing
 15425 ;; This function is called by:
 15426 ;;		_vfpfcnvrt
 15427 ;;		_atoi
 15428 ;; This function uses a non-reentrant model
 15429 ;;
 15430                           
 15431                           	psect	text43
 15432  005DE8                     __ptext43:
 15433                           	opt callstack 0
 15434  005DE8                     _isdigit:
 15435                           	opt callstack 22
 15436  005DE8  0ED0               	movlw	208
 15437  005DEA  6E05               	movwf	??_isdigit^0,c
 15438  005DEC  0EFF               	movlw	255
 15439  005DEE  6E06               	movwf	(??_isdigit+1)^0,c
 15440  005DF0  C003  F007         	movff	isdigit@c,??_isdigit+2
 15441  005DF4  C004  F008         	movff	isdigit@c+1,??_isdigit+3
 15442  005DF8  5005               	movf	??_isdigit^0,w,c
 15443  005DFA  2607               	addwf	(??_isdigit+2)^0,f,c
 15444  005DFC  5006               	movf	(??_isdigit+1)^0,w,c
 15445  005DFE  2208               	addwfc	(??_isdigit+3)^0,f,c
 15446  005E00  5008               	movf	(??_isdigit+3)^0,w,c
 15447  005E02  E10A               	bnz	u9350
 15448  005E04  0E0A               	movlw	10
 15449  005E06  5C07               	subwf	(??_isdigit+2)^0,w,c
 15450  005E08  A0D8               	btfss	status,0,c
 15451  005E0A  EF09  F02F         	goto	u9351
 15452  005E0E  EF0C  F02F         	goto	u9350
 15453  005E12                     u9351:
 15454  005E12  0E01               	movlw	1
 15455  005E14  EF0D  F02F         	goto	u9360
 15456  005E18                     u9350:
 15457  005E18  0E00               	movlw	0
 15458  005E1A                     u9360:
 15459  005E1A  6E03               	movwf	?_isdigit^0,c
 15460  005E1C  6A04               	clrf	(?_isdigit+1)^0,c
 15461  005E1E  0012               	return		;funcret
 15462  005E20                     __end_of_isdigit:
 15463                           	opt callstack 0
 15464                           
 15465 ;; *************** function ___wmul *****************
 15466 ;; Defined at:
 15467 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 15468 ;; Parameters:    Size  Location     Type
 15469 ;;  multiplier      2    2[COMRAM] unsigned int 
 15470 ;;  multiplicand    2    4[COMRAM] unsigned int 
 15471 ;; Auto vars:     Size  Location     Type
 15472 ;;  product         2    6[COMRAM] unsigned int 
 15473 ;; Return value:  Size  Location     Type
 15474 ;;                  2    2[COMRAM] unsigned int 
 15475 ;; Registers used:
 15476 ;;		wreg, status,2, status,0, prodl, prodh
 15477 ;; Tracked objects:
 15478 ;;		On entry : 0/0
 15479 ;;		On exit  : 0/0
 15480 ;;		Unchanged: 0/0
 15481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15482 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15483 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15485 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15486 ;;Total ram usage:        6 bytes
 15487 ;; Hardware stack levels used:    1
 15488 ;; Hardware stack levels required when called:    4
 15489 ;; This function calls:
 15490 ;;		Nothing
 15491 ;; This function is called by:
 15492 ;;		_atoi
 15493 ;; This function uses a non-reentrant model
 15494 ;;
 15495                           
 15496                           	psect	text44
 15497  005F46                     __ptext44:
 15498                           	opt callstack 0
 15499  005F46                     ___wmul:
 15500                           	opt callstack 21
 15501  005F46  5003               	movf	___wmul@multiplier^0,w,c
 15502  005F48  0205               	mulwf	___wmul@multiplicand^0,c
 15503  005F4A  CFF3 F007          	movff	prodl,___wmul@product
 15504  005F4E  CFF4 F008          	movff	prodh,___wmul@product+1
 15505  005F52  5003               	movf	___wmul@multiplier^0,w,c
 15506  005F54  0206               	mulwf	(___wmul@multiplicand+1)^0,c
 15507  005F56  50F3               	movf	243,w,c
 15508  005F58  2608               	addwf	(___wmul@product+1)^0,f,c
 15509  005F5A  5004               	movf	(___wmul@multiplier+1)^0,w,c
 15510  005F5C  0205               	mulwf	___wmul@multiplicand^0,c
 15511  005F5E  50F3               	movf	243,w,c
 15512  005F60  2608               	addwf	(___wmul@product+1)^0,f,c
 15513  005F62  C007  F003         	movff	___wmul@product,?___wmul
 15514  005F66  C008  F004         	movff	___wmul@product+1,?___wmul+1
 15515  005F6A  0012               	return		;funcret
 15516  005F6C                     __end_of___wmul:
 15517                           	opt callstack 0
 15518                           
 15519 ;; *************** function _lcd_init *****************
 15520 ;; Defined at:
 15521 ;;		line 34 in file "lib_ili9341.c"
 15522 ;; Parameters:    Size  Location     Type
 15523 ;;		None
 15524 ;; Auto vars:     Size  Location     Type
 15525 ;;		None
 15526 ;; Return value:  Size  Location     Type
 15527 ;;                  1    wreg      void 
 15528 ;; Registers used:
 15529 ;;		wreg, status,2, status,0, cstack
 15530 ;; Tracked objects:
 15531 ;;		On entry : 0/0
 15532 ;;		On exit  : 0/0
 15533 ;;		Unchanged: 0/0
 15534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15539 ;;Total ram usage:        0 bytes
 15540 ;; Hardware stack levels used:    1
 15541 ;; Hardware stack levels required when called:    9
 15542 ;; This function calls:
 15543 ;;		_lcd_fill
 15544 ;;		_lcd_send
 15545 ;;		_msDelay
 15546 ;; This function is called by:
 15547 ;;		_main
 15548 ;; This function uses a non-reentrant model
 15549 ;;
 15550                           
 15551                           	psect	text45
 15552  003294                     __ptext45:
 15553                           	opt callstack 0
 15554  003294                     _lcd_init:
 15555                           	opt callstack 21
 15556  003294                     
 15557                           ;lib_ili9341.c: 37:     lcd_send(0, 0x01);
 15558  003294  0E01               	movlw	1
 15559  003296  6E04               	movwf	lcd_send@value^0,c
 15560  003298  0E00               	movlw	0
 15561  00329A  ECD0  F02F         	call	_lcd_send
 15562  00329E                     
 15563                           ;lib_ili9341.c: 38:     msDelay(150);
 15564  00329E  0E96               	movlw	150
 15565  0032A0  EC5F  F02F         	call	_msDelay
 15566  0032A4                     
 15567                           ;lib_ili9341.c: 40:     lcd_send(0,0xEF);
 15568  0032A4  0EEF               	movlw	239
 15569  0032A6  6E04               	movwf	lcd_send@value^0,c
 15570  0032A8  0E00               	movlw	0
 15571  0032AA  ECD0  F02F         	call	_lcd_send
 15572  0032AE                     
 15573                           ;lib_ili9341.c: 41:     lcd_send(1,0x03);
 15574  0032AE  0E03               	movlw	3
 15575  0032B0  6E04               	movwf	lcd_send@value^0,c
 15576  0032B2  0E01               	movlw	1
 15577  0032B4  ECD0  F02F         	call	_lcd_send
 15578  0032B8                     
 15579                           ;lib_ili9341.c: 42:     lcd_send(1,0x80);
 15580  0032B8  0E80               	movlw	128
 15581  0032BA  6E04               	movwf	lcd_send@value^0,c
 15582  0032BC  0E01               	movlw	1
 15583  0032BE  ECD0  F02F         	call	_lcd_send
 15584  0032C2                     
 15585                           ;lib_ili9341.c: 43:     lcd_send(1,0x02);
 15586  0032C2  0E02               	movlw	2
 15587  0032C4  6E04               	movwf	lcd_send@value^0,c
 15588  0032C6  0E01               	movlw	1
 15589  0032C8  ECD0  F02F         	call	_lcd_send
 15590  0032CC                     
 15591                           ;lib_ili9341.c: 44:     lcd_send(0,0xCF);
 15592  0032CC  0ECF               	movlw	207
 15593  0032CE  6E04               	movwf	lcd_send@value^0,c
 15594  0032D0  0E00               	movlw	0
 15595  0032D2  ECD0  F02F         	call	_lcd_send
 15596  0032D6                     
 15597                           ;lib_ili9341.c: 45:     lcd_send(1,0x00);
 15598  0032D6  0E00               	movlw	0
 15599  0032D8  6E04               	movwf	lcd_send@value^0,c
 15600  0032DA  0E01               	movlw	1
 15601  0032DC  ECD0  F02F         	call	_lcd_send
 15602  0032E0                     
 15603                           ;lib_ili9341.c: 46:     lcd_send(1,0XC1);
 15604  0032E0  0EC1               	movlw	193
 15605  0032E2  6E04               	movwf	lcd_send@value^0,c
 15606  0032E4  0E01               	movlw	1
 15607  0032E6  ECD0  F02F         	call	_lcd_send
 15608  0032EA                     
 15609                           ;lib_ili9341.c: 47:     lcd_send(1,0X30);
 15610  0032EA  0E30               	movlw	48
 15611  0032EC  6E04               	movwf	lcd_send@value^0,c
 15612  0032EE  0E01               	movlw	1
 15613  0032F0  ECD0  F02F         	call	_lcd_send
 15614  0032F4                     
 15615                           ;lib_ili9341.c: 48:     lcd_send(0,0xED);
 15616  0032F4  0EED               	movlw	237
 15617  0032F6  6E04               	movwf	lcd_send@value^0,c
 15618  0032F8  0E00               	movlw	0
 15619  0032FA  ECD0  F02F         	call	_lcd_send
 15620  0032FE                     
 15621                           ;lib_ili9341.c: 49:     lcd_send(1,0x64);
 15622  0032FE  0E64               	movlw	100
 15623  003300  6E04               	movwf	lcd_send@value^0,c
 15624  003302  0E01               	movlw	1
 15625  003304  ECD0  F02F         	call	_lcd_send
 15626  003308                     
 15627                           ;lib_ili9341.c: 50:     lcd_send(1,0x03);
 15628  003308  0E03               	movlw	3
 15629  00330A  6E04               	movwf	lcd_send@value^0,c
 15630  00330C  0E01               	movlw	1
 15631  00330E  ECD0  F02F         	call	_lcd_send
 15632  003312                     
 15633                           ;lib_ili9341.c: 51:     lcd_send(1,0X12);
 15634  003312  0E12               	movlw	18
 15635  003314  6E04               	movwf	lcd_send@value^0,c
 15636  003316  0E01               	movlw	1
 15637  003318  ECD0  F02F         	call	_lcd_send
 15638  00331C                     
 15639                           ;lib_ili9341.c: 52:     lcd_send(1,0X81);
 15640  00331C  0E81               	movlw	129
 15641  00331E  6E04               	movwf	lcd_send@value^0,c
 15642  003320  0E01               	movlw	1
 15643  003322  ECD0  F02F         	call	_lcd_send
 15644  003326                     
 15645                           ;lib_ili9341.c: 53:     lcd_send(0,0xE8);
 15646  003326  0EE8               	movlw	232
 15647  003328  6E04               	movwf	lcd_send@value^0,c
 15648  00332A  0E00               	movlw	0
 15649  00332C  ECD0  F02F         	call	_lcd_send
 15650  003330                     
 15651                           ;lib_ili9341.c: 54:     lcd_send(1,0x85);
 15652  003330  0E85               	movlw	133
 15653  003332  6E04               	movwf	lcd_send@value^0,c
 15654  003334  0E01               	movlw	1
 15655  003336  ECD0  F02F         	call	_lcd_send
 15656  00333A                     
 15657                           ;lib_ili9341.c: 55:     lcd_send(1,0x00);
 15658  00333A  0E00               	movlw	0
 15659  00333C  6E04               	movwf	lcd_send@value^0,c
 15660  00333E  0E01               	movlw	1
 15661  003340  ECD0  F02F         	call	_lcd_send
 15662  003344                     
 15663                           ;lib_ili9341.c: 56:     lcd_send(1,0x78);
 15664  003344  0E78               	movlw	120
 15665  003346  6E04               	movwf	lcd_send@value^0,c
 15666  003348  0E01               	movlw	1
 15667  00334A  ECD0  F02F         	call	_lcd_send
 15668  00334E                     
 15669                           ;lib_ili9341.c: 57:     lcd_send(0,0xCB);
 15670  00334E  0ECB               	movlw	203
 15671  003350  6E04               	movwf	lcd_send@value^0,c
 15672  003352  0E00               	movlw	0
 15673  003354  ECD0  F02F         	call	_lcd_send
 15674  003358                     
 15675                           ;lib_ili9341.c: 58:     lcd_send(1,0x39);
 15676  003358  0E39               	movlw	57
 15677  00335A  6E04               	movwf	lcd_send@value^0,c
 15678  00335C  0E01               	movlw	1
 15679  00335E  ECD0  F02F         	call	_lcd_send
 15680  003362                     
 15681                           ;lib_ili9341.c: 59:     lcd_send(1,0x2C);
 15682  003362  0E2C               	movlw	44
 15683  003364  6E04               	movwf	lcd_send@value^0,c
 15684  003366  0E01               	movlw	1
 15685  003368  ECD0  F02F         	call	_lcd_send
 15686  00336C                     
 15687                           ;lib_ili9341.c: 60:     lcd_send(1,0x00);
 15688  00336C  0E00               	movlw	0
 15689  00336E  6E04               	movwf	lcd_send@value^0,c
 15690  003370  0E01               	movlw	1
 15691  003372  ECD0  F02F         	call	_lcd_send
 15692  003376                     
 15693                           ;lib_ili9341.c: 61:     lcd_send(1,0x34);
 15694  003376  0E34               	movlw	52
 15695  003378  6E04               	movwf	lcd_send@value^0,c
 15696  00337A  0E01               	movlw	1
 15697  00337C  ECD0  F02F         	call	_lcd_send
 15698  003380                     
 15699                           ;lib_ili9341.c: 62:     lcd_send(1,0x02);
 15700  003380  0E02               	movlw	2
 15701  003382  6E04               	movwf	lcd_send@value^0,c
 15702  003384  0E01               	movlw	1
 15703  003386  ECD0  F02F         	call	_lcd_send
 15704  00338A                     
 15705                           ;lib_ili9341.c: 63:     lcd_send(0,0xF7);
 15706  00338A  0EF7               	movlw	247
 15707  00338C  6E04               	movwf	lcd_send@value^0,c
 15708  00338E  0E00               	movlw	0
 15709  003390  ECD0  F02F         	call	_lcd_send
 15710  003394                     
 15711                           ;lib_ili9341.c: 64:     lcd_send(1,0x20);
 15712  003394  0E20               	movlw	32
 15713  003396  6E04               	movwf	lcd_send@value^0,c
 15714  003398  0E01               	movlw	1
 15715  00339A  ECD0  F02F         	call	_lcd_send
 15716  00339E                     
 15717                           ;lib_ili9341.c: 65:     lcd_send(0,0xEA);
 15718  00339E  0EEA               	movlw	234
 15719  0033A0  6E04               	movwf	lcd_send@value^0,c
 15720  0033A2  0E00               	movlw	0
 15721  0033A4  ECD0  F02F         	call	_lcd_send
 15722  0033A8                     
 15723                           ;lib_ili9341.c: 66:     lcd_send(1,0x00);
 15724  0033A8  0E00               	movlw	0
 15725  0033AA  6E04               	movwf	lcd_send@value^0,c
 15726  0033AC  0E01               	movlw	1
 15727  0033AE  ECD0  F02F         	call	_lcd_send
 15728  0033B2                     
 15729                           ;lib_ili9341.c: 67:     lcd_send(1,0x00);
 15730  0033B2  0E00               	movlw	0
 15731  0033B4  6E04               	movwf	lcd_send@value^0,c
 15732  0033B6  0E01               	movlw	1
 15733  0033B8  ECD0  F02F         	call	_lcd_send
 15734  0033BC                     
 15735                           ;lib_ili9341.c: 68:     lcd_send(0,0xC0);
 15736  0033BC  0EC0               	movlw	192
 15737  0033BE  6E04               	movwf	lcd_send@value^0,c
 15738  0033C0  0E00               	movlw	0
 15739  0033C2  ECD0  F02F         	call	_lcd_send
 15740  0033C6                     
 15741                           ;lib_ili9341.c: 69:     lcd_send(1,0x23);
 15742  0033C6  0E23               	movlw	35
 15743  0033C8  6E04               	movwf	lcd_send@value^0,c
 15744  0033CA  0E01               	movlw	1
 15745  0033CC  ECD0  F02F         	call	_lcd_send
 15746  0033D0                     
 15747                           ;lib_ili9341.c: 70:     lcd_send(0,0xC1);
 15748  0033D0  0EC1               	movlw	193
 15749  0033D2  6E04               	movwf	lcd_send@value^0,c
 15750  0033D4  0E00               	movlw	0
 15751  0033D6  ECD0  F02F         	call	_lcd_send
 15752  0033DA                     
 15753                           ;lib_ili9341.c: 71:     lcd_send(1,0x10);
 15754  0033DA  0E10               	movlw	16
 15755  0033DC  6E04               	movwf	lcd_send@value^0,c
 15756  0033DE  0E01               	movlw	1
 15757  0033E0  ECD0  F02F         	call	_lcd_send
 15758  0033E4                     
 15759                           ;lib_ili9341.c: 72:     lcd_send(0,0xC5);
 15760  0033E4  0EC5               	movlw	197
 15761  0033E6  6E04               	movwf	lcd_send@value^0,c
 15762  0033E8  0E00               	movlw	0
 15763  0033EA  ECD0  F02F         	call	_lcd_send
 15764  0033EE                     
 15765                           ;lib_ili9341.c: 73:     lcd_send(1,0x3e);
 15766  0033EE  0E3E               	movlw	62
 15767  0033F0  6E04               	movwf	lcd_send@value^0,c
 15768  0033F2  0E01               	movlw	1
 15769  0033F4  ECD0  F02F         	call	_lcd_send
 15770  0033F8                     
 15771                           ;lib_ili9341.c: 74:     lcd_send(1,0x28);
 15772  0033F8  0E28               	movlw	40
 15773  0033FA  6E04               	movwf	lcd_send@value^0,c
 15774  0033FC  0E01               	movlw	1
 15775  0033FE  ECD0  F02F         	call	_lcd_send
 15776  003402                     
 15777                           ;lib_ili9341.c: 75:     lcd_send(0,0xC7);
 15778  003402  0EC7               	movlw	199
 15779  003404  6E04               	movwf	lcd_send@value^0,c
 15780  003406  0E00               	movlw	0
 15781  003408  ECD0  F02F         	call	_lcd_send
 15782  00340C                     
 15783                           ;lib_ili9341.c: 76:     lcd_send(1,0x86);
 15784  00340C  0E86               	movlw	134
 15785  00340E  6E04               	movwf	lcd_send@value^0,c
 15786  003410  0E01               	movlw	1
 15787  003412  ECD0  F02F         	call	_lcd_send
 15788  003416                     
 15789                           ;lib_ili9341.c: 77:     lcd_send(0,0x36);
 15790  003416  0E36               	movlw	54
 15791  003418  6E04               	movwf	lcd_send@value^0,c
 15792  00341A  0E00               	movlw	0
 15793  00341C  ECD0  F02F         	call	_lcd_send
 15794  003420                     
 15795                           ;lib_ili9341.c: 78:     lcd_send(1,0x48);
 15796  003420  0E48               	movlw	72
 15797  003422  6E04               	movwf	lcd_send@value^0,c
 15798  003424  0E01               	movlw	1
 15799  003426  ECD0  F02F         	call	_lcd_send
 15800  00342A                     
 15801                           ;lib_ili9341.c: 79:     lcd_send(0,0x3A);
 15802  00342A  0E3A               	movlw	58
 15803  00342C  6E04               	movwf	lcd_send@value^0,c
 15804  00342E  0E00               	movlw	0
 15805  003430  ECD0  F02F         	call	_lcd_send
 15806  003434                     
 15807                           ;lib_ili9341.c: 80:     lcd_send(1,0x55);
 15808  003434  0E55               	movlw	85
 15809  003436  6E04               	movwf	lcd_send@value^0,c
 15810  003438  0E01               	movlw	1
 15811  00343A  ECD0  F02F         	call	_lcd_send
 15812  00343E                     
 15813                           ;lib_ili9341.c: 81:     lcd_send(0,0xB1);
 15814  00343E  0EB1               	movlw	177
 15815  003440  6E04               	movwf	lcd_send@value^0,c
 15816  003442  0E00               	movlw	0
 15817  003444  ECD0  F02F         	call	_lcd_send
 15818  003448                     
 15819                           ;lib_ili9341.c: 82:     lcd_send(1,0x00);
 15820  003448  0E00               	movlw	0
 15821  00344A  6E04               	movwf	lcd_send@value^0,c
 15822  00344C  0E01               	movlw	1
 15823  00344E  ECD0  F02F         	call	_lcd_send
 15824  003452                     
 15825                           ;lib_ili9341.c: 83:     lcd_send(1,0x18);
 15826  003452  0E18               	movlw	24
 15827  003454  6E04               	movwf	lcd_send@value^0,c
 15828  003456  0E01               	movlw	1
 15829  003458  ECD0  F02F         	call	_lcd_send
 15830  00345C                     
 15831                           ;lib_ili9341.c: 84:     lcd_send(0,0xB6);
 15832  00345C  0EB6               	movlw	182
 15833  00345E  6E04               	movwf	lcd_send@value^0,c
 15834  003460  0E00               	movlw	0
 15835  003462  ECD0  F02F         	call	_lcd_send
 15836  003466                     
 15837                           ;lib_ili9341.c: 85:     lcd_send(1,0x08);
 15838  003466  0E08               	movlw	8
 15839  003468  6E04               	movwf	lcd_send@value^0,c
 15840  00346A  0E01               	movlw	1
 15841  00346C  ECD0  F02F         	call	_lcd_send
 15842  003470                     
 15843                           ;lib_ili9341.c: 86:     lcd_send(1,0x82);
 15844  003470  0E82               	movlw	130
 15845  003472  6E04               	movwf	lcd_send@value^0,c
 15846  003474  0E01               	movlw	1
 15847  003476  ECD0  F02F         	call	_lcd_send
 15848  00347A                     
 15849                           ;lib_ili9341.c: 87:     lcd_send(1,0x27);
 15850  00347A  0E27               	movlw	39
 15851  00347C  6E04               	movwf	lcd_send@value^0,c
 15852  00347E  0E01               	movlw	1
 15853  003480  ECD0  F02F         	call	_lcd_send
 15854  003484                     
 15855                           ;lib_ili9341.c: 88:     lcd_send(0,0xF2);
 15856  003484  0EF2               	movlw	242
 15857  003486  6E04               	movwf	lcd_send@value^0,c
 15858  003488  0E00               	movlw	0
 15859  00348A  ECD0  F02F         	call	_lcd_send
 15860  00348E                     
 15861                           ;lib_ili9341.c: 89:     lcd_send(1,0x00);
 15862  00348E  0E00               	movlw	0
 15863  003490  6E04               	movwf	lcd_send@value^0,c
 15864  003492  0E01               	movlw	1
 15865  003494  ECD0  F02F         	call	_lcd_send
 15866  003498                     
 15867                           ;lib_ili9341.c: 90:     lcd_send(0,0x26);
 15868  003498  0E26               	movlw	38
 15869  00349A  6E04               	movwf	lcd_send@value^0,c
 15870  00349C  0E00               	movlw	0
 15871  00349E  ECD0  F02F         	call	_lcd_send
 15872  0034A2                     
 15873                           ;lib_ili9341.c: 91:     lcd_send(1,0x01);
 15874  0034A2  0E01               	movlw	1
 15875  0034A4  6E04               	movwf	lcd_send@value^0,c
 15876  0034A6  0E01               	movlw	1
 15877  0034A8  ECD0  F02F         	call	_lcd_send
 15878  0034AC                     
 15879                           ;lib_ili9341.c: 92:     lcd_send(0,0xE0);
 15880  0034AC  0EE0               	movlw	224
 15881  0034AE  6E04               	movwf	lcd_send@value^0,c
 15882  0034B0  0E00               	movlw	0
 15883  0034B2  ECD0  F02F         	call	_lcd_send
 15884  0034B6                     
 15885                           ;lib_ili9341.c: 93:     lcd_send(1,0x0F);
 15886  0034B6  0E0F               	movlw	15
 15887  0034B8  6E04               	movwf	lcd_send@value^0,c
 15888  0034BA  0E01               	movlw	1
 15889  0034BC  ECD0  F02F         	call	_lcd_send
 15890  0034C0                     
 15891                           ;lib_ili9341.c: 94:     lcd_send(1,0x31);
 15892  0034C0  0E31               	movlw	49
 15893  0034C2  6E04               	movwf	lcd_send@value^0,c
 15894  0034C4  0E01               	movlw	1
 15895  0034C6  ECD0  F02F         	call	_lcd_send
 15896  0034CA                     
 15897                           ;lib_ili9341.c: 95:     lcd_send(1,0x2B);
 15898  0034CA  0E2B               	movlw	43
 15899  0034CC  6E04               	movwf	lcd_send@value^0,c
 15900  0034CE  0E01               	movlw	1
 15901  0034D0  ECD0  F02F         	call	_lcd_send
 15902  0034D4                     
 15903                           ;lib_ili9341.c: 96:     lcd_send(1,0x0C);
 15904  0034D4  0E0C               	movlw	12
 15905  0034D6  6E04               	movwf	lcd_send@value^0,c
 15906  0034D8  0E01               	movlw	1
 15907  0034DA  ECD0  F02F         	call	_lcd_send
 15908  0034DE                     
 15909                           ;lib_ili9341.c: 97:     lcd_send(1,0x0E);
 15910  0034DE  0E0E               	movlw	14
 15911  0034E0  6E04               	movwf	lcd_send@value^0,c
 15912  0034E2  0E01               	movlw	1
 15913  0034E4  ECD0  F02F         	call	_lcd_send
 15914  0034E8                     
 15915                           ;lib_ili9341.c: 98:     lcd_send(1,0x08);
 15916  0034E8  0E08               	movlw	8
 15917  0034EA  6E04               	movwf	lcd_send@value^0,c
 15918  0034EC  0E01               	movlw	1
 15919  0034EE  ECD0  F02F         	call	_lcd_send
 15920  0034F2                     
 15921                           ;lib_ili9341.c: 99:     lcd_send(1,0x4E);
 15922  0034F2  0E4E               	movlw	78
 15923  0034F4  6E04               	movwf	lcd_send@value^0,c
 15924  0034F6  0E01               	movlw	1
 15925  0034F8  ECD0  F02F         	call	_lcd_send
 15926  0034FC                     
 15927                           ;lib_ili9341.c: 100:     lcd_send(1,0xF1);
 15928  0034FC  0EF1               	movlw	241
 15929  0034FE  6E04               	movwf	lcd_send@value^0,c
 15930  003500  0E01               	movlw	1
 15931  003502  ECD0  F02F         	call	_lcd_send
 15932  003506                     
 15933                           ;lib_ili9341.c: 101:     lcd_send(1,0x37);
 15934  003506  0E37               	movlw	55
 15935  003508  6E04               	movwf	lcd_send@value^0,c
 15936  00350A  0E01               	movlw	1
 15937  00350C  ECD0  F02F         	call	_lcd_send
 15938  003510                     
 15939                           ;lib_ili9341.c: 102:     lcd_send(1,0x07);
 15940  003510  0E07               	movlw	7
 15941  003512  6E04               	movwf	lcd_send@value^0,c
 15942  003514  0E01               	movlw	1
 15943  003516  ECD0  F02F         	call	_lcd_send
 15944  00351A                     
 15945                           ;lib_ili9341.c: 103:     lcd_send(1,0x10);
 15946  00351A  0E10               	movlw	16
 15947  00351C  6E04               	movwf	lcd_send@value^0,c
 15948  00351E  0E01               	movlw	1
 15949  003520  ECD0  F02F         	call	_lcd_send
 15950  003524                     
 15951                           ;lib_ili9341.c: 104:     lcd_send(1,0x03);
 15952  003524  0E03               	movlw	3
 15953  003526  6E04               	movwf	lcd_send@value^0,c
 15954  003528  0E01               	movlw	1
 15955  00352A  ECD0  F02F         	call	_lcd_send
 15956  00352E                     
 15957                           ;lib_ili9341.c: 105:     lcd_send(1,0x0E);
 15958  00352E  0E0E               	movlw	14
 15959  003530  6E04               	movwf	lcd_send@value^0,c
 15960  003532  0E01               	movlw	1
 15961  003534  ECD0  F02F         	call	_lcd_send
 15962  003538                     
 15963                           ;lib_ili9341.c: 106:     lcd_send(1,0x09);
 15964  003538  0E09               	movlw	9
 15965  00353A  6E04               	movwf	lcd_send@value^0,c
 15966  00353C  0E01               	movlw	1
 15967  00353E  ECD0  F02F         	call	_lcd_send
 15968  003542                     
 15969                           ;lib_ili9341.c: 107:     lcd_send(1,0x00);
 15970  003542  0E00               	movlw	0
 15971  003544  6E04               	movwf	lcd_send@value^0,c
 15972  003546  0E01               	movlw	1
 15973  003548  ECD0  F02F         	call	_lcd_send
 15974  00354C                     
 15975                           ;lib_ili9341.c: 108:     lcd_send(0,0xE1);
 15976  00354C  0EE1               	movlw	225
 15977  00354E  6E04               	movwf	lcd_send@value^0,c
 15978  003550  0E00               	movlw	0
 15979  003552  ECD0  F02F         	call	_lcd_send
 15980  003556                     
 15981                           ;lib_ili9341.c: 109:     lcd_send(1,0x00);
 15982  003556  0E00               	movlw	0
 15983  003558  6E04               	movwf	lcd_send@value^0,c
 15984  00355A  0E01               	movlw	1
 15985  00355C  ECD0  F02F         	call	_lcd_send
 15986  003560                     
 15987                           ;lib_ili9341.c: 110:     lcd_send(1,0x0E);
 15988  003560  0E0E               	movlw	14
 15989  003562  6E04               	movwf	lcd_send@value^0,c
 15990  003564  0E01               	movlw	1
 15991  003566  ECD0  F02F         	call	_lcd_send
 15992  00356A                     
 15993                           ;lib_ili9341.c: 111:     lcd_send(1,0x14);
 15994  00356A  0E14               	movlw	20
 15995  00356C  6E04               	movwf	lcd_send@value^0,c
 15996  00356E  0E01               	movlw	1
 15997  003570  ECD0  F02F         	call	_lcd_send
 15998  003574                     
 15999                           ;lib_ili9341.c: 112:     lcd_send(1,0x03);
 16000  003574  0E03               	movlw	3
 16001  003576  6E04               	movwf	lcd_send@value^0,c
 16002  003578  0E01               	movlw	1
 16003  00357A  ECD0  F02F         	call	_lcd_send
 16004  00357E                     
 16005                           ;lib_ili9341.c: 113:     lcd_send(1,0x11);
 16006  00357E  0E11               	movlw	17
 16007  003580  6E04               	movwf	lcd_send@value^0,c
 16008  003582  0E01               	movlw	1
 16009  003584  ECD0  F02F         	call	_lcd_send
 16010  003588                     
 16011                           ;lib_ili9341.c: 114:     lcd_send(1,0x07);
 16012  003588  0E07               	movlw	7
 16013  00358A  6E04               	movwf	lcd_send@value^0,c
 16014  00358C  0E01               	movlw	1
 16015  00358E  ECD0  F02F         	call	_lcd_send
 16016  003592                     
 16017                           ;lib_ili9341.c: 115:     lcd_send(1,0x31);
 16018  003592  0E31               	movlw	49
 16019  003594  6E04               	movwf	lcd_send@value^0,c
 16020  003596  0E01               	movlw	1
 16021  003598  ECD0  F02F         	call	_lcd_send
 16022  00359C                     
 16023                           ;lib_ili9341.c: 116:     lcd_send(1,0xC1);
 16024  00359C  0EC1               	movlw	193
 16025  00359E  6E04               	movwf	lcd_send@value^0,c
 16026  0035A0  0E01               	movlw	1
 16027  0035A2  ECD0  F02F         	call	_lcd_send
 16028  0035A6                     
 16029                           ;lib_ili9341.c: 117:     lcd_send(1,0x48);
 16030  0035A6  0E48               	movlw	72
 16031  0035A8  6E04               	movwf	lcd_send@value^0,c
 16032  0035AA  0E01               	movlw	1
 16033  0035AC  ECD0  F02F         	call	_lcd_send
 16034  0035B0                     
 16035                           ;lib_ili9341.c: 118:     lcd_send(1,0x08);
 16036  0035B0  0E08               	movlw	8
 16037  0035B2  6E04               	movwf	lcd_send@value^0,c
 16038  0035B4  0E01               	movlw	1
 16039  0035B6  ECD0  F02F         	call	_lcd_send
 16040  0035BA                     
 16041                           ;lib_ili9341.c: 119:     lcd_send(1,0x0F);
 16042  0035BA  0E0F               	movlw	15
 16043  0035BC  6E04               	movwf	lcd_send@value^0,c
 16044  0035BE  0E01               	movlw	1
 16045  0035C0  ECD0  F02F         	call	_lcd_send
 16046  0035C4                     
 16047                           ;lib_ili9341.c: 120:     lcd_send(1,0x0C);
 16048  0035C4  0E0C               	movlw	12
 16049  0035C6  6E04               	movwf	lcd_send@value^0,c
 16050  0035C8  0E01               	movlw	1
 16051  0035CA  ECD0  F02F         	call	_lcd_send
 16052  0035CE                     
 16053                           ;lib_ili9341.c: 121:     lcd_send(1,0x31);
 16054  0035CE  0E31               	movlw	49
 16055  0035D0  6E04               	movwf	lcd_send@value^0,c
 16056  0035D2  0E01               	movlw	1
 16057  0035D4  ECD0  F02F         	call	_lcd_send
 16058  0035D8                     
 16059                           ;lib_ili9341.c: 122:     lcd_send(1,0x36);
 16060  0035D8  0E36               	movlw	54
 16061  0035DA  6E04               	movwf	lcd_send@value^0,c
 16062  0035DC  0E01               	movlw	1
 16063  0035DE  ECD0  F02F         	call	_lcd_send
 16064  0035E2                     
 16065                           ;lib_ili9341.c: 123:     lcd_send(1,0x0F);
 16066  0035E2  0E0F               	movlw	15
 16067  0035E4  6E04               	movwf	lcd_send@value^0,c
 16068  0035E6  0E01               	movlw	1
 16069  0035E8  ECD0  F02F         	call	_lcd_send
 16070  0035EC                     
 16071                           ;lib_ili9341.c: 124:     lcd_send(0,0x11);
 16072  0035EC  0E11               	movlw	17
 16073  0035EE  6E04               	movwf	lcd_send@value^0,c
 16074  0035F0  0E00               	movlw	0
 16075  0035F2  ECD0  F02F         	call	_lcd_send
 16076                           
 16077                           ;lib_ili9341.c: 125:     msDelay(120);
 16078  0035F6  0E78               	movlw	120
 16079  0035F8  EC5F  F02F         	call	_msDelay
 16080  0035FC                     
 16081                           ;lib_ili9341.c: 126:     lcd_send(0,0x29);
 16082  0035FC  0E29               	movlw	41
 16083  0035FE  6E04               	movwf	lcd_send@value^0,c
 16084  003600  0E00               	movlw	0
 16085  003602  ECD0  F02F         	call	_lcd_send
 16086  003606                     
 16087                           ;lib_ili9341.c: 127:     msDelay(120);
 16088  003606  0E78               	movlw	120
 16089  003608  EC5F  F02F         	call	_msDelay
 16090  00360C                     
 16091                           ;lib_ili9341.c: 130:     lcd_fill(global_bg_color);
 16092  00360C  0E00               	movlw	0
 16093  00360E  6E0D               	movwf	(lcd_fill@bg_color+1)^0,c
 16094  003610  0E00               	movlw	0
 16095  003612  6E0C               	movwf	lcd_fill@bg_color^0,c
 16096  003614  ECEA  F02B         	call	_lcd_fill	;wreg free
 16097  003618  0012               	return		;funcret
 16098  00361A                     __end_of_lcd_init:
 16099                           	opt callstack 0
 16100                           
 16101 ;; *************** function _msDelay *****************
 16102 ;; Defined at:
 16103 ;;		line 16 in file "lib_ili9341.c"
 16104 ;; Parameters:    Size  Location     Type
 16105 ;;  ms              1    wreg     unsigned char 
 16106 ;; Auto vars:     Size  Location     Type
 16107 ;;  ms              1    3[COMRAM] unsigned char 
 16108 ;;  k               1    4[COMRAM] unsigned char 
 16109 ;; Return value:  Size  Location     Type
 16110 ;;                  1    wreg      void 
 16111 ;; Registers used:
 16112 ;;		wreg, status,2, status,0
 16113 ;; Tracked objects:
 16114 ;;		On entry : 0/0
 16115 ;;		On exit  : 0/0
 16116 ;;		Unchanged: 0/0
 16117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16119 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16120 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16121 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16122 ;;Total ram usage:        3 bytes
 16123 ;; Hardware stack levels used:    1
 16124 ;; Hardware stack levels required when called:    4
 16125 ;; This function calls:
 16126 ;;		Nothing
 16127 ;; This function is called by:
 16128 ;;		_lcd_init
 16129 ;; This function uses a non-reentrant model
 16130 ;;
 16131                           
 16132                           	psect	text46
 16133  005EBE                     __ptext46:
 16134                           	opt callstack 0
 16135  005EBE                     _msDelay:
 16136                           	opt callstack 25
 16137                           
 16138                           ;incstack = 0
 16139                           ;msDelay@ms stored from wreg
 16140  005EBE  6E04               	movwf	msDelay@ms^0,c
 16141  005EC0                     
 16142                           ;lib_ili9341.c: 16: void msDelay (uint8_t ms);lib_ili9341.c: 17: {;lib_ili9341.c: 18:   
      +                            uint8_t k;;lib_ili9341.c: 20:     for(k=0; k<ms; k++)
 16143  005EC0  0E00               	movlw	0
 16144  005EC2  6E05               	movwf	msDelay@k^0,c
 16145  005EC4  EF6C  F02F         	goto	l6502
 16146  005EC8                     l6498:
 16147                           
 16148                           ;lib_ili9341.c: 21:     {;lib_ili9341.c: 22:         _delay((unsigned long)((1)*(8000000
      +                          /4000.0)));
 16149  005EC8  0E03               	movlw	3
 16150  005ECA  6E03               	movwf	??_msDelay^0,c
 16151  005ECC  0E98               	movlw	152
 16152  005ECE                     u12197:
 16153  005ECE  2EE8               	decfsz	wreg,f,c
 16154  005ED0  D7FE               	bra	u12197
 16155  005ED2  2E03               	decfsz	??_msDelay^0,f,c
 16156  005ED4  D7FC               	bra	u12197
 16157  005ED6                     
 16158                           ;lib_ili9341.c: 23:     }
 16159  005ED6  2A05               	incf	msDelay@k^0,f,c
 16160  005ED8                     l6502:
 16161  005ED8  5004               	movf	msDelay@ms^0,w,c
 16162  005EDA  5C05               	subwf	msDelay@k^0,w,c
 16163  005EDC  A0D8               	btfss	status,0,c
 16164  005EDE  EF73  F02F         	goto	u7921
 16165  005EE2  EF75  F02F         	goto	u7920
 16166  005EE6                     u7921:
 16167  005EE6  EF64  F02F         	goto	l6498
 16168  005EEA                     u7920:
 16169  005EEA  0012               	return		;funcret
 16170  005EEC                     __end_of_msDelay:
 16171                           	opt callstack 0
 16172                           
 16173 ;; *************** function _lcd_fill *****************
 16174 ;; Defined at:
 16175 ;;		line 193 in file "lib_ili9341.c"
 16176 ;; Parameters:    Size  Location     Type
 16177 ;;  bg_color        2   11[COMRAM] unsigned short 
 16178 ;; Auto vars:     Size  Location     Type
 16179 ;;  width           2   15[COMRAM] unsigned short 
 16180 ;;  height          2   13[COMRAM] unsigned short 
 16181 ;; Return value:  Size  Location     Type
 16182 ;;                  1    wreg      void 
 16183 ;; Registers used:
 16184 ;;		wreg, status,2, status,0, cstack
 16185 ;; Tracked objects:
 16186 ;;		On entry : 0/0
 16187 ;;		On exit  : 0/0
 16188 ;;		Unchanged: 0/0
 16189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16190 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16191 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16193 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16194 ;;Total ram usage:        6 bytes
 16195 ;; Hardware stack levels used:    1
 16196 ;; Hardware stack levels required when called:    8
 16197 ;; This function calls:
 16198 ;;		_lcd_draw_pixel
 16199 ;;		_lcd_set_cursor
 16200 ;; This function is called by:
 16201 ;;		_lcd_init
 16202 ;; This function uses a non-reentrant model
 16203 ;;
 16204                           
 16205                           	psect	text47
 16206  0057D4                     __ptext47:
 16207                           	opt callstack 0
 16208  0057D4                     _lcd_fill:
 16209                           	opt callstack 21
 16210  0057D4                     
 16211                           ;lib_ili9341.c: 193: void lcd_fill(uint16_t bg_color);lib_ili9341.c: 194: {;lib_ili9341.
      +                          c: 195:     uint16_t width = 320, height = 240;
 16212  0057D4  0E01               	movlw	1
 16213  0057D6  6E11               	movwf	(lcd_fill@width+1)^0,c
 16214  0057D8  0E40               	movlw	64
 16215  0057DA  6E10               	movwf	lcd_fill@width^0,c
 16216  0057DC  0E00               	movlw	0
 16217  0057DE  6E0F               	movwf	(lcd_fill@height+1)^0,c
 16218  0057E0  0EF0               	movlw	240
 16219  0057E2  6E0E               	movwf	lcd_fill@height^0,c
 16220  0057E4                     
 16221                           ;lib_ili9341.c: 197:     if( lcd_set_cursor(0,0) )
 16222  0057E4  0E00               	movlw	0
 16223  0057E6  6E09               	movwf	(lcd_set_cursor@x+1)^0,c
 16224  0057E8  0E00               	movlw	0
 16225  0057EA  6E08               	movwf	lcd_set_cursor@x^0,c
 16226  0057EC  0E00               	movlw	0
 16227  0057EE  6E0B               	movwf	(lcd_set_cursor@y+1)^0,c
 16228  0057F0  0E00               	movlw	0
 16229  0057F2  6E0A               	movwf	lcd_set_cursor@y^0,c
 16230  0057F4  EC24  F02E         	call	_lcd_set_cursor	;wreg free
 16231  0057F8  0900               	iorlw	0
 16232  0057FA  B4D8               	btfsc	status,2,c
 16233  0057FC  EF02  F02C         	goto	u7931
 16234  005800  EF04  F02C         	goto	u7930
 16235  005804                     u7931:
 16236  005804  EF1D  F02C         	goto	l6516
 16237  005808                     u7930:
 16238  005808  EF2A  F02C         	goto	l382
 16239  00580C                     l6510:
 16240                           
 16241                           ;lib_ili9341.c: 205:         {;lib_ili9341.c: 206:             lcd_draw_pixel(bg_color);
 16242  00580C  C00C  F006         	movff	lcd_fill@bg_color,lcd_draw_pixel@color
 16243  005810  C00D  F007         	movff	lcd_fill@bg_color+1,lcd_draw_pixel@color+1
 16244  005814  ECE8  F02F         	call	_lcd_draw_pixel	;wreg free
 16245  005818                     l6512:
 16246                           
 16247                           ;lib_ili9341.c: 204:         while(width--)
 16248  005818  0610               	decf	lcd_fill@width^0,f,c
 16249  00581A  A0D8               	btfss	status,0,c
 16250  00581C  0611               	decf	(lcd_fill@width+1)^0,f,c
 16251  00581E  2810               	incf	lcd_fill@width^0,w,c
 16252  005820  E106               	bnz	u7941
 16253  005822  2811               	incf	(lcd_fill@width+1)^0,w,c
 16254  005824  A4D8               	btfss	status,2,c
 16255  005826  EF17  F02C         	goto	u7941
 16256  00582A  EF19  F02C         	goto	u7940
 16257  00582E                     u7941:
 16258  00582E  EF06  F02C         	goto	l6510
 16259  005832                     u7940:
 16260  005832                     
 16261                           ;lib_ili9341.c: 208:         width = 320;
 16262  005832  0E01               	movlw	1
 16263  005834  6E11               	movwf	(lcd_fill@width+1)^0,c
 16264  005836  0E40               	movlw	64
 16265  005838  6E10               	movwf	lcd_fill@width^0,c
 16266  00583A                     l6516:
 16267                           
 16268                           ;lib_ili9341.c: 202:     while(height--)
 16269  00583A  060E               	decf	lcd_fill@height^0,f,c
 16270  00583C  A0D8               	btfss	status,0,c
 16271  00583E  060F               	decf	(lcd_fill@height+1)^0,f,c
 16272  005840  280E               	incf	lcd_fill@height^0,w,c
 16273  005842  E106               	bnz	u7951
 16274  005844  280F               	incf	(lcd_fill@height+1)^0,w,c
 16275  005846  A4D8               	btfss	status,2,c
 16276  005848  EF28  F02C         	goto	u7951
 16277  00584C  EF2A  F02C         	goto	u7950
 16278  005850                     u7951:
 16279  005850  EF0C  F02C         	goto	l6512
 16280  005854                     u7950:
 16281  005854                     l382:
 16282  005854  0012               	return		;funcret
 16283  005856                     __end_of_lcd_fill:
 16284                           	opt callstack 0
 16285                           
 16286 ;; *************** function _lcd_draw_string *****************
 16287 ;; Defined at:
 16288 ;;		line 379 in file "lib_ili9341.c"
 16289 ;; Parameters:    Size  Location     Type
 16290 ;;  x               2   33[COMRAM] unsigned short 
 16291 ;;  y               2   35[COMRAM] unsigned short 
 16292 ;;  pS              2   37[COMRAM] PTR const unsigned char 
 16293 ;;		 -> string_ntc_high(100), string_ntc_low(100), string_ntc(100), string_pot(100), 
 16294 ;;		 -> string_temp(100), STR_1(12), 
 16295 ;;  fg_color        2   39[COMRAM] unsigned short 
 16296 ;;  bg_color        2   41[COMRAM] unsigned short 
 16297 ;; Auto vars:     Size  Location     Type
 16298 ;;  lIndex          2   49[COMRAM] unsigned short 
 16299 ;;  k               2   47[COMRAM] unsigned short 
 16300 ;; Return value:  Size  Location     Type
 16301 ;;                  1    wreg      void 
 16302 ;; Registers used:
 16303 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16304 ;; Tracked objects:
 16305 ;;		On entry : 0/0
 16306 ;;		On exit  : 0/0
 16307 ;;		Unchanged: 0/0
 16308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16309 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16310 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16311 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16312 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16313 ;;Total ram usage:       18 bytes
 16314 ;; Hardware stack levels used:    1
 16315 ;; Hardware stack levels required when called:    9
 16316 ;; This function calls:
 16317 ;;		_lcd_draw_char
 16318 ;; This function is called by:
 16319 ;;		_main
 16320 ;; This function uses a non-reentrant model
 16321 ;;
 16322                           
 16323                           	psect	text48
 16324  004C56                     __ptext48:
 16325                           	opt callstack 0
 16326  004C56                     _lcd_draw_string:
 16327                           	opt callstack 21
 16328  004C56                     
 16329                           ;lib_ili9341.c: 379: void lcd_draw_string (uint16_t x, uint16_t y, const char *pS, uint1
      +                          6_t fg_color, uint16_t bg_color);lib_ili9341.c: 380: {;lib_ili9341.c: 381:     uint16_t 
      +                          lIndex, k;;lib_ili9341.c: 383:     while(*pS)
 16330  004C56  EFAA  F026         	goto	l6840
 16331  004C5A                     l6826:
 16332                           
 16333                           ;lib_ili9341.c: 384:     {;lib_ili9341.c: 385:         lIndex = 0;
 16334  004C5A  0E00               	movlw	0
 16335  004C5C  6E33               	movwf	(lcd_draw_string@lIndex+1)^0,c
 16336  004C5E  0E00               	movlw	0
 16337  004C60  6E32               	movwf	lcd_draw_string@lIndex^0,c
 16338                           
 16339                           ;lib_ili9341.c: 386:         for(k=0; k<(*pS - ' '); k++)
 16340  004C62  0E00               	movlw	0
 16341  004C64  6E31               	movwf	(lcd_draw_string@k+1)^0,c
 16342  004C66  0E00               	movlw	0
 16343  004C68  6E30               	movwf	lcd_draw_string@k^0,c
 16344  004C6A  EF56  F026         	goto	l6832
 16345  004C6E                     l6828:
 16346                           
 16347                           ;lib_ili9341.c: 387:         {;lib_ili9341.c: 388:             lIndex += ((font[lIndex])
      +                           << 1) + 1;
 16348  004C6E  90D8               	bcf	status,0,c
 16349  004C70  3432               	rlcf	lcd_draw_string@lIndex^0,w,c
 16350  004C72  6EF6               	movwf	tblptrl,c
 16351  004C74  3433               	rlcf	(lcd_draw_string@lIndex+1)^0,w,c
 16352  004C76  6EF7               	movwf	tblptrh,c
 16353  004C78  0E89               	movlw	low _font
 16354  004C7A  26F6               	addwf	tblptrl,f,c
 16355  004C7C  0EF1               	movlw	high _font
 16356  004C7E  22F7               	addwfc	tblptrh,f,c
 16357  004C80                     	if	1	;There are 3 active tblptr bytes
 16358  004C80  6AF8               	clrf	tblptru,c
 16359  004C82  0E00               	movlw	low (__mediumconst shr (0+16))
 16360  004C84  22F8               	addwfc	tblptru,f,c
 16361  004C86                     	endif
 16362  004C86  0009               	tblrd		*+
 16363  004C88  CFF5 F02C          	movff	tablat,??_lcd_draw_string
 16364  004C8C  0009               	tblrd		*+
 16365  004C8E  CFF5 F02D          	movff	tablat,??_lcd_draw_string+1
 16366  004C92  90D8               	bcf	status,0,c
 16367  004C94  362C               	rlcf	??_lcd_draw_string^0,f,c
 16368  004C96  362D               	rlcf	(??_lcd_draw_string+1)^0,f,c
 16369  004C98  0E01               	movlw	1
 16370  004C9A  262C               	addwf	??_lcd_draw_string^0,f,c
 16371  004C9C  0E00               	movlw	0
 16372  004C9E  222D               	addwfc	(??_lcd_draw_string+1)^0,f,c
 16373  004CA0  502C               	movf	??_lcd_draw_string^0,w,c
 16374  004CA2  2632               	addwf	lcd_draw_string@lIndex^0,f,c
 16375  004CA4  502D               	movf	(??_lcd_draw_string+1)^0,w,c
 16376  004CA6  2233               	addwfc	(lcd_draw_string@lIndex+1)^0,f,c
 16377  004CA8                     
 16378                           ;lib_ili9341.c: 389:         }
 16379  004CA8  4A30               	infsnz	lcd_draw_string@k^0,f,c
 16380  004CAA  2A31               	incf	(lcd_draw_string@k+1)^0,f,c
 16381  004CAC                     l6832:
 16382  004CAC  0EE0               	movlw	224
 16383  004CAE  6E2C               	movwf	??_lcd_draw_string^0,c
 16384  004CB0  0EFF               	movlw	255
 16385  004CB2  6E2D               	movwf	(??_lcd_draw_string+1)^0,c
 16386  004CB4  C026  FFF6         	movff	lcd_draw_string@pS,tblptrl
 16387  004CB8  C027  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 16388  004CBC  0E00               	movlw	low (__mediumconst shr (0+16))
 16389  004CBE  6EF8               	movwf	tblptru,c
 16390  004CC0  0E0E               	movlw	(high __ramtop+-1)
 16391  004CC2  64F7               	cpfsgt	tblptrh,c
 16392  004CC4  D003               	bra	u8117
 16393  004CC6  0008               	tblrd		*
 16394  004CC8  50F5               	movf	tablat,w,c
 16395  004CCA  D005               	bra	u8110
 16396  004CCC                     u8117:
 16397  004CCC  CFF6 FFE1          	movff	tblptrl,fsr1l
 16398  004CD0  CFF7 FFE2          	movff	tblptrh,fsr1h
 16399  004CD4  50E7               	movf	indf1,w,c
 16400  004CD6                     u8110:
 16401  004CD6  6E2E               	movwf	(??_lcd_draw_string+2)^0,c
 16402  004CD8  6A2F               	clrf	(??_lcd_draw_string+3)^0,c
 16403  004CDA  502C               	movf	??_lcd_draw_string^0,w,c
 16404  004CDC  262E               	addwf	(??_lcd_draw_string+2)^0,f,c
 16405  004CDE  502D               	movf	(??_lcd_draw_string+1)^0,w,c
 16406  004CE0  222F               	addwfc	(??_lcd_draw_string+3)^0,f,c
 16407  004CE2  502E               	movf	(??_lcd_draw_string+2)^0,w,c
 16408  004CE4  5C30               	subwf	lcd_draw_string@k^0,w,c
 16409  004CE6  502F               	movf	(??_lcd_draw_string+3)^0,w,c
 16410  004CE8  5831               	subwfb	(lcd_draw_string@k+1)^0,w,c
 16411  004CEA  A0D8               	btfss	status,0,c
 16412  004CEC  EF7A  F026         	goto	u8121
 16413  004CF0  EF7C  F026         	goto	u8120
 16414  004CF4                     u8121:
 16415  004CF4  EF37  F026         	goto	l6828
 16416  004CF8                     u8120:
 16417  004CF8                     
 16418                           ;lib_ili9341.c: 391:         lcd_draw_char(x, y, lIndex, fg_color, bg_color);
 16419  004CF8  C022  F00C         	movff	lcd_draw_string@x,lcd_draw_char@x
 16420  004CFC  C023  F00D         	movff	lcd_draw_string@x+1,lcd_draw_char@x+1
 16421  004D00  C024  F00E         	movff	lcd_draw_string@y,lcd_draw_char@y
 16422  004D04  C025  F00F         	movff	lcd_draw_string@y+1,lcd_draw_char@y+1
 16423  004D08  C032  F010         	movff	lcd_draw_string@lIndex,lcd_draw_char@fIndex
 16424  004D0C  C033  F011         	movff	lcd_draw_string@lIndex+1,lcd_draw_char@fIndex+1
 16425  004D10  C028  F012         	movff	lcd_draw_string@fg_color,lcd_draw_char@fg_color
 16426  004D14  C029  F013         	movff	lcd_draw_string@fg_color+1,lcd_draw_char@fg_color+1
 16427  004D18  C02A  F014         	movff	lcd_draw_string@bg_color,lcd_draw_char@bg_color
 16428  004D1C  C02B  F015         	movff	lcd_draw_string@bg_color+1,lcd_draw_char@bg_color+1
 16429  004D20  EC21  F024         	call	_lcd_draw_char	;wreg free
 16430  004D24                     
 16431                           ;lib_ili9341.c: 393:         x += font[lIndex];
 16432  004D24  90D8               	bcf	status,0,c
 16433  004D26  3432               	rlcf	lcd_draw_string@lIndex^0,w,c
 16434  004D28  6EF6               	movwf	tblptrl,c
 16435  004D2A  3433               	rlcf	(lcd_draw_string@lIndex+1)^0,w,c
 16436  004D2C  6EF7               	movwf	tblptrh,c
 16437  004D2E  0E89               	movlw	low _font
 16438  004D30  26F6               	addwf	tblptrl,f,c
 16439  004D32  0EF1               	movlw	high _font
 16440  004D34  22F7               	addwfc	tblptrh,f,c
 16441  004D36                     	if	1	;There are 3 active tblptr bytes
 16442  004D36  6AF8               	clrf	tblptru,c
 16443  004D38  0E00               	movlw	low (__mediumconst shr (0+16))
 16444  004D3A  22F8               	addwfc	tblptru,f,c
 16445  004D3C                     	endif
 16446  004D3C  0009               	tblrd		*+
 16447  004D3E  CFF5 F02C          	movff	tablat,??_lcd_draw_string
 16448  004D42  0009               	tblrd		*+
 16449  004D44  CFF5 F02D          	movff	tablat,??_lcd_draw_string+1
 16450  004D48  502C               	movf	??_lcd_draw_string^0,w,c
 16451  004D4A  2622               	addwf	lcd_draw_string@x^0,f,c
 16452  004D4C  502D               	movf	(??_lcd_draw_string+1)^0,w,c
 16453  004D4E  2223               	addwfc	(lcd_draw_string@x+1)^0,f,c
 16454  004D50                     
 16455                           ;lib_ili9341.c: 395:         pS++;
 16456  004D50  4A26               	infsnz	lcd_draw_string@pS^0,f,c
 16457  004D52  2A27               	incf	(lcd_draw_string@pS+1)^0,f,c
 16458  004D54                     l6840:
 16459                           
 16460                           ;lib_ili9341.c: 383:     while(*pS)
 16461  004D54  C026  FFF6         	movff	lcd_draw_string@pS,tblptrl
 16462  004D58  C027  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 16463  004D5C  0E00               	movlw	low (__mediumconst shr (0+16))
 16464  004D5E  6EF8               	movwf	tblptru,c
 16465  004D60  0E0E               	movlw	(high __ramtop+-1)
 16466  004D62  64F7               	cpfsgt	tblptrh,c
 16467  004D64  D003               	bra	u8137
 16468  004D66  0008               	tblrd		*
 16469  004D68  50F5               	movf	tablat,w,c
 16470  004D6A  D005               	bra	u8130
 16471  004D6C                     u8137:
 16472  004D6C  CFF6 FFE1          	movff	tblptrl,fsr1l
 16473  004D70  CFF7 FFE2          	movff	tblptrh,fsr1h
 16474  004D74  50E7               	movf	indf1,w,c
 16475  004D76                     u8130:
 16476  004D76  0900               	iorlw	0
 16477  004D78  A4D8               	btfss	status,2,c
 16478  004D7A  EFC1  F026         	goto	u8141
 16479  004D7E  EFC3  F026         	goto	u8140
 16480  004D82                     u8141:
 16481  004D82  EF2D  F026         	goto	l6826
 16482  004D86                     u8140:
 16483  004D86  0012               	return		;funcret
 16484  004D88                     __end_of_lcd_draw_string:
 16485                           	opt callstack 0
 16486                           
 16487 ;; *************** function _lcd_draw_char *****************
 16488 ;; Defined at:
 16489 ;;		line 355 in file "lib_ili9341.c"
 16490 ;; Parameters:    Size  Location     Type
 16491 ;;  x               2   11[COMRAM] unsigned short 
 16492 ;;  y               2   13[COMRAM] unsigned short 
 16493 ;;  fIndex          2   15[COMRAM] unsigned short 
 16494 ;;  fg_color        2   17[COMRAM] unsigned short 
 16495 ;;  bg_color        2   19[COMRAM] unsigned short 
 16496 ;; Auto vars:     Size  Location     Type
 16497 ;;  i               1   32[COMRAM] unsigned char 
 16498 ;;  k               1   31[COMRAM] unsigned char 
 16499 ;;  j               1   30[COMRAM] unsigned char 
 16500 ;; Return value:  Size  Location     Type
 16501 ;;                  1    wreg      void 
 16502 ;; Registers used:
 16503 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16504 ;; Tracked objects:
 16505 ;;		On entry : 0/0
 16506 ;;		On exit  : 0/0
 16507 ;;		Unchanged: 0/0
 16508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16509 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16510 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16511 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16512 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16513 ;;Total ram usage:       22 bytes
 16514 ;; Hardware stack levels used:    1
 16515 ;; Hardware stack levels required when called:    8
 16516 ;; This function calls:
 16517 ;;		_lcd_draw_pixel
 16518 ;;		_lcd_set_cursor
 16519 ;; This function is called by:
 16520 ;;		_lcd_draw_string
 16521 ;; This function uses a non-reentrant model
 16522 ;;
 16523                           
 16524                           	psect	text49
 16525  004842                     __ptext49:
 16526                           	opt callstack 0
 16527  004842                     _lcd_draw_char:
 16528                           	opt callstack 21
 16529  004842                     
 16530                           ;lib_ili9341.c: 355: void lcd_draw_char (uint16_t x, uint16_t y, uint16_t fIndex, uint16
      +                          _t fg_color, uint16_t bg_color);lib_ili9341.c: 356: {;lib_ili9341.c: 357:     uint8_t j,
      +                           k, i;;lib_ili9341.c: 359:     for(j=0; j < font[fIndex]; j++)
 16531  004842  0E00               	movlw	0
 16532  004844  6E1F               	movwf	lcd_draw_char@j^0,c
 16533  004846  EFC1  F024         	goto	l6554
 16534  00484A                     l6524:
 16535                           
 16536                           ;lib_ili9341.c: 360:     {;lib_ili9341.c: 361:         lcd_set_cursor(x + font[fIndex] -
      +                           j, y);
 16537  00484A  90D8               	bcf	status,0,c
 16538  00484C  3410               	rlcf	lcd_draw_char@fIndex^0,w,c
 16539  00484E  6EF6               	movwf	tblptrl,c
 16540  004850  3411               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 16541  004852  6EF7               	movwf	tblptrh,c
 16542  004854  0E89               	movlw	low _font
 16543  004856  26F6               	addwf	tblptrl,f,c
 16544  004858  0EF1               	movlw	high _font
 16545  00485A  22F7               	addwfc	tblptrh,f,c
 16546  00485C                     	if	1	;There are 3 active tblptr bytes
 16547  00485C  6AF8               	clrf	tblptru,c
 16548  00485E  0E00               	movlw	low (__mediumconst shr (0+16))
 16549  004860  22F8               	addwfc	tblptru,f,c
 16550  004862                     	endif
 16551  004862  0009               	tblrd		*+
 16552  004864  CFF5 F016          	movff	tablat,??_lcd_draw_char
 16553  004868  0009               	tblrd		*+
 16554  00486A  CFF5 F017          	movff	tablat,??_lcd_draw_char+1
 16555  00486E  501F               	movf	lcd_draw_char@j^0,w,c
 16556  004870  5E16               	subwf	??_lcd_draw_char^0,f,c
 16557  004872  0E00               	movlw	0
 16558  004874  5A17               	subwfb	(??_lcd_draw_char+1)^0,f,c
 16559  004876  500C               	movf	lcd_draw_char@x^0,w,c
 16560  004878  2416               	addwf	??_lcd_draw_char^0,w,c
 16561  00487A  6E08               	movwf	lcd_set_cursor@x^0,c
 16562  00487C  500D               	movf	(lcd_draw_char@x+1)^0,w,c
 16563  00487E  2017               	addwfc	(??_lcd_draw_char+1)^0,w,c
 16564  004880  6E09               	movwf	(lcd_set_cursor@x+1)^0,c
 16565  004882  C00E  F00A         	movff	lcd_draw_char@y,lcd_set_cursor@y
 16566  004886  C00F  F00B         	movff	lcd_draw_char@y+1,lcd_set_cursor@y+1
 16567  00488A  EC24  F02E         	call	_lcd_set_cursor	;wreg free
 16568  00488E                     
 16569                           ;lib_ili9341.c: 363:         for(k=0; k<2; k++)
 16570  00488E  0E00               	movlw	0
 16571  004890  6E20               	movwf	lcd_draw_char@k^0,c
 16572  004892                     l6532:
 16573                           
 16574                           ;lib_ili9341.c: 364:         {;lib_ili9341.c: 365:             for(i=0; i<8; i++)
 16575  004892  0E00               	movlw	0
 16576  004894  6E21               	movwf	lcd_draw_char@i^0,c
 16577  004896                     l6538:
 16578                           
 16579                           ;lib_ili9341.c: 366:             { if( font[ (fIndex + ((font[fIndex]) << 1)) - (j<<1) -
      +                           k ] & (0x80 >> i) )
 16580  004896  501F               	movf	lcd_draw_char@j^0,w,c
 16581  004898  6E16               	movwf	??_lcd_draw_char^0,c
 16582  00489A  6A17               	clrf	(??_lcd_draw_char+1)^0,c
 16583  00489C  90D8               	bcf	status,0,c
 16584  00489E  3616               	rlcf	??_lcd_draw_char^0,f,c
 16585  0048A0  3617               	rlcf	(??_lcd_draw_char+1)^0,f,c
 16586  0048A2  90D8               	bcf	status,0,c
 16587  0048A4  3410               	rlcf	lcd_draw_char@fIndex^0,w,c
 16588  0048A6  6EF6               	movwf	tblptrl,c
 16589  0048A8  3411               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 16590  0048AA  6EF7               	movwf	tblptrh,c
 16591  0048AC  0E89               	movlw	low _font
 16592  0048AE  26F6               	addwf	tblptrl,f,c
 16593  0048B0  0EF1               	movlw	high _font
 16594  0048B2  22F7               	addwfc	tblptrh,f,c
 16595  0048B4                     	if	1	;There are 3 active tblptr bytes
 16596  0048B4  6AF8               	clrf	tblptru,c
 16597  0048B6  0E00               	movlw	low (__mediumconst shr (0+16))
 16598  0048B8  22F8               	addwfc	tblptru,f,c
 16599  0048BA                     	endif
 16600  0048BA  0009               	tblrd		*+
 16601  0048BC  CFF5 F018          	movff	tablat,??_lcd_draw_char+2
 16602  0048C0  0009               	tblrd		*+
 16603  0048C2  CFF5 F019          	movff	tablat,??_lcd_draw_char+3
 16604  0048C6  90D8               	bcf	status,0,c
 16605  0048C8  3618               	rlcf	(??_lcd_draw_char+2)^0,f,c
 16606  0048CA  3619               	rlcf	(??_lcd_draw_char+3)^0,f,c
 16607  0048CC  5016               	movf	??_lcd_draw_char^0,w,c
 16608  0048CE  5E18               	subwf	(??_lcd_draw_char+2)^0,f,c
 16609  0048D0  5017               	movf	(??_lcd_draw_char+1)^0,w,c
 16610  0048D2  5A19               	subwfb	(??_lcd_draw_char+3)^0,f,c
 16611  0048D4  5020               	movf	lcd_draw_char@k^0,w,c
 16612  0048D6  5E18               	subwf	(??_lcd_draw_char+2)^0,f,c
 16613  0048D8  0E00               	movlw	0
 16614  0048DA  5A19               	subwfb	(??_lcd_draw_char+3)^0,f,c
 16615  0048DC  5010               	movf	lcd_draw_char@fIndex^0,w,c
 16616  0048DE  2618               	addwf	(??_lcd_draw_char+2)^0,f,c
 16617  0048E0  5011               	movf	(lcd_draw_char@fIndex+1)^0,w,c
 16618  0048E2  2219               	addwfc	(??_lcd_draw_char+3)^0,f,c
 16619  0048E4  90D8               	bcf	status,0,c
 16620  0048E6  3618               	rlcf	(??_lcd_draw_char+2)^0,f,c
 16621  0048E8  3619               	rlcf	(??_lcd_draw_char+3)^0,f,c
 16622  0048EA  0E89               	movlw	low _font
 16623  0048EC  2418               	addwf	(??_lcd_draw_char+2)^0,w,c
 16624  0048EE  6EF6               	movwf	tblptrl,c
 16625  0048F0  0EF1               	movlw	high _font
 16626  0048F2  2019               	addwfc	(??_lcd_draw_char+3)^0,w,c
 16627  0048F4  6EF7               	movwf	tblptrh,c
 16628  0048F6                     	if	1	;There are 3 active tblptr bytes
 16629  0048F6  6AF8               	clrf	tblptru,c
 16630  0048F8  0E00               	movlw	low (__mediumconst shr (0+16))
 16631  0048FA  22F8               	addwfc	tblptru,f,c
 16632  0048FC                     	endif
 16633  0048FC  0009               	tblrd		*+
 16634  0048FE  CFF5 F01A          	movff	tablat,??_lcd_draw_char+4
 16635  004902  0009               	tblrd		*+
 16636  004904  CFF5 F01B          	movff	tablat,??_lcd_draw_char+5
 16637  004908  C021  F01C         	movff	lcd_draw_char@i,??_lcd_draw_char+6
 16638  00490C  0E80               	movlw	128
 16639  00490E  6E1D               	movwf	(??_lcd_draw_char+7)^0,c
 16640  004910  0E00               	movlw	0
 16641  004912  6E1E               	movwf	(??_lcd_draw_char+8)^0,c
 16642  004914  2A1C               	incf	(??_lcd_draw_char+6)^0,f,c
 16643  004916  EF90  F024         	goto	u7974
 16644  00491A                     u7975:
 16645  00491A  341E               	rlcf	(??_lcd_draw_char+8)^0,w,c
 16646  00491C  321E               	rrcf	(??_lcd_draw_char+8)^0,f,c
 16647  00491E  321D               	rrcf	(??_lcd_draw_char+7)^0,f,c
 16648  004920                     u7974:
 16649  004920  2E1C               	decfsz	(??_lcd_draw_char+6)^0,f,c
 16650  004922  EF8D  F024         	goto	u7975
 16651  004926  501A               	movf	(??_lcd_draw_char+4)^0,w,c
 16652  004928  161D               	andwf	(??_lcd_draw_char+7)^0,f,c
 16653  00492A  501B               	movf	(??_lcd_draw_char+5)^0,w,c
 16654  00492C  161E               	andwf	(??_lcd_draw_char+8)^0,f,c
 16655  00492E  501D               	movf	(??_lcd_draw_char+7)^0,w,c
 16656  004930  101E               	iorwf	(??_lcd_draw_char+8)^0,w,c
 16657  004932  B4D8               	btfsc	status,2,c
 16658  004934  EF9E  F024         	goto	u7981
 16659  004938  EFA0  F024         	goto	u7980
 16660  00493C                     u7981:
 16661  00493C  EFA8  F024         	goto	l6542
 16662  004940                     u7980:
 16663  004940                     
 16664                           ;lib_ili9341.c: 367:                 {;lib_ili9341.c: 368:                     lcd_draw_
      +                          pixel(fg_color);
 16665  004940  C012  F006         	movff	lcd_draw_char@fg_color,lcd_draw_pixel@color
 16666  004944  C013  F007         	movff	lcd_draw_char@fg_color+1,lcd_draw_pixel@color+1
 16667  004948  ECE8  F02F         	call	_lcd_draw_pixel	;wreg free
 16668                           
 16669                           ;lib_ili9341.c: 369:                 }
 16670  00494C  EFAE  F024         	goto	l6544
 16671  004950                     l6542:
 16672                           
 16673                           ;lib_ili9341.c: 371:                 {;lib_ili9341.c: 372:                     lcd_draw_
      +                          pixel(bg_color);
 16674  004950  C014  F006         	movff	lcd_draw_char@bg_color,lcd_draw_pixel@color
 16675  004954  C015  F007         	movff	lcd_draw_char@bg_color+1,lcd_draw_pixel@color+1
 16676  004958  ECE8  F02F         	call	_lcd_draw_pixel	;wreg free
 16677  00495C                     l6544:
 16678                           
 16679                           ;lib_ili9341.c: 374:             }
 16680  00495C  2A21               	incf	lcd_draw_char@i^0,f,c
 16681  00495E  0E07               	movlw	7
 16682  004960  6421               	cpfsgt	lcd_draw_char@i^0,c
 16683  004962  EFB5  F024         	goto	u7991
 16684  004966  EFB7  F024         	goto	u7990
 16685  00496A                     u7991:
 16686  00496A  EF4B  F024         	goto	l6538
 16687  00496E                     u7990:
 16688  00496E                     
 16689                           ;lib_ili9341.c: 375:         }
 16690  00496E  2A20               	incf	lcd_draw_char@k^0,f,c
 16691  004970  0E01               	movlw	1
 16692  004972  6420               	cpfsgt	lcd_draw_char@k^0,c
 16693  004974  EFBE  F024         	goto	u8001
 16694  004978  EFC0  F024         	goto	u8000
 16695  00497C                     u8001:
 16696  00497C  EF49  F024         	goto	l6532
 16697  004980                     u8000:
 16698  004980                     
 16699                           ;lib_ili9341.c: 376:     }
 16700  004980  2A1F               	incf	lcd_draw_char@j^0,f,c
 16701  004982                     l6554:
 16702  004982  90D8               	bcf	status,0,c
 16703  004984  3410               	rlcf	lcd_draw_char@fIndex^0,w,c
 16704  004986  6EF6               	movwf	tblptrl,c
 16705  004988  3411               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 16706  00498A  6EF7               	movwf	tblptrh,c
 16707  00498C  0E89               	movlw	low _font
 16708  00498E  26F6               	addwf	tblptrl,f,c
 16709  004990  0EF1               	movlw	high _font
 16710  004992  22F7               	addwfc	tblptrh,f,c
 16711  004994                     	if	1	;There are 3 active tblptr bytes
 16712  004994  6AF8               	clrf	tblptru,c
 16713  004996  0E00               	movlw	low (__mediumconst shr (0+16))
 16714  004998  22F8               	addwfc	tblptru,f,c
 16715  00499A                     	endif
 16716  00499A  501F               	movf	lcd_draw_char@j^0,w,c
 16717  00499C  6E16               	movwf	??_lcd_draw_char^0,c
 16718  00499E  6A17               	clrf	(??_lcd_draw_char+1)^0,c
 16719  0049A0  0009               	tblrd		*+
 16720  0049A2  50F5               	movf	tablat,w,c
 16721  0049A4  5C16               	subwf	??_lcd_draw_char^0,w,c
 16722  0049A6  0009               	tblrd		*+
 16723  0049A8  50F5               	movf	tablat,w,c
 16724  0049AA  5817               	subwfb	(??_lcd_draw_char+1)^0,w,c
 16725  0049AC  A0D8               	btfss	status,0,c
 16726  0049AE  EFDB  F024         	goto	u8011
 16727  0049B2  EFDD  F024         	goto	u8010
 16728  0049B6                     u8011:
 16729  0049B6  EF25  F024         	goto	l6524
 16730  0049BA                     u8010:
 16731  0049BA  0012               	return		;funcret
 16732  0049BC                     __end_of_lcd_draw_char:
 16733                           	opt callstack 0
 16734                           
 16735 ;; *************** function _lcd_set_cursor *****************
 16736 ;; Defined at:
 16737 ;;		line 144 in file "lib_ili9341.c"
 16738 ;; Parameters:    Size  Location     Type
 16739 ;;  x               2    7[COMRAM] unsigned short 
 16740 ;;  y               2    9[COMRAM] unsigned short 
 16741 ;; Auto vars:     Size  Location     Type
 16742 ;;		None
 16743 ;; Return value:  Size  Location     Type
 16744 ;;                  1    wreg      unsigned char 
 16745 ;; Registers used:
 16746 ;;		wreg, status,2, status,0, cstack
 16747 ;; Tracked objects:
 16748 ;;		On entry : 0/0
 16749 ;;		On exit  : 0/0
 16750 ;;		Unchanged: 0/0
 16751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16752 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16755 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16756 ;;Total ram usage:        4 bytes
 16757 ;; Hardware stack levels used:    1
 16758 ;; Hardware stack levels required when called:    7
 16759 ;; This function calls:
 16760 ;;		_lcd_set_cursor_x
 16761 ;;		_lcd_set_cursor_y
 16762 ;; This function is called by:
 16763 ;;		_lcd_fill
 16764 ;;		_lcd_draw_char
 16765 ;;		_lcd_draw_pixel_at
 16766 ;;		_lcd_fill_rect
 16767 ;; This function uses a non-reentrant model
 16768 ;;
 16769                           
 16770                           	psect	text50
 16771  005C48                     __ptext50:
 16772                           	opt callstack 0
 16773  005C48                     _lcd_set_cursor:
 16774                           	opt callstack 21
 16775  005C48                     
 16776                           ;lib_ili9341.c: 144: uint8_t lcd_set_cursor(uint16_t x, uint16_t y);lib_ili9341.c: 145: 
      +                          {;lib_ili9341.c: 146:     if( lcd_set_cursor_x(x) || lcd_set_cursor_y(y) )
 16777  005C48  C008  F006         	movff	lcd_set_cursor@x,lcd_set_cursor_x@x
 16778  005C4C  C009  F007         	movff	lcd_set_cursor@x+1,lcd_set_cursor_x@x+1
 16779  005C50  EC98  F02D         	call	_lcd_set_cursor_x	;wreg free
 16780  005C54  0900               	iorlw	0
 16781  005C56  A4D8               	btfss	status,2,c
 16782  005C58  EF30  F02E         	goto	u7871
 16783  005C5C  EF32  F02E         	goto	u7870
 16784  005C60                     u7871:
 16785  005C60  EF40  F02E         	goto	l6438
 16786  005C64                     u7870:
 16787  005C64  C00A  F006         	movff	lcd_set_cursor@y,lcd_set_cursor_y@y
 16788  005C68  C00B  F007         	movff	lcd_set_cursor@y+1,lcd_set_cursor_y@y+1
 16789  005C6C  EC74  F02D         	call	_lcd_set_cursor_y	;wreg free
 16790  005C70  0900               	iorlw	0
 16791  005C72  B4D8               	btfsc	status,2,c
 16792  005C74  EF3E  F02E         	goto	u7881
 16793  005C78  EF40  F02E         	goto	u7880
 16794  005C7C                     u7881:
 16795  005C7C  EF43  F02E         	goto	l6442
 16796  005C80                     u7880:
 16797  005C80                     l6438:
 16798                           
 16799                           ;lib_ili9341.c: 147:     {;lib_ili9341.c: 148:         return 1;
 16800  005C80  0E01               	movlw	1
 16801  005C82  EF44  F02E         	goto	l367
 16802  005C86                     l6442:
 16803                           
 16804                           ;lib_ili9341.c: 151:     return 0;
 16805  005C86  0E00               	movlw	0
 16806  005C88                     l367:
 16807  005C88  0012               	return		;funcret
 16808  005C8A                     __end_of_lcd_set_cursor:
 16809                           	opt callstack 0
 16810                           
 16811 ;; *************** function _lcd_set_cursor_y *****************
 16812 ;; Defined at:
 16813 ;;		line 170 in file "lib_ili9341.c"
 16814 ;; Parameters:    Size  Location     Type
 16815 ;;  y               2    5[COMRAM] unsigned short 
 16816 ;; Auto vars:     Size  Location     Type
 16817 ;;		None
 16818 ;; Return value:  Size  Location     Type
 16819 ;;                  1    wreg      unsigned char 
 16820 ;; Registers used:
 16821 ;;		wreg, status,2, status,0, cstack
 16822 ;; Tracked objects:
 16823 ;;		On entry : 0/0
 16824 ;;		On exit  : 0/0
 16825 ;;		Unchanged: 0/0
 16826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16827 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16830 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16831 ;;Total ram usage:        2 bytes
 16832 ;; Hardware stack levels used:    1
 16833 ;; Hardware stack levels required when called:    6
 16834 ;; This function calls:
 16835 ;;		_lcd_send
 16836 ;; This function is called by:
 16837 ;;		_lcd_set_cursor
 16838 ;; This function uses a non-reentrant model
 16839 ;;
 16840                           
 16841                           	psect	text51
 16842  005AE8                     __ptext51:
 16843                           	opt callstack 0
 16844  005AE8                     _lcd_set_cursor_y:
 16845                           	opt callstack 21
 16846  005AE8                     
 16847                           ;lib_ili9341.c: 170: uint8_t lcd_set_cursor_y(uint16_t y);lib_ili9341.c: 171: {;lib_ili9
      +                          341.c: 172:     if( y >= 240 )
 16848  005AE8  5007               	movf	(lcd_set_cursor_y@y+1)^0,w,c
 16849  005AEA  E109               	bnz	u7320
 16850  005AEC  0EF0               	movlw	240
 16851  005AEE  5C06               	subwf	lcd_set_cursor_y@y^0,w,c
 16852  005AF0  A0D8               	btfss	status,0,c
 16853  005AF2  EF7D  F02D         	goto	u7321
 16854  005AF6  EF7F  F02D         	goto	u7320
 16855  005AFA                     u7321:
 16856  005AFA  EF82  F02D         	goto	l6048
 16857  005AFE                     u7320:
 16858  005AFE                     
 16859                           ;lib_ili9341.c: 173:     {;lib_ili9341.c: 174:         return 1;
 16860  005AFE  0E01               	movlw	1
 16861  005B00  EF97  F02D         	goto	l375
 16862  005B04                     l6048:
 16863                           
 16864                           ;lib_ili9341.c: 177:     lcd_send(0, 0x2A);
 16865  005B04  0E2A               	movlw	42
 16866  005B06  6E04               	movwf	lcd_send@value^0,c
 16867  005B08  0E00               	movlw	0
 16868  005B0A  ECD0  F02F         	call	_lcd_send
 16869                           
 16870                           ;lib_ili9341.c: 178:     lcd_send(1, y >> 8);
 16871  005B0E  5007               	movf	(lcd_set_cursor_y@y+1)^0,w,c
 16872  005B10  6E04               	movwf	lcd_send@value^0,c
 16873  005B12  0E01               	movlw	1
 16874  005B14  ECD0  F02F         	call	_lcd_send
 16875                           
 16876                           ;lib_ili9341.c: 179:     lcd_send(1, y & 0xFF);
 16877  005B18  C006  F004         	movff	lcd_set_cursor_y@y,lcd_send@value
 16878  005B1C  0E01               	movlw	1
 16879  005B1E  ECD0  F02F         	call	_lcd_send
 16880                           
 16881                           ;lib_ili9341.c: 180:     lcd_send(0, 0x2c);
 16882  005B22  0E2C               	movlw	44
 16883  005B24  6E04               	movwf	lcd_send@value^0,c
 16884  005B26  0E00               	movlw	0
 16885  005B28  ECD0  F02F         	call	_lcd_send
 16886  005B2C                     
 16887                           ;lib_ili9341.c: 182:     return 0;
 16888  005B2C  0E00               	movlw	0
 16889  005B2E                     l375:
 16890  005B2E  0012               	return		;funcret
 16891  005B30                     __end_of_lcd_set_cursor_y:
 16892                           	opt callstack 0
 16893                           
 16894 ;; *************** function _lcd_set_cursor_x *****************
 16895 ;; Defined at:
 16896 ;;		line 155 in file "lib_ili9341.c"
 16897 ;; Parameters:    Size  Location     Type
 16898 ;;  x               2    5[COMRAM] unsigned short 
 16899 ;; Auto vars:     Size  Location     Type
 16900 ;;		None
 16901 ;; Return value:  Size  Location     Type
 16902 ;;                  1    wreg      unsigned char 
 16903 ;; Registers used:
 16904 ;;		wreg, status,2, status,0, cstack
 16905 ;; Tracked objects:
 16906 ;;		On entry : 0/0
 16907 ;;		On exit  : 0/0
 16908 ;;		Unchanged: 0/0
 16909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16910 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16913 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16914 ;;Total ram usage:        2 bytes
 16915 ;; Hardware stack levels used:    1
 16916 ;; Hardware stack levels required when called:    6
 16917 ;; This function calls:
 16918 ;;		_lcd_send
 16919 ;; This function is called by:
 16920 ;;		_lcd_set_cursor
 16921 ;; This function uses a non-reentrant model
 16922 ;;
 16923                           
 16924                           	psect	text52
 16925  005B30                     __ptext52:
 16926                           	opt callstack 0
 16927  005B30                     _lcd_set_cursor_x:
 16928                           	opt callstack 21
 16929  005B30                     
 16930                           ;lib_ili9341.c: 155: uint8_t lcd_set_cursor_x(uint16_t x);lib_ili9341.c: 156: {;lib_ili9
      +                          341.c: 157:     if( x >= 320 )
 16931  005B30  0E40               	movlw	64
 16932  005B32  5C06               	subwf	lcd_set_cursor_x@x^0,w,c
 16933  005B34  0E01               	movlw	1
 16934  005B36  5807               	subwfb	(lcd_set_cursor_x@x+1)^0,w,c
 16935  005B38  A0D8               	btfss	status,0,c
 16936  005B3A  EFA1  F02D         	goto	u7311
 16937  005B3E  EFA3  F02D         	goto	u7310
 16938  005B42                     u7311:
 16939  005B42  EFA6  F02D         	goto	l6036
 16940  005B46                     u7310:
 16941  005B46                     
 16942                           ;lib_ili9341.c: 158:     {;lib_ili9341.c: 159:         return 1;
 16943  005B46  0E01               	movlw	1
 16944  005B48  EFBB  F02D         	goto	l371
 16945  005B4C                     l6036:
 16946                           
 16947                           ;lib_ili9341.c: 162:     lcd_send(0, 0x2B);
 16948  005B4C  0E2B               	movlw	43
 16949  005B4E  6E04               	movwf	lcd_send@value^0,c
 16950  005B50  0E00               	movlw	0
 16951  005B52  ECD0  F02F         	call	_lcd_send
 16952                           
 16953                           ;lib_ili9341.c: 163:     lcd_send(1, x >> 8);
 16954  005B56  5007               	movf	(lcd_set_cursor_x@x+1)^0,w,c
 16955  005B58  6E04               	movwf	lcd_send@value^0,c
 16956  005B5A  0E01               	movlw	1
 16957  005B5C  ECD0  F02F         	call	_lcd_send
 16958                           
 16959                           ;lib_ili9341.c: 164:     lcd_send(1, x & 0xFF);
 16960  005B60  C006  F004         	movff	lcd_set_cursor_x@x,lcd_send@value
 16961  005B64  0E01               	movlw	1
 16962  005B66  ECD0  F02F         	call	_lcd_send
 16963                           
 16964                           ;lib_ili9341.c: 165:     lcd_send(0, 0x2c);
 16965  005B6A  0E2C               	movlw	44
 16966  005B6C  6E04               	movwf	lcd_send@value^0,c
 16967  005B6E  0E00               	movlw	0
 16968  005B70  ECD0  F02F         	call	_lcd_send
 16969  005B74                     
 16970                           ;lib_ili9341.c: 167:     return 0;
 16971  005B74  0E00               	movlw	0
 16972  005B76                     l371:
 16973  005B76  0012               	return		;funcret
 16974  005B78                     __end_of_lcd_set_cursor_x:
 16975                           	opt callstack 0
 16976                           
 16977 ;; *************** function _lcd_draw_pixel *****************
 16978 ;; Defined at:
 16979 ;;		line 185 in file "lib_ili9341.c"
 16980 ;; Parameters:    Size  Location     Type
 16981 ;;  color           2    5[COMRAM] unsigned short 
 16982 ;; Auto vars:     Size  Location     Type
 16983 ;;		None
 16984 ;; Return value:  Size  Location     Type
 16985 ;;                  1    wreg      unsigned char 
 16986 ;; Registers used:
 16987 ;;		wreg, status,2, cstack
 16988 ;; Tracked objects:
 16989 ;;		On entry : 0/0
 16990 ;;		On exit  : 0/0
 16991 ;;		Unchanged: 0/0
 16992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16993 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16996 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16997 ;;Total ram usage:        2 bytes
 16998 ;; Hardware stack levels used:    1
 16999 ;; Hardware stack levels required when called:    6
 17000 ;; This function calls:
 17001 ;;		_lcd_send
 17002 ;; This function is called by:
 17003 ;;		_lcd_fill
 17004 ;;		_lcd_draw_char
 17005 ;;		_lcd_draw_pixel_at
 17006 ;;		_lcd_fill_rect
 17007 ;; This function uses a non-reentrant model
 17008 ;;
 17009                           
 17010                           	psect	text53
 17011  005FD0                     __ptext53:
 17012                           	opt callstack 0
 17013  005FD0                     _lcd_draw_pixel:
 17014                           	opt callstack 22
 17015  005FD0                     
 17016                           ;lib_ili9341.c: 185: uint8_t lcd_draw_pixel(uint16_t color);lib_ili9341.c: 186: {;lib_il
      +                          i9341.c: 187:     lcd_send(1, color >> 8);
 17017  005FD0  5007               	movf	(lcd_draw_pixel@color+1)^0,w,c
 17018  005FD2  6E04               	movwf	lcd_send@value^0,c
 17019  005FD4  0E01               	movlw	1
 17020  005FD6  ECD0  F02F         	call	_lcd_send
 17021                           
 17022                           ;lib_ili9341.c: 188:     lcd_send(1, color & 0xFF);
 17023  005FDA  C006  F004         	movff	lcd_draw_pixel@color,lcd_send@value
 17024  005FDE  0E01               	movlw	1
 17025  005FE0  ECD0  F02F         	call	_lcd_send
 17026  005FE4  0012               	return		;funcret
 17027  005FE6                     __end_of_lcd_draw_pixel:
 17028                           	opt callstack 0
 17029                           
 17030 ;; *************** function _lcd_send *****************
 17031 ;; Defined at:
 17032 ;;		line 134 in file "lib_ili9341.c"
 17033 ;; Parameters:    Size  Location     Type
 17034 ;;  dc              1    wreg     _Bool 
 17035 ;;  value           1    3[COMRAM] unsigned char 
 17036 ;; Auto vars:     Size  Location     Type
 17037 ;;  dc              1    4[COMRAM] _Bool 
 17038 ;; Return value:  Size  Location     Type
 17039 ;;                  1    wreg      void 
 17040 ;; Registers used:
 17041 ;;		wreg, status,2, cstack
 17042 ;; Tracked objects:
 17043 ;;		On entry : 0/0
 17044 ;;		On exit  : 0/0
 17045 ;;		Unchanged: 0/0
 17046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17047 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17048 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17050 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17051 ;;Total ram usage:        2 bytes
 17052 ;; Hardware stack levels used:    1
 17053 ;; Hardware stack levels required when called:    5
 17054 ;; This function calls:
 17055 ;;		_SPI_ExchangeByte
 17056 ;; This function is called by:
 17057 ;;		_lcd_init
 17058 ;;		_lcd_set_cursor_x
 17059 ;;		_lcd_set_cursor_y
 17060 ;;		_lcd_draw_pixel
 17061 ;; This function uses a non-reentrant model
 17062 ;;
 17063                           
 17064                           	psect	text54
 17065  005FA0                     __ptext54:
 17066                           	opt callstack 0
 17067  005FA0                     _lcd_send:
 17068                           	opt callstack 24
 17069                           
 17070                           ;incstack = 0
 17071                           ;lcd_send@dc stored from wreg
 17072  005FA0  6E05               	movwf	lcd_send@dc^0,c
 17073  005FA2                     
 17074                           ;lib_ili9341.c: 134: void lcd_send(_Bool dc, uint8_t value);lib_ili9341.c: 135: {;lib_il
      +                          i9341.c: 136:     LATEbits.LE0 = dc;
 17075  005FA2  B005               	btfsc	lcd_send@dc^0,0,c
 17076  005FA4  D002               	bra	u6055
 17077  005FA6  908D               	bcf	141,0,c	;volatile
 17078  005FA8  D001               	bra	u6056
 17079  005FAA                     u6055:
 17080  005FAA  808D               	bsf	141,0,c	;volatile
 17081  005FAC                     u6056:
 17082  005FAC                     
 17083                           ;lib_ili9341.c: 138:     LATEbits.LE1 = 0;
 17084  005FAC  928D               	bcf	141,1,c	;volatile
 17085  005FAE                     
 17086                           ;lib_ili9341.c: 140:     SPI_ExchangeByte(value);
 17087  005FAE  5004               	movf	lcd_send@value^0,w,c
 17088  005FB0  ECB6  F02F         	call	_SPI_ExchangeByte
 17089  005FB4                     
 17090                           ;lib_ili9341.c: 141:     LATEbits.LE1 = 1;
 17091  005FB4  828D               	bsf	141,1,c	;volatile
 17092  005FB6  0012               	return		;funcret
 17093  005FB8                     __end_of_lcd_send:
 17094                           	opt callstack 0
 17095                           
 17096 ;; *************** function _SPI_ExchangeByte *****************
 17097 ;; Defined at:
 17098 ;;		line 92 in file "mcc_generated_files/spi.c"
 17099 ;; Parameters:    Size  Location     Type
 17100 ;;  data            1    wreg     unsigned char 
 17101 ;; Auto vars:     Size  Location     Type
 17102 ;;  data            1    2[COMRAM] unsigned char 
 17103 ;; Return value:  Size  Location     Type
 17104 ;;                  1    wreg      unsigned char 
 17105 ;; Registers used:
 17106 ;;		wreg, status,2
 17107 ;; Tracked objects:
 17108 ;;		On entry : 0/0
 17109 ;;		On exit  : 0/0
 17110 ;;		Unchanged: 0/0
 17111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17113 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17115 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17116 ;;Total ram usage:        1 bytes
 17117 ;; Hardware stack levels used:    1
 17118 ;; Hardware stack levels required when called:    4
 17119 ;; This function calls:
 17120 ;;		Nothing
 17121 ;; This function is called by:
 17122 ;;		_lcd_send
 17123 ;;		_SPI_WriteBlock
 17124 ;;		_SPI_ReadBlock
 17125 ;; This function uses a non-reentrant model
 17126 ;;
 17127                           
 17128                           	psect	text55
 17129  005F6C                     __ptext55:
 17130                           	opt callstack 0
 17131  005F6C                     _SPI_ExchangeByte:
 17132                           	opt callstack 24
 17133                           
 17134                           ;incstack = 0
 17135                           ;SPI_ExchangeByte@data stored from wreg
 17136  005F6C  6E03               	movwf	SPI_ExchangeByte@data^0,c
 17137  005F6E                     
 17138                           ;mcc_generated_files/spi.c: 92: uint8_t SPI_ExchangeByte(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 93: {;mcc_generated_files/spi.c: 94:     SSPBUF = data;
 17139  005F6E  C003  FFC9         	movff	SPI_ExchangeByte@data,4041	;volatile
 17140  005F72                     l130:
 17141  005F72  A69E               	btfss	158,3,c	;volatile
 17142  005F74  EFBE  F02F         	goto	u4781
 17143  005F78  EFC0  F02F         	goto	u4780
 17144  005F7C                     u4781:
 17145  005F7C  EFB9  F02F         	goto	l130
 17146  005F80                     u4780:
 17147  005F80                     
 17148                           ;mcc_generated_files/spi.c: 96:     PIR1bits.SSPIF = 0;
 17149  005F80  969E               	bcf	158,3,c	;volatile
 17150                           
 17151                           ;mcc_generated_files/spi.c: 97:     return SSPBUF;
 17152  005F82  50C9               	movf	201,w,c	;volatile
 17153  005F84  0012               	return		;funcret
 17154  005F86                     __end_of_SPI_ExchangeByte:
 17155                           	opt callstack 0
 17156                           
 17157 ;; *************** function ___xxtofl *****************
 17158 ;; Defined at:
 17159 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 17160 ;; Parameters:    Size  Location     Type
 17161 ;;  sign            1    wreg     unsigned char 
 17162 ;;  val             4    2[COMRAM] long 
 17163 ;; Auto vars:     Size  Location     Type
 17164 ;;  sign            1   10[COMRAM] unsigned char 
 17165 ;;  arg             4   12[COMRAM] unsigned long 
 17166 ;;  exp             1   11[COMRAM] unsigned char 
 17167 ;; Return value:  Size  Location     Type
 17168 ;;                  4    2[COMRAM] unsigned char 
 17169 ;; Registers used:
 17170 ;;		wreg, status,2, status,0
 17171 ;; Tracked objects:
 17172 ;;		On entry : 0/0
 17173 ;;		On exit  : 0/0
 17174 ;;		Unchanged: 0/0
 17175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17176 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17177 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17178 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17179 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17180 ;;Total ram usage:       14 bytes
 17181 ;; Hardware stack levels used:    1
 17182 ;; Hardware stack levels required when called:    4
 17183 ;; This function calls:
 17184 ;;		Nothing
 17185 ;; This function is called by:
 17186 ;;		_main
 17187 ;; This function uses a non-reentrant model
 17188 ;;
 17189                           
 17190                           	psect	text56
 17191  0041E6                     __ptext56:
 17192                           	opt callstack 0
 17193  0041E6                     ___xxtofl:
 17194                           	opt callstack 26
 17195                           
 17196                           ;incstack = 0
 17197                           ;___xxtofl@sign stored from wreg
 17198  0041E6  6E0B               	movwf	___xxtofl@sign^0,c
 17199  0041E8  500B               	movf	___xxtofl@sign^0,w,c
 17200  0041EA  B4D8               	btfsc	status,2,c
 17201  0041EC  EFFA  F020         	goto	u8231
 17202  0041F0  EFFC  F020         	goto	u8230
 17203  0041F4                     u8231:
 17204  0041F4  EF1E  F021         	goto	l1470
 17205  0041F8                     u8230:
 17206  0041F8  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
 17207  0041FA  EF03  F021         	goto	u8240
 17208  0041FE  EF01  F021         	goto	u8241
 17209  004202                     u8241:
 17210  004202  EF1E  F021         	goto	l1470
 17211  004206                     u8240:
 17212  004206  C003  F007         	movff	___xxtofl@val,??___xxtofl
 17213  00420A  C004  F008         	movff	___xxtofl@val+1,??___xxtofl+1
 17214  00420E  C005  F009         	movff	___xxtofl@val+2,??___xxtofl+2
 17215  004212  C006  F00A         	movff	___xxtofl@val+3,??___xxtofl+3
 17216  004216  1E07               	comf	??___xxtofl^0,f,c
 17217  004218  1E08               	comf	(??___xxtofl+1)^0,f,c
 17218  00421A  1E09               	comf	(??___xxtofl+2)^0,f,c
 17219  00421C  1E0A               	comf	(??___xxtofl+3)^0,f,c
 17220  00421E  2A07               	incf	??___xxtofl^0,f,c
 17221  004220  0E00               	movlw	0
 17222  004222  2208               	addwfc	(??___xxtofl+1)^0,f,c
 17223  004224  2209               	addwfc	(??___xxtofl+2)^0,f,c
 17224  004226  220A               	addwfc	(??___xxtofl+3)^0,f,c
 17225  004228  C007  F00D         	movff	??___xxtofl,___xxtofl@arg
 17226  00422C  C008  F00E         	movff	??___xxtofl+1,___xxtofl@arg+1
 17227  004230  C009  F00F         	movff	??___xxtofl+2,___xxtofl@arg+2
 17228  004234  C00A  F010         	movff	??___xxtofl+3,___xxtofl@arg+3
 17229  004238  EF26  F021         	goto	l6892
 17230  00423C                     l1470:
 17231  00423C  C003  F00D         	movff	___xxtofl@val,___xxtofl@arg
 17232  004240  C004  F00E         	movff	___xxtofl@val+1,___xxtofl@arg+1
 17233  004244  C005  F00F         	movff	___xxtofl@val+2,___xxtofl@arg+2
 17234  004248  C006  F010         	movff	___xxtofl@val+3,___xxtofl@arg+3
 17235  00424C                     l6892:
 17236  00424C  5003               	movf	___xxtofl@val^0,w,c
 17237  00424E  1004               	iorwf	(___xxtofl@val+1)^0,w,c
 17238  004250  1005               	iorwf	(___xxtofl@val+2)^0,w,c
 17239  004252  1006               	iorwf	(___xxtofl@val+3)^0,w,c
 17240  004254  A4D8               	btfss	status,2,c
 17241  004256  EF2F  F021         	goto	u8251
 17242  00425A  EF31  F021         	goto	u8250
 17243  00425E                     u8251:
 17244  00425E  EF3B  F021         	goto	l6898
 17245  004262                     u8250:
 17246  004262  0E00               	movlw	0
 17247  004264  6E03               	movwf	?___xxtofl^0,c
 17248  004266  0E00               	movlw	0
 17249  004268  6E04               	movwf	(?___xxtofl+1)^0,c
 17250  00426A  0E00               	movlw	0
 17251  00426C  6E05               	movwf	(?___xxtofl+2)^0,c
 17252  00426E  0E00               	movlw	0
 17253  004270  6E06               	movwf	(?___xxtofl+3)^0,c
 17254  004272  EFCC  F021         	goto	l1473
 17255  004276                     l6898:
 17256  004276  0E96               	movlw	150
 17257  004278  6E0C               	movwf	___xxtofl@exp^0,c
 17258  00427A  EF45  F021         	goto	l6902
 17259  00427E                     l6900:
 17260  00427E  2A0C               	incf	___xxtofl@exp^0,f,c
 17261  004280  90D8               	bcf	status,0,c
 17262  004282  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
 17263  004284  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
 17264  004286  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
 17265  004288  320D               	rrcf	___xxtofl@arg^0,f,c
 17266  00428A                     l6902:
 17267  00428A  0E00               	movlw	0
 17268  00428C  140D               	andwf	___xxtofl@arg^0,w,c
 17269  00428E  6E07               	movwf	??___xxtofl^0,c
 17270  004290  0E00               	movlw	0
 17271  004292  140E               	andwf	(___xxtofl@arg+1)^0,w,c
 17272  004294  6E08               	movwf	(??___xxtofl+1)^0,c
 17273  004296  0E00               	movlw	0
 17274  004298  140F               	andwf	(___xxtofl@arg+2)^0,w,c
 17275  00429A  6E09               	movwf	(??___xxtofl+2)^0,c
 17276  00429C  0EFE               	movlw	254
 17277  00429E  1410               	andwf	(___xxtofl@arg+3)^0,w,c
 17278  0042A0  6E0A               	movwf	(??___xxtofl+3)^0,c
 17279  0042A2  5007               	movf	??___xxtofl^0,w,c
 17280  0042A4  1008               	iorwf	(??___xxtofl+1)^0,w,c
 17281  0042A6  1009               	iorwf	(??___xxtofl+2)^0,w,c
 17282  0042A8  100A               	iorwf	(??___xxtofl+3)^0,w,c
 17283  0042AA  A4D8               	btfss	status,2,c
 17284  0042AC  EF5A  F021         	goto	u8261
 17285  0042B0  EF5C  F021         	goto	u8260
 17286  0042B4                     u8261:
 17287  0042B4  EF3F  F021         	goto	l6900
 17288  0042B8                     u8260:
 17289  0042B8  EF6A  F021         	goto	l1477
 17290  0042BC                     l6904:
 17291  0042BC  2A0C               	incf	___xxtofl@exp^0,f,c
 17292  0042BE  0E01               	movlw	1
 17293  0042C0  260D               	addwf	___xxtofl@arg^0,f,c
 17294  0042C2  0E00               	movlw	0
 17295  0042C4  220E               	addwfc	(___xxtofl@arg+1)^0,f,c
 17296  0042C6  220F               	addwfc	(___xxtofl@arg+2)^0,f,c
 17297  0042C8  2210               	addwfc	(___xxtofl@arg+3)^0,f,c
 17298  0042CA  90D8               	bcf	status,0,c
 17299  0042CC  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
 17300  0042CE  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
 17301  0042D0  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
 17302  0042D2  320D               	rrcf	___xxtofl@arg^0,f,c
 17303  0042D4                     l1477:
 17304  0042D4  0E00               	movlw	0
 17305  0042D6  140D               	andwf	___xxtofl@arg^0,w,c
 17306  0042D8  6E07               	movwf	??___xxtofl^0,c
 17307  0042DA  0E00               	movlw	0
 17308  0042DC  140E               	andwf	(___xxtofl@arg+1)^0,w,c
 17309  0042DE  6E08               	movwf	(??___xxtofl+1)^0,c
 17310  0042E0  0E00               	movlw	0
 17311  0042E2  140F               	andwf	(___xxtofl@arg+2)^0,w,c
 17312  0042E4  6E09               	movwf	(??___xxtofl+2)^0,c
 17313  0042E6  0EFF               	movlw	255
 17314  0042E8  1410               	andwf	(___xxtofl@arg+3)^0,w,c
 17315  0042EA  6E0A               	movwf	(??___xxtofl+3)^0,c
 17316  0042EC  5007               	movf	??___xxtofl^0,w,c
 17317  0042EE  1008               	iorwf	(??___xxtofl+1)^0,w,c
 17318  0042F0  1009               	iorwf	(??___xxtofl+2)^0,w,c
 17319  0042F2  100A               	iorwf	(??___xxtofl+3)^0,w,c
 17320  0042F4  A4D8               	btfss	status,2,c
 17321  0042F6  EF7F  F021         	goto	u8271
 17322  0042FA  EF81  F021         	goto	u8270
 17323  0042FE                     u8271:
 17324  0042FE  EF5E  F021         	goto	l6904
 17325  004302                     u8270:
 17326  004302  EF89  F021         	goto	l6912
 17327  004306                     l6910:
 17328  004306  060C               	decf	___xxtofl@exp^0,f,c
 17329  004308  90D8               	bcf	status,0,c
 17330  00430A  360D               	rlcf	___xxtofl@arg^0,f,c
 17331  00430C  360E               	rlcf	(___xxtofl@arg+1)^0,f,c
 17332  00430E  360F               	rlcf	(___xxtofl@arg+2)^0,f,c
 17333  004310  3610               	rlcf	(___xxtofl@arg+3)^0,f,c
 17334  004312                     l6912:
 17335  004312  BE0F               	btfsc	(___xxtofl@arg+2)^0,7,c
 17336  004314  EF8E  F021         	goto	u8281
 17337  004318  EF90  F021         	goto	u8280
 17338  00431C                     u8281:
 17339  00431C  EF98  F021         	goto	l1484
 17340  004320                     u8280:
 17341  004320  0E02               	movlw	2
 17342  004322  600C               	cpfslt	___xxtofl@exp^0,c
 17343  004324  EF96  F021         	goto	u8291
 17344  004328  EF98  F021         	goto	u8290
 17345  00432C                     u8291:
 17346  00432C  EF83  F021         	goto	l6910
 17347  004330                     u8290:
 17348  004330                     l1484:
 17349  004330  B00C               	btfsc	___xxtofl@exp^0,0,c
 17350  004332  EF9D  F021         	goto	u8301
 17351  004336  EF9F  F021         	goto	u8300
 17352  00433A                     u8301:
 17353  00433A  EFA0  F021         	goto	l6918
 17354  00433E                     u8300:
 17355  00433E  9E0F               	bcf	(___xxtofl@arg+2)^0,7,c
 17356  004340                     l6918:
 17357  004340  90D8               	bcf	status,0,c
 17358  004342  320C               	rrcf	___xxtofl@exp^0,f,c
 17359  004344  C00C  F007         	movff	___xxtofl@exp,??___xxtofl
 17360  004348  6A08               	clrf	(??___xxtofl+1)^0,c
 17361  00434A  6A09               	clrf	(??___xxtofl+2)^0,c
 17362  00434C  6A0A               	clrf	(??___xxtofl+3)^0,c
 17363  00434E  C007  F00A         	movff	??___xxtofl,??___xxtofl+3
 17364  004352  6A09               	clrf	(??___xxtofl+2)^0,c
 17365  004354  6A08               	clrf	(??___xxtofl+1)^0,c
 17366  004356  6A07               	clrf	??___xxtofl^0,c
 17367  004358  5007               	movf	??___xxtofl^0,w,c
 17368  00435A  120D               	iorwf	___xxtofl@arg^0,f,c
 17369  00435C  5008               	movf	(??___xxtofl+1)^0,w,c
 17370  00435E  120E               	iorwf	(___xxtofl@arg+1)^0,f,c
 17371  004360  5009               	movf	(??___xxtofl+2)^0,w,c
 17372  004362  120F               	iorwf	(___xxtofl@arg+2)^0,f,c
 17373  004364  500A               	movf	(??___xxtofl+3)^0,w,c
 17374  004366  1210               	iorwf	(___xxtofl@arg+3)^0,f,c
 17375  004368  500B               	movf	___xxtofl@sign^0,w,c
 17376  00436A  B4D8               	btfsc	status,2,c
 17377  00436C  EFBA  F021         	goto	u8311
 17378  004370  EFBC  F021         	goto	u8310
 17379  004374                     u8311:
 17380  004374  EFC4  F021         	goto	l6928
 17381  004378                     u8310:
 17382  004378  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
 17383  00437A  EFC3  F021         	goto	u8320
 17384  00437E  EFC1  F021         	goto	u8321
 17385  004382                     u8321:
 17386  004382  EFC4  F021         	goto	l6928
 17387  004386                     u8320:
 17388  004386  8E10               	bsf	(___xxtofl@arg+3)^0,7,c
 17389  004388                     l6928:
 17390  004388  C00D  F003         	movff	___xxtofl@arg,?___xxtofl
 17391  00438C  C00E  F004         	movff	___xxtofl@arg+1,?___xxtofl+1
 17392  004390  C00F  F005         	movff	___xxtofl@arg+2,?___xxtofl+2
 17393  004394  C010  F006         	movff	___xxtofl@arg+3,?___xxtofl+3
 17394  004398                     l1473:
 17395  004398  0012               	return		;funcret
 17396  00439A                     __end_of___xxtofl:
 17397                           	opt callstack 0
 17398                           
 17399 ;; *************** function _SYSTEM_Initialize *****************
 17400 ;; Defined at:
 17401 ;;		line 50 in file "mcc_generated_files/mcc.c"
 17402 ;; Parameters:    Size  Location     Type
 17403 ;;		None
 17404 ;; Auto vars:     Size  Location     Type
 17405 ;;		None
 17406 ;; Return value:  Size  Location     Type
 17407 ;;                  1    wreg      void 
 17408 ;; Registers used:
 17409 ;;		wreg, status,2, status,0, cstack
 17410 ;; Tracked objects:
 17411 ;;		On entry : 0/0
 17412 ;;		On exit  : 0/0
 17413 ;;		Unchanged: 0/0
 17414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17419 ;;Total ram usage:        0 bytes
 17420 ;; Hardware stack levels used:    1
 17421 ;; Hardware stack levels required when called:    6
 17422 ;; This function calls:
 17423 ;;		_ADC_Initialize
 17424 ;;		_INTERRUPT_Initialize
 17425 ;;		_OSCILLATOR_Initialize
 17426 ;;		_PIN_MANAGER_Initialize
 17427 ;;		_SPI_Initialize
 17428 ;;		_TMR1_Initialize
 17429 ;; This function is called by:
 17430 ;;		_main
 17431 ;; This function uses a non-reentrant model
 17432 ;;
 17433                           
 17434                           	psect	text57
 17435  005F86                     __ptext57:
 17436                           	opt callstack 0
 17437  005F86                     _SYSTEM_Initialize:
 17438                           	opt callstack 24
 17439  005F86                     
 17440                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
 17441  005F86  EC19  F030         	call	_INTERRUPT_Initialize	;wreg free
 17442  005F8A                     
 17443                           ;mcc_generated_files/mcc.c: 54:     SPI_Initialize();
 17444  005F8A  ECFE  F02F         	call	_SPI_Initialize	;wreg free
 17445  005F8E                     
 17446                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 17447  005F8E  ECDF  F02D         	call	_PIN_MANAGER_Initialize	;wreg free
 17448  005F92                     
 17449                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 17450  005F92  EC07  F030         	call	_OSCILLATOR_Initialize	;wreg free
 17451  005F96                     
 17452                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
 17453  005F96  EC8D  F02F         	call	_TMR1_Initialize	;wreg free
 17454  005F9A                     
 17455                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
 17456  005F9A  ECF3  F02F         	call	_ADC_Initialize	;wreg free
 17457  005F9E  0012               	return		;funcret
 17458  005FA0                     __end_of_SYSTEM_Initialize:
 17459                           	opt callstack 0
 17460                           
 17461 ;; *************** function _TMR1_Initialize *****************
 17462 ;; Defined at:
 17463 ;;		line 63 in file "mcc_generated_files/tmr1.c"
 17464 ;; Parameters:    Size  Location     Type
 17465 ;;		None
 17466 ;; Auto vars:     Size  Location     Type
 17467 ;;		None
 17468 ;; Return value:  Size  Location     Type
 17469 ;;                  1    wreg      void 
 17470 ;; Registers used:
 17471 ;;		wreg, status,2, status,0
 17472 ;; Tracked objects:
 17473 ;;		On entry : 0/0
 17474 ;;		On exit  : 0/0
 17475 ;;		Unchanged: 0/0
 17476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17479 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17480 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17481 ;;Total ram usage:        2 bytes
 17482 ;; Hardware stack levels used:    1
 17483 ;; Hardware stack levels required when called:    4
 17484 ;; This function calls:
 17485 ;;		Nothing
 17486 ;; This function is called by:
 17487 ;;		_SYSTEM_Initialize
 17488 ;; This function uses a non-reentrant model
 17489 ;;
 17490                           
 17491                           	psect	text58
 17492  005F1A                     __ptext58:
 17493                           	opt callstack 0
 17494  005F1A                     _TMR1_Initialize:
 17495                           	opt callstack 25
 17496  005F1A                     
 17497                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
 17498  005F1A  0E00               	movlw	0
 17499  005F1C  6EAA               	movwf	170,c	;volatile
 17500                           
 17501                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x0B;
 17502  005F1E  0E0B               	movlw	11
 17503  005F20  6ECF               	movwf	207,c	;volatile
 17504                           
 17505                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0xDC;
 17506  005F22  0EDC               	movlw	220
 17507  005F24  6ECE               	movwf	206,c	;volatile
 17508  005F26                     
 17509                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
 17510  005F26  909E               	bcf	158,0,c	;volatile
 17511  005F28                     
 17512                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 17513  005F28  50CE               	movf	206,w,c	;volatile
 17514  005F2A  CFCF F003          	movff	4047,??_TMR1_Initialize	;volatile
 17515  005F2E  6A04               	clrf	(??_TMR1_Initialize+1)^0,c
 17516  005F30  C003  F004         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 17517  005F34  6A03               	clrf	??_TMR1_Initialize^0,c
 17518  005F36  1003               	iorwf	??_TMR1_Initialize^0,w,c
 17519  005F38  0101               	movlb	1	; () banked
 17520  005F3A  6FFB               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 17521  005F3C  5004               	movf	(??_TMR1_Initialize+1)^0,w,c
 17522  005F3E  6FFC               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 17523  005F40                     
 17524                           ; BSR set to: 1
 17525                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x31;
 17526  005F40  0E31               	movlw	49
 17527  005F42  6ECD               	movwf	205,c	;volatile
 17528  005F44                     
 17529                           ; BSR set to: 1
 17530  005F44  0012               	return		;funcret
 17531  005F46                     __end_of_TMR1_Initialize:
 17532                           	opt callstack 0
 17533                           
 17534 ;; *************** function _SPI_Initialize *****************
 17535 ;; Defined at:
 17536 ;;		line 62 in file "mcc_generated_files/spi.c"
 17537 ;; Parameters:    Size  Location     Type
 17538 ;;		None
 17539 ;; Auto vars:     Size  Location     Type
 17540 ;;		None
 17541 ;; Return value:  Size  Location     Type
 17542 ;;                  1    wreg      void 
 17543 ;; Registers used:
 17544 ;;		wreg, status,2
 17545 ;; Tracked objects:
 17546 ;;		On entry : 0/0
 17547 ;;		On exit  : 0/0
 17548 ;;		Unchanged: 0/0
 17549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17554 ;;Total ram usage:        0 bytes
 17555 ;; Hardware stack levels used:    1
 17556 ;; Hardware stack levels required when called:    4
 17557 ;; This function calls:
 17558 ;;		Nothing
 17559 ;; This function is called by:
 17560 ;;		_SYSTEM_Initialize
 17561 ;; This function uses a non-reentrant model
 17562 ;;
 17563                           
 17564                           	psect	text59
 17565  005FFC                     __ptext59:
 17566                           	opt callstack 0
 17567  005FFC                     _SPI_Initialize:
 17568                           	opt callstack 25
 17569  005FFC                     
 17570                           ;mcc_generated_files/spi.c: 65:     SSPSTAT = 0x40;
 17571  005FFC  0E40               	movlw	64
 17572  005FFE  6EC7               	movwf	199,c	;volatile
 17573                           
 17574                           ;mcc_generated_files/spi.c: 66:     SSPCON1 = 0x00;
 17575  006000  0E00               	movlw	0
 17576  006002  6EC6               	movwf	198,c	;volatile
 17577                           
 17578                           ;mcc_generated_files/spi.c: 67:     SSPADD = 0x01;
 17579  006004  0E01               	movlw	1
 17580  006006  6EC8               	movwf	200,c	;volatile
 17581  006008                     
 17582                           ;mcc_generated_files/spi.c: 68:     TRISCbits.TRISC3 = 0;
 17583  006008  9694               	bcf	148,3,c	;volatile
 17584  00600A                     
 17585                           ;mcc_generated_files/spi.c: 69:     SSPCON1bits.SSPEN = 0;
 17586  00600A  9AC6               	bcf	198,5,c	;volatile
 17587  00600C  0012               	return		;funcret
 17588  00600E                     __end_of_SPI_Initialize:
 17589                           	opt callstack 0
 17590                           
 17591 ;; *************** function _PIN_MANAGER_Initialize *****************
 17592 ;; Defined at:
 17593 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 17594 ;; Parameters:    Size  Location     Type
 17595 ;;		None
 17596 ;; Auto vars:     Size  Location     Type
 17597 ;;		None
 17598 ;; Return value:  Size  Location     Type
 17599 ;;                  1    wreg      void 
 17600 ;; Registers used:
 17601 ;;		wreg, status,2, status,0, cstack
 17602 ;; Tracked objects:
 17603 ;;		On entry : 0/0
 17604 ;;		On exit  : 0/0
 17605 ;;		Unchanged: 0/0
 17606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17611 ;;Total ram usage:        0 bytes
 17612 ;; Hardware stack levels used:    1
 17613 ;; Hardware stack levels required when called:    5
 17614 ;; This function calls:
 17615 ;;		_IOCB4_SetInterruptHandler
 17616 ;; This function is called by:
 17617 ;;		_SYSTEM_Initialize
 17618 ;; This function uses a non-reentrant model
 17619 ;;
 17620                           
 17621                           	psect	text60
 17622  005BBE                     __ptext60:
 17623                           	opt callstack 0
 17624  005BBE                     _PIN_MANAGER_Initialize:
 17625                           	opt callstack 24
 17626  005BBE                     
 17627                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
 17628  005BBE  0E00               	movlw	0
 17629  005BC0  6E8D               	movwf	141,c	;volatile
 17630                           
 17631                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 17632  005BC2  0E00               	movlw	0
 17633  005BC4  6E8C               	movwf	140,c	;volatile
 17634                           
 17635                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 17636  005BC6  0E00               	movlw	0
 17637  005BC8  6E89               	movwf	137,c	;volatile
 17638                           
 17639                           ;mcc_generated_files/pin_manager.c: 65:     LATB = 0x00;
 17640  005BCA  0E00               	movlw	0
 17641  005BCC  6E8A               	movwf	138,c	;volatile
 17642                           
 17643                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x00;
 17644  005BCE  0E00               	movlw	0
 17645  005BD0  6E8B               	movwf	139,c	;volatile
 17646                           
 17647                           ;mcc_generated_files/pin_manager.c: 71:     TRISE = 0x04;
 17648  005BD2  0E04               	movlw	4
 17649  005BD4  6E96               	movwf	150,c	;volatile
 17650                           
 17651                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0x0F;
 17652  005BD6  0E0F               	movlw	15
 17653  005BD8  6E92               	movwf	146,c	;volatile
 17654  005BDA                     
 17655                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
 17656  005BDA  6893               	setf	147,c	;volatile
 17657                           
 17658                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xD7;
 17659  005BDC  0ED7               	movlw	215
 17660  005BDE  6E94               	movwf	148,c	;volatile
 17661  005BE0                     
 17662                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xFF;
 17663  005BE0  6895               	setf	149,c	;volatile
 17664                           
 17665                           ;mcc_generated_files/pin_manager.c: 80:     ANCON0 = 0x87;
 17666  005BE2  0E87               	movlw	135
 17667  005BE4  010F               	movlb	15	; () banked
 17668  005BE6  6F5D               	movwf	93,b	;volatile
 17669                           
 17670                           ;mcc_generated_files/pin_manager.c: 81:     ANCON1 = 0x7D;
 17671  005BE8  0E7D               	movlw	125
 17672  005BEA  6F5C               	movwf	92,b	;volatile
 17673                           
 17674                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
 17675  005BEC  0E00               	movlw	0
 17676  005BEE  6F5B               	movwf	91,b	;volatile
 17677  005BF0                     
 17678                           ; BSR set to: 15
 17679                           ;mcc_generated_files/pin_manager.c: 87:     INTCON2bits.nRBPU = 1;
 17680  005BF0  8EF1               	bsf	241,7,c	;volatile
 17681  005BF2                     
 17682                           ; BSR set to: 15
 17683                           ;mcc_generated_files/pin_manager.c: 95:     IOCBbits.IOCB4 = 1;
 17684  005BF2  895A               	bsf	90,4,b	;volatile
 17685  005BF4                     
 17686                           ; BSR set to: 15
 17687                           ;mcc_generated_files/pin_manager.c: 100:     IOCB4_SetInterruptHandler(IOCB4_DefaultInte
      +                          rruptHandler);
 17688  005BF4  0E38               	movlw	low _IOCB4_DefaultInterruptHandler
 17689  005BF6  6E03               	movwf	IOCB4_SetInterruptHandler@InterruptHandler^0,c
 17690  005BF8  0E60               	movlw	high _IOCB4_DefaultInterruptHandler
 17691  005BFA  6E04               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)^0,c
 17692  005BFC  EC10  F030         	call	_IOCB4_SetInterruptHandler	;wreg free
 17693  005C00                     
 17694                           ;mcc_generated_files/pin_manager.c: 103:     INTCONbits.RBIE = 1;
 17695  005C00  86F2               	bsf	242,3,c	;volatile
 17696  005C02  0012               	return		;funcret
 17697  005C04                     __end_of_PIN_MANAGER_Initialize:
 17698                           	opt callstack 0
 17699                           
 17700 ;; *************** function _IOCB4_SetInterruptHandler *****************
 17701 ;; Defined at:
 17702 ;;		line 135 in file "mcc_generated_files/pin_manager.c"
 17703 ;; Parameters:    Size  Location     Type
 17704 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
 17705 ;;		 -> IOCB4_InterruptCall(1), IOCB4_DefaultInterruptHandler(1), 
 17706 ;; Auto vars:     Size  Location     Type
 17707 ;;		None
 17708 ;; Return value:  Size  Location     Type
 17709 ;;                  1    wreg      void 
 17710 ;; Registers used:
 17711 ;;		wreg, status,2, status,0
 17712 ;; Tracked objects:
 17713 ;;		On entry : 0/0
 17714 ;;		On exit  : 0/0
 17715 ;;		Unchanged: 0/0
 17716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17717 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17720 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17721 ;;Total ram usage:        2 bytes
 17722 ;; Hardware stack levels used:    1
 17723 ;; Hardware stack levels required when called:    4
 17724 ;; This function calls:
 17725 ;;		Nothing
 17726 ;; This function is called by:
 17727 ;;		_PIN_MANAGER_Initialize
 17728 ;;		_main
 17729 ;; This function uses a non-reentrant model
 17730 ;;
 17731                           
 17732                           	psect	text61
 17733  006020                     __ptext61:
 17734                           	opt callstack 0
 17735  006020                     _IOCB4_SetInterruptHandler:
 17736                           	opt callstack 24
 17737  006020                     
 17738                           ;mcc_generated_files/pin_manager.c: 136:     IOCB4_InterruptHandler = InterruptHandler;
 17739  006020  C003  F1FD         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
 17740  006024  C004  F1FE         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
 17741  006028  0012               	return		;funcret
 17742  00602A                     __end_of_IOCB4_SetInterruptHandler:
 17743                           	opt callstack 0
 17744                           
 17745 ;; *************** function _OSCILLATOR_Initialize *****************
 17746 ;; Defined at:
 17747 ;;		line 61 in file "mcc_generated_files/mcc.c"
 17748 ;; Parameters:    Size  Location     Type
 17749 ;;		None
 17750 ;; Auto vars:     Size  Location     Type
 17751 ;;		None
 17752 ;; Return value:  Size  Location     Type
 17753 ;;                  1    wreg      void 
 17754 ;; Registers used:
 17755 ;;		wreg, status,2
 17756 ;; Tracked objects:
 17757 ;;		On entry : 0/0
 17758 ;;		On exit  : 0/0
 17759 ;;		Unchanged: 0/0
 17760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17765 ;;Total ram usage:        0 bytes
 17766 ;; Hardware stack levels used:    1
 17767 ;; Hardware stack levels required when called:    4
 17768 ;; This function calls:
 17769 ;;		Nothing
 17770 ;; This function is called by:
 17771 ;;		_SYSTEM_Initialize
 17772 ;; This function uses a non-reentrant model
 17773 ;;
 17774                           
 17775                           	psect	text62
 17776  00600E                     __ptext62:
 17777                           	opt callstack 0
 17778  00600E                     _OSCILLATOR_Initialize:
 17779                           	opt callstack 25
 17780  00600E                     
 17781                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x62;
 17782  00600E  0E62               	movlw	98
 17783  006010  6ED3               	movwf	211,c	;volatile
 17784                           
 17785                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x00;
 17786  006012  0E00               	movlw	0
 17787  006014  6ED2               	movwf	210,c	;volatile
 17788                           
 17789                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
 17790  006016  0E00               	movlw	0
 17791  006018  6E9B               	movwf	155,c	;volatile
 17792                           
 17793                           ;mcc_generated_files/mcc.c: 70:     REFOCON = 0x00;
 17794  00601A  0E00               	movlw	0
 17795  00601C  6E9A               	movwf	154,c	;volatile
 17796  00601E  0012               	return		;funcret
 17797  006020                     __end_of_OSCILLATOR_Initialize:
 17798                           	opt callstack 0
 17799                           
 17800 ;; *************** function _INTERRUPT_Initialize *****************
 17801 ;; Defined at:
 17802 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 17803 ;; Parameters:    Size  Location     Type
 17804 ;;		None
 17805 ;; Auto vars:     Size  Location     Type
 17806 ;;		None
 17807 ;; Return value:  Size  Location     Type
 17808 ;;                  1    wreg      void 
 17809 ;; Registers used:
 17810 ;;		None
 17811 ;; Tracked objects:
 17812 ;;		On entry : 0/0
 17813 ;;		On exit  : 0/0
 17814 ;;		Unchanged: 0/0
 17815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17820 ;;Total ram usage:        0 bytes
 17821 ;; Hardware stack levels used:    1
 17822 ;; Hardware stack levels required when called:    4
 17823 ;; This function calls:
 17824 ;;		Nothing
 17825 ;; This function is called by:
 17826 ;;		_SYSTEM_Initialize
 17827 ;; This function uses a non-reentrant model
 17828 ;;
 17829                           
 17830                           	psect	text63
 17831  006032                     __ptext63:
 17832                           	opt callstack 0
 17833  006032                     _INTERRUPT_Initialize:
 17834                           	opt callstack 25
 17835  006032                     
 17836                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
 17837  006032  9ED0               	bcf	208,7,c	;volatile
 17838  006034  0012               	return		;funcret
 17839  006036                     __end_of_INTERRUPT_Initialize:
 17840                           	opt callstack 0
 17841                           
 17842 ;; *************** function _ADC_Initialize *****************
 17843 ;; Defined at:
 17844 ;;		line 62 in file "mcc_generated_files/adc.c"
 17845 ;; Parameters:    Size  Location     Type
 17846 ;;		None
 17847 ;; Auto vars:     Size  Location     Type
 17848 ;;		None
 17849 ;; Return value:  Size  Location     Type
 17850 ;;                  1    wreg      void 
 17851 ;; Registers used:
 17852 ;;		wreg, status,2
 17853 ;; Tracked objects:
 17854 ;;		On entry : 0/0
 17855 ;;		On exit  : 0/0
 17856 ;;		Unchanged: 0/0
 17857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17862 ;;Total ram usage:        0 bytes
 17863 ;; Hardware stack levels used:    1
 17864 ;; Hardware stack levels required when called:    4
 17865 ;; This function calls:
 17866 ;;		Nothing
 17867 ;; This function is called by:
 17868 ;;		_SYSTEM_Initialize
 17869 ;; This function uses a non-reentrant model
 17870 ;;
 17871                           
 17872                           	psect	text64
 17873  005FE6                     __ptext64:
 17874                           	opt callstack 0
 17875  005FE6                     _ADC_Initialize:
 17876                           	opt callstack 25
 17877  005FE6                     
 17878                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x01;
 17879  005FE6  0E01               	movlw	1
 17880  005FE8  6EC2               	movwf	194,c	;volatile
 17881                           
 17882                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x80;
 17883  005FEA  0E80               	movlw	128
 17884  005FEC  6EC1               	movwf	193,c	;volatile
 17885                           
 17886                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0xAD;
 17887  005FEE  0EAD               	movlw	173
 17888  005FF0  6EC0               	movwf	192,c	;volatile
 17889                           
 17890                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
 17891  005FF2  0E00               	movlw	0
 17892  005FF4  6EC4               	movwf	196,c	;volatile
 17893                           
 17894                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
 17895  005FF6  0E00               	movlw	0
 17896  005FF8  6EC3               	movwf	195,c	;volatile
 17897  005FFA  0012               	return		;funcret
 17898  005FFC                     __end_of_ADC_Initialize:
 17899                           	opt callstack 0
 17900                           
 17901 ;; *************** function _SPI_Open *****************
 17902 ;; Defined at:
 17903 ;;		line 72 in file "mcc_generated_files/spi.c"
 17904 ;; Parameters:    Size  Location     Type
 17905 ;;  spiUniqueCon    1    wreg     enum E353
 17906 ;; Auto vars:     Size  Location     Type
 17907 ;;  spiUniqueCon    1    3[COMRAM] enum E353
 17908 ;; Return value:  Size  Location     Type
 17909 ;;                  1    wreg      _Bool 
 17910 ;; Registers used:
 17911 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 17912 ;; Tracked objects:
 17913 ;;		On entry : 0/0
 17914 ;;		On exit  : 0/0
 17915 ;;		Unchanged: 0/0
 17916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17918 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17919 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17920 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17921 ;;Total ram usage:        2 bytes
 17922 ;; Hardware stack levels used:    1
 17923 ;; Hardware stack levels required when called:    4
 17924 ;; This function calls:
 17925 ;;		Nothing
 17926 ;; This function is called by:
 17927 ;;		_main
 17928 ;; This function uses a non-reentrant model
 17929 ;;
 17930                           
 17931                           	psect	text65
 17932  00567A                     __ptext65:
 17933                           	opt callstack 0
 17934  00567A                     _SPI_Open:
 17935                           	opt callstack 26
 17936                           
 17937                           ;incstack = 0
 17938                           ;SPI_Open@spiUniqueConfiguration stored from wreg
 17939  00567A  6E04               	movwf	SPI_Open@spiUniqueConfiguration^0,c
 17940  00567C                     
 17941                           ;mcc_generated_files/spi.c: 72: _Bool SPI_Open(spi_modes_t spiUniqueConfiguration);mcc_g
      +                          enerated_files/spi.c: 73: {;mcc_generated_files/spi.c: 74:     if(!SSPCON1bits.SSPEN)
 17942  00567C  BAC6               	btfsc	198,5,c	;volatile
 17943  00567E  EF43  F02B         	goto	u8081
 17944  005682  EF45  F02B         	goto	u8080
 17945  005686                     u8081:
 17946  005686  EF94  F02B         	goto	l124
 17947  00568A                     u8080:
 17948  00568A                     
 17949                           ;mcc_generated_files/spi.c: 75:     {;mcc_generated_files/spi.c: 76:         SSPSTAT = s
      +                          pi_configuration[spiUniqueConfiguration].stat;
 17950  00568A  5004               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 17951  00568C  0D04               	mullw	4
 17952  00568E  0E01               	movlw	1
 17953  005690  26F3               	addwf	243,f,c
 17954  005692  0E00               	movlw	0
 17955  005694  22F4               	addwfc	244,f,c
 17956  005696  0E55               	movlw	low _spi_configuration
 17957  005698  24F3               	addwf	243,w,c
 17958  00569A  6EF6               	movwf	tblptrl,c
 17959  00569C  0EFF               	movlw	high _spi_configuration
 17960  00569E  20F4               	addwfc	244,w,c
 17961  0056A0  6EF7               	movwf	tblptrh,c
 17962  0056A2                     	if	1	;There are 3 active tblptr bytes
 17963  0056A2  6AF8               	clrf	tblptru,c
 17964  0056A4  0E00               	movlw	low (__mediumconst shr (0+16))
 17965  0056A6  22F8               	addwfc	tblptru,f,c
 17966  0056A8                     	endif
 17967  0056A8  0008               	tblrd		*
 17968  0056AA  CFF5 FFC7          	movff	tablat,4039	;volatile
 17969                           
 17970                           ;mcc_generated_files/spi.c: 77:         SSPCON1 = spi_configuration[spiUniqueConfigurati
      +                          on].con1;
 17971  0056AE  5004               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 17972  0056B0  0D04               	mullw	4
 17973  0056B2  0E55               	movlw	low _spi_configuration
 17974  0056B4  24F3               	addwf	243,w,c
 17975  0056B6  6EF6               	movwf	tblptrl,c
 17976  0056B8  0EFF               	movlw	high _spi_configuration
 17977  0056BA  20F4               	addwfc	244,w,c
 17978  0056BC  6EF7               	movwf	tblptrh,c
 17979  0056BE                     	if	1	;There are 3 active tblptr bytes
 17980  0056BE  6AF8               	clrf	tblptru,c
 17981  0056C0  0E00               	movlw	low (__mediumconst shr (0+16))
 17982  0056C2  22F8               	addwfc	tblptru,f,c
 17983  0056C4                     	endif
 17984  0056C4  0008               	tblrd		*
 17985  0056C6  CFF5 FFC6          	movff	tablat,4038	;volatile
 17986  0056CA                     
 17987                           ;mcc_generated_files/spi.c: 78:         SSPCON2 = 0x00;
 17988  0056CA  0E00               	movlw	0
 17989  0056CC  6EC5               	movwf	197,c	;volatile
 17990  0056CE                     
 17991                           ;mcc_generated_files/spi.c: 79:         SSPADD = spi_configuration[spiUniqueConfiguratio
      +                          n].add;
 17992  0056CE  5004               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 17993  0056D0  0D04               	mullw	4
 17994  0056D2  0E02               	movlw	2
 17995  0056D4  26F3               	addwf	243,f,c
 17996  0056D6  0E00               	movlw	0
 17997  0056D8  22F4               	addwfc	244,f,c
 17998  0056DA  0E55               	movlw	low _spi_configuration
 17999  0056DC  24F3               	addwf	243,w,c
 18000  0056DE  6EF6               	movwf	tblptrl,c
 18001  0056E0  0EFF               	movlw	high _spi_configuration
 18002  0056E2  20F4               	addwfc	244,w,c
 18003  0056E4  6EF7               	movwf	tblptrh,c
 18004  0056E6                     	if	1	;There are 3 active tblptr bytes
 18005  0056E6  6AF8               	clrf	tblptru,c
 18006  0056E8  0E00               	movlw	low (__mediumconst shr (0+16))
 18007  0056EA  22F8               	addwfc	tblptru,f,c
 18008  0056EC                     	endif
 18009  0056EC  0008               	tblrd		*
 18010  0056EE  CFF5 FFC8          	movff	tablat,4040	;volatile
 18011  0056F2                     
 18012                           ;mcc_generated_files/spi.c: 80:         TRISCbits.TRISC3 = spi_configuration[spiUniqueCo
      +                          nfiguration].operation;
 18013  0056F2  5004               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 18014  0056F4  0D04               	mullw	4
 18015  0056F6  0E03               	movlw	3
 18016  0056F8  26F3               	addwf	243,f,c
 18017  0056FA  0E00               	movlw	0
 18018  0056FC  22F4               	addwfc	244,f,c
 18019  0056FE  0E55               	movlw	low _spi_configuration
 18020  005700  24F3               	addwf	243,w,c
 18021  005702  6EF6               	movwf	tblptrl,c
 18022  005704  0EFF               	movlw	high _spi_configuration
 18023  005706  20F4               	addwfc	244,w,c
 18024  005708  6EF7               	movwf	tblptrh,c
 18025  00570A                     	if	1	;There are 3 active tblptr bytes
 18026  00570A  6AF8               	clrf	tblptru,c
 18027  00570C  0E00               	movlw	low (__mediumconst shr (0+16))
 18028  00570E  22F8               	addwfc	tblptru,f,c
 18029  005710                     	endif
 18030  005710  0008               	tblrd		*
 18031  005712  CFF5 F003          	movff	tablat,??_SPI_Open
 18032  005716  4603               	rlncf	??_SPI_Open^0,f,c
 18033  005718  4603               	rlncf	??_SPI_Open^0,f,c
 18034  00571A  4603               	rlncf	??_SPI_Open^0,f,c
 18035  00571C  5094               	movf	148,w,c	;volatile
 18036  00571E  1803               	xorwf	??_SPI_Open^0,w,c
 18037  005720  0BF7               	andlw	-9
 18038  005722  1803               	xorwf	??_SPI_Open^0,w,c
 18039  005724  6E94               	movwf	148,c	;volatile
 18040  005726                     
 18041                           ;mcc_generated_files/spi.c: 81:         SSPCON1bits.SSPEN = 1;
 18042  005726  8AC6               	bsf	198,5,c	;volatile
 18043  005728                     l124:
 18044  005728  0012               	return		;funcret
 18045  00572A                     __end_of_SPI_Open:
 18046                           	opt callstack 0
 18047                           
 18048 ;; *************** function _ADC_GetConversion *****************
 18049 ;; Defined at:
 18050 ;;		line 108 in file "mcc_generated_files/adc.c"
 18051 ;; Parameters:    Size  Location     Type
 18052 ;;  channel         1    wreg     enum E12385
 18053 ;; Auto vars:     Size  Location     Type
 18054 ;;  channel         1    6[COMRAM] enum E12385
 18055 ;; Return value:  Size  Location     Type
 18056 ;;                  2    2[COMRAM] unsigned short 
 18057 ;; Registers used:
 18058 ;;		wreg, status,2, status,0
 18059 ;; Tracked objects:
 18060 ;;		On entry : 0/0
 18061 ;;		On exit  : 0/0
 18062 ;;		Unchanged: 0/0
 18063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18064 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18065 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18066 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18067 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18068 ;;Total ram usage:        5 bytes
 18069 ;; Hardware stack levels used:    1
 18070 ;; Hardware stack levels required when called:    4
 18071 ;; This function calls:
 18072 ;;		Nothing
 18073 ;; This function is called by:
 18074 ;;		_main
 18075 ;; This function uses a non-reentrant model
 18076 ;;
 18077                           
 18078                           	psect	text66
 18079  005D06                     __ptext66:
 18080                           	opt callstack 0
 18081  005D06                     _ADC_GetConversion:
 18082                           	opt callstack 26
 18083                           
 18084                           ;incstack = 0
 18085                           ;ADC_GetConversion@channel stored from wreg
 18086  005D06  6E07               	movwf	ADC_GetConversion@channel^0,c
 18087  005D08                     
 18088                           ;mcc_generated_files/adc.c: 108: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 109: {;mcc_generated_files/adc.c: 111:     ADCON0bits.CHS = ch
      +                          annel;
 18089  005D08  C007  F005         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 18090  005D0C  4605               	rlncf	??_ADC_GetConversion^0,f,c
 18091  005D0E  4605               	rlncf	??_ADC_GetConversion^0,f,c
 18092  005D10  50C2               	movf	194,w,c	;volatile
 18093  005D12  1805               	xorwf	??_ADC_GetConversion^0,w,c
 18094  005D14  0B83               	andlw	-125
 18095  005D16  1805               	xorwf	??_ADC_GetConversion^0,w,c
 18096  005D18  6EC2               	movwf	194,c	;volatile
 18097  005D1A                     
 18098                           ;mcc_generated_files/adc.c: 114:     ADCON0bits.ADON = 1;
 18099  005D1A  80C2               	bsf	194,0,c	;volatile
 18100  005D1C                     
 18101                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.GO_nDONE = 1;
 18102  005D1C  82C2               	bsf	194,1,c	;volatile
 18103  005D1E                     l191:
 18104                           
 18105                           ;mcc_generated_files/adc.c: 121:     while (ADCON0bits.GO_nDONE)
 18106  005D1E  B2C2               	btfsc	194,1,c	;volatile
 18107  005D20  EF94  F02E         	goto	u8091
 18108  005D24  EF96  F02E         	goto	u8090
 18109  005D28                     u8091:
 18110  005D28  EF8F  F02E         	goto	l191
 18111  005D2C                     u8090:
 18112  005D2C                     
 18113                           ;mcc_generated_files/adc.c: 126:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 18114  005D2C  50C4               	movf	196,w,c	;volatile
 18115  005D2E  6E06               	movwf	(??_ADC_GetConversion+1)^0,c
 18116  005D30  6A05               	clrf	??_ADC_GetConversion^0,c
 18117  005D32  50C3               	movf	195,w,c	;volatile
 18118  005D34  2405               	addwf	??_ADC_GetConversion^0,w,c
 18119  005D36  6E03               	movwf	?_ADC_GetConversion^0,c
 18120  005D38  0E00               	movlw	0
 18121  005D3A  2006               	addwfc	(??_ADC_GetConversion+1)^0,w,c
 18122  005D3C  6E04               	movwf	(?_ADC_GetConversion+1)^0,c
 18123  005D3E  0012               	return		;funcret
 18124  005D40                     __end_of_ADC_GetConversion:
 18125                           	opt callstack 0
 18126                           
 18127 ;; *************** function _INTERRUPT_InterruptManager *****************
 18128 ;; Defined at:
 18129 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 18130 ;; Parameters:    Size  Location     Type
 18131 ;;		None
 18132 ;; Auto vars:     Size  Location     Type
 18133 ;;		None
 18134 ;; Return value:  Size  Location     Type
 18135 ;;                  1    wreg      void 
 18136 ;; Registers used:
 18137 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18138 ;; Tracked objects:
 18139 ;;		On entry : 0/0
 18140 ;;		On exit  : 0/0
 18141 ;;		Unchanged: 0/0
 18142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18145 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18146 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18147 ;;Total ram usage:        2 bytes
 18148 ;; Hardware stack levels used:    1
 18149 ;; Hardware stack levels required when called:    3
 18150 ;; This function calls:
 18151 ;;		_PIN_MANAGER_IOC
 18152 ;; This function is called by:
 18153 ;;		Interrupt level 2
 18154 ;; This function uses a non-reentrant model
 18155 ;;
 18156                           
 18157                           	psect	intcode
 18158  000008                     __pintcode:
 18159                           	opt callstack 0
 18160  000008                     _INTERRUPT_InterruptManager:
 18161                           	opt callstack 18
 18162                           
 18163                           ;incstack = 0
 18164  000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 18165  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 18166  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 18167  000012                     
 18168                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.RBIE == 1 && INTCONbits.
      +                          RBIF == 1)
 18169  000012  A6F2               	btfss	242,3,c	;volatile
 18170  000014  EF0E  F000         	goto	i2u833_41
 18171  000018  EF10  F000         	goto	i2u833_40
 18172  00001C                     i2u833_41:
 18173  00001C  EF19  F000         	goto	i2l42
 18174  000020                     i2u833_40:
 18175  000020  A0F2               	btfss	242,0,c	;volatile
 18176  000022  EF15  F000         	goto	i2u834_41
 18177  000026  EF17  F000         	goto	i2u834_40
 18178  00002A                     i2u834_41:
 18179  00002A  EF19  F000         	goto	i2l42
 18180  00002E                     i2u834_40:
 18181  00002E                     
 18182                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         PIN_MANAGER_IOC();
 18183  00002E  ECDC  F02F         	call	_PIN_MANAGER_IOC	;wreg free
 18184  000032                     i2l42:
 18185  000032  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 18186  000036  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 18187  00003A  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 18188  00003C  0011               	retfie		f
 18189  00003E                     __end_of_INTERRUPT_InterruptManager:
 18190                           	opt callstack 0
 18191                           
 18192 ;; *************** function _PIN_MANAGER_IOC *****************
 18193 ;; Defined at:
 18194 ;;		line 107 in file "mcc_generated_files/pin_manager.c"
 18195 ;; Parameters:    Size  Location     Type
 18196 ;;		None
 18197 ;; Auto vars:     Size  Location     Type
 18198 ;;		None
 18199 ;; Return value:  Size  Location     Type
 18200 ;;                  1    wreg      void 
 18201 ;; Registers used:
 18202 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18203 ;; Tracked objects:
 18204 ;;		On entry : 0/0
 18205 ;;		On exit  : 0/0
 18206 ;;		Unchanged: 0/0
 18207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18212 ;;Total ram usage:        0 bytes
 18213 ;; Hardware stack levels used:    1
 18214 ;; Hardware stack levels required when called:    2
 18215 ;; This function calls:
 18216 ;;		_IOCB4_ISR
 18217 ;; This function is called by:
 18218 ;;		_INTERRUPT_InterruptManager
 18219 ;; This function uses a non-reentrant model
 18220 ;;
 18221                           
 18222                           	psect	text68
 18223  005FB8                     __ptext68:
 18224                           	opt callstack 0
 18225  005FB8                     _PIN_MANAGER_IOC:
 18226                           	opt callstack 18
 18227  005FB8                     
 18228                           ;mcc_generated_files/pin_manager.c: 110:     if(IOCBbits.IOCB4 == 1)
 18229  005FB8  010F               	movlb	15	; () banked
 18230  005FBA  A95A               	btfss	90,4,b	;volatile
 18231  005FBC  EFE2  F02F         	goto	i2u807_41
 18232  005FC0  EFE4  F02F         	goto	i2u807_40
 18233  005FC4                     i2u807_41:
 18234  005FC4  EFE6  F02F         	goto	i2l6604
 18235  005FC8                     i2u807_40:
 18236  005FC8                     
 18237                           ; BSR set to: 15
 18238                           ;mcc_generated_files/pin_manager.c: 111:     {;mcc_generated_files/pin_manager.c: 112:  
      +                                 IOCB4_ISR();
 18239  005FC8  EC76  F02F         	call	_IOCB4_ISR	;wreg free
 18240  005FCC                     i2l6604:
 18241                           
 18242                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.RBIF = 0;
 18243  005FCC  90F2               	bcf	242,0,c	;volatile
 18244  005FCE  0012               	return		;funcret
 18245  005FD0                     __end_of_PIN_MANAGER_IOC:
 18246                           	opt callstack 0
 18247                           
 18248 ;; *************** function _IOCB4_ISR *****************
 18249 ;; Defined at:
 18250 ;;		line 121 in file "mcc_generated_files/pin_manager.c"
 18251 ;; Parameters:    Size  Location     Type
 18252 ;;		None
 18253 ;; Auto vars:     Size  Location     Type
 18254 ;;		None
 18255 ;; Return value:  Size  Location     Type
 18256 ;;                  1    wreg      void 
 18257 ;; Registers used:
 18258 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18259 ;; Tracked objects:
 18260 ;;		On entry : 0/0
 18261 ;;		On exit  : 0/0
 18262 ;;		Unchanged: 0/0
 18263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18268 ;;Total ram usage:        0 bytes
 18269 ;; Hardware stack levels used:    1
 18270 ;; Hardware stack levels required when called:    1
 18271 ;; This function calls:
 18272 ;;		Absolute function
 18273 ;;		_IOCB4_DefaultInterruptHandler
 18274 ;;		_IOCB4_InterruptCall
 18275 ;; This function is called by:
 18276 ;;		_PIN_MANAGER_IOC
 18277 ;; This function uses a non-reentrant model
 18278 ;;
 18279                           
 18280                           	psect	text69
 18281  005EEC                     __ptext69:
 18282                           	opt callstack 0
 18283  005EEC                     _IOCB4_ISR:
 18284                           	opt callstack 18
 18285  005EEC                     
 18286                           ;mcc_generated_files/pin_manager.c: 126:     if(IOCB4_InterruptHandler)
 18287  005EEC  0101               	movlb	1	; () banked
 18288  005EEE  51FD               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 18289  005EF0  11FE               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 18290  005EF2  B4D8               	btfsc	status,2,c
 18291  005EF4  EF7E  F02F         	goto	i2u790_41
 18292  005EF8  EF80  F02F         	goto	i2u790_40
 18293  005EFC                     i2u790_41:
 18294  005EFC  EF8C  F02F         	goto	i2l93
 18295  005F00                     i2u790_40:
 18296  005F00                     
 18297                           ; BSR set to: 1
 18298                           ;mcc_generated_files/pin_manager.c: 127:     {;mcc_generated_files/pin_manager.c: 128:  
      +                                 IOCB4_InterruptHandler();
 18299  005F00  D802               	call	i2u791_48
 18300  005F02  EF8C  F02F         	goto	i2u791_49
 18301  005F06                     i2u791_48:
 18302  005F06  0005               	push	
 18303  005F08  6EFA               	movwf	pclath,c
 18304  005F0A  51FD               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 18305  005F0C  6EFD               	movwf	tosl,c
 18306  005F0E  51FE               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 18307  005F10  6EFE               	movwf	tosh,c
 18308  005F12  6AFF               	clrf	tosu,c
 18309  005F14  50FA               	movf	pclath,w,c
 18310  005F16  0012               	return		;indir
 18311  005F18                     i2u791_49:
 18312  005F18                     i2l93:
 18313  005F18  0012               	return		;funcret
 18314  005F1A                     __end_of_IOCB4_ISR:
 18315                           	opt callstack 0
 18316                           
 18317 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 18318 ;; Defined at:
 18319 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 18320 ;; Parameters:    Size  Location     Type
 18321 ;;		None
 18322 ;; Auto vars:     Size  Location     Type
 18323 ;;		None
 18324 ;; Return value:  Size  Location     Type
 18325 ;;                  1    wreg      void 
 18326 ;; Registers used:
 18327 ;;		None
 18328 ;; Tracked objects:
 18329 ;;		On entry : 0/0
 18330 ;;		On exit  : 0/0
 18331 ;;		Unchanged: 0/0
 18332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18337 ;;Total ram usage:        0 bytes
 18338 ;; Hardware stack levels used:    1
 18339 ;; This function calls:
 18340 ;;		Nothing
 18341 ;; This function is called by:
 18342 ;;		_PIN_MANAGER_Initialize
 18343 ;;		_IOCB4_ISR
 18344 ;; This function uses a non-reentrant model
 18345 ;;
 18346                           
 18347                           	psect	text70
 18348  006038                     __ptext70:
 18349                           	opt callstack 0
 18350  006038                     _IOCB4_DefaultInterruptHandler:
 18351                           	opt callstack 18
 18352  006038  0012               	return		;funcret
 18353  00603A                     __end_of_IOCB4_DefaultInterruptHandler:
 18354                           	opt callstack 0
 18355                           
 18356 ;; *************** function _IOCB4_InterruptCall *****************
 18357 ;; Defined at:
 18358 ;;		line 18 in file "main.c"
 18359 ;; Parameters:    Size  Location     Type
 18360 ;;		None
 18361 ;; Auto vars:     Size  Location     Type
 18362 ;;		None
 18363 ;; Return value:  Size  Location     Type
 18364 ;;                  1    wreg      void 
 18365 ;; Registers used:
 18366 ;;		wreg, status,2, status,0
 18367 ;; Tracked objects:
 18368 ;;		On entry : 0/0
 18369 ;;		On exit  : 0/0
 18370 ;;		Unchanged: 0/0
 18371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18376 ;;Total ram usage:        0 bytes
 18377 ;; Hardware stack levels used:    1
 18378 ;; This function calls:
 18379 ;;		Nothing
 18380 ;; This function is called by:
 18381 ;;		_main
 18382 ;;		_IOCB4_ISR
 18383 ;; This function uses a non-reentrant model
 18384 ;;
 18385                           
 18386                           	psect	text71
 18387  005E56                     __ptext71:
 18388                           	opt callstack 0
 18389  005E56                     _IOCB4_InterruptCall:
 18390                           	opt callstack 18
 18391  005E56                     
 18392                           ;main.c: 20:     if(!PORTBbits.RB4){
 18393  005E56  B881               	btfsc	129,4,c	;volatile
 18394  005E58  EF30  F02F         	goto	i2u785_41
 18395  005E5C  EF32  F02F         	goto	i2u785_40
 18396  005E60                     i2u785_41:
 18397  005E60  EF45  F02F         	goto	i2l294
 18398  005E64                     i2u785_40:
 18399  005E64                     
 18400                           ;main.c: 22:         if(botao!=3){
 18401  005E64  0E03               	movlw	3
 18402  005E66  0101               	movlb	1	; () banked
 18403  005E68  191E               	xorwf	_botao& (0+255),w,b
 18404  005E6A  111F               	iorwf	(_botao+1)& (0+255),w,b
 18405  005E6C  B4D8               	btfsc	status,2,c
 18406  005E6E  EF3B  F02F         	goto	i2u786_41
 18407  005E72  EF3D  F02F         	goto	i2u786_40
 18408  005E76                     i2u786_41:
 18409  005E76  EF41  F02F         	goto	i2l6432
 18410  005E7A                     i2u786_40:
 18411  005E7A                     
 18412                           ; BSR set to: 1
 18413                           ;main.c: 23:             botao++;
 18414  005E7A  4B1E               	infsnz	_botao& (0+255),f,b
 18415  005E7C  2B1F               	incf	(_botao+1)& (0+255),f,b
 18416                           
 18417                           ;main.c: 24:         }
 18418  005E7E  EF45  F02F         	goto	i2l294
 18419  005E82                     i2l6432:
 18420                           
 18421                           ; BSR set to: 1
 18422                           ;main.c: 26:             botao=0;
 18423  005E82  0E00               	movlw	0
 18424  005E84  6F1F               	movwf	(_botao+1)& (0+255),b
 18425  005E86  0E00               	movlw	0
 18426  005E88  6F1E               	movwf	_botao& (0+255),b
 18427  005E8A                     i2l294:
 18428  005E8A  0012               	return		;funcret
 18429  005E8C                     __end_of_IOCB4_InterruptCall:
 18430                           	opt callstack 0
 18431                           
 18432                           	psect	text72
 18433  000000                     __ptext72:
 18434                           	opt callstack 0
 18435  000000                     
 18436                           	psect	rparam
 18437  0000                     
 18438                           	psect	temp
 18439  00005D                     btemp:
 18440                           	opt callstack 0
 18441  00005D                     	ds	1
 18442  0000                     int$flags	set	btemp
 18443  0000                     wtemp8	set	btemp+1
 18444  0000                     ttemp5	set	btemp+1
 18445  0000                     ttemp6	set	btemp+4
 18446  0000                     ttemp7	set	btemp+8
 18447                           tosu	equ	0xFFF
 18448                           tosh	equ	0xFFE
 18449                           tosl	equ	0xFFD
 18450                           stkptr	equ	0xFFC
 18451                           pclatu	equ	0xFFB
 18452                           pclath	equ	0xFFA
 18453                           pcl	equ	0xFF9
 18454                           tblptru	equ	0xFF8
 18455                           tblptrh	equ	0xFF7
 18456                           tblptrl	equ	0xFF6
 18457                           tablat	equ	0xFF5
 18458                           prodh	equ	0xFF4
 18459                           prodl	equ	0xFF3
 18460                           indf0	equ	0xFEF
 18461                           postinc0	equ	0xFEE
 18462                           postdec0	equ	0xFED
 18463                           preinc0	equ	0xFEC
 18464                           plusw0	equ	0xFEB
 18465                           fsr0h	equ	0xFEA
 18466                           fsr0l	equ	0xFE9
 18467                           wreg	equ	0xFE8
 18468                           indf1	equ	0xFE7
 18469                           postinc1	equ	0xFE6
 18470                           postdec1	equ	0xFE5
 18471                           preinc1	equ	0xFE4
 18472                           plusw1	equ	0xFE3
 18473                           fsr1h	equ	0xFE2
 18474                           fsr1l	equ	0xFE1
 18475                           bsr	equ	0xFE0
 18476                           indf2	equ	0xFDF
 18477                           postinc2	equ	0xFDE
 18478                           postdec2	equ	0xFDD
 18479                           preinc2	equ	0xFDC
 18480                           plusw2	equ	0xFDB
 18481                           fsr2h	equ	0xFDA
 18482                           fsr2l	equ	0xFD9
 18483                           status	equ	0xFD8


Data Sizes:
    Strings     165
    Constant    3536
    Data        7
    BSS         626
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      92
    BANK0           160    154     158
    BANK1           256     24     255
    BANK2           256      0     200
    BANK3           256      0     200
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_6(CODE[15]), STR_5(CODE[15]), STR_4(CODE[22]), STR_3(CODE[16]), 
		 -> STR_2(CODE[17]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> string_ntc_high(BANK3[100]), string_ntc_low(BANK3[100]), string_ntc(BANK2[100]), string_pot(BANK2[100]), 
		 -> string_temp(BANK1[100]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> string_ntc_high(BANK3[100]), string_ntc_low(BANK3[100]), string_ntc(BANK2[100]), string_pot(BANK2[100]), 
		 -> string_temp(BANK1[100]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_116(CODE[3]), STR_112(CODE[3]), STR_107(CODE[3]), STR_103(CODE[3]), 
		 -> STR_98(CODE[4]), STR_94(CODE[4]), STR_89(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[4]), STR_74(CODE[3]), STR_69(CODE[3]), STR_64(CODE[4]), 
		 -> STR_59(CODE[3]), STR_54(CODE[3]), STR_49(CODE[4]), STR_44(CODE[3]), 
		 -> STR_39(CODE[3]), STR_35(CODE[3]), STR_30(CODE[3]), STR_26(CODE[3]), 
		 -> STR_21(CODE[4]), STR_17(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_116(CODE[3]), STR_112(CODE[3]), STR_107(CODE[3]), STR_103(CODE[3]), 
		 -> STR_98(CODE[4]), STR_94(CODE[4]), STR_89(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[4]), STR_74(CODE[3]), STR_69(CODE[3]), STR_64(CODE[4]), 
		 -> STR_59(CODE[3]), STR_54(CODE[3]), STR_49(CODE[4]), STR_44(CODE[3]), 
		 -> STR_39(CODE[3]), STR_35(CODE[3]), STR_30(CODE[3]), STR_26(CODE[3]), 
		 -> STR_21(CODE[4]), STR_17(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 22
		 -> vfpfcnvrt@ct(BANK0[3]), STR_6(CODE[15]), STR_5(CODE[15]), STR_4(CODE[22]), 
		 -> STR_3(CODE[16]), STR_2(CODE[17]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 22
		 -> vfpfcnvrt@ct(BANK0[3]), STR_6(CODE[15]), STR_5(CODE[15]), STR_4(CODE[22]), 
		 -> STR_3(CODE[16]), STR_2(CODE[17]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK1[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), tensao_in(BANK1[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK1[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), tensao_in(BANK1[4]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_6(CODE[15]), STR_5(CODE[15]), STR_4(CODE[22]), STR_3(CODE[16]), 
		 -> STR_2(CODE[17]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> string_ntc_high(BANK3[100]), string_ntc_low(BANK3[100]), string_ntc(BANK2[100]), string_pot(BANK2[100]), 
		 -> string_temp(BANK1[100]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    S2034_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> string_ntc_high(BANK3[100]), string_ntc_low(BANK3[100]), string_ntc(BANK2[100]), string_pot(BANK2[100]), 
		 -> string_temp(BANK1[100]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> string_ntc_high(BANK3[100]), string_ntc_low(BANK3[100]), string_ntc(BANK2[100]), string_pot(BANK2[100]), 
		 -> string_temp(BANK1[100]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_6(CODE[15]), STR_5(CODE[15]), STR_4(CODE[22]), STR_3(CODE[16]), 
		 -> STR_2(CODE[17]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_6(CODE[15]), STR_5(CODE[15]), STR_4(CODE[22]), STR_3(CODE[16]), 
		 -> STR_2(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 22
		 -> STR_6(CODE[15]), STR_5(CODE[15]), STR_4(CODE[22]), STR_3(CODE[16]), 
		 -> STR_2(CODE[17]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), tensao_in(BANK1[4]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), tensao_in(BANK1[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), tensao_in(BANK1[4]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK1[2]), stoa@nuls(COMRAM[7]), tensao_in(BANK1[4]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    lcd_draw_string@pS	PTR const unsigned char  size(2) Largest target is 100
		 -> string_ntc_high(BANK3[100]), string_ntc_low(BANK3[100]), string_ntc(BANK2[100]), string_pot(BANK2[100]), 
		 -> string_temp(BANK1[100]), STR_1(CODE[12]), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_InterruptCall(), IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_InterruptCall(), Absolute function(), IOCB4_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->___fldiv
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _efgtoa->___fldiv
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flsub
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _lcd_init->_lcd_fill
    _lcd_fill->_lcd_set_cursor
    _lcd_draw_string->_lcd_draw_char
    _lcd_draw_char->_lcd_set_cursor
    _lcd_set_cursor->_lcd_set_cursor_x
    _lcd_set_cursor->_lcd_set_cursor_y
    _lcd_set_cursor_y->_lcd_send
    _lcd_set_cursor_x->_lcd_send
    _lcd_draw_pixel->_lcd_send
    _lcd_send->_SPI_ExchangeByte
    _SYSTEM_Initialize->_TMR1_Initialize
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_snprintf
    _snprintf->_vsnprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  177710
                  _ADC_GetConversion
          _IOCB4_SetInterruptHandler
                           _SPI_Open
                  _SYSTEM_Initialize
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                    _lcd_draw_string
                           _lcd_init
                           _snprintf
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            14     4     10  101368
                                             10 BANK1     14     4     10
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   99713
                                            142 BANK0     12     4      8
                                              0 BANK1     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   98676
                                            134 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   97849
                                             88 BANK0     46    40      6
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _otoa
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11   10037
                                             29 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                              8 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    8429
                                             29 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                              2 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                              2 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    6265
                                              2 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2732
                                             11 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    7701
                                             29 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   34447
                                             20 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1232
                                              8 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     641
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              2 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                              0 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     517
                                              2 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4547
                                             57 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3802
                                             41 COMRAM    16     8      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    4133
                                             16 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1526
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3083
                                             65 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    9283
                                             29 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             20 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              2 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              2 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    6756
                                             29 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    6477
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     310
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2077
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1577
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2195
                                              9 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              2 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     371
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     912
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0   31303
                           _lcd_fill
                           _lcd_send
                            _msDelay
 ---------------------------------------------------------------------------------
 (2) _msDelay                                              3     3      0      46
                                              2 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _lcd_fill                                             6     4      2   23819
                                             11 COMRAM     6     4      2
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_draw_string                                     18     8     10   26940
                                             33 COMRAM    18     8     10
                      _lcd_draw_char
 ---------------------------------------------------------------------------------
 (2) _lcd_draw_char                                       22    12     10   24434
                                             11 COMRAM    22    12     10
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       4     0      4   15812
                                              7 COMRAM     4     0      4
                   _lcd_set_cursor_x
                   _lcd_set_cursor_y
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_y                                     2     0      2    7580
                                              5 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_x                                     2     0      2    7580
                                              5 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_draw_pixel                                       2     0      2    7862
                                              5 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_send                                             2     1      1    7438
                                              3 COMRAM     2     1      1
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI_ExchangeByte                                     1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
                     _ADC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     174
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Open                                             2     2      0      88
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      22
                                              2 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          2     2      0       0
                                              0 COMRAM     2     2      0
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
      _IOCB4_DefaultInterruptHandler *
                _IOCB4_InterruptCall *
 ---------------------------------------------------------------------------------
 (13) _IOCB4_InterruptCall                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _IOCB4_SetInterruptHandler
   _SPI_Open
   _SYSTEM_Initialize
     _ADC_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI_Initialize
     _TMR1_Initialize
   ___fladd
     ___flmul (ARG)
       ___xxtofl (ARG)
   ___fldiv
     ___fladd (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___flsub (ARG)
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
   ___flge
     ___flmul (ARG)
       ___xxtofl (ARG)
   ___flmul
     ___xxtofl (ARG)
   ___flsub
     ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___flmul (ARG)
       ___xxtofl (ARG)
   ___xxtofl
   _lcd_draw_string
     _lcd_draw_char
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
   _lcd_init
     _lcd_fill
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
     _lcd_send
       _SPI_ExchangeByte
     _msDelay
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _IOCB4_DefaultInterruptHandler *
       _IOCB4_InterruptCall *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      C8      12       78.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      C8      10       78.1%
BITBANK1           100      0       0       7        0.0%
BANK1              100     18      FF       8       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9A      9E       5       98.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5C       1       97.9%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     389       6        0.0%
DATA                 0      0     389       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Nov 21 23:38:50 2020

                           _SPI_Initialize 5FFC                               ___fldiv@aexp 005A  
                             ___fldiv@bexp 0059                               ___fldiv@sign 0052  
                              _SSPSTATbits 000FC7                                         l23 5F9E  
                                       l26 601E                                         l35 6034  
                                       l85 5C02                                         l96 6028  
                             ___awdiv@sign 0008                        ___wmul@multiplicand 0005  
       __size_of_IOCB4_SetInterruptHandler 000A                                __CFG_BORV$3 000000  
              __end_of_IOCB4_InterruptCall 5E8C                 ?_IOCB4_SetInterruptHandler 0003  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                             __CFG_CP2$OFF 000000                               __CFG_CP3$OFF 000000  
                                      l120 600C                                        l130 5F72  
                                      l124 5728                                        l132 5F80  
                                      l133 5F84                                        l310 250C  
                                      l302 224C                                        l216 5F44  
                                      l313 2512                                        l305 2252  
                                      l510 54C8                                        l191 5D1E  
                                      l512 5504                                        l361 5FB6  
                                      l194 5D3E                                        l179 5FFA  
                                      l371 5B76                                        l451 49BA  
                                      l507 5486                                        l460 4D86  
                                      l349 5EEA                                        l525 36BA  
                                      l382 5854                                        l358 3618  
                                      l375 5B2E                                        l367 5C88  
                                      l519 5A94                                        l527 36C2  
                                      l607 1CAE                                        l720 3BDA  
                                      l704 39D8                                        l545 38FE  
                                      l641 402E                                        l378 5FE4  
                                      l650 417E                                        l563 20D8  
                                      l643 4036                                        l811 58B8  
                                      l652 41E4                                        l812 58C0  
                                      l581 1916                                        l661 4744  
                                      l670 47EE                                        l718 3B76  
                                      l734 0138                                        l815 5F6A  
                                      l671 4838                                        l680 3E2A  
                                      l690 3FF4                                        l682 3E32  
                                      l675 4840                                        l659 473C  
                                      l942 4B1E                                        l695 3938  
                                      l759 1528                                        l929 46BA  
                                      l697 3940                                        l779 093E  
                             __CFG_CPB$OFF 000000                               __CFG_CPD$OFF 000000  
                          _timer1ReloadVal 01FB                                        _abs 5C8A  
                                      _pad 5440                               ___awmod@sign 0008  
                                      tosl 000FFD                                        wreg 000FE8  
                             ___flmul@aexp 001E                               ___flmul@bexp 0023  
                             ___flmul@sign 001D                               ___flmul@temp 0028  
                             ___flmul@prod 0024                            ?_lcd_set_cursor 0008  
                             ___fltol@exp1 000C                         __size_of_IOCB4_ISR 002E  
                                     l1112 4FB2                                       ?_abs 0015  
                                     l1046 55C8                                       l1080 5070  
                                     l1410 31B0                                       l1402 30B6  
                                     l1074 57D2                                       l1059 5678  
                                     l1411 319E                                       l1260 52A4  
                                     l1501 5CC0                                       l1085 50B6  
                                     l1253 5284                                       l1270 5374  
                                     l1343 27FE                                       l1263 5354  
                                     l1504 5CC8                                       l1408 3138  
                                     l1360 2918                                       l1352 2ACE  
                                     l1344 27EC                                       l1433 2EF8  
                                     l1089 5DE6                                       l1345 27B2  
                                     l1370 29D6                                       l1610 59DC  
                                     l1532 452A                                       l1436 2D8A  
                                     l1620 4EAC                                       l1604 5EBC  
                                     l1429 2B94                                       l1541 3DF0  
                                     l1470 423C                                       l1446 2EBA  
                                     l1438 2E02                                       l1630 5918  
                                     l1535 4532                                       l1439 2DF0  
                                     l1551 5D04                                       l1616 5E54  
                                     l1544 3D34                                       l1473 4398  
                                     l1369 29E8                                       l1385 5BBC  
                                     l1571 5DAE                                       l1635 5920  
                                     l1643 5976                                       l1484 4330  
                                     l1477 42D4                                       l1557 5E1E  
                                     l1565 5AE6                                       l1397 3292  
                                     l1654 5D76                                       l1670 4C2E  
                                     l1399 30F2                                       l1496 51B4  
                                     l1648 597E                                       l1665 4C54  
                                     l1586 543E                                       l1594 5C46  
                                     l1597 6036                                       l6030 5B30  
                                     l5400 5FB4                                       l6032 5B46  
                                     l6050 5B2C                                       l6042 5AE8  
                                     l6036 5B4C                                       l6044 5AFE  
                                     l6038 5B74                                       ?_pad 0013  
                                     l4704 5F6E                                       l6048 5B04  
                                     l7200 5E48                                       l8000 5DB0  
                                     l8002 5DC6                                       l7210 261C  
                                     l8010 4EC4                                       l6500 5ED6  
                                     l8004 5DD6                                       l7300 27D0  
                                     l7220 265C                                       l7212 262A  
                                     l8020 4F14                                       l7204 5D78  
                                     l6510 580C                                       l6502 5ED8  
                                     l8110 5A6A                                       l8102 5A3A  
                                     l7310 281C                                       l7302 27DE  
                                     l7230 268E                                       l7222 265E  
                                     l7214 262C                                       l8030 4F3E  
                                     l8022 4F18                                       l8014 4ED8  
                                     l6424 6020                                       l6512 5818  
                                     l6504 57D4                                       l8112 5A70  
                                     l8104 5A4E                                       l8120 3662  
                                     l7400 2AA8                                       l7320 285C  
                                     l7304 27E0                                       l7240 26B6  
                                     l7232 2690                                       l7216 263C  
                                     l7224 2666                                       l7208 2610  
                                     l8040 4F66                                       l8032 4F48  
                                     l8024 4F26                                       l8016 4F02  
                                     l8008 4EAE                                       l8200 15CE  
                                     l9000 1018                                       l6610 56CA  
                                     l5394 5FA2                                       l6442 5C86  
                                     l6434 5C48                                       l6522 4842  
                                     l6514 5832                                       l6506 57E4  
                                     l8106 5A5A                                       l8130 36CA  
                                     l8122 3682                                       l7402 2AAE  
                                     l7330 2886                                       l7322 2868  
                                     l7314 2830                                       l7306 27EA  
                                     l7250 26F0                                       l7242 26C6  
                                     l7234 2696                                       l7226 2676  
                                     l7218 264C                                       l8042 4F72  
                                     l8034 4F52                                       l8018 4F04  
                                     l8210 160A                                       l8202 15D6  
                                     l7410 5D40                                       l6620 5D08  
                                     l6612 56CE                                       l6460 5FFC  
                                     l5396 5FAC                                       l6436 5C64  
                                     l6540 4940                                       l6532 4892  
                                     l6524 484A                                       l6516 583A  
                                     l6700 33A8                                       l7180 53C2  
                                     l7172 5376                                       l7420 5472  
                                     l8108 5A66                                       l8140 3704  
                                     l8132 36DC                                       l8124 3690  
                                     l8116 361A                                       l7404 2ABC  
                                     l7340 28F8                                       l7324 286C  
                                     l7316 2840                                       l7308 280C  
                                     l7332 288C                                       l7260 271C  
                                     l7252 2702                                       l7244 26D6  
                                     l7236 26A4                                       l7228 267C  
                                     l8044 4F82                                       l7500 3DE0  
                                     l8300 19DE                                       l8220 1686  
                                     l8204 15DA                                       l8060 51FC  
                                     l8052 51B6                                       l9020 1186  
                                     l9100 5856                                       l6622 5D1A  
                                     l6614 56F2                                       l6606 567C  
                                     l6470 5BE0                                       l6462 6008  
                                     l5398 5FAE                                       l6446 5FD0  
                                     l6438 5C80                                       l6550 4970  
                                     l6542 4950                                       l6526 488E  
                                     l6710 33DA                                       l6702 33B2  
                                     l7182 53F8                                       l7174 5388  
                                     l7190 5C22                                       l7430 54D8  
                                     l7422 547E                                       l7414 5440  
                                     l8142 370A                                       l8150 37FC  
                                     l8134 36EC                                       l8126 3694  
                                     l8118 363A                                       l7406 2ABE  
                                     l7350 2952                                       l7334 28B2  
                                     l7342 2908                                       l7326 287A  
                                     l7318 284E                                       l7270 2730  
                                     l7262 2720                                       l7254 2710  
                                     l7246 26D8                                       l7238 26A6  
                                     l8046 4F92                                       l8310 1A2C  
                                     l8302 19E2                                       l8222 1690  
                                     l8214 1640                                       l8206 15DE  
                                     l8070 526C                                       l8062 520A  
                                     l8054 51C2                                       l9030 123E  
                                     l9022 1196                                       l9014 10F0  
                                     l9006 1068                                       l9102 585E  
                                     l9110 4B34                                       l6624 5D1C  
                                     l6616 5726                                       l6608 568A  
                                     l6480 600E                                       l6472 5BF0  
                                     l6464 600A                                       l6552 4980  
                                     l6544 495C                                       l6800 359C  
                                     l6720 340C                                       l6712 33E4  
                                     l6704 33BC                                       l7176 539A  
                                     l7192 5C26                                       l7432 54EC  
                                     l7424 5492                                       l7416 5450  
                                     l7600 4ACE                                       l8152 3816  
                                     l8160 3878                                       l8144 378C  
                                     l8136 36F2                                       l8128 36AE  
                                     l7360 2982                                       l7352 295C  
                                     l7344 292E                                       l7336 28E6  
                                     l7328 287C                                       l7280 2744  
                                     l7272 2734                                       l7264 2724  
                                     l7256 2714                                       l7248 26E0  
                                     l8048 4FA2                                       l7440 50B8  
                                     l8400 1EC2                                       l8320 1AC4  
                                     l8304 19F4                                       l8312 1A34  
                                     l8232 1714                                       l8216 1652  
                                     l8208 15E4                                       l8072 527E  
                                     l8064 521C                                       l8056 51E0  
                                     l8080 52E0                                       l7504 5CCA  
                                     l7512 5958                                       l9032 1274  
                                     l9024 11CC                                       l9016 1126  
                                     l9008 109E                                       l9104 586C  
                                     l9120 4B78                                       l9112 4B3E  
                                     l9200 2564                                       l6626 5D2C  
                                     l6490 5FE6                                       l6458 6032  
                                     l6474 5BF2                                       l6466 5BBE  
                                     l6482 5F1A                                       l6546 495E  
                                     l6538 4896                                       l6554 4982  
                                     l6810 35CE                                       l6802 35A6  
                                     l6730 343E                                       l6722 3416  
                                     l6714 33EE                                       l6706 33C6  
                                     l6650 32AE                                       l7522 5F46  
                                     l8090 5A96                                       l7178 53A4  
                                     l7186 5C04                                       l7194 5E20  
                                     l7426 54A6                                       l7418 5464  
                                     l7530 4538                                       l7602 4ADE  
                                     l8170 38BE                                       l8162 388A  
                                     l8154 3834                                       l8146 3792  
                                     l8138 36FA                                       l7610 2F06  
                                     l7370 29AA                                       l7362 2986  
                                     l7354 296A                                       l7346 293E  
                                     l7338 28E8                                       l7290 277E  
                                     l7282 2748                                       l7274 2738  
                                     l7266 2728                                       l7258 2718  
                                     l7442 50D8                                       l8410 1F12  
                                     l8402 1EDE                                       l8330 1BA8  
                                     l8322 1B1C                                       l8314 1A3C  
                                     l8306 1A02                                       l8250 17AE  
                                     l8234 1726                                       l8218 166E  
                                     l8226 16B8                                       l8066 524A  
                                     l8058 51E8                                       l8082 52EE  
                                     l8074 52A6                                       l7514 596A  
                                     l9050 1360                                       l9034 129E  
                                     l9042 12EE                                       l9018 115C  
                                     l9106 589A                                       l9130 4BE0  
                                     l9122 4B84                                       l9202 258E  
                                     l6476 5BF4                                       l6468 5BDA  
                                     l6484 5F26                                       l6900 427E  
                                     l6548 496E                                       l6820 3606  
                                     l6812 35D8                                       l6804 35B0  
                                     l6740 3470                                       l6732 3448  
                                     l6724 3420                                       l6716 33F8  
                                     l6708 33D0                                       l6660 32E0  
                                     l6652 32B8                                       l6644 3294  
                                     l7524 5F62                                       l8092 5A9A  
                                     l7188 5C10                                       l7196 5E2C  
                                     l7428 54AA                                       l7540 4598  
                                     l7532 4546                                       l7604 4AFE  
                                     l7436 5C8A                                       l8172 38C6  
                                     l8164 389A                                       l8156 384E  
                                     l8148 3798                                       l7700 3136  
                                     l7620 2F46                                       l7612 2F14  
                                     l7380 2A04                                       l7372 29B8  
                                     l7364 2996                                       l7356 296C  
                                     l7292 279A                                       l7284 274C  
                                     l7276 273C                                       l7268 272C  
                                     l7444 5116                                       l7452 5156  
                                     l8420 1F54                                       l8412 1F22  
                                     l8404 1EF0                                       l8340 1C42  
                                     l8332 1BDA                                       l8324 1B50  
                                     l8316 1A4C                                       l8308 1A1A  
                                     l8260 187E                                       l8252 17E2  
                                     l8236 1742                                       l8228 16DE  
                                     l8244 175E                                       l8180 1534  
                                     l8500 40A4                                       l8068 526A  
                                     l8084 531C                                       l8076 52C4  
                                     l7508 5922                                       l9060 140E  
                                     l9044 1314                                       l9036 12AE  
                                     l9028 1208                                       l9132 4C16  
                                     l9124 4B96                                       l9116 4B48  
                                     l9108 4B20                                       l9140 5E8C  
                                     l9204 25C0                                       l6478 5C00  
                                     l6486 5F28                                       l6590 5F8A  
                                     l6910 4306                                       l6902 428A  
                                     l6830 4CA8                                       l6822 360C  
                                     l6814 35E2                                       l6806 35BA  
                                     l6750 34A2                                       l6742 347A  
                                     l6734 3452                                       l6726 342A  
                                     l6718 3402                                       l6670 3312  
                                     l6662 32EA                                       l6654 32C2  
                                     l6646 329E                                       l7518 5DE8  
                                     l8094 5AAE                                       l7198 5E30  
                                     l7550 45E2                                       l7542 459C  
                                     l7534 4566                                       l7438 5CA4  
                                     l8166 38A0                                       l8174 38D6  
                                     l8158 3868                                       l7710 3196  
                                     l7702 3148                                       l7630 2F6C  
                                     l7622 2F48                                       l7614 2F16  
                                     l7390 2A6E                                       l7382 2A12  
                                     l7374 29CE                                       l7358 297A  
                                     l7366 2998                                       l7294 27AA  
                                     l7278 2740                                       l7286 2750  
                                     l7454 5168                                       l7446 513E  
                                     l7462 5980                                       l7470 58F8  
                                     l8430 1F84                                       l8422 1F62  
                                     l8414 1F34                                       l8406 1EFE  
                                     l8350 1CCA                                       l8342 1C76  
                                     l8334 1BF0                                       l8318 1A60  
                                     l8326 1B56                                       l8270 18E8  
                                     l8254 17E8                                       l8262 18B0  
                                     l8246 1778                                       l8190 1588  
                                     l8182 1544                                       l8510 416E  
                                     l8502 4102                                       l8086 533C  
                                     l8078 52CC                                       l9062 1438  
                                     l9070 1488                                       l9046 133A  
                                     l9134 4C36                                       l9126 4BBC  
                                     l9118 4B66                                       l9142 5E96  
                                     l9206 25DE                                       l9150 20E4  
                                     l6488 5F40                                       l6592 5F8E  
                                     l6920 4344                                       l6912 4312  
                                     l6904 42BC                                       l6832 4CAC  
                                     l6840 4D54                                       l6824 4C56  
                                     l6496 5EC0                                       l6816 35EC  
                                     l6808 35C4                                       l6760 34D4  
                                     l6752 34AC                                       l6744 3484  
                                     l6736 345C                                       l6728 3434  
                                     l6680 3344                                       l6672 331C  
                                     l6664 32F4                                       l6656 32CC  
                                     l6648 32A4                                       l8096 5ADC  
                                     l7560 4652                                       l7552 45F0  
                                     l7544 45A8                                       l7536 456A  
                                     l7528 4534                                       l8168 38B2  
                                     l7720 3204                                       l7704 3156  
                                     l7640 2FAC                                       l7632 2F7A  
                                     l7616 2F26                                       l7624 2F50  
                                     l7608 2EFA                                       l7800 2C30  
                                     l7392 2A8E                                       l7384 2A4C  
                                     l7368 29A6                                       l7296 27C0  
                                     l7288 2754                                       l7448 514A  
                                     l7480 3C54                                       l7464 5990  
                                     l7472 590A                                       l8440 1FE6  
                                     l8432 1FAA                                       l8424 1F6A  
                                     l8416 1F3C                                       l8408 1F0E  
                                     l8360 1D70                                       l8352 1D2E  
                                     l8344 1C86                                       l8336 1C22  
                                     l8328 1B74                                       l8272 18F0  
                                     l8264 18C0                                       l8256 1842  
                                     l8192 1590                                       l8184 1552  
                                     l8512 418E                                       l8520 41BC  
                                     l8504 411C                                       l8088 534E  
                                     l9072 14AE                                       l9080 14DE  
                                     l9064 1448                                       l9048 1352  
                                     l9056 13A2                                       l9128 4BD0  
                                     l9136 4C4C                                       l9160 2134  
                                     l9152 20E8                                       l6594 5F92  
                                     l6922 4368                                       l6914 4320  
                                     l6906 42BE                                       l6834 4CF8  
                                     l6826 4C5A                                       l6498 5EC8  
                                     l6818 35FC                                       l6770 3506  
                                     l6762 34DE                                       l6754 34B6  
                                     l6746 348E                                       l6738 3466  
                                     l6690 3376                                       l6682 334E  
                                     l6674 3326                                       l6666 32FE  
                                     l6658 32D6                                       l8098 5AE0  
                                     l7562 4664                                       l7554 4602  
                                     l7546 45C6                                       l7538 4578  
                                     l7730 326E                                       l7714 31C0  
                                     l7722 3208                                       l7706 315A  
                                     l7650 2FEC                                       l7642 2FAE  
                                     l7634 2F7C                                       l7626 2F60  
                                     l7618 2F36                                       l7810 2C76  
                                     l7802 2C3E                                       l7394 2A92  
                                     l7378 29F8                                       l7386 2A4E  
                                     l7298 27CC                                       l7458 51AC  
                                     l7490 3D24                                       l7482 3C68  
                                     l7466 58C2                                       l8450 202C  
                                     l8442 2000                                       l8434 1FC6  
                                     l8426 1F72                                       l8418 1F4C  
                                     l8370 1DAC                                       l8354 1D3E  
                                     l8362 1D78                                       l8346 1C9A  
                                     l8338 1C32                                       l8290 19A0  
                                     l8282 1934                                       l8274 190A  
                                     l8266 18C4                                       l8258 1876  
                                     l8194 15A2                                       l8186 155A  
                                     l8178 152A                                       l8514 41A0  
                                     l8506 413A                                       l8530 46E8  
                                     l8610 3958                                       l8602 3900  
                                     l9074 14BC                                       l9058 13D8  
                                     l9170 221A                                       l9162 2142  
                                     l9154 20F4                                       l9146 20DA  
                                     l6596 5F96                                       l6588 5F86  
                                     l6924 4378                                       l6916 433E  
                                     l6908 42CA                                       l6836 4D24  
                                     l6828 4C6E                                       l6780 3538  
                                     l6772 3510                                       l6764 34E8  
                                     l6756 34C0                                       l6748 3498  
                                     l6692 3380                                       l6684 3358  
                                     l6676 3330                                       l6668 3308  
                                     l8700 44EA                                       l9260 445C  
                                     l7556 4630                                       l7548 45CE  
                                     l7564 466A                                       l7580 49F2  
                                     l7572 49BC                                       l7900 5558  
                                     l7732 3272                                       l7724 3222  
                                     l7716 31CC                                       l7708 3168  
                                     l7660 301C                                       l7652 2FF4  
                                     l7636 2F8C                                       l7644 2FB6  
                                     l7628 2F66                                       l7820 2CE4  
                                     l7812 2C90                                       l7804 2C4A  
                                     l7396 2AA0                                       l7388 2A5E  
                                     l7484 3C76                                       l7492 3D58  
                                     l7476 3BDC                                       l8460 207C  
                                     l8452 203C                                       l8444 2006  
                                     l8436 1FCE                                       l8428 1F7E  
                                     l8380 1DD8                                       l8372 1DB2  
                                     l8364 1D8A                                       l8356 1D50  
                                     l8348 1CA6                                       l8284 1946  
                                     l8292 19A4                                       l8268 18D6  
                                     l8276 1922                                       l8196 15B0  
                                     l8188 157E                                       l8516 41A6  
                                     l8508 4154                                       l8532 46F0  
                                     l8524 46BC                                       l8620 3998  
                                     l8612 3960                                       l8604 390E  
                                     l9076 14D0                                       l9180 22F0  
                                     l9164 218E                                       l9172 2254  
                                     l9156 20F6                                       l9148 20DE  
                                     l6598 5F9A                                       l6926 4386  
                                     l6918 4340                                       l6838 4D50  
                                     l6790 356A                                       l6782 3542  
                                     l6774 351A                                       l6766 34F2  
                                     l6758 34CA                                       l6694 338A  
                                     l6686 3362                                       l6678 333A  
                                     l8702 44FC                                       l7566 467A  
                                     l7558 4650                                       l7590 4A5A  
                                     l7582 4A00                                       l7574 49C0  
                                     l7910 5592                                       l7902 5560  
                                     l7734 3280                                       l7726 3238  
                                     l7718 31DA                                       l7670 305A  
                                     l7662 301C                                       l7654 2FF8  
                                     l7646 2FC6                                       l7638 2F9C  
                                     l7830 2D7A                                       l7822 2D0E  
                                     l7814 2CA0                                       l7806 2C5A  
                                     l7750 2AEA                                       l7398 2AA6  
                                     l7494 3D94                                       l7478 3BFC  
                                     l8470 20B8                                       l8462 208E  
                                     l8454 2042                                       l8446 2018  
                                     l8438 1FD4                                       l8374 1DBE  
                                     l8366 1D98                                       l8382 1DDE  
                                     l8390 1E0C                                       l8358 1D62  
                                     l8294 19AC                                       l8286 1962  
                                     l8198 15C2                                       l8518 41B6  
                                     l8550 47AA                                       l8542 4768  
                                     l8534 4704                                       l8526 46CE  
                                     l8710 4D88                                       l8630 3A0C  
                                     l8622 39A0                                       l8614 3980  
                                     l8606 3912                                       l9086 14F0  
                                     l9190 2482                                       l9174 2268  
                                     l9182 231A                                       l9166 21C2  
                                     l9158 2120                                       l6928 4388  
                                     l6792 3574                                       l6784 354C  
                                     l6776 3524                                       l6768 34FC  
                                     l6696 3394                                       l6688 336C  
                                     l8704 450E                                       l7568 469A  
                                     l7592 4A68                                       l7584 4A20  
                                     l7576 49CE                                       l7920 55B8  
                                     l7912 559A                                       l7904 5568  
                                     l7736 3286                                       l7728 3252  
                                     l7680 30A6                                       l7672 306A  
                                     l7648 2FDC                                       l7840 2DBA  
                                     l7832 2D88                                       l7824 2D44  
                                     l7816 2CBC                                       l7808 2C66  
                                     l7760 2B22                                       l7752 2AEC  
                                     l7496 3DA8                                       l7488 3CE8  
                                     l8464 209A                                       l8456 2048  
                                     l8448 2024                                       l8392 1E64  
                                     l8384 1DF0                                       l8376 1DCE  
                                     l8368 1DA8                                       l8296 19BE  
                                     l8288 1998                                       l8480 4008  
                                     l8560 4802                                       l8552 47C8  
                                     l8544 477C                                       l8536 470C  
                                     l8528 46D6                                       l8720 4DFE  
                                     l8712 4DB2                                       l8632 3A1E  
                                     l8640 3A7E                                       l8624 39BC  
                                     l8616 3988                                       l8608 392C  
                                     l9088 1516                                       l8800 0306  
                                     l9192 24B0                                       l9184 2330  
                                     l9176 2276                                       l9168 21F0  
                                     l6890 4206                                       l6794 357E  
                                     l6786 3556                                       l6778 352E  
                                     l6698 339E                                       l7594 4A96  
                                     l7586 4A3E                                       l7578 49EE  
                                     l7922 55C0                                       l7914 559C  
                                     l7906 5576                                       l7930 55DC  
                                     l7738 3288                                       l7690 30F0  
                                     l7682 30B4                                       l7674 307A  
                                     l7666 3030                                       l7658 300C  
                                     l7850 2E2C                                       l7842 2DE8  
                                     l7834 2D9A                                       l7826 2D52  
                                     l7818 2CC8                                       l7770 2B4E  
                                     l7762 2B32                                       l7754 2AFC  
                                     l7746 2AD0                                       l7498 3DD0  
                                     l8466 20A2                                       l8394 1E98  
                                     l8386 1E02                                       l8378 1DD2  
                                     l8298 19D0                                       l8490 4078  
                                     l8482 4022                                       l8562 4816  
                                     l8554 47CC                                       l8546 4780  
                                     l8538 471A                                       l8722 4E1C  
                                     l8570 3E04                                       l8650 3B14  
                                     l8642 3A8E                                       l8626 39CC  
                                     l8618 3992                                       l8810 0394  
                                     l8802 0314                                       l9258 00F8  
                                     l8730 0042                                       l9194 24DA  
                                     l9186 233E                                       l9178 22C2  
                                     l6892 424C                                       l6796 3588  
                                     l6788 3560                                       l7596 4AB6  
                                     l7588 4A46                                       l7916 55A2  
                                     l7908 557C                                       l7940 5610  
                                     l7932 55E4                                       l7692 3102  
                                     l7684 30C0                                       l7676 3082  
                                     l7668 304A                                       l7860 2EA2  
                                     l7852 2E56                                       l7836 2DA8  
                                     l7828 2D70                                       l7780 2BA4  
                                     l7772 2B5E                                       l7764 2B38  
                                     l7756 2B0C                                       l7748 2ADC  
                                     l8468 20B2                                       l8396 1EA0  
                                     l8388 1E06                                       l8492 407E  
                                     l8484 405E                                       l8476 3FF6  
                                     l8564 481A                                       l8556 47D0  
                                     l8548 479E                                       l8724 4E2E  
                                     l8716 4DBE                                       l8580 3E72  
                                     l8572 3E1E                                       l8660 3B8C  
                                     l8652 3B32                                       l8644 3A94  
                                     l8636 3A58                                       l8820 0442  
                                     l8812 03A4                                       l8740 0098  
                                     l8732 0068                                       l9196 2514  
                                     l9188 238A                                       l6894 4262  
                                     l6886 41E8                                       l6798 3592  
                                     l8670 43AE                                       l7598 4AC8  
                                     l7918 55A8                                       l7950 564C  
                                     l7942 5618                                       l7934 55E8  
                                     l7926 55CA                                       l7694 3118  
                                     l7686 30DE                                       l7678 3092  
                                     l7862 2EBE                                       l7870 2EE4  
                                     l7846 2E12                                       l7854 2E5A  
                                     l7838 2DAC                                       l7790 2BDE  
                                     l7782 2BB4                                       l7774 2B6E  
                                     l7766 2B3E                                       l7758 2B1C  
                                     l8398 1EA4                                       l8494 4086  
                                     l8486 4066                                       l8478 4004  
                                     l8726 4E70                                       l8718 4DCC  
                                     l8590 3F6A                                       l8582 3EE8  
                                     l8574 3E5A                                       l8566 3DF2  
                                     l8662 3B9C                                       l8654 3B4C  
                                     l8646 3A9A                                       l8638 3A6A  
                                     l8910 0A90                                       l8902 0A08  
                                     l8830 04FC                                       l8822 0474  
                                     l8814 03D8                                       l8806 035E  
                                     l8742 009A                                       l8734 0076  
                                     l9198 2546                                       l6888 41F8  
                                     l8680 4410                                       l8672 43B2  
                                     l7952 5652                                       l7944 5620  
                                     l7936 55F6                                       l7928 55CE  
                                     l7696 311E                                       l7688 30E0  
                                     l7872 2EE8                                       l7864 2ECE  
                                     l7856 2E74                                       l7848 2E1E  
                                     l7792 2BF4                                       l7776 2B7E  
                                     l7768 2B4C                                       l8496 4098  
                                     l8488 406C                                       l8592 3F88  
                                     l8584 3EEE                                       l8576 3E62  
                                     l8568 3E00                                       l8664 3BB2  
                                     l8656 3B66                                       l8648 3AF8  
                                     l8920 0B3C                                       l8912 0AB6  
                                     l8904 0A3E                                       l8840 05EA  
                                     l8832 0546                                       l8816 03E8  
                                     l8808 0370                                       l8760 00C4  
                                     l8752 00B8                                       l8744 00AC  
                                     l8736 0088                                       l6898 4276  
                                     l8690 443C                                       l8674 43B6  
                                     l7890 5524                                       l7882 5506  
                                     l7946 562E                                       l7954 5658  
                                     l7938 55FE                                       l7698 3128  
                                     l7970 57A6                                       l7962 572A  
                                     l7866 2EDC                                       l7858 2E88  
                                     l7794 2C00                                       l7786 2BC8  
                                     l7778 2B84                                       l8498 409E  
                                     l8594 3FA2                                       l8586 3EF4  
                                     l8578 3E6C                                       l8658 3B86  
                                     l8930 0BFC                                       l8850 0686  
                                     l8826 0490                                       l8818 041C  
                                     l8770 0148                                       l8738 008C  
                                     l8692 4472                                       l8684 4416  
                                     l8676 43D4                                       l8668 439A  
                                     l7892 5532                                       l7884 550A  
                                     l7956 5668                                       l7948 5644  
                                     l7972 57CA                                       l7964 5758  
                                     l7980 4FE2                                       l7868 2EDE  
                                     l7796 2C18                                       l7788 2BD4  
                                     l7876 5B78                                       l8596 3FBC  
                                     l8588 3F58                                       l8940 0C84  
                                     l8932 0C08                                       l8860 0740  
                                     l8836 057E                                       l8828 04C6  
                                     l8780 01E0                                       l8772 016E  
                                     l8764 00D0                                       l8756 00BE  
                                     l8748 00B2                                       l8686 442C  
                                     l8678 440C                                       l7894 553A  
                                     l7886 5518                                       l7958 5670  
                                     l7974 57D0                                       l7966 5768  
                                     l7990 5050                                       l7982 4FF2  
                                     l7798 2C24                                       l7878 5B88  
                                     l8598 3FCC                                       l8950 0CF4  
                                     l8926 0B8E                                       l8918 0B06  
                                     l8870 07BE                                       l8846 063A  
                                     l8838 05B4                                       l8790 0270  
                                     l8782 01EE                                       l8774 01A4  
                                     l8766 0126                                       l8696 44AA  
                                     l8688 4434                                       l7896 553E  
                                     l7888 5520                                       l7968 5796  
                                     l7992 505E                                       l7984 5020  
                                     l8960 0D76                                       l8928 0BC4  
                                     l8936 0C16                                       l8880 0856  
                                     l8872 07CC                                       l8856 06D4  
                                     l8848 0660                                       l8792 0278  
                                     l8776 01B2                                       l8768 0146  
                                     l7898 5546                                       l7994 50AE  
                                     l7986 5030                                       l7978 4FB4  
                                     l8970 0DFC                                       l8938 0C4C  
                                     l8946 0C98                                       l8874 07FC  
                                     l8866 0792                                       l8858 070A  
                                     l8794 0286                                       l8786 0238  
                                     l8778 01C0                                       l7996 50B4  
                                     l7988 503E                                       l8948 0CBE  
                                     l8956 0D08                                       l8884 08C8  
                                     l8868 07A6                                       l8796 02AC  
                                     l8788 024A                                       l8990 0F6A  
                                     l8982 0EB4                                       l8974 0E38  
                                     l8958 0D3E                                       l8966 0D8A  
                                     l8886 08DA                                       l8894 0952  
                                     l8878 0828                                       l8798 02E6  
                                     STR_1 FFAE                                       l8992 0FA0  
                                     l8984 0EEA                                       l8976 0E5E  
                                     l8968 0DB0                                       l8896 0988  
                                     l8888 090E                                       STR_2 FF6F  
                                     STR_3 FF80                                       l8986 0F32  
                                     l8978 0E94                                       l8898 09D0  
                                     STR_4 FF59                                       STR_5 FF90  
                                     STR_6 FF9F                                       STR_7 FFBA  
                                     l8998 0FF2                                       STR_8 FFCA  
                                     _LATA 000F89                                       _LATB 000F8A  
                                     _LATC 000F8B                                       _LATD 000F8C  
                                     _LATE 000F8D                                       u6055 5FAA  
                                     u6056 5FAC                                       u8000 4980  
                                     u8001 497C                                       u8010 49BA  
                                     u8011 49B6                                       u7310 5B46  
                                     u8110 4CD6                                       u7311 5B42  
                                     u7320 5AFE                                       u8120 4CF8  
                                     u9000 2ABC                                       u7321 5AFA  
                                     u8121 4CF4                                       u9001 2AB8  
                                     i2l42 0032                                       u8130 4D76  
                                     u9010 5D70                                       u9011 5D6A  
                                     u8300 433E                                       u4780 5F80  
                                     u8140 4D86                                       u9100 513E  
                                     u9020 5D72                                       u8301 433A  
                                     u4781 5F7C                                       u8141 4D82  
                                     u8117 4CCC                                       u9101 513A  
                                     u8310 4378                                       u8230 41F8  
                                     u9030 5450                                       u9110 5168  
                                     u8311 4374                                       u8231 41F4  
                                     u9031 544C                                       u9111 5164  
                                     u8080 568A                                       u8320 4386  
                                     u8240 4206                                       u9040 5472  
                                     u9200 3C26                                       u8081 5686  
                                     u8321 4382                                       u8241 4202  
                                     u8137 4D6C                                       u9041 546E  
                                     u8090 5D2C                                       u8250 4262  
                                     u9050 54C8                                       u9130 51A2  
                                     u9210 3C54                                       u8091 5D28  
                                     u8251 425E                                       u9051 54C4  
                                     u9131 519C                                       u9211 3C50  
                                     u8260 42B8                                       u9060 54D8  
                                     u9140 51A4                                       u9220 3C76  
                                     u9300 5CFE                                       i2l93 5F18  
                                     u8261 42B4                                       u9061 54D4  
                                     u9125 517A                                       u9221 3C72  
                                     u9205 3C1C                                       u9301 5CF8  
                                     u8270 4302                                       u9070 5CA4  
                                     u9150 59CA                                       u9310 5D00  
                                     u8271 42FE                                       u9071 5CA0  
                                     u8280 4320                                       u9400 45C6  
                                     u9080 50F8                                       u9240 3CE4  
                                     u9160 59DC                                       u8600 5DA8  
                                     u9320 5952                                       i2l89 5FCE  
                                     u8281 431C                                       u9401 45C2  
                                     u9241 3CE0                                       u9161 59D8  
                                     u8601 5DA2                                       u9321 594C  
                                     u8290 4330                                       u9410 45F0  
                                     u9090 5116                                       u9250 3D08  
                                     u8610 5DAA                                       u9170 58F2  
                                     u9330 5954                                       i2l99 6038  
                                     u8291 432C                                       u9411 45EC  
                                     u9091 5112                                       u9235 3C8A  
                                     u9171 58EC                                       u8540 5388  
                                     u9420 4630                                       u9500 2F14  
                                     u8700 2710                                       u8620 262A  
                                     u9260 3D24                                       u9236 3C94  
                                     u9180 58F4                                       u9340 596A  
                                     u8541 5384                                       u9421 462C  
                                     u9501 2F10                                       u8701 270C  
                                     u8621 2626                                       u9085 50EE  
                                     u9261 3D20                                       u9237 3CA4  
                                     u9157 59C0                                       u9341 5966  
                                     u9350 5E18                                       u8550 539A  
                                     u9430 467A                                       u9510 2F26  
                                     u8710 277E                                       u8630 263C  
                                     u9270 3D78                                       u9190 590A  
                                     u9351 5E12                                       u8551 5396  
                                     u9431 4676                                       u9511 2F22  
                                     u8711 277A                                       u8631 2638  
                                     u9255 3CFE                                       u9191 5906  
                                     u7920 5EEA                                       u9360 5E1A  
                                     u8560 53C2                                       u9440 49CE  
                                     u9600 30DE                                       u9520 2F36  
                                     u8800 285C                                       u8720 2796  
                                     u8640 264C                                       u9280 3D94  
                                     u7921 5EE6                                       u8561 53BE  
                                     u9441 49CA                                       u9601 30DA  
                                     u9521 2F32                                       u8801 2858  
                                     u8721 2790                                       u8641 2648  
                                     u9281 3D90                                       u7930 5808  
                                     u8570 53F8                                       u9370 4546  
                                     u9450 4A00                                       u9610 3102  
                                     u9530 2F7A                                       u8810 287A  
                                     u8730 2798                                       u8650 268E  
                                     u9290 3DD0                                       u7931 5804  
                                     u8571 53F4                                       u9371 4542  
                                     u9451 49FC                                       u9611 30FE  
                                     u9531 2F76                                       u8811 2876  
                                     u8651 268A                                       u9291 3DCC  
                                     u9275 3D6E                                       u7940 5832  
                                     u8580 5C46                                       u9380 4578  
                                     u9460 4A3E                                       u9700 3222  
                                     u9620 3118                                       u9540 2F8C  
                                     u8900 29B8                                       u8820 28B2  
                                     u8740 27C0                                       u8660 26A4  
                                     u7941 582E                                       u8581 5C42  
                                     u9381 4574                                       u9461 4A3A  
                                     u9701 321E                                       u9621 3114  
                                     u9541 2F88                                       u8901 29B4  
                                     u8821 28AE                                       u8741 27BC  
                                     u8661 26A0                                       u7870 5C64  
                                     u7950 5854                                       u8590 5E48  
                                     u9470 4A68                                       u9710 3252  
                                     u9630 3136                                       u9550 2F9C  
                                     u8910 29CE                                       u8830 28F8  
                                     u8750 27DE                                       u8670 26B6  
                                     u7871 5C60                                       u7951 5850  
                                     u8591 5E44                                       u9391 45A2  
                                     u9471 4A64                                       u9711 324E  
                                     u9631 3132                                       u9551 2F98  
                                     u8911 29CA                                       u8831 28F4  
                                     u8751 27DA                                       u8671 26B2  
                                     u7880 5C80                                       u9480 4A96  
                                     u9720 3280                                       u9640 3156  
                                     u9560 2FDC                                       u9800 2BB4  
                                     u8920 29E4                                       u8840 292E  
                                     u8760 27FE                                       u8680 26C6  
                                     u7881 5C7C                                       u9481 4A92  
                                     u9721 327C                                       u9641 3152  
                                     u9561 2FD8                                       u9801 2BB0  
                                     u8921 29E0                                       u8841 292A  
                                     u8761 27FA                                       u8681 26C2  
                                     u9490 4ADE                                       u9650 3168  
                                     u9570 301C                                       u9810 2D2E  
                                     u9730 2AEA                                       u8930 29F8  
                                     u8850 293E                                       u8770 280C  
                                     u8690 2702                                       u9491 4ADA  
                                     u9651 3164                                       u9571 3018  
                                     u9731 2AE6                                       u8931 29F4  
                                     u8851 293A                                       u8771 2808  
                                     u8691 26FE                                       u7980 4940  
                                     u9660 3196                                       u9580 3092  
                                     u9900 2EA2                                       u9820 2D88  
                                     u9740 2AFC                                       u8940 2A12  
                                     u8860 296A                                       u8780 281C  
                                     u7981 493C                                       u9661 3192  
                                     u9581 308E                                       u9901 2E9E  
                                     u9821 2D84                                       u9741 2AF8  
                                     u8941 2A0E                                       u8861 2966  
                                     u8781 2818                                       u7990 496E  
                                     u7974 4920                                       u9670 31AC  
                                     u9590 30B4                                       u9910 2EDC  
                                     u9830 2DA8                                       u9750 2B0C  
                                     u8950 2A4C                                       u8870 297A  
                                     u8790 284E                                       u7991 496A  
                                     u7975 491A                                       u9671 31A8  
                                     u9591 30B0                                       u9911 2ED8  
                                     u9831 2DA4                                       u9815 2D24  
                                     u9751 2B08                                       u8951 2A48  
                                     u8871 2976                                       u8791 284A  
                                     u9920 5518                                       u9680 31C0  
                                     u9840 2DBA                                       u9760 2B4C  
                                     u8960 2A5E                                       u8880 2996  
                                     u9921 5514                                       u9681 31BC  
                                     u9841 2DB6                                       u9761 2B48  
                                     u8961 2A5A                                       u8881 2992  
                                     u9930 5532                                       u9690 31DA  
                                     u9850 2DE8                                       u9770 2B5E  
                                     u8970 2A6E                                       u8890 29A6  
                                     u9931 552E                                       u9691 31D6  
                                     u9851 2DE4                                       u9771 2B5A  
                                     u8971 2A6A                                       u8891 29A2  
                                     u9940 5558                                       u9860 2DFE  
                                     u9780 2B6E                                       u8980 2A8E  
                                     u9941 5554                                       u9861 2DFA  
                                     u9781 2B6A                                       u8981 2A8A  
                                     u9950 5576                                       u9870 2E12  
                                     u9790 2BA4                                       u8990 2AA0  
                                     u9951 5572                                       u9871 2E0E  
                                     u9791 2BA0                                       u8991 2A9C  
                                     u9960 5592                                       u9880 2E2C  
                                     u9961 558E                                       u9881 2E28  
                                     u9970 55B8                                       u9890 2E74  
                                     u9971 55B4                                       u9891 2E70  
                                     u9980 55DC                                       u9981 55D8  
                                     u9990 55F6                                       u9991 55F2  
                                     _WPUB 000F5B                                       abs@a 0015  
                                     _dbuf 0188                                       _atoi 439A  
                                     _ctoa 5A3A                                       _main 20DA  
                                     _dtoa 361A                                       _font F189  
                                     _prec 005B                                       _temp 0114  
                                     _otoa 3FF6                                       _nout 011A  
                                     pad@i 001A                                       pad@p 0017  
                                     fsr1h 000FE2                                       fsr2h 000FDA  
                                     indf1 000FE7                                       indf2 000FDF  
                                     fsr1l 000FE1                                       pad@w 001C  
                                     fsr2l 000FD9                                       _stoa 46BC  
                                     btemp 005D                                       _utoa 3DF2  
                                     _xtoa 3900                              ___fpclassifyf 50B8  
                                     prodh 000FF4                                       prodl 000FF3  
                                     start 003E                              __CFG_IESO$OFF 000000  
                          ___fldiv@new_exp 0053                     __end_of_SPI_Initialize 600E  
                             _tolower$2104 000F                              lcd_fill@width 0010  
                            __CFG_MCLRE$ON 000000                               ___param_bank 000000  
                              _string_temp 0124                                      ??_abs 0017  
                                    ??_pad 0019             __size_of_OSCILLATOR_Initialize 0012  
            __end_of_OSCILLATOR_Initialize 6020                              ___fltol@sign1 000B  
                          __end_of___aodiv 46BC                                      ?_atoi 000A  
                                    ?_ctoa 001E                            __end_of___fladd 2AD0  
                                    ?_main 0001                                      ?_dtoa 001E  
                          __end_of___aomod 4B20                            __end_of___fldiv 3294  
                          __end_of___awdiv 55CA                            __end_of___flneg 5DE8  
                                    STR_11 FFBE                                      STR_12 FFD2  
                                    STR_21 FFCE                                      STR_30 FFCF  
                                    STR_15 FFC6                                      STR_17 FFC6  
                                    STR_33 FFE9                                      STR_26 FFC7  
                                    STR_42 FFEC                                      STR_35 FFE9  
                                    STR_19 FFCE                                      STR_44 FFEC  
                          __end_of___awmod 567A                                      STR_37 FFEF  
                                    STR_54 FFDB                                      STR_62 FFD6  
                                    STR_39 FFEF                                      STR_47 FFDA  
                                    STR_64 FFD6                                      STR_72 FFF2  
                                    STR_49 FFDA                                      STR_57 FFF5  
                                    STR_74 FFF2                                      STR_59 FFF5  
                                    STR_84 FFDF                                      STR_92 FFE2  
                                    STR_69 FFD7                                      STR_77 FFDE  
                                    STR_94 FFE2                                      STR_79 FFDE  
                                    STR_87 FFF8                                      STR_96 FFC2  
                          __end_of___flmul 2EFA                                      STR_89 FFF8  
                                    STR_98 FFC2                                      ?_otoa 001E  
                          __end_of___flsub 5BBE                            __end_of___fltol 4FB4  
        __end_of_IOCB4_SetInterruptHandler 602A                                      ?_stoa 000C  
                                    u10000 5610                                      u10001 560C  
                                    u10010 562E                                      u10011 562A  
                                    u10020 5644                                      u10100 505E  
                                    u10021 5640                                      u10101 505A  
                                    u10030 5668                                      u10110 50AE  
                                    u10031 5664                                      u10111 50AA  
                                    ?_utoa 001E                                      u10040 5758  
                                    u10120 5DC6                                      u11000 411C  
                                    u10041 5754                                      u10121 5DC2  
                                    u11001 4118                                      u10201 51BC  
                                    u10050 5796                                      u10130 4EC4  
                                    u11010 413A                                      u10210 51E0  
                                    u10051 5792                                      u10131 4EC0  
                                    u11011 4136                                      u10211 51DC  
                                    u10300 364A                                      u10060 57CA  
                                    u10140 4EF8                                      u11020 4154  
                                    u11100 4738                                      u10220 520A  
                                    u10301 3644                                      u10061 57C6  
                                    u11021 4150                                      u11101 4734  
                                    u10221 5206                                      u10310 364C  
                                    u10070 4FE2                                      u10150 4F26  
                                    u11030 416E                                      u11110 4764  
                                    u10230 524A                                      u10071 4FDE  
                                    u10151 4F22                                      u11031 416A  
                                    u11111 4760                                      u10231 5246  
                                    u10400 3868                                      u10320 3662  
                                    u10080 5020                                      u10160 4F3A  
                                    u11040 417E                                      u11120 479E  
                                    u10240 52C4                                      u11200 3FA2  
                                    u12000 1274                                      u10401 3864  
                                    u10321 365E                                      u10081 501C  
                                    u10161 4F36                                      u10145 4EEE  
                                    u11041 417A                                      u11121 479A  
                                    u10241 52C0                                      u11201 3F9E  
                                    u12001 1270                                      u10410 3878  
                                    u10330 3690                                      u10090 503E  
                                    u10170 4F62                                      u11050 418E  
                                    u11130 47EE                                      u10250 52EE  
                                    u11210 3FBC                                      u12010 1314  
                                    u10411 3874                                      u10331 368C  
                                    u10091 503A                                      u10171 4F5E  
                                    u11051 418A                                      u11131 47EA  
                                    u10251 52EA                                      u11211 3FB8  
                                    u12011 1310                                      u10420 388A  
                                    u10340 36AE                                      u10180 4F82  
                                    u10500 163A                                      u11060 41A0  
                                    u11140 47FE                                      u10260 531C  
                                    u11220 3FCC                                      u11300 3A52  
                                    u12020 133A                                      u12100 4BE0  
                                    u10421 3886                                      u10341 36AA  
                                    u10181 4F7E                                      u10501 1634  
                                    u11061 419C                                      u11141 47FA  
                                    u10261 5318                                      u11221 3FC8  
                                    u11301 3A4C                                      u12021 1336  
                                    u12101 4BDC                                      u10270 5AAE  
                                    u10430 389A                                      u10350 36DC  
                                    u10190 4F92                                      u10510 163C  
                                    u11150 4838                                      u11310 3A54  
                                    u11230 390E                                      u12030 13D8  
                                    u12110 4C16                                      u10271 5AAA  
                                    u10431 3896                                      u10351 36D8  
                                    u10191 4F8E                                      u11151 4834  
                                    u11071 46C6                                      u11231 390A  
                                    u12031 13D4                                      u12111 4C12  
                                    u10280 5ADC                                      u11400 43D4  
                                    u10440 38B2                                      u10360 36EC  
                                    u10600 18D6                                      u10520 1652  
                                    u11080 46E8                                      u11160 3E00  
                                    u11320 3A6A                                      u11240 392C  
                                    u12040 140E                                      u12120 2134  
                                    u10281 5AD8                                      u11401 43D0  
                                    u10441 38AE                                      u10361 36E8  
                                    u10601 18D2                                      u10521 164E  
                                    u11081 46E4                                      u11161 3DFC  
                                    u11321 3A66                                      u11241 3928  
                                    u12041 140A                                      u12121 2130  
                                    u11410 440C                                      u10290 5A4E  
                                    u10370 3816                                      u10610 18E8  
                                    u10530 16DE                                      u10450 1552  
                                    u11090 471A                                      u11170 3E1E  
                                    u11330 3AD2                                      u11250 3958  
                                    u12050 14AE                                      u12130 224C  
                                    u11411 4408                                      u10291 5A4A  
                                    u10371 3812                                      u10611 18E4  
                                    u10531 16DA                                      u10451 154E  
                                    u11091 4716                            __end_of___lodiv 52A6  
                                    u11171 3E1A                                      u11251 3954  
                                    u12051 14AA                                      u12131 2248  
                                    u11420 4428                                      u10380 3834  
                                    u10700 19F4                                      u10620 190A  
                                    u10540 170E                                      u10460 15A2  
                                    u11500 4E1C                                      u11180 3F6A  
                                    u11340 3B14                                      u11260 39BC  
                                    u12060 58B8                                      u12140 2268  
                          ___awdiv@divisor 0005                                      u11421 4424  
                                    u10381 3830                                      u10701 19F0  
                                    u10621 1906                                      u10541 1708  
                                    u10461 159E                                      u11501 4E18  
                                    u11181 3F66                                      u11341 3B10  
                                    u11261 39B8                                      u12061 58B4  
                                    u12141 2264                                      u11430 44E4  
                                    u10390 384E                                      u10710 1A02  
                                    u10630 1930                                      u10550 1710  
                                    u10470 15B0                                      u11510 4E2E  
                                    u11190 3F88                                      u11350 3B32  
                                    u11270 3A06                                      u12070 4B34  
                                    u12150 2330                                      u11431 44DE  
                                    u10391 384A                                      u10711 19FE  
                                    u10631 192C                                      u10471 15AC  
                                    u11511 4E2A                                      u11191 3F84  
                                    u11351 3B2E                                      u11335 3AC0  
                                    u11271 3A00                                      u12071 4B30  
                                    u12151 232C                                      ?_xtoa 001E  
                                    u11440 44E6                                      u10800 1D62  
                                    u10720 1A2C                                      u10640 1946  
                                    u10560 1726                                      u10480 15C2  
                                    u11520 4E70                                      u11360 3B4C  
                                    u11280 3A08                                      u11600 0234  
                                    u12080 4B66                                      u12160 250C  
                                    _T1CON 000FCD                                      u10801 1D5E  
                                    u10721 1A28                                      u10641 1942  
                                    u10561 1722                                      u10481 15BE  
                                    u11521 4E6C                                      u11361 3B48  
                                    u12081 4B62                                      u12161 2508  
                                    u11450 44FC                                      u10810 1D70  
                                    u10730 1B74                                      u10650 1962  
                                    u10570 17AA                                      u10490 160A  
                                    u11530 4E92                                      u11370 3B66  
                                    u11290 3A1E                                      u11610 024A  
                                    u12090 4BD0                                      u12170 2546  
                                    u11451 44F8                                      u10811 1D6C  
                                    u10731 1B70                                      u10651 195E  
                                    u10571 17A6                                      u10491 1606  
                                    u11371 3B62                                      u11291 3A1A  
                                    u11611 0246                                      u12091 4BCC  
                                    u12171 2542                                      u11460 450E  
                                    u10900 1F62                                      u10820 1D8A  
                                    u10740 1BDA                                      u10660 1998  
                                    u10580 183E                                      u11380 3B76  
                                    u11700 04C6                                      u11620 0270  
                                    u11540 0068                                      u12180 25C0  
                                    u11461 450A                                      u10901 1F5E  
                                    u10821 1D86                                      u10741 1BD6  
                                    u10661 1994                                      u10581 183A  
                                    u11525 4E60                                      u11381 3B72  
                                    u11701 04C2                                      u11621 026C  
                                    u11541 0064                                      u12181 25BC  
                                    u10910 1FE6                                      u10830 1D98  
                                    u10750 1C22                                      u10670 19BE  
                                    u10590 18B0                                      u11470 4DB2  
                                    u11390 3B86                                      u11710 04FC  
                                    u11630 02AC                                      u11550 0138  
                                    u10911 1FE2                                      u10831 1D94  
                                    u10751 1C1E                                      u10671 19BA  
                                    u10591 18AC                                      u11527 4E56  
                                    u11471 4DAE                                      u11391 3B82  
                                    u11711 04F8                                      u11631 02A8  
                                    u11551 0134                                      u10920 2000  
                                    u10840 1DF0                                      u10760 1C32  
                                    u10680 19D0                                      u11480 4DEE  
                                    u11800 08C2                                      u11720 05B4  
                                    u11640 0358                                      u11560 0146  
                                    u10921 1FFC                                      u10841 1DEC  
                                    u10761 1C2E                                      u10681 19CC  
                                    u11537 4E88                                      u11801 08BC  
                                    u11721 05B0                                      u11641 0352  
                                    u11561 0142                                      u10930 2018  
                                    u10850 1EC2                                      u10770 1C9A  
                                    u10690 19DE                                      u11490 4DFE  
                                    u11810 08C4                                      u11730 05EA  
                                    u11650 035A                                      u11570 016E  
                                    u10931 2014                                      u10851 1EBE  
                                    u10771 1C96                                      u10691 19DA  
                                    u11491 4DFA                                      u11731 05E6  
                                    u11571 016A                                      u10940 2076  
                                    u10860 1EDE                                      u10780 1D3E  
                                    u11900 0D3E                                      u11820 08DA  
                                    u11740 0660                                      u11660 0370  
                                    u11580 01B2                                      u12197 5ECE  
                                    u10941 2070                                      u10861 1EDA  
                                    u10781 1D3A                                      u11901 0D3A  
                                    u11821 08D6                                      u11741 065C  
                                    u11661 036C                                      u11581 01AE  
                                    u10950 2078                                      u10870 1EF0  
                                    u10790 1D50                                      u11910 0DB0  
                                    u11830 0988                                      u11750 0686  
                                    u11670 03A4                                      u11590 0232  
                                    u10871 1EEC                                      u10791 1D4C  
                                    u11487 4DE4                                      u11911 0DAC  
                                    u11831 0984                                      u11751 0682  
                                    u11671 03A0                                      u11591 022C  
                                    u10960 208E                                      u10880 1EFE  
                                    u11920 0E5E                                      u11840 0A3E  
                                    u11760 070A                                      u11680 03E8  
                                    u10961 208A                                      u10881 1EFA  
                                    u11921 0E5A                                      u11841 0A3A  
                                    u11761 0706                                      u11681 03E4  
                                    u10890 1F34                                      u10970 4004  
                                    u11930 0EEA                                      u11850 0AB6  
                                    u11770 0740                                      u11690 0442  
                                    u10891 1F30                                      u10971 4000  
                                    u11931 0EE6                                      u11851 0AB2  
                                    u11771 073C                                      u11691 043E  
                                    u10980 4022                                      u11940 0FA0  
                                    u11860 0B3C                                      u11780 07A6  
                                    u10981 401E                                      u11941 0F9C  
                                    u11861 0B38                                      u11781 07A2  
                                    u10990 40DC                                      u11950 1018  
                                    u11870 0BC4                                      u11790 0856  
                                    u11951 1014                                      u11871 0BC0  
                                    u11791 0852                                      u11960 109E  
                                    u11880 0C4C                            __end_of___lomod 5376  
                                    u11961 109A                                      u11881 0C48  
                                    u11970 1126                                      u11890 0CBE  
                                    u10995 40CA                                      u11971 1122  
                                    u11891 0CBA                                      u11980 115C  
                                    u11981 1158                                      u11990 123E  
                                    u11991 123A                                      i2l294 5E8A  
                          ___awdiv@counter 0007                               vfpfcnvrt@fmt 00BA  
                             vfpfcnvrt@llu 00DE                                      _TMR1H 000FCF  
                                    _TMR1L 000FCE                                      _TRISA 000F92  
                                    _TRISB 000F93                                      _TRISC 000F94  
                                    _TRISD 000F95                                      _TRISE 000F96  
                            __CFG_WRT0$OFF 000000                            ??_lcd_draw_char 0016  
                            __CFG_WRT1$OFF 000000                              __CFG_WRT2$OFF 000000  
                            __CFG_WRT3$OFF 000000                             __CFG_EBTR0$OFF 000000  
                           __CFG_FCMEN$OFF 000000                             __CFG_EBTR1$OFF 000000  
                           __CFG_EBTR2$OFF 000000                             __CFG_EBTR3$OFF 000000  
                            __CFG_WRTB$OFF 000000                              __CFG_WRTC$OFF 000000  
                            __CFG_WRTD$OFF 000000                            __end_of_msDelay 5EEC  
                           __CFG_EBTRB$OFF 000000                    __end_of_PIN_MANAGER_IOC 5FD0  
                                    _flags 00FC                                      _botao 011E  
                                    _errno 0118                                      _fputc 5376  
                          __end_of_isalpha 5D06                                      _fputs 5C04  
                          __end_of_isdigit 5E20                                      atoi@n 0017  
                                    pad@fp 0013                                      atoi@s 000A  
                                    _width 00FA                                      ctoa@c 0020  
                                    _putch 6036                                      ctoa@w 0021  
                                    dtoa@d 0020                                      dtoa@i 0040  
                                    dtoa@n 0038                                      dtoa@p 0032  
                                    dtoa@s 0036                                      dtoa@w 0034  
                         __end_of_SPI_Open 572A                            __end_of_islower 5D78  
                          __end_of_isspace 5AE8                    __end_of_TMR1_Initialize 5F46  
                          __end_of_isupper 5DB0                                      pclath 000FFA  
                                    tablat 000FF5                                      otoa@d 0020  
                                    otoa@i 003E                                      otoa@n 0036  
                                    otoa@p 0030                                      otoa@t 0032  
                                    otoa@w 0034                                      plusw1 000FE3  
                                    plusw2 000FDB                                      stoa@i 0018  
                                    stoa@l 0020                                      stoa@p 001E  
                                    stoa@s 000E                                      stoa@w 001A  
                                    ttemp5 005E                                      ttemp6 0061  
                                    ttemp7 0065                                      utoa@d 0020  
                                    utoa@i 003C                                      utoa@n 0034  
                                    utoa@p 0030                                      utoa@w 0032  
                                    status 000FD8                                      wtemp8 005E  
                           ?___fpclassifyf 0003                            __end_of_tolower 5922  
                                    xtoa@c 0043                                      xtoa@d 0020  
                                    xtoa@i 0041                                      xtoa@n 0039  
                                    xtoa@p 0035                                      xtoa@w 0037  
                                    xtoa@x 0028                            __end_of_strncmp 4EAE  
                          __end_of_toupper 5980                             lcd_fill@height 000E  
                         ___lodiv@dividend 0003                            ?_SPI_Initialize 0001  
                             _toupper$2119 000F            ??_IOCB4_DefaultInterruptHandler 0001  
                          __initialization 59DE                               __end_of_atoi 4534  
                             __end_of_ctoa 5A96                               __end_of_main 2610  
                             __end_of_dtoa 3900                               __end_of_font FF55  
                             __end_of_otoa 41E6                               __end_of_stoa 4842  
                             __end_of_utoa 3FF6                               __end_of_xtoa 3BDC  
                        __end_of_IOCB4_ISR 5F1A                ?_INTERRUPT_InterruptManager 0001  
                                   ??_atoi 000C                                     ??_ctoa 0021  
                                   ??_main 005B                                     ??_dtoa 0028  
                        ?_lcd_set_cursor_x 0006                          ?_lcd_set_cursor_y 0006  
                            lcd_send@value 0004                                     ??_otoa 0028  
                                   ??_stoa 0010                                     ??_utoa 0028  
                                   ??_xtoa 0029                              __activetblptr 000003  
                       ??_lcd_set_cursor_x 0008                         ??_lcd_set_cursor_y 0008  
                           __CFG_RETEN$OFF 000000                           ___lodiv@quotient 0013  
                           lcd_draw_char@i 0021                             lcd_draw_char@j 001F  
                           lcd_draw_char@k 0020                   __end_of_SPI_ExchangeByte 5F86  
                           lcd_draw_char@x 000C                             lcd_draw_char@y 000E  
                                   _ADCON0 000FC2                                     _ADCON1 000FC1  
                                   _ADCON2 000FC0                                     ?_fputc 0003  
                                   STR_110 FFFB                                     ?_fputs 000C  
                                   STR_103 FFE3                                     STR_112 FFFB  
                                   STR_114 FFE6                                     _ADRESH 000FC4  
                                   STR_107 FFC3                                     STR_116 FFE6  
                                   _ADRESL 000FC3                                     _ANCON0 000F5D  
                                   _ANCON1 000F5C                           ___awdiv@dividend 0003  
                                   ?_putch 0001                                     _T1GCON 000FAA  
                          __CFG_BBSIZ$BB2K 000000                             __CFG_WDTEN$OFF 000000  
                                   i2l6430 5E7A                                     i2l6432 5E82  
                                   i2l6600 5FB8                                     i2l6426 5E56  
                                   i2l6602 5FC8                                     i2l6428 5E64  
                                   i2l6604 5FCC                                     i2l6492 5EEC  
                                   i2l6494 5F00                                     i2l6932 0012  
                                   i2l6934 0020                                     i2l6936 002E  
                                   _OSCCON 000FD3                              vfpfcnvrt@done 00C4  
                          _string_ntc_high 0300                                     _SSPADD 000FC8  
                                   _SSPBUF 000FC9                           __end_of___xxtofl 439A  
                          _global_bg_color 011C                             __CFG_XINST$OFF 000000  
                         ??_lcd_draw_pixel 0008                           __end_of_lcd_fill 5856  
                             vfprintf@cfmt 00EC                           __end_of_lcd_init 361A  
                         __end_of_lcd_send 5FB8                                     ___flge 4FB4  
                                   ___fleq 572A                                  ??___aodiv 0013  
                                ??___fladd 0032                                  ??___aomod 0013  
                                   ___wmul 5F46                                  ??___fldiv 004A  
                                ??___awdiv 0007                                  ??___flneg 0007  
                           __CFG_STVREN$ON 000000                                  ??___awmod 0007  
                                ??___flmul 0019                                  ??___flsub 0042  
                                ??___fltol 0007                                  ??___lodiv 0013  
                                ??___lomod 0013                                     _efgtoa 152A  
                                   _floorf 3BDC                                     clear_0 5A04  
                                   clear_1 5A10                                     clear_2 5A1C  
                         ___awdiv@quotient 0009                            ___awmod@divisor 0005  
                          ___awmod@counter 0007                                     pad@buf 0015  
                                   ctoa@fp 001E                                     dtoa@fp 001E  
                                   _strcpy 5980                                     _strlen 5E20  
                                ??_msDelay 0003                                     fputc@c 0003  
                                   fputs@c 0010                                     fputs@i 0011  
                                   fputs@s 000C                                  ??_isalpha 0005  
                                ??_isdigit 0005                            ___fpclassifyf@e 000B  
                          ___fpclassifyf@u 000D                            ___fpclassifyf@x 0003  
                                ??_islower 0005                               __mediumconst F188  
                                ??_isspace 0005                                     otoa@fp 001E  
                                   tblptrh 000FF7                                  ??_isupper 0005  
                                   tblptrl 000FF6                                     tblptru 000FF8  
                 ADC_GetConversion@channel 0007                                     stoa@cp 001C  
                                   stoa@fp 000C                                     putch@c 0001  
                         __end_of_vfprintf 58C2                                     utoa@fp 001E  
IOCB4_SetInterruptHandler@InterruptHandler 0003                           ?_PIN_MANAGER_IOC 0001  
                         __end_of_snprintf 5EBE                                  ??_tolower 000B  
                                   xtoa@fp 001E                                  ??_strncmp 0009  
                                ??_toupper 000B              __size_of_INTERRUPT_Initialize 0004  
                               ___flge@ff1 002A                                 ___flge@ff2 002E  
                          ??___fpclassifyf 0007                           ?_TMR1_Initialize 0001  
                             ___xxtofl@arg 000D                               ___xxtofl@exp 000C  
                        _SYSTEM_Initialize 5F86                               ___xxtofl@val 0003  
                               ___fleq@ff1 0003                                 ___fleq@ff2 0007  
                               __accesstop 0060                   __size_of_lcd_draw_string 0132  
                  __end_of__initialization 5A30                                 ___flneg@f1 0003  
                       ?_SYSTEM_Initialize 0001                              ___rparam_used 000001  
                               ___fltol@f1 0003                             __pcstackCOMRAM 0001  
                             __pidataBANK1 602A                        ??_SYSTEM_Initialize 0005  
                            __end_of_fputc 5440                              __end_of_fputs 5C48  
    __end_of_IOCB4_DefaultInterruptHandler 603A     __size_of_IOCB4_DefaultInterruptHandler 0002  
            _IOCB4_DefaultInterruptHandler 6038                              __end_of_putch 6038  
                                ?_SPI_Open 0001                ??_IOCB4_SetInterruptHandler 0005  
                         ??_lcd_set_cursor 000C                     fp__IOCB4_InterruptCall 0000  
                                  ??_fputc 0007                  __end_of_SYSTEM_Initialize 5FA0  
                                  ??_fputs 0010                                    ??_putch 0003  
                               __pbssBANK0 00FA                                 __pbssBANK1 0100  
                               __pbssBANK2 0200                                 __pbssBANK3 0300  
                          __CFG_PLLCFG$OFF 000000                                    ?___flge 002A  
                                  ?___fleq 0003                                    ?___wmul 0003  
                                  ?_efgtoa 0074                                    ?_floorf 0060  
                               ??_SPI_Open 0003                    __size_of_ADC_Initialize 0016  
                                  ?_strcpy 0003                                    ?_strlen 0003  
                         __CFG_CANMX$PORTB 000000                                  ?___xxtofl 0003  
                                  _REFOCON 000F9A                                    _OSCCON2 000FD2  
                       __size_of_vfpfcnvrt 14E8                                    _OSCTUNE 000F9B  
             __size_of_IOCB4_InterruptCall 0036                                    _SSPCON1 000FC6  
                                  _SSPCON2 000FC5                                  ?_lcd_fill 000C  
                                ?_lcd_init 0001                                  ?_lcd_send 0004  
                                  _SSPSTAT 000FC7                           ___lomod@dividend 0003  
                         ??_SPI_Initialize 0003                  _IOCB4_SetInterruptHandler 6020  
                             _codigo_digit 0120                            __CFG_PWRTEN$OFF 000000  
                     _ADC_InterruptHandler 0122                                    __Hparam 0000  
                                  __Lparam 0000                         __size_of_vsnprintf 0136  
                        ??_lcd_draw_string 002C                            __size_of___flge 0104  
                          __size_of___fleq 00AA                                    ___aodiv 4534  
                                  ___fladd 2610                                    ___aomod 49BC  
                                  ___fldiv 2EFA                                    ___awdiv 5506  
                                  ___flneg 5DB0                                    ___awmod 55CA  
                                  ___flmul 2AD0                                    ___flsub 5B78  
                                  ___fltol 4EAE                            __size_of___wmul 0026  
                                  ___lodiv 51B6                                    ___lomod 52A6  
                                ?_vfprintf 00E6                            __size_of_efgtoa 0BB0  
                                ?_snprintf 01E6                            __size_of_floorf 0216  
                                  __pcinit 59DE                                    __ramtop 0F00  
                                  __ptext0 20DA                                    __ptext1 5E8C  
                                  __ptext2 4B20                                    __ptext3 5856  
                                  __ptext4 0042                                    __ptext5 3900  
                                  __ptext6 5922                                    __ptext7 5D40  
                                  __ptext8 5CCA                                    __ptext9 3DF2  
                                  _msDelay 5EBE                                  _IOCB4_ISR 5EEC  
                          __size_of_strcpy 005E                            __size_of_strlen 0036  
                                _T1CONbits 000FCD                      _OSCILLATOR_Initialize 600E  
                             __size_of_abs 0040                               __size_of_pad 00C6  
                                  _isalpha 5CCA                                    _isdigit 5DE8  
                               ??___xxtofl 0007                           ___awmod@dividend 0003  
                                  _islower 5D40                   ??_PIN_MANAGER_Initialize 0005  
                                  _isspace 5A96                          __CFG_MSSPMSK$MSK7 000000  
                                  _ntc_val 010C                                    _isupper 5D78  
                                  efgtoa@c 007A                                    efgtoa@d 0098  
                                  efgtoa@e 00B0                                    efgtoa@f 0076  
                                  efgtoa@g 00AC                                    efgtoa@h 00A2  
                                  efgtoa@i 00AA                                    efgtoa@l 00A6  
                                  efgtoa@m 0094                                    efgtoa@n 00B2  
                                  efgtoa@p 009C                                    efgtoa@t 0090  
                                  efgtoa@u 00B4                                    efgtoa@w 009F  
                                  _pot_val 0110                                    atoi@neg 0010  
                    __end_of_lcd_draw_char 49BC                 __size_of_SYSTEM_Initialize 001A  
                               ??_lcd_fill 000E                                    _tolower 58C2  
                        ?_SPI_ExchangeByte 0001                                 ??_lcd_init 0012  
                               ??_lcd_send 0005                                    _strncmp 4D88  
                                  _toupper 5922                       end_of_initialization 5A30  
                                  floorf@e 006E                                    floorf@m 006A  
                                  floorf@u 0070                                    floorf@x 0060  
                       ??_SPI_ExchangeByte 0003                  __size_of_lcd_set_cursor_x 0048  
                __size_of_lcd_set_cursor_y 0048                                    fputc@fp 0005  
                                  fputs@fp 000E                        lcd_draw_char@fIndex 0010  
                        __end_of_vfpfcnvrt 152A                                 efgtoa@mode 00A1  
                               efgtoa@sign 009A                                    postdec1 000FE5  
                                  postdec2 000FDD                                    postinc0 000FEE  
                                  postinc1 000FE6                                    postinc2 000FDE  
                         lcd_fill@bg_color 000C                                 ??_vfprintf 005B  
                               ??_snprintf 005B                                    strcpy@d 000B  
                                  strlen@a 0005                                    strcpy@s 0009  
                                  strlen@s 0003                          lcd_draw_string@pS 0026  
                                _PORTBbits 000F81                          _spi_configuration FF55  
                               ?_IOCB4_ISR 0001                                ___fladd@grs 0039  
                         __CFG_FOSC$INTIO2 000000                              ___xxtofl@sign 000B  
                                _TRISCbits 000F94                          __end_of_vsnprintf 4C56  
                              ___fldiv@grs 0055                                ___fldiv@rem 004E  
                              ___flmul@grs 001F                                 lcd_send@dc 0005  
                               _string_ntc 0200                                 _string_pot 0264  
             __end_of_INTERRUPT_Initialize 6036                       SPI_ExchangeByte@data 0003  
                           __end_of___flge 50B8                             __end_of___fleq 57D4  
                __end_of_spi_configuration FF59                                vfpfcnvrt@ap 00BC  
                              vfpfcnvrt@cp 00C2                                vfpfcnvrt@ct 00D0  
                              vfpfcnvrt@fp 00B8                                vfpfcnvrt@ll 00D3  
                           __end_of___wmul 5F6C                                vfpfcnvrt@vp 00DB  
                           __end_of_efgtoa 20DA                             _ADC_Initialize 5FE6  
                           __end_of_floorf 3DF2                     ?_OSCILLATOR_Initialize 0001  
                               floorf@F524 0100                          __size_of_SPI_Open 00B0  
                           __end_of_strcpy 59DE                             __end_of_strlen 5E56  
                      start_initialization 59DE                            ___lodiv@divisor 000B  
                          ___lodiv@counter 001B            __size_of_PIN_MANAGER_Initialize 0046  
                              __end_of_abs 5CCA                                __end_of_pad 5506  
                    __end_of___fpclassifyf 51B6                   __size_of_PIN_MANAGER_IOC 0018  
                           _string_ntc_low 0364             SPI_Open@spiUniqueConfiguration 0004  
                 __size_of_TMR1_Initialize 002C                                vfprintf@fmt 00E8  
                      _IOCB4_InterruptCall 5E56                                   ??___flge 0032  
                                 ??___fleq 000B                                   ??___wmul 0007  
                                 ??_efgtoa 007B                     __end_of_ADC_Initialize 5FFC  
                              __pdataBANK1 01F4                                   ??_floorf 0064  
                                 ??_strcpy 0007                                   ??_strlen 0005  
                              ??_IOCB4_ISR 0001                                  ___fladd@a 002E  
                                ___fladd@b 002A                    __size_of_lcd_draw_pixel 0016  
                             vsnprintf@cnt 01DE                               vsnprintf@fmt 00F2  
                                ___fldiv@a 0046                                  ___fldiv@b 0042  
                                ___flmul@a 0015                                  ___flmul@b 0011  
                              __pbssCOMRAM 005B                                  ___flsub@a 003E  
                                ___flsub@b 003A                              __pcstackBANK0 0060  
                            __pcstackBANK1 01DC                           ___aodiv@dividend 0003  
                     ?_IOCB4_InterruptCall 0001                                snprintf@fmt 01EA  
                        __size_of___xxtofl 01B4                            _lcd_draw_string 4C56  
                         _lcd_set_cursor_x 5B30                           _lcd_set_cursor_y 5AE8  
                        __size_of_lcd_fill 0082                          __size_of_lcd_init 0386  
                        __size_of_lcd_send 0018                                  _atoi$1981 0012  
                                _atoi$1982 0016                                  _atoi$1983 0014  
                                __pnvBANK1 01FB                                _efgtoa$1341 0088  
                              _efgtoa$1336 0084                                _efgtoa$1345 008A  
                              _efgtoa$1337 0086                                _efgtoa$1346 008C  
                              _efgtoa$1347 008E                     _PIN_MANAGER_Initialize 5BBE  
                                _dtoa$1313 0030                                  __pintcode 0008  
                            __pmediumconst F188                                   ?___aodiv 0003  
                                 ?___fladd 002A                                   ?___aomod 0003  
                                 ?___fldiv 0042                                   ?___awdiv 0003  
                         ___aodiv@quotient 0015                                   ?___flneg 0003  
                                 ?___awmod 0003                                   ?___flmul 0011  
                                 ?___flsub 003A                                   ?___fltol 0003  
                                 ?___lodiv 0003                                   ?___lomod 0003  
                          ?_ADC_Initialize 0001               ??_INTERRUPT_InterruptManager 0001  
                        __size_of_vfprintf 006C                          __size_of_snprintf 0032  
                                 ?_msDelay 0001                            ___lomod@divisor 000B  
                          ___lomod@counter 0013                                   ?_isalpha 0003  
                                 ?_isdigit 0003                                   ?_islower 0003  
                    ??_IOCB4_InterruptCall 0001                                   ?_isspace 0003  
                                 ?_isupper 0003                                   ?_tolower 0009  
                           __size_of_fputc 00CA                             __size_of_fputs 0044  
                                 ?_strncmp 0003                                   ?_toupper 0009  
                           __size_of_putch 0002                       _INTERRUPT_Initialize 6032  
                  __size_of_lcd_set_cursor 0042                             ___wmul@product 0007  
                                 _IOCBbits 000F5A                                   _LATAbits 000F89  
                                 _LATEbits 000F8D                            lcd_set_cursor@x 0008  
                          lcd_set_cursor@y 000A        __size_of_INTERRUPT_InterruptManager 0036  
                                 _PIR1bits 000F9E                      lcd_draw_string@lIndex 0032  
                                 i2u807_40 5FC8                                   i2u807_41 5FC4  
                                 i2u833_40 0020                                   i2u833_41 001C  
                                 i2u834_40 002E                                   i2u834_41 002A  
                                 i2u790_40 5F00                                   i2u790_41 5EFC  
                                 i2u791_48 5F06                                   i2u791_49 5F18  
                                 i2u785_40 5E64                                   i2u785_41 5E60  
                                 i2u786_40 5E7A                                   i2u786_41 5E76  
                                 _RCONbits 000FD0                  __size_of_SPI_ExchangeByte 001A  
                                _tensao_in 01D8                           lcd_draw_string@k 0030  
                         lcd_draw_string@x 0022                           lcd_draw_string@y 0024  
                        ??_PIN_MANAGER_IOC 0001                                  _vfpfcnvrt 0042  
                                _xtoa$1383 0031                                  _xtoa$1384 0033  
                                 _SPI_Open 567A                          ??_TMR1_Initialize 0003  
                               _ADCON0bits 000FC2                          ___wmul@multiplier 0003  
                         __CFG_SOSCSEL$DIG 000000                    __end_of_lcd_draw_string 4D88  
                             _isspace$2021 0009                                  msDelay@ms 0004  
                               vfpfcnvrt@c 00DD                                 vfpfcnvrt@f 00CC  
                              _INTCON2bits 000FF1                                  copy_data0 59F2  
                    ?_INTERRUPT_Initialize 0001                                  _vsnprintf 4B20  
                      lcd_draw_pixel@color 0006                                   __Hrparam 0000  
                               vfprintf@ap 00EA                                   __Lrparam 0000  
                               vfprintf@fp 00E6                          _ADC_GetConversion 5D06  
                       __CFG_BOREN$SBORDIS 000000                    __size_of_SPI_Initialize 0012  
                  ??_OSCILLATOR_Initialize 0003                     __size_of_lcd_draw_char 017A  
                       ?_ADC_GetConversion 0003                           __size_of___aodiv 0188  
                         __size_of___fladd 04C0                           __size_of___aomod 0164  
                         __size_of___fldiv 039A                           __size_of___awdiv 00C4  
                         __size_of___flneg 0038                           __size_of___awmod 00B0  
                              vsnprintf@ap 00F4                           __size_of___flmul 042A  
                         __size_of___flsub 0046                           __size_of___fltol 0106  
                         __size_of___lodiv 00F0                           __size_of___lomod 00D0  
                               ?_vfpfcnvrt 00B8                                 snprintf@ap 01F2  
                          ___aodiv@divisor 000B                            ___aodiv@counter 0013  
                   _IOCB4_InterruptHandler 01FD                             _lcd_draw_pixel 5FD0  
                       ___fpclassifyf@F463 0104                        ??_ADC_GetConversion 0005  
                         __size_of_msDelay 002E                                   ___xxtofl 41E6  
                         __size_of_isalpha 003C                           __size_of_isdigit 0038  
         fp__IOCB4_DefaultInterruptHandler 0000             ?_IOCB4_DefaultInterruptHandler 0001  
                         __size_of_islower 0038                           __size_of_isspace 0052  
                                 __ptext10 52A6                                   __ptext11 51B6  
                                 __ptext20 50B8                                   __ptext12 4D88  
                                 __ptext21 4EAE                                   __ptext13 46BC  
                               _T1GCONbits 000FAA                                   __ptext30 5506  
                                 __ptext22 5B78                                   __ptext14 3FF6  
                                 __ptext31 361A                                   __ptext23 2610  
                                 __ptext15 152A                                   __ptext40 6036  
                                 __ptext32 5C8A                                   __ptext24 5DB0  
                                 __ptext16 58C2                                   __ptext41 439A  
                                 __ptext33 49BC                                   __ptext25 2AD0  
                                 __ptext17 5D78                                   __ptext50 5C48  
                                 __ptext42 5A96                                   __ptext34 4534  
                                 __ptext26 4FB4                                   __ptext18 5980  
                                 __ptext51 5AE8                                   __ptext43 5DE8  
                                 __ptext35 5A3A                                   __ptext27 572A  
                                 __ptext19 3BDC                                   __ptext60 5BBE  
                                 __ptext52 5B30                                   __ptext44 5F46  
                                 __ptext36 5440                                   __ptext28 2EFA  
                                 __ptext61 6020                                   __ptext53 5FD0  
                                 __ptext45 3294                                   __ptext37 5E20  
                                 __ptext29 55CA                                   __ptext70 6038  
                                 __ptext62 600E                                   __ptext54 5FA0  
                                 __ptext46 5EBE                                   __ptext38 5C04  
                                 __ptext71 5E56                                   __ptext63 6032  
                                 __ptext55 5F6C                                   __ptext47 57D4  
                                 __ptext39 5376                                   __ptext72 0000  
                                 __ptext64 5FE6                                   __ptext56 41E6  
                                 __ptext48 4C56                                   __ptext65 567A  
                                 __ptext57 5F86                                   __ptext49 4842  
                                 __ptext66 5D06                                   __ptext58 5F1A  
                                 __ptext59 5FFC                                   __ptext68 5FB8  
                                 __ptext69 5EEC                           __size_of_isupper 0038  
                                 _lcd_fill 57D4                                   _lcd_init 3294  
                                 _lcd_send 5FA0                           __size_of_tolower 0060  
                               strcpy@dest 0003                           __size_of_strncmp 0126  
                         __size_of_toupper 005E                                 ?_vsnprintf 00EE  
                            __size_of_atoi 019A                              __size_of_ctoa 005C  
                            __size_of_main 0536                              __size_of_dtoa 02E6  
                            __size_of_otoa 01F0                              __size_of_stoa 0186  
                            __size_of_utoa 0204                              __size_of_xtoa 02DC  
                __end_of_ADC_GetConversion 5D40                                   efgtoa@fp 0074  
                                 efgtoa@ne 0096                                   efgtoa@pp 0092  
                                 efgtoa@ou 0080                                  stoa@F1174 01F4  
                                 _temp_ntc 0108                      lcd_draw_char@bg_color 0014  
                                 int$flags 005D                                   _vfprintf 5856  
                    lcd_draw_char@fg_color 0012         __end_of_INTERRUPT_InterruptManager 003E  
               _INTERRUPT_InterruptManager 0008                     __end_of_lcd_draw_pixel 5FE6  
                                 _snprintf 5E8C                   __end_of_lcd_set_cursor_x 5B78  
                 __end_of_lcd_set_cursor_y 5B30                        __CFG_INTOSCSEL$HIGH 000000  
                                 msDelay@k 0005                           ___aomod@dividend 0003  
                           _vfpfcnvrt$1420 00CA                             _vfpfcnvrt$1398 00C6  
                           _vfpfcnvrt$1399 00C8                                 _INTCONbits 000FF2  
                         ?_lcd_draw_string 0022                                   isalpha@c 0003  
                                 isdigit@c 0003                     ??_INTERRUPT_Initialize 0003  
                               vsnprintf@f 01E0                                 vsnprintf@n 00F0  
                               vsnprintf@s 00EE                              _lcd_draw_char 4842  
                                snprintf@n 01E8                                  snprintf@s 01E6  
                                 intlevel2 0000                             _lcd_set_cursor 5C48  
                        lcd_set_cursor_x@x 0006                          lcd_set_cursor_y@y 0006  
                                 islower@c 0003                                   isspace@c 0003  
                  ?_PIN_MANAGER_Initialize 0001                                  strcpy@src 0005  
                                 isupper@c 0003                                  strncmp@_l 0003  
                                strncmp@_r 0005                           ??_ADC_Initialize 0003  
                         _SPI_ExchangeByte 5F6C                    lcd_draw_string@bg_color 002A  
                              efgtoa@nmode 009E                         __CFG_WDTPS$1048576 000000  
                          ___aomod@divisor 000B                    lcd_draw_string@fg_color 0028  
                          ?_lcd_draw_pixel 0006                                ??_vfpfcnvrt 00BE  
                                 stoa@nuls 0011                            ___aomod@counter 0013  
                                 tolower@c 0009                             _vsnprintf$2151 01DC  
                   __size_of___fpclassifyf 00FE                                   strncmp@l 000A  
                                 strncmp@n 0007                                   strncmp@r 000C  
                                 toupper@c 0009                                _SSPCON1bits 000FC6  
                   __end_of_lcd_set_cursor 5C8A                             ?_lcd_draw_char 000C  
                            ___fladd@signs 0036                               ___aodiv@sign 0014  
           __end_of_PIN_MANAGER_Initialize 5C04                                ??_vsnprintf 00F6  
                             ___fladd@aexp 0037                               ___fladd@bexp 0038  
                      __CFG_BORPWR$ZPBORMV 000000                            _PIN_MANAGER_IOC 5FB8  
               __size_of_ADC_GetConversion 003A                               ___aomod@sign 0014  
                          _TMR1_Initialize 5F1A  
