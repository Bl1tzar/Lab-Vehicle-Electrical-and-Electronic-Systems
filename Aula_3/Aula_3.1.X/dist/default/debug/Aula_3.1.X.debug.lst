

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Nov 04 16:08:24 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    91                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    92  0000                     
    93                           ; Version 2.10
    94                           ; Generated 31/07/2019 GMT
    95                           ; 
    96                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    97                           ; All rights reserved.
    98                           ; 
    99                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   100                           ; 
   101                           ; Redistribution and use in source and binary forms, with or without modification, are
   102                           ; permitted provided that the following conditions are met:
   103                           ; 
   104                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   105                           ;        conditions and the following disclaimer.
   106                           ; 
   107                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   108                           ;        of conditions and the following disclaimer in the documentation and/or other
   109                           ;        materials provided with the distribution.
   110                           ; 
   111                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   112                           ;        software without specific prior written permission.
   113                           ; 
   114                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   115                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   116                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   117                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   118                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   119                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   120                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   121                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   122                           ; 
   123                           ; 
   124                           ; Code-generator required, PIC18F46K80 Definitions
   125                           ; 
   126                           ; SFR Addresses
   127  0000                     
   128                           	psect	idataBANK1
   129  005C18                     __pidataBANK1:
   130                           	opt callstack 0
   131                           
   132                           ;initializer for stoa@F1174
   133  005C18  28                 	db	40
   134  005C19  6E                 	db	110
   135  005C1A  75                 	db	117
   136  005C1B  6C                 	db	108
   137  005C1C  6C                 	db	108
   138  005C1D  29                 	db	41
   139  005C1E  00                 	db	0
   140                           
   141                           	psect	mediumconst
   142  00F1CC                     __pmediumconst:
   143                           	opt callstack 0
   144  00F1CC  00                 	db	0
   145  00F1CD                     _font:
   146                           	opt callstack 0
   147  00F1CD  0004               	dw	4
   148  00F1CF  0000               	dw	0
   149  00F1D1  0000               	dw	0
   150  00F1D3  0000               	dw	0
   151  00F1D5  0000               	dw	0
   152  00F1D7  0000               	dw	0
   153  00F1D9  0000               	dw	0
   154  00F1DB  0000               	dw	0
   155  00F1DD  0000               	dw	0
   156  00F1DF  0003               	dw	3
   157  00F1E1  0000               	dw	0
   158  00F1E3  0000               	dw	0
   159  00F1E5  00FE               	dw	254
   160  00F1E7  001B               	dw	27
   161  00F1E9  0000               	dw	0
   162  00F1EB  0000               	dw	0
   163  00F1ED  0005               	dw	5
   164  00F1EF  001E               	dw	30
   165  00F1F1  0000               	dw	0
   166  00F1F3  0000               	dw	0
   167  00F1F5  0000               	dw	0
   168  00F1F7  0000               	dw	0
   169  00F1F9  0000               	dw	0
   170  00F1FB  001E               	dw	30
   171  00F1FD  0000               	dw	0
   172  00F1FF  0000               	dw	0
   173  00F201  0000               	dw	0
   174  00F203  000B               	dw	11
   175  00F205  0000               	dw	0
   176  00F207  0000               	dw	0
   177  00F209  0010               	dw	16
   178  00F20B  0001               	dw	1
   179  00F20D  0010               	dw	16
   180  00F20F  001D               	dw	29
   181  00F211  00F0               	dw	240
   182  00F213  0003               	dw	3
   183  00F215  001E               	dw	30
   184  00F217  0001               	dw	1
   185  00F219  0010               	dw	16
   186  00F21B  0001               	dw	1
   187  00F21D  0010               	dw	16
   188  00F21F  001D               	dw	29
   189  00F221  00F0               	dw	240
   190  00F223  0003               	dw	3
   191  00F225  001E               	dw	30
   192  00F227  0001               	dw	1
   193  00F229  0010               	dw	16
   194  00F22B  0001               	dw	1
   195  00F22D  0000               	dw	0
   196  00F22F  0000               	dw	0
   197  00F231  0009               	dw	9
   198  00F233  0000               	dw	0
   199  00F235  0004               	dw	4
   200  00F237  001C               	dw	28
   201  00F239  0008               	dw	8
   202  00F23B  0022               	dw	34
   203  00F23D  0010               	dw	16
   204  00F23F  0042               	dw	66
   205  00F241  0010               	dw	16
   206  00F243  00FF               	dw	255
   207  00F245  007F               	dw	127
   208  00F247  0042               	dw	66
   209  00F249  0010               	dw	16
   210  00F24B  0084               	dw	132
   211  00F24D  0010               	dw	16
   212  00F24F  0000               	dw	0
   213  00F251  000F               	dw	15
   214  00F253  0000               	dw	0
   215  00F255  0000               	dw	0
   216  00F257  000C               	dw	12
   217  00F259  001C               	dw	28
   218  00F25B  0000               	dw	0
   219  00F25D  0022               	dw	34
   220  00F25F  0010               	dw	16
   221  00F261  0022               	dw	34
   222  00F263  0008               	dw	8
   223  00F265  0022               	dw	34
   224  00F267  0006               	dw	6
   225  00F269  001C               	dw	28
   226  00F26B  0001               	dw	1
   227  00F26D  00C0               	dw	192
   228  00F26F  0000               	dw	0
   229  00F271  0020               	dw	32
   230  00F273  000E               	dw	14
   231  00F275  0018               	dw	24
   232  00F277  0011               	dw	17
   233  00F279  0004               	dw	4
   234  00F27B  0011               	dw	17
   235  00F27D  0002               	dw	2
   236  00F27F  0011               	dw	17
   237  00F281  0000               	dw	0
   238  00F283  000E               	dw	14
   239  00F285  0000               	dw	0
   240  00F287  0000               	dw	0
   241  00F289  000B               	dw	11
   242  00F28B  0000               	dw	0
   243  00F28D  0000               	dw	0
   244  00F28F  0000               	dw	0
   245  00F291  000E               	dw	14
   246  00F293  001C               	dw	28
   247  00F295  0011               	dw	17
   248  00F297  00A2               	dw	162
   249  00F299  0010               	dw	16
   250  00F29B  00C2               	dw	194
   251  00F29D  0010               	dw	16
   252  00F29F  0022               	dw	34
   253  00F2A1  0011               	dw	17
   254  00F2A3  001C               	dw	28
   255  00F2A5  000A               	dw	10
   256  00F2A7  0000               	dw	0
   257  00F2A9  000C               	dw	12
   258  00F2AB  0000               	dw	0
   259  00F2AD  000C               	dw	12
   260  00F2AF  0000               	dw	0
   261  00F2B1  0012               	dw	18
   262  00F2B3  0000               	dw	0
   263  00F2B5  0000               	dw	0
   264  00F2B7  0003               	dw	3
   265  00F2B9  0000               	dw	0
   266  00F2BB  0000               	dw	0
   267  00F2BD  001E               	dw	30
   268  00F2BF  0000               	dw	0
   269  00F2C1  0000               	dw	0
   270  00F2C3  0000               	dw	0
   271  00F2C5  0006               	dw	6
   272  00F2C7  0000               	dw	0
   273  00F2C9  0000               	dw	0
   274  00F2CB  0000               	dw	0
   275  00F2CD  0000               	dw	0
   276  00F2CF  00E0               	dw	224
   277  00F2D1  001F               	dw	31
   278  00F2D3  001C               	dw	28
   279  00F2D5  0060               	dw	96
   280  00F2D7  0002               	dw	2
   281  00F2D9  0080               	dw	128
   282  00F2DB  0000               	dw	0
   283  00F2DD  0000               	dw	0
   284  00F2DF  0004               	dw	4
   285  00F2E1  0000               	dw	0
   286  00F2E3  0000               	dw	0
   287  00F2E5  0006               	dw	6
   288  00F2E7  00C0               	dw	192
   289  00F2E9  00F8               	dw	248
   290  00F2EB  003F               	dw	63
   291  00F2ED  0000               	dw	0
   292  00F2EF  0000               	dw	0
   293  00F2F1  0006               	dw	6
   294  00F2F3  0024               	dw	36
   295  00F2F5  0000               	dw	0
   296  00F2F7  0018               	dw	24
   297  00F2F9  0000               	dw	0
   298  00F2FB  007E               	dw	126
   299  00F2FD  0000               	dw	0
   300  00F2FF  0018               	dw	24
   301  00F301  0000               	dw	0
   302  00F303  0024               	dw	36
   303  00F305  0000               	dw	0
   304  00F307  0000               	dw	0
   305  00F309  0000               	dw	0
   306  00F30B  0009               	dw	9
   307  00F30D  0000               	dw	0
   308  00F30F  0000               	dw	0
   309  00F311  0080               	dw	128
   310  00F313  0000               	dw	0
   311  00F315  0080               	dw	128
   312  00F317  0000               	dw	0
   313  00F319  0080               	dw	128
   314  00F31B  0000               	dw	0
   315  00F31D  00F0               	dw	240
   316  00F31F  0007               	dw	7
   317  00F321  0080               	dw	128
   318  00F323  0000               	dw	0
   319  00F325  0080               	dw	128
   320  00F327  0000               	dw	0
   321  00F329  0080               	dw	128
   322  00F32B  0000               	dw	0
   323  00F32D  0000               	dw	0
   324  00F32F  0000               	dw	0
   325  00F331  0004               	dw	4
   326  00F333  0000               	dw	0
   327  00F335  0000               	dw	0
   328  00F337  0000               	dw	0
   329  00F339  0060               	dw	96
   330  00F33B  0000               	dw	0
   331  00F33D  0018               	dw	24
   332  00F33F  0000               	dw	0
   333  00F341  0000               	dw	0
   334  00F343  0005               	dw	5
   335  00F345  0000               	dw	0
   336  00F347  0001               	dw	1
   337  00F349  0000               	dw	0
   338  00F34B  0001               	dw	1
   339  00F34D  0000               	dw	0
   340  00F34F  0001               	dw	1
   341  00F351  0000               	dw	0
   342  00F353  0001               	dw	1
   343  00F355  0000               	dw	0
   344  00F357  0000               	dw	0
   345  00F359  0004               	dw	4
   346  00F35B  0000               	dw	0
   347  00F35D  0000               	dw	0
   348  00F35F  0000               	dw	0
   349  00F361  0018               	dw	24
   350  00F363  0000               	dw	0
   351  00F365  0018               	dw	24
   352  00F367  0000               	dw	0
   353  00F369  0000               	dw	0
   354  00F36B  0008               	dw	8
   355  00F36D  0000               	dw	0
   356  00F36F  0000               	dw	0
   357  00F371  0000               	dw	0
   358  00F373  0040               	dw	64
   359  00F375  0000               	dw	0
   360  00F377  0038               	dw	56
   361  00F379  0000               	dw	0
   362  00F37B  0007               	dw	7
   363  00F37D  00E0               	dw	224
   364  00F37F  0000               	dw	0
   365  00F381  001C               	dw	28
   366  00F383  0000               	dw	0
   367  00F385  0002               	dw	2
   368  00F387  0000               	dw	0
   369  00F389  0000               	dw	0
   370  00F38B  0000               	dw	0
   371  00F38D  0009               	dw	9
   372  00F38F  00F8               	dw	248
   373  00F391  0007               	dw	7
   374  00F393  0004               	dw	4
   375  00F395  0008               	dw	8
   376  00F397  0002               	dw	2
   377  00F399  0010               	dw	16
   378  00F39B  0002               	dw	2
   379  00F39D  0010               	dw	16
   380  00F39F  0002               	dw	2
   381  00F3A1  0010               	dw	16
   382  00F3A3  0002               	dw	2
   383  00F3A5  0010               	dw	16
   384  00F3A7  0004               	dw	4
   385  00F3A9  0008               	dw	8
   386  00F3AB  00F8               	dw	248
   387  00F3AD  0007               	dw	7
   388  00F3AF  0000               	dw	0
   389  00F3B1  0000               	dw	0
   390  00F3B3  0006               	dw	6
   391  00F3B5  0000               	dw	0
   392  00F3B7  0000               	dw	0
   393  00F3B9  0000               	dw	0
   394  00F3BB  0000               	dw	0
   395  00F3BD  0002               	dw	2
   396  00F3BF  0000               	dw	0
   397  00F3C1  0002               	dw	2
   398  00F3C3  0000               	dw	0
   399  00F3C5  00FE               	dw	254
   400  00F3C7  001F               	dw	31
   401  00F3C9  0000               	dw	0
   402  00F3CB  0000               	dw	0
   403  00F3CD  0009               	dw	9
   404  00F3CF  0018               	dw	24
   405  00F3D1  0010               	dw	16
   406  00F3D3  0004               	dw	4
   407  00F3D5  0018               	dw	24
   408  00F3D7  0002               	dw	2
   409  00F3D9  0014               	dw	20
   410  00F3DB  0002               	dw	2
   411  00F3DD  0012               	dw	18
   412  00F3DF  0002               	dw	2
   413  00F3E1  0011               	dw	17
   414  00F3E3  0082               	dw	130
   415  00F3E5  0010               	dw	16
   416  00F3E7  0044               	dw	68
   417  00F3E9  0010               	dw	16
   418  00F3EB  0038               	dw	56
   419  00F3ED  0010               	dw	16
   420  00F3EF  0000               	dw	0
   421  00F3F1  0000               	dw	0
   422  00F3F3  0009               	dw	9
   423  00F3F5  0008               	dw	8
   424  00F3F7  000C               	dw	12
   425  00F3F9  0004               	dw	4
   426  00F3FB  0010               	dw	16
   427  00F3FD  0002               	dw	2
   428  00F3FF  0010               	dw	16
   429  00F401  0042               	dw	66
   430  00F403  0010               	dw	16
   431  00F405  0042               	dw	66
   432  00F407  0010               	dw	16
   433  00F409  0044               	dw	68
   434  00F40B  0010               	dw	16
   435  00F40D  00B8               	dw	184
   436  00F40F  0008               	dw	8
   437  00F411  0000               	dw	0
   438  00F413  0007               	dw	7
   439  00F415  0000               	dw	0
   440  00F417  0000               	dw	0
   441  00F419  0009               	dw	9
   442  00F41B  0000               	dw	0
   443  00F41D  0002               	dw	2
   444  00F41F  0000               	dw	0
   445  00F421  0003               	dw	3
   446  00F423  0080               	dw	128
   447  00F425  0002               	dw	2
   448  00F427  0060               	dw	96
   449  00F429  0002               	dw	2
   450  00F42B  0010               	dw	16
   451  00F42D  0002               	dw	2
   452  00F42F  0008               	dw	8
   453  00F431  0002               	dw	2
   454  00F433  00FE               	dw	254
   455  00F435  001F               	dw	31
   456  00F437  0000               	dw	0
   457  00F439  0002               	dw	2
   458  00F43B  0000               	dw	0
   459  00F43D  0000               	dw	0
   460  00F43F  0009               	dw	9
   461  00F441  0000               	dw	0
   462  00F443  0004               	dw	4
   463  00F445  0070               	dw	112
   464  00F447  0008               	dw	8
   465  00F449  002E               	dw	46
   466  00F44B  0010               	dw	16
   467  00F44D  0022               	dw	34
   468  00F44F  0010               	dw	16
   469  00F451  0022               	dw	34
   470  00F453  0010               	dw	16
   471  00F455  0022               	dw	34
   472  00F457  0010               	dw	16
   473  00F459  0042               	dw	66
   474  00F45B  0008               	dw	8
   475  00F45D  0082               	dw	130
   476  00F45F  0007               	dw	7
   477  00F461  0000               	dw	0
   478  00F463  0000               	dw	0
   479  00F465  0009               	dw	9
   480  00F467  0000               	dw	0
   481  00F469  0000               	dw	0
   482  00F46B  0000               	dw	0
   483  00F46D  0007               	dw	7
   484  00F46F  00C0               	dw	192
   485  00F471  0008               	dw	8
   486  00F473  0060               	dw	96
   487  00F475  0010               	dw	16
   488  00F477  0058               	dw	88
   489  00F479  0010               	dw	16
   490  00F47B  0044               	dw	68
   491  00F47D  0010               	dw	16
   492  00F47F  0082               	dw	130
   493  00F481  0008               	dw	8
   494  00F483  0000               	dw	0
   495  00F485  0007               	dw	7
   496  00F487  0000               	dw	0
   497  00F489  0000               	dw	0
   498  00F48B  0009               	dw	9
   499  00F48D  0000               	dw	0
   500  00F48F  0000               	dw	0
   501  00F491  0002               	dw	2
   502  00F493  0010               	dw	16
   503  00F495  0002               	dw	2
   504  00F497  000C               	dw	12
   505  00F499  0002               	dw	2
   506  00F49B  0003               	dw	3
   507  00F49D  00C2               	dw	194
   508  00F49F  0000               	dw	0
   509  00F4A1  0032               	dw	50
   510  00F4A3  0000               	dw	0
   511  00F4A5  000E               	dw	14
   512  00F4A7  0000               	dw	0
   513  00F4A9  0002               	dw	2
   514  00F4AB  0000               	dw	0
   515  00F4AD  0000               	dw	0
   516  00F4AF  0000               	dw	0
   517  00F4B1  0009               	dw	9
   518  00F4B3  0000               	dw	0
   519  00F4B5  0007               	dw	7
   520  00F4B7  0098               	dw	152
   521  00F4B9  0008               	dw	8
   522  00F4BB  0064               	dw	100
   523  00F4BD  0010               	dw	16
   524  00F4BF  0042               	dw	66
   525  00F4C1  0010               	dw	16
   526  00F4C3  0042               	dw	66
   527  00F4C5  0010               	dw	16
   528  00F4C7  0064               	dw	100
   529  00F4C9  0010               	dw	16
   530  00F4CB  0098               	dw	152
   531  00F4CD  0008               	dw	8
   532  00F4CF  0000               	dw	0
   533  00F4D1  0007               	dw	7
   534  00F4D3  0000               	dw	0
   535  00F4D5  0000               	dw	0
   536  00F4D7  0009               	dw	9
   537  00F4D9  0000               	dw	0
   538  00F4DB  0000               	dw	0
   539  00F4DD  0038               	dw	56
   540  00F4DF  0000               	dw	0
   541  00F4E1  0044               	dw	68
   542  00F4E3  0010               	dw	16
   543  00F4E5  0082               	dw	130
   544  00F4E7  0008               	dw	8
   545  00F4E9  0082               	dw	130
   546  00F4EB  0004               	dw	4
   547  00F4ED  0082               	dw	130
   548  00F4EF  0003               	dw	3
   549  00F4F1  0084               	dw	132
   550  00F4F3  0000               	dw	0
   551  00F4F5  0078               	dw	120
   552  00F4F7  0000               	dw	0
   553  00F4F9  0000               	dw	0
   554  00F4FB  0000               	dw	0
   555  00F4FD  0004               	dw	4
   556  00F4FF  0000               	dw	0
   557  00F501  0000               	dw	0
   558  00F503  0030               	dw	48
   559  00F505  0018               	dw	24
   560  00F507  0030               	dw	48
   561  00F509  0018               	dw	24
   562  00F50B  0000               	dw	0
   563  00F50D  0000               	dw	0
   564  00F50F  0004               	dw	4
   565  00F511  0000               	dw	0
   566  00F513  0000               	dw	0
   567  00F515  0030               	dw	48
   568  00F517  0060               	dw	96
   569  00F519  0030               	dw	48
   570  00F51B  0018               	dw	24
   571  00F51D  0000               	dw	0
   572  00F51F  0000               	dw	0
   573  00F521  000A               	dw	10
   574  00F523  0000               	dw	0
   575  00F525  0000               	dw	0
   576  00F527  0080               	dw	128
   577  00F529  0000               	dw	0
   578  00F52B  0080               	dw	128
   579  00F52D  0000               	dw	0
   580  00F52F  0040               	dw	64
   581  00F531  0001               	dw	1
   582  00F533  0020               	dw	32
   583  00F535  0002               	dw	2
   584  00F537  0020               	dw	32
   585  00F539  0002               	dw	2
   586  00F53B  0010               	dw	16
   587  00F53D  0004               	dw	4
   588  00F53F  0010               	dw	16
   589  00F541  0004               	dw	4
   590  00F543  0008               	dw	8
   591  00F545  0008               	dw	8
   592  00F547  0000               	dw	0
   593  00F549  0000               	dw	0
   594  00F54B  000A               	dw	10
   595  00F54D  0000               	dw	0
   596  00F54F  0000               	dw	0
   597  00F551  0020               	dw	32
   598  00F553  0001               	dw	1
   599  00F555  0020               	dw	32
   600  00F557  0001               	dw	1
   601  00F559  0020               	dw	32
   602  00F55B  0001               	dw	1
   603  00F55D  0020               	dw	32
   604  00F55F  0001               	dw	1
   605  00F561  0020               	dw	32
   606  00F563  0001               	dw	1
   607  00F565  0020               	dw	32
   608  00F567  0001               	dw	1
   609  00F569  0020               	dw	32
   610  00F56B  0001               	dw	1
   611  00F56D  0020               	dw	32
   612  00F56F  0001               	dw	1
   613  00F571  0000               	dw	0
   614  00F573  0000               	dw	0
   615  00F575  000A               	dw	10
   616  00F577  0000               	dw	0
   617  00F579  0000               	dw	0
   618  00F57B  0008               	dw	8
   619  00F57D  0008               	dw	8
   620  00F57F  0010               	dw	16
   621  00F581  0004               	dw	4
   622  00F583  0010               	dw	16
   623  00F585  0004               	dw	4
   624  00F587  0020               	dw	32
   625  00F589  0002               	dw	2
   626  00F58B  0020               	dw	32
   627  00F58D  0002               	dw	2
   628  00F58F  0040               	dw	64
   629  00F591  0001               	dw	1
   630  00F593  0080               	dw	128
   631  00F595  0000               	dw	0
   632  00F597  0080               	dw	128
   633  00F599  0000               	dw	0
   634  00F59B  0000               	dw	0
   635  00F59D  0000               	dw	0
   636  00F59F  0008               	dw	8
   637  00F5A1  0000               	dw	0
   638  00F5A3  0000               	dw	0
   639  00F5A5  000C               	dw	12
   640  00F5A7  0000               	dw	0
   641  00F5A9  0082               	dw	130
   642  00F5AB  0001               	dw	1
   643  00F5AD  0042               	dw	66
   644  00F5AF  0002               	dw	2
   645  00F5B1  0022               	dw	34
   646  00F5B3  001A               	dw	26
   647  00F5B5  0022               	dw	34
   648  00F5B7  001A               	dw	26
   649  00F5B9  009C               	dw	156
   650  00F5BB  0001               	dw	1
   651  00F5BD  0000               	dw	0
   652  00F5BF  0000               	dw	0
   653  00F5C1  000E               	dw	14
   654  00F5C3  0000               	dw	0
   655  00F5C5  0000               	dw	0
   656  00F5C7  00F0               	dw	240
   657  00F5C9  0003               	dw	3
   658  00F5CB  0008               	dw	8
   659  00F5CD  0004               	dw	4
   660  00F5CF  0004               	dw	4
   661  00F5D1  0008               	dw	8
   662  00F5D3  00C2               	dw	194
   663  00F5D5  0011               	dw	17
   664  00F5D7  0022               	dw	34
   665  00F5D9  0012               	dw	18
   666  00F5DB  0012               	dw	18
   667  00F5DD  0012               	dw	18
   668  00F5DF  0012               	dw	18
   669  00F5E1  0012               	dw	18
   670  00F5E3  00E2               	dw	226
   671  00F5E5  0011               	dw	17
   672  00F5E7  0012               	dw	18
   673  00F5E9  0012               	dw	18
   674  00F5EB  0004               	dw	4
   675  00F5ED  0012               	dw	18
   676  00F5EF  0008               	dw	8
   677  00F5F1  0009               	dw	9
   678  00F5F3  00F0               	dw	240
   679  00F5F5  0004               	dw	4
   680  00F5F7  0000               	dw	0
   681  00F5F9  0000               	dw	0
   682  00F5FB  000D               	dw	13
   683  00F5FD  0000               	dw	0
   684  00F5FF  0000               	dw	0
   685  00F601  0000               	dw	0
   686  00F603  0010               	dw	16
   687  00F605  0000               	dw	0
   688  00F607  000E               	dw	14
   689  00F609  0080               	dw	128
   690  00F60B  0001               	dw	1
   691  00F60D  0060               	dw	96
   692  00F60F  0001               	dw	1
   693  00F611  001C               	dw	28
   694  00F613  0001               	dw	1
   695  00F615  0002               	dw	2
   696  00F617  0001               	dw	1
   697  00F619  001C               	dw	28
   698  00F61B  0001               	dw	1
   699  00F61D  0060               	dw	96
   700  00F61F  0001               	dw	1
   701  00F621  0080               	dw	128
   702  00F623  0001               	dw	1
   703  00F625  0000               	dw	0
   704  00F627  000E               	dw	14
   705  00F629  0000               	dw	0
   706  00F62B  0010               	dw	16
   707  00F62D  0000               	dw	0
   708  00F62F  0000               	dw	0
   709  00F631  0009               	dw	9
   710  00F633  0000               	dw	0
   711  00F635  0000               	dw	0
   712  00F637  0000               	dw	0
   713  00F639  0000               	dw	0
   714  00F63B  00FE               	dw	254
   715  00F63D  001F               	dw	31
   716  00F63F  0042               	dw	66
   717  00F641  0010               	dw	16
   718  00F643  0042               	dw	66
   719  00F645  0010               	dw	16
   720  00F647  0064               	dw	100
   721  00F649  0010               	dw	16
   722  00F64B  0098               	dw	152
   723  00F64D  0008               	dw	8
   724  00F64F  0000               	dw	0
   725  00F651  0007               	dw	7
   726  00F653  0000               	dw	0
   727  00F655  0000               	dw	0
   728  00F657  000D               	dw	13
   729  00F659  0000               	dw	0
   730  00F65B  0000               	dw	0
   731  00F65D  00F0               	dw	240
   732  00F65F  0003               	dw	3
   733  00F661  0008               	dw	8
   734  00F663  0004               	dw	4
   735  00F665  0004               	dw	4
   736  00F667  0008               	dw	8
   737  00F669  0002               	dw	2
   738  00F66B  0010               	dw	16
   739  00F66D  0002               	dw	2
   740  00F66F  0010               	dw	16
   741  00F671  0002               	dw	2
   742  00F673  0010               	dw	16
   743  00F675  0002               	dw	2
   744  00F677  0010               	dw	16
   745  00F679  0002               	dw	2
   746  00F67B  0010               	dw	16
   747  00F67D  0004               	dw	4
   748  00F67F  0008               	dw	8
   749  00F681  0004               	dw	4
   750  00F683  0008               	dw	8
   751  00F685  0008               	dw	8
   752  00F687  0004               	dw	4
   753  00F689  0000               	dw	0
   754  00F68B  0000               	dw	0
   755  00F68D  000C               	dw	12
   756  00F68F  0000               	dw	0
   757  00F691  0000               	dw	0
   758  00F693  0000               	dw	0
   759  00F695  0000               	dw	0
   760  00F697  00FE               	dw	254
   761  00F699  001F               	dw	31
   762  00F69B  0002               	dw	2
   763  00F69D  0010               	dw	16
   764  00F69F  0002               	dw	2
   765  00F6A1  0010               	dw	16
   766  00F6A3  0002               	dw	2
   767  00F6A5  0010               	dw	16
   768  00F6A7  0002               	dw	2
   769  00F6A9  0010               	dw	16
   770  00F6AB  0002               	dw	2
   771  00F6AD  0010               	dw	16
   772  00F6AF  0004               	dw	4
   773  00F6B1  0008               	dw	8
   774  00F6B3  0008               	dw	8
   775  00F6B5  0004               	dw	4
   776  00F6B7  00F0               	dw	240
   777  00F6B9  0003               	dw	3
   778  00F6BB  0000               	dw	0
   779  00F6BD  0000               	dw	0
   780  00F6BF  0009               	dw	9
   781  00F6C1  0000               	dw	0
   782  00F6C3  0000               	dw	0
   783  00F6C5  0000               	dw	0
   784  00F6C7  0000               	dw	0
   785  00F6C9  00FE               	dw	254
   786  00F6CB  001F               	dw	31
   787  00F6CD  0042               	dw	66
   788  00F6CF  0010               	dw	16
   789  00F6D1  0042               	dw	66
   790  00F6D3  0010               	dw	16
   791  00F6D5  0042               	dw	66
   792  00F6D7  0010               	dw	16
   793  00F6D9  0042               	dw	66
   794  00F6DB  0010               	dw	16
   795  00F6DD  0042               	dw	66
   796  00F6DF  0010               	dw	16
   797  00F6E1  0000               	dw	0
   798  00F6E3  0000               	dw	0
   799  00F6E5  0008               	dw	8
   800  00F6E7  0000               	dw	0
   801  00F6E9  0000               	dw	0
   802  00F6EB  0000               	dw	0
   803  00F6ED  0000               	dw	0
   804  00F6EF  00FE               	dw	254
   805  00F6F1  001F               	dw	31
   806  00F6F3  0042               	dw	66
   807  00F6F5  0000               	dw	0
   808  00F6F7  0042               	dw	66
   809  00F6F9  0000               	dw	0
   810  00F6FB  0042               	dw	66
   811  00F6FD  0000               	dw	0
   812  00F6FF  0042               	dw	66
   813  00F701  0000               	dw	0
   814  00F703  0000               	dw	0
   815  00F705  0000               	dw	0
   816  00F707  000E               	dw	14
   817  00F709  0000               	dw	0
   818  00F70B  0000               	dw	0
   819  00F70D  00F0               	dw	240
   820  00F70F  0003               	dw	3
   821  00F711  0008               	dw	8
   822  00F713  0004               	dw	4
   823  00F715  0004               	dw	4
   824  00F717  0008               	dw	8
   825  00F719  0002               	dw	2
   826  00F71B  0010               	dw	16
   827  00F71D  0002               	dw	2
   828  00F71F  0010               	dw	16
   829  00F721  0002               	dw	2
   830  00F723  0010               	dw	16
   831  00F725  0002               	dw	2
   832  00F727  0010               	dw	16
   833  00F729  0082               	dw	130
   834  00F72B  0010               	dw	16
   835  00F72D  0084               	dw	132
   836  00F72F  0010               	dw	16
   837  00F731  0084               	dw	132
   838  00F733  0008               	dw	8
   839  00F735  0088               	dw	136
   840  00F737  0004               	dw	4
   841  00F739  0080               	dw	128
   842  00F73B  0003               	dw	3
   843  00F73D  0000               	dw	0
   844  00F73F  0000               	dw	0
   845  00F741  000A               	dw	10
   846  00F743  0000               	dw	0
   847  00F745  0000               	dw	0
   848  00F747  0000               	dw	0
   849  00F749  0000               	dw	0
   850  00F74B  00FE               	dw	254
   851  00F74D  001F               	dw	31
   852  00F74F  0040               	dw	64
   853  00F751  0000               	dw	0
   854  00F753  0040               	dw	64
   855  00F755  0000               	dw	0
   856  00F757  0040               	dw	64
   857  00F759  0000               	dw	0
   858  00F75B  0040               	dw	64
   859  00F75D  0000               	dw	0
   860  00F75F  0040               	dw	64
   861  00F761  0000               	dw	0
   862  00F763  00FE               	dw	254
   863  00F765  001F               	dw	31
   864  00F767  0000               	dw	0
   865  00F769  0000               	dw	0
   866  00F76B  0004               	dw	4
   867  00F76D  0000               	dw	0
   868  00F76F  0000               	dw	0
   869  00F771  0000               	dw	0
   870  00F773  0000               	dw	0
   871  00F775  00FE               	dw	254
   872  00F777  001F               	dw	31
   873  00F779  0000               	dw	0
   874  00F77B  0000               	dw	0
   875  00F77D  0007               	dw	7
   876  00F77F  0000               	dw	0
   877  00F781  0000               	dw	0
   878  00F783  0000               	dw	0
   879  00F785  0008               	dw	8
   880  00F787  0000               	dw	0
   881  00F789  0010               	dw	16
   882  00F78B  0000               	dw	0
   883  00F78D  0010               	dw	16
   884  00F78F  0000               	dw	0
   885  00F791  0008               	dw	8
   886  00F793  00FE               	dw	254
   887  00F795  0007               	dw	7
   888  00F797  0000               	dw	0
   889  00F799  0000               	dw	0
   890  00F79B  0009               	dw	9
   891  00F79D  0000               	dw	0
   892  00F79F  0000               	dw	0
   893  00F7A1  0000               	dw	0
   894  00F7A3  0000               	dw	0
   895  00F7A5  00FE               	dw	254
   896  00F7A7  001F               	dw	31
   897  00F7A9  0060               	dw	96
   898  00F7AB  0000               	dw	0
   899  00F7AD  0090               	dw	144
   900  00F7AF  0001               	dw	1
   901  00F7B1  0008               	dw	8
   902  00F7B3  0002               	dw	2
   903  00F7B5  0004               	dw	4
   904  00F7B7  000C               	dw	12
   905  00F7B9  0002               	dw	2
   906  00F7BB  0010               	dw	16
   907  00F7BD  0000               	dw	0
   908  00F7BF  0000               	dw	0
   909  00F7C1  0008               	dw	8
   910  00F7C3  0000               	dw	0
   911  00F7C5  0000               	dw	0
   912  00F7C7  0000               	dw	0
   913  00F7C9  0000               	dw	0
   914  00F7CB  00FE               	dw	254
   915  00F7CD  001F               	dw	31
   916  00F7CF  0000               	dw	0
   917  00F7D1  0010               	dw	16
   918  00F7D3  0000               	dw	0
   919  00F7D5  0010               	dw	16
   920  00F7D7  0000               	dw	0
   921  00F7D9  0010               	dw	16
   922  00F7DB  0000               	dw	0
   923  00F7DD  0010               	dw	16
   924  00F7DF  0000               	dw	0
   925  00F7E1  0000               	dw	0
   926  00F7E3  000F               	dw	15
   927  00F7E5  0000               	dw	0
   928  00F7E7  0000               	dw	0
   929  00F7E9  0000               	dw	0
   930  00F7EB  001C               	dw	28
   931  00F7ED  00F8               	dw	248
   932  00F7EF  0003               	dw	3
   933  00F7F1  0006               	dw	6
   934  00F7F3  0000               	dw	0
   935  00F7F5  0038               	dw	56
   936  00F7F7  0000               	dw	0
   937  00F7F9  00C0               	dw	192
   938  00F7FB  0001               	dw	1
   939  00F7FD  0000               	dw	0
   940  00F7FF  000E               	dw	14
   941  00F801  0000               	dw	0
   942  00F803  0010               	dw	16
   943  00F805  0000               	dw	0
   944  00F807  000E               	dw	14
   945  00F809  00C0               	dw	192
   946  00F80B  0001               	dw	1
   947  00F80D  0038               	dw	56
   948  00F80F  0000               	dw	0
   949  00F811  0006               	dw	6
   950  00F813  0000               	dw	0
   951  00F815  00F8               	dw	248
   952  00F817  0003               	dw	3
   953  00F819  0000               	dw	0
   954  00F81B  001C               	dw	28
   955  00F81D  0000               	dw	0
   956  00F81F  0000               	dw	0
   957  00F821  000B               	dw	11
   958  00F823  0000               	dw	0
   959  00F825  0000               	dw	0
   960  00F827  0000               	dw	0
   961  00F829  0000               	dw	0
   962  00F82B  00FE               	dw	254
   963  00F82D  001F               	dw	31
   964  00F82F  0008               	dw	8
   965  00F831  0000               	dw	0
   966  00F833  0030               	dw	48
   967  00F835  0000               	dw	0
   968  00F837  0040               	dw	64
   969  00F839  0000               	dw	0
   970  00F83B  0080               	dw	128
   971  00F83D  0000               	dw	0
   972  00F83F  0000               	dw	0
   973  00F841  0003               	dw	3
   974  00F843  0000               	dw	0
   975  00F845  0004               	dw	4
   976  00F847  00FE               	dw	254
   977  00F849  001F               	dw	31
   978  00F84B  0000               	dw	0
   979  00F84D  0000               	dw	0
   980  00F84F  000E               	dw	14
   981  00F851  0000               	dw	0
   982  00F853  0000               	dw	0
   983  00F855  00F0               	dw	240
   984  00F857  0003               	dw	3
   985  00F859  0008               	dw	8
   986  00F85B  0004               	dw	4
   987  00F85D  0004               	dw	4
   988  00F85F  0008               	dw	8
   989  00F861  0002               	dw	2
   990  00F863  0010               	dw	16
   991  00F865  0002               	dw	2
   992  00F867  0010               	dw	16
   993  00F869  0002               	dw	2
   994  00F86B  0010               	dw	16
   995  00F86D  0002               	dw	2
   996  00F86F  0010               	dw	16
   997  00F871  0002               	dw	2
   998  00F873  0010               	dw	16
   999  00F875  0002               	dw	2
  1000  00F877  0010               	dw	16
  1001  00F879  0004               	dw	4
  1002  00F87B  0008               	dw	8
  1003  00F87D  0008               	dw	8
  1004  00F87F  0004               	dw	4
  1005  00F881  00F0               	dw	240
  1006  00F883  0003               	dw	3
  1007  00F885  0000               	dw	0
  1008  00F887  0000               	dw	0
  1009  00F889  0009               	dw	9
  1010  00F88B  0000               	dw	0
  1011  00F88D  0000               	dw	0
  1012  00F88F  0000               	dw	0
  1013  00F891  0000               	dw	0
  1014  00F893  00FE               	dw	254
  1015  00F895  001F               	dw	31
  1016  00F897  0042               	dw	66
  1017  00F899  0000               	dw	0
  1018  00F89B  0042               	dw	66
  1019  00F89D  0000               	dw	0
  1020  00F89F  0042               	dw	66
  1021  00F8A1  0000               	dw	0
  1022  00F8A3  0024               	dw	36
  1023  00F8A5  0000               	dw	0
  1024  00F8A7  0018               	dw	24
  1025  00F8A9  0000               	dw	0
  1026  00F8AB  0000               	dw	0
  1027  00F8AD  0000               	dw	0
  1028  00F8AF  000E               	dw	14
  1029  00F8B1  0000               	dw	0
  1030  00F8B3  0000               	dw	0
  1031  00F8B5  00F0               	dw	240
  1032  00F8B7  0003               	dw	3
  1033  00F8B9  0008               	dw	8
  1034  00F8BB  0004               	dw	4
  1035  00F8BD  0004               	dw	4
  1036  00F8BF  0008               	dw	8
  1037  00F8C1  0002               	dw	2
  1038  00F8C3  0010               	dw	16
  1039  00F8C5  0002               	dw	2
  1040  00F8C7  0010               	dw	16
  1041  00F8C9  0002               	dw	2
  1042  00F8CB  0010               	dw	16
  1043  00F8CD  0002               	dw	2
  1044  00F8CF  0011               	dw	17
  1045  00F8D1  0002               	dw	2
  1046  00F8D3  0012               	dw	18
  1047  00F8D5  0002               	dw	2
  1048  00F8D7  000C               	dw	12
  1049  00F8D9  0004               	dw	4
  1050  00F8DB  0008               	dw	8
  1051  00F8DD  0008               	dw	8
  1052  00F8DF  0016               	dw	22
  1053  00F8E1  00F0               	dw	240
  1054  00F8E3  0021               	dw	33
  1055  00F8E5  0000               	dw	0
  1056  00F8E7  0000               	dw	0
  1057  00F8E9  000A               	dw	10
  1058  00F8EB  0000               	dw	0
  1059  00F8ED  0000               	dw	0
  1060  00F8EF  0000               	dw	0
  1061  00F8F1  0000               	dw	0
  1062  00F8F3  00FE               	dw	254
  1063  00F8F5  001F               	dw	31
  1064  00F8F7  0042               	dw	66
  1065  00F8F9  0000               	dw	0
  1066  00F8FB  00C2               	dw	194
  1067  00F8FD  0000               	dw	0
  1068  00F8FF  0042               	dw	66
  1069  00F901  0001               	dw	1
  1070  00F903  0042               	dw	66
  1071  00F905  0006               	dw	6
  1072  00F907  0024               	dw	36
  1073  00F909  0008               	dw	8
  1074  00F90B  0018               	dw	24
  1075  00F90D  0010               	dw	16
  1076  00F90F  0000               	dw	0
  1077  00F911  0000               	dw	0
  1078  00F913  0008               	dw	8
  1079  00F915  0000               	dw	0
  1080  00F917  0004               	dw	4
  1081  00F919  0018               	dw	24
  1082  00F91B  0008               	dw	8
  1083  00F91D  0024               	dw	36
  1084  00F91F  0010               	dw	16
  1085  00F921  0042               	dw	66
  1086  00F923  0010               	dw	16
  1087  00F925  0042               	dw	66
  1088  00F927  0010               	dw	16
  1089  00F929  0084               	dw	132
  1090  00F92B  0008               	dw	8
  1091  00F92D  0008               	dw	8
  1092  00F92F  0007               	dw	7
  1093  00F931  0000               	dw	0
  1094  00F933  0000               	dw	0
  1095  00F935  0008               	dw	8
  1096  00F937  0002               	dw	2
  1097  00F939  0000               	dw	0
  1098  00F93B  0002               	dw	2
  1099  00F93D  0000               	dw	0
  1100  00F93F  0002               	dw	2
  1101  00F941  0000               	dw	0
  1102  00F943  00FE               	dw	254
  1103  00F945  001F               	dw	31
  1104  00F947  0002               	dw	2
  1105  00F949  0000               	dw	0
  1106  00F94B  0002               	dw	2
  1107  00F94D  0000               	dw	0
  1108  00F94F  0002               	dw	2
  1109  00F951  0000               	dw	0
  1110  00F953  0000               	dw	0
  1111  00F955  0000               	dw	0
  1112  00F957  000A               	dw	10
  1113  00F959  0000               	dw	0
  1114  00F95B  0000               	dw	0
  1115  00F95D  0000               	dw	0
  1116  00F95F  0000               	dw	0
  1117  00F961  00FE               	dw	254
  1118  00F963  0007               	dw	7
  1119  00F965  0000               	dw	0
  1120  00F967  0008               	dw	8
  1121  00F969  0000               	dw	0
  1122  00F96B  0010               	dw	16
  1123  00F96D  0000               	dw	0
  1124  00F96F  0010               	dw	16
  1125  00F971  0000               	dw	0
  1126  00F973  0010               	dw	16
  1127  00F975  0000               	dw	0
  1128  00F977  0008               	dw	8
  1129  00F979  00FE               	dw	254
  1130  00F97B  0007               	dw	7
  1131  00F97D  0000               	dw	0
  1132  00F97F  0000               	dw	0
  1133  00F981  000C               	dw	12
  1134  00F983  0002               	dw	2
  1135  00F985  0000               	dw	0
  1136  00F987  001C               	dw	28
  1137  00F989  0000               	dw	0
  1138  00F98B  0060               	dw	96
  1139  00F98D  0000               	dw	0
  1140  00F98F  0080               	dw	128
  1141  00F991  0001               	dw	1
  1142  00F993  0000               	dw	0
  1143  00F995  000E               	dw	14
  1144  00F997  0000               	dw	0
  1145  00F999  0010               	dw	16
  1146  00F99B  0000               	dw	0
  1147  00F99D  000E               	dw	14
  1148  00F99F  0080               	dw	128
  1149  00F9A1  0001               	dw	1
  1150  00F9A3  0060               	dw	96
  1151  00F9A5  0000               	dw	0
  1152  00F9A7  001C               	dw	28
  1153  00F9A9  0000               	dw	0
  1154  00F9AB  0002               	dw	2
  1155  00F9AD  0000               	dw	0
  1156  00F9AF  0000               	dw	0
  1157  00F9B1  0000               	dw	0
  1158  00F9B3  000F               	dw	15
  1159  00F9B5  0000               	dw	0
  1160  00F9B7  0000               	dw	0
  1161  00F9B9  0006               	dw	6
  1162  00F9BB  0000               	dw	0
  1163  00F9BD  0078               	dw	120
  1164  00F9BF  0000               	dw	0
  1165  00F9C1  0080               	dw	128
  1166  00F9C3  0007               	dw	7
  1167  00F9C5  0000               	dw	0
  1168  00F9C7  0018               	dw	24
  1169  00F9C9  0080               	dw	128
  1170  00F9CB  0007               	dw	7
  1171  00F9CD  0078               	dw	120
  1172  00F9CF  0000               	dw	0
  1173  00F9D1  0006               	dw	6
  1174  00F9D3  0000               	dw	0
  1175  00F9D5  0078               	dw	120
  1176  00F9D7  0000               	dw	0
  1177  00F9D9  0080               	dw	128
  1178  00F9DB  0007               	dw	7
  1179  00F9DD  0000               	dw	0
  1180  00F9DF  0018               	dw	24
  1181  00F9E1  0080               	dw	128
  1182  00F9E3  0007               	dw	7
  1183  00F9E5  0078               	dw	120
  1184  00F9E7  0000               	dw	0
  1185  00F9E9  0006               	dw	6
  1186  00F9EB  0000               	dw	0
  1187  00F9ED  0000               	dw	0
  1188  00F9EF  0000               	dw	0
  1189  00F9F1  0009               	dw	9
  1190  00F9F3  0000               	dw	0
  1191  00F9F5  0000               	dw	0
  1192  00F9F7  0006               	dw	6
  1193  00F9F9  0018               	dw	24
  1194  00F9FB  0008               	dw	8
  1195  00F9FD  0004               	dw	4
  1196  00F9FF  0030               	dw	48
  1197  00FA01  0003               	dw	3
  1198  00FA03  00C0               	dw	192
  1199  00FA05  0000               	dw	0
  1200  00FA07  0030               	dw	48
  1201  00FA09  0003               	dw	3
  1202  00FA0B  0008               	dw	8
  1203  00FA0D  0004               	dw	4
  1204  00FA0F  0006               	dw	6
  1205  00FA11  0018               	dw	24
  1206  00FA13  0000               	dw	0
  1207  00FA15  0000               	dw	0
  1208  00FA17  000B               	dw	11
  1209  00FA19  0000               	dw	0
  1210  00FA1B  0000               	dw	0
  1211  00FA1D  0002               	dw	2
  1212  00FA1F  0000               	dw	0
  1213  00FA21  0004               	dw	4
  1214  00FA23  0000               	dw	0
  1215  00FA25  0018               	dw	24
  1216  00FA27  0000               	dw	0
  1217  00FA29  0060               	dw	96
  1218  00FA2B  0000               	dw	0
  1219  00FA2D  0080               	dw	128
  1220  00FA2F  001F               	dw	31
  1221  00FA31  0060               	dw	96
  1222  00FA33  0000               	dw	0
  1223  00FA35  0018               	dw	24
  1224  00FA37  0000               	dw	0
  1225  00FA39  0004               	dw	4
  1226  00FA3B  0000               	dw	0
  1227  00FA3D  0002               	dw	2
  1228  00FA3F  0000               	dw	0
  1229  00FA41  0000               	dw	0
  1230  00FA43  0000               	dw	0
  1231  00FA45  0008               	dw	8
  1232  00FA47  0002               	dw	2
  1233  00FA49  0010               	dw	16
  1234  00FA4B  0002               	dw	2
  1235  00FA4D  001C               	dw	28
  1236  00FA4F  0002               	dw	2
  1237  00FA51  0013               	dw	19
  1238  00FA53  00C2               	dw	194
  1239  00FA55  0010               	dw	16
  1240  00FA57  0032               	dw	50
  1241  00FA59  0010               	dw	16
  1242  00FA5B  000E               	dw	14
  1243  00FA5D  0010               	dw	16
  1244  00FA5F  0002               	dw	2
  1245  00FA61  0010               	dw	16
  1246  00FA63  0000               	dw	0
  1247  00FA65  0000               	dw	0
  1248  00FA67  0006               	dw	6
  1249  00FA69  0000               	dw	0
  1250  00FA6B  0000               	dw	0
  1251  00FA6D  0000               	dw	0
  1252  00FA6F  0000               	dw	0
  1253  00FA71  00FE               	dw	254
  1254  00FA73  00FF               	dw	255
  1255  00FA75  0002               	dw	2
  1256  00FA77  0080               	dw	128
  1257  00FA79  0002               	dw	2
  1258  00FA7B  0080               	dw	128
  1259  00FA7D  0000               	dw	0
  1260  00FA7F  0000               	dw	0
  1261  00FA81  000A               	dw	10
  1262  00FA83  0002               	dw	2
  1263  00FA85  0000               	dw	0
  1264  00FA87  000C               	dw	12
  1265  00FA89  0000               	dw	0
  1266  00FA8B  0010               	dw	16
  1267  00FA8D  0000               	dw	0
  1268  00FA8F  0060               	dw	96
  1269  00FA91  0000               	dw	0
  1270  00FA93  0080               	dw	128
  1271  00FA95  0001               	dw	1
  1272  00FA97  0000               	dw	0
  1273  00FA99  0006               	dw	6
  1274  00FA9B  0000               	dw	0
  1275  00FA9D  0008               	dw	8
  1276  00FA9F  0000               	dw	0
  1277  00FAA1  0030               	dw	48
  1278  00FAA3  0000               	dw	0
  1279  00FAA5  0040               	dw	64
  1280  00FAA7  0000               	dw	0
  1281  00FAA9  0000               	dw	0
  1282  00FAAB  0005               	dw	5
  1283  00FAAD  0000               	dw	0
  1284  00FAAF  0000               	dw	0
  1285  00FAB1  0002               	dw	2
  1286  00FAB3  0080               	dw	128
  1287  00FAB5  0002               	dw	2
  1288  00FAB7  0080               	dw	128
  1289  00FAB9  00FE               	dw	254
  1290  00FABB  00FF               	dw	255
  1291  00FABD  0000               	dw	0
  1292  00FABF  0000               	dw	0
  1293  00FAC1  000B               	dw	11
  1294  00FAC3  0000               	dw	0
  1295  00FAC5  0000               	dw	0
  1296  00FAC7  0000               	dw	0
  1297  00FAC9  0002               	dw	2
  1298  00FACB  0080               	dw	128
  1299  00FACD  0001               	dw	1
  1300  00FACF  0070               	dw	112
  1301  00FAD1  0000               	dw	0
  1302  00FAD3  000C               	dw	12
  1303  00FAD5  0000               	dw	0
  1304  00FAD7  0002               	dw	2
  1305  00FAD9  0000               	dw	0
  1306  00FADB  000C               	dw	12
  1307  00FADD  0000               	dw	0
  1308  00FADF  0070               	dw	112
  1309  00FAE1  0000               	dw	0
  1310  00FAE3  0080               	dw	128
  1311  00FAE5  0001               	dw	1
  1312  00FAE7  0000               	dw	0
  1313  00FAE9  0002               	dw	2
  1314  00FAEB  0000               	dw	0
  1315  00FAED  0000               	dw	0
  1316  00FAEF  0009               	dw	9
  1317  00FAF1  0000               	dw	0
  1318  00FAF3  0040               	dw	64
  1319  00FAF5  0000               	dw	0
  1320  00FAF7  0040               	dw	64
  1321  00FAF9  0000               	dw	0
  1322  00FAFB  0040               	dw	64
  1323  00FAFD  0000               	dw	0
  1324  00FAFF  0040               	dw	64
  1325  00FB01  0000               	dw	0
  1326  00FB03  0040               	dw	64
  1327  00FB05  0000               	dw	0
  1328  00FB07  0040               	dw	64
  1329  00FB09  0000               	dw	0
  1330  00FB0B  0040               	dw	64
  1331  00FB0D  0000               	dw	0
  1332  00FB0F  0040               	dw	64
  1333  00FB11  0000               	dw	0
  1334  00FB13  0000               	dw	0
  1335  00FB15  0005               	dw	5
  1336  00FB17  0000               	dw	0
  1337  00FB19  0000               	dw	0
  1338  00FB1B  0000               	dw	0
  1339  00FB1D  0000               	dw	0
  1340  00FB1F  0002               	dw	2
  1341  00FB21  0000               	dw	0
  1342  00FB23  0004               	dw	4
  1343  00FB25  0000               	dw	0
  1344  00FB27  0000               	dw	0
  1345  00FB29  0000               	dw	0
  1346  00FB2B  000B               	dw	11
  1347  00FB2D  0000               	dw	0
  1348  00FB2F  0000               	dw	0
  1349  00FB31  00C0               	dw	192
  1350  00FB33  0007               	dw	7
  1351  00FB35  0020               	dw	32
  1352  00FB37  0008               	dw	8
  1353  00FB39  0010               	dw	16
  1354  00FB3B  0010               	dw	16
  1355  00FB3D  0010               	dw	16
  1356  00FB3F  0010               	dw	16
  1357  00FB41  0010               	dw	16
  1358  00FB43  0010               	dw	16
  1359  00FB45  0010               	dw	16
  1360  00FB47  0010               	dw	16
  1361  00FB49  0010               	dw	16
  1362  00FB4B  0010               	dw	16
  1363  00FB4D  0020               	dw	32
  1364  00FB4F  0008               	dw	8
  1365  00FB51  00F0               	dw	240
  1366  00FB53  001F               	dw	31
  1367  00FB55  0000               	dw	0
  1368  00FB57  0000               	dw	0
  1369  00FB59  000B               	dw	11
  1370  00FB5B  0000               	dw	0
  1371  00FB5D  0000               	dw	0
  1372  00FB5F  00FE               	dw	254
  1373  00FB61  001F               	dw	31
  1374  00FB63  0020               	dw	32
  1375  00FB65  0008               	dw	8
  1376  00FB67  0010               	dw	16
  1377  00FB69  0010               	dw	16
  1378  00FB6B  0010               	dw	16
  1379  00FB6D  0010               	dw	16
  1380  00FB6F  0010               	dw	16
  1381  00FB71  0010               	dw	16
  1382  00FB73  0010               	dw	16
  1383  00FB75  0010               	dw	16
  1384  00FB77  0010               	dw	16
  1385  00FB79  0010               	dw	16
  1386  00FB7B  0020               	dw	32
  1387  00FB7D  0008               	dw	8
  1388  00FB7F  00C0               	dw	192
  1389  00FB81  0007               	dw	7
  1390  00FB83  0000               	dw	0
  1391  00FB85  0000               	dw	0
  1392  00FB87  000A               	dw	10
  1393  00FB89  0000               	dw	0
  1394  00FB8B  0000               	dw	0
  1395  00FB8D  00C0               	dw	192
  1396  00FB8F  0007               	dw	7
  1397  00FB91  0020               	dw	32
  1398  00FB93  0008               	dw	8
  1399  00FB95  0010               	dw	16
  1400  00FB97  0010               	dw	16
  1401  00FB99  0010               	dw	16
  1402  00FB9B  0010               	dw	16
  1403  00FB9D  0010               	dw	16
  1404  00FB9F  0010               	dw	16
  1405  00FBA1  0010               	dw	16
  1406  00FBA3  0010               	dw	16
  1407  00FBA5  0020               	dw	32
  1408  00FBA7  0008               	dw	8
  1409  00FBA9  0040               	dw	64
  1410  00FBAB  0004               	dw	4
  1411  00FBAD  0000               	dw	0
  1412  00FBAF  0000               	dw	0
  1413  00FBB1  000B               	dw	11
  1414  00FBB3  0000               	dw	0
  1415  00FBB5  0000               	dw	0
  1416  00FBB7  00C0               	dw	192
  1417  00FBB9  0007               	dw	7
  1418  00FBBB  0020               	dw	32
  1419  00FBBD  0008               	dw	8
  1420  00FBBF  0010               	dw	16
  1421  00FBC1  0010               	dw	16
  1422  00FBC3  0010               	dw	16
  1423  00FBC5  0010               	dw	16
  1424  00FBC7  0010               	dw	16
  1425  00FBC9  0010               	dw	16
  1426  00FBCB  0010               	dw	16
  1427  00FBCD  0010               	dw	16
  1428  00FBCF  0010               	dw	16
  1429  00FBD1  0010               	dw	16
  1430  00FBD3  0020               	dw	32
  1431  00FBD5  0008               	dw	8
  1432  00FBD7  00FE               	dw	254
  1433  00FBD9  001F               	dw	31
  1434  00FBDB  0000               	dw	0
  1435  00FBDD  0000               	dw	0
  1436  00FBDF  000A               	dw	10
  1437  00FBE1  0000               	dw	0
  1438  00FBE3  0000               	dw	0
  1439  00FBE5  00C0               	dw	192
  1440  00FBE7  0007               	dw	7
  1441  00FBE9  0020               	dw	32
  1442  00FBEB  0009               	dw	9
  1443  00FBED  0010               	dw	16
  1444  00FBEF  0011               	dw	17
  1445  00FBF1  0010               	dw	16
  1446  00FBF3  0011               	dw	17
  1447  00FBF5  0010               	dw	16
  1448  00FBF7  0011               	dw	17
  1449  00FBF9  0010               	dw	16
  1450  00FBFB  0011               	dw	17
  1451  00FBFD  0020               	dw	32
  1452  00FBFF  0009               	dw	9
  1453  00FC01  00C0               	dw	192
  1454  00FC03  0005               	dw	5
  1455  00FC05  0000               	dw	0
  1456  00FC07  0000               	dw	0
  1457  00FC09  0006               	dw	6
  1458  00FC0B  0000               	dw	0
  1459  00FC0D  0000               	dw	0
  1460  00FC0F  0010               	dw	16
  1461  00FC11  0000               	dw	0
  1462  00FC13  00FC               	dw	252
  1463  00FC15  001F               	dw	31
  1464  00FC17  0012               	dw	18
  1465  00FC19  0000               	dw	0
  1466  00FC1B  0012               	dw	18
  1467  00FC1D  0000               	dw	0
  1468  00FC1F  0000               	dw	0
  1469  00FC21  0000               	dw	0
  1470  00FC23  000B               	dw	11
  1471  00FC25  0000               	dw	0
  1472  00FC27  0000               	dw	0
  1473  00FC29  00C0               	dw	192
  1474  00FC2B  0027               	dw	39
  1475  00FC2D  0020               	dw	32
  1476  00FC2F  0048               	dw	72
  1477  00FC31  0010               	dw	16
  1478  00FC33  0090               	dw	144
  1479  00FC35  0010               	dw	16
  1480  00FC37  0090               	dw	144
  1481  00FC39  0010               	dw	16
  1482  00FC3B  0090               	dw	144
  1483  00FC3D  0010               	dw	16
  1484  00FC3F  0090               	dw	144
  1485  00FC41  0010               	dw	16
  1486  00FC43  0090               	dw	144
  1487  00FC45  0020               	dw	32
  1488  00FC47  0048               	dw	72
  1489  00FC49  00F0               	dw	240
  1490  00FC4B  003F               	dw	63
  1491  00FC4D  0000               	dw	0
  1492  00FC4F  0000               	dw	0
  1493  00FC51  000A               	dw	10
  1494  00FC53  0000               	dw	0
  1495  00FC55  0000               	dw	0
  1496  00FC57  00FE               	dw	254
  1497  00FC59  001F               	dw	31
  1498  00FC5B  0020               	dw	32
  1499  00FC5D  0000               	dw	0
  1500  00FC5F  0010               	dw	16
  1501  00FC61  0000               	dw	0
  1502  00FC63  0010               	dw	16
  1503  00FC65  0000               	dw	0
  1504  00FC67  0010               	dw	16
  1505  00FC69  0000               	dw	0
  1506  00FC6B  0010               	dw	16
  1507  00FC6D  0000               	dw	0
  1508  00FC6F  0020               	dw	32
  1509  00FC71  0000               	dw	0
  1510  00FC73  00C0               	dw	192
  1511  00FC75  001F               	dw	31
  1512  00FC77  0000               	dw	0
  1513  00FC79  0000               	dw	0
  1514  00FC7B  0003               	dw	3
  1515  00FC7D  0000               	dw	0
  1516  00FC7F  0000               	dw	0
  1517  00FC81  00F6               	dw	246
  1518  00FC83  001F               	dw	31
  1519  00FC85  0000               	dw	0
  1520  00FC87  0000               	dw	0
  1521  00FC89  0003               	dw	3
  1522  00FC8B  0000               	dw	0
  1523  00FC8D  0080               	dw	128
  1524  00FC8F  00F6               	dw	246
  1525  00FC91  007F               	dw	127
  1526  00FC93  0000               	dw	0
  1527  00FC95  0000               	dw	0
  1528  00FC97  0008               	dw	8
  1529  00FC99  0000               	dw	0
  1530  00FC9B  0000               	dw	0
  1531  00FC9D  00FE               	dw	254
  1532  00FC9F  001F               	dw	31
  1533  00FCA1  0000               	dw	0
  1534  00FCA3  0001               	dw	1
  1535  00FCA5  0080               	dw	128
  1536  00FCA7  0002               	dw	2
  1537  00FCA9  0040               	dw	64
  1538  00FCAB  0004               	dw	4
  1539  00FCAD  0020               	dw	32
  1540  00FCAF  0008               	dw	8
  1541  00FCB1  0010               	dw	16
  1542  00FCB3  0010               	dw	16
  1543  00FCB5  0000               	dw	0
  1544  00FCB7  0000               	dw	0
  1545  00FCB9  0003               	dw	3
  1546  00FCBB  0000               	dw	0
  1547  00FCBD  0000               	dw	0
  1548  00FCBF  00FE               	dw	254
  1549  00FCC1  001F               	dw	31
  1550  00FCC3  0000               	dw	0
  1551  00FCC5  0000               	dw	0
  1552  00FCC7  000F               	dw	15
  1553  00FCC9  0000               	dw	0
  1554  00FCCB  0000               	dw	0
  1555  00FCCD  00F0               	dw	240
  1556  00FCCF  001F               	dw	31
  1557  00FCD1  0020               	dw	32
  1558  00FCD3  0000               	dw	0
  1559  00FCD5  0010               	dw	16
  1560  00FCD7  0000               	dw	0
  1561  00FCD9  0010               	dw	16
  1562  00FCDB  0000               	dw	0
  1563  00FCDD  0010               	dw	16
  1564  00FCDF  0000               	dw	0
  1565  00FCE1  0020               	dw	32
  1566  00FCE3  0000               	dw	0
  1567  00FCE5  00C0               	dw	192
  1568  00FCE7  001F               	dw	31
  1569  00FCE9  0020               	dw	32
  1570  00FCEB  0000               	dw	0
  1571  00FCED  0010               	dw	16
  1572  00FCEF  0000               	dw	0
  1573  00FCF1  0010               	dw	16
  1574  00FCF3  0000               	dw	0
  1575  00FCF5  0010               	dw	16
  1576  00FCF7  0000               	dw	0
  1577  00FCF9  0020               	dw	32
  1578  00FCFB  0000               	dw	0
  1579  00FCFD  00C0               	dw	192
  1580  00FCFF  001F               	dw	31
  1581  00FD01  0000               	dw	0
  1582  00FD03  0000               	dw	0
  1583  00FD05  000A               	dw	10
  1584  00FD07  0000               	dw	0
  1585  00FD09  0000               	dw	0
  1586  00FD0B  00F0               	dw	240
  1587  00FD0D  001F               	dw	31
  1588  00FD0F  0020               	dw	32
  1589  00FD11  0000               	dw	0
  1590  00FD13  0010               	dw	16
  1591  00FD15  0000               	dw	0
  1592  00FD17  0010               	dw	16
  1593  00FD19  0000               	dw	0
  1594  00FD1B  0010               	dw	16
  1595  00FD1D  0000               	dw	0
  1596  00FD1F  0010               	dw	16
  1597  00FD21  0000               	dw	0
  1598  00FD23  0020               	dw	32
  1599  00FD25  0000               	dw	0
  1600  00FD27  00C0               	dw	192
  1601  00FD29  001F               	dw	31
  1602  00FD2B  0000               	dw	0
  1603  00FD2D  0000               	dw	0
  1604  00FD2F  000A               	dw	10
  1605  00FD31  0000               	dw	0
  1606  00FD33  0000               	dw	0
  1607  00FD35  00C0               	dw	192
  1608  00FD37  0007               	dw	7
  1609  00FD39  0020               	dw	32
  1610  00FD3B  0008               	dw	8
  1611  00FD3D  0010               	dw	16
  1612  00FD3F  0010               	dw	16
  1613  00FD41  0010               	dw	16
  1614  00FD43  0010               	dw	16
  1615  00FD45  0010               	dw	16
  1616  00FD47  0010               	dw	16
  1617  00FD49  0010               	dw	16
  1618  00FD4B  0010               	dw	16
  1619  00FD4D  0020               	dw	32
  1620  00FD4F  0008               	dw	8
  1621  00FD51  00C0               	dw	192
  1622  00FD53  0007               	dw	7
  1623  00FD55  0000               	dw	0
  1624  00FD57  0000               	dw	0
  1625  00FD59  000B               	dw	11
  1626  00FD5B  0000               	dw	0
  1627  00FD5D  0000               	dw	0
  1628  00FD5F  00F0               	dw	240
  1629  00FD61  00FF               	dw	255
  1630  00FD63  0020               	dw	32
  1631  00FD65  0008               	dw	8
  1632  00FD67  0010               	dw	16
  1633  00FD69  0010               	dw	16
  1634  00FD6B  0010               	dw	16
  1635  00FD6D  0010               	dw	16
  1636  00FD6F  0010               	dw	16
  1637  00FD71  0010               	dw	16
  1638  00FD73  0010               	dw	16
  1639  00FD75  0010               	dw	16
  1640  00FD77  0010               	dw	16
  1641  00FD79  0010               	dw	16
  1642  00FD7B  0020               	dw	32
  1643  00FD7D  0008               	dw	8
  1644  00FD7F  00C0               	dw	192
  1645  00FD81  0007               	dw	7
  1646  00FD83  0000               	dw	0
  1647  00FD85  0000               	dw	0
  1648  00FD87  000B               	dw	11
  1649  00FD89  0000               	dw	0
  1650  00FD8B  0000               	dw	0
  1651  00FD8D  00C0               	dw	192
  1652  00FD8F  0007               	dw	7
  1653  00FD91  0020               	dw	32
  1654  00FD93  0008               	dw	8
  1655  00FD95  0010               	dw	16
  1656  00FD97  0010               	dw	16
  1657  00FD99  0010               	dw	16
  1658  00FD9B  0010               	dw	16
  1659  00FD9D  0010               	dw	16
  1660  00FD9F  0010               	dw	16
  1661  00FDA1  0010               	dw	16
  1662  00FDA3  0010               	dw	16
  1663  00FDA5  0010               	dw	16
  1664  00FDA7  0010               	dw	16
  1665  00FDA9  0020               	dw	32
  1666  00FDAB  0008               	dw	8
  1667  00FDAD  00F0               	dw	240
  1668  00FDAF  00FF               	dw	255
  1669  00FDB1  0000               	dw	0
  1670  00FDB3  0000               	dw	0
  1671  00FDB5  0006               	dw	6
  1672  00FDB7  0000               	dw	0
  1673  00FDB9  0000               	dw	0
  1674  00FDBB  00F0               	dw	240
  1675  00FDBD  001F               	dw	31
  1676  00FDBF  0020               	dw	32
  1677  00FDC1  0000               	dw	0
  1678  00FDC3  0010               	dw	16
  1679  00FDC5  0000               	dw	0
  1680  00FDC7  0010               	dw	16
  1681  00FDC9  0000               	dw	0
  1682  00FDCB  0000               	dw	0
  1683  00FDCD  0000               	dw	0
  1684  00FDCF  0006               	dw	6
  1685  00FDD1  0060               	dw	96
  1686  00FDD3  0008               	dw	8
  1687  00FDD5  0090               	dw	144
  1688  00FDD7  0010               	dw	16
  1689  00FDD9  0010               	dw	16
  1690  00FDDB  0011               	dw	17
  1691  00FDDD  0010               	dw	16
  1692  00FDDF  0011               	dw	17
  1693  00FDE1  0020               	dw	32
  1694  00FDE3  000E               	dw	14
  1695  00FDE5  0000               	dw	0
  1696  00FDE7  0000               	dw	0
  1697  00FDE9  0007               	dw	7
  1698  00FDEB  0000               	dw	0
  1699  00FDED  0000               	dw	0
  1700  00FDEF  0010               	dw	16
  1701  00FDF1  0000               	dw	0
  1702  00FDF3  0010               	dw	16
  1703  00FDF5  0000               	dw	0
  1704  00FDF7  00FE               	dw	254
  1705  00FDF9  001F               	dw	31
  1706  00FDFB  0010               	dw	16
  1707  00FDFD  0000               	dw	0
  1708  00FDFF  0010               	dw	16
  1709  00FE01  0000               	dw	0
  1710  00FE03  0000               	dw	0
  1711  00FE05  0000               	dw	0
  1712  00FE07  000A               	dw	10
  1713  00FE09  0000               	dw	0
  1714  00FE0B  0000               	dw	0
  1715  00FE0D  00F0               	dw	240
  1716  00FE0F  0007               	dw	7
  1717  00FE11  0000               	dw	0
  1718  00FE13  0008               	dw	8
  1719  00FE15  0000               	dw	0
  1720  00FE17  0010               	dw	16
  1721  00FE19  0000               	dw	0
  1722  00FE1B  0010               	dw	16
  1723  00FE1D  0000               	dw	0
  1724  00FE1F  0010               	dw	16
  1725  00FE21  0000               	dw	0
  1726  00FE23  0010               	dw	16
  1727  00FE25  0000               	dw	0
  1728  00FE27  0008               	dw	8
  1729  00FE29  00F0               	dw	240
  1730  00FE2B  0007               	dw	7
  1731  00FE2D  0000               	dw	0
  1732  00FE2F  0000               	dw	0
  1733  00FE31  000A               	dw	10
  1734  00FE33  0010               	dw	16
  1735  00FE35  0000               	dw	0
  1736  00FE37  0060               	dw	96
  1737  00FE39  0000               	dw	0
  1738  00FE3B  0080               	dw	128
  1739  00FE3D  0003               	dw	3
  1740  00FE3F  0000               	dw	0
  1741  00FE41  000C               	dw	12
  1742  00FE43  0000               	dw	0
  1743  00FE45  0010               	dw	16
  1744  00FE47  0000               	dw	0
  1745  00FE49  000C               	dw	12
  1746  00FE4B  0080               	dw	128
  1747  00FE4D  0003               	dw	3
  1748  00FE4F  0060               	dw	96
  1749  00FE51  0000               	dw	0
  1750  00FE53  0010               	dw	16
  1751  00FE55  0000               	dw	0
  1752  00FE57  0000               	dw	0
  1753  00FE59  0000               	dw	0
  1754  00FE5B  000E               	dw	14
  1755  00FE5D  0010               	dw	16
  1756  00FE5F  0000               	dw	0
  1757  00FE61  00E0               	dw	224
  1758  00FE63  0000               	dw	0
  1759  00FE65  0000               	dw	0
  1760  00FE67  0007               	dw	7
  1761  00FE69  0000               	dw	0
  1762  00FE6B  0018               	dw	24
  1763  00FE6D  0000               	dw	0
  1764  00FE6F  0007               	dw	7
  1765  00FE71  00E0               	dw	224
  1766  00FE73  0000               	dw	0
  1767  00FE75  0010               	dw	16
  1768  00FE77  0000               	dw	0
  1769  00FE79  00E0               	dw	224
  1770  00FE7B  0000               	dw	0
  1771  00FE7D  0000               	dw	0
  1772  00FE7F  0007               	dw	7
  1773  00FE81  0000               	dw	0
  1774  00FE83  0018               	dw	24
  1775  00FE85  0000               	dw	0
  1776  00FE87  0007               	dw	7
  1777  00FE89  00E0               	dw	224
  1778  00FE8B  0000               	dw	0
  1779  00FE8D  0010               	dw	16
  1780  00FE8F  0000               	dw	0
  1781  00FE91  0000               	dw	0
  1782  00FE93  0000               	dw	0
  1783  00FE95  0009               	dw	9
  1784  00FE97  0010               	dw	16
  1785  00FE99  0010               	dw	16
  1786  00FE9B  0020               	dw	32
  1787  00FE9D  0008               	dw	8
  1788  00FE9F  0040               	dw	64
  1789  00FEA1  0004               	dw	4
  1790  00FEA3  0080               	dw	128
  1791  00FEA5  0003               	dw	3
  1792  00FEA7  0080               	dw	128
  1793  00FEA9  0003               	dw	3
  1794  00FEAB  0040               	dw	64
  1795  00FEAD  0004               	dw	4
  1796  00FEAF  0020               	dw	32
  1797  00FEB1  0008               	dw	8
  1798  00FEB3  0010               	dw	16
  1799  00FEB5  0010               	dw	16
  1800  00FEB7  0000               	dw	0
  1801  00FEB9  0000               	dw	0
  1802  00FEBB  0009               	dw	9
  1803  00FEBD  0010               	dw	16
  1804  00FEBF  0000               	dw	0
  1805  00FEC1  00E0               	dw	224
  1806  00FEC3  0000               	dw	0
  1807  00FEC5  0000               	dw	0
  1808  00FEC7  0083               	dw	131
  1809  00FEC9  0000               	dw	0
  1810  00FECB  007C               	dw	124
  1811  00FECD  0000               	dw	0
  1812  00FECF  000C               	dw	12
  1813  00FED1  0000               	dw	0
  1814  00FED3  0003               	dw	3
  1815  00FED5  00E0               	dw	224
  1816  00FED7  0000               	dw	0
  1817  00FED9  0010               	dw	16
  1818  00FEDB  0000               	dw	0
  1819  00FEDD  0000               	dw	0
  1820  00FEDF  0000               	dw	0
  1821  00FEE1  0008               	dw	8
  1822  00FEE3  0010               	dw	16
  1823  00FEE5  0010               	dw	16
  1824  00FEE7  0010               	dw	16
  1825  00FEE9  0018               	dw	24
  1826  00FEEB  0010               	dw	16
  1827  00FEED  0016               	dw	22
  1828  00FEEF  0010               	dw	16
  1829  00FEF1  0011               	dw	17
  1830  00FEF3  00D0               	dw	208
  1831  00FEF5  0010               	dw	16
  1832  00FEF7  0030               	dw	48
  1833  00FEF9  0010               	dw	16
  1834  00FEFB  0010               	dw	16
  1835  00FEFD  0010               	dw	16
  1836  00FEFF  0000               	dw	0
  1837  00FF01  0000               	dw	0
  1838  00FF03  0007               	dw	7
  1839  00FF05  0000               	dw	0
  1840  00FF07  0000               	dw	0
  1841  00FF09  0000               	dw	0
  1842  00FF0B  0001               	dw	1
  1843  00FF0D  0080               	dw	128
  1844  00FF0F  0002               	dw	2
  1845  00FF11  00FC               	dw	252
  1846  00FF13  007E               	dw	126
  1847  00FF15  0002               	dw	2
  1848  00FF17  0080               	dw	128
  1849  00FF19  0002               	dw	2
  1850  00FF1B  0080               	dw	128
  1851  00FF1D  0000               	dw	0
  1852  00FF1F  0000               	dw	0
  1853  00FF21  0007               	dw	7
  1854  00FF23  0000               	dw	0
  1855  00FF25  0000               	dw	0
  1856  00FF27  0000               	dw	0
  1857  00FF29  0000               	dw	0
  1858  00FF2B  0000               	dw	0
  1859  00FF2D  0000               	dw	0
  1860  00FF2F  0000               	dw	0
  1861  00FF31  0000               	dw	0
  1862  00FF33  0000               	dw	0
  1863  00FF35  0000               	dw	0
  1864  00FF37  00FE               	dw	254
  1865  00FF39  00FF               	dw	255
  1866  00FF3B  0000               	dw	0
  1867  00FF3D  0000               	dw	0
  1868  00FF3F  0006               	dw	6
  1869  00FF41  0002               	dw	2
  1870  00FF43  0080               	dw	128
  1871  00FF45  0002               	dw	2
  1872  00FF47  0080               	dw	128
  1873  00FF49  00FC               	dw	252
  1874  00FF4B  007E               	dw	126
  1875  00FF4D  0080               	dw	128
  1876  00FF4F  0002               	dw	2
  1877  00FF51  0000               	dw	0
  1878  00FF53  0001               	dw	1
  1879  00FF55  0000               	dw	0
  1880  00FF57  0000               	dw	0
  1881  00FF59  000A               	dw	10
  1882  00FF5B  0000               	dw	0
  1883  00FF5D  0000               	dw	0
  1884  00FF5F  0080               	dw	128
  1885  00FF61  0000               	dw	0
  1886  00FF63  0040               	dw	64
  1887  00FF65  0000               	dw	0
  1888  00FF67  0040               	dw	64
  1889  00FF69  0000               	dw	0
  1890  00FF6B  0040               	dw	64
  1891  00FF6D  0000               	dw	0
  1892  00FF6F  0080               	dw	128
  1893  00FF71  0000               	dw	0
  1894  00FF73  0080               	dw	128
  1895  00FF75  0000               	dw	0
  1896  00FF77  0080               	dw	128
  1897  00FF79  0000               	dw	0
  1898  00FF7B  0040               	dw	64
  1899  00FF7D  0000               	dw	0
  1900  00FF7F  0000               	dw	0
  1901  00FF81  0000               	dw	0
  1902  00FF83  0005               	dw	5
  1903  00FF85  00FF               	dw	255
  1904  00FF87  000F               	dw	15
  1905  00FF89  0001               	dw	1
  1906  00FF8B  0008               	dw	8
  1907  00FF8D  0001               	dw	1
  1908  00FF8F  0008               	dw	8
  1909  00FF91  00FF               	dw	255
  1910  00FF93  000F               	dw	15
  1911  00FF95  0000               	dw	0
  1912  00FF97  0000               	dw	0
  1913  00FF99                     __end_of_font:
  1914                           	opt callstack 0
  1915  00FF99                     _spi_configuration:
  1916                           	opt callstack 0
  1917  00FF99  00                 	db	0
  1918  00FF9A  40                 	db	64
  1919  00FF9B  01                 	db	1
  1920  00FF9C  00                 	db	0
  1921  00FF9D                     __end_of_spi_configuration:
  1922                           	opt callstack 0
  1923  00FF9D                     STR_2:
  1924  00FF9D  54                 	db	84	;'T'
  1925  00FF9E  65                 	db	101	;'e'
  1926  00FF9F  6D                 	db	109	;'m'
  1927  00FFA0  70                 	db	112	;'p'
  1928  00FFA1  3D                 	db	61	;'='
  1929  00FFA2  25                 	db	37
  1930  00FFA3  2E                 	db	46
  1931  00FFA4  66                 	db	102	;'f'
  1932  00FFA5  20                 	db	32
  1933  00FFA6  43                 	db	67	;'C'
  1934  00FFA7  20                 	db	32
  1935  00FFA8  20                 	db	32
  1936  00FFA9  20                 	db	32
  1937  00FFAA  20                 	db	32
  1938  00FFAB  20                 	db	32
  1939  00FFAC  20                 	db	32
  1940  00FFAD  00                 	db	0
  1941  00FFAE                     STR_1:
  1942  00FFAE  48                 	db	72	;'H'
  1943  00FFAF  45                 	db	69	;'E'
  1944  00FFB0  4C                 	db	76	;'L'
  1945  00FFB1  4C                 	db	76	;'L'
  1946  00FFB2  4F                 	db	79	;'O'
  1947  00FFB3  20                 	db	32
  1948  00FFB4  57                 	db	87	;'W'
  1949  00FFB5  4F                 	db	79	;'O'
  1950  00FFB6  52                 	db	82	;'R'
  1951  00FFB7  4C                 	db	76	;'L'
  1952  00FFB8  44                 	db	68	;'D'
  1953  00FFB9  00                 	db	0
  1954  00FFBA                     STR_3:
  1955  00FFBA  49                 	db	73	;'I'
  1956  00FFBB  4E                 	db	78	;'N'
  1957  00FFBC  46                 	db	70	;'F'
  1958  00FFBD  00                 	db	0
  1959  00FFBE                     STR_7:
  1960  00FFBE  4E                 	db	78	;'N'
  1961  00FFBF  41                 	db	65	;'A'
  1962  00FFC0  4E                 	db	78	;'N'
  1963  00FFC1  00                 	db	0
  1964  00FFC2                     STR_92:
  1965  00FFC2  68                 	db	104	;'h'
  1966  00FFC3  68                 	db	104	;'h'
  1967  00FFC4  58                 	db	88	;'X'
  1968  00FFC5  00                 	db	0
  1969  00FFC6                     STR_11:
  1970  00FFC6  68                 	db	104	;'h'
  1971  00FFC7  68                 	db	104	;'h'
  1972  00FFC8  64                 	db	100	;'d'
  1973  00FFC9  00                 	db	0
  1974  00FFCA                     STR_4:
  1975  00FFCA  69                 	db	105	;'i'
  1976  00FFCB  6E                 	db	110	;'n'
  1977  00FFCC  66                 	db	102	;'f'
  1978  00FFCD  00                 	db	0
  1979  00FFCE                     STR_15:
  1980  00FFCE  68                 	db	104	;'h'
  1981  00FFCF  68                 	db	104	;'h'
  1982  00FFD0  69                 	db	105	;'i'
  1983  00FFD1  00                 	db	0
  1984  00FFD2                     STR_8:
  1985  00FFD2  6E                 	db	110	;'n'
  1986  00FFD3  61                 	db	97	;'a'
  1987  00FFD4  6E                 	db	110	;'n'
  1988  00FFD5  00                 	db	0
  1989  00FFD6                     STR_58:
  1990  00FFD6  68                 	db	104	;'h'
  1991  00FFD7  68                 	db	104	;'h'
  1992  00FFD8  6E                 	db	110	;'n'
  1993  00FFD9  00                 	db	0
  1994  00FFDA                     STR_43:
  1995  00FFDA  68                 	db	104	;'h'
  1996  00FFDB  68                 	db	104	;'h'
  1997  00FFDC  6F                 	db	111	;'o'
  1998  00FFDD  00                 	db	0
  1999  00FFDE                     STR_73:
  2000  00FFDE  68                 	db	104	;'h'
  2001  00FFDF  68                 	db	104	;'h'
  2002  00FFE0  75                 	db	117	;'u'
  2003  00FFE1  00                 	db	0
  2004  00FFE2                     STR_88:
  2005  00FFE2  68                 	db	104	;'h'
  2006  00FFE3  68                 	db	104	;'h'
  2007  00FFE4  78                 	db	120	;'x'
  2008  00FFE5  00                 	db	0
  2009  00FFE6                     STR_110:
  2010  00FFE6  7A                 	db	122	;'z'
  2011  00FFE7  58                 	db	88	;'X'
  2012  00FFE8  00                 	db	0
  2013  00FFE9                     STR_29:
  2014  00FFE9  7A                 	db	122	;'z'
  2015  00FFEA  64                 	db	100	;'d'
  2016  00FFEB  00                 	db	0
  2017  00FFEC                     STR_38:
  2018  00FFEC  6C                 	db	108	;'l'
  2019  00FFED  66                 	db	102	;'f'
  2020  00FFEE  00                 	db	0
  2021  00FFEF                     STR_33:
  2022  00FFEF  7A                 	db	122	;'z'
  2023  00FFF0  69                 	db	105	;'i'
  2024  00FFF1  00                 	db	0
  2025  00FFF2                     STR_68:
  2026  00FFF2  7A                 	db	122	;'z'
  2027  00FFF3  6E                 	db	110	;'n'
  2028  00FFF4  00                 	db	0
  2029  00FFF5                     STR_53:
  2030  00FFF5  7A                 	db	122	;'z'
  2031  00FFF6  6F                 	db	111	;'o'
  2032  00FFF7  00                 	db	0
  2033  00FFF8                     STR_83:
  2034  00FFF8  7A                 	db	122	;'z'
  2035  00FFF9  75                 	db	117	;'u'
  2036  00FFFA  00                 	db	0
  2037  00FFFB                     STR_106:
  2038  00FFFB  7A                 	db	122	;'z'
  2039  00FFFC  78                 	db	120	;'x'
  2040  00FFFD  00                 	db	0
  2041  0000                     
  2042                           ; #config settings
  2043  00FFFE  00                 	db	0	; dummy byte at the end
  2044  0000                     
  2045                           	psect	nvBANK0
  2046  0000FC                     __pnvBANK0:
  2047                           	opt callstack 0
  2048  0000FC                     _timer1ReloadVal:
  2049                           	opt callstack 0
  2050  0000FC                     	ds	2
  2051  0000FE                     _IOCB4_InterruptHandler:
  2052                           	opt callstack 0
  2053  0000FE                     	ds	2
  2054  0000                     _IOCBbits	set	3930
  2055  0000                     _WPUB	set	3931
  2056  0000                     _ANCON1	set	3932
  2057  0000                     _ANCON0	set	3933
  2058  0000                     _LATEbits	set	3981
  2059  0000                     _SSPSTATbits	set	4039
  2060  0000                     _LATAbits	set	3977
  2061  0000                     _PORTBbits	set	3969
  2062  0000                     _T1GCONbits	set	4010
  2063  0000                     _T1CONbits	set	4045
  2064  0000                     _T1CON	set	4045
  2065  0000                     _TMR1L	set	4046
  2066  0000                     _TMR1H	set	4047
  2067  0000                     _T1GCON	set	4010
  2068  0000                     _ADCON0bits	set	4034
  2069  0000                     _ADRESL	set	4035
  2070  0000                     _ADRESH	set	4036
  2071  0000                     _ADCON2	set	4032
  2072  0000                     _ADCON1	set	4033
  2073  0000                     _ADCON0	set	4034
  2074  0000                     _PIR1bits	set	3998
  2075  0000                     _SSPBUF	set	4041
  2076  0000                     _SSPCON2	set	4037
  2077  0000                     _SSPCON1bits	set	4038
  2078  0000                     _TRISCbits	set	3988
  2079  0000                     _SSPADD	set	4040
  2080  0000                     _SSPCON1	set	4038
  2081  0000                     _SSPSTAT	set	4039
  2082  0000                     _INTCON2bits	set	4081
  2083  0000                     _TRISD	set	3989
  2084  0000                     _TRISC	set	3988
  2085  0000                     _TRISB	set	3987
  2086  0000                     _TRISA	set	3986
  2087  0000                     _TRISE	set	3990
  2088  0000                     _LATC	set	3979
  2089  0000                     _LATB	set	3978
  2090  0000                     _LATA	set	3977
  2091  0000                     _LATD	set	3980
  2092  0000                     _LATE	set	3981
  2093  0000                     _INTCONbits	set	4082
  2094  0000                     _RCONbits	set	4048
  2095  0000                     _REFOCON	set	3994
  2096  0000                     _OSCTUNE	set	3995
  2097  0000                     _OSCCON2	set	4050
  2098  0000                     _OSCCON	set	4051
  2099                           
  2100                           	psect	cinit
  2101  005756                     __pcinit:
  2102                           	opt callstack 0
  2103  005756                     start_initialization:
  2104                           	opt callstack 0
  2105  005756                     __initialization:
  2106                           	opt callstack 0
  2107                           
  2108                           ; Initialize objects allocated to BANK1 (7 bytes)
  2109                           ; load TBLPTR registers with __pidataBANK1
  2110  005756  0E18               	movlw	low __pidataBANK1
  2111  005758  6EF6               	movwf	tblptrl,c
  2112  00575A  0E5C               	movlw	high __pidataBANK1
  2113  00575C  6EF7               	movwf	tblptrh,c
  2114  00575E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2115  005760  6EF8               	movwf	tblptru,c
  2116  005762  EE01  F0B4         	lfsr	0,__pdataBANK1
  2117  005766  EE10 F007          	lfsr	1,7
  2118  00576A                     copy_data0:
  2119  00576A  0009               	tblrd		*+
  2120  00576C  CFF5 FFEE          	movff	tablat,postinc0
  2121  005770  50E5               	movf	postdec1,w,c
  2122  005772  50E1               	movf	fsr1l,w,c
  2123  005774  E1FA               	bnz	copy_data0
  2124                           
  2125                           ; Clear objects allocated to BANK1 (180 bytes)
  2126  005776  EE01  F000         	lfsr	0,__pbssBANK1
  2127  00577A  0EB4               	movlw	180
  2128  00577C                     clear_0:
  2129  00577C  6AEE               	clrf	postinc0,c
  2130  00577E  06E8               	decf	wreg,f,c
  2131  005780  E1FD               	bnz	clear_0
  2132                           
  2133                           ; Clear objects allocated to BANK0 (32 bytes)
  2134  005782  EE00  F0DC         	lfsr	0,__pbssBANK0
  2135  005786  0E20               	movlw	32
  2136  005788                     clear_1:
  2137  005788  6AEE               	clrf	postinc0,c
  2138  00578A  06E8               	decf	wreg,f,c
  2139  00578C  E1FD               	bnz	clear_1
  2140                           
  2141                           ; Clear objects allocated to COMRAM (2 bytes)
  2142  00578E  6A59               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2143  005790  6A58               	clrf	__pbssCOMRAM& (0+255),c
  2144  005792                     end_of_initialization:
  2145                           	opt callstack 0
  2146  005792                     __end_of__initialization:
  2147                           	opt callstack 0
  2148  005792  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2149  005794  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2150  005796  0100               	movlb	0
  2151  005798  EFF1  F022         	goto	_main	;jump to C main() function
  2152                           
  2153                           	psect	bssCOMRAM
  2154  000058                     __pbssCOMRAM:
  2155                           	opt callstack 0
  2156  000058                     _prec:
  2157                           	opt callstack 0
  2158  000058                     	ds	2
  2159                           
  2160                           	psect	bssBANK0
  2161  0000DC                     __pbssBANK0:
  2162                           	opt callstack 0
  2163  0000DC                     floorf@F524:
  2164                           	opt callstack 0
  2165  0000DC                     	ds	4
  2166  0000E0                     ___fpclassifyf@F463:
  2167                           	opt callstack 0
  2168  0000E0                     	ds	4
  2169  0000E4                     _temp:
  2170                           	opt callstack 0
  2171  0000E4                     	ds	4
  2172  0000E8                     _tensao_in:
  2173                           	opt callstack 0
  2174  0000E8                     	ds	4
  2175  0000EC                     _errno:
  2176                           	opt callstack 0
  2177  0000EC                     	ds	2
  2178  0000EE                     _nout:
  2179                           	opt callstack 0
  2180  0000EE                     	ds	2
  2181  0000F0                     _width:
  2182                           	opt callstack 0
  2183  0000F0                     	ds	2
  2184  0000F2                     _flags:
  2185                           	opt callstack 0
  2186  0000F2                     	ds	2
  2187  0000F4                     _global_bg_color:
  2188                           	opt callstack 0
  2189  0000F4                     	ds	2
  2190  0000F6                     _botao:
  2191                           	opt callstack 0
  2192  0000F6                     	ds	2
  2193  0000F8                     _codigo_digit:
  2194                           	opt callstack 0
  2195  0000F8                     	ds	2
  2196  0000FA                     _ADC_InterruptHandler:
  2197                           	opt callstack 0
  2198  0000FA                     	ds	2
  2199                           
  2200                           	psect	bssBANK1
  2201  000100                     __pbssBANK1:
  2202                           	opt callstack 0
  2203  000100                     _string_temp:
  2204                           	opt callstack 0
  2205  000100                     	ds	100
  2206  000164                     _dbuf:
  2207                           	opt callstack 0
  2208  000164                     	ds	80
  2209                           
  2210                           	psect	dataBANK1
  2211  0001B4                     __pdataBANK1:
  2212                           	opt callstack 0
  2213  0001B4                     stoa@F1174:
  2214                           	opt callstack 0
  2215  0001B4                     	ds	7
  2216                           
  2217                           	psect	cstackBANK1
  2218  0001BB                     __pcstackBANK1:
  2219                           	opt callstack 0
  2220  0001BB                     	ds	2
  2221  0001BD                     snprintf@ap:
  2222                           	opt callstack 0
  2223                           
  2224                           ; 2 bytes @ 0x2
  2225  0001BD                     	ds	2
  2226                           
  2227                           	psect	cstackBANK0
  2228  000060                     __pcstackBANK0:
  2229                           	opt callstack 0
  2230  000060                     efgtoa@ou:
  2231                           	opt callstack 0
  2232                           
  2233                           ; 4 bytes @ 0x0
  2234  000060                     	ds	4
  2235  000064                     _efgtoa$1313:
  2236                           	opt callstack 0
  2237                           
  2238                           ; 2 bytes @ 0x4
  2239  000064                     	ds	2
  2240  000066                     _efgtoa$1314:
  2241                           	opt callstack 0
  2242                           
  2243                           ; 2 bytes @ 0x6
  2244  000066                     	ds	2
  2245  000068                     _efgtoa$1318:
  2246                           	opt callstack 0
  2247                           
  2248                           ; 2 bytes @ 0x8
  2249  000068                     	ds	2
  2250  00006A                     _efgtoa$1322:
  2251                           	opt callstack 0
  2252                           
  2253                           ; 2 bytes @ 0xA
  2254  00006A                     	ds	2
  2255  00006C                     _efgtoa$1323:
  2256                           	opt callstack 0
  2257                           
  2258                           ; 2 bytes @ 0xC
  2259  00006C                     	ds	2
  2260  00006E                     _efgtoa$1324:
  2261                           	opt callstack 0
  2262                           
  2263                           ; 2 bytes @ 0xE
  2264  00006E                     	ds	2
  2265  000070                     efgtoa@t:
  2266                           	opt callstack 0
  2267                           
  2268                           ; 2 bytes @ 0x10
  2269  000070                     	ds	2
  2270  000072                     efgtoa@pp:
  2271                           	opt callstack 0
  2272                           
  2273                           ; 2 bytes @ 0x12
  2274  000072                     	ds	2
  2275  000074                     efgtoa@m:
  2276                           	opt callstack 0
  2277                           
  2278                           ; 2 bytes @ 0x14
  2279  000074                     	ds	2
  2280  000076                     efgtoa@ne:
  2281                           	opt callstack 0
  2282                           
  2283                           ; 2 bytes @ 0x16
  2284  000076                     	ds	2
  2285  000078                     efgtoa@d:
  2286                           	opt callstack 0
  2287                           
  2288                           ; 2 bytes @ 0x18
  2289  000078                     	ds	2
  2290  00007A                     efgtoa@sign:
  2291                           	opt callstack 0
  2292                           
  2293                           ; 2 bytes @ 0x1A
  2294  00007A                     	ds	2
  2295  00007C                     efgtoa@p:
  2296                           	opt callstack 0
  2297                           
  2298                           ; 2 bytes @ 0x1C
  2299  00007C                     	ds	2
  2300  00007E                     efgtoa@nmode:
  2301                           	opt callstack 0
  2302                           
  2303                           ; 1 bytes @ 0x1E
  2304  00007E                     	ds	1
  2305  00007F                     efgtoa@w:
  2306                           	opt callstack 0
  2307                           
  2308                           ; 2 bytes @ 0x1F
  2309  00007F                     	ds	2
  2310  000081                     efgtoa@mode:
  2311                           	opt callstack 0
  2312                           
  2313                           ; 1 bytes @ 0x21
  2314  000081                     	ds	1
  2315  000082                     efgtoa@h:
  2316                           	opt callstack 0
  2317                           
  2318                           ; 4 bytes @ 0x22
  2319  000082                     	ds	4
  2320  000086                     efgtoa@l:
  2321                           	opt callstack 0
  2322                           
  2323                           ; 4 bytes @ 0x26
  2324  000086                     	ds	4
  2325  00008A                     efgtoa@i:
  2326                           	opt callstack 0
  2327                           
  2328                           ; 2 bytes @ 0x2A
  2329  00008A                     	ds	2
  2330  00008C                     efgtoa@g:
  2331                           	opt callstack 0
  2332                           
  2333                           ; 4 bytes @ 0x2C
  2334  00008C                     	ds	4
  2335  000090                     efgtoa@e:
  2336                           	opt callstack 0
  2337                           
  2338                           ; 2 bytes @ 0x30
  2339  000090                     	ds	2
  2340  000092                     efgtoa@n:
  2341                           	opt callstack 0
  2342                           
  2343                           ; 2 bytes @ 0x32
  2344  000092                     	ds	2
  2345  000094                     efgtoa@u:
  2346                           	opt callstack 0
  2347                           
  2348                           ; 4 bytes @ 0x34
  2349  000094                     	ds	4
  2350  000098                     vfpfcnvrt@cp:
  2351                           	opt callstack 0
  2352                           
  2353                           ; 2 bytes @ 0x38
  2354  000098                     	ds	2
  2355  00009A                     vfpfcnvrt@done:
  2356                           	opt callstack 0
  2357                           
  2358                           ; 2 bytes @ 0x3A
  2359  00009A                     	ds	2
  2360  00009C                     _vfpfcnvrt$1375:
  2361                           	opt callstack 0
  2362                           
  2363                           ; 2 bytes @ 0x3C
  2364  00009C                     	ds	2
  2365  00009E                     _vfpfcnvrt$1376:
  2366                           	opt callstack 0
  2367                           
  2368                           ; 2 bytes @ 0x3E
  2369  00009E                     	ds	2
  2370  0000A0                     _vfpfcnvrt$1397:
  2371                           	opt callstack 0
  2372                           
  2373                           ; 2 bytes @ 0x40
  2374  0000A0                     	ds	2
  2375  0000A2                     vfpfcnvrt@f:
  2376                           	opt callstack 0
  2377                           
  2378                           ; 4 bytes @ 0x42
  2379  0000A2                     	ds	4
  2380  0000A6                     vfpfcnvrt@ct:
  2381                           	opt callstack 0
  2382                           
  2383                           ; 3 bytes @ 0x46
  2384  0000A6                     	ds	3
  2385  0000A9                     vfpfcnvrt@ll:
  2386                           	opt callstack 0
  2387                           
  2388                           ; 8 bytes @ 0x49
  2389  0000A9                     	ds	8
  2390  0000B1                     vfpfcnvrt@vp:
  2391                           	opt callstack 0
  2392                           
  2393                           ; 2 bytes @ 0x51
  2394  0000B1                     	ds	2
  2395  0000B3                     vfpfcnvrt@c:
  2396                           	opt callstack 0
  2397                           
  2398                           ; 1 bytes @ 0x53
  2399  0000B3                     	ds	1
  2400  0000B4                     vfpfcnvrt@llu:
  2401                           	opt callstack 0
  2402                           
  2403                           ; 8 bytes @ 0x54
  2404  0000B4                     	ds	8
  2405  0000BC                     ?_vsnprintf:
  2406                           	opt callstack 0
  2407  0000BC                     vsnprintf@s:
  2408                           	opt callstack 0
  2409                           
  2410                           ; 2 bytes @ 0x5C
  2411  0000BC                     	ds	2
  2412  0000BE                     vsnprintf@n:
  2413                           	opt callstack 0
  2414                           
  2415                           ; 2 bytes @ 0x5E
  2416  0000BE                     	ds	2
  2417  0000C0                     vsnprintf@fmt:
  2418                           	opt callstack 0
  2419                           
  2420                           ; 2 bytes @ 0x60
  2421  0000C0                     	ds	2
  2422  0000C2                     vsnprintf@ap:
  2423                           	opt callstack 0
  2424                           
  2425                           ; 2 bytes @ 0x62
  2426  0000C2                     	ds	2
  2427  0000C4                     ??_vsnprintf:
  2428                           
  2429                           ; 1 bytes @ 0x64
  2430  0000C4                     	ds	4
  2431  0000C8                     _vsnprintf$2128:
  2432                           	opt callstack 0
  2433                           
  2434                           ; 2 bytes @ 0x68
  2435  0000C8                     	ds	2
  2436  0000CA                     vsnprintf@cnt:
  2437                           	opt callstack 0
  2438                           
  2439                           ; 2 bytes @ 0x6A
  2440  0000CA                     	ds	2
  2441  0000CC                     vsnprintf@f:
  2442                           	opt callstack 0
  2443                           
  2444                           ; 6 bytes @ 0x6C
  2445  0000CC                     	ds	6
  2446  0000D2                     ?_snprintf:
  2447                           	opt callstack 0
  2448  0000D2                     snprintf@s:
  2449                           	opt callstack 0
  2450                           
  2451                           ; 2 bytes @ 0x72
  2452  0000D2                     	ds	2
  2453  0000D4                     snprintf@n:
  2454                           	opt callstack 0
  2455                           
  2456                           ; 2 bytes @ 0x74
  2457  0000D4                     	ds	2
  2458  0000D6                     snprintf@fmt:
  2459                           	opt callstack 0
  2460                           
  2461                           ; 2 bytes @ 0x76
  2462  0000D6                     	ds	6
  2463                           
  2464                           	psect	cstackCOMRAM
  2465  000001                     __pcstackCOMRAM:
  2466                           	opt callstack 0
  2467  000001                     ??_IOCB4_InterruptCall:
  2468  000001                     
  2469                           ; 1 bytes @ 0x0
  2470  000001                     	ds	1
  2471  000002                     ??_INTERRUPT_InterruptManager:
  2472                           
  2473                           ; 1 bytes @ 0x1
  2474  000002                     	ds	2
  2475  000004                     ??_TMR1_Initialize:
  2476  000004                     ??_SPI_Open:
  2477  000004                     ??_msDelay:
  2478  000004                     ?_strlen:
  2479                           	opt callstack 0
  2480  000004                     ?___fpclassifyf:
  2481                           	opt callstack 0
  2482  000004                     ?_isupper:
  2483                           	opt callstack 0
  2484  000004                     ?_isalpha:
  2485                           	opt callstack 0
  2486  000004                     ?_isdigit:
  2487                           	opt callstack 0
  2488  000004                     ?_strncmp:
  2489                           	opt callstack 0
  2490  000004                     ?_isspace:
  2491                           	opt callstack 0
  2492  000004                     ?_islower:
  2493                           	opt callstack 0
  2494  000004                     ?_ADC_GetConversion:
  2495                           	opt callstack 0
  2496  000004                     ?___wmul:
  2497                           	opt callstack 0
  2498  000004                     ?___awdiv:
  2499                           	opt callstack 0
  2500  000004                     ?___awmod:
  2501                           	opt callstack 0
  2502  000004                     ?___fladd:
  2503                           	opt callstack 0
  2504  000004                     ?___fldiv:
  2505                           	opt callstack 0
  2506  000004                     ?___flneg:
  2507                           	opt callstack 0
  2508  000004                     ?___fltol:
  2509                           	opt callstack 0
  2510  000004                     ?___xxtofl:
  2511                           	opt callstack 0
  2512  000004                     ?___aodiv:
  2513                           	opt callstack 0
  2514  000004                     ?___aomod:
  2515                           	opt callstack 0
  2516  000004                     ?___lodiv:
  2517                           	opt callstack 0
  2518  000004                     ?___lomod:
  2519                           	opt callstack 0
  2520  000004                     SPI_ExchangeByte@data:
  2521                           	opt callstack 0
  2522  000004                     IOCB4_SetInterruptHandler@InterruptHandler:
  2523                           	opt callstack 0
  2524  000004                     ___wmul@multiplier:
  2525                           	opt callstack 0
  2526  000004                     ___awdiv@dividend:
  2527                           	opt callstack 0
  2528  000004                     ___awmod@dividend:
  2529                           	opt callstack 0
  2530  000004                     isalpha@c:
  2531                           	opt callstack 0
  2532  000004                     isdigit@c:
  2533                           	opt callstack 0
  2534  000004                     isspace@c:
  2535                           	opt callstack 0
  2536  000004                     isupper@c:
  2537                           	opt callstack 0
  2538  000004                     fputc@c:
  2539                           	opt callstack 0
  2540  000004                     strcpy@dest:
  2541                           	opt callstack 0
  2542  000004                     strlen@s:
  2543                           	opt callstack 0
  2544  000004                     strncmp@_l:
  2545                           	opt callstack 0
  2546  000004                     islower@c:
  2547                           	opt callstack 0
  2548  000004                     ___fleq@ff1:
  2549                           	opt callstack 0
  2550  000004                     ___flneg@f1:
  2551                           	opt callstack 0
  2552  000004                     ___fltol@f1:
  2553                           	opt callstack 0
  2554  000004                     ___fladd@b:
  2555                           	opt callstack 0
  2556  000004                     ___fldiv@b:
  2557                           	opt callstack 0
  2558  000004                     ___xxtofl@val:
  2559                           	opt callstack 0
  2560  000004                     ___fpclassifyf@x:
  2561                           	opt callstack 0
  2562  000004                     ___aodiv@dividend:
  2563                           	opt callstack 0
  2564  000004                     ___aomod@dividend:
  2565                           	opt callstack 0
  2566  000004                     ___lodiv@dividend:
  2567                           	opt callstack 0
  2568  000004                     ___lomod@dividend:
  2569                           	opt callstack 0
  2570                           
  2571                           ; 8 bytes @ 0x3
  2572  000004                     	ds	1
  2573  000005                     SPI_Open@spiUniqueConfiguration:
  2574                           	opt callstack 0
  2575  000005                     msDelay@ms:
  2576                           	opt callstack 0
  2577  000005                     lcd_send@value:
  2578                           	opt callstack 0
  2579                           
  2580                           ; 1 bytes @ 0x4
  2581  000005                     	ds	1
  2582  000006                     ??_isupper:
  2583  000006                     ??_isalpha:
  2584  000006                     ??_isdigit:
  2585  000006                     ??_isspace:
  2586  000006                     ??_islower:
  2587  000006                     ??_ADC_GetConversion:
  2588  000006                     msDelay@k:
  2589                           	opt callstack 0
  2590  000006                     lcd_send@dc:
  2591                           	opt callstack 0
  2592  000006                     ___wmul@multiplicand:
  2593                           	opt callstack 0
  2594  000006                     ___awdiv@divisor:
  2595                           	opt callstack 0
  2596  000006                     ___awmod@divisor:
  2597                           	opt callstack 0
  2598  000006                     fputc@fp:
  2599                           	opt callstack 0
  2600  000006                     strcpy@src:
  2601                           	opt callstack 0
  2602  000006                     strlen@a:
  2603                           	opt callstack 0
  2604  000006                     strncmp@_r:
  2605                           	opt callstack 0
  2606                           
  2607                           ; 2 bytes @ 0x5
  2608  000006                     	ds	1
  2609  000007                     lcd_set_cursor_x@x:
  2610                           	opt callstack 0
  2611  000007                     lcd_set_cursor_y@y:
  2612                           	opt callstack 0
  2613  000007                     lcd_draw_pixel@color:
  2614                           	opt callstack 0
  2615                           
  2616                           ; 2 bytes @ 0x6
  2617  000007                     	ds	1
  2618  000008                     ??_fputc:
  2619  000008                     ??___fpclassifyf:
  2620  000008                     ??_strcpy:
  2621  000008                     ??___fltol:
  2622  000008                     ??___xxtofl:
  2623  000008                     ADC_GetConversion@channel:
  2624                           	opt callstack 0
  2625  000008                     ___awdiv@counter:
  2626                           	opt callstack 0
  2627  000008                     ___awmod@counter:
  2628                           	opt callstack 0
  2629  000008                     ___wmul@product:
  2630                           	opt callstack 0
  2631  000008                     strncmp@n:
  2632                           	opt callstack 0
  2633  000008                     ___fleq@ff2:
  2634                           	opt callstack 0
  2635  000008                     ___fladd@a:
  2636                           	opt callstack 0
  2637  000008                     ___fldiv@a:
  2638                           	opt callstack 0
  2639                           
  2640                           ; 4 bytes @ 0x7
  2641  000008                     	ds	1
  2642  000009                     ___awdiv@sign:
  2643                           	opt callstack 0
  2644  000009                     ___awmod@sign:
  2645                           	opt callstack 0
  2646  000009                     lcd_set_cursor@x:
  2647                           	opt callstack 0
  2648                           
  2649                           ; 2 bytes @ 0x8
  2650  000009                     	ds	1
  2651  00000A                     ??_strncmp:
  2652  00000A                     ?_tolower:
  2653                           	opt callstack 0
  2654  00000A                     ?_toupper:
  2655                           	opt callstack 0
  2656  00000A                     _isspace$1998:
  2657                           	opt callstack 0
  2658  00000A                     ___awdiv@quotient:
  2659                           	opt callstack 0
  2660  00000A                     strcpy@s:
  2661                           	opt callstack 0
  2662  00000A                     tolower@c:
  2663                           	opt callstack 0
  2664  00000A                     toupper@c:
  2665                           	opt callstack 0
  2666                           
  2667                           ; 2 bytes @ 0x9
  2668  00000A                     	ds	1
  2669  00000B                     ?_atoi:
  2670                           	opt callstack 0
  2671  00000B                     lcd_set_cursor@y:
  2672                           	opt callstack 0
  2673  00000B                     atoi@s:
  2674                           	opt callstack 0
  2675  00000B                     strncmp@l:
  2676                           	opt callstack 0
  2677                           
  2678                           ; 2 bytes @ 0xA
  2679  00000B                     	ds	1
  2680  00000C                     ??_tolower:
  2681  00000C                     ??_toupper:
  2682  00000C                     ??___fladd:
  2683  00000C                     ??___fldiv:
  2684  00000C                     ??___fleq:
  2685  00000C                     ___fltol@sign1:
  2686                           	opt callstack 0
  2687  00000C                     ___xxtofl@sign:
  2688                           	opt callstack 0
  2689  00000C                     ___fpclassifyf@e:
  2690                           	opt callstack 0
  2691  00000C                     strcpy@d:
  2692                           	opt callstack 0
  2693  00000C                     ___aodiv@divisor:
  2694                           	opt callstack 0
  2695  00000C                     ___aomod@divisor:
  2696                           	opt callstack 0
  2697  00000C                     ___lodiv@divisor:
  2698                           	opt callstack 0
  2699  00000C                     ___lomod@divisor:
  2700                           	opt callstack 0
  2701                           
  2702                           ; 8 bytes @ 0xB
  2703  00000C                     	ds	1
  2704  00000D                     ??_atoi:
  2705  00000D                     ?_stoa:
  2706                           	opt callstack 0
  2707  00000D                     ___fltol@exp1:
  2708                           	opt callstack 0
  2709  00000D                     ___xxtofl@exp:
  2710                           	opt callstack 0
  2711  00000D                     lcd_fill@bg_color:
  2712                           	opt callstack 0
  2713  00000D                     lcd_draw_char@x:
  2714                           	opt callstack 0
  2715  00000D                     stoa@fp:
  2716                           	opt callstack 0
  2717  00000D                     fputs@s:
  2718                           	opt callstack 0
  2719  00000D                     strncmp@r:
  2720                           	opt callstack 0
  2721                           
  2722                           ; 2 bytes @ 0xC
  2723  00000D                     	ds	1
  2724  00000E                     ___xxtofl@arg:
  2725                           	opt callstack 0
  2726  00000E                     ___fpclassifyf@u:
  2727                           	opt callstack 0
  2728                           
  2729                           ; 4 bytes @ 0xD
  2730  00000E                     	ds	1
  2731  00000F                     lcd_fill@height:
  2732                           	opt callstack 0
  2733  00000F                     lcd_draw_char@y:
  2734                           	opt callstack 0
  2735  00000F                     stoa@s:
  2736                           	opt callstack 0
  2737  00000F                     fputs@fp:
  2738                           	opt callstack 0
  2739                           
  2740                           ; 2 bytes @ 0xE
  2741  00000F                     	ds	1
  2742  000010                     ___fladd@signs:
  2743                           	opt callstack 0
  2744  000010                     _tolower$2081:
  2745                           	opt callstack 0
  2746  000010                     _toupper$2096:
  2747                           	opt callstack 0
  2748  000010                     ___fldiv@rem:
  2749                           	opt callstack 0
  2750                           
  2751                           ; 4 bytes @ 0xF
  2752  000010                     	ds	1
  2753  000011                     ??_stoa:
  2754  000011                     ___fladd@aexp:
  2755                           	opt callstack 0
  2756  000011                     fputs@c:
  2757                           	opt callstack 0
  2758  000011                     lcd_fill@width:
  2759                           	opt callstack 0
  2760  000011                     lcd_draw_char@fIndex:
  2761                           	opt callstack 0
  2762  000011                     atoi@neg:
  2763                           	opt callstack 0
  2764                           
  2765                           ; 2 bytes @ 0x10
  2766  000011                     	ds	1
  2767  000012                     ?___flmul:
  2768                           	opt callstack 0
  2769  000012                     ___fladd@bexp:
  2770                           	opt callstack 0
  2771  000012                     fputs@i:
  2772                           	opt callstack 0
  2773  000012                     ___flmul@b:
  2774                           	opt callstack 0
  2775  000012                     stoa@nuls:
  2776                           	opt callstack 0
  2777                           
  2778                           ; 7 bytes @ 0x11
  2779  000012                     	ds	1
  2780  000013                     ___fladd@grs:
  2781                           	opt callstack 0
  2782  000013                     lcd_draw_char@fg_color:
  2783                           	opt callstack 0
  2784  000013                     _atoi$1958:
  2785                           	opt callstack 0
  2786                           
  2787                           ; 2 bytes @ 0x12
  2788  000013                     	ds	1
  2789  000014                     ?_pad:
  2790                           	opt callstack 0
  2791  000014                     ___aodiv@counter:
  2792                           	opt callstack 0
  2793  000014                     ___aomod@counter:
  2794                           	opt callstack 0
  2795  000014                     ___lomod@counter:
  2796                           	opt callstack 0
  2797  000014                     ___fldiv@sign:
  2798                           	opt callstack 0
  2799  000014                     pad@fp:
  2800                           	opt callstack 0
  2801  000014                     ___lodiv@quotient:
  2802                           	opt callstack 0
  2803                           
  2804                           ; 8 bytes @ 0x13
  2805  000014                     	ds	1
  2806  000015                     ___aodiv@sign:
  2807                           	opt callstack 0
  2808  000015                     ___aomod@sign:
  2809                           	opt callstack 0
  2810  000015                     lcd_draw_char@bg_color:
  2811                           	opt callstack 0
  2812  000015                     ___fldiv@new_exp:
  2813                           	opt callstack 0
  2814  000015                     _atoi$1960:
  2815                           	opt callstack 0
  2816                           
  2817                           ; 2 bytes @ 0x14
  2818  000015                     	ds	1
  2819  000016                     ?_abs:
  2820                           	opt callstack 0
  2821  000016                     pad@buf:
  2822                           	opt callstack 0
  2823  000016                     abs@a:
  2824                           	opt callstack 0
  2825  000016                     ___flmul@a:
  2826                           	opt callstack 0
  2827  000016                     ___aodiv@quotient:
  2828                           	opt callstack 0
  2829                           
  2830                           ; 8 bytes @ 0x15
  2831  000016                     	ds	1
  2832  000017                     ??_lcd_draw_char:
  2833  000017                     _atoi$1959:
  2834                           	opt callstack 0
  2835  000017                     ___fldiv@grs:
  2836                           	opt callstack 0
  2837                           
  2838                           ; 4 bytes @ 0x16
  2839  000017                     	ds	1
  2840  000018                     ??_abs:
  2841  000018                     pad@p:
  2842                           	opt callstack 0
  2843  000018                     atoi@n:
  2844                           	opt callstack 0
  2845                           
  2846                           ; 2 bytes @ 0x17
  2847  000018                     	ds	1
  2848  000019                     stoa@i:
  2849                           	opt callstack 0
  2850                           
  2851                           ; 2 bytes @ 0x18
  2852  000019                     	ds	1
  2853  00001A                     ??___flmul:
  2854  00001A                     ??_pad:
  2855                           
  2856                           ; 1 bytes @ 0x19
  2857  00001A                     	ds	1
  2858  00001B                     ___fldiv@bexp:
  2859                           	opt callstack 0
  2860  00001B                     pad@i:
  2861                           	opt callstack 0
  2862  00001B                     stoa@w:
  2863                           	opt callstack 0
  2864                           
  2865                           ; 2 bytes @ 0x1A
  2866  00001B                     	ds	1
  2867  00001C                     ___lodiv@counter:
  2868                           	opt callstack 0
  2869  00001C                     ___fldiv@aexp:
  2870                           	opt callstack 0
  2871                           
  2872                           ; 1 bytes @ 0x1B
  2873  00001C                     	ds	1
  2874  00001D                     ?_floorf:
  2875                           	opt callstack 0
  2876  00001D                     pad@w:
  2877                           	opt callstack 0
  2878  00001D                     stoa@cp:
  2879                           	opt callstack 0
  2880  00001D                     floorf@x:
  2881                           	opt callstack 0
  2882                           
  2883                           ; 4 bytes @ 0x1C
  2884  00001D                     	ds	1
  2885  00001E                     ___flmul@sign:
  2886                           	opt callstack 0
  2887                           
  2888                           ; 1 bytes @ 0x1D
  2889  00001E                     	ds	1
  2890  00001F                     ?_ctoa:
  2891                           	opt callstack 0
  2892  00001F                     ?_dtoa:
  2893                           	opt callstack 0
  2894  00001F                     ?_otoa:
  2895                           	opt callstack 0
  2896  00001F                     ?_utoa:
  2897                           	opt callstack 0
  2898  00001F                     ?_xtoa:
  2899                           	opt callstack 0
  2900  00001F                     ___flmul@aexp:
  2901                           	opt callstack 0
  2902  00001F                     ctoa@fp:
  2903                           	opt callstack 0
  2904  00001F                     dtoa@fp:
  2905                           	opt callstack 0
  2906  00001F                     otoa@fp:
  2907                           	opt callstack 0
  2908  00001F                     stoa@p:
  2909                           	opt callstack 0
  2910  00001F                     utoa@fp:
  2911                           	opt callstack 0
  2912  00001F                     xtoa@fp:
  2913                           	opt callstack 0
  2914                           
  2915                           ; 2 bytes @ 0x1E
  2916  00001F                     	ds	1
  2917  000020                     lcd_draw_char@j:
  2918                           	opt callstack 0
  2919  000020                     ___flmul@grs:
  2920                           	opt callstack 0
  2921                           
  2922                           ; 4 bytes @ 0x1F
  2923  000020                     	ds	1
  2924  000021                     ??_floorf:
  2925  000021                     lcd_draw_char@k:
  2926                           	opt callstack 0
  2927  000021                     ctoa@c:
  2928                           	opt callstack 0
  2929  000021                     stoa@l:
  2930                           	opt callstack 0
  2931  000021                     dtoa@d:
  2932                           	opt callstack 0
  2933  000021                     otoa@d:
  2934                           	opt callstack 0
  2935  000021                     utoa@d:
  2936                           	opt callstack 0
  2937  000021                     xtoa@d:
  2938                           	opt callstack 0
  2939                           
  2940                           ; 8 bytes @ 0x20
  2941  000021                     	ds	1
  2942  000022                     lcd_draw_char@i:
  2943                           	opt callstack 0
  2944  000022                     ctoa@w:
  2945                           	opt callstack 0
  2946                           
  2947                           ; 2 bytes @ 0x21
  2948  000022                     	ds	1
  2949  000023                     lcd_draw_string@x:
  2950                           	opt callstack 0
  2951                           
  2952                           ; 2 bytes @ 0x22
  2953  000023                     	ds	1
  2954  000024                     ___flmul@bexp:
  2955                           	opt callstack 0
  2956                           
  2957                           ; 1 bytes @ 0x23
  2958  000024                     	ds	1
  2959  000025                     lcd_draw_string@y:
  2960                           	opt callstack 0
  2961  000025                     ___flmul@prod:
  2962                           	opt callstack 0
  2963                           
  2964                           ; 4 bytes @ 0x24
  2965  000025                     	ds	2
  2966  000027                     lcd_draw_string@pS:
  2967                           	opt callstack 0
  2968  000027                     floorf@m:
  2969                           	opt callstack 0
  2970                           
  2971                           ; 4 bytes @ 0x26
  2972  000027                     	ds	2
  2973  000029                     ??_dtoa:
  2974  000029                     ??_otoa:
  2975  000029                     ??_utoa:
  2976  000029                     xtoa@x:
  2977                           	opt callstack 0
  2978  000029                     lcd_draw_string@fg_color:
  2979                           	opt callstack 0
  2980  000029                     ___flmul@temp:
  2981                           	opt callstack 0
  2982                           
  2983                           ; 2 bytes @ 0x28
  2984  000029                     	ds	1
  2985  00002A                     ??_xtoa:
  2986                           
  2987                           ; 1 bytes @ 0x29
  2988  00002A                     	ds	1
  2989  00002B                     ?___flsub:
  2990                           	opt callstack 0
  2991  00002B                     lcd_draw_string@bg_color:
  2992                           	opt callstack 0
  2993  00002B                     floorf@e:
  2994                           	opt callstack 0
  2995  00002B                     ___flge@ff1:
  2996                           	opt callstack 0
  2997  00002B                     ___flsub@b:
  2998                           	opt callstack 0
  2999                           
  3000                           ; 4 bytes @ 0x2A
  3001  00002B                     	ds	2
  3002  00002D                     ??_lcd_draw_string:
  3003  00002D                     floorf@u:
  3004                           	opt callstack 0
  3005                           
  3006                           ; 4 bytes @ 0x2C
  3007  00002D                     	ds	2
  3008  00002F                     ___flge@ff2:
  3009                           	opt callstack 0
  3010  00002F                     ___flsub@a:
  3011                           	opt callstack 0
  3012                           
  3013                           ; 4 bytes @ 0x2E
  3014  00002F                     	ds	2
  3015  000031                     lcd_draw_string@k:
  3016                           	opt callstack 0
  3017  000031                     _dtoa$1290:
  3018                           	opt callstack 0
  3019  000031                     otoa@p:
  3020                           	opt callstack 0
  3021  000031                     utoa@p:
  3022                           	opt callstack 0
  3023                           
  3024                           ; 2 bytes @ 0x30
  3025  000031                     	ds	1
  3026  000032                     _xtoa$1360:
  3027                           	opt callstack 0
  3028                           
  3029                           ; 2 bytes @ 0x31
  3030  000032                     	ds	1
  3031  000033                     ??___flge:
  3032  000033                     lcd_draw_string@lIndex:
  3033                           	opt callstack 0
  3034  000033                     dtoa@p:
  3035                           	opt callstack 0
  3036  000033                     otoa@t:
  3037                           	opt callstack 0
  3038  000033                     utoa@w:
  3039                           	opt callstack 0
  3040                           
  3041                           ; 2 bytes @ 0x32
  3042  000033                     	ds	1
  3043  000034                     _xtoa$1361:
  3044                           	opt callstack 0
  3045                           
  3046                           ; 2 bytes @ 0x33
  3047  000034                     	ds	1
  3048  000035                     dtoa@w:
  3049                           	opt callstack 0
  3050  000035                     otoa@w:
  3051                           	opt callstack 0
  3052  000035                     utoa@n:
  3053                           	opt callstack 0
  3054                           
  3055                           ; 8 bytes @ 0x34
  3056  000035                     	ds	1
  3057  000036                     xtoa@p:
  3058                           	opt callstack 0
  3059                           
  3060                           ; 2 bytes @ 0x35
  3061  000036                     	ds	1
  3062  000037                     ?_efgtoa:
  3063                           	opt callstack 0
  3064  000037                     dtoa@s:
  3065                           	opt callstack 0
  3066  000037                     efgtoa@fp:
  3067                           	opt callstack 0
  3068  000037                     otoa@n:
  3069                           	opt callstack 0
  3070                           
  3071                           ; 8 bytes @ 0x36
  3072  000037                     	ds	1
  3073  000038                     xtoa@w:
  3074                           	opt callstack 0
  3075                           
  3076                           ; 2 bytes @ 0x37
  3077  000038                     	ds	1
  3078  000039                     efgtoa@f:
  3079                           	opt callstack 0
  3080  000039                     dtoa@n:
  3081                           	opt callstack 0
  3082                           
  3083                           ; 8 bytes @ 0x38
  3084  000039                     	ds	1
  3085  00003A                     xtoa@n:
  3086                           	opt callstack 0
  3087                           
  3088                           ; 8 bytes @ 0x39
  3089  00003A                     	ds	3
  3090  00003D                     efgtoa@c:
  3091                           	opt callstack 0
  3092  00003D                     utoa@i:
  3093                           	opt callstack 0
  3094                           
  3095                           ; 2 bytes @ 0x3C
  3096  00003D                     	ds	1
  3097  00003E                     ??_efgtoa:
  3098                           
  3099                           ; 1 bytes @ 0x3D
  3100  00003E                     	ds	1
  3101  00003F                     otoa@i:
  3102                           	opt callstack 0
  3103                           
  3104                           ; 2 bytes @ 0x3E
  3105  00003F                     	ds	2
  3106  000041                     dtoa@i:
  3107                           	opt callstack 0
  3108                           
  3109                           ; 2 bytes @ 0x40
  3110  000041                     	ds	1
  3111  000042                     xtoa@i:
  3112                           	opt callstack 0
  3113                           
  3114                           ; 2 bytes @ 0x41
  3115  000042                     	ds	2
  3116  000044                     xtoa@c:
  3117                           	opt callstack 0
  3118                           
  3119                           ; 2 bytes @ 0x43
  3120  000044                     	ds	2
  3121  000046                     ?_vfpfcnvrt:
  3122                           	opt callstack 0
  3123  000046                     vfpfcnvrt@fp:
  3124                           	opt callstack 0
  3125                           
  3126                           ; 2 bytes @ 0x45
  3127  000046                     	ds	2
  3128  000048                     vfpfcnvrt@fmt:
  3129                           	opt callstack 0
  3130                           
  3131                           ; 2 bytes @ 0x47
  3132  000048                     	ds	2
  3133  00004A                     vfpfcnvrt@ap:
  3134                           	opt callstack 0
  3135                           
  3136                           ; 2 bytes @ 0x49
  3137  00004A                     	ds	2
  3138  00004C                     ??_vfpfcnvrt:
  3139                           
  3140                           ; 1 bytes @ 0x4B
  3141  00004C                     	ds	4
  3142  000050                     ?_vfprintf:
  3143                           	opt callstack 0
  3144  000050                     vfprintf@fp:
  3145                           	opt callstack 0
  3146                           
  3147                           ; 2 bytes @ 0x4F
  3148  000050                     	ds	2
  3149  000052                     vfprintf@fmt:
  3150                           	opt callstack 0
  3151                           
  3152                           ; 2 bytes @ 0x51
  3153  000052                     	ds	2
  3154  000054                     vfprintf@ap:
  3155                           	opt callstack 0
  3156                           
  3157                           ; 2 bytes @ 0x53
  3158  000054                     	ds	2
  3159  000056                     vfprintf@cfmt:
  3160                           	opt callstack 0
  3161                           
  3162                           ; 2 bytes @ 0x55
  3163  000056                     	ds	2
  3164  000058                     
  3165                           ; 1 bytes @ 0x57
  3166 ;;
  3167 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3168 ;;
  3169 ;; *************** function _main *****************
  3170 ;; Defined at:
  3171 ;;		line 34 in file "main.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;		None
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;		None
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  1    wreg      void 
  3178 ;; Registers used:
  3179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3189 ;;Total ram usage:        0 bytes
  3190 ;; Hardware stack levels required when called:   13
  3191 ;; This function calls:
  3192 ;;		_ADC_GetConversion
  3193 ;;		_IOCB4_SetInterruptHandler
  3194 ;;		_SPI_Open
  3195 ;;		_SYSTEM_Initialize
  3196 ;;		___flmul
  3197 ;;		___xxtofl
  3198 ;;		_lcd_draw_string
  3199 ;;		_lcd_init
  3200 ;;		_snprintf
  3201 ;; This function is called by:
  3202 ;;		Startup code after reset
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206                           	psect	text0
  3207  0045E2                     __ptext0:
  3208                           	opt callstack 0
  3209  0045E2                     _main:
  3210                           	opt callstack 18
  3211  0045E2                     
  3212                           ;main.c: 37:     SYSTEM_Initialize();
  3213  0045E2  ECBA  F02D         	call	_SYSTEM_Initialize	;wreg free
  3214  0045E6                     
  3215                           ;main.c: 38:     SPI_Open(SPI_DEFAULT);
  3216  0045E6  0E00               	movlw	0
  3217  0045E8  EC2F  F029         	call	_SPI_Open
  3218  0045EC                     
  3219                           ;main.c: 39:     lcd_init();
  3220  0045EC  ECAD  F016         	call	_lcd_init	;wreg free
  3221  0045F0                     
  3222                           ;main.c: 42:     IOCB4_SetInterruptHandler(IOCB4_InterruptCall);
  3223  0045F0  0EBA               	movlw	low _IOCB4_InterruptCall
  3224  0045F2  6E04               	movwf	IOCB4_SetInterruptHandler@InterruptHandler^0,c
  3225  0045F4  0E55               	movlw	high _IOCB4_InterruptCall
  3226  0045F6  6E05               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)^0,c
  3227  0045F8  EC07  F02E         	call	_IOCB4_SetInterruptHandler	;wreg free
  3228  0045FC                     
  3229                           ;main.c: 45:     (INTCONbits.GIE = 1);
  3230  0045FC  8EF2               	bsf	242,7,c	;volatile
  3231  0045FE                     
  3232                           ;main.c: 56:     lcd_draw_string(100,120,"HELLO WORLD",0xFFFF,0x0000);
  3233  0045FE  0E00               	movlw	0
  3234  004600  6E24               	movwf	(lcd_draw_string@x+1)^0,c
  3235  004602  0E64               	movlw	100
  3236  004604  6E23               	movwf	lcd_draw_string@x^0,c
  3237  004606  0E00               	movlw	0
  3238  004608  6E26               	movwf	(lcd_draw_string@y+1)^0,c
  3239  00460A  0E78               	movlw	120
  3240  00460C  6E25               	movwf	lcd_draw_string@y^0,c
  3241  00460E  0EAE               	movlw	low STR_1
  3242  004610  6E27               	movwf	lcd_draw_string@pS^0,c
  3243  004612  0EFF               	movlw	high STR_1
  3244  004614  6E28               	movwf	(lcd_draw_string@pS+1)^0,c
  3245  004616  0EFF               	movlw	255
  3246  004618  6E2A               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3247  00461A  6829               	setf	lcd_draw_string@fg_color^0,c
  3248  00461C  0E00               	movlw	0
  3249  00461E  6E2C               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3250  004620  0E00               	movlw	0
  3251  004622  6E2B               	movwf	lcd_draw_string@bg_color^0,c
  3252  004624  EC95  F023         	call	_lcd_draw_string	;wreg free
  3253  004628                     l9054:
  3254                           
  3255                           ;main.c: 59:     {;main.c: 61:         if (botao){
  3256  004628  0100               	movlb	0	; () banked
  3257  00462A  51F6               	movf	_botao& (0+255),w,b
  3258  00462C  11F7               	iorwf	(_botao+1)& (0+255),w,b
  3259  00462E  B4D8               	btfsc	status,2,c
  3260  004630  EF1C  F023         	goto	u12021
  3261  004634  EF1E  F023         	goto	u12020
  3262  004638                     u12021:
  3263  004638  EF65  F023         	goto	l9062
  3264  00463C                     u12020:
  3265  00463C                     
  3266                           ; BSR set to: 0
  3267                           ;main.c: 62:             codigo_digit=ADC_GetConversion(TEMP);
  3268  00463C  0E01               	movlw	1
  3269  00463E  EC95  F02C         	call	_ADC_GetConversion
  3270  004642  C004  F0F8         	movff	?_ADC_GetConversion,_codigo_digit
  3271  004646  C005  F0F9         	movff	?_ADC_GetConversion+1,_codigo_digit+1
  3272  00464A                     
  3273                           ;main.c: 63:             tensao_in=codigo_digit*0.000805664063;
  3274  00464A  C0F8  F004         	movff	_codigo_digit,___xxtofl@val
  3275  00464E  C0F9  F005         	movff	_codigo_digit+1,___xxtofl@val+1
  3276  004652  0E00               	movlw	0
  3277  004654  BE05               	btfsc	(___xxtofl@val+1)^0,7,c
  3278  004656  0EFF               	movlw	-1
  3279  004658  6E06               	movwf	(___xxtofl@val+2)^0,c
  3280  00465A  6E07               	movwf	(___xxtofl@val+3)^0,c
  3281  00465C  0E01               	movlw	1
  3282  00465E  EC54  F01E         	call	___xxtofl
  3283  004662  C004  F012         	movff	?___xxtofl,___flmul@b
  3284  004666  C005  F013         	movff	?___xxtofl+1,___flmul@b+1
  3285  00466A  C006  F014         	movff	?___xxtofl+2,___flmul@b+2
  3286  00466E  C007  F015         	movff	?___xxtofl+3,___flmul@b+3
  3287  004672  0E33               	movlw	51
  3288  004674  6E16               	movwf	___flmul@a^0,c
  3289  004676  0E33               	movlw	51
  3290  004678  6E17               	movwf	(___flmul@a+1)^0,c
  3291  00467A  0E53               	movlw	83
  3292  00467C  6E18               	movwf	(___flmul@a+2)^0,c
  3293  00467E  0E3A               	movlw	58
  3294  004680  6E19               	movwf	(___flmul@a+3)^0,c
  3295  004682  ECCB  F012         	call	___flmul	;wreg free
  3296  004686  C012  F0E8         	movff	?___flmul,_tensao_in
  3297  00468A  C013  F0E9         	movff	?___flmul+1,_tensao_in+1
  3298  00468E  C014  F0EA         	movff	?___flmul+2,_tensao_in+2
  3299  004692  C015  F0EB         	movff	?___flmul+3,_tensao_in+3
  3300  004696                     
  3301                           ;main.c: 64:             temp=tensao_in*33.3333333;
  3302  004696  C0E8  F012         	movff	_tensao_in,___flmul@b
  3303  00469A  C0E9  F013         	movff	_tensao_in+1,___flmul@b+1
  3304  00469E  C0EA  F014         	movff	_tensao_in+2,___flmul@b+2
  3305  0046A2  C0EB  F015         	movff	_tensao_in+3,___flmul@b+3
  3306  0046A6  0E55               	movlw	85
  3307  0046A8  6E16               	movwf	___flmul@a^0,c
  3308  0046AA  0E55               	movlw	85
  3309  0046AC  6E17               	movwf	(___flmul@a+1)^0,c
  3310  0046AE  0E05               	movlw	5
  3311  0046B0  6E18               	movwf	(___flmul@a+2)^0,c
  3312  0046B2  0E42               	movlw	66
  3313  0046B4  6E19               	movwf	(___flmul@a+3)^0,c
  3314  0046B6  ECCB  F012         	call	___flmul	;wreg free
  3315  0046BA  C012  F0E4         	movff	?___flmul,_temp
  3316  0046BE  C013  F0E5         	movff	?___flmul+1,_temp+1
  3317  0046C2  C014  F0E6         	movff	?___flmul+2,_temp+2
  3318  0046C6  C015  F0E7         	movff	?___flmul+3,_temp+3
  3319  0046CA                     l9062:
  3320                           
  3321                           ;main.c: 66:         snprintf(string_temp,sizeof(string_temp),"Temp=%.f C      ",temp);
  3322  0046CA  0E00               	movlw	low _string_temp
  3323  0046CC  0100               	movlb	0	; () banked
  3324  0046CE  6FD2               	movwf	snprintf@s& (0+255),b
  3325  0046D0  0E01               	movlw	high _string_temp
  3326  0046D2  6FD3               	movwf	(snprintf@s+1)& (0+255),b
  3327  0046D4  0E00               	movlw	0
  3328  0046D6  6FD5               	movwf	(snprintf@n+1)& (0+255),b
  3329  0046D8  0E64               	movlw	100
  3330  0046DA  6FD4               	movwf	snprintf@n& (0+255),b
  3331  0046DC  0E9D               	movlw	low STR_2
  3332  0046DE  6FD6               	movwf	snprintf@fmt& (0+255),b
  3333  0046E0  0EFF               	movlw	high STR_2
  3334  0046E2  6FD7               	movwf	(snprintf@fmt+1)& (0+255),b
  3335  0046E4  C0E4  F0D8         	movff	_temp,?_snprintf+6
  3336  0046E8  C0E5  F0D9         	movff	_temp+1,?_snprintf+7
  3337  0046EC  C0E6  F0DA         	movff	_temp+2,?_snprintf+8
  3338  0046F0  C0E7  F0DB         	movff	_temp+3,?_snprintf+9
  3339  0046F4  EC3D  F02D         	call	_snprintf	;wreg free
  3340  0046F8                     
  3341                           ;main.c: 67:         lcd_draw_string(100,100,string_temp,0xFFFF,0x0000);
  3342  0046F8  0E00               	movlw	0
  3343  0046FA  6E24               	movwf	(lcd_draw_string@x+1)^0,c
  3344  0046FC  0E64               	movlw	100
  3345  0046FE  6E23               	movwf	lcd_draw_string@x^0,c
  3346  004700  0E00               	movlw	0
  3347  004702  6E26               	movwf	(lcd_draw_string@y+1)^0,c
  3348  004704  0E64               	movlw	100
  3349  004706  6E25               	movwf	lcd_draw_string@y^0,c
  3350  004708  0E00               	movlw	low _string_temp
  3351  00470A  6E27               	movwf	lcd_draw_string@pS^0,c
  3352  00470C  0E01               	movlw	high _string_temp
  3353  00470E  6E28               	movwf	(lcd_draw_string@pS+1)^0,c
  3354  004710  0EFF               	movlw	255
  3355  004712  6E2A               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3356  004714  6829               	setf	lcd_draw_string@fg_color^0,c
  3357  004716  0E00               	movlw	0
  3358  004718  6E2C               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3359  00471A  0E00               	movlw	0
  3360  00471C  6E2B               	movwf	lcd_draw_string@bg_color^0,c
  3361  00471E  EC95  F023         	call	_lcd_draw_string	;wreg free
  3362  004722  EF14  F023         	goto	l9054
  3363  004726  EF1F  F000         	goto	start
  3364  00472A                     __end_of_main:
  3365                           	opt callstack 0
  3366                           
  3367 ;; *************** function _snprintf *****************
  3368 ;; Defined at:
  3369 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\snprintf.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;  s               2  114[BANK0 ] PTR unsigned char 
  3372 ;;		 -> string_temp(100), 
  3373 ;;  n               2  116[BANK0 ] unsigned int 
  3374 ;;  fmt             2  118[BANK0 ] PTR const unsigned char 
  3375 ;;		 -> STR_2(17), 
  3376 ;; Auto vars:     Size  Location     Type
  3377 ;;  ap              2    2[BANK1 ] PTR void [1]
  3378 ;;		 -> ?_snprintf(2), 
  3379 ;;  ret             2    0        int 
  3380 ;; Return value:  Size  Location     Type
  3381 ;;                  2  114[BANK0 ] int 
  3382 ;; Registers used:
  3383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3384 ;; Tracked objects:
  3385 ;;		On entry : 0/0
  3386 ;;		On exit  : 0/0
  3387 ;;		Unchanged: 0/0
  3388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3389 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3390 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3392 ;;      Totals:         0      10       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3393 ;;Total ram usage:       14 bytes
  3394 ;; Hardware stack levels used:    1
  3395 ;; Hardware stack levels required when called:   12
  3396 ;; This function calls:
  3397 ;;		_vsnprintf
  3398 ;; This function is called by:
  3399 ;;		_main
  3400 ;; This function uses a non-reentrant model
  3401 ;;
  3402                           
  3403                           	psect	text1
  3404  005A7A                     __ptext1:
  3405                           	opt callstack 0
  3406  005A7A                     _snprintf:
  3407                           	opt callstack 18
  3408  005A7A  0ED8               	movlw	low (?_snprintf+6)
  3409  005A7C  0101               	movlb	1	; () banked
  3410  005A7E  6FBD               	movwf	snprintf@ap& (0+255),b
  3411  005A80  0E00               	movlw	high (?_snprintf+6)
  3412  005A82  6FBE               	movwf	(snprintf@ap+1)& (0+255),b
  3413  005A84                     
  3414                           ; BSR set to: 1
  3415  005A84  C0D2  F0BC         	movff	snprintf@s,vsnprintf@s
  3416  005A88  C0D3  F0BD         	movff	snprintf@s+1,vsnprintf@s+1
  3417  005A8C  C0D4  F0BE         	movff	snprintf@n,vsnprintf@n
  3418  005A90  C0D5  F0BF         	movff	snprintf@n+1,vsnprintf@n+1
  3419  005A94  C0D6  F0C0         	movff	snprintf@fmt,vsnprintf@fmt
  3420  005A98  C0D7  F0C1         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  3421  005A9C  0EBD               	movlw	low snprintf@ap
  3422  005A9E  0100               	movlb	0	; () banked
  3423  005AA0  6FC2               	movwf	vsnprintf@ap& (0+255),b
  3424  005AA2  0E01               	movlw	high snprintf@ap
  3425  005AA4  6FC3               	movwf	(vsnprintf@ap+1)& (0+255),b
  3426  005AA6  ECC1  F024         	call	_vsnprintf	;wreg free
  3427  005AAA  0012               	return		;funcret
  3428  005AAC                     __end_of_snprintf:
  3429                           	opt callstack 0
  3430                           
  3431 ;; *************** function _vsnprintf *****************
  3432 ;; Defined at:
  3433 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_vsnprintf.c"
  3434 ;; Parameters:    Size  Location     Type
  3435 ;;  s               2   92[BANK0 ] PTR unsigned char 
  3436 ;;		 -> string_temp(100), 
  3437 ;;  n               2   94[BANK0 ] unsigned int 
  3438 ;;  fmt             2   96[BANK0 ] PTR const unsigned char 
  3439 ;;		 -> STR_2(17), 
  3440 ;;  ap              2   98[BANK0 ] PTR PTR void 
  3441 ;;		 -> snprintf@ap(2), 
  3442 ;; Auto vars:     Size  Location     Type
  3443 ;;  f               6  108[BANK0 ] struct _IO_FILE
  3444 ;;  cnt             2  106[BANK0 ] int 
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  2   92[BANK0 ] int 
  3447 ;; Registers used:
  3448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3454 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3455 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3456 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3457 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3458 ;;Total ram usage:       22 bytes
  3459 ;; Hardware stack levels used:    1
  3460 ;; Hardware stack levels required when called:   11
  3461 ;; This function calls:
  3462 ;;		_vfprintf
  3463 ;; This function is called by:
  3464 ;;		_snprintf
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468                           	psect	text2
  3469  004982                     __ptext2:
  3470                           	opt callstack 0
  3471  004982                     _vsnprintf:
  3472                           	opt callstack 18
  3473  004982  0E80               	movlw	128
  3474  004984  0100               	movlb	0	; () banked
  3475  004986  5DBF               	subwf	(vsnprintf@n+1)& (0+255),w,b
  3476  004988  A0D8               	btfss	status,0,c
  3477  00498A  EFC9  F024         	goto	u11971
  3478  00498E  EFCB  F024         	goto	u11970
  3479  004992                     u11971:
  3480  004992  EFD3  F024         	goto	l9012
  3481  004996                     u11970:
  3482  004996                     
  3483                           ; BSR set to: 0
  3484  004996  0E00               	movlw	0
  3485  004998  6FED               	movwf	(_errno+1)& (0+255),b
  3486  00499A  0E4B               	movlw	75
  3487  00499C  6FEC               	movwf	_errno& (0+255),b
  3488  00499E                     
  3489                           ; BSR set to: 0
  3490  00499E  69BC               	setf	?_vsnprintf& (0+255),b
  3491  0049A0  69BD               	setf	(?_vsnprintf+1)& (0+255),b
  3492  0049A2  EF48  F025         	goto	l1637
  3493  0049A6                     l9012:
  3494                           
  3495                           ; BSR set to: 0
  3496  0049A6  C0BC  F0CC         	movff	vsnprintf@s,vsnprintf@f
  3497  0049AA  C0BD  F0CD         	movff	vsnprintf@s+1,vsnprintf@f+1
  3498  0049AE  51BF               	movf	(vsnprintf@n+1)& (0+255),w,b
  3499  0049B0  E109               	bnz	u11980
  3500  0049B2  0E02               	movlw	2
  3501  0049B4  5DBE               	subwf	vsnprintf@n& (0+255),w,b
  3502  0049B6  A0D8               	btfss	status,0,c
  3503  0049B8  EFE0  F024         	goto	u11981
  3504  0049BC  EFE2  F024         	goto	u11980
  3505  0049C0                     u11981:
  3506  0049C0  EFEE  F024         	goto	l9018
  3507  0049C4                     u11980:
  3508  0049C4                     
  3509                           ; BSR set to: 0
  3510  0049C4  0EFF               	movlw	255
  3511  0049C6  25BE               	addwf	vsnprintf@n& (0+255),w,b
  3512  0049C8  6FD0               	movwf	(vsnprintf@f+4)& (0+255),b
  3513  0049CA  0EFF               	movlw	255
  3514  0049CC  21BF               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  3515  0049CE  6FD1               	movwf	(vsnprintf@f+5)& (0+255),b
  3516  0049D0                     
  3517                           ; BSR set to: 0
  3518  0049D0  0E00               	movlw	0
  3519  0049D2  6FCF               	movwf	(vsnprintf@f+3)& (0+255),b
  3520  0049D4  0E00               	movlw	0
  3521  0049D6  6FCE               	movwf	(vsnprintf@f+2)& (0+255),b
  3522  0049D8  EFF6  F024         	goto	l9020
  3523  0049DC                     l9018:
  3524                           
  3525                           ; BSR set to: 0
  3526  0049DC  0E00               	movlw	0
  3527  0049DE  6FD1               	movwf	(vsnprintf@f+5)& (0+255),b
  3528  0049E0  0E01               	movlw	1
  3529  0049E2  6FD0               	movwf	(vsnprintf@f+4)& (0+255),b
  3530  0049E4  0E00               	movlw	0
  3531  0049E6  6FCF               	movwf	(vsnprintf@f+3)& (0+255),b
  3532  0049E8  0E01               	movlw	1
  3533  0049EA  6FCE               	movwf	(vsnprintf@f+2)& (0+255),b
  3534  0049EC                     l9020:
  3535                           
  3536                           ; BSR set to: 0
  3537  0049EC  0ECC               	movlw	low vsnprintf@f
  3538  0049EE  6E50               	movwf	vfprintf@fp^0,c
  3539  0049F0  0E00               	movlw	high vsnprintf@f
  3540  0049F2  6E51               	movwf	(vfprintf@fp+1)^0,c
  3541  0049F4  C0C0  F052         	movff	vsnprintf@fmt,vfprintf@fmt
  3542  0049F8  C0C1  F053         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  3543  0049FC  C0C2  F054         	movff	vsnprintf@ap,vfprintf@ap
  3544  004A00  C0C3  F055         	movff	vsnprintf@ap+1,vfprintf@ap+1
  3545  004A04  EC1D  F02A         	call	_vfprintf	;wreg free
  3546  004A08  C050  F0CA         	movff	?_vfprintf,vsnprintf@cnt
  3547  004A0C  C051  F0CB         	movff	?_vfprintf+1,vsnprintf@cnt+1
  3548  004A10  0100               	movlb	0	; () banked
  3549  004A12  51BE               	movf	vsnprintf@n& (0+255),w,b
  3550  004A14  11BF               	iorwf	(vsnprintf@n+1)& (0+255),w,b
  3551  004A16  B4D8               	btfsc	status,2,c
  3552  004A18  EF10  F025         	goto	u11991
  3553  004A1C  EF12  F025         	goto	u11990
  3554  004A20                     u11991:
  3555  004A20  EF44  F025         	goto	l9032
  3556  004A24                     u11990:
  3557  004A24                     
  3558                           ; BSR set to: 0
  3559  004A24  BFCB               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  3560  004A26  EF17  F025         	goto	u12001
  3561  004A2A  EF19  F025         	goto	u12000
  3562  004A2E                     u12001:
  3563  004A2E  EF44  F025         	goto	l9032
  3564  004A32                     u12000:
  3565  004A32                     
  3566                           ; BSR set to: 0
  3567  004A32  0EFF               	movlw	255
  3568  004A34  6FC4               	movwf	??_vsnprintf& (0+255),b
  3569  004A36  0EFF               	movlw	255
  3570  004A38  6FC5               	movwf	(??_vsnprintf+1)& (0+255),b
  3571  004A3A  C0BE  F0C6         	movff	vsnprintf@n,??_vsnprintf+2
  3572  004A3E  C0BF  F0C7         	movff	vsnprintf@n+1,??_vsnprintf+3
  3573  004A42  51C4               	movf	??_vsnprintf& (0+255),w,b
  3574  004A44  27C6               	addwf	(??_vsnprintf+2)& (0+255),f,b
  3575  004A46  51C5               	movf	(??_vsnprintf+1)& (0+255),w,b
  3576  004A48  23C7               	addwfc	(??_vsnprintf+3)& (0+255),f,b
  3577  004A4A  51C6               	movf	(??_vsnprintf+2)& (0+255),w,b
  3578  004A4C  5DCA               	subwf	vsnprintf@cnt& (0+255),w,b
  3579  004A4E  51C7               	movf	(??_vsnprintf+3)& (0+255),w,b
  3580  004A50  59CB               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  3581  004A52  A0D8               	btfss	status,0,c
  3582  004A54  EF2E  F025         	goto	u12011
  3583  004A58  EF30  F025         	goto	u12010
  3584  004A5C                     u12011:
  3585  004A5C  EF38  F025         	goto	l1642
  3586  004A60                     u12010:
  3587  004A60                     
  3588                           ; BSR set to: 0
  3589  004A60  0EFF               	movlw	255
  3590  004A62  25BE               	addwf	vsnprintf@n& (0+255),w,b
  3591  004A64  6FC8               	movwf	_vsnprintf$2128& (0+255),b
  3592  004A66  0EFF               	movlw	255
  3593  004A68  21BF               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  3594  004A6A  6FC9               	movwf	(_vsnprintf$2128+1)& (0+255),b
  3595  004A6C  EF3C  F025         	goto	l9030
  3596  004A70                     l1642:
  3597                           
  3598                           ; BSR set to: 0
  3599  004A70  C0CA  F0C8         	movff	vsnprintf@cnt,_vsnprintf$2128
  3600  004A74  C0CB  F0C9         	movff	vsnprintf@cnt+1,_vsnprintf$2128+1
  3601  004A78                     l9030:
  3602                           
  3603                           ; BSR set to: 0
  3604  004A78  51C8               	movf	_vsnprintf$2128& (0+255),w,b
  3605  004A7A  25BC               	addwf	vsnprintf@s& (0+255),w,b
  3606  004A7C  6ED9               	movwf	fsr2l,c
  3607  004A7E  51C9               	movf	(_vsnprintf$2128+1)& (0+255),w,b
  3608  004A80  21BD               	addwfc	(vsnprintf@s+1)& (0+255),w,b
  3609  004A82  6EDA               	movwf	fsr2h,c
  3610  004A84  0E00               	movlw	0
  3611  004A86  6EDF               	movwf	indf2,c
  3612  004A88                     l9032:
  3613                           
  3614                           ; BSR set to: 0
  3615  004A88  C0CA  F0BC         	movff	vsnprintf@cnt,?_vsnprintf
  3616  004A8C  C0CB  F0BD         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  3617  004A90                     l1637:
  3618                           
  3619                           ; BSR set to: 0
  3620  004A90  0012               	return		;funcret
  3621  004A92                     __end_of_vsnprintf:
  3622                           	opt callstack 0
  3623                           
  3624 ;; *************** function _vfprintf *****************
  3625 ;; Defined at:
  3626 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  3629 ;;		 -> vsnprintf@f(6), 
  3630 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  3631 ;;		 -> STR_2(17), 
  3632 ;;  ap              2   83[COMRAM] PTR PTR void 
  3633 ;;		 -> snprintf@ap(2), 
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  3636 ;;		 -> STR_2(17), 
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  2   79[COMRAM] int 
  3639 ;; Registers used:
  3640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3646 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3647 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3649 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3650 ;;Total ram usage:        8 bytes
  3651 ;; Hardware stack levels used:    1
  3652 ;; Hardware stack levels required when called:   10
  3653 ;; This function calls:
  3654 ;;		_vfpfcnvrt
  3655 ;; This function is called by:
  3656 ;;		_vsnprintf
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           	psect	text3
  3661  00543A                     __ptext3:
  3662                           	opt callstack 0
  3663  00543A                     _vfprintf:
  3664                           	opt callstack 18
  3665  00543A                     
  3666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3667  00543A  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  3668  00543E  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3669  005442                     
  3670                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3671  005442  0E00               	movlw	0
  3672  005444  0100               	movlb	0	; () banked
  3673  005446  6FEF               	movwf	(_nout+1)& (0+255),b
  3674  005448  0E00               	movlw	0
  3675  00544A  6FEE               	movwf	_nout& (0+255),b
  3676                           
  3677                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3678  00544C  EF3B  F02A         	goto	l9002
  3679  005450                     l9000:
  3680                           
  3681                           ; BSR set to: 0
  3682                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3683  005450  C050  F046         	movff	vfprintf@fp,vfpfcnvrt@fp
  3684  005454  C051  F047         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3685  005458  0E56               	movlw	low vfprintf@cfmt
  3686  00545A  6E48               	movwf	vfpfcnvrt@fmt^0,c
  3687  00545C  0E00               	movlw	high vfprintf@cfmt
  3688  00545E  6E49               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3689  005460  C054  F04A         	movff	vfprintf@ap,vfpfcnvrt@ap
  3690  005464  C055  F04B         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3691  005468  EC21  F000         	call	_vfpfcnvrt	;wreg free
  3692  00546C  5046               	movf	?_vfpfcnvrt^0,w,c
  3693  00546E  0100               	movlb	0	; () banked
  3694  005470  27EE               	addwf	_nout& (0+255),f,b
  3695  005472  5047               	movf	(?_vfpfcnvrt+1)^0,w,c
  3696  005474  23EF               	addwfc	(_nout+1)& (0+255),f,b
  3697  005476                     l9002:
  3698                           
  3699                           ; BSR set to: 0
  3700                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3701  005476  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  3702  00547A  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3703  00547E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3704  00547E  6AF8               	clrf	tblptru,c
  3705  005480                     	endif
  3706  005480                     	if	0	;tblptru may be non-zero
  3707  005480                     	endif
  3708  005480  0008               	tblrd		*
  3709  005482  50F5               	movf	tablat,w,c
  3710  005484  0900               	iorlw	0
  3711  005486  A4D8               	btfss	status,2,c
  3712  005488  EF48  F02A         	goto	u11961
  3713  00548C  EF4A  F02A         	goto	u11960
  3714  005490                     u11961:
  3715  005490  EF28  F02A         	goto	l9000
  3716  005494                     u11960:
  3717  005494                     
  3718                           ; BSR set to: 0
  3719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3720  005494  C0EE  F050         	movff	_nout,?_vfprintf
  3721  005498  C0EF  F051         	movff	_nout+1,?_vfprintf+1
  3722  00549C                     
  3723                           ; BSR set to: 0
  3724  00549C  0012               	return		;funcret
  3725  00549E                     __end_of_vfprintf:
  3726                           	opt callstack 0
  3727                           
  3728 ;; *************** function _vfpfcnvrt *****************
  3729 ;; Defined at:
  3730 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
  3733 ;;		 -> vsnprintf@f(6), 
  3734 ;;  fmt             2   71[COMRAM] PTR PTR unsigned char 
  3735 ;;		 -> vfprintf@cfmt(2), 
  3736 ;;  ap              2   73[COMRAM] PTR PTR void 
  3737 ;;		 -> snprintf@ap(2), 
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;  llu             8   84[BANK0 ] unsigned long long 
  3740 ;;  ll              8   73[BANK0 ] long long 
  3741 ;;  f               4   66[BANK0 ] long long 
  3742 ;;  ct              3   70[BANK0 ] unsigned char [3]
  3743 ;;  vp              2   81[BANK0 ] PTR void 
  3744 ;;		 -> ?_snprintf(2), 
  3745 ;;  done            2   58[BANK0 ] int 
  3746 ;;  cp              2   56[BANK0 ] PTR unsigned char 
  3747 ;;		 -> ?_snprintf(2), 
  3748 ;;  i               2    0        int 
  3749 ;;  c               1   83[BANK0 ] unsigned char 
  3750 ;; Return value:  Size  Location     Type
  3751 ;;                  2   69[COMRAM] int 
  3752 ;; Registers used:
  3753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3754 ;; Tracked objects:
  3755 ;;		On entry : 0/0
  3756 ;;		On exit  : 0/0
  3757 ;;		Unchanged: 0/0
  3758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3759 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3760 ;;      Locals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3761 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3762 ;;      Totals:        10      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3763 ;;Total ram usage:       46 bytes
  3764 ;; Hardware stack levels used:    1
  3765 ;; Hardware stack levels required when called:    9
  3766 ;; This function calls:
  3767 ;;		_atoi
  3768 ;;		_ctoa
  3769 ;;		_dtoa
  3770 ;;		_efgtoa
  3771 ;;		_fputc
  3772 ;;		_isdigit
  3773 ;;		_isupper
  3774 ;;		_otoa
  3775 ;;		_stoa
  3776 ;;		_strncmp
  3777 ;;		_tolower
  3778 ;;		_utoa
  3779 ;;		_xtoa
  3780 ;; This function is called by:
  3781 ;;		_vfprintf
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           
  3785                           	psect	text4
  3786  000042                     __ptext4:
  3787                           	opt callstack 0
  3788  000042                     _vfpfcnvrt:
  3789                           	opt callstack 18
  3790  000042                     
  3791                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3792  000042  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3793  000046  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3794  00004A  CFDE FFF6          	movff	postinc2,tblptrl
  3795  00004E  CFDD FFF7          	movff	postdec2,tblptrh
  3796  000052                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3797  000052  6AF8               	clrf	tblptru,c
  3798  000054                     	endif
  3799  000054                     	if	0	;tblptru may be non-zero
  3800  000054                     	endif
  3801  000054  0008               	tblrd		*
  3802  000056  50F5               	movf	tablat,w,c
  3803  000058  0A25               	xorlw	37
  3804  00005A  A4D8               	btfss	status,2,c
  3805  00005C  EF32  F000         	goto	u11441
  3806  000060  EF34  F000         	goto	u11440
  3807  000064                     u11441:
  3808  000064  EF76  F00A         	goto	l8982
  3809  000068                     u11440:
  3810  000068                     
  3811                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3812  000068  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3813  00006C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3814  000070  2ADE               	incf	postinc2,f,c
  3815  000072  0E00               	movlw	0
  3816  000074  22DD               	addwfc	postdec2,f,c
  3817  000076                     
  3818                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3819  000076  0E00               	movlw	0
  3820  000078  0100               	movlb	0	; () banked
  3821  00007A  6FF1               	movwf	(_width+1)& (0+255),b
  3822  00007C  0E00               	movlw	0
  3823  00007E  6FF0               	movwf	_width& (0+255),b
  3824  000080  C0F0  F0F2         	movff	_width,_flags
  3825  000084  C0F1  F0F3         	movff	_width+1,_flags+1
  3826  000088                     
  3827                           ; BSR set to: 0
  3828                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3829  000088  6858               	setf	_prec^0,c
  3830  00008A  6859               	setf	(_prec+1)^0,c
  3831  00008C                     
  3832                           ; BSR set to: 0
  3833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  3834  00008C  0E00               	movlw	0
  3835  00008E  6F9B               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3836  000090  0E00               	movlw	0
  3837  000092  6F9A               	movwf	vfpfcnvrt@done& (0+255),b
  3838                           
  3839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  3840  000094  EF93  F000         	goto	l8662
  3841  000098                     l8636:
  3842                           
  3843                           ; BSR set to: 0
  3844                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  3845  000098  81F2               	bsf	_flags& (0+255),0,b
  3846  00009A                     l8638:
  3847                           
  3848                           ; BSR set to: 0
  3849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  3850  00009A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3851  00009E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3852  0000A2  2ADE               	incf	postinc2,f,c
  3853  0000A4  0E00               	movlw	0
  3854  0000A6  22DD               	addwfc	postdec2,f,c
  3855                           
  3856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  3857  0000A8  EF93  F000         	goto	l8662
  3858  0000AC                     l8640:
  3859                           
  3860                           ; BSR set to: 0
  3861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  3862  0000AC  83F2               	bsf	_flags& (0+255),1,b
  3863  0000AE  EF4D  F000         	goto	l8638
  3864  0000B2                     l8644:
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  3868  0000B2  85F2               	bsf	_flags& (0+255),2,b
  3869  0000B4  EF4D  F000         	goto	l8638
  3870  0000B8                     l8648:
  3871                           
  3872                           ; BSR set to: 0
  3873                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  3874  0000B8  87F2               	bsf	_flags& (0+255),3,b
  3875  0000BA  EF4D  F000         	goto	l8638
  3876  0000BE                     l8652:
  3877                           
  3878                           ; BSR set to: 0
  3879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  3880  0000BE  89F2               	bsf	_flags& (0+255),4,b
  3881  0000C0  EF4D  F000         	goto	l8638
  3882  0000C4                     l8656:
  3883                           
  3884                           ; BSR set to: 0
  3885                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  3886  0000C4  0E00               	movlw	0
  3887  0000C6  6F9B               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3888  0000C8  0E01               	movlw	1
  3889  0000CA  6F9A               	movwf	vfpfcnvrt@done& (0+255),b
  3890                           
  3891                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  3892  0000CC  EF93  F000         	goto	l8662
  3893  0000D0                     l8660:
  3894                           
  3895                           ; BSR set to: 0
  3896  0000D0  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3897  0000D4  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3898  0000D8  CFDE FFF6          	movff	postinc2,tblptrl
  3899  0000DC  CFDD FFF7          	movff	postdec2,tblptrh
  3900  0000E0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3901  0000E0  6AF8               	clrf	tblptru,c
  3902  0000E2                     	endif
  3903  0000E2                     	if	0	;tblptru may be non-zero
  3904  0000E2                     	endif
  3905  0000E2  0008               	tblrd		*
  3906  0000E4  50F5               	movf	tablat,w,c
  3907  0000E6  6E4C               	movwf	??_vfpfcnvrt^0,c
  3908  0000E8  6A4D               	clrf	(??_vfpfcnvrt+1)^0,c
  3909                           
  3910                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3911                           ; Switch size 1, requested type "simple"
  3912                           ; Number of cases is 1, Range of values is 0 to 0
  3913                           ; switch strategies available:
  3914                           ; Name         Instructions Cycles
  3915                           ; simple_byte            4     3 (average)
  3916                           ;	Chosen strategy is simple_byte
  3917  0000EA  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
  3918  0000EC  0A00               	xorlw	0	; case 0
  3919  0000EE  B4D8               	btfsc	status,2,c
  3920  0000F0  EF7C  F000         	goto	l9116
  3921  0000F4  EF62  F000         	goto	l8656
  3922  0000F8                     l9116:
  3923                           
  3924                           ; BSR set to: 0
  3925                           ; Switch size 1, requested type "simple"
  3926                           ; Number of cases is 5, Range of values is 32 to 48
  3927                           ; switch strategies available:
  3928                           ; Name         Instructions Cycles
  3929                           ; simple_byte           16     9 (average)
  3930                           ;	Chosen strategy is simple_byte
  3931  0000F8  504C               	movf	??_vfpfcnvrt^0,w,c
  3932  0000FA  0A20               	xorlw	32	; case 32
  3933  0000FC  B4D8               	btfsc	status,2,c
  3934  0000FE  EF5C  F000         	goto	l8648
  3935  000102  0A03               	xorlw	3	; case 35
  3936  000104  B4D8               	btfsc	status,2,c
  3937  000106  EF5F  F000         	goto	l8652
  3938  00010A  0A08               	xorlw	8	; case 43
  3939  00010C  B4D8               	btfsc	status,2,c
  3940  00010E  EF59  F000         	goto	l8644
  3941  000112  0A06               	xorlw	6	; case 45
  3942  000114  B4D8               	btfsc	status,2,c
  3943  000116  EF4C  F000         	goto	l8636
  3944  00011A  0A1D               	xorlw	29	; case 48
  3945  00011C  B4D8               	btfsc	status,2,c
  3946  00011E  EF56  F000         	goto	l8640
  3947  000122  EF62  F000         	goto	l8656
  3948  000126                     l8662:
  3949                           
  3950                           ; BSR set to: 0
  3951                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  3952  000126  519A               	movf	vfpfcnvrt@done& (0+255),w,b
  3953  000128  119B               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  3954  00012A  B4D8               	btfsc	status,2,c
  3955  00012C  EF9A  F000         	goto	u11451
  3956  000130  EF9C  F000         	goto	u11450
  3957  000134                     u11451:
  3958  000134  EF68  F000         	goto	l8660
  3959  000138                     u11450:
  3960  000138                     
  3961                           ; BSR set to: 0
  3962                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  3963  000138  A1F2               	btfss	_flags& (0+255),0,b
  3964  00013A  EFA1  F000         	goto	u11461
  3965  00013E  EFA3  F000         	goto	u11460
  3966  000142                     u11461:
  3967  000142  EFA4  F000         	goto	l8666
  3968  000146                     u11460:
  3969  000146                     
  3970                           ; BSR set to: 0
  3971                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  3972  000146  93F2               	bcf	_flags& (0+255),1,b
  3973  000148                     l8666:
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  3977  000148  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3978  00014C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3979  000150  CFDE FFF6          	movff	postinc2,tblptrl
  3980  000154  CFDD FFF7          	movff	postdec2,tblptrh
  3981  000158                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3982  000158  6AF8               	clrf	tblptru,c
  3983  00015A                     	endif
  3984  00015A                     	if	0	;tblptru may be non-zero
  3985  00015A                     	endif
  3986  00015A  0008               	tblrd		*
  3987  00015C  50F5               	movf	tablat,w,c
  3988  00015E  0A2A               	xorlw	42
  3989  000160  A4D8               	btfss	status,2,c
  3990  000162  EFB5  F000         	goto	u11471
  3991  000166  EFB7  F000         	goto	u11470
  3992  00016A                     u11471:
  3993  00016A  EFE0  F000         	goto	l8674
  3994  00016E                     u11470:
  3995  00016E                     
  3996                           ; BSR set to: 0
  3997                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  3998  00016E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3999  000172  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4000  000176  2ADE               	incf	postinc2,f,c
  4001  000178  0E00               	movlw	0
  4002  00017A  22DD               	addwfc	postdec2,f,c
  4003                           
  4004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4005  00017C  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4006  000180  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4007  000184  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4008  000188  0E02               	movlw	2
  4009  00018A  26DE               	addwf	postinc2,f,c
  4010  00018C  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4011  000190  0E00               	movlw	0
  4012  000192  22DD               	addwfc	postdec2,f,c
  4013  000194  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4014  000198  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4015  00019C  CFDE F0F0          	movff	postinc2,_width
  4016  0001A0  CFDD F0F1          	movff	postdec2,_width+1
  4017  0001A4                     
  4018                           ; BSR set to: 0
  4019                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  4020  0001A4  BFF1               	btfsc	(_width+1)& (0+255),7,b
  4021  0001A6  EFD9  F000         	goto	u11480
  4022  0001AA  EFD7  F000         	goto	u11481
  4023  0001AE                     u11481:
  4024  0001AE  EF25  F001         	goto	l8684
  4025  0001B2                     u11480:
  4026  0001B2                     
  4027                           ; BSR set to: 0
  4028                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  4029  0001B2  81F2               	bsf	_flags& (0+255),0,b
  4030                           
  4031                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  4032  0001B4  6DF0               	negf	_width& (0+255),b
  4033  0001B6  1FF1               	comf	(_width+1)& (0+255),f,b
  4034  0001B8  B0D8               	btfsc	status,0,c
  4035  0001BA  2BF1               	incf	(_width+1)& (0+255),f,b
  4036  0001BC  EF25  F001         	goto	l8684
  4037  0001C0                     l8674:
  4038                           
  4039                           ; BSR set to: 0
  4040                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  4041  0001C0  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4042  0001C4  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4043  0001C8  CFDE F00B          	movff	postinc2,atoi@s
  4044  0001CC  CFDD F00C          	movff	postdec2,atoi@s+1
  4045  0001D0  EC2E  F01F         	call	_atoi	;wreg free
  4046  0001D4  C00B  F0F0         	movff	?_atoi,_width
  4047  0001D8  C00C  F0F1         	movff	?_atoi+1,_width+1
  4048                           
  4049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4050  0001DC  EFF7  F000         	goto	l8678
  4051  0001E0                     l8676:
  4052                           
  4053                           ; BSR set to: 0
  4054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  4055  0001E0  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4056  0001E4  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4057  0001E8  2ADE               	incf	postinc2,f,c
  4058  0001EA  0E00               	movlw	0
  4059  0001EC  22DD               	addwfc	postdec2,f,c
  4060  0001EE                     l8678:
  4061  0001EE  0ED0               	movlw	208
  4062  0001F0  6E4C               	movwf	??_vfpfcnvrt^0,c
  4063  0001F2  0EFF               	movlw	255
  4064  0001F4  6E4D               	movwf	(??_vfpfcnvrt+1)^0,c
  4065  0001F6  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4066  0001FA  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4067  0001FE  CFDE FFF6          	movff	postinc2,tblptrl
  4068  000202  CFDD FFF7          	movff	postdec2,tblptrh
  4069  000206                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4070  000206  6AF8               	clrf	tblptru,c
  4071  000208                     	endif
  4072  000208                     	if	0	;tblptru may be non-zero
  4073  000208                     	endif
  4074  000208  0008               	tblrd		*
  4075  00020A  50F5               	movf	tablat,w,c
  4076  00020C  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  4077  00020E  6A4F               	clrf	(??_vfpfcnvrt+3)^0,c
  4078  000210  504C               	movf	??_vfpfcnvrt^0,w,c
  4079  000212  264E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4080  000214  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
  4081  000216  224F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4082  000218  504F               	movf	(??_vfpfcnvrt+3)^0,w,c
  4083  00021A  E10A               	bnz	u11490
  4084  00021C  0E0A               	movlw	10
  4085  00021E  5C4E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4086  000220  A0D8               	btfss	status,0,c
  4087  000222  EF15  F001         	goto	u11491
  4088  000226  EF18  F001         	goto	u11490
  4089  00022A                     u11491:
  4090  00022A  0E01               	movlw	1
  4091  00022C  EF19  F001         	goto	u11500
  4092  000230                     u11490:
  4093  000230  0E00               	movlw	0
  4094  000232                     u11500:
  4095  000232  0100               	movlb	0	; () banked
  4096  000234  6F9C               	movwf	_vfpfcnvrt$1375& (0+255),b
  4097  000236  6B9D               	clrf	(_vfpfcnvrt$1375+1)& (0+255),b
  4098  000238                     
  4099                           ; BSR set to: 0
  4100  000238  519C               	movf	_vfpfcnvrt$1375& (0+255),w,b
  4101  00023A  119D               	iorwf	(_vfpfcnvrt$1375+1)& (0+255),w,b
  4102  00023C  A4D8               	btfss	status,2,c
  4103  00023E  EF23  F001         	goto	u11511
  4104  000242  EF25  F001         	goto	u11510
  4105  000246                     u11511:
  4106  000246  EFF0  F000         	goto	l8676
  4107  00024A                     u11510:
  4108  00024A                     l8684:
  4109                           
  4110                           ; BSR set to: 0
  4111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  4112  00024A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4113  00024E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4114  000252  CFDE FFF6          	movff	postinc2,tblptrl
  4115  000256  CFDD FFF7          	movff	postdec2,tblptrh
  4116  00025A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4117  00025A  6AF8               	clrf	tblptru,c
  4118  00025C                     	endif
  4119  00025C                     	if	0	;tblptru may be non-zero
  4120  00025C                     	endif
  4121  00025C  0008               	tblrd		*
  4122  00025E  50F5               	movf	tablat,w,c
  4123  000260  0A2E               	xorlw	46
  4124  000262  A4D8               	btfss	status,2,c
  4125  000264  EF36  F001         	goto	u11521
  4126  000268  EF38  F001         	goto	u11520
  4127  00026C                     u11521:
  4128  00026C  EFB8  F001         	goto	l8704
  4129  000270                     u11520:
  4130  000270                     
  4131                           ; BSR set to: 0
  4132                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  4133  000270  0E00               	movlw	0
  4134  000272  6E59               	movwf	(_prec+1)^0,c
  4135  000274  0E00               	movlw	0
  4136  000276  6E58               	movwf	_prec^0,c
  4137  000278                     
  4138                           ; BSR set to: 0
  4139                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  4140  000278  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4141  00027C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4142  000280  2ADE               	incf	postinc2,f,c
  4143  000282  0E00               	movlw	0
  4144  000284  22DD               	addwfc	postdec2,f,c
  4145  000286                     
  4146                           ; BSR set to: 0
  4147                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  4148  000286  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4149  00028A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4150  00028E  CFDE FFF6          	movff	postinc2,tblptrl
  4151  000292  CFDD FFF7          	movff	postdec2,tblptrh
  4152  000296                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4153  000296  6AF8               	clrf	tblptru,c
  4154  000298                     	endif
  4155  000298                     	if	0	;tblptru may be non-zero
  4156  000298                     	endif
  4157  000298  0008               	tblrd		*
  4158  00029A  50F5               	movf	tablat,w,c
  4159  00029C  0A2A               	xorlw	42
  4160  00029E  A4D8               	btfss	status,2,c
  4161  0002A0  EF54  F001         	goto	u11531
  4162  0002A4  EF56  F001         	goto	u11530
  4163  0002A8                     u11531:
  4164  0002A8  EF73  F001         	goto	l8694
  4165  0002AC                     u11530:
  4166  0002AC                     
  4167                           ; BSR set to: 0
  4168                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  4169  0002AC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4170  0002B0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4171  0002B4  2ADE               	incf	postinc2,f,c
  4172  0002B6  0E00               	movlw	0
  4173  0002B8  22DD               	addwfc	postdec2,f,c
  4174                           
  4175                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4176  0002BA  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4177  0002BE  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4178  0002C2  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4179  0002C6  0E02               	movlw	2
  4180  0002C8  26DE               	addwf	postinc2,f,c
  4181  0002CA  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4182  0002CE  0E00               	movlw	0
  4183  0002D0  22DD               	addwfc	postdec2,f,c
  4184  0002D2  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4185  0002D6  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4186  0002DA  CFDE F058          	movff	postinc2,_prec
  4187  0002DE  CFDD F059          	movff	postdec2,_prec+1
  4188                           
  4189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  4190  0002E2  EFB8  F001         	goto	l8704
  4191  0002E6                     l8694:
  4192                           
  4193                           ; BSR set to: 0
  4194                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  4195  0002E6  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4196  0002EA  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4197  0002EE  CFDE F00B          	movff	postinc2,atoi@s
  4198  0002F2  CFDD F00C          	movff	postdec2,atoi@s+1
  4199  0002F6  EC2E  F01F         	call	_atoi	;wreg free
  4200  0002FA  C00B  F058         	movff	?_atoi,_prec
  4201  0002FE  C00C  F059         	movff	?_atoi+1,_prec+1
  4202                           
  4203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4204  000302  EF8A  F001         	goto	l8698
  4205  000306                     l8696:
  4206                           
  4207                           ; BSR set to: 0
  4208                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  4209  000306  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4210  00030A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4211  00030E  2ADE               	incf	postinc2,f,c
  4212  000310  0E00               	movlw	0
  4213  000312  22DD               	addwfc	postdec2,f,c
  4214  000314                     l8698:
  4215  000314  0ED0               	movlw	208
  4216  000316  6E4C               	movwf	??_vfpfcnvrt^0,c
  4217  000318  0EFF               	movlw	255
  4218  00031A  6E4D               	movwf	(??_vfpfcnvrt+1)^0,c
  4219  00031C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4220  000320  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4221  000324  CFDE FFF6          	movff	postinc2,tblptrl
  4222  000328  CFDD FFF7          	movff	postdec2,tblptrh
  4223  00032C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4224  00032C  6AF8               	clrf	tblptru,c
  4225  00032E                     	endif
  4226  00032E                     	if	0	;tblptru may be non-zero
  4227  00032E                     	endif
  4228  00032E  0008               	tblrd		*
  4229  000330  50F5               	movf	tablat,w,c
  4230  000332  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  4231  000334  6A4F               	clrf	(??_vfpfcnvrt+3)^0,c
  4232  000336  504C               	movf	??_vfpfcnvrt^0,w,c
  4233  000338  264E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4234  00033A  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
  4235  00033C  224F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4236  00033E  504F               	movf	(??_vfpfcnvrt+3)^0,w,c
  4237  000340  E10A               	bnz	u11540
  4238  000342  0E0A               	movlw	10
  4239  000344  5C4E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4240  000346  A0D8               	btfss	status,0,c
  4241  000348  EFA8  F001         	goto	u11541
  4242  00034C  EFAB  F001         	goto	u11540
  4243  000350                     u11541:
  4244  000350  0E01               	movlw	1
  4245  000352  EFAC  F001         	goto	u11550
  4246  000356                     u11540:
  4247  000356  0E00               	movlw	0
  4248  000358                     u11550:
  4249  000358  0100               	movlb	0	; () banked
  4250  00035A  6F9E               	movwf	_vfpfcnvrt$1376& (0+255),b
  4251  00035C  6B9F               	clrf	(_vfpfcnvrt$1376+1)& (0+255),b
  4252  00035E                     
  4253                           ; BSR set to: 0
  4254  00035E  519E               	movf	_vfpfcnvrt$1376& (0+255),w,b
  4255  000360  119F               	iorwf	(_vfpfcnvrt$1376+1)& (0+255),w,b
  4256  000362  A4D8               	btfss	status,2,c
  4257  000364  EFB6  F001         	goto	u11561
  4258  000368  EFB8  F001         	goto	u11560
  4259  00036C                     u11561:
  4260  00036C  EF83  F001         	goto	l8696
  4261  000370                     u11560:
  4262  000370                     l8704:
  4263                           
  4264                           ; BSR set to: 0
  4265                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  4266  000370  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4267  000374  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4268  000378  CFDE FFF6          	movff	postinc2,tblptrl
  4269  00037C  CFDD FFF7          	movff	postdec2,tblptrh
  4270  000380                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4271  000380  6AF8               	clrf	tblptru,c
  4272  000382                     	endif
  4273  000382                     	if	0	;tblptru may be non-zero
  4274  000382                     	endif
  4275  000382  0008               	tblrd		*
  4276  000384  50F5               	movf	tablat,w,c
  4277  000386  6E0A               	movwf	tolower@c^0,c
  4278  000388  6A0B               	clrf	(tolower@c+1)^0,c
  4279  00038A  EC4F  F02A         	call	_tolower	;wreg free
  4280  00038E  500A               	movf	?_tolower^0,w,c
  4281  000390  0100               	movlb	0	; () banked
  4282  000392  6FA6               	movwf	vfpfcnvrt@ct& (0+255),b
  4283  000394                     
  4284                           ; BSR set to: 0
  4285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  4286  000394  51A6               	movf	vfpfcnvrt@ct& (0+255),w,b
  4287  000396  B4D8               	btfsc	status,2,c
  4288  000398  EFD0  F001         	goto	u11571
  4289  00039C  EFD2  F001         	goto	u11570
  4290  0003A0                     u11571:
  4291  0003A0  EF0E  F002         	goto	l8714
  4292  0003A4                     u11570:
  4293  0003A4                     
  4294                           ; BSR set to: 0
  4295                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  4296  0003A4  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4297  0003A8  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4298  0003AC  CFDE F04C          	movff	postinc2,??_vfpfcnvrt
  4299  0003B0  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+1
  4300  0003B4  0E01               	movlw	1
  4301  0003B6  264C               	addwf	??_vfpfcnvrt^0,f,c
  4302  0003B8  0E00               	movlw	0
  4303  0003BA  224D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4304  0003BC  C04C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4305  0003C0  C04D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4306  0003C4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4307  0003C4  6AF8               	clrf	tblptru,c
  4308  0003C6                     	endif
  4309  0003C6                     	if	0	;tblptru may be non-zero
  4310  0003C6                     	endif
  4311  0003C6  0008               	tblrd		*
  4312  0003C8  50F5               	movf	tablat,w,c
  4313  0003CA  6E0A               	movwf	tolower@c^0,c
  4314  0003CC  6A0B               	clrf	(tolower@c+1)^0,c
  4315  0003CE  EC4F  F02A         	call	_tolower	;wreg free
  4316  0003D2  500A               	movf	?_tolower^0,w,c
  4317  0003D4  0100               	movlb	0	; () banked
  4318  0003D6  6FA7               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  4319  0003D8                     
  4320                           ; BSR set to: 0
  4321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  4322  0003D8  51A7               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  4323  0003DA  B4D8               	btfsc	status,2,c
  4324  0003DC  EFF2  F001         	goto	u11581
  4325  0003E0  EFF4  F001         	goto	u11580
  4326  0003E4                     u11581:
  4327  0003E4  EF0E  F002         	goto	l8714
  4328  0003E8                     u11580:
  4329  0003E8                     
  4330                           ; BSR set to: 0
  4331                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  4332  0003E8  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4333  0003EC  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4334  0003F0  CFDE F04C          	movff	postinc2,??_vfpfcnvrt
  4335  0003F4  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+1
  4336  0003F8  0E02               	movlw	2
  4337  0003FA  264C               	addwf	??_vfpfcnvrt^0,f,c
  4338  0003FC  0E00               	movlw	0
  4339  0003FE  224D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4340  000400  C04C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4341  000404  C04D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4342  000408                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4343  000408  6AF8               	clrf	tblptru,c
  4344  00040A                     	endif
  4345  00040A                     	if	0	;tblptru may be non-zero
  4346  00040A                     	endif
  4347  00040A  0008               	tblrd		*
  4348  00040C  50F5               	movf	tablat,w,c
  4349  00040E  6E0A               	movwf	tolower@c^0,c
  4350  000410  6A0B               	clrf	(tolower@c+1)^0,c
  4351  000412  EC4F  F02A         	call	_tolower	;wreg free
  4352  000416  500A               	movf	?_tolower^0,w,c
  4353  000418  0100               	movlb	0	; () banked
  4354  00041A  6FA8               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4355  00041C                     l8714:
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  4359  00041C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4360  000420  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4361  000424  CFDE FFF6          	movff	postinc2,tblptrl
  4362  000428  CFDD FFF7          	movff	postdec2,tblptrh
  4363  00042C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4364  00042C  6AF8               	clrf	tblptru,c
  4365  00042E                     	endif
  4366  00042E                     	if	0	;tblptru may be non-zero
  4367  00042E                     	endif
  4368  00042E  0008               	tblrd		*
  4369  000430  50F5               	movf	tablat,w,c
  4370  000432  0A63               	xorlw	99
  4371  000434  A4D8               	btfss	status,2,c
  4372  000436  EF1F  F002         	goto	u11591
  4373  00043A  EF21  F002         	goto	u11590
  4374  00043E                     u11591:
  4375  00043E  EF48  F002         	goto	l8722
  4376  000442                     u11590:
  4377  000442                     
  4378                           ; BSR set to: 0
  4379                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  4380  000442  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4381  000446  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4382  00044A  2ADE               	incf	postinc2,f,c
  4383  00044C  0E00               	movlw	0
  4384  00044E  22DD               	addwfc	postdec2,f,c
  4385                           
  4386                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4387  000450  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4388  000454  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4389  000458  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4390  00045C  0E02               	movlw	2
  4391  00045E  26DE               	addwf	postinc2,f,c
  4392  000460  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4393  000464  0E00               	movlw	0
  4394  000466  22DD               	addwfc	postdec2,f,c
  4395  000468  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4396  00046C  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4397  000470  50DF               	movf	indf2,w,c
  4398  000472  6FB3               	movwf	vfpfcnvrt@c& (0+255),b
  4399  000474                     
  4400                           ; BSR set to: 0
  4401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  4402  000474  C046  F01F         	movff	vfpfcnvrt@fp,ctoa@fp
  4403  000478  C047  F020         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4404  00047C  C0B3  F021         	movff	vfpfcnvrt@c,ctoa@c
  4405  000480  EC0C  F02B         	call	_ctoa	;wreg free
  4406  000484  C01F  F046         	movff	?_ctoa,?_vfpfcnvrt
  4407  000488  C020  F047         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4408  00048C  EF92  F00A         	goto	l731
  4409  000490                     l8722:
  4410                           
  4411                           ; BSR set to: 0
  4412                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
  4413  000490  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4414  000494  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4415  000498  CFDE F004          	movff	postinc2,strncmp@_l
  4416  00049C  CFDD F005          	movff	postdec2,strncmp@_l+1
  4417  0004A0  0EC6               	movlw	low STR_11
  4418  0004A2  6E06               	movwf	strncmp@_r^0,c
  4419  0004A4  0EFF               	movlw	high STR_11
  4420  0004A6  6E07               	movwf	(strncmp@_r+1)^0,c
  4421  0004A8  0E00               	movlw	0
  4422  0004AA  6E09               	movwf	(strncmp@n+1)^0,c
  4423  0004AC  0E03               	movlw	3
  4424  0004AE  6E08               	movwf	strncmp@n^0,c
  4425  0004B0  EC2E  F024         	call	_strncmp	;wreg free
  4426  0004B4  5004               	movf	?_strncmp^0,w,c
  4427  0004B6  1005               	iorwf	(?_strncmp+1)^0,w,c
  4428  0004B8  B4D8               	btfsc	status,2,c
  4429  0004BA  EF61  F002         	goto	u11601
  4430  0004BE  EF63  F002         	goto	u11600
  4431  0004C2                     u11601:
  4432  0004C2  EF7E  F002         	goto	l8726
  4433  0004C6                     u11600:
  4434  0004C6  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4435  0004CA  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4436  0004CE  CFDE F004          	movff	postinc2,strncmp@_l
  4437  0004D2  CFDD F005          	movff	postdec2,strncmp@_l+1
  4438  0004D6  0ECE               	movlw	low STR_15
  4439  0004D8  6E06               	movwf	strncmp@_r^0,c
  4440  0004DA  0EFF               	movlw	high STR_15
  4441  0004DC  6E07               	movwf	(strncmp@_r+1)^0,c
  4442  0004DE  0E00               	movlw	0
  4443  0004E0  6E09               	movwf	(strncmp@n+1)^0,c
  4444  0004E2  0E03               	movlw	3
  4445  0004E4  6E08               	movwf	strncmp@n^0,c
  4446  0004E6  EC2E  F024         	call	_strncmp	;wreg free
  4447  0004EA  5004               	movf	?_strncmp^0,w,c
  4448  0004EC  1005               	iorwf	(?_strncmp+1)^0,w,c
  4449  0004EE  A4D8               	btfss	status,2,c
  4450  0004F0  EF7C  F002         	goto	u11611
  4451  0004F4  EF7E  F002         	goto	u11610
  4452  0004F8                     u11611:
  4453  0004F8  EFBF  F002         	goto	l8732
  4454  0004FC                     u11610:
  4455  0004FC                     l8726:
  4456                           
  4457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
  4458  0004FC  0E03               	movlw	3
  4459  0004FE  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4460  000502  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4461  000506  26DE               	addwf	postinc2,f,c
  4462  000508  0E00               	movlw	0
  4463  00050A  22DD               	addwfc	postdec2,f,c
  4464                           
  4465                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4466  00050C  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4467  000510  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4468  000514  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4469  000518  0E02               	movlw	2
  4470  00051A  26DE               	addwf	postinc2,f,c
  4471  00051C  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4472  000520  0E00               	movlw	0
  4473  000522  22DD               	addwfc	postdec2,f,c
  4474  000524  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4475  000528  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4476  00052C  50DF               	movf	indf2,w,c
  4477  00052E  0100               	movlb	0	; () banked
  4478  000530  6FA9               	movwf	vfpfcnvrt@ll& (0+255),b
  4479  000532  0E00               	movlw	0
  4480  000534  BFA9               	btfsc	vfpfcnvrt@ll& (0+255),7,b
  4481  000536  0EFF               	movlw	-1
  4482  000538  6FAA               	movwf	(vfpfcnvrt@ll+1)& (0+255),b
  4483  00053A  6FAB               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4484  00053C  6FAC               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4485  00053E  6FAD               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4486  000540  6FAE               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4487  000542  6FAF               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4488  000544  6FB0               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4489  000546                     l8728:
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
  4493  000546  C046  F01F         	movff	vfpfcnvrt@fp,dtoa@fp
  4494  00054A  C047  F020         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4495  00054E  C0A9  F021         	movff	vfpfcnvrt@ll,dtoa@d
  4496  000552  C0AA  F022         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4497  000556  C0AB  F023         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4498  00055A  C0AC  F024         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4499  00055E  C0AD  F025         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4500  000562  C0AE  F026         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4501  000566  C0AF  F027         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4502  00056A  C0B0  F028         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4503  00056E  EC70  F018         	call	_dtoa	;wreg free
  4504  000572  C01F  F046         	movff	?_dtoa,?_vfpfcnvrt
  4505  000576  C020  F047         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4506  00057A  EF92  F00A         	goto	l731
  4507  00057E                     l8732:
  4508                           
  4509                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
  4510  00057E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4511  000582  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4512  000586  CFDE F004          	movff	postinc2,strncmp@_l
  4513  00058A  CFDD F005          	movff	postdec2,strncmp@_l+1
  4514  00058E  0EC7               	movlw	low (STR_11+1)
  4515  000590  6E06               	movwf	strncmp@_r^0,c
  4516  000592  0EFF               	movlw	high (STR_11+1)
  4517  000594  6E07               	movwf	(strncmp@_r+1)^0,c
  4518  000596  0E00               	movlw	0
  4519  000598  6E09               	movwf	(strncmp@n+1)^0,c
  4520  00059A  0E02               	movlw	2
  4521  00059C  6E08               	movwf	strncmp@n^0,c
  4522  00059E  EC2E  F024         	call	_strncmp	;wreg free
  4523  0005A2  5004               	movf	?_strncmp^0,w,c
  4524  0005A4  1005               	iorwf	(?_strncmp+1)^0,w,c
  4525  0005A6  B4D8               	btfsc	status,2,c
  4526  0005A8  EFD8  F002         	goto	u11621
  4527  0005AC  EFDA  F002         	goto	u11620
  4528  0005B0                     u11621:
  4529  0005B0  EFF5  F002         	goto	l8736
  4530  0005B4                     u11620:
  4531  0005B4  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4532  0005B8  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4533  0005BC  CFDE F004          	movff	postinc2,strncmp@_l
  4534  0005C0  CFDD F005          	movff	postdec2,strncmp@_l+1
  4535  0005C4  0ECF               	movlw	low (STR_15+1)
  4536  0005C6  6E06               	movwf	strncmp@_r^0,c
  4537  0005C8  0EFF               	movlw	high (STR_15+1)
  4538  0005CA  6E07               	movwf	(strncmp@_r+1)^0,c
  4539  0005CC  0E00               	movlw	0
  4540  0005CE  6E09               	movwf	(strncmp@n+1)^0,c
  4541  0005D0  0E02               	movlw	2
  4542  0005D2  6E08               	movwf	strncmp@n^0,c
  4543  0005D4  EC2E  F024         	call	_strncmp	;wreg free
  4544  0005D8  5004               	movf	?_strncmp^0,w,c
  4545  0005DA  1005               	iorwf	(?_strncmp+1)^0,w,c
  4546  0005DC  A4D8               	btfss	status,2,c
  4547  0005DE  EFF3  F002         	goto	u11631
  4548  0005E2  EFF5  F002         	goto	u11630
  4549  0005E6                     u11631:
  4550  0005E6  EF1D  F003         	goto	l8742
  4551  0005EA                     u11630:
  4552  0005EA                     l8736:
  4553                           
  4554                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
  4555  0005EA  0E02               	movlw	2
  4556  0005EC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4557  0005F0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4558  0005F4  26DE               	addwf	postinc2,f,c
  4559  0005F6  0E00               	movlw	0
  4560  0005F8  22DD               	addwfc	postdec2,f,c
  4561                           
  4562                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4563  0005FA  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4564  0005FE  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4565  000602  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4566  000606  0E02               	movlw	2
  4567  000608  26DE               	addwf	postinc2,f,c
  4568  00060A  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4569  00060E  0E00               	movlw	0
  4570  000610  22DD               	addwfc	postdec2,f,c
  4571  000612  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4572  000616  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4573  00061A  CFDE F0A9          	movff	postinc2,vfpfcnvrt@ll
  4574  00061E  CFDD F0AA          	movff	postdec2,vfpfcnvrt@ll+1
  4575  000622  0100               	movlb	0	; () banked
  4576  000624  0E00               	movlw	0
  4577  000626  BFAA               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4578  000628  0EFF               	movlw	-1
  4579  00062A  6FAB               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4580  00062C  6FAC               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4581  00062E  6FAD               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4582  000630  6FAE               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4583  000632  6FAF               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4584  000634  6FB0               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4585  000636  EFA3  F002         	goto	l8728
  4586  00063A                     l8742:
  4587                           
  4588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4589  00063A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4590  00063E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4591  000642  CFDE FFF6          	movff	postinc2,tblptrl
  4592  000646  CFDD FFF7          	movff	postdec2,tblptrh
  4593  00064A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4594  00064A  6AF8               	clrf	tblptru,c
  4595  00064C                     	endif
  4596  00064C                     	if	0	;tblptru may be non-zero
  4597  00064C                     	endif
  4598  00064C  0008               	tblrd		*
  4599  00064E  50F5               	movf	tablat,w,c
  4600  000650  0A64               	xorlw	100
  4601  000652  B4D8               	btfsc	status,2,c
  4602  000654  EF2E  F003         	goto	u11641
  4603  000658  EF30  F003         	goto	u11640
  4604  00065C                     u11641:
  4605  00065C  EF43  F003         	goto	l8746
  4606  000660                     u11640:
  4607  000660  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4608  000664  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4609  000668  CFDE FFF6          	movff	postinc2,tblptrl
  4610  00066C  CFDD FFF7          	movff	postdec2,tblptrh
  4611  000670                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4612  000670  6AF8               	clrf	tblptru,c
  4613  000672                     	endif
  4614  000672                     	if	0	;tblptru may be non-zero
  4615  000672                     	endif
  4616  000672  0008               	tblrd		*
  4617  000674  50F5               	movf	tablat,w,c
  4618  000676  0A69               	xorlw	105
  4619  000678  A4D8               	btfss	status,2,c
  4620  00067A  EF41  F003         	goto	u11651
  4621  00067E  EF43  F003         	goto	u11650
  4622  000682                     u11651:
  4623  000682  EF6A  F003         	goto	l8752
  4624  000686                     u11650:
  4625  000686                     l8746:
  4626                           
  4627                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4628  000686  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4629  00068A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4630  00068E  2ADE               	incf	postinc2,f,c
  4631  000690  0E00               	movlw	0
  4632  000692  22DD               	addwfc	postdec2,f,c
  4633                           
  4634                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4635  000694  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4636  000698  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4637  00069C  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4638  0006A0  0E02               	movlw	2
  4639  0006A2  26DE               	addwf	postinc2,f,c
  4640  0006A4  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4641  0006A8  0E00               	movlw	0
  4642  0006AA  22DD               	addwfc	postdec2,f,c
  4643  0006AC  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4644  0006B0  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4645  0006B4  CFDE F0A9          	movff	postinc2,vfpfcnvrt@ll
  4646  0006B8  CFDD F0AA          	movff	postdec2,vfpfcnvrt@ll+1
  4647  0006BC  0100               	movlb	0	; () banked
  4648  0006BE  0E00               	movlw	0
  4649  0006C0  BFAA               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4650  0006C2  0EFF               	movlw	-1
  4651  0006C4  6FAB               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4652  0006C6  6FAC               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4653  0006C8  6FAD               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4654  0006CA  6FAE               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4655  0006CC  6FAF               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4656  0006CE  6FB0               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4657  0006D0  EFA3  F002         	goto	l8728
  4658  0006D4                     l8752:
  4659                           
  4660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
  4661  0006D4  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4662  0006D8  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4663  0006DC  CFDE F004          	movff	postinc2,strncmp@_l
  4664  0006E0  CFDD F005          	movff	postdec2,strncmp@_l+1
  4665  0006E4  0EE9               	movlw	low STR_29
  4666  0006E6  6E06               	movwf	strncmp@_r^0,c
  4667  0006E8  0EFF               	movlw	high STR_29
  4668  0006EA  6E07               	movwf	(strncmp@_r+1)^0,c
  4669  0006EC  0E00               	movlw	0
  4670  0006EE  6E09               	movwf	(strncmp@n+1)^0,c
  4671  0006F0  0E02               	movlw	2
  4672  0006F2  6E08               	movwf	strncmp@n^0,c
  4673  0006F4  EC2E  F024         	call	_strncmp	;wreg free
  4674  0006F8  5004               	movf	?_strncmp^0,w,c
  4675  0006FA  1005               	iorwf	(?_strncmp+1)^0,w,c
  4676  0006FC  B4D8               	btfsc	status,2,c
  4677  0006FE  EF83  F003         	goto	u11661
  4678  000702  EF85  F003         	goto	u11660
  4679  000706                     u11661:
  4680  000706  EFA0  F003         	goto	l8756
  4681  00070A                     u11660:
  4682  00070A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4683  00070E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4684  000712  CFDE F004          	movff	postinc2,strncmp@_l
  4685  000716  CFDD F005          	movff	postdec2,strncmp@_l+1
  4686  00071A  0EEF               	movlw	low STR_33
  4687  00071C  6E06               	movwf	strncmp@_r^0,c
  4688  00071E  0EFF               	movlw	high STR_33
  4689  000720  6E07               	movwf	(strncmp@_r+1)^0,c
  4690  000722  0E00               	movlw	0
  4691  000724  6E09               	movwf	(strncmp@n+1)^0,c
  4692  000726  0E02               	movlw	2
  4693  000728  6E08               	movwf	strncmp@n^0,c
  4694  00072A  EC2E  F024         	call	_strncmp	;wreg free
  4695  00072E  5004               	movf	?_strncmp^0,w,c
  4696  000730  1005               	iorwf	(?_strncmp+1)^0,w,c
  4697  000732  A4D8               	btfss	status,2,c
  4698  000734  EF9E  F003         	goto	u11671
  4699  000738  EFA0  F003         	goto	u11670
  4700  00073C                     u11671:
  4701  00073C  EFC9  F003         	goto	l8762
  4702  000740                     u11670:
  4703  000740                     l8756:
  4704                           
  4705                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
  4706  000740  0E02               	movlw	2
  4707  000742  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4708  000746  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4709  00074A  26DE               	addwf	postinc2,f,c
  4710  00074C  0E00               	movlw	0
  4711  00074E  22DD               	addwfc	postdec2,f,c
  4712                           
  4713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4714  000750  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4715  000754  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4716  000758  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4717  00075C  0E02               	movlw	2
  4718  00075E  26DE               	addwf	postinc2,f,c
  4719  000760  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4720  000764  0E00               	movlw	0
  4721  000766  22DD               	addwfc	postdec2,f,c
  4722  000768  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4723  00076C  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4724  000770  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  4725  000774  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  4726  000778  C04E  F0A9         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  4727  00077C  C04F  F0AA         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  4728  000780  0100               	movlb	0	; () banked
  4729  000782  6BAB               	clrf	(vfpfcnvrt@ll+2)& (0+255),b
  4730  000784  6BAC               	clrf	(vfpfcnvrt@ll+3)& (0+255),b
  4731  000786  6BAD               	clrf	(vfpfcnvrt@ll+4)& (0+255),b
  4732  000788  6BAE               	clrf	(vfpfcnvrt@ll+5)& (0+255),b
  4733  00078A  6BAF               	clrf	(vfpfcnvrt@ll+6)& (0+255),b
  4734  00078C  6BB0               	clrf	(vfpfcnvrt@ll+7)& (0+255),b
  4735  00078E  EFA3  F002         	goto	l8728
  4736  000792                     l8762:
  4737                           
  4738                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  4739  000792  0E66               	movlw	102
  4740  000794  0100               	movlb	0	; () banked
  4741  000796  19A6               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  4742  000798  A4D8               	btfss	status,2,c
  4743  00079A  EFD1  F003         	goto	u11681
  4744  00079E  EFD3  F003         	goto	u11680
  4745  0007A2                     u11681:
  4746  0007A2  EF14  F004         	goto	l8774
  4747  0007A6                     u11680:
  4748  0007A6                     
  4749                           ; BSR set to: 0
  4750                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  4751  0007A6  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4752  0007AA  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4753  0007AE  CFDE FFF6          	movff	postinc2,tblptrl
  4754  0007B2  CFDD FFF7          	movff	postdec2,tblptrh
  4755  0007B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4756  0007B6  6AF8               	clrf	tblptru,c
  4757  0007B8                     	endif
  4758  0007B8                     	if	0	;tblptru may be non-zero
  4759  0007B8                     	endif
  4760  0007B8  0008               	tblrd		*
  4761  0007BA  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  4762  0007BE                     
  4763                           ; BSR set to: 0
  4764                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  4765  0007BE  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4766  0007C2  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4767  0007C6  2ADE               	incf	postinc2,f,c
  4768  0007C8  0E00               	movlw	0
  4769  0007CA  22DD               	addwfc	postdec2,f,c
  4770  0007CC                     
  4771                           ; BSR set to: 0
  4772                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4773  0007CC  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4774  0007D0  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4775  0007D4  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4776  0007D8  0E04               	movlw	4
  4777  0007DA  26DE               	addwf	postinc2,f,c
  4778  0007DC  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4779  0007E0  0E00               	movlw	0
  4780  0007E2  22DD               	addwfc	postdec2,f,c
  4781  0007E4  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4782  0007E8  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4783  0007EC  CFDE F0A2          	movff	postinc2,vfpfcnvrt@f
  4784  0007F0  CFDE F0A3          	movff	postinc2,vfpfcnvrt@f+1
  4785  0007F4  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f+2
  4786  0007F8  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+3
  4787  0007FC                     l8770:
  4788                           
  4789                           ; BSR set to: 0
  4790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  4791  0007FC  C046  F037         	movff	vfpfcnvrt@fp,efgtoa@fp
  4792  000800  C047  F038         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4793  000804  C0A2  F039         	movff	vfpfcnvrt@f,efgtoa@f
  4794  000808  C0A3  F03A         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4795  00080C  C0A4  F03B         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4796  000810  C0A5  F03C         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4797  000814  C0B3  F03D         	movff	vfpfcnvrt@c,efgtoa@c
  4798  000818  EC93  F00A         	call	_efgtoa	;wreg free
  4799  00081C  C037  F046         	movff	?_efgtoa,?_vfpfcnvrt
  4800  000820  C038  F047         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4801  000824  EF92  F00A         	goto	l731
  4802  000828                     l8774:
  4803                           
  4804                           ; BSR set to: 0
  4805                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  4806  000828  0EA6               	movlw	low vfpfcnvrt@ct
  4807  00082A  6E04               	movwf	strncmp@_l^0,c
  4808  00082C  0E00               	movlw	high vfpfcnvrt@ct
  4809  00082E  6E05               	movwf	(strncmp@_l+1)^0,c
  4810  000830  0EEC               	movlw	low STR_38
  4811  000832  6E06               	movwf	strncmp@_r^0,c
  4812  000834  0EFF               	movlw	high STR_38
  4813  000836  6E07               	movwf	(strncmp@_r+1)^0,c
  4814  000838  0E00               	movlw	0
  4815  00083A  6E09               	movwf	(strncmp@n+1)^0,c
  4816  00083C  0E02               	movlw	2
  4817  00083E  6E08               	movwf	strncmp@n^0,c
  4818  000840  EC2E  F024         	call	_strncmp	;wreg free
  4819  000844  5004               	movf	?_strncmp^0,w,c
  4820  000846  1005               	iorwf	(?_strncmp+1)^0,w,c
  4821  000848  A4D8               	btfss	status,2,c
  4822  00084A  EF29  F004         	goto	u11691
  4823  00084E  EF2B  F004         	goto	u11690
  4824  000852                     u11691:
  4825  000852  EFA9  F004         	goto	l8790
  4826  000856                     u11690:
  4827  000856                     
  4828                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  4829  000856  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4830  00085A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4831  00085E  CFDE F04C          	movff	postinc2,??_vfpfcnvrt
  4832  000862  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+1
  4833  000866  0E01               	movlw	1
  4834  000868  264C               	addwf	??_vfpfcnvrt^0,f,c
  4835  00086A  0E00               	movlw	0
  4836  00086C  224D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4837  00086E  C04C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4838  000872  C04D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4839  000876                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4840  000876  6AF8               	clrf	tblptru,c
  4841  000878                     	endif
  4842  000878                     	if	0	;tblptru may be non-zero
  4843  000878                     	endif
  4844  000878  0008               	tblrd		*
  4845  00087A  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  4846  00087E  0EBF               	movlw	191
  4847  000880  6E4C               	movwf	??_vfpfcnvrt^0,c
  4848  000882  0EFF               	movlw	255
  4849  000884  6E4D               	movwf	(??_vfpfcnvrt+1)^0,c
  4850  000886  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4851  00088A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4852  00088E  CFDE FFF6          	movff	postinc2,tblptrl
  4853  000892  CFDD FFF7          	movff	postdec2,tblptrh
  4854  000896                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4855  000896  6AF8               	clrf	tblptru,c
  4856  000898                     	endif
  4857  000898                     	if	0	;tblptru may be non-zero
  4858  000898                     	endif
  4859  000898  0008               	tblrd		*
  4860  00089A  50F5               	movf	tablat,w,c
  4861  00089C  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  4862  00089E  6A4F               	clrf	(??_vfpfcnvrt+3)^0,c
  4863  0008A0  504C               	movf	??_vfpfcnvrt^0,w,c
  4864  0008A2  264E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4865  0008A4  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
  4866  0008A6  224F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4867  0008A8  504F               	movf	(??_vfpfcnvrt+3)^0,w,c
  4868  0008AA  E10A               	bnz	u11700
  4869  0008AC  0E1A               	movlw	26
  4870  0008AE  5C4E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4871  0008B0  A0D8               	btfss	status,0,c
  4872  0008B2  EF5D  F004         	goto	u11701
  4873  0008B6  EF60  F004         	goto	u11700
  4874  0008BA                     u11701:
  4875  0008BA  0E01               	movlw	1
  4876  0008BC  EF61  F004         	goto	u11710
  4877  0008C0                     u11700:
  4878  0008C0  0E00               	movlw	0
  4879  0008C2                     u11710:
  4880  0008C2  0100               	movlb	0	; () banked
  4881  0008C4  6FA0               	movwf	_vfpfcnvrt$1397& (0+255),b
  4882  0008C6  6BA1               	clrf	(_vfpfcnvrt$1397+1)& (0+255),b
  4883  0008C8                     
  4884                           ; BSR set to: 0
  4885  0008C8  51A0               	movf	_vfpfcnvrt$1397& (0+255),w,b
  4886  0008CA  11A1               	iorwf	(_vfpfcnvrt$1397+1)& (0+255),w,b
  4887  0008CC  B4D8               	btfsc	status,2,c
  4888  0008CE  EF6B  F004         	goto	u11721
  4889  0008D2  EF6D  F004         	goto	u11720
  4890  0008D6                     u11721:
  4891  0008D6  EF87  F004         	goto	l8784
  4892  0008DA                     u11720:
  4893  0008DA                     
  4894                           ; BSR set to: 0
  4895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4896  0008DA  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4897  0008DE  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4898  0008E2  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4899  0008E6  0E04               	movlw	4
  4900  0008E8  26DE               	addwf	postinc2,f,c
  4901  0008EA  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4902  0008EE  0E00               	movlw	0
  4903  0008F0  22DD               	addwfc	postdec2,f,c
  4904  0008F2  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4905  0008F6  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4906  0008FA  CFDE F0A2          	movff	postinc2,vfpfcnvrt@f
  4907  0008FE  CFDE F0A3          	movff	postinc2,vfpfcnvrt@f+1
  4908  000902  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f+2
  4909  000906  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+3
  4910                           
  4911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  4912  00090A  EF9F  F004         	goto	l751
  4913  00090E                     l8784:
  4914                           
  4915                           ; BSR set to: 0
  4916                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4917  00090E  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4918  000912  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4919  000916  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4920  00091A  0E04               	movlw	4
  4921  00091C  26DE               	addwf	postinc2,f,c
  4922  00091E  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4923  000922  0E00               	movlw	0
  4924  000924  22DD               	addwfc	postdec2,f,c
  4925  000926  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4926  00092A  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4927  00092E  CFDE F0A2          	movff	postinc2,vfpfcnvrt@f
  4928  000932  CFDE F0A3          	movff	postinc2,vfpfcnvrt@f+1
  4929  000936  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f+2
  4930  00093A  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+3
  4931  00093E                     l751:
  4932                           
  4933                           ; BSR set to: 0
  4934                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  4935  00093E  0E02               	movlw	2
  4936  000940  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4937  000944  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4938  000948  26DE               	addwf	postinc2,f,c
  4939  00094A  0E00               	movlw	0
  4940  00094C  22DD               	addwfc	postdec2,f,c
  4941  00094E  EFFE  F003         	goto	l8770
  4942  000952                     l8790:
  4943                           
  4944                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  4945  000952  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4946  000956  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4947  00095A  CFDE F004          	movff	postinc2,strncmp@_l
  4948  00095E  CFDD F005          	movff	postdec2,strncmp@_l+1
  4949  000962  0EDA               	movlw	low STR_43
  4950  000964  6E06               	movwf	strncmp@_r^0,c
  4951  000966  0EFF               	movlw	high STR_43
  4952  000968  6E07               	movwf	(strncmp@_r+1)^0,c
  4953  00096A  0E00               	movlw	0
  4954  00096C  6E09               	movwf	(strncmp@n+1)^0,c
  4955  00096E  0E03               	movlw	3
  4956  000970  6E08               	movwf	strncmp@n^0,c
  4957  000972  EC2E  F024         	call	_strncmp	;wreg free
  4958  000976  5004               	movf	?_strncmp^0,w,c
  4959  000978  1005               	iorwf	(?_strncmp+1)^0,w,c
  4960  00097A  A4D8               	btfss	status,2,c
  4961  00097C  EFC2  F004         	goto	u11731
  4962  000980  EFC4  F004         	goto	u11730
  4963  000984                     u11731:
  4964  000984  EF04  F005         	goto	l8798
  4965  000988                     u11730:
  4966  000988                     
  4967                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  4968  000988  0E03               	movlw	3
  4969  00098A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4970  00098E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4971  000992  26DE               	addwf	postinc2,f,c
  4972  000994  0E00               	movlw	0
  4973  000996  22DD               	addwfc	postdec2,f,c
  4974                           
  4975                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4976  000998  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4977  00099C  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4978  0009A0  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4979  0009A4  0E02               	movlw	2
  4980  0009A6  26DE               	addwf	postinc2,f,c
  4981  0009A8  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4982  0009AC  0E00               	movlw	0
  4983  0009AE  22DD               	addwfc	postdec2,f,c
  4984  0009B0  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4985  0009B4  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4986  0009B8  50DF               	movf	indf2,w,c
  4987  0009BA  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  4988  0009BC  504E               	movf	(??_vfpfcnvrt+2)^0,w,c
  4989  0009BE  0100               	movlb	0	; () banked
  4990  0009C0  6FB4               	movwf	vfpfcnvrt@llu& (0+255),b
  4991  0009C2  6BB5               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  4992  0009C4  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4993  0009C6  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4994  0009C8  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4995  0009CA  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4996  0009CC  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4997  0009CE  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4998  0009D0                     l8794:
  4999                           
  5000                           ; BSR set to: 0
  5001                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
  5002  0009D0  C046  F01F         	movff	vfpfcnvrt@fp,otoa@fp
  5003  0009D4  C047  F020         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  5004  0009D8  C0B4  F021         	movff	vfpfcnvrt@llu,otoa@d
  5005  0009DC  C0B5  F022         	movff	vfpfcnvrt@llu+1,otoa@d+1
  5006  0009E0  C0B6  F023         	movff	vfpfcnvrt@llu+2,otoa@d+2
  5007  0009E4  C0B7  F024         	movff	vfpfcnvrt@llu+3,otoa@d+3
  5008  0009E8  C0B8  F025         	movff	vfpfcnvrt@llu+4,otoa@d+4
  5009  0009EC  C0B9  F026         	movff	vfpfcnvrt@llu+5,otoa@d+5
  5010  0009F0  C0BA  F027         	movff	vfpfcnvrt@llu+6,otoa@d+6
  5011  0009F4  C0BB  F028         	movff	vfpfcnvrt@llu+7,otoa@d+7
  5012  0009F8  EC5C  F01D         	call	_otoa	;wreg free
  5013  0009FC  C01F  F046         	movff	?_otoa,?_vfpfcnvrt
  5014  000A00  C020  F047         	movff	?_otoa+1,?_vfpfcnvrt+1
  5015  000A04  EF92  F00A         	goto	l731
  5016  000A08                     l8798:
  5017                           
  5018                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  5019  000A08  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5020  000A0C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5021  000A10  CFDE F004          	movff	postinc2,strncmp@_l
  5022  000A14  CFDD F005          	movff	postdec2,strncmp@_l+1
  5023  000A18  0EDB               	movlw	low (STR_43+1)
  5024  000A1A  6E06               	movwf	strncmp@_r^0,c
  5025  000A1C  0EFF               	movlw	high (STR_43+1)
  5026  000A1E  6E07               	movwf	(strncmp@_r+1)^0,c
  5027  000A20  0E00               	movlw	0
  5028  000A22  6E09               	movwf	(strncmp@n+1)^0,c
  5029  000A24  0E02               	movlw	2
  5030  000A26  6E08               	movwf	strncmp@n^0,c
  5031  000A28  EC2E  F024         	call	_strncmp	;wreg free
  5032  000A2C  5004               	movf	?_strncmp^0,w,c
  5033  000A2E  1005               	iorwf	(?_strncmp+1)^0,w,c
  5034  000A30  A4D8               	btfss	status,2,c
  5035  000A32  EF1D  F005         	goto	u11741
  5036  000A36  EF1F  F005         	goto	u11740
  5037  000A3A                     u11741:
  5038  000A3A  EF48  F005         	goto	l8806
  5039  000A3E                     u11740:
  5040  000A3E                     
  5041                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  5042  000A3E  0E02               	movlw	2
  5043  000A40  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5044  000A44  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5045  000A48  26DE               	addwf	postinc2,f,c
  5046  000A4A  0E00               	movlw	0
  5047  000A4C  22DD               	addwfc	postdec2,f,c
  5048                           
  5049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5050  000A4E  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5051  000A52  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5052  000A56  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5053  000A5A  0E02               	movlw	2
  5054  000A5C  26DE               	addwf	postinc2,f,c
  5055  000A5E  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5056  000A62  0E00               	movlw	0
  5057  000A64  22DD               	addwfc	postdec2,f,c
  5058  000A66  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5059  000A6A  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5060  000A6E  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  5061  000A72  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  5062  000A76  C04E  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5063  000A7A  C04F  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5064  000A7E  0100               	movlb	0	; () banked
  5065  000A80  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5066  000A82  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5067  000A84  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5068  000A86  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5069  000A88  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5070  000A8A  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5071  000A8C  EFE8  F004         	goto	l8794
  5072  000A90                     l8806:
  5073                           
  5074                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
  5075  000A90  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5076  000A94  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5077  000A98  CFDE FFF6          	movff	postinc2,tblptrl
  5078  000A9C  CFDD FFF7          	movff	postdec2,tblptrh
  5079  000AA0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5080  000AA0  6AF8               	clrf	tblptru,c
  5081  000AA2                     	endif
  5082  000AA2                     	if	0	;tblptru may be non-zero
  5083  000AA2                     	endif
  5084  000AA2  0008               	tblrd		*
  5085  000AA4  50F5               	movf	tablat,w,c
  5086  000AA6  0A6F               	xorlw	111
  5087  000AA8  A4D8               	btfss	status,2,c
  5088  000AAA  EF59  F005         	goto	u11751
  5089  000AAE  EF5B  F005         	goto	u11750
  5090  000AB2                     u11751:
  5091  000AB2  EF83  F005         	goto	l8814
  5092  000AB6                     u11750:
  5093  000AB6                     
  5094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
  5095  000AB6  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5096  000ABA  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5097  000ABE  2ADE               	incf	postinc2,f,c
  5098  000AC0  0E00               	movlw	0
  5099  000AC2  22DD               	addwfc	postdec2,f,c
  5100                           
  5101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
  5102  000AC4  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5103  000AC8  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5104  000ACC  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5105  000AD0  0E02               	movlw	2
  5106  000AD2  26DE               	addwf	postinc2,f,c
  5107  000AD4  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5108  000AD8  0E00               	movlw	0
  5109  000ADA  22DD               	addwfc	postdec2,f,c
  5110  000ADC  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5111  000AE0  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5112  000AE4  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  5113  000AE8  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  5114  000AEC  C04E  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5115  000AF0  C04F  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5116  000AF4  0100               	movlb	0	; () banked
  5117  000AF6  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5118  000AF8  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5119  000AFA  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5120  000AFC  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5121  000AFE  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5122  000B00  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5123  000B02  EFE8  F004         	goto	l8794
  5124  000B06                     l8814:
  5125                           
  5126                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  5127  000B06  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5128  000B0A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5129  000B0E  CFDE F004          	movff	postinc2,strncmp@_l
  5130  000B12  CFDD F005          	movff	postdec2,strncmp@_l+1
  5131  000B16  0EF5               	movlw	low STR_53
  5132  000B18  6E06               	movwf	strncmp@_r^0,c
  5133  000B1A  0EFF               	movlw	high STR_53
  5134  000B1C  6E07               	movwf	(strncmp@_r+1)^0,c
  5135  000B1E  0E00               	movlw	0
  5136  000B20  6E09               	movwf	(strncmp@n+1)^0,c
  5137  000B22  0E02               	movlw	2
  5138  000B24  6E08               	movwf	strncmp@n^0,c
  5139  000B26  EC2E  F024         	call	_strncmp	;wreg free
  5140  000B2A  5004               	movf	?_strncmp^0,w,c
  5141  000B2C  1005               	iorwf	(?_strncmp+1)^0,w,c
  5142  000B2E  A4D8               	btfss	status,2,c
  5143  000B30  EF9C  F005         	goto	u11761
  5144  000B34  EF9E  F005         	goto	u11760
  5145  000B38                     u11761:
  5146  000B38  EFC7  F005         	goto	l8822
  5147  000B3C                     u11760:
  5148  000B3C                     
  5149                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  5150  000B3C  0E02               	movlw	2
  5151  000B3E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5152  000B42  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5153  000B46  26DE               	addwf	postinc2,f,c
  5154  000B48  0E00               	movlw	0
  5155  000B4A  22DD               	addwfc	postdec2,f,c
  5156                           
  5157                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5158  000B4C  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5159  000B50  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5160  000B54  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5161  000B58  0E02               	movlw	2
  5162  000B5A  26DE               	addwf	postinc2,f,c
  5163  000B5C  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5164  000B60  0E00               	movlw	0
  5165  000B62  22DD               	addwfc	postdec2,f,c
  5166  000B64  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5167  000B68  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5168  000B6C  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  5169  000B70  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  5170  000B74  C04E  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5171  000B78  C04F  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5172  000B7C  0100               	movlb	0	; () banked
  5173  000B7E  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5174  000B80  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5175  000B82  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5176  000B84  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5177  000B86  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5178  000B88  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5179  000B8A  EFE8  F004         	goto	l8794
  5180  000B8E                     l8822:
  5181                           
  5182                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  5183  000B8E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5184  000B92  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5185  000B96  CFDE F004          	movff	postinc2,strncmp@_l
  5186  000B9A  CFDD F005          	movff	postdec2,strncmp@_l+1
  5187  000B9E  0ED6               	movlw	low STR_58
  5188  000BA0  6E06               	movwf	strncmp@_r^0,c
  5189  000BA2  0EFF               	movlw	high STR_58
  5190  000BA4  6E07               	movwf	(strncmp@_r+1)^0,c
  5191  000BA6  0E00               	movlw	0
  5192  000BA8  6E09               	movwf	(strncmp@n+1)^0,c
  5193  000BAA  0E03               	movlw	3
  5194  000BAC  6E08               	movwf	strncmp@n^0,c
  5195  000BAE  EC2E  F024         	call	_strncmp	;wreg free
  5196  000BB2  5004               	movf	?_strncmp^0,w,c
  5197  000BB4  1005               	iorwf	(?_strncmp+1)^0,w,c
  5198  000BB6  A4D8               	btfss	status,2,c
  5199  000BB8  EFE0  F005         	goto	u11771
  5200  000BBC  EFE2  F005         	goto	u11770
  5201  000BC0                     u11771:
  5202  000BC0  EF0A  F006         	goto	l8832
  5203  000BC4                     u11770:
  5204  000BC4                     
  5205                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  5206  000BC4  0E03               	movlw	3
  5207  000BC6  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5208  000BCA  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5209  000BCE  26DE               	addwf	postinc2,f,c
  5210  000BD0  0E00               	movlw	0
  5211  000BD2  22DD               	addwfc	postdec2,f,c
  5212                           
  5213                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5214  000BD4  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5215  000BD8  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5216  000BDC  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5217  000BE0  0E02               	movlw	2
  5218  000BE2  26DE               	addwf	postinc2,f,c
  5219  000BE4  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5220  000BE8  0E00               	movlw	0
  5221  000BEA  22DD               	addwfc	postdec2,f,c
  5222  000BEC  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5223  000BF0  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5224  000BF4  CFDE F0B1          	movff	postinc2,vfpfcnvrt@vp
  5225  000BF8  CFDD F0B2          	movff	postdec2,vfpfcnvrt@vp+1
  5226  000BFC                     
  5227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
  5228  000BFC  C0B1  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5229  000C00  C0B2  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5230  000C04  C0EE  FFDF         	movff	_nout,indf2
  5231  000C08                     l8828:
  5232                           
  5233                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
  5234  000C08  0E00               	movlw	0
  5235  000C0A  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  5236  000C0C  0E00               	movlw	0
  5237  000C0E  6E46               	movwf	?_vfpfcnvrt^0,c
  5238  000C10  EF92  F00A         	goto	l731
  5239  000C14                     l8832:
  5240                           
  5241                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  5242  000C14  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5243  000C18  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5244  000C1C  CFDE F004          	movff	postinc2,strncmp@_l
  5245  000C20  CFDD F005          	movff	postdec2,strncmp@_l+1
  5246  000C24  0ED7               	movlw	low (STR_58+1)
  5247  000C26  6E06               	movwf	strncmp@_r^0,c
  5248  000C28  0EFF               	movlw	high (STR_58+1)
  5249  000C2A  6E07               	movwf	(strncmp@_r+1)^0,c
  5250  000C2C  0E00               	movlw	0
  5251  000C2E  6E09               	movwf	(strncmp@n+1)^0,c
  5252  000C30  0E02               	movlw	2
  5253  000C32  6E08               	movwf	strncmp@n^0,c
  5254  000C34  EC2E  F024         	call	_strncmp	;wreg free
  5255  000C38  5004               	movf	?_strncmp^0,w,c
  5256  000C3A  1005               	iorwf	(?_strncmp+1)^0,w,c
  5257  000C3C  A4D8               	btfss	status,2,c
  5258  000C3E  EF23  F006         	goto	u11781
  5259  000C42  EF25  F006         	goto	u11780
  5260  000C46                     u11781:
  5261  000C46  EF4B  F006         	goto	l8842
  5262  000C4A                     u11780:
  5263  000C4A                     
  5264                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  5265  000C4A  0E02               	movlw	2
  5266  000C4C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5267  000C50  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5268  000C54  26DE               	addwf	postinc2,f,c
  5269  000C56  0E00               	movlw	0
  5270  000C58  22DD               	addwfc	postdec2,f,c
  5271                           
  5272                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  5273  000C5A  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5274  000C5E  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5275  000C62  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5276  000C66  0E02               	movlw	2
  5277  000C68  26DE               	addwf	postinc2,f,c
  5278  000C6A  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5279  000C6E  0E00               	movlw	0
  5280  000C70  22DD               	addwfc	postdec2,f,c
  5281  000C72  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5282  000C76  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5283  000C7A  CFDE F0B1          	movff	postinc2,vfpfcnvrt@vp
  5284  000C7E  CFDD F0B2          	movff	postdec2,vfpfcnvrt@vp+1
  5285  000C82                     
  5286                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
  5287  000C82  C0B1  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5288  000C86  C0B2  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5289  000C8A  C0EE  FFDE         	movff	_nout,postinc2
  5290  000C8E  C0EF  FFDD         	movff	_nout+1,postdec2
  5291  000C92  EF04  F006         	goto	l8828
  5292  000C96                     l8842:
  5293                           
  5294                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  5295  000C96  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5296  000C9A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5297  000C9E  CFDE FFF6          	movff	postinc2,tblptrl
  5298  000CA2  CFDD FFF7          	movff	postdec2,tblptrh
  5299  000CA6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5300  000CA6  6AF8               	clrf	tblptru,c
  5301  000CA8                     	endif
  5302  000CA8                     	if	0	;tblptru may be non-zero
  5303  000CA8                     	endif
  5304  000CA8  0008               	tblrd		*
  5305  000CAA  50F5               	movf	tablat,w,c
  5306  000CAC  0A6E               	xorlw	110
  5307  000CAE  A4D8               	btfss	status,2,c
  5308  000CB0  EF5C  F006         	goto	u11791
  5309  000CB4  EF5E  F006         	goto	u11790
  5310  000CB8                     u11791:
  5311  000CB8  EF83  F006         	goto	l8852
  5312  000CBC                     u11790:
  5313  000CBC                     
  5314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  5315  000CBC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5316  000CC0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5317  000CC4  2ADE               	incf	postinc2,f,c
  5318  000CC6  0E00               	movlw	0
  5319  000CC8  22DD               	addwfc	postdec2,f,c
  5320                           
  5321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  5322  000CCA  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5323  000CCE  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5324  000CD2  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5325  000CD6  0E02               	movlw	2
  5326  000CD8  26DE               	addwf	postinc2,f,c
  5327  000CDA  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5328  000CDE  0E00               	movlw	0
  5329  000CE0  22DD               	addwfc	postdec2,f,c
  5330  000CE2  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5331  000CE6  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5332  000CEA  CFDE F0B1          	movff	postinc2,vfpfcnvrt@vp
  5333  000CEE  CFDD F0B2          	movff	postdec2,vfpfcnvrt@vp+1
  5334  000CF2                     
  5335                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  5336  000CF2  C0B1  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5337  000CF6  C0B2  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5338  000CFA  C0EE  FFDE         	movff	_nout,postinc2
  5339  000CFE  C0EF  FFDD         	movff	_nout+1,postdec2
  5340  000D02  EF04  F006         	goto	l8828
  5341  000D06                     l8852:
  5342                           
  5343                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  5344  000D06  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5345  000D0A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5346  000D0E  CFDE F004          	movff	postinc2,strncmp@_l
  5347  000D12  CFDD F005          	movff	postdec2,strncmp@_l+1
  5348  000D16  0EF2               	movlw	low STR_68
  5349  000D18  6E06               	movwf	strncmp@_r^0,c
  5350  000D1A  0EFF               	movlw	high STR_68
  5351  000D1C  6E07               	movwf	(strncmp@_r+1)^0,c
  5352  000D1E  0E00               	movlw	0
  5353  000D20  6E09               	movwf	(strncmp@n+1)^0,c
  5354  000D22  0E02               	movlw	2
  5355  000D24  6E08               	movwf	strncmp@n^0,c
  5356  000D26  EC2E  F024         	call	_strncmp	;wreg free
  5357  000D2A  5004               	movf	?_strncmp^0,w,c
  5358  000D2C  1005               	iorwf	(?_strncmp+1)^0,w,c
  5359  000D2E  A4D8               	btfss	status,2,c
  5360  000D30  EF9C  F006         	goto	u11801
  5361  000D34  EF9E  F006         	goto	u11800
  5362  000D38                     u11801:
  5363  000D38  EFC4  F006         	goto	l8862
  5364  000D3C                     u11800:
  5365  000D3C                     
  5366                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  5367  000D3C  0E02               	movlw	2
  5368  000D3E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5369  000D42  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5370  000D46  26DE               	addwf	postinc2,f,c
  5371  000D48  0E00               	movlw	0
  5372  000D4A  22DD               	addwfc	postdec2,f,c
  5373                           
  5374                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  5375  000D4C  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5376  000D50  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5377  000D54  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5378  000D58  0E02               	movlw	2
  5379  000D5A  26DE               	addwf	postinc2,f,c
  5380  000D5C  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5381  000D60  0E00               	movlw	0
  5382  000D62  22DD               	addwfc	postdec2,f,c
  5383  000D64  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5384  000D68  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5385  000D6C  CFDE F0B1          	movff	postinc2,vfpfcnvrt@vp
  5386  000D70  CFDD F0B2          	movff	postdec2,vfpfcnvrt@vp+1
  5387  000D74                     
  5388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
  5389  000D74  C0B1  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5390  000D78  C0B2  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5391  000D7C  C0EE  FFDE         	movff	_nout,postinc2
  5392  000D80  C0EF  FFDD         	movff	_nout+1,postdec2
  5393  000D84  EF04  F006         	goto	l8828
  5394  000D88                     l8862:
  5395                           
  5396                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
  5397  000D88  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5398  000D8C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5399  000D90  CFDE FFF6          	movff	postinc2,tblptrl
  5400  000D94  CFDD FFF7          	movff	postdec2,tblptrh
  5401  000D98                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5402  000D98  6AF8               	clrf	tblptru,c
  5403  000D9A                     	endif
  5404  000D9A                     	if	0	;tblptru may be non-zero
  5405  000D9A                     	endif
  5406  000D9A  0008               	tblrd		*
  5407  000D9C  50F5               	movf	tablat,w,c
  5408  000D9E  0A70               	xorlw	112
  5409  000DA0  A4D8               	btfss	status,2,c
  5410  000DA2  EFD5  F006         	goto	u11811
  5411  000DA6  EFD7  F006         	goto	u11810
  5412  000DAA                     u11811:
  5413  000DAA  EF1B  F007         	goto	l8870
  5414  000DAE                     u11810:
  5415  000DAE                     
  5416                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
  5417  000DAE  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5418  000DB2  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5419  000DB6  2ADE               	incf	postinc2,f,c
  5420  000DB8  0E00               	movlw	0
  5421  000DBA  22DD               	addwfc	postdec2,f,c
  5422                           
  5423                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
  5424  000DBC  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5425  000DC0  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5426  000DC4  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5427  000DC8  0E02               	movlw	2
  5428  000DCA  26DE               	addwf	postinc2,f,c
  5429  000DCC  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5430  000DD0  0E00               	movlw	0
  5431  000DD2  22DD               	addwfc	postdec2,f,c
  5432  000DD4  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5433  000DD8  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5434  000DDC  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  5435  000DE0  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  5436  000DE4  C04E  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5437  000DE8  C04F  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5438  000DEC  0100               	movlb	0	; () banked
  5439  000DEE  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5440  000DF0  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5441  000DF2  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5442  000DF4  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5443  000DF6  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5444  000DF8  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5445  000DFA                     
  5446                           ; BSR set to: 0
  5447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
  5448  000DFA  C046  F01F         	movff	vfpfcnvrt@fp,xtoa@fp
  5449  000DFE  C047  F020         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5450  000E02  C0B4  F021         	movff	vfpfcnvrt@llu,xtoa@d
  5451  000E06  C0B5  F022         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5452  000E0A  C0B6  F023         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5453  000E0E  C0B7  F024         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5454  000E12  C0B8  F025         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5455  000E16  C0B9  F026         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5456  000E1A  C0BA  F027         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5457  000E1E  C0BB  F028         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5458  000E22  0E78               	movlw	120
  5459  000E24  6E29               	movwf	xtoa@x^0,c
  5460  000E26  ECE3  F019         	call	_xtoa	;wreg free
  5461  000E2A  C01F  F046         	movff	?_xtoa,?_vfpfcnvrt
  5462  000E2E  C020  F047         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5463  000E32  EF92  F00A         	goto	l731
  5464  000E36                     l8870:
  5465                           
  5466                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  5467  000E36  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5468  000E3A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5469  000E3E  CFDE FFF6          	movff	postinc2,tblptrl
  5470  000E42  CFDD FFF7          	movff	postdec2,tblptrh
  5471  000E46                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5472  000E46  6AF8               	clrf	tblptru,c
  5473  000E48                     	endif
  5474  000E48                     	if	0	;tblptru may be non-zero
  5475  000E48                     	endif
  5476  000E48  0008               	tblrd		*
  5477  000E4A  50F5               	movf	tablat,w,c
  5478  000E4C  0A73               	xorlw	115
  5479  000E4E  A4D8               	btfss	status,2,c
  5480  000E50  EF2C  F007         	goto	u11821
  5481  000E54  EF2E  F007         	goto	u11820
  5482  000E58                     u11821:
  5483  000E58  EF59  F007         	goto	l8878
  5484  000E5C                     u11820:
  5485  000E5C                     
  5486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  5487  000E5C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5488  000E60  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5489  000E64  2ADE               	incf	postinc2,f,c
  5490  000E66  0E00               	movlw	0
  5491  000E68  22DD               	addwfc	postdec2,f,c
  5492                           
  5493                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5494  000E6A  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5495  000E6E  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5496  000E72  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5497  000E76  0E02               	movlw	2
  5498  000E78  26DE               	addwf	postinc2,f,c
  5499  000E7A  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5500  000E7E  0E00               	movlw	0
  5501  000E80  22DD               	addwfc	postdec2,f,c
  5502  000E82  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5503  000E86  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5504  000E8A  CFDE F098          	movff	postinc2,vfpfcnvrt@cp
  5505  000E8E  CFDD F099          	movff	postdec2,vfpfcnvrt@cp+1
  5506  000E92                     
  5507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  5508  000E92  C046  F00D         	movff	vfpfcnvrt@fp,stoa@fp
  5509  000E96  C047  F00E         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  5510  000E9A  C098  F00F         	movff	vfpfcnvrt@cp,stoa@s
  5511  000E9E  C099  F010         	movff	vfpfcnvrt@cp+1,stoa@s+1
  5512  000EA2  ECBF  F020         	call	_stoa	;wreg free
  5513  000EA6  C00D  F046         	movff	?_stoa,?_vfpfcnvrt
  5514  000EAA  C00E  F047         	movff	?_stoa+1,?_vfpfcnvrt+1
  5515  000EAE  EF92  F00A         	goto	l731
  5516  000EB2                     l8878:
  5517                           
  5518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  5519  000EB2  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5520  000EB6  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5521  000EBA  CFDE F004          	movff	postinc2,strncmp@_l
  5522  000EBE  CFDD F005          	movff	postdec2,strncmp@_l+1
  5523  000EC2  0EDE               	movlw	low STR_73
  5524  000EC4  6E06               	movwf	strncmp@_r^0,c
  5525  000EC6  0EFF               	movlw	high STR_73
  5526  000EC8  6E07               	movwf	(strncmp@_r+1)^0,c
  5527  000ECA  0E00               	movlw	0
  5528  000ECC  6E09               	movwf	(strncmp@n+1)^0,c
  5529  000ECE  0E03               	movlw	3
  5530  000ED0  6E08               	movwf	strncmp@n^0,c
  5531  000ED2  EC2E  F024         	call	_strncmp	;wreg free
  5532  000ED6  5004               	movf	?_strncmp^0,w,c
  5533  000ED8  1005               	iorwf	(?_strncmp+1)^0,w,c
  5534  000EDA  A4D8               	btfss	status,2,c
  5535  000EDC  EF72  F007         	goto	u11831
  5536  000EE0  EF74  F007         	goto	u11830
  5537  000EE4                     u11831:
  5538  000EE4  EFB4  F007         	goto	l8886
  5539  000EE8                     u11830:
  5540  000EE8                     
  5541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  5542  000EE8  0E03               	movlw	3
  5543  000EEA  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5544  000EEE  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5545  000EF2  26DE               	addwf	postinc2,f,c
  5546  000EF4  0E00               	movlw	0
  5547  000EF6  22DD               	addwfc	postdec2,f,c
  5548                           
  5549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5550  000EF8  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5551  000EFC  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5552  000F00  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5553  000F04  0E02               	movlw	2
  5554  000F06  26DE               	addwf	postinc2,f,c
  5555  000F08  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5556  000F0C  0E00               	movlw	0
  5557  000F0E  22DD               	addwfc	postdec2,f,c
  5558  000F10  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5559  000F14  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5560  000F18  50DF               	movf	indf2,w,c
  5561  000F1A  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  5562  000F1C  504E               	movf	(??_vfpfcnvrt+2)^0,w,c
  5563  000F1E  0100               	movlb	0	; () banked
  5564  000F20  6FB4               	movwf	vfpfcnvrt@llu& (0+255),b
  5565  000F22  6BB5               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  5566  000F24  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5567  000F26  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5568  000F28  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5569  000F2A  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5570  000F2C  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5571  000F2E  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5572  000F30                     l8882:
  5573                           
  5574                           ; BSR set to: 0
  5575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
  5576  000F30  C046  F01F         	movff	vfpfcnvrt@fp,utoa@fp
  5577  000F34  C047  F020         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  5578  000F38  C0B4  F021         	movff	vfpfcnvrt@llu,utoa@d
  5579  000F3C  C0B5  F022         	movff	vfpfcnvrt@llu+1,utoa@d+1
  5580  000F40  C0B6  F023         	movff	vfpfcnvrt@llu+2,utoa@d+2
  5581  000F44  C0B7  F024         	movff	vfpfcnvrt@llu+3,utoa@d+3
  5582  000F48  C0B8  F025         	movff	vfpfcnvrt@llu+4,utoa@d+4
  5583  000F4C  C0B9  F026         	movff	vfpfcnvrt@llu+5,utoa@d+5
  5584  000F50  C0BA  F027         	movff	vfpfcnvrt@llu+6,utoa@d+6
  5585  000F54  C0BB  F028         	movff	vfpfcnvrt@llu+7,utoa@d+7
  5586  000F58  EC5A  F01C         	call	_utoa	;wreg free
  5587  000F5C  C01F  F046         	movff	?_utoa,?_vfpfcnvrt
  5588  000F60  C020  F047         	movff	?_utoa+1,?_vfpfcnvrt+1
  5589  000F64  EF92  F00A         	goto	l731
  5590  000F68                     l8886:
  5591                           
  5592                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  5593  000F68  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5594  000F6C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5595  000F70  CFDE F004          	movff	postinc2,strncmp@_l
  5596  000F74  CFDD F005          	movff	postdec2,strncmp@_l+1
  5597  000F78  0EDF               	movlw	low (STR_73+1)
  5598  000F7A  6E06               	movwf	strncmp@_r^0,c
  5599  000F7C  0EFF               	movlw	high (STR_73+1)
  5600  000F7E  6E07               	movwf	(strncmp@_r+1)^0,c
  5601  000F80  0E00               	movlw	0
  5602  000F82  6E09               	movwf	(strncmp@n+1)^0,c
  5603  000F84  0E02               	movlw	2
  5604  000F86  6E08               	movwf	strncmp@n^0,c
  5605  000F88  EC2E  F024         	call	_strncmp	;wreg free
  5606  000F8C  5004               	movf	?_strncmp^0,w,c
  5607  000F8E  1005               	iorwf	(?_strncmp+1)^0,w,c
  5608  000F90  A4D8               	btfss	status,2,c
  5609  000F92  EFCD  F007         	goto	u11841
  5610  000F96  EFCF  F007         	goto	u11840
  5611  000F9A                     u11841:
  5612  000F9A  EFF8  F007         	goto	l8894
  5613  000F9E                     u11840:
  5614  000F9E                     
  5615                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  5616  000F9E  0E02               	movlw	2
  5617  000FA0  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5618  000FA4  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5619  000FA8  26DE               	addwf	postinc2,f,c
  5620  000FAA  0E00               	movlw	0
  5621  000FAC  22DD               	addwfc	postdec2,f,c
  5622                           
  5623                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  5624  000FAE  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5625  000FB2  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5626  000FB6  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5627  000FBA  0E02               	movlw	2
  5628  000FBC  26DE               	addwf	postinc2,f,c
  5629  000FBE  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5630  000FC2  0E00               	movlw	0
  5631  000FC4  22DD               	addwfc	postdec2,f,c
  5632  000FC6  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5633  000FCA  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5634  000FCE  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  5635  000FD2  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  5636  000FD6  C04E  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5637  000FDA  C04F  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5638  000FDE  0100               	movlb	0	; () banked
  5639  000FE0  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5640  000FE2  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5641  000FE4  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5642  000FE6  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5643  000FE8  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5644  000FEA  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5645  000FEC  EF98  F007         	goto	l8882
  5646  000FF0                     l8894:
  5647                           
  5648                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  5649  000FF0  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5650  000FF4  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5651  000FF8  CFDE FFF6          	movff	postinc2,tblptrl
  5652  000FFC  CFDD FFF7          	movff	postdec2,tblptrh
  5653  001000                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5654  001000  6AF8               	clrf	tblptru,c
  5655  001002                     	endif
  5656  001002                     	if	0	;tblptru may be non-zero
  5657  001002                     	endif
  5658  001002  0008               	tblrd		*
  5659  001004  50F5               	movf	tablat,w,c
  5660  001006  0A75               	xorlw	117
  5661  001008  A4D8               	btfss	status,2,c
  5662  00100A  EF09  F008         	goto	u11851
  5663  00100E  EF0B  F008         	goto	u11850
  5664  001012                     u11851:
  5665  001012  EF33  F008         	goto	l8902
  5666  001016                     u11850:
  5667  001016                     
  5668                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  5669  001016  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5670  00101A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5671  00101E  2ADE               	incf	postinc2,f,c
  5672  001020  0E00               	movlw	0
  5673  001022  22DD               	addwfc	postdec2,f,c
  5674                           
  5675                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  5676  001024  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5677  001028  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5678  00102C  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5679  001030  0E02               	movlw	2
  5680  001032  26DE               	addwf	postinc2,f,c
  5681  001034  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5682  001038  0E00               	movlw	0
  5683  00103A  22DD               	addwfc	postdec2,f,c
  5684  00103C  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5685  001040  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5686  001044  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  5687  001048  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  5688  00104C  C04E  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5689  001050  C04F  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5690  001054  0100               	movlb	0	; () banked
  5691  001056  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5692  001058  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5693  00105A  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5694  00105C  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5695  00105E  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5696  001060  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5697  001062  EF98  F007         	goto	l8882
  5698  001066                     l8902:
  5699                           
  5700                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  5701  001066  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5702  00106A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5703  00106E  CFDE F004          	movff	postinc2,strncmp@_l
  5704  001072  CFDD F005          	movff	postdec2,strncmp@_l+1
  5705  001076  0EF8               	movlw	low STR_83
  5706  001078  6E06               	movwf	strncmp@_r^0,c
  5707  00107A  0EFF               	movlw	high STR_83
  5708  00107C  6E07               	movwf	(strncmp@_r+1)^0,c
  5709  00107E  0E00               	movlw	0
  5710  001080  6E09               	movwf	(strncmp@n+1)^0,c
  5711  001082  0E02               	movlw	2
  5712  001084  6E08               	movwf	strncmp@n^0,c
  5713  001086  EC2E  F024         	call	_strncmp	;wreg free
  5714  00108A  5004               	movf	?_strncmp^0,w,c
  5715  00108C  1005               	iorwf	(?_strncmp+1)^0,w,c
  5716  00108E  A4D8               	btfss	status,2,c
  5717  001090  EF4C  F008         	goto	u11861
  5718  001094  EF4E  F008         	goto	u11860
  5719  001098                     u11861:
  5720  001098  EF77  F008         	goto	l8910
  5721  00109C                     u11860:
  5722  00109C                     
  5723                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  5724  00109C  0E02               	movlw	2
  5725  00109E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5726  0010A2  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5727  0010A6  26DE               	addwf	postinc2,f,c
  5728  0010A8  0E00               	movlw	0
  5729  0010AA  22DD               	addwfc	postdec2,f,c
  5730                           
  5731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5732  0010AC  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5733  0010B0  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5734  0010B4  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5735  0010B8  0E02               	movlw	2
  5736  0010BA  26DE               	addwf	postinc2,f,c
  5737  0010BC  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5738  0010C0  0E00               	movlw	0
  5739  0010C2  22DD               	addwfc	postdec2,f,c
  5740  0010C4  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5741  0010C8  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5742  0010CC  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  5743  0010D0  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  5744  0010D4  C04E  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5745  0010D8  C04F  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5746  0010DC  0100               	movlb	0	; () banked
  5747  0010DE  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5748  0010E0  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5749  0010E2  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5750  0010E4  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5751  0010E6  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5752  0010E8  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5753  0010EA  EF98  F007         	goto	l8882
  5754  0010EE                     l8910:
  5755                           
  5756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  5757  0010EE  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5758  0010F2  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5759  0010F6  CFDE F004          	movff	postinc2,strncmp@_l
  5760  0010FA  CFDD F005          	movff	postdec2,strncmp@_l+1
  5761  0010FE  0EE2               	movlw	low STR_88
  5762  001100  6E06               	movwf	strncmp@_r^0,c
  5763  001102  0EFF               	movlw	high STR_88
  5764  001104  6E07               	movwf	(strncmp@_r+1)^0,c
  5765  001106  0E00               	movlw	0
  5766  001108  6E09               	movwf	(strncmp@n+1)^0,c
  5767  00110A  0E03               	movlw	3
  5768  00110C  6E08               	movwf	strncmp@n^0,c
  5769  00110E  EC2E  F024         	call	_strncmp	;wreg free
  5770  001112  5004               	movf	?_strncmp^0,w,c
  5771  001114  1005               	iorwf	(?_strncmp+1)^0,w,c
  5772  001116  B4D8               	btfsc	status,2,c
  5773  001118  EF90  F008         	goto	u11871
  5774  00111C  EF92  F008         	goto	u11870
  5775  001120                     u11871:
  5776  001120  EFAD  F008         	goto	l8914
  5777  001124                     u11870:
  5778  001124  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5779  001128  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5780  00112C  CFDE F004          	movff	postinc2,strncmp@_l
  5781  001130  CFDD F005          	movff	postdec2,strncmp@_l+1
  5782  001134  0EC2               	movlw	low STR_92
  5783  001136  6E06               	movwf	strncmp@_r^0,c
  5784  001138  0EFF               	movlw	high STR_92
  5785  00113A  6E07               	movwf	(strncmp@_r+1)^0,c
  5786  00113C  0E00               	movlw	0
  5787  00113E  6E09               	movwf	(strncmp@n+1)^0,c
  5788  001140  0E03               	movlw	3
  5789  001142  6E08               	movwf	strncmp@n^0,c
  5790  001144  EC2E  F024         	call	_strncmp	;wreg free
  5791  001148  5004               	movf	?_strncmp^0,w,c
  5792  00114A  1005               	iorwf	(?_strncmp+1)^0,w,c
  5793  00114C  A4D8               	btfss	status,2,c
  5794  00114E  EFAB  F008         	goto	u11881
  5795  001152  EFAD  F008         	goto	u11880
  5796  001156                     u11881:
  5797  001156  EF03  F009         	goto	l8924
  5798  00115A                     u11880:
  5799  00115A                     l8914:
  5800                           
  5801                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
  5802  00115A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5803  00115E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5804  001162  CFDE F04C          	movff	postinc2,??_vfpfcnvrt
  5805  001166  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+1
  5806  00116A  0E02               	movlw	2
  5807  00116C  264C               	addwf	??_vfpfcnvrt^0,f,c
  5808  00116E  0E00               	movlw	0
  5809  001170  224D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5810  001172  C04C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5811  001176  C04D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5812  00117A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5813  00117A  6AF8               	clrf	tblptru,c
  5814  00117C                     	endif
  5815  00117C                     	if	0	;tblptru may be non-zero
  5816  00117C                     	endif
  5817  00117C  0008               	tblrd		*
  5818  00117E  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  5819  001182                     
  5820                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  5821  001182  0E03               	movlw	3
  5822  001184  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5823  001188  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5824  00118C  26DE               	addwf	postinc2,f,c
  5825  00118E  0E00               	movlw	0
  5826  001190  22DD               	addwfc	postdec2,f,c
  5827  001192                     
  5828                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5829  001192  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5830  001196  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5831  00119A  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5832  00119E  0E02               	movlw	2
  5833  0011A0  26DE               	addwf	postinc2,f,c
  5834  0011A2  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5835  0011A6  0E00               	movlw	0
  5836  0011A8  22DD               	addwfc	postdec2,f,c
  5837  0011AA  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5838  0011AE  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5839  0011B2  50DF               	movf	indf2,w,c
  5840  0011B4  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  5841  0011B6  504E               	movf	(??_vfpfcnvrt+2)^0,w,c
  5842  0011B8  0100               	movlb	0	; () banked
  5843  0011BA  6FB4               	movwf	vfpfcnvrt@llu& (0+255),b
  5844  0011BC  6BB5               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  5845  0011BE  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5846  0011C0  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5847  0011C2  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5848  0011C4  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5849  0011C6  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5850  0011C8  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5851  0011CA                     l8920:
  5852                           
  5853                           ; BSR set to: 0
  5854                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
  5855  0011CA  C046  F01F         	movff	vfpfcnvrt@fp,xtoa@fp
  5856  0011CE  C047  F020         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5857  0011D2  C0B4  F021         	movff	vfpfcnvrt@llu,xtoa@d
  5858  0011D6  C0B5  F022         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5859  0011DA  C0B6  F023         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5860  0011DE  C0B7  F024         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5861  0011E2  C0B8  F025         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5862  0011E6  C0B9  F026         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5863  0011EA  C0BA  F027         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5864  0011EE  C0BB  F028         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5865  0011F2  C0B3  F029         	movff	vfpfcnvrt@c,xtoa@x
  5866  0011F6  ECE3  F019         	call	_xtoa	;wreg free
  5867  0011FA  C01F  F046         	movff	?_xtoa,?_vfpfcnvrt
  5868  0011FE  C020  F047         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5869  001202  EF92  F00A         	goto	l731
  5870  001206                     l8924:
  5871                           
  5872                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
  5873  001206  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5874  00120A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5875  00120E  CFDE F004          	movff	postinc2,strncmp@_l
  5876  001212  CFDD F005          	movff	postdec2,strncmp@_l+1
  5877  001216  0EE3               	movlw	low (STR_88+1)
  5878  001218  6E06               	movwf	strncmp@_r^0,c
  5879  00121A  0EFF               	movlw	high (STR_88+1)
  5880  00121C  6E07               	movwf	(strncmp@_r+1)^0,c
  5881  00121E  0E00               	movlw	0
  5882  001220  6E09               	movwf	(strncmp@n+1)^0,c
  5883  001222  0E02               	movlw	2
  5884  001224  6E08               	movwf	strncmp@n^0,c
  5885  001226  EC2E  F024         	call	_strncmp	;wreg free
  5886  00122A  5004               	movf	?_strncmp^0,w,c
  5887  00122C  1005               	iorwf	(?_strncmp+1)^0,w,c
  5888  00122E  B4D8               	btfsc	status,2,c
  5889  001230  EF1C  F009         	goto	u11891
  5890  001234  EF1E  F009         	goto	u11890
  5891  001238                     u11891:
  5892  001238  EF39  F009         	goto	l8928
  5893  00123C                     u11890:
  5894  00123C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5895  001240  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5896  001244  CFDE F004          	movff	postinc2,strncmp@_l
  5897  001248  CFDD F005          	movff	postdec2,strncmp@_l+1
  5898  00124C  0EC3               	movlw	low (STR_92+1)
  5899  00124E  6E06               	movwf	strncmp@_r^0,c
  5900  001250  0EFF               	movlw	high (STR_92+1)
  5901  001252  6E07               	movwf	(strncmp@_r+1)^0,c
  5902  001254  0E00               	movlw	0
  5903  001256  6E09               	movwf	(strncmp@n+1)^0,c
  5904  001258  0E02               	movlw	2
  5905  00125A  6E08               	movwf	strncmp@n^0,c
  5906  00125C  EC2E  F024         	call	_strncmp	;wreg free
  5907  001260  5004               	movf	?_strncmp^0,w,c
  5908  001262  1005               	iorwf	(?_strncmp+1)^0,w,c
  5909  001264  A4D8               	btfss	status,2,c
  5910  001266  EF37  F009         	goto	u11901
  5911  00126A  EF39  F009         	goto	u11900
  5912  00126E                     u11901:
  5913  00126E  EF76  F009         	goto	l8938
  5914  001272                     u11900:
  5915  001272                     l8928:
  5916                           
  5917                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
  5918  001272  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5919  001276  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5920  00127A  CFDE F04C          	movff	postinc2,??_vfpfcnvrt
  5921  00127E  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+1
  5922  001282  0E01               	movlw	1
  5923  001284  264C               	addwf	??_vfpfcnvrt^0,f,c
  5924  001286  0E00               	movlw	0
  5925  001288  224D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5926  00128A  C04C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5927  00128E  C04D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5928  001292                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5929  001292  6AF8               	clrf	tblptru,c
  5930  001294                     	endif
  5931  001294                     	if	0	;tblptru may be non-zero
  5932  001294                     	endif
  5933  001294  0008               	tblrd		*
  5934  001296  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  5935  00129A                     
  5936                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  5937  00129A  0E02               	movlw	2
  5938  00129C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5939  0012A0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5940  0012A4  26DE               	addwf	postinc2,f,c
  5941  0012A6  0E00               	movlw	0
  5942  0012A8  22DD               	addwfc	postdec2,f,c
  5943  0012AA                     
  5944                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  5945  0012AA  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5946  0012AE  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5947  0012B2  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5948  0012B6  0E02               	movlw	2
  5949  0012B8  26DE               	addwf	postinc2,f,c
  5950  0012BA  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5951  0012BE  0E00               	movlw	0
  5952  0012C0  22DD               	addwfc	postdec2,f,c
  5953  0012C2  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5954  0012C6  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5955  0012CA  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  5956  0012CE  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  5957  0012D2  C04E  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5958  0012D6  C04F  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5959  0012DA  0100               	movlb	0	; () banked
  5960  0012DC  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5961  0012DE  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5962  0012E0  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5963  0012E2  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5964  0012E4  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5965  0012E6  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5966  0012E8  EFE5  F008         	goto	l8920
  5967  0012EC                     l8938:
  5968                           
  5969                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  5970  0012EC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5971  0012F0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5972  0012F4  CFDE FFF6          	movff	postinc2,tblptrl
  5973  0012F8  CFDD FFF7          	movff	postdec2,tblptrh
  5974  0012FC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5975  0012FC  6AF8               	clrf	tblptru,c
  5976  0012FE                     	endif
  5977  0012FE                     	if	0	;tblptru may be non-zero
  5978  0012FE                     	endif
  5979  0012FE  0008               	tblrd		*
  5980  001300  50F5               	movf	tablat,w,c
  5981  001302  0A78               	xorlw	120
  5982  001304  B4D8               	btfsc	status,2,c
  5983  001306  EF87  F009         	goto	u11911
  5984  00130A  EF89  F009         	goto	u11910
  5985  00130E                     u11911:
  5986  00130E  EF9C  F009         	goto	l8942
  5987  001312                     u11910:
  5988  001312  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5989  001316  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5990  00131A  CFDE FFF6          	movff	postinc2,tblptrl
  5991  00131E  CFDD FFF7          	movff	postdec2,tblptrh
  5992  001322                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5993  001322  6AF8               	clrf	tblptru,c
  5994  001324                     	endif
  5995  001324                     	if	0	;tblptru may be non-zero
  5996  001324                     	endif
  5997  001324  0008               	tblrd		*
  5998  001326  50F5               	movf	tablat,w,c
  5999  001328  0A58               	xorlw	88
  6000  00132A  A4D8               	btfss	status,2,c
  6001  00132C  EF9A  F009         	goto	u11921
  6002  001330  EF9C  F009         	goto	u11920
  6003  001334                     u11921:
  6004  001334  EFD0  F009         	goto	l8952
  6005  001338                     u11920:
  6006  001338                     l8942:
  6007                           
  6008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  6009  001338  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6010  00133C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6011  001340  CFDE FFF6          	movff	postinc2,tblptrl
  6012  001344  CFDD FFF7          	movff	postdec2,tblptrh
  6013  001348                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6014  001348  6AF8               	clrf	tblptru,c
  6015  00134A                     	endif
  6016  00134A                     	if	0	;tblptru may be non-zero
  6017  00134A                     	endif
  6018  00134A  0008               	tblrd		*
  6019  00134C  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  6020  001350                     
  6021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  6022  001350  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6023  001354  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6024  001358  2ADE               	incf	postinc2,f,c
  6025  00135A  0E00               	movlw	0
  6026  00135C  22DD               	addwfc	postdec2,f,c
  6027  00135E                     
  6028                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  6029  00135E  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6030  001362  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6031  001366  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  6032  00136A  0E02               	movlw	2
  6033  00136C  26DE               	addwf	postinc2,f,c
  6034  00136E  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  6035  001372  0E00               	movlw	0
  6036  001374  22DD               	addwfc	postdec2,f,c
  6037  001376  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6038  00137A  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6039  00137E  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  6040  001382  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  6041  001386  C04E  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6042  00138A  C04F  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6043  00138E  0100               	movlb	0	; () banked
  6044  001390  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6045  001392  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6046  001394  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6047  001396  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6048  001398  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6049  00139A  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6050  00139C  EFE5  F008         	goto	l8920
  6051  0013A0                     l8952:
  6052                           
  6053                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
  6054  0013A0  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6055  0013A4  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6056  0013A8  CFDE F004          	movff	postinc2,strncmp@_l
  6057  0013AC  CFDD F005          	movff	postdec2,strncmp@_l+1
  6058  0013B0  0EFB               	movlw	low STR_106
  6059  0013B2  6E06               	movwf	strncmp@_r^0,c
  6060  0013B4  0EFF               	movlw	high STR_106
  6061  0013B6  6E07               	movwf	(strncmp@_r+1)^0,c
  6062  0013B8  0E00               	movlw	0
  6063  0013BA  6E09               	movwf	(strncmp@n+1)^0,c
  6064  0013BC  0E02               	movlw	2
  6065  0013BE  6E08               	movwf	strncmp@n^0,c
  6066  0013C0  EC2E  F024         	call	_strncmp	;wreg free
  6067  0013C4  5004               	movf	?_strncmp^0,w,c
  6068  0013C6  1005               	iorwf	(?_strncmp+1)^0,w,c
  6069  0013C8  B4D8               	btfsc	status,2,c
  6070  0013CA  EFE9  F009         	goto	u11931
  6071  0013CE  EFEB  F009         	goto	u11930
  6072  0013D2                     u11931:
  6073  0013D2  EF06  F00A         	goto	l8956
  6074  0013D6                     u11930:
  6075  0013D6  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6076  0013DA  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6077  0013DE  CFDE F004          	movff	postinc2,strncmp@_l
  6078  0013E2  CFDD F005          	movff	postdec2,strncmp@_l+1
  6079  0013E6  0EE6               	movlw	low STR_110
  6080  0013E8  6E06               	movwf	strncmp@_r^0,c
  6081  0013EA  0EFF               	movlw	high STR_110
  6082  0013EC  6E07               	movwf	(strncmp@_r+1)^0,c
  6083  0013EE  0E00               	movlw	0
  6084  0013F0  6E09               	movwf	(strncmp@n+1)^0,c
  6085  0013F2  0E02               	movlw	2
  6086  0013F4  6E08               	movwf	strncmp@n^0,c
  6087  0013F6  EC2E  F024         	call	_strncmp	;wreg free
  6088  0013FA  5004               	movf	?_strncmp^0,w,c
  6089  0013FC  1005               	iorwf	(?_strncmp+1)^0,w,c
  6090  0013FE  A4D8               	btfss	status,2,c
  6091  001400  EF04  F00A         	goto	u11941
  6092  001404  EF06  F00A         	goto	u11940
  6093  001408                     u11941:
  6094  001408  EF43  F00A         	goto	l8966
  6095  00140C                     u11940:
  6096  00140C                     l8956:
  6097                           
  6098                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
  6099  00140C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6100  001410  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6101  001414  CFDE F04C          	movff	postinc2,??_vfpfcnvrt
  6102  001418  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+1
  6103  00141C  0E01               	movlw	1
  6104  00141E  264C               	addwf	??_vfpfcnvrt^0,f,c
  6105  001420  0E00               	movlw	0
  6106  001422  224D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  6107  001424  C04C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6108  001428  C04D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6109  00142C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6110  00142C  6AF8               	clrf	tblptru,c
  6111  00142E                     	endif
  6112  00142E                     	if	0	;tblptru may be non-zero
  6113  00142E                     	endif
  6114  00142E  0008               	tblrd		*
  6115  001430  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  6116  001434                     
  6117                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  6118  001434  0E02               	movlw	2
  6119  001436  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6120  00143A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6121  00143E  26DE               	addwf	postinc2,f,c
  6122  001440  0E00               	movlw	0
  6123  001442  22DD               	addwfc	postdec2,f,c
  6124  001444                     
  6125                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6126  001444  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6127  001448  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6128  00144C  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  6129  001450  0E02               	movlw	2
  6130  001452  26DE               	addwf	postinc2,f,c
  6131  001454  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  6132  001458  0E00               	movlw	0
  6133  00145A  22DD               	addwfc	postdec2,f,c
  6134  00145C  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6135  001460  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6136  001464  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  6137  001468  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  6138  00146C  C04E  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6139  001470  C04F  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6140  001474  0100               	movlb	0	; () banked
  6141  001476  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6142  001478  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6143  00147A  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6144  00147C  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6145  00147E  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6146  001480  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6147  001482  EFE5  F008         	goto	l8920
  6148  001486                     l8966:
  6149                           
  6150                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  6151  001486  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6152  00148A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6153  00148E  CFDE FFF6          	movff	postinc2,tblptrl
  6154  001492  CFDD FFF7          	movff	postdec2,tblptrh
  6155  001496                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6156  001496  6AF8               	clrf	tblptru,c
  6157  001498                     	endif
  6158  001498                     	if	0	;tblptru may be non-zero
  6159  001498                     	endif
  6160  001498  0008               	tblrd		*
  6161  00149A  50F5               	movf	tablat,w,c
  6162  00149C  0A25               	xorlw	37
  6163  00149E  A4D8               	btfss	status,2,c
  6164  0014A0  EF54  F00A         	goto	u11951
  6165  0014A4  EF56  F00A         	goto	u11950
  6166  0014A8                     u11951:
  6167  0014A8  EF6D  F00A         	goto	l8976
  6168  0014AC                     u11950:
  6169  0014AC                     
  6170                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  6171  0014AC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6172  0014B0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6173  0014B4  2ADE               	incf	postinc2,f,c
  6174  0014B6  0E00               	movlw	0
  6175  0014B8  22DD               	addwfc	postdec2,f,c
  6176  0014BA                     
  6177                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  6178  0014BA  0E00               	movlw	0
  6179  0014BC  6E05               	movwf	(fputc@c+1)^0,c
  6180  0014BE  0E25               	movlw	37
  6181  0014C0  6E04               	movwf	fputc@c^0,c
  6182  0014C2  C046  F006         	movff	vfpfcnvrt@fp,fputc@fp
  6183  0014C6  C047  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6184  0014CA  ECAD  F027         	call	_fputc	;wreg free
  6185  0014CE                     l8972:
  6186                           
  6187                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  6188  0014CE  0E00               	movlw	0
  6189  0014D0  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  6190  0014D2  0E01               	movlw	1
  6191  0014D4  6E46               	movwf	?_vfpfcnvrt^0,c
  6192  0014D6  EF92  F00A         	goto	l731
  6193  0014DA                     l8976:
  6194                           
  6195                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  6196  0014DA  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6197  0014DE  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6198  0014E2  2ADE               	incf	postinc2,f,c
  6199  0014E4  0E00               	movlw	0
  6200  0014E6  22DD               	addwfc	postdec2,f,c
  6201  0014E8  EF04  F006         	goto	l8828
  6202  0014EC                     l8982:
  6203                           
  6204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  6205  0014EC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6206  0014F0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6207  0014F4  CFDE FFF6          	movff	postinc2,tblptrl
  6208  0014F8  CFDD FFF7          	movff	postdec2,tblptrh
  6209  0014FC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6210  0014FC  6AF8               	clrf	tblptru,c
  6211  0014FE                     	endif
  6212  0014FE                     	if	0	;tblptru may be non-zero
  6213  0014FE                     	endif
  6214  0014FE  0008               	tblrd		*
  6215  001500  50F5               	movf	tablat,w,c
  6216  001502  6E04               	movwf	fputc@c^0,c
  6217  001504  6A05               	clrf	(fputc@c+1)^0,c
  6218  001506  C046  F006         	movff	vfpfcnvrt@fp,fputc@fp
  6219  00150A  C047  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6220  00150E  ECAD  F027         	call	_fputc	;wreg free
  6221  001512                     
  6222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  6223  001512  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6224  001516  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6225  00151A  2ADE               	incf	postinc2,f,c
  6226  00151C  0E00               	movlw	0
  6227  00151E  22DD               	addwfc	postdec2,f,c
  6228  001520  EF67  F00A         	goto	l8972
  6229  001524                     l731:
  6230  001524  0012               	return		;funcret
  6231  001526                     __end_of_vfpfcnvrt:
  6232                           	opt callstack 0
  6233                           
  6234 ;; *************** function _xtoa *****************
  6235 ;; Defined at:
  6236 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6237 ;; Parameters:    Size  Location     Type
  6238 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  6239 ;;		 -> vsnprintf@f(6), 
  6240 ;;  d               8   32[COMRAM] unsigned long long 
  6241 ;;  x               1   40[COMRAM] unsigned char 
  6242 ;; Auto vars:     Size  Location     Type
  6243 ;;  n               8   57[COMRAM] unsigned long long 
  6244 ;;  c               2   67[COMRAM] int 
  6245 ;;  i               2   65[COMRAM] int 
  6246 ;;  w               2   55[COMRAM] int 
  6247 ;;  p               2   53[COMRAM] int 
  6248 ;; Return value:  Size  Location     Type
  6249 ;;                  2   30[COMRAM] int 
  6250 ;; Registers used:
  6251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6252 ;; Tracked objects:
  6253 ;;		On entry : 0/0
  6254 ;;		On exit  : 0/0
  6255 ;;		Unchanged: 0/0
  6256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6257 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6258 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6259 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6260 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6261 ;;Total ram usage:       39 bytes
  6262 ;; Hardware stack levels used:    1
  6263 ;; Hardware stack levels required when called:    8
  6264 ;; This function calls:
  6265 ;;		_isalpha
  6266 ;;		_isupper
  6267 ;;		_pad
  6268 ;;		_toupper
  6269 ;; This function is called by:
  6270 ;;		_vfpfcnvrt
  6271 ;; This function uses a non-reentrant model
  6272 ;;
  6273                           
  6274                           	psect	text5
  6275  0033C6                     __ptext5:
  6276                           	opt callstack 0
  6277  0033C6                     _xtoa:
  6278                           	opt callstack 18
  6279  0033C6                     
  6280                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  6281  0033C6  BE59               	btfsc	(_prec+1)^0,7,c
  6282  0033C8  EFE8  F019         	goto	u11131
  6283  0033CC  EFEA  F019         	goto	u11130
  6284  0033D0                     u11131:
  6285  0033D0  EFEC  F019         	goto	l8502
  6286  0033D4                     u11130:
  6287  0033D4                     
  6288                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  6289  0033D4  0100               	movlb	0	; () banked
  6290  0033D6  93F2               	bcf	_flags& (0+255),1,b
  6291  0033D8                     l8502:
  6292                           
  6293                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  6294  0033D8  BE59               	btfsc	(_prec+1)^0,7,c
  6295  0033DA  EFF9  F019         	goto	u11140
  6296  0033DE  5059               	movf	(_prec+1)^0,w,c
  6297  0033E0  E106               	bnz	u11141
  6298  0033E2  0458               	decf	_prec^0,w,c
  6299  0033E4  B0D8               	btfsc	status,0,c
  6300  0033E6  EFF7  F019         	goto	u11141
  6301  0033EA  EFF9  F019         	goto	u11140
  6302  0033EE                     u11141:
  6303  0033EE  EFFF  F019         	goto	l667
  6304  0033F2                     u11140:
  6305  0033F2  0E00               	movlw	0
  6306  0033F4  6E37               	movwf	(xtoa@p+1)^0,c
  6307  0033F6  0E01               	movlw	1
  6308  0033F8  6E36               	movwf	xtoa@p^0,c
  6309  0033FA  EF03  F01A         	goto	l669
  6310  0033FE                     l667:
  6311  0033FE  C058  F036         	movff	_prec,xtoa@p
  6312  003402  C059  F037         	movff	_prec+1,xtoa@p+1
  6313  003406                     l669:
  6314                           
  6315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  6316  003406  C0F0  F038         	movff	_width,xtoa@w
  6317  00340A  C0F1  F039         	movff	_width+1,xtoa@w+1
  6318                           
  6319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  6320  00340E  0100               	movlb	0	; () banked
  6321  003410  A9F2               	btfss	_flags& (0+255),4,b
  6322  003412  EF0D  F01A         	goto	u11151
  6323  003416  EF0F  F01A         	goto	u11150
  6324  00341A                     u11151:
  6325  00341A  EF13  F01A         	goto	l8508
  6326  00341E                     u11150:
  6327  00341E                     
  6328                           ; BSR set to: 0
  6329                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  6330  00341E  0EFE               	movlw	254
  6331  003420  2638               	addwf	xtoa@w^0,f,c
  6332  003422  0EFF               	movlw	255
  6333  003424  2239               	addwfc	(xtoa@w+1)^0,f,c
  6334  003426                     l8508:
  6335                           
  6336                           ; BSR set to: 0
  6337                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  6338  003426  C021  F03A         	movff	xtoa@d,xtoa@n
  6339  00342A  C022  F03B         	movff	xtoa@d+1,xtoa@n+1
  6340  00342E  C023  F03C         	movff	xtoa@d+2,xtoa@n+2
  6341  003432  C024  F03D         	movff	xtoa@d+3,xtoa@n+3
  6342  003436  C025  F03E         	movff	xtoa@d+4,xtoa@n+4
  6343  00343A  C026  F03F         	movff	xtoa@d+5,xtoa@n+5
  6344  00343E  C027  F040         	movff	xtoa@d+6,xtoa@n+6
  6345  003442  C028  F041         	movff	xtoa@d+7,xtoa@n+7
  6346  003446                     
  6347                           ; BSR set to: 0
  6348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  6349  003446  0E00               	movlw	0
  6350  003448  6E43               	movwf	(xtoa@i+1)^0,c
  6351  00344A  0E4F               	movlw	79
  6352  00344C  6E42               	movwf	xtoa@i^0,c
  6353  00344E                     
  6354                           ; BSR set to: 0
  6355                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  6356  00344E  0E00               	movlw	0
  6357  003450  0101               	movlb	1	; () banked
  6358  003452  6FB3               	movwf	(_dbuf+79)& (0+255),b
  6359                           
  6360                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6361  003454  EFDF  F01A         	goto	l8544
  6362  003458                     l8514:
  6363                           
  6364                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  6365  003458  0642               	decf	xtoa@i^0,f,c
  6366  00345A  A0D8               	btfss	status,0,c
  6367  00345C  0643               	decf	(xtoa@i+1)^0,f,c
  6368  00345E                     
  6369                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  6370  00345E  0E0F               	movlw	15
  6371  003460  143A               	andwf	xtoa@n^0,w,c
  6372  003462  6E44               	movwf	xtoa@c^0,c
  6373  003464  6A45               	clrf	(xtoa@c+1)^0,c
  6374  003466                     
  6375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  6376  003466  BE45               	btfsc	(xtoa@c+1)^0,7,c
  6377  003468  EF3F  F01A         	goto	u11161
  6378  00346C  5045               	movf	(xtoa@c+1)^0,w,c
  6379  00346E  E109               	bnz	u11160
  6380  003470  0E0A               	movlw	10
  6381  003472  5C44               	subwf	xtoa@c^0,w,c
  6382  003474  A0D8               	btfss	status,0,c
  6383  003476  EF3F  F01A         	goto	u11161
  6384  00347A  EF41  F01A         	goto	u11160
  6385  00347E                     u11161:
  6386  00347E  EF49  F01A         	goto	l8522
  6387  003482                     u11160:
  6388  003482  0E57               	movlw	87
  6389  003484  2444               	addwf	xtoa@c^0,w,c
  6390  003486  6E44               	movwf	xtoa@c^0,c
  6391  003488  0E00               	movlw	0
  6392  00348A  2045               	addwfc	(xtoa@c+1)^0,w,c
  6393  00348C  6E45               	movwf	(xtoa@c+1)^0,c
  6394  00348E  EF4F  F01A         	goto	l676
  6395  003492                     l8522:
  6396  003492  0E30               	movlw	48
  6397  003494  2444               	addwf	xtoa@c^0,w,c
  6398  003496  6E44               	movwf	xtoa@c^0,c
  6399  003498  0E00               	movlw	0
  6400  00349A  2045               	addwfc	(xtoa@c+1)^0,w,c
  6401  00349C  6E45               	movwf	(xtoa@c+1)^0,c
  6402  00349E                     l676:
  6403  00349E  0EBF               	movlw	191
  6404  0034A0  6E2A               	movwf	??_xtoa^0,c
  6405  0034A2  0EFF               	movlw	255
  6406  0034A4  6E2B               	movwf	(??_xtoa+1)^0,c
  6407  0034A6  5029               	movf	xtoa@x^0,w,c
  6408  0034A8  6E2C               	movwf	(??_xtoa+2)^0,c
  6409  0034AA  6A2D               	clrf	(??_xtoa+3)^0,c
  6410  0034AC  502A               	movf	??_xtoa^0,w,c
  6411  0034AE  262C               	addwf	(??_xtoa+2)^0,f,c
  6412  0034B0  502B               	movf	(??_xtoa+1)^0,w,c
  6413  0034B2  222D               	addwfc	(??_xtoa+3)^0,f,c
  6414  0034B4  502D               	movf	(??_xtoa+3)^0,w,c
  6415  0034B6  E10A               	bnz	u11170
  6416  0034B8  0E1A               	movlw	26
  6417  0034BA  5C2C               	subwf	(??_xtoa+2)^0,w,c
  6418  0034BC  A0D8               	btfss	status,0,c
  6419  0034BE  EF63  F01A         	goto	u11171
  6420  0034C2  EF66  F01A         	goto	u11170
  6421  0034C6                     u11171:
  6422  0034C6  0E01               	movlw	1
  6423  0034C8  EF67  F01A         	goto	u11180
  6424  0034CC                     u11170:
  6425  0034CC  0E00               	movlw	0
  6426  0034CE                     u11180:
  6427  0034CE  6E32               	movwf	_xtoa$1360^0,c
  6428  0034D0  6A33               	clrf	(_xtoa$1360+1)^0,c
  6429  0034D2  5032               	movf	_xtoa$1360^0,w,c
  6430  0034D4  1033               	iorwf	(_xtoa$1360+1)^0,w,c
  6431  0034D6  B4D8               	btfsc	status,2,c
  6432  0034D8  EF70  F01A         	goto	u11191
  6433  0034DC  EF72  F01A         	goto	u11190
  6434  0034E0                     u11191:
  6435  0034E0  EFA2  F01A         	goto	l8536
  6436  0034E4                     u11190:
  6437  0034E4  0E9F               	movlw	159
  6438  0034E6  6E2A               	movwf	??_xtoa^0,c
  6439  0034E8  0EFF               	movlw	255
  6440  0034EA  6E2B               	movwf	(??_xtoa+1)^0,c
  6441  0034EC  0E20               	movlw	32
  6442  0034EE  1044               	iorwf	xtoa@c^0,w,c
  6443  0034F0  6E2C               	movwf	(??_xtoa+2)^0,c
  6444  0034F2  0E00               	movlw	0
  6445  0034F4  1045               	iorwf	(xtoa@c+1)^0,w,c
  6446  0034F6  6E2D               	movwf	(??_xtoa+3)^0,c
  6447  0034F8  502A               	movf	??_xtoa^0,w,c
  6448  0034FA  262C               	addwf	(??_xtoa+2)^0,f,c
  6449  0034FC  502B               	movf	(??_xtoa+1)^0,w,c
  6450  0034FE  222D               	addwfc	(??_xtoa+3)^0,f,c
  6451  003500  502D               	movf	(??_xtoa+3)^0,w,c
  6452  003502  E10A               	bnz	u11200
  6453  003504  0E1A               	movlw	26
  6454  003506  5C2C               	subwf	(??_xtoa+2)^0,w,c
  6455  003508  A0D8               	btfss	status,0,c
  6456  00350A  EF89  F01A         	goto	u11201
  6457  00350E  EF8C  F01A         	goto	u11200
  6458  003512                     u11201:
  6459  003512  0E01               	movlw	1
  6460  003514  EF8D  F01A         	goto	u11210
  6461  003518                     u11200:
  6462  003518  0E00               	movlw	0
  6463  00351A                     u11210:
  6464  00351A  6E34               	movwf	_xtoa$1361^0,c
  6465  00351C  6A35               	clrf	(_xtoa$1361+1)^0,c
  6466  00351E  5034               	movf	_xtoa$1361^0,w,c
  6467  003520  1035               	iorwf	(_xtoa$1361+1)^0,w,c
  6468  003522  B4D8               	btfsc	status,2,c
  6469  003524  EF96  F01A         	goto	u11221
  6470  003528  EF98  F01A         	goto	u11220
  6471  00352C                     u11221:
  6472  00352C  EFA2  F01A         	goto	l8536
  6473  003530                     u11220:
  6474  003530                     
  6475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  6476  003530  C044  F00A         	movff	xtoa@c,toupper@c
  6477  003534  C045  F00B         	movff	xtoa@c+1,toupper@c+1
  6478  003538  EC7F  F02A         	call	_toupper	;wreg free
  6479  00353C  C00A  F044         	movff	?_toupper,xtoa@c
  6480  003540  C00B  F045         	movff	?_toupper+1,xtoa@c+1
  6481  003544                     l8536:
  6482                           
  6483                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  6484  003544  0E64               	movlw	low _dbuf
  6485  003546  2442               	addwf	xtoa@i^0,w,c
  6486  003548  6ED9               	movwf	fsr2l,c
  6487  00354A  0E01               	movlw	high _dbuf
  6488  00354C  2043               	addwfc	(xtoa@i+1)^0,w,c
  6489  00354E  6EDA               	movwf	fsr2h,c
  6490  003550  C044  FFDF         	movff	xtoa@c,indf2
  6491  003554                     
  6492                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  6493  003554  0636               	decf	xtoa@p^0,f,c
  6494  003556  A0D8               	btfss	status,0,c
  6495  003558  0637               	decf	(xtoa@p+1)^0,f,c
  6496  00355A                     
  6497                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  6498  00355A  0638               	decf	xtoa@w^0,f,c
  6499  00355C  A0D8               	btfss	status,0,c
  6500  00355E  0639               	decf	(xtoa@w+1)^0,f,c
  6501  003560                     
  6502                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  6503  003560  C03A  F02A         	movff	xtoa@n,??_xtoa
  6504  003564  C03B  F02B         	movff	xtoa@n+1,??_xtoa+1
  6505  003568  C03C  F02C         	movff	xtoa@n+2,??_xtoa+2
  6506  00356C  C03D  F02D         	movff	xtoa@n+3,??_xtoa+3
  6507  003570  C03E  F02E         	movff	xtoa@n+4,??_xtoa+4
  6508  003574  C03F  F02F         	movff	xtoa@n+5,??_xtoa+5
  6509  003578  C040  F030         	movff	xtoa@n+6,??_xtoa+6
  6510  00357C  C041  F031         	movff	xtoa@n+7,??_xtoa+7
  6511  003580  0E05               	movlw	5
  6512  003582  EFCC  F01A         	goto	u11230
  6513  003586                     u11235:
  6514  003586  90D8               	bcf	status,0,c
  6515  003588  3231               	rrcf	(??_xtoa+7)^0,f,c
  6516  00358A  3230               	rrcf	(??_xtoa+6)^0,f,c
  6517  00358C  322F               	rrcf	(??_xtoa+5)^0,f,c
  6518  00358E  322E               	rrcf	(??_xtoa+4)^0,f,c
  6519  003590  322D               	rrcf	(??_xtoa+3)^0,f,c
  6520  003592  322C               	rrcf	(??_xtoa+2)^0,f,c
  6521  003594  322B               	rrcf	(??_xtoa+1)^0,f,c
  6522  003596  322A               	rrcf	??_xtoa^0,f,c
  6523  003598                     u11230:
  6524  003598  2EE8               	decfsz	wreg,f,c
  6525  00359A  EFC3  F01A         	goto	u11235
  6526  00359E  C02A  F03A         	movff	??_xtoa,xtoa@n
  6527  0035A2  C02B  F03B         	movff	??_xtoa+1,xtoa@n+1
  6528  0035A6  C02C  F03C         	movff	??_xtoa+2,xtoa@n+2
  6529  0035AA  C02D  F03D         	movff	??_xtoa+3,xtoa@n+3
  6530  0035AE  C02E  F03E         	movff	??_xtoa+4,xtoa@n+4
  6531  0035B2  C02F  F03F         	movff	??_xtoa+5,xtoa@n+5
  6532  0035B6  C030  F040         	movff	??_xtoa+6,xtoa@n+6
  6533  0035BA  C031  F041         	movff	??_xtoa+7,xtoa@n+7
  6534  0035BE                     l8544:
  6535                           
  6536                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6537  0035BE  BE43               	btfsc	(xtoa@i+1)^0,7,c
  6538  0035C0  EFEB  F01A         	goto	u11241
  6539  0035C4  5043               	movf	(xtoa@i+1)^0,w,c
  6540  0035C6  E109               	bnz	u11240
  6541  0035C8  0E02               	movlw	2
  6542  0035CA  5C42               	subwf	xtoa@i^0,w,c
  6543  0035CC  A0D8               	btfss	status,0,c
  6544  0035CE  EFEB  F01A         	goto	u11241
  6545  0035D2  EFED  F01A         	goto	u11240
  6546  0035D6                     u11241:
  6547  0035D6  EF1E  F01B         	goto	l690
  6548  0035DA                     u11240:
  6549  0035DA  503A               	movf	xtoa@n^0,w,c
  6550  0035DC  103B               	iorwf	(xtoa@n+1)^0,w,c
  6551  0035DE  103C               	iorwf	(xtoa@n+2)^0,w,c
  6552  0035E0  103D               	iorwf	(xtoa@n+3)^0,w,c
  6553  0035E2  103E               	iorwf	(xtoa@n+4)^0,w,c
  6554  0035E4  103F               	iorwf	(xtoa@n+5)^0,w,c
  6555  0035E6  1040               	iorwf	(xtoa@n+6)^0,w,c
  6556  0035E8  1041               	iorwf	(xtoa@n+7)^0,w,c
  6557  0035EA  A4D8               	btfss	status,2,c
  6558  0035EC  EFFA  F01A         	goto	u11251
  6559  0035F0  EFFC  F01A         	goto	u11250
  6560  0035F4                     u11251:
  6561  0035F4  EF2C  F01A         	goto	l8514
  6562  0035F8                     u11250:
  6563  0035F8  BE37               	btfsc	(xtoa@p+1)^0,7,c
  6564  0035FA  EF09  F01B         	goto	u11260
  6565  0035FE  5037               	movf	(xtoa@p+1)^0,w,c
  6566  003600  E106               	bnz	u11261
  6567  003602  0436               	decf	xtoa@p^0,w,c
  6568  003604  B0D8               	btfsc	status,0,c
  6569  003606  EF07  F01B         	goto	u11261
  6570  00360A  EF09  F01B         	goto	u11260
  6571  00360E                     u11261:
  6572  00360E  EF2C  F01A         	goto	l8514
  6573  003612                     u11260:
  6574  003612  BE39               	btfsc	(xtoa@w+1)^0,7,c
  6575  003614  EF14  F01B         	goto	u11271
  6576  003618  5039               	movf	(xtoa@w+1)^0,w,c
  6577  00361A  E108               	bnz	u11270
  6578  00361C  0438               	decf	xtoa@w^0,w,c
  6579  00361E  A0D8               	btfss	status,0,c
  6580  003620  EF14  F01B         	goto	u11271
  6581  003624  EF16  F01B         	goto	u11270
  6582  003628                     u11271:
  6583  003628  EF1E  F01B         	goto	l690
  6584  00362C                     u11270:
  6585  00362C  0100               	movlb	0	; () banked
  6586  00362E  B3F2               	btfsc	_flags& (0+255),1,b
  6587  003630  EF1C  F01B         	goto	u11281
  6588  003634  EF1E  F01B         	goto	u11280
  6589  003638                     u11281:
  6590  003638  EF2C  F01A         	goto	l8514
  6591  00363C                     u11280:
  6592  00363C                     l690:
  6593                           
  6594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  6595  00363C  0100               	movlb	0	; () banked
  6596  00363E  A9F2               	btfss	_flags& (0+255),4,b
  6597  003640  EF24  F01B         	goto	u11291
  6598  003644  EF26  F01B         	goto	u11290
  6599  003648                     u11291:
  6600  003648  EF3C  F01B         	goto	l8560
  6601  00364C                     u11290:
  6602  00364C                     
  6603                           ; BSR set to: 0
  6604                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  6605  00364C  0642               	decf	xtoa@i^0,f,c
  6606  00364E  A0D8               	btfss	status,0,c
  6607  003650  0643               	decf	(xtoa@i+1)^0,f,c
  6608  003652                     
  6609                           ; BSR set to: 0
  6610                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  6611  003652  0E64               	movlw	low _dbuf
  6612  003654  2442               	addwf	xtoa@i^0,w,c
  6613  003656  6ED9               	movwf	fsr2l,c
  6614  003658  0E01               	movlw	high _dbuf
  6615  00365A  2043               	addwfc	(xtoa@i+1)^0,w,c
  6616  00365C  6EDA               	movwf	fsr2h,c
  6617  00365E  C029  FFDF         	movff	xtoa@x,indf2
  6618  003662                     
  6619                           ; BSR set to: 0
  6620                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  6621  003662  0642               	decf	xtoa@i^0,f,c
  6622  003664  A0D8               	btfss	status,0,c
  6623  003666  0643               	decf	(xtoa@i+1)^0,f,c
  6624                           
  6625                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  6626  003668  0E64               	movlw	low _dbuf
  6627  00366A  2442               	addwf	xtoa@i^0,w,c
  6628  00366C  6ED9               	movwf	fsr2l,c
  6629  00366E  0E01               	movlw	high _dbuf
  6630  003670  2043               	addwfc	(xtoa@i+1)^0,w,c
  6631  003672  6EDA               	movwf	fsr2h,c
  6632  003674  0E30               	movlw	48
  6633  003676  6EDF               	movwf	indf2,c
  6634  003678                     l8560:
  6635                           
  6636                           ; BSR set to: 0
  6637                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  6638  003678  C01F  F014         	movff	xtoa@fp,pad@fp
  6639  00367C  C020  F015         	movff	xtoa@fp+1,pad@fp+1
  6640  003680  0E64               	movlw	low _dbuf
  6641  003682  2442               	addwf	xtoa@i^0,w,c
  6642  003684  6E16               	movwf	pad@buf^0,c
  6643  003686  0E01               	movlw	high _dbuf
  6644  003688  2043               	addwfc	(xtoa@i+1)^0,w,c
  6645  00368A  6E17               	movwf	(pad@buf+1)^0,c
  6646  00368C  C038  F018         	movff	xtoa@w,pad@p
  6647  003690  C039  F019         	movff	xtoa@w+1,pad@p+1
  6648  003694  EC12  F028         	call	_pad	;wreg free
  6649  003698  C014  F01F         	movff	?_pad,?_xtoa
  6650  00369C  C015  F020         	movff	?_pad+1,?_xtoa+1
  6651  0036A0  0012               	return		;funcret
  6652  0036A2                     __end_of_xtoa:
  6653                           	opt callstack 0
  6654                           
  6655 ;; *************** function _toupper *****************
  6656 ;; Defined at:
  6657 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  6658 ;; Parameters:    Size  Location     Type
  6659 ;;  c               2    9[COMRAM] int 
  6660 ;; Auto vars:     Size  Location     Type
  6661 ;;		None
  6662 ;; Return value:  Size  Location     Type
  6663 ;;                  2    9[COMRAM] int 
  6664 ;; Registers used:
  6665 ;;		wreg, status,2, status,0
  6666 ;; Tracked objects:
  6667 ;;		On entry : 0/0
  6668 ;;		On exit  : 0/0
  6669 ;;		Unchanged: 0/0
  6670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6671 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6672 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6673 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6674 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6675 ;;Total ram usage:        8 bytes
  6676 ;; Hardware stack levels used:    1
  6677 ;; Hardware stack levels required when called:    5
  6678 ;; This function calls:
  6679 ;;		_islower
  6680 ;; This function is called by:
  6681 ;;		_xtoa
  6682 ;; This function uses a non-reentrant model
  6683 ;;
  6684                           
  6685                           	psect	text6
  6686  0054FE                     __ptext6:
  6687                           	opt callstack 0
  6688  0054FE                     _toupper:
  6689                           	opt callstack 20
  6690  0054FE  0E9F               	movlw	159
  6691  005500  6E0C               	movwf	??_toupper^0,c
  6692  005502  0EFF               	movlw	255
  6693  005504  6E0D               	movwf	(??_toupper+1)^0,c
  6694  005506  C00A  F00E         	movff	toupper@c,??_toupper+2
  6695  00550A  C00B  F00F         	movff	toupper@c+1,??_toupper+3
  6696  00550E  500C               	movf	??_toupper^0,w,c
  6697  005510  260E               	addwf	(??_toupper+2)^0,f,c
  6698  005512  500D               	movf	(??_toupper+1)^0,w,c
  6699  005514  220F               	addwfc	(??_toupper+3)^0,f,c
  6700  005516  500F               	movf	(??_toupper+3)^0,w,c
  6701  005518  E10A               	bnz	u9220
  6702  00551A  0E1A               	movlw	26
  6703  00551C  5C0E               	subwf	(??_toupper+2)^0,w,c
  6704  00551E  A0D8               	btfss	status,0,c
  6705  005520  EF94  F02A         	goto	u9221
  6706  005524  EF97  F02A         	goto	u9220
  6707  005528                     u9221:
  6708  005528  0E01               	movlw	1
  6709  00552A  EF98  F02A         	goto	u9230
  6710  00552E                     u9220:
  6711  00552E  0E00               	movlw	0
  6712  005530                     u9230:
  6713  005530  6E10               	movwf	_toupper$2096^0,c
  6714  005532  6A11               	clrf	(_toupper$2096+1)^0,c
  6715  005534  5010               	movf	_toupper$2096^0,w,c
  6716  005536  1011               	iorwf	(_toupper$2096+1)^0,w,c
  6717  005538  B4D8               	btfsc	status,2,c
  6718  00553A  EFA1  F02A         	goto	u9241
  6719  00553E  EFA3  F02A         	goto	u9240
  6720  005542                     u9241:
  6721  005542  EFA9  F02A         	goto	l1615
  6722  005546                     u9240:
  6723  005546  0E5F               	movlw	95
  6724  005548  140A               	andwf	toupper@c^0,w,c
  6725  00554A  6E0A               	movwf	?_toupper^0,c
  6726  00554C  6A0B               	clrf	(?_toupper+1)^0,c
  6727  00554E  EFAD  F02A         	goto	l1620
  6728  005552                     l1615:
  6729  005552  C00A  F00A         	movff	toupper@c,?_toupper
  6730  005556  C00B  F00B         	movff	toupper@c+1,?_toupper+1
  6731  00555A                     l1620:
  6732  00555A  0012               	return		;funcret
  6733  00555C                     __end_of_toupper:
  6734                           	opt callstack 0
  6735                           
  6736 ;; *************** function _islower *****************
  6737 ;; Defined at:
  6738 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  6739 ;; Parameters:    Size  Location     Type
  6740 ;;  c               2    3[COMRAM] int 
  6741 ;; Auto vars:     Size  Location     Type
  6742 ;;		None
  6743 ;; Return value:  Size  Location     Type
  6744 ;;                  2    3[COMRAM] int 
  6745 ;; Registers used:
  6746 ;;		wreg, status,2, status,0
  6747 ;; Tracked objects:
  6748 ;;		On entry : 0/0
  6749 ;;		On exit  : 0/0
  6750 ;;		Unchanged: 0/0
  6751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6752 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6754 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6755 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6756 ;;Total ram usage:        6 bytes
  6757 ;; Hardware stack levels used:    1
  6758 ;; Hardware stack levels required when called:    4
  6759 ;; This function calls:
  6760 ;;		Nothing
  6761 ;; This function is called by:
  6762 ;;		_toupper
  6763 ;; This function uses a non-reentrant model
  6764 ;;
  6765                           
  6766                           	psect	text7
  6767  005964                     __ptext7:
  6768                           	opt callstack 0
  6769  005964                     _islower:
  6770                           	opt callstack 20
  6771  005964  0E9F               	movlw	159
  6772  005966  6E06               	movwf	??_islower^0,c
  6773  005968  0EFF               	movlw	255
  6774  00596A  6E07               	movwf	(??_islower+1)^0,c
  6775  00596C  C004  F008         	movff	islower@c,??_islower+2
  6776  005970  C005  F009         	movff	islower@c+1,??_islower+3
  6777  005974  5006               	movf	??_islower^0,w,c
  6778  005976  2608               	addwf	(??_islower+2)^0,f,c
  6779  005978  5007               	movf	(??_islower+1)^0,w,c
  6780  00597A  2209               	addwfc	(??_islower+3)^0,f,c
  6781  00597C  5009               	movf	(??_islower+3)^0,w,c
  6782  00597E  E10A               	bnz	u8910
  6783  005980  0E1A               	movlw	26
  6784  005982  5C08               	subwf	(??_islower+2)^0,w,c
  6785  005984  A0D8               	btfss	status,0,c
  6786  005986  EFC7  F02C         	goto	u8911
  6787  00598A  EFCA  F02C         	goto	u8910
  6788  00598E                     u8911:
  6789  00598E  0E01               	movlw	1
  6790  005990  EFCB  F02C         	goto	u8920
  6791  005994                     u8910:
  6792  005994  0E00               	movlw	0
  6793  005996                     u8920:
  6794  005996  6E04               	movwf	?_islower^0,c
  6795  005998  6A05               	clrf	(?_islower+1)^0,c
  6796  00599A  0012               	return		;funcret
  6797  00599C                     __end_of_islower:
  6798                           	opt callstack 0
  6799                           
  6800 ;; *************** function _isalpha *****************
  6801 ;; Defined at:
  6802 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  6803 ;; Parameters:    Size  Location     Type
  6804 ;;  c               2    3[COMRAM] int 
  6805 ;; Auto vars:     Size  Location     Type
  6806 ;;		None
  6807 ;; Return value:  Size  Location     Type
  6808 ;;                  2    3[COMRAM] int 
  6809 ;; Registers used:
  6810 ;;		wreg, status,2, status,0
  6811 ;; Tracked objects:
  6812 ;;		On entry : 0/0
  6813 ;;		On exit  : 0/0
  6814 ;;		Unchanged: 0/0
  6815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6816 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6818 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6819 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6820 ;;Total ram usage:        6 bytes
  6821 ;; Hardware stack levels used:    1
  6822 ;; Hardware stack levels required when called:    4
  6823 ;; This function calls:
  6824 ;;		Nothing
  6825 ;; This function is called by:
  6826 ;;		_xtoa
  6827 ;; This function uses a non-reentrant model
  6828 ;;
  6829                           
  6830                           	psect	text8
  6831  0058EE                     __ptext8:
  6832                           	opt callstack 0
  6833  0058EE                     _isalpha:
  6834                           	opt callstack 21
  6835  0058EE  0E9F               	movlw	159
  6836  0058F0  6E06               	movwf	??_isalpha^0,c
  6837  0058F2  0EFF               	movlw	255
  6838  0058F4  6E07               	movwf	(??_isalpha+1)^0,c
  6839  0058F6  0E20               	movlw	32
  6840  0058F8  1004               	iorwf	isalpha@c^0,w,c
  6841  0058FA  6E08               	movwf	(??_isalpha+2)^0,c
  6842  0058FC  0E00               	movlw	0
  6843  0058FE  1005               	iorwf	(isalpha@c+1)^0,w,c
  6844  005900  6E09               	movwf	(??_isalpha+3)^0,c
  6845  005902  5006               	movf	??_isalpha^0,w,c
  6846  005904  2608               	addwf	(??_isalpha+2)^0,f,c
  6847  005906  5007               	movf	(??_isalpha+1)^0,w,c
  6848  005908  2209               	addwfc	(??_isalpha+3)^0,f,c
  6849  00590A  5009               	movf	(??_isalpha+3)^0,w,c
  6850  00590C  E10A               	bnz	u9200
  6851  00590E  0E1A               	movlw	26
  6852  005910  5C08               	subwf	(??_isalpha+2)^0,w,c
  6853  005912  A0D8               	btfss	status,0,c
  6854  005914  EF8E  F02C         	goto	u9201
  6855  005918  EF91  F02C         	goto	u9200
  6856  00591C                     u9201:
  6857  00591C  0E01               	movlw	1
  6858  00591E  EF92  F02C         	goto	u9210
  6859  005922                     u9200:
  6860  005922  0E00               	movlw	0
  6861  005924                     u9210:
  6862  005924  6E04               	movwf	?_isalpha^0,c
  6863  005926  6A05               	clrf	(?_isalpha+1)^0,c
  6864  005928  0012               	return		;funcret
  6865  00592A                     __end_of_isalpha:
  6866                           	opt callstack 0
  6867                           
  6868 ;; *************** function _utoa *****************
  6869 ;; Defined at:
  6870 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6871 ;; Parameters:    Size  Location     Type
  6872 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  6873 ;;		 -> vsnprintf@f(6), 
  6874 ;;  d               8   32[COMRAM] unsigned long long 
  6875 ;; Auto vars:     Size  Location     Type
  6876 ;;  n               8   52[COMRAM] unsigned long long 
  6877 ;;  i               2   60[COMRAM] int 
  6878 ;;  w               2   50[COMRAM] int 
  6879 ;;  p               2   48[COMRAM] int 
  6880 ;; Return value:  Size  Location     Type
  6881 ;;                  2   30[COMRAM] int 
  6882 ;; Registers used:
  6883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6884 ;; Tracked objects:
  6885 ;;		On entry : 0/0
  6886 ;;		On exit  : 0/0
  6887 ;;		Unchanged: 0/0
  6888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6889 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6890 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6891 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6892 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6893 ;;Total ram usage:       32 bytes
  6894 ;; Hardware stack levels used:    1
  6895 ;; Hardware stack levels required when called:    8
  6896 ;; This function calls:
  6897 ;;		___lodiv
  6898 ;;		___lomod
  6899 ;;		_pad
  6900 ;; This function is called by:
  6901 ;;		_vfpfcnvrt
  6902 ;; This function uses a non-reentrant model
  6903 ;;
  6904                           
  6905                           	psect	text9
  6906  0038B4                     __ptext9:
  6907                           	opt callstack 0
  6908  0038B4                     _utoa:
  6909                           	opt callstack 18
  6910  0038B4                     
  6911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  6912  0038B4  BE59               	btfsc	(_prec+1)^0,7,c
  6913  0038B6  EF5F  F01C         	goto	u11061
  6914  0038BA  EF61  F01C         	goto	u11060
  6915  0038BE                     u11061:
  6916  0038BE  EF63  F01C         	goto	l8466
  6917  0038C2                     u11060:
  6918  0038C2                     
  6919                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  6920  0038C2  0100               	movlb	0	; () banked
  6921  0038C4  93F2               	bcf	_flags& (0+255),1,b
  6922  0038C6                     l8466:
  6923                           
  6924                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  6925  0038C6  BE59               	btfsc	(_prec+1)^0,7,c
  6926  0038C8  EF70  F01C         	goto	u11070
  6927  0038CC  5059               	movf	(_prec+1)^0,w,c
  6928  0038CE  E106               	bnz	u11071
  6929  0038D0  0458               	decf	_prec^0,w,c
  6930  0038D2  B0D8               	btfsc	status,0,c
  6931  0038D4  EF6E  F01C         	goto	u11071
  6932  0038D8  EF70  F01C         	goto	u11070
  6933  0038DC                     u11071:
  6934  0038DC  EF76  F01C         	goto	l652
  6935  0038E0                     u11070:
  6936  0038E0  0E00               	movlw	0
  6937  0038E2  6E32               	movwf	(utoa@p+1)^0,c
  6938  0038E4  0E01               	movlw	1
  6939  0038E6  6E31               	movwf	utoa@p^0,c
  6940  0038E8  EF7A  F01C         	goto	l654
  6941  0038EC                     l652:
  6942  0038EC  C058  F031         	movff	_prec,utoa@p
  6943  0038F0  C059  F032         	movff	_prec+1,utoa@p+1
  6944  0038F4                     l654:
  6945                           
  6946                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  6947  0038F4  C0F0  F033         	movff	_width,utoa@w
  6948  0038F8  C0F1  F034         	movff	_width+1,utoa@w+1
  6949                           
  6950                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  6951  0038FC  C021  F035         	movff	utoa@d,utoa@n
  6952  003900  C022  F036         	movff	utoa@d+1,utoa@n+1
  6953  003904  C023  F037         	movff	utoa@d+2,utoa@n+2
  6954  003908  C024  F038         	movff	utoa@d+3,utoa@n+3
  6955  00390C  C025  F039         	movff	utoa@d+4,utoa@n+4
  6956  003910  C026  F03A         	movff	utoa@d+5,utoa@n+5
  6957  003914  C027  F03B         	movff	utoa@d+6,utoa@n+6
  6958  003918  C028  F03C         	movff	utoa@d+7,utoa@n+7
  6959  00391C                     
  6960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  6961  00391C  0E00               	movlw	0
  6962  00391E  6E3E               	movwf	(utoa@i+1)^0,c
  6963  003920  0E4F               	movlw	79
  6964  003922  6E3D               	movwf	utoa@i^0,c
  6965  003924                     
  6966                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  6967  003924  0E00               	movlw	0
  6968  003926  0101               	movlb	1	; () banked
  6969  003928  6FB3               	movwf	(_dbuf+79)& (0+255),b
  6970                           
  6971                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6972  00392A  EF0D  F01D         	goto	l8484
  6973  00392E                     l8474:
  6974                           
  6975                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  6976  00392E  063D               	decf	utoa@i^0,f,c
  6977  003930  A0D8               	btfss	status,0,c
  6978  003932  063E               	decf	(utoa@i+1)^0,f,c
  6979  003934                     
  6980                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  6981  003934  0E64               	movlw	low _dbuf
  6982  003936  243D               	addwf	utoa@i^0,w,c
  6983  003938  6ED9               	movwf	fsr2l,c
  6984  00393A  0E01               	movlw	high _dbuf
  6985  00393C  203E               	addwfc	(utoa@i+1)^0,w,c
  6986  00393E  6EDA               	movwf	fsr2h,c
  6987  003940  C035  F004         	movff	utoa@n,___lomod@dividend
  6988  003944  C036  F005         	movff	utoa@n+1,___lomod@dividend+1
  6989  003948  C037  F006         	movff	utoa@n+2,___lomod@dividend+2
  6990  00394C  C038  F007         	movff	utoa@n+3,___lomod@dividend+3
  6991  003950  C039  F008         	movff	utoa@n+4,___lomod@dividend+4
  6992  003954  C03A  F009         	movff	utoa@n+5,___lomod@dividend+5
  6993  003958  C03B  F00A         	movff	utoa@n+6,___lomod@dividend+6
  6994  00395C  C03C  F00B         	movff	utoa@n+7,___lomod@dividend+7
  6995  003960  0E0A               	movlw	10
  6996  003962  6E0C               	movwf	___lomod@divisor^0,c
  6997  003964  0E00               	movlw	0
  6998  003966  6E0D               	movwf	(___lomod@divisor+1)^0,c
  6999  003968  0E00               	movlw	0
  7000  00396A  6E0E               	movwf	(___lomod@divisor+2)^0,c
  7001  00396C  0E00               	movlw	0
  7002  00396E  6E0F               	movwf	(___lomod@divisor+3)^0,c
  7003  003970  0E00               	movlw	0
  7004  003972  6E10               	movwf	(___lomod@divisor+4)^0,c
  7005  003974  0E00               	movlw	0
  7006  003976  6E11               	movwf	(___lomod@divisor+5)^0,c
  7007  003978  0E00               	movlw	0
  7008  00397A  6E12               	movwf	(___lomod@divisor+6)^0,c
  7009  00397C  0E00               	movlw	0
  7010  00397E  6E13               	movwf	(___lomod@divisor+7)^0,c
  7011  003980  EC45  F027         	call	___lomod	;wreg free
  7012  003984  C004  F029         	movff	?___lomod,??_utoa
  7013  003988  C005  F02A         	movff	?___lomod+1,??_utoa+1
  7014  00398C  C006  F02B         	movff	?___lomod+2,??_utoa+2
  7015  003990  C007  F02C         	movff	?___lomod+3,??_utoa+3
  7016  003994  C008  F02D         	movff	?___lomod+4,??_utoa+4
  7017  003998  C009  F02E         	movff	?___lomod+5,??_utoa+5
  7018  00399C  C00A  F02F         	movff	?___lomod+6,??_utoa+6
  7019  0039A0  C00B  F030         	movff	?___lomod+7,??_utoa+7
  7020  0039A4  5029               	movf	??_utoa^0,w,c
  7021  0039A6  0F30               	addlw	48
  7022  0039A8  6EDF               	movwf	indf2,c
  7023  0039AA                     
  7024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  7025  0039AA  0631               	decf	utoa@p^0,f,c
  7026  0039AC  A0D8               	btfss	status,0,c
  7027  0039AE  0632               	decf	(utoa@p+1)^0,f,c
  7028  0039B0                     
  7029                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  7030  0039B0  0633               	decf	utoa@w^0,f,c
  7031  0039B2  A0D8               	btfss	status,0,c
  7032  0039B4  0634               	decf	(utoa@w+1)^0,f,c
  7033  0039B6                     
  7034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  7035  0039B6  C035  F004         	movff	utoa@n,___lodiv@dividend
  7036  0039BA  C036  F005         	movff	utoa@n+1,___lodiv@dividend+1
  7037  0039BE  C037  F006         	movff	utoa@n+2,___lodiv@dividend+2
  7038  0039C2  C038  F007         	movff	utoa@n+3,___lodiv@dividend+3
  7039  0039C6  C039  F008         	movff	utoa@n+4,___lodiv@dividend+4
  7040  0039CA  C03A  F009         	movff	utoa@n+5,___lodiv@dividend+5
  7041  0039CE  C03B  F00A         	movff	utoa@n+6,___lodiv@dividend+6
  7042  0039D2  C03C  F00B         	movff	utoa@n+7,___lodiv@dividend+7
  7043  0039D6  0E0A               	movlw	10
  7044  0039D8  6E0C               	movwf	___lodiv@divisor^0,c
  7045  0039DA  0E00               	movlw	0
  7046  0039DC  6E0D               	movwf	(___lodiv@divisor+1)^0,c
  7047  0039DE  0E00               	movlw	0
  7048  0039E0  6E0E               	movwf	(___lodiv@divisor+2)^0,c
  7049  0039E2  0E00               	movlw	0
  7050  0039E4  6E0F               	movwf	(___lodiv@divisor+3)^0,c
  7051  0039E6  0E00               	movlw	0
  7052  0039E8  6E10               	movwf	(___lodiv@divisor+4)^0,c
  7053  0039EA  0E00               	movlw	0
  7054  0039EC  6E11               	movwf	(___lodiv@divisor+5)^0,c
  7055  0039EE  0E00               	movlw	0
  7056  0039F0  6E12               	movwf	(___lodiv@divisor+6)^0,c
  7057  0039F2  0E00               	movlw	0
  7058  0039F4  6E13               	movwf	(___lodiv@divisor+7)^0,c
  7059  0039F6  ECCD  F026         	call	___lodiv	;wreg free
  7060  0039FA  C004  F035         	movff	?___lodiv,utoa@n
  7061  0039FE  C005  F036         	movff	?___lodiv+1,utoa@n+1
  7062  003A02  C006  F037         	movff	?___lodiv+2,utoa@n+2
  7063  003A06  C007  F038         	movff	?___lodiv+3,utoa@n+3
  7064  003A0A  C008  F039         	movff	?___lodiv+4,utoa@n+4
  7065  003A0E  C009  F03A         	movff	?___lodiv+5,utoa@n+5
  7066  003A12  C00A  F03B         	movff	?___lodiv+6,utoa@n+6
  7067  003A16  C00B  F03C         	movff	?___lodiv+7,utoa@n+7
  7068  003A1A                     l8484:
  7069                           
  7070                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7071  003A1A  503D               	movf	utoa@i^0,w,c
  7072  003A1C  103E               	iorwf	(utoa@i+1)^0,w,c
  7073  003A1E  B4D8               	btfsc	status,2,c
  7074  003A20  EF14  F01D         	goto	u11081
  7075  003A24  EF16  F01D         	goto	u11080
  7076  003A28                     u11081:
  7077  003A28  EF47  F01D         	goto	l8494
  7078  003A2C                     u11080:
  7079  003A2C  5035               	movf	utoa@n^0,w,c
  7080  003A2E  1036               	iorwf	(utoa@n+1)^0,w,c
  7081  003A30  1037               	iorwf	(utoa@n+2)^0,w,c
  7082  003A32  1038               	iorwf	(utoa@n+3)^0,w,c
  7083  003A34  1039               	iorwf	(utoa@n+4)^0,w,c
  7084  003A36  103A               	iorwf	(utoa@n+5)^0,w,c
  7085  003A38  103B               	iorwf	(utoa@n+6)^0,w,c
  7086  003A3A  103C               	iorwf	(utoa@n+7)^0,w,c
  7087  003A3C  A4D8               	btfss	status,2,c
  7088  003A3E  EF23  F01D         	goto	u11091
  7089  003A42  EF25  F01D         	goto	u11090
  7090  003A46                     u11091:
  7091  003A46  EF97  F01C         	goto	l8474
  7092  003A4A                     u11090:
  7093  003A4A  BE32               	btfsc	(utoa@p+1)^0,7,c
  7094  003A4C  EF32  F01D         	goto	u11100
  7095  003A50  5032               	movf	(utoa@p+1)^0,w,c
  7096  003A52  E106               	bnz	u11101
  7097  003A54  0431               	decf	utoa@p^0,w,c
  7098  003A56  B0D8               	btfsc	status,0,c
  7099  003A58  EF30  F01D         	goto	u11101
  7100  003A5C  EF32  F01D         	goto	u11100
  7101  003A60                     u11101:
  7102  003A60  EF97  F01C         	goto	l8474
  7103  003A64                     u11100:
  7104  003A64  BE34               	btfsc	(utoa@w+1)^0,7,c
  7105  003A66  EF3D  F01D         	goto	u11111
  7106  003A6A  5034               	movf	(utoa@w+1)^0,w,c
  7107  003A6C  E108               	bnz	u11110
  7108  003A6E  0433               	decf	utoa@w^0,w,c
  7109  003A70  A0D8               	btfss	status,0,c
  7110  003A72  EF3D  F01D         	goto	u11111
  7111  003A76  EF3F  F01D         	goto	u11110
  7112  003A7A                     u11111:
  7113  003A7A  EF47  F01D         	goto	l8494
  7114  003A7E                     u11110:
  7115  003A7E  0100               	movlb	0	; () banked
  7116  003A80  B3F2               	btfsc	_flags& (0+255),1,b
  7117  003A82  EF45  F01D         	goto	u11121
  7118  003A86  EF47  F01D         	goto	u11120
  7119  003A8A                     u11121:
  7120  003A8A  EF97  F01C         	goto	l8474
  7121  003A8E                     u11120:
  7122  003A8E                     l8494:
  7123                           
  7124                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  7125  003A8E  C01F  F014         	movff	utoa@fp,pad@fp
  7126  003A92  C020  F015         	movff	utoa@fp+1,pad@fp+1
  7127  003A96  0E64               	movlw	low _dbuf
  7128  003A98  243D               	addwf	utoa@i^0,w,c
  7129  003A9A  6E16               	movwf	pad@buf^0,c
  7130  003A9C  0E01               	movlw	high _dbuf
  7131  003A9E  203E               	addwfc	(utoa@i+1)^0,w,c
  7132  003AA0  6E17               	movwf	(pad@buf+1)^0,c
  7133  003AA2  C033  F018         	movff	utoa@w,pad@p
  7134  003AA6  C034  F019         	movff	utoa@w+1,pad@p+1
  7135  003AAA  EC12  F028         	call	_pad	;wreg free
  7136  003AAE  C014  F01F         	movff	?_pad,?_utoa
  7137  003AB2  C015  F020         	movff	?_pad+1,?_utoa+1
  7138  003AB6  0012               	return		;funcret
  7139  003AB8                     __end_of_utoa:
  7140                           	opt callstack 0
  7141                           
  7142 ;; *************** function ___lomod *****************
  7143 ;; Defined at:
  7144 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  7145 ;; Parameters:    Size  Location     Type
  7146 ;;  dividend        8    3[COMRAM] unsigned long long 
  7147 ;;  divisor         8   11[COMRAM] unsigned long long 
  7148 ;; Auto vars:     Size  Location     Type
  7149 ;;  counter         1   19[COMRAM] unsigned char 
  7150 ;; Return value:  Size  Location     Type
  7151 ;;                  8    3[COMRAM] unsigned long long 
  7152 ;; Registers used:
  7153 ;;		wreg, status,2, status,0
  7154 ;; Tracked objects:
  7155 ;;		On entry : 0/0
  7156 ;;		On exit  : 0/0
  7157 ;;		Unchanged: 0/0
  7158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7159 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7160 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7162 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7163 ;;Total ram usage:       17 bytes
  7164 ;; Hardware stack levels used:    1
  7165 ;; Hardware stack levels required when called:    4
  7166 ;; This function calls:
  7167 ;;		Nothing
  7168 ;; This function is called by:
  7169 ;;		_utoa
  7170 ;; This function uses a non-reentrant model
  7171 ;;
  7172                           
  7173                           	psect	text10
  7174  004E8A                     __ptext10:
  7175                           	opt callstack 0
  7176  004E8A                     ___lomod:
  7177                           	opt callstack 21
  7178  004E8A  500C               	movf	___lomod@divisor^0,w,c
  7179  004E8C  100D               	iorwf	(___lomod@divisor+1)^0,w,c
  7180  004E8E  100E               	iorwf	(___lomod@divisor+2)^0,w,c
  7181  004E90  100F               	iorwf	(___lomod@divisor+3)^0,w,c
  7182  004E92  1010               	iorwf	(___lomod@divisor+4)^0,w,c
  7183  004E94  1011               	iorwf	(___lomod@divisor+5)^0,w,c
  7184  004E96  1012               	iorwf	(___lomod@divisor+6)^0,w,c
  7185  004E98  1013               	iorwf	(___lomod@divisor+7)^0,w,c
  7186  004E9A  B4D8               	btfsc	status,2,c
  7187  004E9C  EF52  F027         	goto	u10141
  7188  004EA0  EF54  F027         	goto	u10140
  7189  004EA4                     u10141:
  7190  004EA4  EF9C  F027         	goto	l1235
  7191  004EA8                     u10140:
  7192  004EA8  0E01               	movlw	1
  7193  004EAA  6E14               	movwf	___lomod@counter^0,c
  7194  004EAC  EF62  F027         	goto	l7976
  7195  004EB0                     l7974:
  7196  004EB0  90D8               	bcf	status,0,c
  7197  004EB2  360C               	rlcf	___lomod@divisor^0,f,c
  7198  004EB4  360D               	rlcf	(___lomod@divisor+1)^0,f,c
  7199  004EB6  360E               	rlcf	(___lomod@divisor+2)^0,f,c
  7200  004EB8  360F               	rlcf	(___lomod@divisor+3)^0,f,c
  7201  004EBA  3610               	rlcf	(___lomod@divisor+4)^0,f,c
  7202  004EBC  3611               	rlcf	(___lomod@divisor+5)^0,f,c
  7203  004EBE  3612               	rlcf	(___lomod@divisor+6)^0,f,c
  7204  004EC0  3613               	rlcf	(___lomod@divisor+7)^0,f,c
  7205  004EC2  2A14               	incf	___lomod@counter^0,f,c
  7206  004EC4                     l7976:
  7207  004EC4  AE13               	btfss	(___lomod@divisor+7)^0,7,c
  7208  004EC6  EF67  F027         	goto	u10151
  7209  004ECA  EF69  F027         	goto	u10150
  7210  004ECE                     u10151:
  7211  004ECE  EF58  F027         	goto	l7974
  7212  004ED2                     u10150:
  7213  004ED2                     l7978:
  7214  004ED2  500C               	movf	___lomod@divisor^0,w,c
  7215  004ED4  5C04               	subwf	___lomod@dividend^0,w,c
  7216  004ED6  500D               	movf	(___lomod@divisor+1)^0,w,c
  7217  004ED8  5805               	subwfb	(___lomod@dividend+1)^0,w,c
  7218  004EDA  500E               	movf	(___lomod@divisor+2)^0,w,c
  7219  004EDC  5806               	subwfb	(___lomod@dividend+2)^0,w,c
  7220  004EDE  500F               	movf	(___lomod@divisor+3)^0,w,c
  7221  004EE0  5807               	subwfb	(___lomod@dividend+3)^0,w,c
  7222  004EE2  5010               	movf	(___lomod@divisor+4)^0,w,c
  7223  004EE4  5808               	subwfb	(___lomod@dividend+4)^0,w,c
  7224  004EE6  5011               	movf	(___lomod@divisor+5)^0,w,c
  7225  004EE8  5809               	subwfb	(___lomod@dividend+5)^0,w,c
  7226  004EEA  5012               	movf	(___lomod@divisor+6)^0,w,c
  7227  004EEC  580A               	subwfb	(___lomod@dividend+6)^0,w,c
  7228  004EEE  5013               	movf	(___lomod@divisor+7)^0,w,c
  7229  004EF0  580B               	subwfb	(___lomod@dividend+7)^0,w,c
  7230  004EF2  A0D8               	btfss	status,0,c
  7231  004EF4  EF7E  F027         	goto	u10161
  7232  004EF8  EF80  F027         	goto	u10160
  7233  004EFC                     u10161:
  7234  004EFC  EF90  F027         	goto	l7982
  7235  004F00                     u10160:
  7236  004F00  500C               	movf	___lomod@divisor^0,w,c
  7237  004F02  5E04               	subwf	___lomod@dividend^0,f,c
  7238  004F04  500D               	movf	(___lomod@divisor+1)^0,w,c
  7239  004F06  5A05               	subwfb	(___lomod@dividend+1)^0,f,c
  7240  004F08  500E               	movf	(___lomod@divisor+2)^0,w,c
  7241  004F0A  5A06               	subwfb	(___lomod@dividend+2)^0,f,c
  7242  004F0C  500F               	movf	(___lomod@divisor+3)^0,w,c
  7243  004F0E  5A07               	subwfb	(___lomod@dividend+3)^0,f,c
  7244  004F10  5010               	movf	(___lomod@divisor+4)^0,w,c
  7245  004F12  5A08               	subwfb	(___lomod@dividend+4)^0,f,c
  7246  004F14  5011               	movf	(___lomod@divisor+5)^0,w,c
  7247  004F16  5A09               	subwfb	(___lomod@dividend+5)^0,f,c
  7248  004F18  5012               	movf	(___lomod@divisor+6)^0,w,c
  7249  004F1A  5A0A               	subwfb	(___lomod@dividend+6)^0,f,c
  7250  004F1C  5013               	movf	(___lomod@divisor+7)^0,w,c
  7251  004F1E  5A0B               	subwfb	(___lomod@dividend+7)^0,f,c
  7252  004F20                     l7982:
  7253  004F20  90D8               	bcf	status,0,c
  7254  004F22  3213               	rrcf	(___lomod@divisor+7)^0,f,c
  7255  004F24  3212               	rrcf	(___lomod@divisor+6)^0,f,c
  7256  004F26  3211               	rrcf	(___lomod@divisor+5)^0,f,c
  7257  004F28  3210               	rrcf	(___lomod@divisor+4)^0,f,c
  7258  004F2A  320F               	rrcf	(___lomod@divisor+3)^0,f,c
  7259  004F2C  320E               	rrcf	(___lomod@divisor+2)^0,f,c
  7260  004F2E  320D               	rrcf	(___lomod@divisor+1)^0,f,c
  7261  004F30  320C               	rrcf	___lomod@divisor^0,f,c
  7262  004F32  2E14               	decfsz	___lomod@counter^0,f,c
  7263  004F34  EF69  F027         	goto	l7978
  7264  004F38                     l1235:
  7265  004F38  C004  F004         	movff	___lomod@dividend,?___lomod
  7266  004F3C  C005  F005         	movff	___lomod@dividend+1,?___lomod+1
  7267  004F40  C006  F006         	movff	___lomod@dividend+2,?___lomod+2
  7268  004F44  C007  F007         	movff	___lomod@dividend+3,?___lomod+3
  7269  004F48  C008  F008         	movff	___lomod@dividend+4,?___lomod+4
  7270  004F4C  C009  F009         	movff	___lomod@dividend+5,?___lomod+5
  7271  004F50  C00A  F00A         	movff	___lomod@dividend+6,?___lomod+6
  7272  004F54  C00B  F00B         	movff	___lomod@dividend+7,?___lomod+7
  7273  004F58  0012               	return		;funcret
  7274  004F5A                     __end_of___lomod:
  7275                           	opt callstack 0
  7276                           
  7277 ;; *************** function ___lodiv *****************
  7278 ;; Defined at:
  7279 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  7280 ;; Parameters:    Size  Location     Type
  7281 ;;  dividend        8    3[COMRAM] unsigned long long 
  7282 ;;  divisor         8   11[COMRAM] unsigned long long 
  7283 ;; Auto vars:     Size  Location     Type
  7284 ;;  quotient        8   19[COMRAM] unsigned long long 
  7285 ;;  counter         1   27[COMRAM] unsigned char 
  7286 ;; Return value:  Size  Location     Type
  7287 ;;                  8    3[COMRAM] unsigned long long 
  7288 ;; Registers used:
  7289 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7290 ;; Tracked objects:
  7291 ;;		On entry : 0/0
  7292 ;;		On exit  : 0/0
  7293 ;;		Unchanged: 0/0
  7294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7295 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7296 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7298 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7299 ;;Total ram usage:       25 bytes
  7300 ;; Hardware stack levels used:    1
  7301 ;; Hardware stack levels required when called:    4
  7302 ;; This function calls:
  7303 ;;		Nothing
  7304 ;; This function is called by:
  7305 ;;		_utoa
  7306 ;; This function uses a non-reentrant model
  7307 ;;
  7308                           
  7309                           	psect	text11
  7310  004D9A                     __ptext11:
  7311                           	opt callstack 0
  7312  004D9A                     ___lodiv:
  7313                           	opt callstack 21
  7314  004D9A  EE20  F014         	lfsr	2,___lodiv@quotient
  7315  004D9E  0E07               	movlw	7
  7316  004DA0                     u10101:
  7317  004DA0  6ADE               	clrf	postinc2,c
  7318  004DA2  06E8               	decf	wreg,f,c
  7319  004DA4  E2FD               	bc	u10101
  7320  004DA6  500C               	movf	___lodiv@divisor^0,w,c
  7321  004DA8  100D               	iorwf	(___lodiv@divisor+1)^0,w,c
  7322  004DAA  100E               	iorwf	(___lodiv@divisor+2)^0,w,c
  7323  004DAC  100F               	iorwf	(___lodiv@divisor+3)^0,w,c
  7324  004DAE  1010               	iorwf	(___lodiv@divisor+4)^0,w,c
  7325  004DB0  1011               	iorwf	(___lodiv@divisor+5)^0,w,c
  7326  004DB2  1012               	iorwf	(___lodiv@divisor+6)^0,w,c
  7327  004DB4  1013               	iorwf	(___lodiv@divisor+7)^0,w,c
  7328  004DB6  B4D8               	btfsc	status,2,c
  7329  004DB8  EFE0  F026         	goto	u10111
  7330  004DBC  EFE2  F026         	goto	u10110
  7331  004DC0                     u10111:
  7332  004DC0  EF34  F027         	goto	l1225
  7333  004DC4                     u10110:
  7334  004DC4  0E01               	movlw	1
  7335  004DC6  6E1C               	movwf	___lodiv@counter^0,c
  7336  004DC8  EFF0  F026         	goto	l7956
  7337  004DCC                     l7954:
  7338  004DCC  90D8               	bcf	status,0,c
  7339  004DCE  360C               	rlcf	___lodiv@divisor^0,f,c
  7340  004DD0  360D               	rlcf	(___lodiv@divisor+1)^0,f,c
  7341  004DD2  360E               	rlcf	(___lodiv@divisor+2)^0,f,c
  7342  004DD4  360F               	rlcf	(___lodiv@divisor+3)^0,f,c
  7343  004DD6  3610               	rlcf	(___lodiv@divisor+4)^0,f,c
  7344  004DD8  3611               	rlcf	(___lodiv@divisor+5)^0,f,c
  7345  004DDA  3612               	rlcf	(___lodiv@divisor+6)^0,f,c
  7346  004DDC  3613               	rlcf	(___lodiv@divisor+7)^0,f,c
  7347  004DDE  2A1C               	incf	___lodiv@counter^0,f,c
  7348  004DE0                     l7956:
  7349  004DE0  AE13               	btfss	(___lodiv@divisor+7)^0,7,c
  7350  004DE2  EFF5  F026         	goto	u10121
  7351  004DE6  EFF7  F026         	goto	u10120
  7352  004DEA                     u10121:
  7353  004DEA  EFE6  F026         	goto	l7954
  7354  004DEE                     u10120:
  7355  004DEE                     l7958:
  7356  004DEE  90D8               	bcf	status,0,c
  7357  004DF0  3614               	rlcf	___lodiv@quotient^0,f,c
  7358  004DF2  3615               	rlcf	(___lodiv@quotient+1)^0,f,c
  7359  004DF4  3616               	rlcf	(___lodiv@quotient+2)^0,f,c
  7360  004DF6  3617               	rlcf	(___lodiv@quotient+3)^0,f,c
  7361  004DF8  3618               	rlcf	(___lodiv@quotient+4)^0,f,c
  7362  004DFA  3619               	rlcf	(___lodiv@quotient+5)^0,f,c
  7363  004DFC  361A               	rlcf	(___lodiv@quotient+6)^0,f,c
  7364  004DFE  361B               	rlcf	(___lodiv@quotient+7)^0,f,c
  7365  004E00  500C               	movf	___lodiv@divisor^0,w,c
  7366  004E02  5C04               	subwf	___lodiv@dividend^0,w,c
  7367  004E04  500D               	movf	(___lodiv@divisor+1)^0,w,c
  7368  004E06  5805               	subwfb	(___lodiv@dividend+1)^0,w,c
  7369  004E08  500E               	movf	(___lodiv@divisor+2)^0,w,c
  7370  004E0A  5806               	subwfb	(___lodiv@dividend+2)^0,w,c
  7371  004E0C  500F               	movf	(___lodiv@divisor+3)^0,w,c
  7372  004E0E  5807               	subwfb	(___lodiv@dividend+3)^0,w,c
  7373  004E10  5010               	movf	(___lodiv@divisor+4)^0,w,c
  7374  004E12  5808               	subwfb	(___lodiv@dividend+4)^0,w,c
  7375  004E14  5011               	movf	(___lodiv@divisor+5)^0,w,c
  7376  004E16  5809               	subwfb	(___lodiv@dividend+5)^0,w,c
  7377  004E18  5012               	movf	(___lodiv@divisor+6)^0,w,c
  7378  004E1A  580A               	subwfb	(___lodiv@dividend+6)^0,w,c
  7379  004E1C  5013               	movf	(___lodiv@divisor+7)^0,w,c
  7380  004E1E  580B               	subwfb	(___lodiv@dividend+7)^0,w,c
  7381  004E20  A0D8               	btfss	status,0,c
  7382  004E22  EF15  F027         	goto	u10131
  7383  004E26  EF17  F027         	goto	u10130
  7384  004E2A                     u10131:
  7385  004E2A  EF28  F027         	goto	l7966
  7386  004E2E                     u10130:
  7387  004E2E  500C               	movf	___lodiv@divisor^0,w,c
  7388  004E30  5E04               	subwf	___lodiv@dividend^0,f,c
  7389  004E32  500D               	movf	(___lodiv@divisor+1)^0,w,c
  7390  004E34  5A05               	subwfb	(___lodiv@dividend+1)^0,f,c
  7391  004E36  500E               	movf	(___lodiv@divisor+2)^0,w,c
  7392  004E38  5A06               	subwfb	(___lodiv@dividend+2)^0,f,c
  7393  004E3A  500F               	movf	(___lodiv@divisor+3)^0,w,c
  7394  004E3C  5A07               	subwfb	(___lodiv@dividend+3)^0,f,c
  7395  004E3E  5010               	movf	(___lodiv@divisor+4)^0,w,c
  7396  004E40  5A08               	subwfb	(___lodiv@dividend+4)^0,f,c
  7397  004E42  5011               	movf	(___lodiv@divisor+5)^0,w,c
  7398  004E44  5A09               	subwfb	(___lodiv@dividend+5)^0,f,c
  7399  004E46  5012               	movf	(___lodiv@divisor+6)^0,w,c
  7400  004E48  5A0A               	subwfb	(___lodiv@dividend+6)^0,f,c
  7401  004E4A  5013               	movf	(___lodiv@divisor+7)^0,w,c
  7402  004E4C  5A0B               	subwfb	(___lodiv@dividend+7)^0,f,c
  7403  004E4E  8014               	bsf	___lodiv@quotient^0,0,c
  7404  004E50                     l7966:
  7405  004E50  90D8               	bcf	status,0,c
  7406  004E52  3213               	rrcf	(___lodiv@divisor+7)^0,f,c
  7407  004E54  3212               	rrcf	(___lodiv@divisor+6)^0,f,c
  7408  004E56  3211               	rrcf	(___lodiv@divisor+5)^0,f,c
  7409  004E58  3210               	rrcf	(___lodiv@divisor+4)^0,f,c
  7410  004E5A  320F               	rrcf	(___lodiv@divisor+3)^0,f,c
  7411  004E5C  320E               	rrcf	(___lodiv@divisor+2)^0,f,c
  7412  004E5E  320D               	rrcf	(___lodiv@divisor+1)^0,f,c
  7413  004E60  320C               	rrcf	___lodiv@divisor^0,f,c
  7414  004E62  2E1C               	decfsz	___lodiv@counter^0,f,c
  7415  004E64  EFF7  F026         	goto	l7958
  7416  004E68                     l1225:
  7417  004E68  C014  F004         	movff	___lodiv@quotient,?___lodiv
  7418  004E6C  C015  F005         	movff	___lodiv@quotient+1,?___lodiv+1
  7419  004E70  C016  F006         	movff	___lodiv@quotient+2,?___lodiv+2
  7420  004E74  C017  F007         	movff	___lodiv@quotient+3,?___lodiv+3
  7421  004E78  C018  F008         	movff	___lodiv@quotient+4,?___lodiv+4
  7422  004E7C  C019  F009         	movff	___lodiv@quotient+5,?___lodiv+5
  7423  004E80  C01A  F00A         	movff	___lodiv@quotient+6,?___lodiv+6
  7424  004E84  C01B  F00B         	movff	___lodiv@quotient+7,?___lodiv+7
  7425  004E88  0012               	return		;funcret
  7426  004E8A                     __end_of___lodiv:
  7427                           	opt callstack 0
  7428                           
  7429 ;; *************** function _strncmp *****************
  7430 ;; Defined at:
  7431 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  7432 ;; Parameters:    Size  Location     Type
  7433 ;;  _l              2    3[COMRAM] PTR const unsigned char 
  7434 ;;		 -> vfpfcnvrt@ct(3), STR_2(17), 
  7435 ;;  _r              2    5[COMRAM] PTR const unsigned char 
  7436 ;;		 -> STR_112(3), STR_108(3), STR_103(3), STR_99(3), 
  7437 ;;		 -> STR_94(4), STR_90(4), STR_85(3), STR_80(3), 
  7438 ;;		 -> STR_75(4), STR_70(3), STR_65(3), STR_60(4), 
  7439 ;;		 -> STR_55(3), STR_50(3), STR_45(4), STR_40(3), 
  7440 ;;		 -> STR_35(3), STR_31(3), STR_26(3), STR_22(3), 
  7441 ;;		 -> STR_17(4), STR_13(4), 
  7442 ;;  n               2    7[COMRAM] unsigned int 
  7443 ;; Auto vars:     Size  Location     Type
  7444 ;;  r               2   12[COMRAM] PTR const unsigned char 
  7445 ;;		 -> STR_112(3), STR_108(3), STR_103(3), STR_99(3), 
  7446 ;;		 -> STR_94(4), STR_90(4), STR_85(3), STR_80(3), 
  7447 ;;		 -> STR_75(4), STR_70(3), STR_65(3), STR_60(4), 
  7448 ;;		 -> STR_55(3), STR_50(3), STR_45(4), STR_40(3), 
  7449 ;;		 -> STR_35(3), STR_31(3), STR_26(3), STR_22(3), 
  7450 ;;		 -> STR_17(4), STR_13(4), 
  7451 ;;  l               2   10[COMRAM] PTR const unsigned char 
  7452 ;;		 -> vfpfcnvrt@ct(3), STR_2(17), 
  7453 ;; Return value:  Size  Location     Type
  7454 ;;                  2    3[COMRAM] int 
  7455 ;; Registers used:
  7456 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7457 ;; Tracked objects:
  7458 ;;		On entry : 0/0
  7459 ;;		On exit  : 0/0
  7460 ;;		Unchanged: 0/0
  7461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7462 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7463 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7464 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7465 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7466 ;;Total ram usage:       11 bytes
  7467 ;; Hardware stack levels used:    1
  7468 ;; Hardware stack levels required when called:    4
  7469 ;; This function calls:
  7470 ;;		Nothing
  7471 ;; This function is called by:
  7472 ;;		_vfpfcnvrt
  7473 ;; This function uses a non-reentrant model
  7474 ;;
  7475                           
  7476                           	psect	text12
  7477  00485C                     __ptext12:
  7478                           	opt callstack 0
  7479  00485C                     _strncmp:
  7480                           	opt callstack 22
  7481  00485C  C004  F00B         	movff	strncmp@_l,strncmp@l
  7482  004860  C005  F00C         	movff	strncmp@_l+1,strncmp@l+1
  7483  004864  C006  F00D         	movff	strncmp@_r,strncmp@r
  7484  004868  C007  F00E         	movff	strncmp@_r+1,strncmp@r+1
  7485  00486C  0608               	decf	strncmp@n^0,f,c
  7486  00486E  A0D8               	btfss	status,0,c
  7487  004870  0609               	decf	(strncmp@n+1)^0,f,c
  7488  004872  2808               	incf	strncmp@n^0,w,c
  7489  004874  E106               	bnz	u11371
  7490  004876  2809               	incf	(strncmp@n+1)^0,w,c
  7491  004878  A4D8               	btfss	status,2,c
  7492  00487A  EF41  F024         	goto	u11371
  7493  00487E  EF43  F024         	goto	u11370
  7494  004882                     u11371:
  7495  004882  EF50  F024         	goto	l8614
  7496  004886                     u11370:
  7497  004886  0E00               	movlw	0
  7498  004888  6E05               	movwf	(?_strncmp+1)^0,c
  7499  00488A  0E00               	movlw	0
  7500  00488C  6E04               	movwf	?_strncmp^0,c
  7501  00488E  EFC0  F024         	goto	l1592
  7502  004892                     l8612:
  7503  004892  4A0B               	infsnz	strncmp@l^0,f,c
  7504  004894  2A0C               	incf	(strncmp@l+1)^0,f,c
  7505  004896  4A0D               	infsnz	strncmp@r^0,f,c
  7506  004898  2A0E               	incf	(strncmp@r+1)^0,f,c
  7507  00489A  0608               	decf	strncmp@n^0,f,c
  7508  00489C  A0D8               	btfss	status,0,c
  7509  00489E  0609               	decf	(strncmp@n+1)^0,f,c
  7510  0048A0                     l8614:
  7511  0048A0  C00B  FFF6         	movff	strncmp@l,tblptrl
  7512  0048A4  C00C  FFF7         	movff	strncmp@l+1,tblptrh
  7513  0048A8  0E00               	movlw	low (__mediumconst shr (0+16))
  7514  0048AA  6EF8               	movwf	tblptru,c
  7515  0048AC  0E0E               	movlw	(high __ramtop+-1)
  7516  0048AE  64F7               	cpfsgt	tblptrh,c
  7517  0048B0  D003               	bra	u11387
  7518  0048B2  0008               	tblrd		*
  7519  0048B4  50F5               	movf	tablat,w,c
  7520  0048B6  D005               	bra	u11380
  7521  0048B8                     u11387:
  7522  0048B8  CFF6 FFE1          	movff	tblptrl,fsr1l
  7523  0048BC  CFF7 FFE2          	movff	tblptrh,fsr1h
  7524  0048C0  50E7               	movf	indf1,w,c
  7525  0048C2                     u11380:
  7526  0048C2  0900               	iorlw	0
  7527  0048C4  B4D8               	btfsc	status,2,c
  7528  0048C6  EF67  F024         	goto	u11391
  7529  0048CA  EF69  F024         	goto	u11390
  7530  0048CE                     u11391:
  7531  0048CE  EFA2  F024         	goto	l8622
  7532  0048D2                     u11390:
  7533  0048D2  C00D  FFF6         	movff	strncmp@r,tblptrl
  7534  0048D6  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  7535  0048DA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7536  0048DA  6AF8               	clrf	tblptru,c
  7537  0048DC                     	endif
  7538  0048DC                     	if	0	;tblptru may be non-zero
  7539  0048DC                     	endif
  7540  0048DC  0008               	tblrd		*
  7541  0048DE  50F5               	movf	tablat,w,c
  7542  0048E0  0900               	iorlw	0
  7543  0048E2  B4D8               	btfsc	status,2,c
  7544  0048E4  EF76  F024         	goto	u11401
  7545  0048E8  EF78  F024         	goto	u11400
  7546  0048EC                     u11401:
  7547  0048EC  EFA2  F024         	goto	l8622
  7548  0048F0                     u11400:
  7549  0048F0  5008               	movf	strncmp@n^0,w,c
  7550  0048F2  1009               	iorwf	(strncmp@n+1)^0,w,c
  7551  0048F4  B4D8               	btfsc	status,2,c
  7552  0048F6  EF7F  F024         	goto	u11411
  7553  0048FA  EF81  F024         	goto	u11410
  7554  0048FE                     u11411:
  7555  0048FE  EFA2  F024         	goto	l8622
  7556  004902                     u11410:
  7557  004902  C00D  FFF6         	movff	strncmp@r,tblptrl
  7558  004906  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  7559  00490A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7560  00490A  6AF8               	clrf	tblptru,c
  7561  00490C                     	endif
  7562  00490C                     	if	0	;tblptru may be non-zero
  7563  00490C                     	endif
  7564  00490C  0008               	tblrd		*
  7565  00490E  CFF5 F00A          	movff	tablat,??_strncmp
  7566  004912  C00B  FFF6         	movff	strncmp@l,tblptrl
  7567  004916  C00C  FFF7         	movff	strncmp@l+1,tblptrh
  7568  00491A  0E00               	movlw	low (__mediumconst shr (0+16))
  7569  00491C  6EF8               	movwf	tblptru,c
  7570  00491E  0E0E               	movlw	(high __ramtop+-1)
  7571  004920  64F7               	cpfsgt	tblptrh,c
  7572  004922  D003               	bra	u11427
  7573  004924  0008               	tblrd		*
  7574  004926  50F5               	movf	tablat,w,c
  7575  004928  D005               	bra	u11425
  7576  00492A                     u11427:
  7577  00492A  CFF6 FFE1          	movff	tblptrl,fsr1l
  7578  00492E  CFF7 FFE2          	movff	tblptrh,fsr1h
  7579  004932  50E7               	movf	indf1,w,c
  7580  004934                     u11425:
  7581  004934  180A               	xorwf	??_strncmp^0,w,c
  7582  004936  B4D8               	btfsc	status,2,c
  7583  004938  EFA0  F024         	goto	u11421
  7584  00493C  EFA2  F024         	goto	u11420
  7585  004940                     u11421:
  7586  004940  EF49  F024         	goto	l8612
  7587  004944                     u11420:
  7588  004944                     l8622:
  7589  004944  C00B  FFF6         	movff	strncmp@l,tblptrl
  7590  004948  C00C  FFF7         	movff	strncmp@l+1,tblptrh
  7591  00494C  0E00               	movlw	low (__mediumconst shr (0+16))
  7592  00494E  6EF8               	movwf	tblptru,c
  7593  004950  0E0E               	movlw	(high __ramtop+-1)
  7594  004952  64F7               	cpfsgt	tblptrh,c
  7595  004954  D003               	bra	u11437
  7596  004956  0008               	tblrd		*
  7597  004958  50F5               	movf	tablat,w,c
  7598  00495A  D005               	bra	u11430
  7599  00495C                     u11437:
  7600  00495C  CFF6 FFE1          	movff	tblptrl,fsr1l
  7601  004960  CFF7 FFE2          	movff	tblptrh,fsr1h
  7602  004964  50E7               	movf	indf1,w,c
  7603  004966                     u11430:
  7604  004966  6E0A               	movwf	??_strncmp^0,c
  7605  004968  C00D  FFF6         	movff	strncmp@r,tblptrl
  7606  00496C  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  7607  004970                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7608  004970  6AF8               	clrf	tblptru,c
  7609  004972                     	endif
  7610  004972                     	if	0	;tblptru may be non-zero
  7611  004972                     	endif
  7612  004972  0008               	tblrd		*
  7613  004974  50F5               	movf	tablat,w,c
  7614  004976  5C0A               	subwf	??_strncmp^0,w,c
  7615  004978  6E04               	movwf	?_strncmp^0,c
  7616  00497A  6A05               	clrf	(?_strncmp+1)^0,c
  7617  00497C  A0D8               	btfss	status,0,c
  7618  00497E  0605               	decf	(?_strncmp+1)^0,f,c
  7619  004980                     l1592:
  7620  004980  0012               	return		;funcret
  7621  004982                     __end_of_strncmp:
  7622                           	opt callstack 0
  7623                           
  7624 ;; *************** function _stoa *****************
  7625 ;; Defined at:
  7626 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7627 ;; Parameters:    Size  Location     Type
  7628 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  7629 ;;		 -> vsnprintf@f(6), 
  7630 ;;  s               2   14[COMRAM] PTR unsigned char 
  7631 ;;		 -> ?_snprintf(2), 
  7632 ;; Auto vars:     Size  Location     Type
  7633 ;;  nuls            7   17[COMRAM] unsigned char [7]
  7634 ;;  l               2   32[COMRAM] int 
  7635 ;;  p               2   30[COMRAM] int 
  7636 ;;  cp              2   28[COMRAM] PTR unsigned char 
  7637 ;;		 -> ?_snprintf(2), stoa@nuls(7), 
  7638 ;;  w               2   26[COMRAM] int 
  7639 ;;  i               2   24[COMRAM] int 
  7640 ;; Return value:  Size  Location     Type
  7641 ;;                  2   12[COMRAM] int 
  7642 ;; Registers used:
  7643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7644 ;; Tracked objects:
  7645 ;;		On entry : 0/0
  7646 ;;		On exit  : 0/0
  7647 ;;		Unchanged: 0/0
  7648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7649 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7650 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7651 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7652 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7653 ;;Total ram usage:       22 bytes
  7654 ;; Hardware stack levels used:    1
  7655 ;; Hardware stack levels required when called:    6
  7656 ;; This function calls:
  7657 ;;		_fputc
  7658 ;;		_strlen
  7659 ;; This function is called by:
  7660 ;;		_vfpfcnvrt
  7661 ;; This function uses a non-reentrant model
  7662 ;;
  7663                           
  7664                           	psect	text13
  7665  00417E                     __ptext13:
  7666                           	opt callstack 0
  7667  00417E                     _stoa:
  7668                           	opt callstack 20
  7669  00417E                     
  7670                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7671  00417E  EE21  F0B4         	lfsr	2,stoa@F1174
  7672  004182  EE10  F012         	lfsr	1,stoa@nuls
  7673  004186  0E06               	movlw	6
  7674  004188                     u10971:
  7675  004188  CFDB FFE3          	movff	plusw2,plusw1
  7676  00418C  06E8               	decf	wreg,f,c
  7677  00418E  E2FC               	bc	u10971
  7678  004190                     
  7679                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  7680  004190  C00F  F01D         	movff	stoa@s,stoa@cp
  7681  004194  C010  F01E         	movff	stoa@s+1,stoa@cp+1
  7682  004198                     
  7683                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  7684  004198  501D               	movf	stoa@cp^0,w,c
  7685  00419A  101E               	iorwf	(stoa@cp+1)^0,w,c
  7686  00419C  A4D8               	btfss	status,2,c
  7687  00419E  EFD3  F020         	goto	u10981
  7688  0041A2  EFD5  F020         	goto	u10980
  7689  0041A6                     u10981:
  7690  0041A6  EFD9  F020         	goto	l8428
  7691  0041AA                     u10980:
  7692  0041AA                     
  7693                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  7694  0041AA  0E12               	movlw	low stoa@nuls
  7695  0041AC  6E1D               	movwf	stoa@cp^0,c
  7696  0041AE  0E00               	movlw	high stoa@nuls
  7697  0041B0  6E1E               	movwf	(stoa@cp+1)^0,c
  7698  0041B2                     l8428:
  7699                           
  7700                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  7701  0041B2  C01D  F004         	movff	stoa@cp,strlen@s
  7702  0041B6  C01E  F005         	movff	stoa@cp+1,strlen@s+1
  7703  0041BA  EC22  F02D         	call	_strlen	;wreg free
  7704  0041BE  C004  F021         	movff	?_strlen,stoa@l
  7705  0041C2  C005  F022         	movff	?_strlen+1,stoa@l+1
  7706  0041C6                     
  7707                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  7708  0041C6  C058  F01F         	movff	_prec,stoa@p
  7709  0041CA  C059  F020         	movff	_prec+1,stoa@p+1
  7710  0041CE                     
  7711                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  7712  0041CE  BE20               	btfsc	(stoa@p+1)^0,7,c
  7713  0041D0  EFEC  F020         	goto	u10991
  7714  0041D4  EFEE  F020         	goto	u10990
  7715  0041D8                     u10991:
  7716  0041D8  EF03  F021         	goto	l633
  7717  0041DC                     u10990:
  7718  0041DC  5021               	movf	stoa@l^0,w,c
  7719  0041DE  5C1F               	subwf	stoa@p^0,w,c
  7720  0041E0  5020               	movf	(stoa@p+1)^0,w,c
  7721  0041E2  0A80               	xorlw	128
  7722  0041E4  6E11               	movwf	??_stoa^0,c
  7723  0041E6  5022               	movf	(stoa@l+1)^0,w,c
  7724  0041E8  0A80               	xorlw	128
  7725  0041EA  5811               	subwfb	??_stoa^0,w,c
  7726  0041EC  A0D8               	btfss	status,0,c
  7727  0041EE  EFFB  F020         	goto	u11001
  7728  0041F2  EFFD  F020         	goto	u11000
  7729  0041F6                     u11001:
  7730  0041F6  EFFF  F020         	goto	l631
  7731  0041FA                     u11000:
  7732  0041FA  EF03  F021         	goto	l633
  7733  0041FE                     l631:
  7734  0041FE  C01F  F021         	movff	stoa@p,stoa@l
  7735  004202  C020  F022         	movff	stoa@p+1,stoa@l+1
  7736  004206                     l633:
  7737                           
  7738                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  7739  004206  C021  F01F         	movff	stoa@l,stoa@p
  7740  00420A  C022  F020         	movff	stoa@l+1,stoa@p+1
  7741                           
  7742                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  7743  00420E  C0F0  F01B         	movff	_width,stoa@w
  7744  004212  C0F1  F01C         	movff	_width+1,stoa@w+1
  7745                           
  7746                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  7747  004216  0100               	movlb	0	; () banked
  7748  004218  B1F2               	btfsc	_flags& (0+255),0,b
  7749  00421A  EF11  F021         	goto	u11011
  7750  00421E  EF13  F021         	goto	u11010
  7751  004222                     u11011:
  7752  004222  EF30  F021         	goto	l8444
  7753  004226                     u11010:
  7754  004226  EF21  F021         	goto	l8442
  7755  00422A                     l8438:
  7756                           
  7757                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  7758  00422A  0E00               	movlw	0
  7759  00422C  6E05               	movwf	(fputc@c+1)^0,c
  7760  00422E  0E20               	movlw	32
  7761  004230  6E04               	movwf	fputc@c^0,c
  7762  004232  C00D  F006         	movff	stoa@fp,fputc@fp
  7763  004236  C00E  F007         	movff	stoa@fp+1,fputc@fp+1
  7764  00423A  ECAD  F027         	call	_fputc	;wreg free
  7765  00423E                     
  7766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  7767  00423E  4A21               	infsnz	stoa@l^0,f,c
  7768  004240  2A22               	incf	(stoa@l+1)^0,f,c
  7769  004242                     l8442:
  7770                           
  7771                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  7772  004242  501B               	movf	stoa@w^0,w,c
  7773  004244  5C21               	subwf	stoa@l^0,w,c
  7774  004246  5022               	movf	(stoa@l+1)^0,w,c
  7775  004248  0A80               	xorlw	128
  7776  00424A  6E11               	movwf	??_stoa^0,c
  7777  00424C  501C               	movf	(stoa@w+1)^0,w,c
  7778  00424E  0A80               	xorlw	128
  7779  004250  5811               	subwfb	??_stoa^0,w,c
  7780  004252  A0D8               	btfss	status,0,c
  7781  004254  EF2E  F021         	goto	u11021
  7782  004258  EF30  F021         	goto	u11020
  7783  00425C                     u11021:
  7784  00425C  EF15  F021         	goto	l8438
  7785  004260                     u11020:
  7786  004260                     l8444:
  7787                           
  7788                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  7789  004260  0E00               	movlw	0
  7790  004262  6E1A               	movwf	(stoa@i+1)^0,c
  7791  004264  0E00               	movlw	0
  7792  004266  6E19               	movwf	stoa@i^0,c
  7793                           
  7794                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7795  004268  EF49  F021         	goto	l8452
  7796  00426C                     l8446:
  7797                           
  7798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  7799  00426C  C01D  FFD9         	movff	stoa@cp,fsr2l
  7800  004270  C01E  FFDA         	movff	stoa@cp+1,fsr2h
  7801  004274  50DF               	movf	indf2,w,c
  7802  004276  6E11               	movwf	??_stoa^0,c
  7803  004278  5011               	movf	??_stoa^0,w,c
  7804  00427A  6E04               	movwf	fputc@c^0,c
  7805  00427C  6A05               	clrf	(fputc@c+1)^0,c
  7806  00427E  C00D  F006         	movff	stoa@fp,fputc@fp
  7807  004282  C00E  F007         	movff	stoa@fp+1,fputc@fp+1
  7808  004286  ECAD  F027         	call	_fputc	;wreg free
  7809  00428A                     
  7810                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  7811  00428A  4A1D               	infsnz	stoa@cp^0,f,c
  7812  00428C  2A1E               	incf	(stoa@cp+1)^0,f,c
  7813  00428E                     
  7814                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  7815  00428E  4A19               	infsnz	stoa@i^0,f,c
  7816  004290  2A1A               	incf	(stoa@i+1)^0,f,c
  7817  004292                     l8452:
  7818                           
  7819                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7820  004292  501F               	movf	stoa@p^0,w,c
  7821  004294  5C19               	subwf	stoa@i^0,w,c
  7822  004296  501A               	movf	(stoa@i+1)^0,w,c
  7823  004298  0A80               	xorlw	128
  7824  00429A  6E11               	movwf	??_stoa^0,c
  7825  00429C  5020               	movf	(stoa@p+1)^0,w,c
  7826  00429E  0A80               	xorlw	128
  7827  0042A0  5811               	subwfb	??_stoa^0,w,c
  7828  0042A2  A0D8               	btfss	status,0,c
  7829  0042A4  EF56  F021         	goto	u11031
  7830  0042A8  EF58  F021         	goto	u11030
  7831  0042AC                     u11031:
  7832  0042AC  EF36  F021         	goto	l8446
  7833  0042B0                     u11030:
  7834  0042B0                     
  7835                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  7836  0042B0  0100               	movlb	0	; () banked
  7837  0042B2  A1F2               	btfss	_flags& (0+255),0,b
  7838  0042B4  EF5E  F021         	goto	u11041
  7839  0042B8  EF60  F021         	goto	u11040
  7840  0042BC                     u11041:
  7841  0042BC  EF7D  F021         	goto	l643
  7842  0042C0                     u11040:
  7843  0042C0  EF6E  F021         	goto	l8460
  7844  0042C4                     l8456:
  7845                           
  7846                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  7847  0042C4  0E00               	movlw	0
  7848  0042C6  6E05               	movwf	(fputc@c+1)^0,c
  7849  0042C8  0E20               	movlw	32
  7850  0042CA  6E04               	movwf	fputc@c^0,c
  7851  0042CC  C00D  F006         	movff	stoa@fp,fputc@fp
  7852  0042D0  C00E  F007         	movff	stoa@fp+1,fputc@fp+1
  7853  0042D4  ECAD  F027         	call	_fputc	;wreg free
  7854  0042D8                     
  7855                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  7856  0042D8  4A21               	infsnz	stoa@l^0,f,c
  7857  0042DA  2A22               	incf	(stoa@l+1)^0,f,c
  7858  0042DC                     l8460:
  7859                           
  7860                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  7861  0042DC  501B               	movf	stoa@w^0,w,c
  7862  0042DE  5C21               	subwf	stoa@l^0,w,c
  7863  0042E0  5022               	movf	(stoa@l+1)^0,w,c
  7864  0042E2  0A80               	xorlw	128
  7865  0042E4  6E11               	movwf	??_stoa^0,c
  7866  0042E6  501C               	movf	(stoa@w+1)^0,w,c
  7867  0042E8  0A80               	xorlw	128
  7868  0042EA  5811               	subwfb	??_stoa^0,w,c
  7869  0042EC  A0D8               	btfss	status,0,c
  7870  0042EE  EF7B  F021         	goto	u11051
  7871  0042F2  EF7D  F021         	goto	u11050
  7872  0042F6                     u11051:
  7873  0042F6  EF62  F021         	goto	l8456
  7874  0042FA                     u11050:
  7875  0042FA                     l643:
  7876                           
  7877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  7878  0042FA  C021  F00D         	movff	stoa@l,?_stoa
  7879  0042FE  C022  F00E         	movff	stoa@l+1,?_stoa+1
  7880  004302  0012               	return		;funcret
  7881  004304                     __end_of_stoa:
  7882                           	opt callstack 0
  7883                           
  7884 ;; *************** function _otoa *****************
  7885 ;; Defined at:
  7886 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7887 ;; Parameters:    Size  Location     Type
  7888 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  7889 ;;		 -> vsnprintf@f(6), 
  7890 ;;  d               8   32[COMRAM] unsigned long long 
  7891 ;; Auto vars:     Size  Location     Type
  7892 ;;  n               8   54[COMRAM] unsigned long long 
  7893 ;;  i               2   62[COMRAM] int 
  7894 ;;  w               2   52[COMRAM] int 
  7895 ;;  t               2   50[COMRAM] int 
  7896 ;;  p               2   48[COMRAM] int 
  7897 ;; Return value:  Size  Location     Type
  7898 ;;                  2   30[COMRAM] int 
  7899 ;; Registers used:
  7900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7901 ;; Tracked objects:
  7902 ;;		On entry : 0/0
  7903 ;;		On exit  : 0/0
  7904 ;;		Unchanged: 0/0
  7905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7906 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7907 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7908 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7909 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7910 ;;Total ram usage:       34 bytes
  7911 ;; Hardware stack levels used:    1
  7912 ;; Hardware stack levels required when called:    8
  7913 ;; This function calls:
  7914 ;;		_pad
  7915 ;; This function is called by:
  7916 ;;		_vfpfcnvrt
  7917 ;; This function uses a non-reentrant model
  7918 ;;
  7919                           
  7920                           	psect	text14
  7921  003AB8                     __ptext14:
  7922                           	opt callstack 0
  7923  003AB8                     _otoa:
  7924                           	opt callstack 18
  7925  003AB8                     
  7926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  7927  003AB8  BE59               	btfsc	(_prec+1)^0,7,c
  7928  003ABA  EF61  F01D         	goto	u10871
  7929  003ABE  EF63  F01D         	goto	u10870
  7930  003AC2                     u10871:
  7931  003AC2  EF65  F01D         	goto	l8376
  7932  003AC6                     u10870:
  7933  003AC6                     
  7934                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  7935  003AC6  0100               	movlb	0	; () banked
  7936  003AC8  93F2               	bcf	_flags& (0+255),1,b
  7937  003ACA                     l8376:
  7938                           
  7939                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  7940  003ACA  BE59               	btfsc	(_prec+1)^0,7,c
  7941  003ACC  EF72  F01D         	goto	u10880
  7942  003AD0  5059               	movf	(_prec+1)^0,w,c
  7943  003AD2  E106               	bnz	u10881
  7944  003AD4  0458               	decf	_prec^0,w,c
  7945  003AD6  B0D8               	btfsc	status,0,c
  7946  003AD8  EF70  F01D         	goto	u10881
  7947  003ADC  EF72  F01D         	goto	u10880
  7948  003AE0                     u10881:
  7949  003AE0  EF78  F01D         	goto	l613
  7950  003AE4                     u10880:
  7951  003AE4  0E00               	movlw	0
  7952  003AE6  6E32               	movwf	(otoa@p+1)^0,c
  7953  003AE8  0E01               	movlw	1
  7954  003AEA  6E31               	movwf	otoa@p^0,c
  7955  003AEC  EF7C  F01D         	goto	l615
  7956  003AF0                     l613:
  7957  003AF0  C058  F031         	movff	_prec,otoa@p
  7958  003AF4  C059  F032         	movff	_prec+1,otoa@p+1
  7959  003AF8                     l615:
  7960                           
  7961                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  7962  003AF8  C0F0  F035         	movff	_width,otoa@w
  7963  003AFC  C0F1  F036         	movff	_width+1,otoa@w+1
  7964                           
  7965                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  7966  003B00  C021  F037         	movff	otoa@d,otoa@n
  7967  003B04  C022  F038         	movff	otoa@d+1,otoa@n+1
  7968  003B08  C023  F039         	movff	otoa@d+2,otoa@n+2
  7969  003B0C  C024  F03A         	movff	otoa@d+3,otoa@n+3
  7970  003B10  C025  F03B         	movff	otoa@d+4,otoa@n+4
  7971  003B14  C026  F03C         	movff	otoa@d+5,otoa@n+5
  7972  003B18  C027  F03D         	movff	otoa@d+6,otoa@n+6
  7973  003B1C  C028  F03E         	movff	otoa@d+7,otoa@n+7
  7974  003B20                     
  7975                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  7976  003B20  0E00               	movlw	0
  7977  003B22  6E40               	movwf	(otoa@i+1)^0,c
  7978  003B24  0E4F               	movlw	79
  7979  003B26  6E3F               	movwf	otoa@i^0,c
  7980  003B28                     
  7981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  7982  003B28  0E00               	movlw	0
  7983  003B2A  0101               	movlb	1	; () banked
  7984  003B2C  6FB3               	movwf	(_dbuf+79)& (0+255),b
  7985  003B2E                     
  7986                           ; BSR set to: 1
  7987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  7988  003B2E  0E00               	movlw	0
  7989  003B30  6E34               	movwf	(otoa@t+1)^0,c
  7990  003B32  0E00               	movlw	0
  7991  003B34  6E33               	movwf	otoa@t^0,c
  7992                           
  7993                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7994  003B36  EFE2  F01D         	goto	l8398
  7995  003B3A                     l8386:
  7996                           
  7997                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  7998  003B3A  063F               	decf	otoa@i^0,f,c
  7999  003B3C  A0D8               	btfss	status,0,c
  8000  003B3E  0640               	decf	(otoa@i+1)^0,f,c
  8001  003B40                     
  8002                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  8003  003B40  0E07               	movlw	7
  8004  003B42  1437               	andwf	otoa@n^0,w,c
  8005  003B44  6E33               	movwf	otoa@t^0,c
  8006  003B46  6A34               	clrf	(otoa@t+1)^0,c
  8007  003B48                     
  8008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  8009  003B48  0E64               	movlw	low _dbuf
  8010  003B4A  243F               	addwf	otoa@i^0,w,c
  8011  003B4C  6ED9               	movwf	fsr2l,c
  8012  003B4E  0E01               	movlw	high _dbuf
  8013  003B50  2040               	addwfc	(otoa@i+1)^0,w,c
  8014  003B52  6EDA               	movwf	fsr2h,c
  8015  003B54  5033               	movf	otoa@t^0,w,c
  8016  003B56  0F30               	addlw	48
  8017  003B58  6EDF               	movwf	indf2,c
  8018  003B5A                     
  8019                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  8020  003B5A  0631               	decf	otoa@p^0,f,c
  8021  003B5C  A0D8               	btfss	status,0,c
  8022  003B5E  0632               	decf	(otoa@p+1)^0,f,c
  8023  003B60                     
  8024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  8025  003B60  0635               	decf	otoa@w^0,f,c
  8026  003B62  A0D8               	btfss	status,0,c
  8027  003B64  0636               	decf	(otoa@w+1)^0,f,c
  8028  003B66                     
  8029                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  8030  003B66  C037  F029         	movff	otoa@n,??_otoa
  8031  003B6A  C038  F02A         	movff	otoa@n+1,??_otoa+1
  8032  003B6E  C039  F02B         	movff	otoa@n+2,??_otoa+2
  8033  003B72  C03A  F02C         	movff	otoa@n+3,??_otoa+3
  8034  003B76  C03B  F02D         	movff	otoa@n+4,??_otoa+4
  8035  003B7A  C03C  F02E         	movff	otoa@n+5,??_otoa+5
  8036  003B7E  C03D  F02F         	movff	otoa@n+6,??_otoa+6
  8037  003B82  C03E  F030         	movff	otoa@n+7,??_otoa+7
  8038  003B86  0E04               	movlw	4
  8039  003B88  EFCF  F01D         	goto	u10890
  8040  003B8C                     u10895:
  8041  003B8C  90D8               	bcf	status,0,c
  8042  003B8E  3230               	rrcf	(??_otoa+7)^0,f,c
  8043  003B90  322F               	rrcf	(??_otoa+6)^0,f,c
  8044  003B92  322E               	rrcf	(??_otoa+5)^0,f,c
  8045  003B94  322D               	rrcf	(??_otoa+4)^0,f,c
  8046  003B96  322C               	rrcf	(??_otoa+3)^0,f,c
  8047  003B98  322B               	rrcf	(??_otoa+2)^0,f,c
  8048  003B9A  322A               	rrcf	(??_otoa+1)^0,f,c
  8049  003B9C  3229               	rrcf	??_otoa^0,f,c
  8050  003B9E                     u10890:
  8051  003B9E  2EE8               	decfsz	wreg,f,c
  8052  003BA0  EFC6  F01D         	goto	u10895
  8053  003BA4  C029  F037         	movff	??_otoa,otoa@n
  8054  003BA8  C02A  F038         	movff	??_otoa+1,otoa@n+1
  8055  003BAC  C02B  F039         	movff	??_otoa+2,otoa@n+2
  8056  003BB0  C02C  F03A         	movff	??_otoa+3,otoa@n+3
  8057  003BB4  C02D  F03B         	movff	??_otoa+4,otoa@n+4
  8058  003BB8  C02E  F03C         	movff	??_otoa+5,otoa@n+5
  8059  003BBC  C02F  F03D         	movff	??_otoa+6,otoa@n+6
  8060  003BC0  C030  F03E         	movff	??_otoa+7,otoa@n+7
  8061  003BC4                     l8398:
  8062                           
  8063                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8064  003BC4  BE40               	btfsc	(otoa@i+1)^0,7,c
  8065  003BC6  EFED  F01D         	goto	u10901
  8066  003BCA  5040               	movf	(otoa@i+1)^0,w,c
  8067  003BCC  E108               	bnz	u10900
  8068  003BCE  043F               	decf	otoa@i^0,w,c
  8069  003BD0  A0D8               	btfss	status,0,c
  8070  003BD2  EFED  F01D         	goto	u10901
  8071  003BD6  EFEF  F01D         	goto	u10900
  8072  003BDA                     u10901:
  8073  003BDA  EF20  F01E         	goto	l622
  8074  003BDE                     u10900:
  8075  003BDE  5037               	movf	otoa@n^0,w,c
  8076  003BE0  1038               	iorwf	(otoa@n+1)^0,w,c
  8077  003BE2  1039               	iorwf	(otoa@n+2)^0,w,c
  8078  003BE4  103A               	iorwf	(otoa@n+3)^0,w,c
  8079  003BE6  103B               	iorwf	(otoa@n+4)^0,w,c
  8080  003BE8  103C               	iorwf	(otoa@n+5)^0,w,c
  8081  003BEA  103D               	iorwf	(otoa@n+6)^0,w,c
  8082  003BEC  103E               	iorwf	(otoa@n+7)^0,w,c
  8083  003BEE  A4D8               	btfss	status,2,c
  8084  003BF0  EFFC  F01D         	goto	u10911
  8085  003BF4  EFFE  F01D         	goto	u10910
  8086  003BF8                     u10911:
  8087  003BF8  EF9D  F01D         	goto	l8386
  8088  003BFC                     u10910:
  8089  003BFC  BE32               	btfsc	(otoa@p+1)^0,7,c
  8090  003BFE  EF0B  F01E         	goto	u10920
  8091  003C02  5032               	movf	(otoa@p+1)^0,w,c
  8092  003C04  E106               	bnz	u10921
  8093  003C06  0431               	decf	otoa@p^0,w,c
  8094  003C08  B0D8               	btfsc	status,0,c
  8095  003C0A  EF09  F01E         	goto	u10921
  8096  003C0E  EF0B  F01E         	goto	u10920
  8097  003C12                     u10921:
  8098  003C12  EF9D  F01D         	goto	l8386
  8099  003C16                     u10920:
  8100  003C16  BE36               	btfsc	(otoa@w+1)^0,7,c
  8101  003C18  EF16  F01E         	goto	u10931
  8102  003C1C  5036               	movf	(otoa@w+1)^0,w,c
  8103  003C1E  E108               	bnz	u10930
  8104  003C20  0435               	decf	otoa@w^0,w,c
  8105  003C22  A0D8               	btfss	status,0,c
  8106  003C24  EF16  F01E         	goto	u10931
  8107  003C28  EF18  F01E         	goto	u10930
  8108  003C2C                     u10931:
  8109  003C2C  EF20  F01E         	goto	l622
  8110  003C30                     u10930:
  8111  003C30  0100               	movlb	0	; () banked
  8112  003C32  B3F2               	btfsc	_flags& (0+255),1,b
  8113  003C34  EF1E  F01E         	goto	u10941
  8114  003C38  EF20  F01E         	goto	u10940
  8115  003C3C                     u10941:
  8116  003C3C  EF9D  F01D         	goto	l8386
  8117  003C40                     u10940:
  8118  003C40                     l622:
  8119                           
  8120                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  8121  003C40  0100               	movlb	0	; () banked
  8122  003C42  A9F2               	btfss	_flags& (0+255),4,b
  8123  003C44  EF26  F01E         	goto	u10951
  8124  003C48  EF28  F01E         	goto	u10950
  8125  003C4C                     u10951:
  8126  003C4C  EF3F  F01E         	goto	l8416
  8127  003C50                     u10950:
  8128  003C50                     
  8129                           ; BSR set to: 0
  8130  003C50  5033               	movf	otoa@t^0,w,c
  8131  003C52  1034               	iorwf	(otoa@t+1)^0,w,c
  8132  003C54  B4D8               	btfsc	status,2,c
  8133  003C56  EF2F  F01E         	goto	u10961
  8134  003C5A  EF31  F01E         	goto	u10960
  8135  003C5E                     u10961:
  8136  003C5E  EF3F  F01E         	goto	l8416
  8137  003C62                     u10960:
  8138  003C62                     
  8139                           ; BSR set to: 0
  8140                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  8141  003C62  063F               	decf	otoa@i^0,f,c
  8142  003C64  A0D8               	btfss	status,0,c
  8143  003C66  0640               	decf	(otoa@i+1)^0,f,c
  8144  003C68                     
  8145                           ; BSR set to: 0
  8146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  8147  003C68  0E64               	movlw	low _dbuf
  8148  003C6A  243F               	addwf	otoa@i^0,w,c
  8149  003C6C  6ED9               	movwf	fsr2l,c
  8150  003C6E  0E01               	movlw	high _dbuf
  8151  003C70  2040               	addwfc	(otoa@i+1)^0,w,c
  8152  003C72  6EDA               	movwf	fsr2h,c
  8153  003C74  0E30               	movlw	48
  8154  003C76  6EDF               	movwf	indf2,c
  8155  003C78                     
  8156                           ; BSR set to: 0
  8157                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  8158  003C78  0635               	decf	otoa@w^0,f,c
  8159  003C7A  A0D8               	btfss	status,0,c
  8160  003C7C  0636               	decf	(otoa@w+1)^0,f,c
  8161  003C7E                     l8416:
  8162                           
  8163                           ; BSR set to: 0
  8164                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  8165  003C7E  C01F  F014         	movff	otoa@fp,pad@fp
  8166  003C82  C020  F015         	movff	otoa@fp+1,pad@fp+1
  8167  003C86  0E64               	movlw	low _dbuf
  8168  003C88  243F               	addwf	otoa@i^0,w,c
  8169  003C8A  6E16               	movwf	pad@buf^0,c
  8170  003C8C  0E01               	movlw	high _dbuf
  8171  003C8E  2040               	addwfc	(otoa@i+1)^0,w,c
  8172  003C90  6E17               	movwf	(pad@buf+1)^0,c
  8173  003C92  C035  F018         	movff	otoa@w,pad@p
  8174  003C96  C036  F019         	movff	otoa@w+1,pad@p+1
  8175  003C9A  EC12  F028         	call	_pad	;wreg free
  8176  003C9E  C014  F01F         	movff	?_pad,?_otoa
  8177  003CA2  C015  F020         	movff	?_pad+1,?_otoa+1
  8178  003CA6  0012               	return		;funcret
  8179  003CA8                     __end_of_otoa:
  8180                           	opt callstack 0
  8181                           
  8182 ;; *************** function _efgtoa *****************
  8183 ;; Defined at:
  8184 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8185 ;; Parameters:    Size  Location     Type
  8186 ;;  fp              2   54[COMRAM] PTR struct _IO_FILE
  8187 ;;		 -> vsnprintf@f(6), 
  8188 ;;  f               4   56[COMRAM] PTR struct _IO_FILE
  8189 ;;  c               1   60[COMRAM] unsigned char 
  8190 ;; Auto vars:     Size  Location     Type
  8191 ;;  u               4   52[BANK0 ] unsigned char 
  8192 ;;  g               4   44[BANK0 ] unsigned char 
  8193 ;;  l               4   38[BANK0 ] unsigned char 
  8194 ;;  h               4   34[BANK0 ] unsigned char 
  8195 ;;  ou              4    0[BANK0 ] unsigned char 
  8196 ;;  n               2   50[BANK0 ] int 
  8197 ;;  e               2   48[BANK0 ] int 
  8198 ;;  i               2   42[BANK0 ] int 
  8199 ;;  w               2   31[BANK0 ] int 
  8200 ;;  p               2   28[BANK0 ] int 
  8201 ;;  sign            2   26[BANK0 ] int 
  8202 ;;  d               2   24[BANK0 ] int 
  8203 ;;  ne              2   22[BANK0 ] int 
  8204 ;;  m               2   20[BANK0 ] int 
  8205 ;;  pp              2   18[BANK0 ] int 
  8206 ;;  t               2   16[BANK0 ] int 
  8207 ;;  mode            1   33[BANK0 ] unsigned char 
  8208 ;;  nmode           1   30[BANK0 ] unsigned char 
  8209 ;; Return value:  Size  Location     Type
  8210 ;;                  2   54[COMRAM] int 
  8211 ;; Registers used:
  8212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8213 ;; Tracked objects:
  8214 ;;		On entry : 0/0
  8215 ;;		On exit  : 0/0
  8216 ;;		Unchanged: 0/0
  8217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8218 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8219 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8220 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8221 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8222 ;;Total ram usage:       68 bytes
  8223 ;; Hardware stack levels used:    1
  8224 ;; Hardware stack levels required when called:    8
  8225 ;; This function calls:
  8226 ;;		___awdiv
  8227 ;;		___awmod
  8228 ;;		___fladd
  8229 ;;		___fldiv
  8230 ;;		___fleq
  8231 ;;		___flge
  8232 ;;		___flmul
  8233 ;;		___flneg
  8234 ;;		___flsub
  8235 ;;		___fltol
  8236 ;;		___fpclassifyf
  8237 ;;		_floorf
  8238 ;;		_isupper
  8239 ;;		_pad
  8240 ;;		_strcpy
  8241 ;;		_tolower
  8242 ;; This function is called by:
  8243 ;;		_vfpfcnvrt
  8244 ;; This function uses a non-reentrant model
  8245 ;;
  8246                           
  8247                           	psect	text15
  8248  001526                     __ptext15:
  8249                           	opt callstack 0
  8250  001526                     _efgtoa:
  8251                           	opt callstack 18
  8252  001526                     
  8253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  8254  001526  0E00               	movlw	0
  8255  001528  0100               	movlb	0	; () banked
  8256  00152A  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  8257  00152C  0E00               	movlw	0
  8258  00152E  6F7A               	movwf	efgtoa@sign& (0+255),b
  8259  001530                     
  8260                           ; BSR set to: 0
  8261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  8262  001530  C039  F08C         	movff	efgtoa@f,efgtoa@g
  8263  001534  C03A  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  8264  001538  C03B  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  8265  00153C  C03C  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  8266  001540                     
  8267                           ; BSR set to: 0
  8268                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  8269  001540  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  8270  001542  EFA7  F00A         	goto	u10350
  8271  001546  EFA5  F00A         	goto	u10351
  8272  00154A                     u10351:
  8273  00154A  EFBD  F00A         	goto	l8084
  8274  00154E                     u10350:
  8275  00154E                     
  8276                           ; BSR set to: 0
  8277                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  8278  00154E  0E00               	movlw	0
  8279  001550  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  8280  001552  0E01               	movlw	1
  8281  001554  6F7A               	movwf	efgtoa@sign& (0+255),b
  8282  001556                     
  8283                           ; BSR set to: 0
  8284                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  8285  001556  C08C  F004         	movff	efgtoa@g,___flneg@f1
  8286  00155A  C08D  F005         	movff	efgtoa@g+1,___flneg@f1+1
  8287  00155E  C08E  F006         	movff	efgtoa@g+2,___flneg@f1+2
  8288  001562  C08F  F007         	movff	efgtoa@g+3,___flneg@f1+3
  8289  001566  ECEA  F02C         	call	___flneg	;wreg free
  8290  00156A  C004  F08C         	movff	?___flneg,efgtoa@g
  8291  00156E  C005  F08D         	movff	?___flneg+1,efgtoa@g+1
  8292  001572  C006  F08E         	movff	?___flneg+2,efgtoa@g+2
  8293  001576  C007  F08F         	movff	?___flneg+3,efgtoa@g+3
  8294  00157A                     l8084:
  8295                           
  8296                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  8297  00157A  0E00               	movlw	0
  8298  00157C  0100               	movlb	0	; () banked
  8299  00157E  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  8300  001580  0E00               	movlw	0
  8301  001582  6F92               	movwf	efgtoa@n& (0+255),b
  8302  001584                     
  8303                           ; BSR set to: 0
  8304                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  8305  001584  C0F0  F07F         	movff	_width,efgtoa@w
  8306  001588  C0F1  F080         	movff	_width+1,efgtoa@w+1
  8307  00158C                     
  8308                           ; BSR set to: 0
  8309                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  8310  00158C  517A               	movf	efgtoa@sign& (0+255),w,b
  8311  00158E  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8312  001590  A4D8               	btfss	status,2,c
  8313  001592  EFCD  F00A         	goto	u10361
  8314  001596  EFCF  F00A         	goto	u10360
  8315  00159A                     u10361:
  8316  00159A  EFD6  F00A         	goto	l8092
  8317  00159E                     u10360:
  8318  00159E                     
  8319                           ; BSR set to: 0
  8320  00159E  A5F2               	btfss	_flags& (0+255),2,b
  8321  0015A0  EFD4  F00A         	goto	u10371
  8322  0015A4  EFD6  F00A         	goto	u10370
  8323  0015A8                     u10371:
  8324  0015A8  EFF0  F00A         	goto	l8104
  8325  0015AC                     u10370:
  8326  0015AC                     l8092:
  8327                           
  8328                           ; BSR set to: 0
  8329                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  8330  0015AC  517A               	movf	efgtoa@sign& (0+255),w,b
  8331  0015AE  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8332  0015B0  A4D8               	btfss	status,2,c
  8333  0015B2  EFDD  F00A         	goto	u10381
  8334  0015B6  EFDF  F00A         	goto	u10380
  8335  0015BA                     u10381:
  8336  0015BA  EFE5  F00A         	goto	l8096
  8337  0015BE                     u10380:
  8338  0015BE                     
  8339                           ; BSR set to: 0
  8340  0015BE  0E00               	movlw	0
  8341  0015C0  6F65               	movwf	(_efgtoa$1313+1)& (0+255),b
  8342  0015C2  0E2B               	movlw	43
  8343  0015C4  6F64               	movwf	_efgtoa$1313& (0+255),b
  8344  0015C6  EFE9  F00A         	goto	l8098
  8345  0015CA                     l8096:
  8346                           
  8347                           ; BSR set to: 0
  8348  0015CA  0E00               	movlw	0
  8349  0015CC  6F65               	movwf	(_efgtoa$1313+1)& (0+255),b
  8350  0015CE  0E2D               	movlw	45
  8351  0015D0  6F64               	movwf	_efgtoa$1313& (0+255),b
  8352  0015D2                     l8098:
  8353                           
  8354                           ; BSR set to: 0
  8355  0015D2  C064  F164         	movff	_efgtoa$1313,_dbuf
  8356  0015D6                     
  8357                           ; BSR set to: 0
  8358                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  8359  0015D6  4B92               	infsnz	efgtoa@n& (0+255),f,b
  8360  0015D8  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  8361  0015DA                     
  8362                           ; BSR set to: 0
  8363                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  8364  0015DA  077F               	decf	efgtoa@w& (0+255),f,b
  8365  0015DC  A0D8               	btfss	status,0,c
  8366  0015DE  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  8367  0015E0                     l8104:
  8368                           
  8369                           ; BSR set to: 0
  8370                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8371  0015E0  C08C  F004         	movff	efgtoa@g,___fpclassifyf@x
  8372  0015E4  C08D  F005         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8373  0015E8  C08E  F006         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8374  0015EC  C08F  F007         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8375  0015F0  EC4E  F026         	call	___fpclassifyf	;wreg free
  8376  0015F4  0404               	decf	?___fpclassifyf^0,w,c
  8377  0015F6  1005               	iorwf	(?___fpclassifyf+1)^0,w,c
  8378  0015F8  A4D8               	btfss	status,2,c
  8379  0015FA  EF01  F00B         	goto	u10391
  8380  0015FE  EF03  F00B         	goto	u10390
  8381  001602                     u10391:
  8382  001602  EF5A  F00B         	goto	l8122
  8383  001606                     u10390:
  8384  001606  0EBF               	movlw	191
  8385  001608  6E3E               	movwf	??_efgtoa^0,c
  8386  00160A  0EFF               	movlw	255
  8387  00160C  6E3F               	movwf	(??_efgtoa+1)^0,c
  8388  00160E  503D               	movf	efgtoa@c^0,w,c
  8389  001610  6E40               	movwf	(??_efgtoa+2)^0,c
  8390  001612  6A41               	clrf	(??_efgtoa+3)^0,c
  8391  001614  503E               	movf	??_efgtoa^0,w,c
  8392  001616  2640               	addwf	(??_efgtoa+2)^0,f,c
  8393  001618  503F               	movf	(??_efgtoa+1)^0,w,c
  8394  00161A  2241               	addwfc	(??_efgtoa+3)^0,f,c
  8395  00161C  5041               	movf	(??_efgtoa+3)^0,w,c
  8396  00161E  E10A               	bnz	u10400
  8397  001620  0E1A               	movlw	26
  8398  001622  5C40               	subwf	(??_efgtoa+2)^0,w,c
  8399  001624  A0D8               	btfss	status,0,c
  8400  001626  EF17  F00B         	goto	u10401
  8401  00162A  EF1A  F00B         	goto	u10400
  8402  00162E                     u10401:
  8403  00162E  0E01               	movlw	1
  8404  001630  EF1B  F00B         	goto	u10410
  8405  001634                     u10400:
  8406  001634  0E00               	movlw	0
  8407  001636                     u10410:
  8408  001636  0100               	movlb	0	; () banked
  8409  001638  6F66               	movwf	_efgtoa$1314& (0+255),b
  8410  00163A  6B67               	clrf	(_efgtoa$1314+1)& (0+255),b
  8411  00163C                     
  8412                           ; BSR set to: 0
  8413  00163C  5166               	movf	_efgtoa$1314& (0+255),w,b
  8414  00163E  1167               	iorwf	(_efgtoa$1314+1)& (0+255),w,b
  8415  001640  B4D8               	btfsc	status,2,c
  8416  001642  EF25  F00B         	goto	u10421
  8417  001646  EF27  F00B         	goto	u10420
  8418  00164A                     u10421:
  8419  00164A  EF35  F00B         	goto	l8114
  8420  00164E                     u10420:
  8421  00164E                     
  8422                           ; BSR set to: 0
  8423                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  8424  00164E  0E64               	movlw	low _dbuf
  8425  001650  2592               	addwf	efgtoa@n& (0+255),w,b
  8426  001652  6E04               	movwf	strcpy@dest^0,c
  8427  001654  0E01               	movlw	high _dbuf
  8428  001656  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8429  001658  6E05               	movwf	(strcpy@dest+1)^0,c
  8430  00165A  0EBA               	movlw	low STR_3
  8431  00165C  6E06               	movwf	strcpy@src^0,c
  8432  00165E  0EFF               	movlw	high STR_3
  8433  001660  6E07               	movwf	(strcpy@src+1)^0,c
  8434  001662  ECAE  F02A         	call	_strcpy	;wreg free
  8435                           
  8436                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  8437  001666  EF41  F00B         	goto	l8116
  8438  00166A                     l8114:
  8439                           
  8440                           ; BSR set to: 0
  8441                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  8442  00166A  0E64               	movlw	low _dbuf
  8443  00166C  2592               	addwf	efgtoa@n& (0+255),w,b
  8444  00166E  6E04               	movwf	strcpy@dest^0,c
  8445  001670  0E01               	movlw	high _dbuf
  8446  001672  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8447  001674  6E05               	movwf	(strcpy@dest+1)^0,c
  8448  001676  0ECA               	movlw	low STR_4
  8449  001678  6E06               	movwf	strcpy@src^0,c
  8450  00167A  0EFF               	movlw	high STR_4
  8451  00167C  6E07               	movwf	(strcpy@src+1)^0,c
  8452  00167E  ECAE  F02A         	call	_strcpy	;wreg free
  8453  001682                     l8116:
  8454                           
  8455                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  8456  001682  0100               	movlb	0	; () banked
  8457  001684  0EFD               	movlw	253
  8458  001686  277F               	addwf	efgtoa@w& (0+255),f,b
  8459  001688  0EFF               	movlw	255
  8460  00168A  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  8461  00168C                     l8118:
  8462                           
  8463                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  8464  00168C  C037  F014         	movff	efgtoa@fp,pad@fp
  8465  001690  C038  F015         	movff	efgtoa@fp+1,pad@fp+1
  8466  001694  0E64               	movlw	low _dbuf
  8467  001696  6E16               	movwf	pad@buf^0,c
  8468  001698  0E01               	movlw	high _dbuf
  8469  00169A  6E17               	movwf	(pad@buf+1)^0,c
  8470  00169C  C07F  F018         	movff	efgtoa@w,pad@p
  8471  0016A0  C080  F019         	movff	efgtoa@w+1,pad@p+1
  8472  0016A4  EC12  F028         	call	_pad	;wreg free
  8473  0016A8  C014  F037         	movff	?_pad,?_efgtoa
  8474  0016AC  C015  F038         	movff	?_pad+1,?_efgtoa+1
  8475  0016B0  EF6A  F010         	goto	l535
  8476  0016B4                     l8122:
  8477                           
  8478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8479  0016B4  C08C  F004         	movff	efgtoa@g,___fpclassifyf@x
  8480  0016B8  C08D  F005         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8481  0016BC  C08E  F006         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8482  0016C0  C08F  F007         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8483  0016C4  EC4E  F026         	call	___fpclassifyf	;wreg free
  8484  0016C8  5004               	movf	?___fpclassifyf^0,w,c
  8485  0016CA  1005               	iorwf	(?___fpclassifyf+1)^0,w,c
  8486  0016CC  A4D8               	btfss	status,2,c
  8487  0016CE  EF6B  F00B         	goto	u10431
  8488  0016D2  EF6D  F00B         	goto	u10430
  8489  0016D6                     u10431:
  8490  0016D6  EFAD  F00B         	goto	l8140
  8491  0016DA                     u10430:
  8492  0016DA  0EBF               	movlw	191
  8493  0016DC  6E3E               	movwf	??_efgtoa^0,c
  8494  0016DE  0EFF               	movlw	255
  8495  0016E0  6E3F               	movwf	(??_efgtoa+1)^0,c
  8496  0016E2  503D               	movf	efgtoa@c^0,w,c
  8497  0016E4  6E40               	movwf	(??_efgtoa+2)^0,c
  8498  0016E6  6A41               	clrf	(??_efgtoa+3)^0,c
  8499  0016E8  503E               	movf	??_efgtoa^0,w,c
  8500  0016EA  2640               	addwf	(??_efgtoa+2)^0,f,c
  8501  0016EC  503F               	movf	(??_efgtoa+1)^0,w,c
  8502  0016EE  2241               	addwfc	(??_efgtoa+3)^0,f,c
  8503  0016F0  5041               	movf	(??_efgtoa+3)^0,w,c
  8504  0016F2  E10A               	bnz	u10440
  8505  0016F4  0E1A               	movlw	26
  8506  0016F6  5C40               	subwf	(??_efgtoa+2)^0,w,c
  8507  0016F8  A0D8               	btfss	status,0,c
  8508  0016FA  EF81  F00B         	goto	u10441
  8509  0016FE  EF84  F00B         	goto	u10440
  8510  001702                     u10441:
  8511  001702  0E01               	movlw	1
  8512  001704  EF85  F00B         	goto	u10450
  8513  001708                     u10440:
  8514  001708  0E00               	movlw	0
  8515  00170A                     u10450:
  8516  00170A  0100               	movlb	0	; () banked
  8517  00170C  6F68               	movwf	_efgtoa$1318& (0+255),b
  8518  00170E  6B69               	clrf	(_efgtoa$1318+1)& (0+255),b
  8519  001710                     
  8520                           ; BSR set to: 0
  8521  001710  5168               	movf	_efgtoa$1318& (0+255),w,b
  8522  001712  1169               	iorwf	(_efgtoa$1318+1)& (0+255),w,b
  8523  001714  B4D8               	btfsc	status,2,c
  8524  001716  EF8F  F00B         	goto	u10461
  8525  00171A  EF91  F00B         	goto	u10460
  8526  00171E                     u10461:
  8527  00171E  EF9F  F00B         	goto	l8132
  8528  001722                     u10460:
  8529  001722                     
  8530                           ; BSR set to: 0
  8531                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  8532  001722  0E64               	movlw	low _dbuf
  8533  001724  2592               	addwf	efgtoa@n& (0+255),w,b
  8534  001726  6E04               	movwf	strcpy@dest^0,c
  8535  001728  0E01               	movlw	high _dbuf
  8536  00172A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8537  00172C  6E05               	movwf	(strcpy@dest+1)^0,c
  8538  00172E  0EBE               	movlw	low STR_7
  8539  001730  6E06               	movwf	strcpy@src^0,c
  8540  001732  0EFF               	movlw	high STR_7
  8541  001734  6E07               	movwf	(strcpy@src+1)^0,c
  8542  001736  ECAE  F02A         	call	_strcpy	;wreg free
  8543                           
  8544                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  8545  00173A  EF41  F00B         	goto	l8116
  8546  00173E                     l8132:
  8547                           
  8548                           ; BSR set to: 0
  8549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  8550  00173E  0E64               	movlw	low _dbuf
  8551  001740  2592               	addwf	efgtoa@n& (0+255),w,b
  8552  001742  6E04               	movwf	strcpy@dest^0,c
  8553  001744  0E01               	movlw	high _dbuf
  8554  001746  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8555  001748  6E05               	movwf	(strcpy@dest+1)^0,c
  8556  00174A  0ED2               	movlw	low STR_8
  8557  00174C  6E06               	movwf	strcpy@src^0,c
  8558  00174E  0EFF               	movlw	high STR_8
  8559  001750  6E07               	movwf	(strcpy@src+1)^0,c
  8560  001752  ECAE  F02A         	call	_strcpy	;wreg free
  8561  001756  EF41  F00B         	goto	l8116
  8562  00175A                     l8140:
  8563                           
  8564                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  8565  00175A  0E00               	movlw	0
  8566  00175C  0100               	movlb	0	; () banked
  8567  00175E  6F94               	movwf	efgtoa@u& (0+255),b
  8568  001760  0E00               	movlw	0
  8569  001762  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  8570  001764  0E80               	movlw	128
  8571  001766  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  8572  001768  0E3F               	movlw	63
  8573  00176A  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  8574                           
  8575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  8576  00176C  0E00               	movlw	0
  8577  00176E  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  8578  001770  0E00               	movlw	0
  8579  001772  6F90               	movwf	efgtoa@e& (0+255),b
  8580  001774                     
  8581                           ; BSR set to: 0
  8582                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  8583  001774  C08C  F004         	movff	efgtoa@g,___fleq@ff1
  8584  001778  C08D  F005         	movff	efgtoa@g+1,___fleq@ff1+1
  8585  00177C  C08E  F006         	movff	efgtoa@g+2,___fleq@ff1+2
  8586  001780  C08F  F007         	movff	efgtoa@g+3,___fleq@ff1+3
  8587  001784  0E00               	movlw	0
  8588  001786  6E08               	movwf	___fleq@ff2^0,c
  8589  001788  0E00               	movlw	0
  8590  00178A  6E09               	movwf	(___fleq@ff2+1)^0,c
  8591  00178C  0E00               	movlw	0
  8592  00178E  6E0A               	movwf	(___fleq@ff2+2)^0,c
  8593  001790  0E00               	movlw	0
  8594  001792  6E0B               	movwf	(___fleq@ff2+3)^0,c
  8595  001794  EC87  F029         	call	___fleq	;wreg free
  8596  001798  B0D8               	btfsc	status,0,c
  8597  00179A  EFD1  F00B         	goto	u10471
  8598  00179E  EFD3  F00B         	goto	u10470
  8599  0017A2                     u10471:
  8600  0017A2  EF56  F00C         	goto	l8158
  8601  0017A6                     u10470:
  8602  0017A6  EFF2  F00B         	goto	l8150
  8603  0017AA                     l8146:
  8604                           
  8605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  8606  0017AA  C094  F012         	movff	efgtoa@u,___flmul@b
  8607  0017AE  C095  F013         	movff	efgtoa@u+1,___flmul@b+1
  8608  0017B2  C096  F014         	movff	efgtoa@u+2,___flmul@b+2
  8609  0017B6  C097  F015         	movff	efgtoa@u+3,___flmul@b+3
  8610  0017BA  0E00               	movlw	0
  8611  0017BC  6E16               	movwf	___flmul@a^0,c
  8612  0017BE  0E00               	movlw	0
  8613  0017C0  6E17               	movwf	(___flmul@a+1)^0,c
  8614  0017C2  0E20               	movlw	32
  8615  0017C4  6E18               	movwf	(___flmul@a+2)^0,c
  8616  0017C6  0E41               	movlw	65
  8617  0017C8  6E19               	movwf	(___flmul@a+3)^0,c
  8618  0017CA  ECCB  F012         	call	___flmul	;wreg free
  8619  0017CE  C012  F094         	movff	?___flmul,efgtoa@u
  8620  0017D2  C013  F095         	movff	?___flmul+1,efgtoa@u+1
  8621  0017D6  C014  F096         	movff	?___flmul+2,efgtoa@u+2
  8622  0017DA  C015  F097         	movff	?___flmul+3,efgtoa@u+3
  8623  0017DE                     
  8624                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  8625  0017DE  0100               	movlb	0	; () banked
  8626  0017E0  4B90               	infsnz	efgtoa@e& (0+255),f,b
  8627  0017E2  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  8628  0017E4                     l8150:
  8629                           
  8630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  8631  0017E4  C08C  F02B         	movff	efgtoa@g,___flge@ff1
  8632  0017E8  C08D  F02C         	movff	efgtoa@g+1,___flge@ff1+1
  8633  0017EC  C08E  F02D         	movff	efgtoa@g+2,___flge@ff1+2
  8634  0017F0  C08F  F02E         	movff	efgtoa@g+3,___flge@ff1+3
  8635  0017F4  0E00               	movlw	0
  8636  0017F6  6E16               	movwf	___flmul@a^0,c
  8637  0017F8  0E00               	movlw	0
  8638  0017FA  6E17               	movwf	(___flmul@a+1)^0,c
  8639  0017FC  0E20               	movlw	32
  8640  0017FE  6E18               	movwf	(___flmul@a+2)^0,c
  8641  001800  0E41               	movlw	65
  8642  001802  6E19               	movwf	(___flmul@a+3)^0,c
  8643  001804  C094  F012         	movff	efgtoa@u,___flmul@b
  8644  001808  C095  F013         	movff	efgtoa@u+1,___flmul@b+1
  8645  00180C  C096  F014         	movff	efgtoa@u+2,___flmul@b+2
  8646  001810  C097  F015         	movff	efgtoa@u+3,___flmul@b+3
  8647  001814  ECCB  F012         	call	___flmul	;wreg free
  8648  001818  C012  F02F         	movff	?___flmul,___flge@ff2
  8649  00181C  C013  F030         	movff	?___flmul+1,___flge@ff2+1
  8650  001820  C014  F031         	movff	?___flmul+2,___flge@ff2+2
  8651  001824  C015  F032         	movff	?___flmul+3,___flge@ff2+3
  8652  001828  ECCC  F025         	call	___flge	;wreg free
  8653  00182C  B0D8               	btfsc	status,0,c
  8654  00182E  EF1B  F00C         	goto	u10481
  8655  001832  EF1D  F00C         	goto	u10480
  8656  001836                     u10481:
  8657  001836  EFD5  F00B         	goto	l8146
  8658  00183A                     u10480:
  8659  00183A  EF3D  F00C         	goto	l8156
  8660  00183E                     l8152:
  8661                           
  8662                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  8663  00183E  C094  F004         	movff	efgtoa@u,___fldiv@b
  8664  001842  C095  F005         	movff	efgtoa@u+1,___fldiv@b+1
  8665  001846  C096  F006         	movff	efgtoa@u+2,___fldiv@b+2
  8666  00184A  C097  F007         	movff	efgtoa@u+3,___fldiv@b+3
  8667  00184E  0E00               	movlw	0
  8668  001850  6E08               	movwf	___fldiv@a^0,c
  8669  001852  0E00               	movlw	0
  8670  001854  6E09               	movwf	(___fldiv@a+1)^0,c
  8671  001856  0E20               	movlw	32
  8672  001858  6E0A               	movwf	(___fldiv@a+2)^0,c
  8673  00185A  0E41               	movlw	65
  8674  00185C  6E0B               	movwf	(___fldiv@a+3)^0,c
  8675  00185E  ECE0  F014         	call	___fldiv	;wreg free
  8676  001862  C004  F094         	movff	?___fldiv,efgtoa@u
  8677  001866  C005  F095         	movff	?___fldiv+1,efgtoa@u+1
  8678  00186A  C006  F096         	movff	?___fldiv+2,efgtoa@u+2
  8679  00186E  C007  F097         	movff	?___fldiv+3,efgtoa@u+3
  8680  001872                     
  8681                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  8682  001872  0100               	movlb	0	; () banked
  8683  001874  0790               	decf	efgtoa@e& (0+255),f,b
  8684  001876  A0D8               	btfss	status,0,c
  8685  001878  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  8686  00187A                     l8156:
  8687                           
  8688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  8689  00187A  C08C  F02B         	movff	efgtoa@g,___flge@ff1
  8690  00187E  C08D  F02C         	movff	efgtoa@g+1,___flge@ff1+1
  8691  001882  C08E  F02D         	movff	efgtoa@g+2,___flge@ff1+2
  8692  001886  C08F  F02E         	movff	efgtoa@g+3,___flge@ff1+3
  8693  00188A  C094  F02F         	movff	efgtoa@u,___flge@ff2
  8694  00188E  C095  F030         	movff	efgtoa@u+1,___flge@ff2+1
  8695  001892  C096  F031         	movff	efgtoa@u+2,___flge@ff2+2
  8696  001896  C097  F032         	movff	efgtoa@u+3,___flge@ff2+3
  8697  00189A  ECCC  F025         	call	___flge	;wreg free
  8698  00189E  A0D8               	btfss	status,0,c
  8699  0018A0  EF54  F00C         	goto	u10491
  8700  0018A4  EF56  F00C         	goto	u10490
  8701  0018A8                     u10491:
  8702  0018A8  EF1F  F00C         	goto	l8152
  8703  0018AC                     u10490:
  8704  0018AC                     l8158:
  8705                           
  8706                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  8707  0018AC  C03D  F00A         	movff	efgtoa@c,tolower@c
  8708  0018B0  6A0B               	clrf	(tolower@c+1)^0,c
  8709  0018B2  EC4F  F02A         	call	_tolower	;wreg free
  8710  0018B6  500A               	movf	?_tolower^0,w,c
  8711  0018B8  0100               	movlb	0	; () banked
  8712  0018BA  6F81               	movwf	efgtoa@mode& (0+255),b
  8713  0018BC                     
  8714                           ; BSR set to: 0
  8715                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  8716  0018BC  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  8717  0018C0                     
  8718                           ; BSR set to: 0
  8719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  8720  0018C0  0E67               	movlw	103
  8721  0018C2  1981               	xorwf	efgtoa@mode& (0+255),w,b
  8722  0018C4  A4D8               	btfss	status,2,c
  8723  0018C6  EF67  F00C         	goto	u10501
  8724  0018CA  EF69  F00C         	goto	u10500
  8725  0018CE                     u10501:
  8726  0018CE  EF8F  F00C         	goto	l8172
  8727  0018D2                     u10500:
  8728  0018D2                     
  8729                           ; BSR set to: 0
  8730                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  8731  0018D2  5058               	movf	_prec^0,w,c
  8732  0018D4  1059               	iorwf	(_prec+1)^0,w,c
  8733  0018D6  A4D8               	btfss	status,2,c
  8734  0018D8  EF70  F00C         	goto	u10511
  8735  0018DC  EF72  F00C         	goto	u10510
  8736  0018E0                     u10511:
  8737  0018E0  EF76  F00C         	goto	l8168
  8738  0018E4                     u10510:
  8739  0018E4                     
  8740                           ; BSR set to: 0
  8741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  8742  0018E4  0E00               	movlw	0
  8743  0018E6  6E59               	movwf	(_prec+1)^0,c
  8744  0018E8  0E01               	movlw	1
  8745  0018EA  6E58               	movwf	_prec^0,c
  8746  0018EC                     l8168:
  8747                           
  8748                           ; BSR set to: 0
  8749                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  8750  0018EC  BE59               	btfsc	(_prec+1)^0,7,c
  8751  0018EE  EF83  F00C         	goto	u10520
  8752  0018F2  5059               	movf	(_prec+1)^0,w,c
  8753  0018F4  E106               	bnz	u10521
  8754  0018F6  0458               	decf	_prec^0,w,c
  8755  0018F8  B0D8               	btfsc	status,0,c
  8756  0018FA  EF81  F00C         	goto	u10521
  8757  0018FE  EF83  F00C         	goto	u10520
  8758  001902                     u10521:
  8759  001902  EF89  F00C         	goto	l553
  8760  001906                     u10520:
  8761  001906                     l8170:
  8762                           
  8763                           ; BSR set to: 0
  8764  001906  0E00               	movlw	0
  8765  001908  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  8766  00190A  0E06               	movlw	6
  8767  00190C  6F7C               	movwf	efgtoa@p& (0+255),b
  8768  00190E  EF98  F00C         	goto	l8178
  8769  001912                     l553:
  8770                           
  8771                           ; BSR set to: 0
  8772  001912  C058  F07C         	movff	_prec,efgtoa@p
  8773  001916  C059  F07D         	movff	_prec+1,efgtoa@p+1
  8774  00191A  EF98  F00C         	goto	l8178
  8775  00191E                     l8172:
  8776                           
  8777                           ; BSR set to: 0
  8778                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  8779  00191E  BE59               	btfsc	(_prec+1)^0,7,c
  8780  001920  EF94  F00C         	goto	u10531
  8781  001924  EF96  F00C         	goto	u10530
  8782  001928                     u10531:
  8783  001928  EF83  F00C         	goto	l8170
  8784  00192C                     u10530:
  8785  00192C  EF89  F00C         	goto	l553
  8786  001930                     l8178:
  8787                           
  8788                           ; BSR set to: 0
  8789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  8790  001930  0E67               	movlw	103
  8791  001932  1981               	xorwf	efgtoa@mode& (0+255),w,b
  8792  001934  A4D8               	btfss	status,2,c
  8793  001936  EF9F  F00C         	goto	u10541
  8794  00193A  EFA1  F00C         	goto	u10540
  8795  00193E                     u10541:
  8796  00193E  EFD0  F00C         	goto	l8188
  8797  001942                     u10540:
  8798  001942                     
  8799                           ; BSR set to: 0
  8800                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  8801  001942  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  8802  001944  EFAF  F00C         	goto	u10550
  8803  001948  0EFC               	movlw	252
  8804  00194A  5D90               	subwf	efgtoa@e& (0+255),w,b
  8805  00194C  0EFF               	movlw	255
  8806  00194E  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  8807  001950  A0D8               	btfss	status,0,c
  8808  001952  EFAD  F00C         	goto	u10551
  8809  001956  EFAF  F00C         	goto	u10550
  8810  00195A                     u10551:
  8811  00195A  EFCE  F00C         	goto	l8186
  8812  00195E                     u10550:
  8813  00195E                     
  8814                           ; BSR set to: 0
  8815  00195E  0EFF               	movlw	255
  8816  001960  6E3E               	movwf	??_efgtoa^0,c
  8817  001962  0EFF               	movlw	255
  8818  001964  6E3F               	movwf	(??_efgtoa+1)^0,c
  8819  001966  C07C  F040         	movff	efgtoa@p,??_efgtoa+2
  8820  00196A  C07D  F041         	movff	efgtoa@p+1,??_efgtoa+3
  8821  00196E  503E               	movf	??_efgtoa^0,w,c
  8822  001970  2640               	addwf	(??_efgtoa+2)^0,f,c
  8823  001972  503F               	movf	(??_efgtoa+1)^0,w,c
  8824  001974  2241               	addwfc	(??_efgtoa+3)^0,f,c
  8825  001976  5190               	movf	efgtoa@e& (0+255),w,b
  8826  001978  5C40               	subwf	(??_efgtoa+2)^0,w,c
  8827  00197A  5041               	movf	(??_efgtoa+3)^0,w,c
  8828  00197C  0A80               	xorlw	128
  8829  00197E  6E42               	movwf	(??_efgtoa+4)^0,c
  8830  001980  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  8831  001982  0A80               	xorlw	128
  8832  001984  5842               	subwfb	(??_efgtoa+4)^0,w,c
  8833  001986  A0D8               	btfss	status,0,c
  8834  001988  EFC8  F00C         	goto	u10561
  8835  00198C  EFCA  F00C         	goto	u10560
  8836  001990                     u10561:
  8837  001990  EFCE  F00C         	goto	l8186
  8838  001994                     u10560:
  8839  001994                     
  8840                           ; BSR set to: 0
  8841                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  8842  001994  0E66               	movlw	102
  8843  001996  6F7E               	movwf	efgtoa@nmode& (0+255),b
  8844                           
  8845                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  8846  001998  EFD0  F00C         	goto	l8188
  8847  00199C                     l8186:
  8848                           
  8849                           ; BSR set to: 0
  8850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  8851  00199C  0E65               	movlw	101
  8852  00199E  6F7E               	movwf	efgtoa@nmode& (0+255),b
  8853  0019A0                     l8188:
  8854                           
  8855                           ; BSR set to: 0
  8856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  8857  0019A0  C07C  F074         	movff	efgtoa@p,efgtoa@m
  8858  0019A4  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  8859  0019A8                     
  8860                           ; BSR set to: 0
  8861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  8862  0019A8  0E67               	movlw	103
  8863  0019AA  1981               	xorwf	efgtoa@mode& (0+255),w,b
  8864  0019AC  A4D8               	btfss	status,2,c
  8865  0019AE  EFDB  F00C         	goto	u10571
  8866  0019B2  EFDD  F00C         	goto	u10570
  8867  0019B6                     u10571:
  8868  0019B6  EFED  F00C         	goto	l8196
  8869  0019BA                     u10570:
  8870  0019BA                     
  8871                           ; BSR set to: 0
  8872  0019BA  0E66               	movlw	102
  8873  0019BC  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  8874  0019BE  A4D8               	btfss	status,2,c
  8875  0019C0  EFE4  F00C         	goto	u10581
  8876  0019C4  EFE6  F00C         	goto	u10580
  8877  0019C8                     u10581:
  8878  0019C8  EFEF  F00C         	goto	l8198
  8879  0019CC                     u10580:
  8880  0019CC                     
  8881                           ; BSR set to: 0
  8882  0019CC  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8883  0019CE  EFED  F00C         	goto	u10590
  8884  0019D2  EFEB  F00C         	goto	u10591
  8885  0019D6                     u10591:
  8886  0019D6  EFEF  F00C         	goto	l8198
  8887  0019DA                     u10590:
  8888  0019DA                     l8196:
  8889                           
  8890                           ; BSR set to: 0
  8891                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  8892  0019DA  4B74               	infsnz	efgtoa@m& (0+255),f,b
  8893  0019DC  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  8894  0019DE                     l8198:
  8895                           
  8896                           ; BSR set to: 0
  8897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  8898  0019DE  0E66               	movlw	102
  8899  0019E0  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  8900  0019E2  A4D8               	btfss	status,2,c
  8901  0019E4  EFF6  F00C         	goto	u10601
  8902  0019E8  EFF8  F00C         	goto	u10600
  8903  0019EC                     u10601:
  8904  0019EC  EF18  F00D         	goto	l8208
  8905  0019F0                     u10600:
  8906  0019F0                     
  8907                           ; BSR set to: 0
  8908                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  8909  0019F0  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8910  0019F2  EFFF  F00C         	goto	u10610
  8911  0019F6  EFFD  F00C         	goto	u10611
  8912  0019FA                     u10611:
  8913  0019FA  EF0B  F00D         	goto	l8204
  8914  0019FE                     u10610:
  8915  0019FE                     
  8916                           ; BSR set to: 0
  8917                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  8918  0019FE  0E00               	movlw	0
  8919  001A00  6F94               	movwf	efgtoa@u& (0+255),b
  8920  001A02  0E00               	movlw	0
  8921  001A04  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  8922  001A06  0E80               	movlw	128
  8923  001A08  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  8924  001A0A  0E3F               	movlw	63
  8925  001A0C  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  8926                           
  8927                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  8928  001A0E  0E00               	movlw	0
  8929  001A10  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  8930  001A12  0E00               	movlw	0
  8931  001A14  6F90               	movwf	efgtoa@e& (0+255),b
  8932  001A16                     l8204:
  8933                           
  8934                           ; BSR set to: 0
  8935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  8936  001A16  0E67               	movlw	103
  8937  001A18  1981               	xorwf	efgtoa@mode& (0+255),w,b
  8938  001A1A  B4D8               	btfsc	status,2,c
  8939  001A1C  EF12  F00D         	goto	u10621
  8940  001A20  EF14  F00D         	goto	u10620
  8941  001A24                     u10621:
  8942  001A24  EF18  F00D         	goto	l8208
  8943  001A28                     u10620:
  8944  001A28                     
  8945                           ; BSR set to: 0
  8946                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  8947  001A28  5190               	movf	efgtoa@e& (0+255),w,b
  8948  001A2A  2774               	addwf	efgtoa@m& (0+255),f,b
  8949  001A2C  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  8950  001A2E  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  8951  001A30                     l8208:
  8952                           
  8953                           ; BSR set to: 0
  8954                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  8955  001A30  0E00               	movlw	0
  8956  001A32  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  8957  001A34  0E00               	movlw	0
  8958  001A36  6F8A               	movwf	efgtoa@i& (0+255),b
  8959  001A38                     
  8960                           ; BSR set to: 0
  8961                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  8962  001A38  C08C  F082         	movff	efgtoa@g,efgtoa@h
  8963  001A3C  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  8964  001A40  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  8965  001A44  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  8966  001A48                     
  8967                           ; BSR set to: 0
  8968                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  8969  001A48  C094  F060         	movff	efgtoa@u,efgtoa@ou
  8970  001A4C  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  8971  001A50  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  8972  001A54  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  8973                           
  8974                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  8975  001A58  EFA9  F00D         	goto	l8222
  8976  001A5C                     l8214:
  8977                           
  8978                           ; BSR set to: 0
  8979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  8980  001A5C  C082  F004         	movff	efgtoa@h,___fldiv@b
  8981  001A60  C083  F005         	movff	efgtoa@h+1,___fldiv@b+1
  8982  001A64  C084  F006         	movff	efgtoa@h+2,___fldiv@b+2
  8983  001A68  C085  F007         	movff	efgtoa@h+3,___fldiv@b+3
  8984  001A6C  C094  F008         	movff	efgtoa@u,___fldiv@a
  8985  001A70  C095  F009         	movff	efgtoa@u+1,___fldiv@a+1
  8986  001A74  C096  F00A         	movff	efgtoa@u+2,___fldiv@a+2
  8987  001A78  C097  F00B         	movff	efgtoa@u+3,___fldiv@a+3
  8988  001A7C  ECE0  F014         	call	___fldiv	;wreg free
  8989  001A80  C004  F01D         	movff	?___fldiv,floorf@x
  8990  001A84  C005  F01E         	movff	?___fldiv+1,floorf@x+1
  8991  001A88  C006  F01F         	movff	?___fldiv+2,floorf@x+2
  8992  001A8C  C007  F020         	movff	?___fldiv+3,floorf@x+3
  8993  001A90  EC51  F01B         	call	_floorf	;wreg free
  8994  001A94  C01D  F086         	movff	?_floorf,efgtoa@l
  8995  001A98  C01E  F087         	movff	?_floorf+1,efgtoa@l+1
  8996  001A9C  C01F  F088         	movff	?_floorf+2,efgtoa@l+2
  8997  001AA0  C020  F089         	movff	?_floorf+3,efgtoa@l+3
  8998                           
  8999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  9000  001AA4  C086  F004         	movff	efgtoa@l,___fltol@f1
  9001  001AA8  C087  F005         	movff	efgtoa@l+1,___fltol@f1+1
  9002  001AAC  C088  F006         	movff	efgtoa@l+2,___fltol@f1+2
  9003  001AB0  C089  F007         	movff	efgtoa@l+3,___fltol@f1+3
  9004  001AB4  EC49  F025         	call	___fltol	;wreg free
  9005  001AB8  C004  F078         	movff	?___fltol,efgtoa@d
  9006  001ABC  C005  F079         	movff	?___fltol+1,efgtoa@d+1
  9007  001AC0                     
  9008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  9009  001AC0  C082  F02B         	movff	efgtoa@h,___flsub@b
  9010  001AC4  C083  F02C         	movff	efgtoa@h+1,___flsub@b+1
  9011  001AC8  C084  F02D         	movff	efgtoa@h+2,___flsub@b+2
  9012  001ACC  C085  F02E         	movff	efgtoa@h+3,___flsub@b+3
  9013  001AD0  C094  F016         	movff	efgtoa@u,___flmul@a
  9014  001AD4  C095  F017         	movff	efgtoa@u+1,___flmul@a+1
  9015  001AD8  C096  F018         	movff	efgtoa@u+2,___flmul@a+2
  9016  001ADC  C097  F019         	movff	efgtoa@u+3,___flmul@a+3
  9017  001AE0  C086  F012         	movff	efgtoa@l,___flmul@b
  9018  001AE4  C087  F013         	movff	efgtoa@l+1,___flmul@b+1
  9019  001AE8  C088  F014         	movff	efgtoa@l+2,___flmul@b+2
  9020  001AEC  C089  F015         	movff	efgtoa@l+3,___flmul@b+3
  9021  001AF0  ECCB  F012         	call	___flmul	;wreg free
  9022  001AF4  C012  F02F         	movff	?___flmul,___flsub@a
  9023  001AF8  C013  F030         	movff	?___flmul+1,___flsub@a+1
  9024  001AFC  C014  F031         	movff	?___flmul+2,___flsub@a+2
  9025  001B00  C015  F032         	movff	?___flmul+3,___flsub@a+3
  9026  001B04  ECCE  F02B         	call	___flsub	;wreg free
  9027  001B08  C02B  F082         	movff	?___flsub,efgtoa@h
  9028  001B0C  C02C  F083         	movff	?___flsub+1,efgtoa@h+1
  9029  001B10  C02D  F084         	movff	?___flsub+2,efgtoa@h+2
  9030  001B14  C02E  F085         	movff	?___flsub+3,efgtoa@h+3
  9031  001B18                     
  9032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  9033  001B18  C094  F004         	movff	efgtoa@u,___fldiv@b
  9034  001B1C  C095  F005         	movff	efgtoa@u+1,___fldiv@b+1
  9035  001B20  C096  F006         	movff	efgtoa@u+2,___fldiv@b+2
  9036  001B24  C097  F007         	movff	efgtoa@u+3,___fldiv@b+3
  9037  001B28  0E00               	movlw	0
  9038  001B2A  6E08               	movwf	___fldiv@a^0,c
  9039  001B2C  0E00               	movlw	0
  9040  001B2E  6E09               	movwf	(___fldiv@a+1)^0,c
  9041  001B30  0E20               	movlw	32
  9042  001B32  6E0A               	movwf	(___fldiv@a+2)^0,c
  9043  001B34  0E41               	movlw	65
  9044  001B36  6E0B               	movwf	(___fldiv@a+3)^0,c
  9045  001B38  ECE0  F014         	call	___fldiv	;wreg free
  9046  001B3C  C004  F094         	movff	?___fldiv,efgtoa@u
  9047  001B40  C005  F095         	movff	?___fldiv+1,efgtoa@u+1
  9048  001B44  C006  F096         	movff	?___fldiv+2,efgtoa@u+2
  9049  001B48  C007  F097         	movff	?___fldiv+3,efgtoa@u+3
  9050  001B4C                     
  9051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  9052  001B4C  0100               	movlb	0	; () banked
  9053  001B4E  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  9054  001B50  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  9055  001B52                     l8222:
  9056                           
  9057                           ; BSR set to: 0
  9058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9059  001B52  5174               	movf	efgtoa@m& (0+255),w,b
  9060  001B54  5D8A               	subwf	efgtoa@i& (0+255),w,b
  9061  001B56  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  9062  001B58  0A80               	xorlw	128
  9063  001B5A  6E3E               	movwf	??_efgtoa^0,c
  9064  001B5C  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  9065  001B5E  0A80               	xorlw	128
  9066  001B60  583E               	subwfb	??_efgtoa^0,w,c
  9067  001B62  A0D8               	btfss	status,0,c
  9068  001B64  EFB6  F00D         	goto	u10631
  9069  001B68  EFB8  F00D         	goto	u10630
  9070  001B6C                     u10631:
  9071  001B6C  EF2E  F00D         	goto	l8214
  9072  001B70                     u10630:
  9073  001B70                     
  9074                           ; BSR set to: 0
  9075                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  9076  001B70  C094  F012         	movff	efgtoa@u,___flmul@b
  9077  001B74  C095  F013         	movff	efgtoa@u+1,___flmul@b+1
  9078  001B78  C096  F014         	movff	efgtoa@u+2,___flmul@b+2
  9079  001B7C  C097  F015         	movff	efgtoa@u+3,___flmul@b+3
  9080  001B80  0E00               	movlw	0
  9081  001B82  6E16               	movwf	___flmul@a^0,c
  9082  001B84  0E00               	movlw	0
  9083  001B86  6E17               	movwf	(___flmul@a+1)^0,c
  9084  001B88  0EA0               	movlw	160
  9085  001B8A  6E18               	movwf	(___flmul@a+2)^0,c
  9086  001B8C  0E40               	movlw	64
  9087  001B8E  6E19               	movwf	(___flmul@a+3)^0,c
  9088  001B90  ECCB  F012         	call	___flmul	;wreg free
  9089  001B94  C012  F086         	movff	?___flmul,efgtoa@l
  9090  001B98  C013  F087         	movff	?___flmul+1,efgtoa@l+1
  9091  001B9C  C014  F088         	movff	?___flmul+2,efgtoa@l+2
  9092  001BA0  C015  F089         	movff	?___flmul+3,efgtoa@l+3
  9093  001BA4                     
  9094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  9095  001BA4  C082  F02B         	movff	efgtoa@h,___flge@ff1
  9096  001BA8  C083  F02C         	movff	efgtoa@h+1,___flge@ff1+1
  9097  001BAC  C084  F02D         	movff	efgtoa@h+2,___flge@ff1+2
  9098  001BB0  C085  F02E         	movff	efgtoa@h+3,___flge@ff1+3
  9099  001BB4  C086  F02F         	movff	efgtoa@l,___flge@ff2
  9100  001BB8  C087  F030         	movff	efgtoa@l+1,___flge@ff2+1
  9101  001BBC  C088  F031         	movff	efgtoa@l+2,___flge@ff2+2
  9102  001BC0  C089  F032         	movff	efgtoa@l+3,___flge@ff2+3
  9103  001BC4  ECCC  F025         	call	___flge	;wreg free
  9104  001BC8  B0D8               	btfsc	status,0,c
  9105  001BCA  EFE9  F00D         	goto	u10641
  9106  001BCE  EFEB  F00D         	goto	u10640
  9107  001BD2                     u10641:
  9108  001BD2  EFF6  F00D         	goto	l8230
  9109  001BD6                     u10640:
  9110  001BD6                     
  9111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  9112  001BD6  0E00               	movlw	0
  9113  001BD8  0100               	movlb	0	; () banked
  9114  001BDA  6F86               	movwf	efgtoa@l& (0+255),b
  9115  001BDC  0E00               	movlw	0
  9116  001BDE  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  9117  001BE0  0E00               	movlw	0
  9118  001BE2  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  9119  001BE4  0E00               	movlw	0
  9120  001BE6  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  9121                           
  9122                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  9123  001BE8  EF1F  F00E         	goto	l8236
  9124  001BEC                     l8230:
  9125                           
  9126                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  9127  001BEC  C082  F004         	movff	efgtoa@h,___fleq@ff1
  9128  001BF0  C083  F005         	movff	efgtoa@h+1,___fleq@ff1+1
  9129  001BF4  C084  F006         	movff	efgtoa@h+2,___fleq@ff1+2
  9130  001BF8  C085  F007         	movff	efgtoa@h+3,___fleq@ff1+3
  9131  001BFC  C086  F008         	movff	efgtoa@l,___fleq@ff2
  9132  001C00  C087  F009         	movff	efgtoa@l+1,___fleq@ff2+1
  9133  001C04  C088  F00A         	movff	efgtoa@l+2,___fleq@ff2+2
  9134  001C08  C089  F00B         	movff	efgtoa@l+3,___fleq@ff2+3
  9135  001C0C  EC87  F029         	call	___fleq	;wreg free
  9136  001C10  A0D8               	btfss	status,0,c
  9137  001C12  EF0D  F00E         	goto	u10651
  9138  001C16  EF0F  F00E         	goto	u10650
  9139  001C1A                     u10651:
  9140  001C1A  EF1F  F00E         	goto	l8236
  9141  001C1E                     u10650:
  9142  001C1E  0100               	movlb	0	; () banked
  9143  001C20  B178               	btfsc	efgtoa@d& (0+255),0,b
  9144  001C22  EF15  F00E         	goto	u10661
  9145  001C26  EF17  F00E         	goto	u10660
  9146  001C2A                     u10661:
  9147  001C2A  EF1F  F00E         	goto	l8236
  9148  001C2E                     u10660:
  9149  001C2E                     
  9150                           ; BSR set to: 0
  9151                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  9152  001C2E  0E00               	movlw	0
  9153  001C30  6F86               	movwf	efgtoa@l& (0+255),b
  9154  001C32  0E00               	movlw	0
  9155  001C34  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  9156  001C36  0E00               	movlw	0
  9157  001C38  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  9158  001C3A  0E00               	movlw	0
  9159  001C3C  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  9160  001C3E                     l8236:
  9161                           
  9162                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  9163  001C3E  C08C  F004         	movff	efgtoa@g,___fladd@b
  9164  001C42  C08D  F005         	movff	efgtoa@g+1,___fladd@b+1
  9165  001C46  C08E  F006         	movff	efgtoa@g+2,___fladd@b+2
  9166  001C4A  C08F  F007         	movff	efgtoa@g+3,___fladd@b+3
  9167  001C4E  C086  F008         	movff	efgtoa@l,___fladd@a
  9168  001C52  C087  F009         	movff	efgtoa@l+1,___fladd@a+1
  9169  001C56  C088  F00A         	movff	efgtoa@l+2,___fladd@a+2
  9170  001C5A  C089  F00B         	movff	efgtoa@l+3,___fladd@a+3
  9171  001C5E  EC6B  F010         	call	___fladd	;wreg free
  9172  001C62  C004  F082         	movff	?___fladd,efgtoa@h
  9173  001C66  C005  F083         	movff	?___fladd+1,efgtoa@h+1
  9174  001C6A  C006  F084         	movff	?___fladd+2,efgtoa@h+2
  9175  001C6E  C007  F085         	movff	?___fladd+3,efgtoa@h+3
  9176  001C72                     
  9177                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  9178  001C72  C060  F094         	movff	efgtoa@ou,efgtoa@u
  9179  001C76  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  9180  001C7A  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  9181  001C7E  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  9182  001C82                     
  9183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  9184  001C82  0E65               	movlw	101
  9185  001C84  0100               	movlb	0	; () banked
  9186  001C86  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  9187  001C88  B4D8               	btfsc	status,2,c
  9188  001C8A  EF49  F00E         	goto	u10671
  9189  001C8E  EF4B  F00E         	goto	u10670
  9190  001C92                     u10671:
  9191  001C92  EF51  F00E         	goto	l8244
  9192  001C96                     u10670:
  9193  001C96                     
  9194                           ; BSR set to: 0
  9195  001C96  C090  F076         	movff	efgtoa@e,efgtoa@ne
  9196  001C9A  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  9197  001C9E  EF55  F00E         	goto	l579
  9198  001CA2                     l8244:
  9199                           
  9200                           ; BSR set to: 0
  9201  001CA2  0E00               	movlw	0
  9202  001CA4  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  9203  001CA6  0E00               	movlw	0
  9204  001CA8  6F76               	movwf	efgtoa@ne& (0+255),b
  9205  001CAA                     l579:
  9206                           
  9207                           ; BSR set to: 0
  9208                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  9209  001CAA  0E00               	movlw	0
  9210  001CAC  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  9211  001CAE  0E00               	movlw	0
  9212  001CB0  6F72               	movwf	efgtoa@pp& (0+255),b
  9213                           
  9214                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  9215  001CB2  0E00               	movlw	0
  9216  001CB4  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  9217  001CB6  0E00               	movlw	0
  9218  001CB8  6F70               	movwf	efgtoa@t& (0+255),b
  9219                           
  9220                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  9221  001CBA  0E00               	movlw	0
  9222  001CBC  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  9223  001CBE  0E00               	movlw	0
  9224  001CC0  6F8A               	movwf	efgtoa@i& (0+255),b
  9225                           
  9226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  9227  001CC2  EF50  F00F         	goto	l8294
  9228  001CC6                     l8246:
  9229                           
  9230                           ; BSR set to: 0
  9231                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  9232  001CC6  C082  F004         	movff	efgtoa@h,___fldiv@b
  9233  001CCA  C083  F005         	movff	efgtoa@h+1,___fldiv@b+1
  9234  001CCE  C084  F006         	movff	efgtoa@h+2,___fldiv@b+2
  9235  001CD2  C085  F007         	movff	efgtoa@h+3,___fldiv@b+3
  9236  001CD6  C094  F008         	movff	efgtoa@u,___fldiv@a
  9237  001CDA  C095  F009         	movff	efgtoa@u+1,___fldiv@a+1
  9238  001CDE  C096  F00A         	movff	efgtoa@u+2,___fldiv@a+2
  9239  001CE2  C097  F00B         	movff	efgtoa@u+3,___fldiv@a+3
  9240  001CE6  ECE0  F014         	call	___fldiv	;wreg free
  9241  001CEA  C004  F01D         	movff	?___fldiv,floorf@x
  9242  001CEE  C005  F01E         	movff	?___fldiv+1,floorf@x+1
  9243  001CF2  C006  F01F         	movff	?___fldiv+2,floorf@x+2
  9244  001CF6  C007  F020         	movff	?___fldiv+3,floorf@x+3
  9245  001CFA  EC51  F01B         	call	_floorf	;wreg free
  9246  001CFE  C01D  F086         	movff	?_floorf,efgtoa@l
  9247  001D02  C01E  F087         	movff	?_floorf+1,efgtoa@l+1
  9248  001D06  C01F  F088         	movff	?_floorf+2,efgtoa@l+2
  9249  001D0A  C020  F089         	movff	?_floorf+3,efgtoa@l+3
  9250                           
  9251                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  9252  001D0E  C086  F004         	movff	efgtoa@l,___fltol@f1
  9253  001D12  C087  F005         	movff	efgtoa@l+1,___fltol@f1+1
  9254  001D16  C088  F006         	movff	efgtoa@l+2,___fltol@f1+2
  9255  001D1A  C089  F007         	movff	efgtoa@l+3,___fltol@f1+3
  9256  001D1E  EC49  F025         	call	___fltol	;wreg free
  9257  001D22  C004  F078         	movff	?___fltol,efgtoa@d
  9258  001D26  C005  F079         	movff	?___fltol+1,efgtoa@d+1
  9259  001D2A                     
  9260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  9261  001D2A  0100               	movlb	0	; () banked
  9262  001D2C  B9F2               	btfsc	_flags& (0+255),4,b
  9263  001D2E  EF9B  F00E         	goto	u10681
  9264  001D32  EF9D  F00E         	goto	u10680
  9265  001D36                     u10681:
  9266  001D36  EFBA  F00E         	goto	l8258
  9267  001D3A                     u10680:
  9268  001D3A                     
  9269                           ; BSR set to: 0
  9270  001D3A  5178               	movf	efgtoa@d& (0+255),w,b
  9271  001D3C  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  9272  001D3E  A4D8               	btfss	status,2,c
  9273  001D40  EFA4  F00E         	goto	u10691
  9274  001D44  EFA6  F00E         	goto	u10690
  9275  001D48                     u10691:
  9276  001D48  EFBA  F00E         	goto	l8258
  9277  001D4C                     u10690:
  9278  001D4C                     
  9279                           ; BSR set to: 0
  9280  001D4C  0E67               	movlw	103
  9281  001D4E  1981               	xorwf	efgtoa@mode& (0+255),w,b
  9282  001D50  A4D8               	btfss	status,2,c
  9283  001D52  EFAD  F00E         	goto	u10701
  9284  001D56  EFAF  F00E         	goto	u10700
  9285  001D5A                     u10701:
  9286  001D5A  EFBA  F00E         	goto	l8258
  9287  001D5E                     u10700:
  9288  001D5E                     
  9289                           ; BSR set to: 0
  9290  001D5E  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9291  001D60  EFB6  F00E         	goto	u10710
  9292  001D64  EFB4  F00E         	goto	u10711
  9293  001D68                     u10711:
  9294  001D68  EFBA  F00E         	goto	l8258
  9295  001D6C                     u10710:
  9296  001D6C                     
  9297                           ; BSR set to: 0
  9298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  9299  001D6C  4B70               	infsnz	efgtoa@t& (0+255),f,b
  9300  001D6E  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  9301                           
  9302                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  9303  001D70  EF04  F00F         	goto	l8286
  9304  001D74                     l8258:
  9305                           
  9306                           ; BSR set to: 0
  9307                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  9308  001D74  5172               	movf	efgtoa@pp& (0+255),w,b
  9309  001D76  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9310  001D78  A4D8               	btfss	status,2,c
  9311  001D7A  EFC1  F00E         	goto	u10721
  9312  001D7E  EFC3  F00E         	goto	u10720
  9313  001D82                     u10721:
  9314  001D82  EFED  F00E         	goto	l8278
  9315  001D86                     u10720:
  9316  001D86                     
  9317                           ; BSR set to: 0
  9318  001D86  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9319  001D88  EFCA  F00E         	goto	u10730
  9320  001D8C  EFC8  F00E         	goto	u10731
  9321  001D90                     u10731:
  9322  001D90  EFED  F00E         	goto	l8278
  9323  001D94                     u10730:
  9324  001D94                     
  9325                           ; BSR set to: 0
  9326                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  9327  001D94  0E64               	movlw	low _dbuf
  9328  001D96  2592               	addwf	efgtoa@n& (0+255),w,b
  9329  001D98  6ED9               	movwf	fsr2l,c
  9330  001D9A  0E01               	movlw	high _dbuf
  9331  001D9C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9332  001D9E  6EDA               	movwf	fsr2h,c
  9333  001DA0  0E2E               	movlw	46
  9334  001DA2  6EDF               	movwf	indf2,c
  9335  001DA4                     
  9336                           ; BSR set to: 0
  9337  001DA4  4B92               	infsnz	efgtoa@n& (0+255),f,b
  9338  001DA6  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  9339  001DA8                     
  9340                           ; BSR set to: 0
  9341                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  9342  001DA8  077F               	decf	efgtoa@w& (0+255),f,b
  9343  001DAA  A0D8               	btfss	status,0,c
  9344  001DAC  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  9345  001DAE                     
  9346                           ; BSR set to: 0
  9347                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  9348  001DAE  0E00               	movlw	0
  9349  001DB0  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  9350  001DB2  0E01               	movlw	1
  9351  001DB4  6F72               	movwf	efgtoa@pp& (0+255),b
  9352  001DB6  EFED  F00E         	goto	l8278
  9353  001DBA                     l8270:
  9354                           
  9355                           ; BSR set to: 0
  9356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  9357  001DBA  0E64               	movlw	low _dbuf
  9358  001DBC  2592               	addwf	efgtoa@n& (0+255),w,b
  9359  001DBE  6ED9               	movwf	fsr2l,c
  9360  001DC0  0E01               	movlw	high _dbuf
  9361  001DC2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9362  001DC4  6EDA               	movwf	fsr2h,c
  9363  001DC6  0E30               	movlw	48
  9364  001DC8  6EDF               	movwf	indf2,c
  9365  001DCA                     
  9366                           ; BSR set to: 0
  9367  001DCA  4B92               	infsnz	efgtoa@n& (0+255),f,b
  9368  001DCC  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  9369  001DCE                     
  9370                           ; BSR set to: 0
  9371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  9372  001DCE  077F               	decf	efgtoa@w& (0+255),f,b
  9373  001DD0  A0D8               	btfss	status,0,c
  9374  001DD2  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  9375  001DD4                     
  9376                           ; BSR set to: 0
  9377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  9378  001DD4  0770               	decf	efgtoa@t& (0+255),f,b
  9379  001DD6  A0D8               	btfss	status,0,c
  9380  001DD8  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  9381  001DDA                     l8278:
  9382                           
  9383                           ; BSR set to: 0
  9384                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  9385  001DDA  5170               	movf	efgtoa@t& (0+255),w,b
  9386  001DDC  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  9387  001DDE  A4D8               	btfss	status,2,c
  9388  001DE0  EFF4  F00E         	goto	u10741
  9389  001DE4  EFF6  F00E         	goto	u10740
  9390  001DE8                     u10741:
  9391  001DE8  EFDD  F00E         	goto	l8270
  9392  001DEC                     u10740:
  9393  001DEC                     
  9394                           ; BSR set to: 0
  9395                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  9396  001DEC  0E64               	movlw	low _dbuf
  9397  001DEE  2592               	addwf	efgtoa@n& (0+255),w,b
  9398  001DF0  6ED9               	movwf	fsr2l,c
  9399  001DF2  0E01               	movlw	high _dbuf
  9400  001DF4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9401  001DF6  6EDA               	movwf	fsr2h,c
  9402  001DF8  5178               	movf	efgtoa@d& (0+255),w,b
  9403  001DFA  0F30               	addlw	48
  9404  001DFC  6EDF               	movwf	indf2,c
  9405  001DFE                     
  9406                           ; BSR set to: 0
  9407  001DFE  4B92               	infsnz	efgtoa@n& (0+255),f,b
  9408  001E00  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  9409  001E02                     
  9410                           ; BSR set to: 0
  9411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  9412  001E02  077F               	decf	efgtoa@w& (0+255),f,b
  9413  001E04  A0D8               	btfss	status,0,c
  9414  001E06  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  9415  001E08                     l8286:
  9416                           
  9417                           ; BSR set to: 0
  9418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  9419  001E08  C082  F02B         	movff	efgtoa@h,___flsub@b
  9420  001E0C  C083  F02C         	movff	efgtoa@h+1,___flsub@b+1
  9421  001E10  C084  F02D         	movff	efgtoa@h+2,___flsub@b+2
  9422  001E14  C085  F02E         	movff	efgtoa@h+3,___flsub@b+3
  9423  001E18  C094  F016         	movff	efgtoa@u,___flmul@a
  9424  001E1C  C095  F017         	movff	efgtoa@u+1,___flmul@a+1
  9425  001E20  C096  F018         	movff	efgtoa@u+2,___flmul@a+2
  9426  001E24  C097  F019         	movff	efgtoa@u+3,___flmul@a+3
  9427  001E28  C086  F012         	movff	efgtoa@l,___flmul@b
  9428  001E2C  C087  F013         	movff	efgtoa@l+1,___flmul@b+1
  9429  001E30  C088  F014         	movff	efgtoa@l+2,___flmul@b+2
  9430  001E34  C089  F015         	movff	efgtoa@l+3,___flmul@b+3
  9431  001E38  ECCB  F012         	call	___flmul	;wreg free
  9432  001E3C  C012  F02F         	movff	?___flmul,___flsub@a
  9433  001E40  C013  F030         	movff	?___flmul+1,___flsub@a+1
  9434  001E44  C014  F031         	movff	?___flmul+2,___flsub@a+2
  9435  001E48  C015  F032         	movff	?___flmul+3,___flsub@a+3
  9436  001E4C  ECCE  F02B         	call	___flsub	;wreg free
  9437  001E50  C02B  F082         	movff	?___flsub,efgtoa@h
  9438  001E54  C02C  F083         	movff	?___flsub+1,efgtoa@h+1
  9439  001E58  C02D  F084         	movff	?___flsub+2,efgtoa@h+2
  9440  001E5C  C02E  F085         	movff	?___flsub+3,efgtoa@h+3
  9441  001E60                     
  9442                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  9443  001E60  C094  F004         	movff	efgtoa@u,___fldiv@b
  9444  001E64  C095  F005         	movff	efgtoa@u+1,___fldiv@b+1
  9445  001E68  C096  F006         	movff	efgtoa@u+2,___fldiv@b+2
  9446  001E6C  C097  F007         	movff	efgtoa@u+3,___fldiv@b+3
  9447  001E70  0E00               	movlw	0
  9448  001E72  6E08               	movwf	___fldiv@a^0,c
  9449  001E74  0E00               	movlw	0
  9450  001E76  6E09               	movwf	(___fldiv@a+1)^0,c
  9451  001E78  0E20               	movlw	32
  9452  001E7A  6E0A               	movwf	(___fldiv@a+2)^0,c
  9453  001E7C  0E41               	movlw	65
  9454  001E7E  6E0B               	movwf	(___fldiv@a+3)^0,c
  9455  001E80  ECE0  F014         	call	___fldiv	;wreg free
  9456  001E84  C004  F094         	movff	?___fldiv,efgtoa@u
  9457  001E88  C005  F095         	movff	?___fldiv+1,efgtoa@u+1
  9458  001E8C  C006  F096         	movff	?___fldiv+2,efgtoa@u+2
  9459  001E90  C007  F097         	movff	?___fldiv+3,efgtoa@u+3
  9460  001E94                     
  9461                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  9462  001E94  0100               	movlb	0	; () banked
  9463  001E96  0776               	decf	efgtoa@ne& (0+255),f,b
  9464  001E98  A0D8               	btfss	status,0,c
  9465  001E9A  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  9466  001E9C                     
  9467                           ; BSR set to: 0
  9468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  9469  001E9C  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  9470  001E9E  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  9471  001EA0                     l8294:
  9472                           
  9473                           ; BSR set to: 0
  9474                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  9475  001EA0  5174               	movf	efgtoa@m& (0+255),w,b
  9476  001EA2  5D8A               	subwf	efgtoa@i& (0+255),w,b
  9477  001EA4  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  9478  001EA6  0A80               	xorlw	128
  9479  001EA8  6E3E               	movwf	??_efgtoa^0,c
  9480  001EAA  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  9481  001EAC  0A80               	xorlw	128
  9482  001EAE  583E               	subwfb	??_efgtoa^0,w,c
  9483  001EB0  B0D8               	btfsc	status,0,c
  9484  001EB2  EF5D  F00F         	goto	u10751
  9485  001EB6  EF5F  F00F         	goto	u10750
  9486  001EBA                     u10751:
  9487  001EBA  EF6D  F00F         	goto	l8298
  9488  001EBE                     u10750:
  9489  001EBE                     
  9490                           ; BSR set to: 0
  9491  001EBE  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  9492  001EC0  EF6B  F00F         	goto	u10761
  9493  001EC4  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  9494  001EC6  E109               	bnz	u10760
  9495  001EC8  0E4B               	movlw	75
  9496  001ECA  5D92               	subwf	efgtoa@n& (0+255),w,b
  9497  001ECC  A0D8               	btfss	status,0,c
  9498  001ECE  EF6B  F00F         	goto	u10761
  9499  001ED2  EF6D  F00F         	goto	u10760
  9500  001ED6                     u10761:
  9501  001ED6  EF63  F00E         	goto	l8246
  9502  001EDA                     u10760:
  9503  001EDA                     l8298:
  9504                           
  9505                           ; BSR set to: 0
  9506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  9507  001EDA  5172               	movf	efgtoa@pp& (0+255),w,b
  9508  001EDC  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9509  001EDE  A4D8               	btfss	status,2,c
  9510  001EE0  EF74  F00F         	goto	u10771
  9511  001EE4  EF76  F00F         	goto	u10770
  9512  001EE8                     u10771:
  9513  001EE8  EF87  F00F         	goto	l8306
  9514  001EEC                     u10770:
  9515  001EEC                     
  9516                           ; BSR set to: 0
  9517  001EEC  A9F2               	btfss	_flags& (0+255),4,b
  9518  001EEE  EF7B  F00F         	goto	u10781
  9519  001EF2  EF7D  F00F         	goto	u10780
  9520  001EF6                     u10781:
  9521  001EF6  EF87  F00F         	goto	l8306
  9522  001EFA                     u10780:
  9523  001EFA                     
  9524                           ; BSR set to: 0
  9525                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  9526  001EFA  0E64               	movlw	low _dbuf
  9527  001EFC  2592               	addwf	efgtoa@n& (0+255),w,b
  9528  001EFE  6ED9               	movwf	fsr2l,c
  9529  001F00  0E01               	movlw	high _dbuf
  9530  001F02  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9531  001F04  6EDA               	movwf	fsr2h,c
  9532  001F06  0E2E               	movlw	46
  9533  001F08  6EDF               	movwf	indf2,c
  9534  001F0A                     
  9535                           ; BSR set to: 0
  9536  001F0A  4B92               	infsnz	efgtoa@n& (0+255),f,b
  9537  001F0C  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  9538  001F0E                     l8306:
  9539                           
  9540                           ; BSR set to: 0
  9541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  9542  001F0E  0E64               	movlw	low _dbuf
  9543  001F10  2592               	addwf	efgtoa@n& (0+255),w,b
  9544  001F12  6ED9               	movwf	fsr2l,c
  9545  001F14  0E01               	movlw	high _dbuf
  9546  001F16  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9547  001F18  6EDA               	movwf	fsr2h,c
  9548  001F1A  0E00               	movlw	0
  9549  001F1C  6EDF               	movwf	indf2,c
  9550  001F1E                     
  9551                           ; BSR set to: 0
  9552                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  9553  001F1E  0E65               	movlw	101
  9554  001F20  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  9555  001F22  A4D8               	btfss	status,2,c
  9556  001F24  EF96  F00F         	goto	u10791
  9557  001F28  EF98  F00F         	goto	u10790
  9558  001F2C                     u10791:
  9559  001F2C  EF46  F00B         	goto	l8118
  9560  001F30                     u10790:
  9561  001F30                     
  9562                           ; BSR set to: 0
  9563                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  9564  001F30  0E00               	movlw	0
  9565  001F32  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  9566  001F34  0E4F               	movlw	79
  9567  001F36  6F8A               	movwf	efgtoa@i& (0+255),b
  9568  001F38                     
  9569                           ; BSR set to: 0
  9570                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  9571  001F38  0E64               	movlw	low _dbuf
  9572  001F3A  258A               	addwf	efgtoa@i& (0+255),w,b
  9573  001F3C  6ED9               	movwf	fsr2l,c
  9574  001F3E  0E01               	movlw	high _dbuf
  9575  001F40  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9576  001F42  6EDA               	movwf	fsr2h,c
  9577  001F44  0E00               	movlw	0
  9578  001F46  6EDF               	movwf	indf2,c
  9579  001F48                     
  9580                           ; BSR set to: 0
  9581                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  9582  001F48  0E00               	movlw	0
  9583  001F4A  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  9584  001F4C  0E00               	movlw	0
  9585  001F4E  6F7A               	movwf	efgtoa@sign& (0+255),b
  9586  001F50                     
  9587                           ; BSR set to: 0
  9588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  9589  001F50  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9590  001F52  EFAF  F00F         	goto	u10800
  9591  001F56  EFAD  F00F         	goto	u10801
  9592  001F5A                     u10801:
  9593  001F5A  EFB7  F00F         	goto	l8322
  9594  001F5E                     u10800:
  9595  001F5E                     
  9596                           ; BSR set to: 0
  9597                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  9598  001F5E  0E00               	movlw	0
  9599  001F60  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  9600  001F62  0E01               	movlw	1
  9601  001F64  6F7A               	movwf	efgtoa@sign& (0+255),b
  9602  001F66                     
  9603                           ; BSR set to: 0
  9604                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  9605  001F66  6D90               	negf	efgtoa@e& (0+255),b
  9606  001F68  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  9607  001F6A  B0D8               	btfsc	status,0,c
  9608  001F6C  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  9609  001F6E                     l8322:
  9610                           
  9611                           ; BSR set to: 0
  9612                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  9613  001F6E  0E00               	movlw	0
  9614  001F70  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  9615  001F72  0E02               	movlw	2
  9616  001F74  6F7C               	movwf	efgtoa@p& (0+255),b
  9617                           
  9618                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  9619  001F76  EFE8  F00F         	goto	l8334
  9620  001F7A                     l8324:
  9621                           
  9622                           ; BSR set to: 0
  9623                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  9624  001F7A  078A               	decf	efgtoa@i& (0+255),f,b
  9625  001F7C  A0D8               	btfss	status,0,c
  9626  001F7E  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  9627  001F80                     
  9628                           ; BSR set to: 0
  9629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  9630  001F80  0E64               	movlw	low _dbuf
  9631  001F82  258A               	addwf	efgtoa@i& (0+255),w,b
  9632  001F84  6ED9               	movwf	fsr2l,c
  9633  001F86  0E01               	movlw	high _dbuf
  9634  001F88  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9635  001F8A  6EDA               	movwf	fsr2h,c
  9636  001F8C  C090  F004         	movff	efgtoa@e,___awmod@dividend
  9637  001F90  C091  F005         	movff	efgtoa@e+1,___awmod@dividend+1
  9638  001F94  0E00               	movlw	0
  9639  001F96  6E07               	movwf	(___awmod@divisor+1)^0,c
  9640  001F98  0E0A               	movlw	10
  9641  001F9A  6E06               	movwf	___awmod@divisor^0,c
  9642  001F9C  ECD7  F028         	call	___awmod	;wreg free
  9643  001FA0  5004               	movf	?___awmod^0,w,c
  9644  001FA2  0F30               	addlw	48
  9645  001FA4  6EDF               	movwf	indf2,c
  9646  001FA6                     
  9647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  9648  001FA6  C090  F004         	movff	efgtoa@e,___awdiv@dividend
  9649  001FAA  C091  F005         	movff	efgtoa@e+1,___awdiv@dividend+1
  9650  001FAE  0E00               	movlw	0
  9651  001FB0  6E07               	movwf	(___awdiv@divisor+1)^0,c
  9652  001FB2  0E0A               	movlw	10
  9653  001FB4  6E06               	movwf	___awdiv@divisor^0,c
  9654  001FB6  EC75  F028         	call	___awdiv	;wreg free
  9655  001FBA  C004  F090         	movff	?___awdiv,efgtoa@e
  9656  001FBE  C005  F091         	movff	?___awdiv+1,efgtoa@e+1
  9657  001FC2                     
  9658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  9659  001FC2  0100               	movlb	0	; () banked
  9660  001FC4  077C               	decf	efgtoa@p& (0+255),f,b
  9661  001FC6  A0D8               	btfss	status,0,c
  9662  001FC8  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  9663  001FCA                     
  9664                           ; BSR set to: 0
  9665                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  9666  001FCA  077F               	decf	efgtoa@w& (0+255),f,b
  9667  001FCC  A0D8               	btfss	status,0,c
  9668  001FCE  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  9669  001FD0                     l8334:
  9670                           
  9671                           ; BSR set to: 0
  9672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  9673  001FD0  5190               	movf	efgtoa@e& (0+255),w,b
  9674  001FD2  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  9675  001FD4  A4D8               	btfss	status,2,c
  9676  001FD6  EFEF  F00F         	goto	u10811
  9677  001FDA  EFF1  F00F         	goto	u10810
  9678  001FDE                     u10811:
  9679  001FDE  EFBD  F00F         	goto	l8324
  9680  001FE2                     u10810:
  9681  001FE2                     
  9682                           ; BSR set to: 0
  9683  001FE2  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  9684  001FE4  EFFE  F00F         	goto	u10820
  9685  001FE8  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  9686  001FEA  E106               	bnz	u10821
  9687  001FEC  057C               	decf	efgtoa@p& (0+255),w,b
  9688  001FEE  B0D8               	btfsc	status,0,c
  9689  001FF0  EFFC  F00F         	goto	u10821
  9690  001FF4  EFFE  F00F         	goto	u10820
  9691  001FF8                     u10821:
  9692  001FF8  EFBD  F00F         	goto	l8324
  9693  001FFC                     u10820:
  9694  001FFC                     
  9695                           ; BSR set to: 0
  9696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  9697  001FFC  078A               	decf	efgtoa@i& (0+255),f,b
  9698  001FFE  A0D8               	btfss	status,0,c
  9699  002000  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  9700  002002                     
  9701                           ; BSR set to: 0
  9702                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  9703  002002  517A               	movf	efgtoa@sign& (0+255),w,b
  9704  002004  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  9705  002006  A4D8               	btfss	status,2,c
  9706  002008  EF08  F010         	goto	u10831
  9707  00200C  EF0A  F010         	goto	u10830
  9708  002010                     u10831:
  9709  002010  EF10  F010         	goto	l8344
  9710  002014                     u10830:
  9711  002014                     
  9712                           ; BSR set to: 0
  9713  002014  0E00               	movlw	0
  9714  002016  6F6B               	movwf	(_efgtoa$1322+1)& (0+255),b
  9715  002018  0E2B               	movlw	43
  9716  00201A  6F6A               	movwf	_efgtoa$1322& (0+255),b
  9717  00201C  EF14  F010         	goto	l8346
  9718  002020                     l8344:
  9719                           
  9720                           ; BSR set to: 0
  9721  002020  0E00               	movlw	0
  9722  002022  6F6B               	movwf	(_efgtoa$1322+1)& (0+255),b
  9723  002024  0E2D               	movlw	45
  9724  002026  6F6A               	movwf	_efgtoa$1322& (0+255),b
  9725  002028                     l8346:
  9726                           
  9727                           ; BSR set to: 0
  9728  002028  0E64               	movlw	low _dbuf
  9729  00202A  258A               	addwf	efgtoa@i& (0+255),w,b
  9730  00202C  6ED9               	movwf	fsr2l,c
  9731  00202E  0E01               	movlw	high _dbuf
  9732  002030  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9733  002032  6EDA               	movwf	fsr2h,c
  9734  002034  C06A  FFDF         	movff	_efgtoa$1322,indf2
  9735  002038                     
  9736                           ; BSR set to: 0
  9737                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  9738  002038  077F               	decf	efgtoa@w& (0+255),f,b
  9739  00203A  A0D8               	btfss	status,0,c
  9740  00203C  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  9741  00203E                     
  9742                           ; BSR set to: 0
  9743                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  9744  00203E  078A               	decf	efgtoa@i& (0+255),f,b
  9745  002040  A0D8               	btfss	status,0,c
  9746  002042  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  9747  002044                     
  9748                           ; BSR set to: 0
  9749  002044  0EBF               	movlw	191
  9750  002046  6E3E               	movwf	??_efgtoa^0,c
  9751  002048  0EFF               	movlw	255
  9752  00204A  6E3F               	movwf	(??_efgtoa+1)^0,c
  9753  00204C  503D               	movf	efgtoa@c^0,w,c
  9754  00204E  6E40               	movwf	(??_efgtoa+2)^0,c
  9755  002050  6A41               	clrf	(??_efgtoa+3)^0,c
  9756  002052  503E               	movf	??_efgtoa^0,w,c
  9757  002054  2640               	addwf	(??_efgtoa+2)^0,f,c
  9758  002056  503F               	movf	(??_efgtoa+1)^0,w,c
  9759  002058  2241               	addwfc	(??_efgtoa+3)^0,f,c
  9760  00205A  5041               	movf	(??_efgtoa+3)^0,w,c
  9761  00205C  E10A               	bnz	u10840
  9762  00205E  0E1A               	movlw	26
  9763  002060  5C40               	subwf	(??_efgtoa+2)^0,w,c
  9764  002062  A0D8               	btfss	status,0,c
  9765  002064  EF36  F010         	goto	u10841
  9766  002068  EF39  F010         	goto	u10840
  9767  00206C                     u10841:
  9768  00206C  0E01               	movlw	1
  9769  00206E  EF3A  F010         	goto	u10850
  9770  002072                     u10840:
  9771  002072  0E00               	movlw	0
  9772  002074                     u10850:
  9773  002074  6F6E               	movwf	_efgtoa$1324& (0+255),b
  9774  002076  6B6F               	clrf	(_efgtoa$1324+1)& (0+255),b
  9775  002078                     
  9776                           ; BSR set to: 0
  9777  002078  516E               	movf	_efgtoa$1324& (0+255),w,b
  9778  00207A  116F               	iorwf	(_efgtoa$1324+1)& (0+255),w,b
  9779  00207C  A4D8               	btfss	status,2,c
  9780  00207E  EF43  F010         	goto	u10861
  9781  002082  EF45  F010         	goto	u10860
  9782  002086                     u10861:
  9783  002086  EF4B  F010         	goto	l8360
  9784  00208A                     u10860:
  9785  00208A                     
  9786                           ; BSR set to: 0
  9787  00208A  0E00               	movlw	0
  9788  00208C  6F6D               	movwf	(_efgtoa$1323+1)& (0+255),b
  9789  00208E  0E65               	movlw	101
  9790  002090  6F6C               	movwf	_efgtoa$1323& (0+255),b
  9791  002092  EF4F  F010         	goto	l8362
  9792  002096                     l8360:
  9793                           
  9794                           ; BSR set to: 0
  9795  002096  0E00               	movlw	0
  9796  002098  6F6D               	movwf	(_efgtoa$1323+1)& (0+255),b
  9797  00209A  0E45               	movlw	69
  9798  00209C  6F6C               	movwf	_efgtoa$1323& (0+255),b
  9799  00209E                     l8362:
  9800                           
  9801                           ; BSR set to: 0
  9802  00209E  0E64               	movlw	low _dbuf
  9803  0020A0  258A               	addwf	efgtoa@i& (0+255),w,b
  9804  0020A2  6ED9               	movwf	fsr2l,c
  9805  0020A4  0E01               	movlw	high _dbuf
  9806  0020A6  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9807  0020A8  6EDA               	movwf	fsr2h,c
  9808  0020AA  C06C  FFDF         	movff	_efgtoa$1323,indf2
  9809  0020AE                     
  9810                           ; BSR set to: 0
  9811                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  9812  0020AE  077F               	decf	efgtoa@w& (0+255),f,b
  9813  0020B0  A0D8               	btfss	status,0,c
  9814  0020B2  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  9815  0020B4                     
  9816                           ; BSR set to: 0
  9817                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  9818  0020B4  0E64               	movlw	low _dbuf
  9819  0020B6  2592               	addwf	efgtoa@n& (0+255),w,b
  9820  0020B8  6E04               	movwf	strcpy@dest^0,c
  9821  0020BA  0E01               	movlw	high _dbuf
  9822  0020BC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9823  0020BE  6E05               	movwf	(strcpy@dest+1)^0,c
  9824  0020C0  0E64               	movlw	low _dbuf
  9825  0020C2  258A               	addwf	efgtoa@i& (0+255),w,b
  9826  0020C4  6E06               	movwf	strcpy@src^0,c
  9827  0020C6  0E01               	movlw	high _dbuf
  9828  0020C8  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9829  0020CA  6E07               	movwf	(strcpy@src+1)^0,c
  9830  0020CC  ECAE  F02A         	call	_strcpy	;wreg free
  9831  0020D0  EF46  F00B         	goto	l8118
  9832  0020D4                     l535:
  9833  0020D4  0012               	return		;funcret
  9834  0020D6                     __end_of_efgtoa:
  9835                           	opt callstack 0
  9836                           
  9837 ;; *************** function _tolower *****************
  9838 ;; Defined at:
  9839 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  9840 ;; Parameters:    Size  Location     Type
  9841 ;;  c               2    9[COMRAM] int 
  9842 ;; Auto vars:     Size  Location     Type
  9843 ;;		None
  9844 ;; Return value:  Size  Location     Type
  9845 ;;                  2    9[COMRAM] int 
  9846 ;; Registers used:
  9847 ;;		wreg, status,2, status,0
  9848 ;; Tracked objects:
  9849 ;;		On entry : 0/0
  9850 ;;		On exit  : 0/0
  9851 ;;		Unchanged: 0/0
  9852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9853 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9854 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9855 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9856 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9857 ;;Total ram usage:        8 bytes
  9858 ;; Hardware stack levels used:    1
  9859 ;; Hardware stack levels required when called:    5
  9860 ;; This function calls:
  9861 ;;		_isupper
  9862 ;; This function is called by:
  9863 ;;		_efgtoa
  9864 ;;		_vfpfcnvrt
  9865 ;; This function uses a non-reentrant model
  9866 ;;
  9867                           
  9868                           	psect	text16
  9869  00549E                     __ptext16:
  9870                           	opt callstack 0
  9871  00549E                     _tolower:
  9872                           	opt callstack 21
  9873  00549E  0EBF               	movlw	191
  9874  0054A0  6E0C               	movwf	??_tolower^0,c
  9875  0054A2  0EFF               	movlw	255
  9876  0054A4  6E0D               	movwf	(??_tolower+1)^0,c
  9877  0054A6  C00A  F00E         	movff	tolower@c,??_tolower+2
  9878  0054AA  C00B  F00F         	movff	tolower@c+1,??_tolower+3
  9879  0054AE  500C               	movf	??_tolower^0,w,c
  9880  0054B0  260E               	addwf	(??_tolower+2)^0,f,c
  9881  0054B2  500D               	movf	(??_tolower+1)^0,w,c
  9882  0054B4  220F               	addwfc	(??_tolower+3)^0,f,c
  9883  0054B6  500F               	movf	(??_tolower+3)^0,w,c
  9884  0054B8  E10A               	bnz	u9070
  9885  0054BA  0E1A               	movlw	26
  9886  0054BC  5C0E               	subwf	(??_tolower+2)^0,w,c
  9887  0054BE  A0D8               	btfss	status,0,c
  9888  0054C0  EF64  F02A         	goto	u9071
  9889  0054C4  EF67  F02A         	goto	u9070
  9890  0054C8                     u9071:
  9891  0054C8  0E01               	movlw	1
  9892  0054CA  EF68  F02A         	goto	u9080
  9893  0054CE                     u9070:
  9894  0054CE  0E00               	movlw	0
  9895  0054D0                     u9080:
  9896  0054D0  6E10               	movwf	_tolower$2081^0,c
  9897  0054D2  6A11               	clrf	(_tolower$2081+1)^0,c
  9898  0054D4  5010               	movf	_tolower$2081^0,w,c
  9899  0054D6  1011               	iorwf	(_tolower$2081+1)^0,w,c
  9900  0054D8  B4D8               	btfsc	status,2,c
  9901  0054DA  EF71  F02A         	goto	u9091
  9902  0054DE  EF73  F02A         	goto	u9090
  9903  0054E2                     u9091:
  9904  0054E2  EF7A  F02A         	goto	l1602
  9905  0054E6                     u9090:
  9906  0054E6  0E20               	movlw	32
  9907  0054E8  100A               	iorwf	tolower@c^0,w,c
  9908  0054EA  6E0A               	movwf	?_tolower^0,c
  9909  0054EC  500B               	movf	(tolower@c+1)^0,w,c
  9910  0054EE  6E0B               	movwf	(?_tolower+1)^0,c
  9911  0054F0  EF7E  F02A         	goto	l1607
  9912  0054F4                     l1602:
  9913  0054F4  C00A  F00A         	movff	tolower@c,?_tolower
  9914  0054F8  C00B  F00B         	movff	tolower@c+1,?_tolower+1
  9915  0054FC                     l1607:
  9916  0054FC  0012               	return		;funcret
  9917  0054FE                     __end_of_tolower:
  9918                           	opt callstack 0
  9919                           
  9920 ;; *************** function _isupper *****************
  9921 ;; Defined at:
  9922 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  9923 ;; Parameters:    Size  Location     Type
  9924 ;;  c               2    3[COMRAM] int 
  9925 ;; Auto vars:     Size  Location     Type
  9926 ;;		None
  9927 ;; Return value:  Size  Location     Type
  9928 ;;                  2    3[COMRAM] int 
  9929 ;; Registers used:
  9930 ;;		wreg, status,2, status,0
  9931 ;; Tracked objects:
  9932 ;;		On entry : 0/0
  9933 ;;		On exit  : 0/0
  9934 ;;		Unchanged: 0/0
  9935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9936 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9938 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9939 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9940 ;;Total ram usage:        6 bytes
  9941 ;; Hardware stack levels used:    1
  9942 ;; Hardware stack levels required when called:    4
  9943 ;; This function calls:
  9944 ;;		Nothing
  9945 ;; This function is called by:
  9946 ;;		_efgtoa
  9947 ;;		_xtoa
  9948 ;;		_vfpfcnvrt
  9949 ;;		_tolower
  9950 ;; This function uses a non-reentrant model
  9951 ;;
  9952                           
  9953                           	psect	text17
  9954  00599C                     __ptext17:
  9955                           	opt callstack 0
  9956  00599C                     _isupper:
  9957                           	opt callstack 21
  9958  00599C  0EBF               	movlw	191
  9959  00599E  6E06               	movwf	??_isupper^0,c
  9960  0059A0  0EFF               	movlw	255
  9961  0059A2  6E07               	movwf	(??_isupper+1)^0,c
  9962  0059A4  C004  F008         	movff	isupper@c,??_isupper+2
  9963  0059A8  C005  F009         	movff	isupper@c+1,??_isupper+3
  9964  0059AC  5006               	movf	??_isupper^0,w,c
  9965  0059AE  2608               	addwf	(??_isupper+2)^0,f,c
  9966  0059B0  5007               	movf	(??_isupper+1)^0,w,c
  9967  0059B2  2209               	addwfc	(??_isupper+3)^0,f,c
  9968  0059B4  5009               	movf	(??_isupper+3)^0,w,c
  9969  0059B6  E10A               	bnz	u8500
  9970  0059B8  0E1A               	movlw	26
  9971  0059BA  5C08               	subwf	(??_isupper+2)^0,w,c
  9972  0059BC  A0D8               	btfss	status,0,c
  9973  0059BE  EFE3  F02C         	goto	u8501
  9974  0059C2  EFE6  F02C         	goto	u8500
  9975  0059C6                     u8501:
  9976  0059C6  0E01               	movlw	1
  9977  0059C8  EFE7  F02C         	goto	u8510
  9978  0059CC                     u8500:
  9979  0059CC  0E00               	movlw	0
  9980  0059CE                     u8510:
  9981  0059CE  6E04               	movwf	?_isupper^0,c
  9982  0059D0  6A05               	clrf	(?_isupper+1)^0,c
  9983  0059D2  0012               	return		;funcret
  9984  0059D4                     __end_of_isupper:
  9985                           	opt callstack 0
  9986                           
  9987 ;; *************** function _strcpy *****************
  9988 ;; Defined at:
  9989 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  9990 ;; Parameters:    Size  Location     Type
  9991 ;;  dest            2    3[COMRAM] PTR unsigned char 
  9992 ;;		 -> dbuf(80), 
  9993 ;;  src             2    5[COMRAM] PTR const unsigned char 
  9994 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  9995 ;;		 -> dbuf(80), 
  9996 ;; Auto vars:     Size  Location     Type
  9997 ;;  d               2   11[COMRAM] PTR unsigned char 
  9998 ;;		 -> dbuf(80), 
  9999 ;;  s               2    9[COMRAM] PTR const unsigned char 
 10000 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
 10001 ;;		 -> dbuf(80), 
 10002 ;; Return value:  Size  Location     Type
 10003 ;;                  2    3[COMRAM] PTR unsigned char 
 10004 ;; Registers used:
 10005 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10006 ;; Tracked objects:
 10007 ;;		On entry : 0/0
 10008 ;;		On exit  : 0/0
 10009 ;;		Unchanged: 0/0
 10010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10011 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10012 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10013 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10014 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10015 ;;Total ram usage:       10 bytes
 10016 ;; Hardware stack levels used:    1
 10017 ;; Hardware stack levels required when called:    4
 10018 ;; This function calls:
 10019 ;;		Nothing
 10020 ;; This function is called by:
 10021 ;;		_efgtoa
 10022 ;; This function uses a non-reentrant model
 10023 ;;
 10024                           
 10025                           	psect	text18
 10026  00555C                     __ptext18:
 10027                           	opt callstack 0
 10028  00555C                     _strcpy:
 10029                           	opt callstack 21
 10030  00555C  C006  F00A         	movff	strcpy@src,strcpy@s
 10031  005560  C007  F00B         	movff	strcpy@src+1,strcpy@s+1
 10032  005564  C004  F00C         	movff	strcpy@dest,strcpy@d
 10033  005568  C005  F00D         	movff	strcpy@dest+1,strcpy@d+1
 10034  00556C                     l7360:
 10035  00556C  500A               	movf	strcpy@s^0,w,c
 10036  00556E  6E08               	movwf	??_strcpy^0,c
 10037  005570  500B               	movf	(strcpy@s+1)^0,w,c
 10038  005572  6E09               	movwf	(??_strcpy+1)^0,c
 10039  005574  4A0A               	infsnz	strcpy@s^0,f,c
 10040  005576  2A0B               	incf	(strcpy@s+1)^0,f,c
 10041  005578  C008  FFF6         	movff	??_strcpy,tblptrl
 10042  00557C  C009  FFF7         	movff	??_strcpy+1,tblptrh
 10043  005580  0E00               	movlw	low (__mediumconst shr (0+16))
 10044  005582  6EF8               	movwf	tblptru,c
 10045  005584  C00C  FFD9         	movff	strcpy@d,fsr2l
 10046  005588  C00D  FFDA         	movff	strcpy@d+1,fsr2h
 10047  00558C  4A0C               	infsnz	strcpy@d^0,f,c
 10048  00558E  2A0D               	incf	(strcpy@d+1)^0,f,c
 10049  005590  0E0E               	movlw	(high __ramtop+-1)
 10050  005592  64F7               	cpfsgt	tblptrh,c
 10051  005594  D003               	bra	u9057
 10052  005596  0008               	tblrd		*
 10053  005598  50F5               	movf	tablat,w,c
 10054  00559A  D005               	bra	u9050
 10055  00559C                     u9057:
 10056  00559C  CFF6 FFE1          	movff	tblptrl,fsr1l
 10057  0055A0  CFF7 FFE2          	movff	tblptrh,fsr1h
 10058  0055A4  50E7               	movf	indf1,w,c
 10059  0055A6                     u9050:
 10060  0055A6  6EDF               	movwf	indf2,c
 10061  0055A8  50DF               	movf	indf2,w,c
 10062  0055AA  A4D8               	btfss	status,2,c
 10063  0055AC  EFDA  F02A         	goto	u9061
 10064  0055B0  EFDC  F02A         	goto	u9060
 10065  0055B4                     u9061:
 10066  0055B4  EFB6  F02A         	goto	l7360
 10067  0055B8                     u9060:
 10068  0055B8  0012               	return		;funcret
 10069  0055BA                     __end_of_strcpy:
 10070                           	opt callstack 0
 10071                           
 10072 ;; *************** function _floorf *****************
 10073 ;; Defined at:
 10074 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
 10075 ;; Parameters:    Size  Location     Type
 10076 ;;  x               4   28[COMRAM] float 
 10077 ;; Auto vars:     Size  Location     Type
 10078 ;;  u               4   44[COMRAM] struct .
 10079 ;;  m               4   38[COMRAM] unsigned long 
 10080 ;;  e               2   42[COMRAM] int 
 10081 ;; Return value:  Size  Location     Type
 10082 ;;                  4   28[COMRAM] float 
 10083 ;; Registers used:
 10084 ;;		wreg, status,2, status,0
 10085 ;; Tracked objects:
 10086 ;;		On entry : 0/0
 10087 ;;		On exit  : 0/0
 10088 ;;		Unchanged: 0/0
 10089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10090 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10091 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10092 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10093 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10094 ;;Total ram usage:       20 bytes
 10095 ;; Hardware stack levels used:    1
 10096 ;; Hardware stack levels required when called:    4
 10097 ;; This function calls:
 10098 ;;		Nothing
 10099 ;; This function is called by:
 10100 ;;		_efgtoa
 10101 ;; This function uses a non-reentrant model
 10102 ;;
 10103                           
 10104                           	psect	text19
 10105  0036A2                     __ptext19:
 10106                           	opt callstack 0
 10107  0036A2                     _floorf:
 10108                           	opt callstack 21
 10109  0036A2  C0DC  F02D         	movff	floorf@F524,floorf@u
 10110  0036A6  C0DD  F02E         	movff	floorf@F524+1,floorf@u+1
 10111  0036AA  C0DE  F02F         	movff	floorf@F524+2,floorf@u+2
 10112  0036AE  C0DF  F030         	movff	floorf@F524+3,floorf@u+3
 10113  0036B2  C01D  F02D         	movff	floorf@x,floorf@u
 10114  0036B6  C01E  F02E         	movff	floorf@x+1,floorf@u+1
 10115  0036BA  C01F  F02F         	movff	floorf@x+2,floorf@u+2
 10116  0036BE  C020  F030         	movff	floorf@x+3,floorf@u+3
 10117  0036C2  0E81               	movlw	129
 10118  0036C4  6E21               	movwf	??_floorf^0,c
 10119  0036C6  0EFF               	movlw	255
 10120  0036C8  6E22               	movwf	(??_floorf+1)^0,c
 10121  0036CA  C02D  F023         	movff	floorf@u,??_floorf+2
 10122  0036CE  C02E  F024         	movff	floorf@u+1,??_floorf+3
 10123  0036D2  C02F  F025         	movff	floorf@u+2,??_floorf+4
 10124  0036D6  C030  F026         	movff	floorf@u+3,??_floorf+5
 10125  0036DA  0E18               	movlw	24
 10126  0036DC  EF75  F01B         	goto	u9100
 10127  0036E0                     u9105:
 10128  0036E0  90D8               	bcf	status,0,c
 10129  0036E2  3226               	rrcf	(??_floorf+5)^0,f,c
 10130  0036E4  3225               	rrcf	(??_floorf+4)^0,f,c
 10131  0036E6  3224               	rrcf	(??_floorf+3)^0,f,c
 10132  0036E8  3223               	rrcf	(??_floorf+2)^0,f,c
 10133  0036EA                     u9100:
 10134  0036EA  2EE8               	decfsz	wreg,f,c
 10135  0036EC  EF70  F01B         	goto	u9105
 10136  0036F0  5023               	movf	(??_floorf+2)^0,w,c
 10137  0036F2  2421               	addwf	??_floorf^0,w,c
 10138  0036F4  6E2B               	movwf	floorf@e^0,c
 10139  0036F6  0E00               	movlw	0
 10140  0036F8  2022               	addwfc	(??_floorf+1)^0,w,c
 10141  0036FA  6E2C               	movwf	(floorf@e+1)^0,c
 10142  0036FC  BE2C               	btfsc	(floorf@e+1)^0,7,c
 10143  0036FE  EF8A  F01B         	goto	u9111
 10144  003702  502C               	movf	(floorf@e+1)^0,w,c
 10145  003704  E109               	bnz	u9110
 10146  003706  0E17               	movlw	23
 10147  003708  5C2B               	subwf	floorf@e^0,w,c
 10148  00370A  A0D8               	btfss	status,0,c
 10149  00370C  EF8A  F01B         	goto	u9111
 10150  003710  EF8C  F01B         	goto	u9110
 10151  003714                     u9111:
 10152  003714  EF96  F01B         	goto	l7378
 10153  003718                     u9110:
 10154  003718                     l7376:
 10155  003718  C01D  F01D         	movff	floorf@x,?_floorf
 10156  00371C  C01E  F01E         	movff	floorf@x+1,?_floorf+1
 10157  003720  C01F  F01F         	movff	floorf@x+2,?_floorf+2
 10158  003724  C020  F020         	movff	floorf@x+3,?_floorf+3
 10159  003728  EF59  F01C         	goto	l1513
 10160  00372C                     l7378:
 10161  00372C  BE2C               	btfsc	(floorf@e+1)^0,7,c
 10162  00372E  EF9B  F01B         	goto	u9121
 10163  003732  EF9D  F01B         	goto	u9120
 10164  003736                     u9121:
 10165  003736  EF0D  F01C         	goto	l7388
 10166  00373A                     u9120:
 10167  00373A  C02B  F021         	movff	floorf@e,??_floorf
 10168  00373E  0EFF               	movlw	255
 10169  003740  6E22               	movwf	(??_floorf+1)^0,c
 10170  003742  0EFF               	movlw	255
 10171  003744  6E23               	movwf	(??_floorf+2)^0,c
 10172  003746  0E7F               	movlw	127
 10173  003748  6E24               	movwf	(??_floorf+3)^0,c
 10174  00374A  0E00               	movlw	0
 10175  00374C  6E25               	movwf	(??_floorf+4)^0,c
 10176  00374E                     u9135:
 10177  00374E  6621               	tstfsz	??_floorf^0,c
 10178  003750  EFAC  F01B         	goto	u9136
 10179  003754  EFB4  F01B         	goto	u9137
 10180  003758                     u9136:
 10181  003758  3425               	rlcf	(??_floorf+4)^0,w,c
 10182  00375A  3225               	rrcf	(??_floorf+4)^0,f,c
 10183  00375C  3224               	rrcf	(??_floorf+3)^0,f,c
 10184  00375E  3223               	rrcf	(??_floorf+2)^0,f,c
 10185  003760  3222               	rrcf	(??_floorf+1)^0,f,c
 10186  003762  2E21               	decfsz	??_floorf^0,f,c
 10187  003764  EFA7  F01B         	goto	u9135
 10188  003768                     u9137:
 10189  003768  C022  F027         	movff	??_floorf+1,floorf@m
 10190  00376C  C023  F028         	movff	??_floorf+2,floorf@m+1
 10191  003770  C024  F029         	movff	??_floorf+3,floorf@m+2
 10192  003774  C025  F02A         	movff	??_floorf+4,floorf@m+3
 10193  003778  5027               	movf	floorf@m^0,w,c
 10194  00377A  142D               	andwf	floorf@u^0,w,c
 10195  00377C  6E21               	movwf	??_floorf^0,c
 10196  00377E  5028               	movf	(floorf@m+1)^0,w,c
 10197  003780  142E               	andwf	(floorf@u+1)^0,w,c
 10198  003782  6E22               	movwf	(??_floorf+1)^0,c
 10199  003784  5029               	movf	(floorf@m+2)^0,w,c
 10200  003786  142F               	andwf	(floorf@u+2)^0,w,c
 10201  003788  6E23               	movwf	(??_floorf+2)^0,c
 10202  00378A  502A               	movf	(floorf@m+3)^0,w,c
 10203  00378C  1430               	andwf	(floorf@u+3)^0,w,c
 10204  00378E  6E24               	movwf	(??_floorf+3)^0,c
 10205  003790  5021               	movf	??_floorf^0,w,c
 10206  003792  1022               	iorwf	(??_floorf+1)^0,w,c
 10207  003794  1023               	iorwf	(??_floorf+2)^0,w,c
 10208  003796  1024               	iorwf	(??_floorf+3)^0,w,c
 10209  003798  A4D8               	btfss	status,2,c
 10210  00379A  EFD1  F01B         	goto	u9141
 10211  00379E  EFD3  F01B         	goto	u9140
 10212  0037A2                     u9141:
 10213  0037A2  EFD5  F01B         	goto	l7384
 10214  0037A6                     u9140:
 10215  0037A6  EF8C  F01B         	goto	l7376
 10216  0037AA                     l7384:
 10217  0037AA  C02D  F021         	movff	floorf@u,??_floorf
 10218  0037AE  C02E  F022         	movff	floorf@u+1,??_floorf+1
 10219  0037B2  C02F  F023         	movff	floorf@u+2,??_floorf+2
 10220  0037B6  C030  F024         	movff	floorf@u+3,??_floorf+3
 10221  0037BA  0E20               	movlw	32
 10222  0037BC  EFE5  F01B         	goto	u9150
 10223  0037C0                     u9155:
 10224  0037C0  90D8               	bcf	status,0,c
 10225  0037C2  3224               	rrcf	(??_floorf+3)^0,f,c
 10226  0037C4  3223               	rrcf	(??_floorf+2)^0,f,c
 10227  0037C6  3222               	rrcf	(??_floorf+1)^0,f,c
 10228  0037C8  3221               	rrcf	??_floorf^0,f,c
 10229  0037CA                     u9150:
 10230  0037CA  2EE8               	decfsz	wreg,f,c
 10231  0037CC  EFE0  F01B         	goto	u9155
 10232  0037D0  5021               	movf	??_floorf^0,w,c
 10233  0037D2  1022               	iorwf	(??_floorf+1)^0,w,c
 10234  0037D4  1023               	iorwf	(??_floorf+2)^0,w,c
 10235  0037D6  1024               	iorwf	(??_floorf+3)^0,w,c
 10236  0037D8  B4D8               	btfsc	status,2,c
 10237  0037DA  EFF1  F01B         	goto	u9161
 10238  0037DE  EFF3  F01B         	goto	u9160
 10239  0037E2                     u9161:
 10240  0037E2  EFFB  F01B         	goto	l1516
 10241  0037E6                     u9160:
 10242  0037E6  5027               	movf	floorf@m^0,w,c
 10243  0037E8  262D               	addwf	floorf@u^0,f,c
 10244  0037EA  5028               	movf	(floorf@m+1)^0,w,c
 10245  0037EC  222E               	addwfc	(floorf@u+1)^0,f,c
 10246  0037EE  5029               	movf	(floorf@m+2)^0,w,c
 10247  0037F0  222F               	addwfc	(floorf@u+2)^0,f,c
 10248  0037F2  502A               	movf	(floorf@m+3)^0,w,c
 10249  0037F4  2230               	addwfc	(floorf@u+3)^0,f,c
 10250  0037F6                     l1516:
 10251  0037F6  1C27               	comf	floorf@m^0,w,c
 10252  0037F8  6E21               	movwf	??_floorf^0,c
 10253  0037FA  1C28               	comf	(floorf@m+1)^0,w,c
 10254  0037FC  6E22               	movwf	(??_floorf+1)^0,c
 10255  0037FE  1C29               	comf	(floorf@m+2)^0,w,c
 10256  003800  6E23               	movwf	(??_floorf+2)^0,c
 10257  003802  1C2A               	comf	(floorf@m+3)^0,w,c
 10258  003804  6E24               	movwf	(??_floorf+3)^0,c
 10259  003806  5021               	movf	??_floorf^0,w,c
 10260  003808  162D               	andwf	floorf@u^0,f,c
 10261  00380A  5022               	movf	(??_floorf+1)^0,w,c
 10262  00380C  162E               	andwf	(floorf@u+1)^0,f,c
 10263  00380E  5023               	movf	(??_floorf+2)^0,w,c
 10264  003810  162F               	andwf	(floorf@u+2)^0,f,c
 10265  003812  5024               	movf	(??_floorf+3)^0,w,c
 10266  003814  1630               	andwf	(floorf@u+3)^0,f,c
 10267  003816  EF51  F01C         	goto	l7396
 10268  00381A                     l7388:
 10269  00381A  C02D  F021         	movff	floorf@u,??_floorf
 10270  00381E  C02E  F022         	movff	floorf@u+1,??_floorf+1
 10271  003822  C02F  F023         	movff	floorf@u+2,??_floorf+2
 10272  003826  C030  F024         	movff	floorf@u+3,??_floorf+3
 10273  00382A  0E20               	movlw	32
 10274  00382C  EF1D  F01C         	goto	u9170
 10275  003830                     u9175:
 10276  003830  90D8               	bcf	status,0,c
 10277  003832  3224               	rrcf	(??_floorf+3)^0,f,c
 10278  003834  3223               	rrcf	(??_floorf+2)^0,f,c
 10279  003836  3222               	rrcf	(??_floorf+1)^0,f,c
 10280  003838  3221               	rrcf	??_floorf^0,f,c
 10281  00383A                     u9170:
 10282  00383A  2EE8               	decfsz	wreg,f,c
 10283  00383C  EF18  F01C         	goto	u9175
 10284  003840  5021               	movf	??_floorf^0,w,c
 10285  003842  1022               	iorwf	(??_floorf+1)^0,w,c
 10286  003844  1023               	iorwf	(??_floorf+2)^0,w,c
 10287  003846  1024               	iorwf	(??_floorf+3)^0,w,c
 10288  003848  A4D8               	btfss	status,2,c
 10289  00384A  EF29  F01C         	goto	u9181
 10290  00384E  EF2B  F01C         	goto	u9180
 10291  003852                     u9181:
 10292  003852  EF35  F01C         	goto	l7392
 10293  003856                     u9180:
 10294  003856  0E00               	movlw	0
 10295  003858  6E2D               	movwf	floorf@u^0,c
 10296  00385A  0E00               	movlw	0
 10297  00385C  6E2E               	movwf	(floorf@u+1)^0,c
 10298  00385E  0E00               	movlw	0
 10299  003860  6E2F               	movwf	(floorf@u+2)^0,c
 10300  003862  0E00               	movlw	0
 10301  003864  6E30               	movwf	(floorf@u+3)^0,c
 10302  003866  EF51  F01C         	goto	l7396
 10303  00386A                     l7392:
 10304  00386A  90D8               	bcf	status,0,c
 10305  00386C  342D               	rlcf	floorf@u^0,w,c
 10306  00386E  6E21               	movwf	??_floorf^0,c
 10307  003870  342E               	rlcf	(floorf@u+1)^0,w,c
 10308  003872  6E22               	movwf	(??_floorf+1)^0,c
 10309  003874  342F               	rlcf	(floorf@u+2)^0,w,c
 10310  003876  6E23               	movwf	(??_floorf+2)^0,c
 10311  003878  3430               	rlcf	(floorf@u+3)^0,w,c
 10312  00387A  6E24               	movwf	(??_floorf+3)^0,c
 10313  00387C  5021               	movf	??_floorf^0,w,c
 10314  00387E  1022               	iorwf	(??_floorf+1)^0,w,c
 10315  003880  1023               	iorwf	(??_floorf+2)^0,w,c
 10316  003882  1024               	iorwf	(??_floorf+3)^0,w,c
 10317  003884  B4D8               	btfsc	status,2,c
 10318  003886  EF47  F01C         	goto	u9191
 10319  00388A  EF49  F01C         	goto	u9190
 10320  00388E                     u9191:
 10321  00388E  EF51  F01C         	goto	l7396
 10322  003892                     u9190:
 10323  003892  0E00               	movlw	0
 10324  003894  6E2D               	movwf	floorf@u^0,c
 10325  003896  0E00               	movlw	0
 10326  003898  6E2E               	movwf	(floorf@u+1)^0,c
 10327  00389A  0E80               	movlw	128
 10328  00389C  6E2F               	movwf	(floorf@u+2)^0,c
 10329  00389E  0EBF               	movlw	191
 10330  0038A0  6E30               	movwf	(floorf@u+3)^0,c
 10331  0038A2                     l7396:
 10332  0038A2  C02D  F01D         	movff	floorf@u,?_floorf
 10333  0038A6  C02E  F01E         	movff	floorf@u+1,?_floorf+1
 10334  0038AA  C02F  F01F         	movff	floorf@u+2,?_floorf+2
 10335  0038AE  C030  F020         	movff	floorf@u+3,?_floorf+3
 10336  0038B2                     l1513:
 10337  0038B2  0012               	return		;funcret
 10338  0038B4                     __end_of_floorf:
 10339                           	opt callstack 0
 10340                           
 10341 ;; *************** function ___fpclassifyf *****************
 10342 ;; Defined at:
 10343 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
 10344 ;; Parameters:    Size  Location     Type
 10345 ;;  x               4    3[COMRAM] float 
 10346 ;; Auto vars:     Size  Location     Type
 10347 ;;  u               4   13[COMRAM] struct .
 10348 ;;  e               2   11[COMRAM] int 
 10349 ;; Return value:  Size  Location     Type
 10350 ;;                  2    3[COMRAM] int 
 10351 ;; Registers used:
 10352 ;;		wreg, status,2, status,0
 10353 ;; Tracked objects:
 10354 ;;		On entry : 0/0
 10355 ;;		On exit  : 0/0
 10356 ;;		Unchanged: 0/0
 10357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10358 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10359 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10360 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10361 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10362 ;;Total ram usage:       14 bytes
 10363 ;; Hardware stack levels used:    1
 10364 ;; Hardware stack levels required when called:    4
 10365 ;; This function calls:
 10366 ;;		Nothing
 10367 ;; This function is called by:
 10368 ;;		_efgtoa
 10369 ;; This function uses a non-reentrant model
 10370 ;;
 10371                           
 10372                           	psect	text20
 10373  004C9C                     __ptext20:
 10374                           	opt callstack 0
 10375  004C9C                     ___fpclassifyf:
 10376                           	opt callstack 21
 10377  004C9C  C0E0  F00E         	movff	___fpclassifyf@F463,___fpclassifyf@u
 10378  004CA0  C0E1  F00F         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
 10379  004CA4  C0E2  F010         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
 10380  004CA8  C0E3  F011         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
 10381  004CAC  C004  F00E         	movff	___fpclassifyf@x,___fpclassifyf@u
 10382  004CB0  C005  F00F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 10383  004CB4  C006  F010         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 10384  004CB8  C007  F011         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 10385  004CBC  C00E  F008         	movff	___fpclassifyf@u,??___fpclassifyf
 10386  004CC0  C00F  F009         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10387  004CC4  C010  F00A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10388  004CC8  C011  F00B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10389  004CCC  0E18               	movlw	24
 10390  004CCE  EF6E  F026         	goto	u8980
 10391  004CD2                     u8985:
 10392  004CD2  90D8               	bcf	status,0,c
 10393  004CD4  320B               	rrcf	(??___fpclassifyf+3)^0,f,c
 10394  004CD6  320A               	rrcf	(??___fpclassifyf+2)^0,f,c
 10395  004CD8  3209               	rrcf	(??___fpclassifyf+1)^0,f,c
 10396  004CDA  3208               	rrcf	??___fpclassifyf^0,f,c
 10397  004CDC                     u8980:
 10398  004CDC  2EE8               	decfsz	wreg,f,c
 10399  004CDE  EF69  F026         	goto	u8985
 10400  004CE2  5008               	movf	??___fpclassifyf^0,w,c
 10401  004CE4  6E0C               	movwf	___fpclassifyf@e^0,c
 10402  004CE6  6A0D               	clrf	(___fpclassifyf@e+1)^0,c
 10403  004CE8  500C               	movf	___fpclassifyf@e^0,w,c
 10404  004CEA  100D               	iorwf	(___fpclassifyf@e+1)^0,w,c
 10405  004CEC  A4D8               	btfss	status,2,c
 10406  004CEE  EF7B  F026         	goto	u8991
 10407  004CF2  EF7D  F026         	goto	u8990
 10408  004CF6                     u8991:
 10409  004CF6  EF9D  F026         	goto	l7348
 10410  004CFA                     u8990:
 10411  004CFA  90D8               	bcf	status,0,c
 10412  004CFC  340E               	rlcf	___fpclassifyf@u^0,w,c
 10413  004CFE  6E08               	movwf	??___fpclassifyf^0,c
 10414  004D00  340F               	rlcf	(___fpclassifyf@u+1)^0,w,c
 10415  004D02  6E09               	movwf	(??___fpclassifyf+1)^0,c
 10416  004D04  3410               	rlcf	(___fpclassifyf@u+2)^0,w,c
 10417  004D06  6E0A               	movwf	(??___fpclassifyf+2)^0,c
 10418  004D08  3411               	rlcf	(___fpclassifyf@u+3)^0,w,c
 10419  004D0A  6E0B               	movwf	(??___fpclassifyf+3)^0,c
 10420  004D0C  5008               	movf	??___fpclassifyf^0,w,c
 10421  004D0E  1009               	iorwf	(??___fpclassifyf+1)^0,w,c
 10422  004D10  100A               	iorwf	(??___fpclassifyf+2)^0,w,c
 10423  004D12  100B               	iorwf	(??___fpclassifyf+3)^0,w,c
 10424  004D14  A4D8               	btfss	status,2,c
 10425  004D16  EF8F  F026         	goto	u9001
 10426  004D1A  EF91  F026         	goto	u9000
 10427  004D1E                     u9001:
 10428  004D1E  EF97  F026         	goto	l7344
 10429  004D22                     u9000:
 10430  004D22  0E00               	movlw	0
 10431  004D24  6E05               	movwf	(?___fpclassifyf+1)^0,c
 10432  004D26  0E02               	movlw	2
 10433  004D28  6E04               	movwf	?___fpclassifyf^0,c
 10434  004D2A  EFCC  F026         	goto	l1468
 10435  004D2E                     l7344:
 10436  004D2E  0E00               	movlw	0
 10437  004D30  6E05               	movwf	(?___fpclassifyf+1)^0,c
 10438  004D32  0E03               	movlw	3
 10439  004D34  6E04               	movwf	?___fpclassifyf^0,c
 10440  004D36  EFCC  F026         	goto	l1468
 10441  004D3A                     l7348:
 10442  004D3A  280C               	incf	___fpclassifyf@e^0,w,c
 10443  004D3C  100D               	iorwf	(___fpclassifyf@e+1)^0,w,c
 10444  004D3E  A4D8               	btfss	status,2,c
 10445  004D40  EFA4  F026         	goto	u9011
 10446  004D44  EFA6  F026         	goto	u9010
 10447  004D48                     u9011:
 10448  004D48  EFC8  F026         	goto	l7354
 10449  004D4C                     u9010:
 10450  004D4C  C00E  F008         	movff	___fpclassifyf@u,??___fpclassifyf
 10451  004D50  C00F  F009         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10452  004D54  C010  F00A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10453  004D58  C011  F00B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10454  004D5C  0E09               	movlw	9
 10455  004D5E                     u9025:
 10456  004D5E  90D8               	bcf	status,0,c
 10457  004D60  3608               	rlcf	??___fpclassifyf^0,f,c
 10458  004D62  3609               	rlcf	(??___fpclassifyf+1)^0,f,c
 10459  004D64  360A               	rlcf	(??___fpclassifyf+2)^0,f,c
 10460  004D66  360B               	rlcf	(??___fpclassifyf+3)^0,f,c
 10461  004D68  2EE8               	decfsz	wreg,f,c
 10462  004D6A  EFAF  F026         	goto	u9025
 10463  004D6E  5008               	movf	??___fpclassifyf^0,w,c
 10464  004D70  1009               	iorwf	(??___fpclassifyf+1)^0,w,c
 10465  004D72  100A               	iorwf	(??___fpclassifyf+2)^0,w,c
 10466  004D74  100B               	iorwf	(??___fpclassifyf+3)^0,w,c
 10467  004D76  B4D8               	btfsc	status,2,c
 10468  004D78  EFC0  F026         	goto	u9031
 10469  004D7C  EFC3  F026         	goto	u9030
 10470  004D80                     u9031:
 10471  004D80  0E01               	movlw	1
 10472  004D82  EFC4  F026         	goto	u9040
 10473  004D86                     u9030:
 10474  004D86  0E00               	movlw	0
 10475  004D88                     u9040:
 10476  004D88  6E04               	movwf	?___fpclassifyf^0,c
 10477  004D8A  6A05               	clrf	(?___fpclassifyf+1)^0,c
 10478  004D8C  EFCC  F026         	goto	l1468
 10479  004D90                     l7354:
 10480  004D90  0E00               	movlw	0
 10481  004D92  6E05               	movwf	(?___fpclassifyf+1)^0,c
 10482  004D94  0E04               	movlw	4
 10483  004D96  6E04               	movwf	?___fpclassifyf^0,c
 10484  004D98                     l1468:
 10485  004D98  0012               	return		;funcret
 10486  004D9A                     __end_of___fpclassifyf:
 10487                           	opt callstack 0
 10488                           
 10489 ;; *************** function ___fltol *****************
 10490 ;; Defined at:
 10491 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 10492 ;; Parameters:    Size  Location     Type
 10493 ;;  f1              4    3[COMRAM] int 
 10494 ;; Auto vars:     Size  Location     Type
 10495 ;;  exp1            1   12[COMRAM] unsigned char 
 10496 ;;  sign1           1   11[COMRAM] unsigned char 
 10497 ;; Return value:  Size  Location     Type
 10498 ;;                  4    3[COMRAM] long 
 10499 ;; Registers used:
 10500 ;;		wreg, status,2, status,0
 10501 ;; Tracked objects:
 10502 ;;		On entry : 0/0
 10503 ;;		On exit  : 0/0
 10504 ;;		Unchanged: 0/0
 10505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10506 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10507 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10508 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10509 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10510 ;;Total ram usage:       10 bytes
 10511 ;; Hardware stack levels used:    1
 10512 ;; Hardware stack levels required when called:    4
 10513 ;; This function calls:
 10514 ;;		Nothing
 10515 ;; This function is called by:
 10516 ;;		_efgtoa
 10517 ;; This function uses a non-reentrant model
 10518 ;;
 10519                           
 10520                           	psect	text21
 10521  004A92                     __ptext21:
 10522                           	opt callstack 0
 10523  004A92                     ___fltol:
 10524                           	opt callstack 21
 10525  004A92  3406               	rlcf	(___fltol@f1+2)^0,w,c
 10526  004A94  3407               	rlcf	(___fltol@f1+3)^0,w,c
 10527  004A96  6E0D               	movwf	___fltol@exp1^0,c
 10528  004A98  500D               	movf	___fltol@exp1^0,w,c
 10529  004A9A  A4D8               	btfss	status,2,c
 10530  004A9C  EF52  F025         	goto	u10031
 10531  004AA0  EF54  F025         	goto	u10030
 10532  004AA4                     u10031:
 10533  004AA4  EF5E  F025         	goto	l7910
 10534  004AA8                     u10030:
 10535  004AA8                     l7906:
 10536  004AA8  0E00               	movlw	0
 10537  004AAA  6E04               	movwf	?___fltol^0,c
 10538  004AAC  0E00               	movlw	0
 10539  004AAE  6E05               	movwf	(?___fltol+1)^0,c
 10540  004AB0  0E00               	movlw	0
 10541  004AB2  6E06               	movwf	(?___fltol+2)^0,c
 10542  004AB4  0E00               	movlw	0
 10543  004AB6  6E07               	movwf	(?___fltol+3)^0,c
 10544  004AB8  EFCB  F025         	goto	l1084
 10545  004ABC                     l7910:
 10546  004ABC  C004  F008         	movff	___fltol@f1,??___fltol
 10547  004AC0  C005  F009         	movff	___fltol@f1+1,??___fltol+1
 10548  004AC4  C006  F00A         	movff	___fltol@f1+2,??___fltol+2
 10549  004AC8  C007  F00B         	movff	___fltol@f1+3,??___fltol+3
 10550  004ACC  0E20               	movlw	32
 10551  004ACE  EF6E  F025         	goto	u10040
 10552  004AD2                     u10045:
 10553  004AD2  90D8               	bcf	status,0,c
 10554  004AD4  320B               	rrcf	(??___fltol+3)^0,f,c
 10555  004AD6  320A               	rrcf	(??___fltol+2)^0,f,c
 10556  004AD8  3209               	rrcf	(??___fltol+1)^0,f,c
 10557  004ADA  3208               	rrcf	??___fltol^0,f,c
 10558  004ADC                     u10040:
 10559  004ADC  2EE8               	decfsz	wreg,f,c
 10560  004ADE  EF69  F025         	goto	u10045
 10561  004AE2  5008               	movf	??___fltol^0,w,c
 10562  004AE4  6E0C               	movwf	___fltol@sign1^0,c
 10563  004AE6  8E06               	bsf	(___fltol@f1+2)^0,7,c
 10564  004AE8  0EFF               	movlw	255
 10565  004AEA  1604               	andwf	___fltol@f1^0,f,c
 10566  004AEC  0EFF               	movlw	255
 10567  004AEE  1605               	andwf	(___fltol@f1+1)^0,f,c
 10568  004AF0  0EFF               	movlw	255
 10569  004AF2  1606               	andwf	(___fltol@f1+2)^0,f,c
 10570  004AF4  0E00               	movlw	0
 10571  004AF6  1607               	andwf	(___fltol@f1+3)^0,f,c
 10572  004AF8  0E96               	movlw	150
 10573  004AFA  5E0D               	subwf	___fltol@exp1^0,f,c
 10574  004AFC  BE0D               	btfsc	___fltol@exp1^0,7,c
 10575  004AFE  EF85  F025         	goto	u10050
 10576  004B02  EF83  F025         	goto	u10051
 10577  004B06                     u10051:
 10578  004B06  EF9B  F025         	goto	l7930
 10579  004B0A                     u10050:
 10580  004B0A  500D               	movf	___fltol@exp1^0,w,c
 10581  004B0C  0A80               	xorlw	128
 10582  004B0E  0F97               	addlw	151
 10583  004B10  B0D8               	btfsc	status,0,c
 10584  004B12  EF8D  F025         	goto	u10061
 10585  004B16  EF8F  F025         	goto	u10060
 10586  004B1A                     u10061:
 10587  004B1A  EF91  F025         	goto	l7926
 10588  004B1E                     u10060:
 10589  004B1E  EF54  F025         	goto	l7906
 10590  004B22                     l7926:
 10591  004B22  90D8               	bcf	status,0,c
 10592  004B24  3207               	rrcf	(___fltol@f1+3)^0,f,c
 10593  004B26  3206               	rrcf	(___fltol@f1+2)^0,f,c
 10594  004B28  3205               	rrcf	(___fltol@f1+1)^0,f,c
 10595  004B2A  3204               	rrcf	___fltol@f1^0,f,c
 10596  004B2C  3E0D               	incfsz	___fltol@exp1^0,f,c
 10597  004B2E  EF91  F025         	goto	l7926
 10598  004B32  EFB3  F025         	goto	l7940
 10599  004B36                     l7930:
 10600  004B36  0E1F               	movlw	31
 10601  004B38  640D               	cpfsgt	___fltol@exp1^0,c
 10602  004B3A  EFA1  F025         	goto	u10071
 10603  004B3E  EFA3  F025         	goto	u10070
 10604  004B42                     u10071:
 10605  004B42  EFAB  F025         	goto	l7938
 10606  004B46                     u10070:
 10607  004B46  EF54  F025         	goto	l7906
 10608  004B4A                     l7936:
 10609  004B4A  90D8               	bcf	status,0,c
 10610  004B4C  3604               	rlcf	___fltol@f1^0,f,c
 10611  004B4E  3605               	rlcf	(___fltol@f1+1)^0,f,c
 10612  004B50  3606               	rlcf	(___fltol@f1+2)^0,f,c
 10613  004B52  3607               	rlcf	(___fltol@f1+3)^0,f,c
 10614  004B54  060D               	decf	___fltol@exp1^0,f,c
 10615  004B56                     l7938:
 10616  004B56  500D               	movf	___fltol@exp1^0,w,c
 10617  004B58  A4D8               	btfss	status,2,c
 10618  004B5A  EFB1  F025         	goto	u10081
 10619  004B5E  EFB3  F025         	goto	u10080
 10620  004B62                     u10081:
 10621  004B62  EFA5  F025         	goto	l7936
 10622  004B66                     u10080:
 10623  004B66                     l7940:
 10624  004B66  500C               	movf	___fltol@sign1^0,w,c
 10625  004B68  B4D8               	btfsc	status,2,c
 10626  004B6A  EFB9  F025         	goto	u10091
 10627  004B6E  EFBB  F025         	goto	u10090
 10628  004B72                     u10091:
 10629  004B72  EFC3  F025         	goto	l7944
 10630  004B76                     u10090:
 10631  004B76  1E07               	comf	(___fltol@f1+3)^0,f,c
 10632  004B78  1E06               	comf	(___fltol@f1+2)^0,f,c
 10633  004B7A  1E05               	comf	(___fltol@f1+1)^0,f,c
 10634  004B7C  6C04               	negf	___fltol@f1^0,c
 10635  004B7E  0E00               	movlw	0
 10636  004B80  2205               	addwfc	(___fltol@f1+1)^0,f,c
 10637  004B82  2206               	addwfc	(___fltol@f1+2)^0,f,c
 10638  004B84  2207               	addwfc	(___fltol@f1+3)^0,f,c
 10639  004B86                     l7944:
 10640  004B86  C004  F004         	movff	___fltol@f1,?___fltol
 10641  004B8A  C005  F005         	movff	___fltol@f1+1,?___fltol+1
 10642  004B8E  C006  F006         	movff	___fltol@f1+2,?___fltol+2
 10643  004B92  C007  F007         	movff	___fltol@f1+3,?___fltol+3
 10644  004B96                     l1084:
 10645  004B96  0012               	return		;funcret
 10646  004B98                     __end_of___fltol:
 10647                           	opt callstack 0
 10648                           
 10649 ;; *************** function ___flsub *****************
 10650 ;; Defined at:
 10651 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 10652 ;; Parameters:    Size  Location     Type
 10653 ;;  b               4   42[COMRAM] long 
 10654 ;;  a               4   46[COMRAM] long 
 10655 ;; Auto vars:     Size  Location     Type
 10656 ;;		None
 10657 ;; Return value:  Size  Location     Type
 10658 ;;                  4   42[COMRAM] long 
 10659 ;; Registers used:
 10660 ;;		wreg, status,2, status,0, cstack
 10661 ;; Tracked objects:
 10662 ;;		On entry : 0/0
 10663 ;;		On exit  : 0/0
 10664 ;;		Unchanged: 0/0
 10665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10666 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10669 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10670 ;;Total ram usage:        8 bytes
 10671 ;; Hardware stack levels used:    1
 10672 ;; Hardware stack levels required when called:    5
 10673 ;; This function calls:
 10674 ;;		___fladd
 10675 ;; This function is called by:
 10676 ;;		_efgtoa
 10677 ;; This function uses a non-reentrant model
 10678 ;;
 10679                           
 10680                           	psect	text22
 10681  00579C                     __ptext22:
 10682                           	opt callstack 0
 10683  00579C                     ___flsub:
 10684                           	opt callstack 20
 10685  00579C  0E00               	movlw	0
 10686  00579E  1A2F               	xorwf	___flsub@a^0,f,c
 10687  0057A0  0E00               	movlw	0
 10688  0057A2  1A30               	xorwf	(___flsub@a+1)^0,f,c
 10689  0057A4  0E00               	movlw	0
 10690  0057A6  1A31               	xorwf	(___flsub@a+2)^0,f,c
 10691  0057A8  0E80               	movlw	128
 10692  0057AA  1A32               	xorwf	(___flsub@a+3)^0,f,c
 10693  0057AC  C02B  F004         	movff	___flsub@b,___fladd@b
 10694  0057B0  C02C  F005         	movff	___flsub@b+1,___fladd@b+1
 10695  0057B4  C02D  F006         	movff	___flsub@b+2,___fladd@b+2
 10696  0057B8  C02E  F007         	movff	___flsub@b+3,___fladd@b+3
 10697  0057BC  C02F  F008         	movff	___flsub@a,___fladd@a
 10698  0057C0  C030  F009         	movff	___flsub@a+1,___fladd@a+1
 10699  0057C4  C031  F00A         	movff	___flsub@a+2,___fladd@a+2
 10700  0057C8  C032  F00B         	movff	___flsub@a+3,___fladd@a+3
 10701  0057CC  EC6B  F010         	call	___fladd	;wreg free
 10702  0057D0  C004  F02B         	movff	?___fladd,?___flsub
 10703  0057D4  C005  F02C         	movff	?___fladd+1,?___flsub+1
 10704  0057D8  C006  F02D         	movff	?___fladd+2,?___flsub+2
 10705  0057DC  C007  F02E         	movff	?___fladd+3,?___flsub+3
 10706  0057E0  0012               	return		;funcret
 10707  0057E2                     __end_of___flsub:
 10708                           	opt callstack 0
 10709                           
 10710 ;; *************** function ___fladd *****************
 10711 ;; Defined at:
 10712 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 10713 ;; Parameters:    Size  Location     Type
 10714 ;;  b               4    3[COMRAM] long 
 10715 ;;  a               4    7[COMRAM] long 
 10716 ;; Auto vars:     Size  Location     Type
 10717 ;;  grs             1   18[COMRAM] unsigned char 
 10718 ;;  bexp            1   17[COMRAM] unsigned char 
 10719 ;;  aexp            1   16[COMRAM] unsigned char 
 10720 ;;  signs           1   15[COMRAM] unsigned char 
 10721 ;; Return value:  Size  Location     Type
 10722 ;;                  4    3[COMRAM] unsigned char 
 10723 ;; Registers used:
 10724 ;;		wreg, status,2, status,0
 10725 ;; Tracked objects:
 10726 ;;		On entry : 0/0
 10727 ;;		On exit  : 0/0
 10728 ;;		Unchanged: 0/0
 10729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10730 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10731 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10732 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10733 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10734 ;;Total ram usage:       16 bytes
 10735 ;; Hardware stack levels used:    1
 10736 ;; Hardware stack levels required when called:    4
 10737 ;; This function calls:
 10738 ;;		Nothing
 10739 ;; This function is called by:
 10740 ;;		_efgtoa
 10741 ;;		___flsub
 10742 ;; This function uses a non-reentrant model
 10743 ;;
 10744                           
 10745                           	psect	text23
 10746  0020D6                     __ptext23:
 10747                           	opt callstack 0
 10748  0020D6                     ___fladd:
 10749                           	opt callstack 20
 10750  0020D6  5007               	movf	(___fladd@b+3)^0,w,c
 10751  0020D8  0B80               	andlw	128
 10752  0020DA  6E10               	movwf	___fladd@signs^0,c
 10753  0020DC  5007               	movf	(___fladd@b+3)^0,w,c
 10754  0020DE  2407               	addwf	(___fladd@b+3)^0,w,c
 10755  0020E0  6E12               	movwf	___fladd@bexp^0,c
 10756  0020E2  AE06               	btfss	(___fladd@b+2)^0,7,c
 10757  0020E4  EF76  F010         	goto	u8521
 10758  0020E8  EF78  F010         	goto	u8520
 10759  0020EC                     u8521:
 10760  0020EC  EF79  F010         	goto	l7110
 10761  0020F0                     u8520:
 10762  0020F0  8012               	bsf	___fladd@bexp^0,0,c
 10763  0020F2                     l7110:
 10764  0020F2  5012               	movf	___fladd@bexp^0,w,c
 10765  0020F4  B4D8               	btfsc	status,2,c
 10766  0020F6  EF7F  F010         	goto	u8531
 10767  0020FA  EF81  F010         	goto	u8530
 10768  0020FE                     u8531:
 10769  0020FE  EF96  F010         	goto	l7120
 10770  002102                     u8530:
 10771  002102  2812               	incf	___fladd@bexp^0,w,c
 10772  002104  A4D8               	btfss	status,2,c
 10773  002106  EF87  F010         	goto	u8541
 10774  00210A  EF89  F010         	goto	u8540
 10775  00210E                     u8541:
 10776  00210E  EF91  F010         	goto	l7116
 10777  002112                     u8540:
 10778  002112  0E00               	movlw	0
 10779  002114  6E04               	movwf	___fladd@b^0,c
 10780  002116  0E00               	movlw	0
 10781  002118  6E05               	movwf	(___fladd@b+1)^0,c
 10782  00211A  0E00               	movlw	0
 10783  00211C  6E06               	movwf	(___fladd@b+2)^0,c
 10784  00211E  0E00               	movlw	0
 10785  002120  6E07               	movwf	(___fladd@b+3)^0,c
 10786  002122                     l7116:
 10787  002122  8E06               	bsf	(___fladd@b+2)^0,7,c
 10788  002124  0E00               	movlw	0
 10789  002126  6E07               	movwf	(___fladd@b+3)^0,c
 10790  002128  EF9E  F010         	goto	l7122
 10791  00212C                     l7120:
 10792  00212C  0E00               	movlw	0
 10793  00212E  6E04               	movwf	___fladd@b^0,c
 10794  002130  0E00               	movlw	0
 10795  002132  6E05               	movwf	(___fladd@b+1)^0,c
 10796  002134  0E00               	movlw	0
 10797  002136  6E06               	movwf	(___fladd@b+2)^0,c
 10798  002138  0E00               	movlw	0
 10799  00213A  6E07               	movwf	(___fladd@b+3)^0,c
 10800  00213C                     l7122:
 10801  00213C  500B               	movf	(___fladd@a+3)^0,w,c
 10802  00213E  0B80               	andlw	128
 10803  002140  6E11               	movwf	___fladd@aexp^0,c
 10804  002142  5010               	movf	___fladd@signs^0,w,c
 10805  002144  1811               	xorwf	___fladd@aexp^0,w,c
 10806  002146  B4D8               	btfsc	status,2,c
 10807  002148  EFA8  F010         	goto	u8551
 10808  00214C  EFAA  F010         	goto	u8550
 10809  002150                     u8551:
 10810  002150  EFAB  F010         	goto	l7128
 10811  002154                     u8550:
 10812  002154  8C10               	bsf	___fladd@signs^0,6,c
 10813  002156                     l7128:
 10814  002156  500B               	movf	(___fladd@a+3)^0,w,c
 10815  002158  240B               	addwf	(___fladd@a+3)^0,w,c
 10816  00215A  6E11               	movwf	___fladd@aexp^0,c
 10817  00215C  AE0A               	btfss	(___fladd@a+2)^0,7,c
 10818  00215E  EFB3  F010         	goto	u8561
 10819  002162  EFB5  F010         	goto	u8560
 10820  002166                     u8561:
 10821  002166  EFB6  F010         	goto	l7134
 10822  00216A                     u8560:
 10823  00216A  8011               	bsf	___fladd@aexp^0,0,c
 10824  00216C                     l7134:
 10825  00216C  5011               	movf	___fladd@aexp^0,w,c
 10826  00216E  B4D8               	btfsc	status,2,c
 10827  002170  EFBC  F010         	goto	u8571
 10828  002174  EFBE  F010         	goto	u8570
 10829  002178                     u8571:
 10830  002178  EFD3  F010         	goto	l7144
 10831  00217C                     u8570:
 10832  00217C  2811               	incf	___fladd@aexp^0,w,c
 10833  00217E  A4D8               	btfss	status,2,c
 10834  002180  EFC4  F010         	goto	u8581
 10835  002184  EFC6  F010         	goto	u8580
 10836  002188                     u8581:
 10837  002188  EFCE  F010         	goto	l7140
 10838  00218C                     u8580:
 10839  00218C  0E00               	movlw	0
 10840  00218E  6E08               	movwf	___fladd@a^0,c
 10841  002190  0E00               	movlw	0
 10842  002192  6E09               	movwf	(___fladd@a+1)^0,c
 10843  002194  0E00               	movlw	0
 10844  002196  6E0A               	movwf	(___fladd@a+2)^0,c
 10845  002198  0E00               	movlw	0
 10846  00219A  6E0B               	movwf	(___fladd@a+3)^0,c
 10847  00219C                     l7140:
 10848  00219C  8E0A               	bsf	(___fladd@a+2)^0,7,c
 10849  00219E  0E00               	movlw	0
 10850  0021A0  6E0B               	movwf	(___fladd@a+3)^0,c
 10851  0021A2  EFDB  F010         	goto	l7146
 10852  0021A6                     l7144:
 10853  0021A6  0E00               	movlw	0
 10854  0021A8  6E08               	movwf	___fladd@a^0,c
 10855  0021AA  0E00               	movlw	0
 10856  0021AC  6E09               	movwf	(___fladd@a+1)^0,c
 10857  0021AE  0E00               	movlw	0
 10858  0021B0  6E0A               	movwf	(___fladd@a+2)^0,c
 10859  0021B2  0E00               	movlw	0
 10860  0021B4  6E0B               	movwf	(___fladd@a+3)^0,c
 10861  0021B6                     l7146:
 10862  0021B6  5012               	movf	___fladd@bexp^0,w,c
 10863  0021B8  5C11               	subwf	___fladd@aexp^0,w,c
 10864  0021BA  B0D8               	btfsc	status,0,c
 10865  0021BC  EFE2  F010         	goto	u8591
 10866  0021C0  EFE4  F010         	goto	u8590
 10867  0021C4                     u8591:
 10868  0021C4  EF0B  F011         	goto	l7182
 10869  0021C8                     u8590:
 10870  0021C8  AC10               	btfss	___fladd@signs^0,6,c
 10871  0021CA  EFE9  F010         	goto	u8601
 10872  0021CE  EFEB  F010         	goto	u8600
 10873  0021D2                     u8601:
 10874  0021D2  EFED  F010         	goto	l7152
 10875  0021D6                     u8600:
 10876  0021D6  0E80               	movlw	128
 10877  0021D8  1A10               	xorwf	___fladd@signs^0,f,c
 10878  0021DA                     l7152:
 10879  0021DA  C012  F013         	movff	___fladd@bexp,___fladd@grs
 10880  0021DE  C011  F012         	movff	___fladd@aexp,___fladd@bexp
 10881  0021E2  C013  F011         	movff	___fladd@grs,___fladd@aexp
 10882  0021E6  C004  F013         	movff	___fladd@b,___fladd@grs
 10883  0021EA  C008  F004         	movff	___fladd@a,___fladd@b
 10884  0021EE  C013  F008         	movff	___fladd@grs,___fladd@a
 10885  0021F2  C005  F013         	movff	___fladd@b+1,___fladd@grs
 10886  0021F6  C009  F005         	movff	___fladd@a+1,___fladd@b+1
 10887  0021FA  C013  F009         	movff	___fladd@grs,___fladd@a+1
 10888  0021FE  C006  F013         	movff	___fladd@b+2,___fladd@grs
 10889  002202  C00A  F006         	movff	___fladd@a+2,___fladd@b+2
 10890  002206  C013  F00A         	movff	___fladd@grs,___fladd@a+2
 10891  00220A  C007  F013         	movff	___fladd@b+3,___fladd@grs
 10892  00220E  C00B  F007         	movff	___fladd@a+3,___fladd@b+3
 10893  002212  C013  F00B         	movff	___fladd@grs,___fladd@a+3
 10894  002216                     l7182:
 10895  002216  0E00               	movlw	0
 10896  002218  6E13               	movwf	___fladd@grs^0,c
 10897  00221A  5012               	movf	___fladd@bexp^0,w,c
 10898  00221C  C011  F00C         	movff	___fladd@aexp,??___fladd
 10899  002220  6A0D               	clrf	(??___fladd+1)^0,c
 10900  002222  5E0C               	subwf	??___fladd^0,f,c
 10901  002224  0E00               	movlw	0
 10902  002226  5A0D               	subwfb	(??___fladd+1)^0,f,c
 10903  002228  BE0D               	btfsc	(??___fladd+1)^0,7,c
 10904  00222A  EF20  F011         	goto	u8611
 10905  00222E  500D               	movf	(??___fladd+1)^0,w,c
 10906  002230  E109               	bnz	u8610
 10907  002232  0E1A               	movlw	26
 10908  002234  5C0C               	subwf	??___fladd^0,w,c
 10909  002236  A0D8               	btfss	status,0,c
 10910  002238  EF20  F011         	goto	u8611
 10911  00223C  EF22  F011         	goto	u8610
 10912  002240                     u8611:
 10913  002240  EF59  F011         	goto	l1316
 10914  002244                     u8610:
 10915  002244  5004               	movf	___fladd@b^0,w,c
 10916  002246  1005               	iorwf	(___fladd@b+1)^0,w,c
 10917  002248  1006               	iorwf	(___fladd@b+2)^0,w,c
 10918  00224A  1007               	iorwf	(___fladd@b+3)^0,w,c
 10919  00224C  A4D8               	btfss	status,2,c
 10920  00224E  EF2B  F011         	goto	u8621
 10921  002252  EF2E  F011         	goto	u8620
 10922  002256                     u8621:
 10923  002256  0E01               	movlw	1
 10924  002258  EF2F  F011         	goto	u8630
 10925  00225C                     u8620:
 10926  00225C  0E00               	movlw	0
 10927  00225E                     u8630:
 10928  00225E  6E13               	movwf	___fladd@grs^0,c
 10929  002260  0E00               	movlw	0
 10930  002262  6E04               	movwf	___fladd@b^0,c
 10931  002264  0E00               	movlw	0
 10932  002266  6E05               	movwf	(___fladd@b+1)^0,c
 10933  002268  0E00               	movlw	0
 10934  00226A  6E06               	movwf	(___fladd@b+2)^0,c
 10935  00226C  0E00               	movlw	0
 10936  00226E  6E07               	movwf	(___fladd@b+3)^0,c
 10937  002270  C011  F012         	movff	___fladd@aexp,___fladd@bexp
 10938  002274  EF62  F011         	goto	l1315
 10939  002278                     l1317:
 10940  002278  A013               	btfss	___fladd@grs^0,0,c
 10941  00227A  EF41  F011         	goto	u8641
 10942  00227E  EF43  F011         	goto	u8640
 10943  002282                     u8641:
 10944  002282  EF49  F011         	goto	l7194
 10945  002286                     u8640:
 10946  002286  90D8               	bcf	status,0,c
 10947  002288  3013               	rrcf	___fladd@grs^0,w,c
 10948  00228A  0901               	iorlw	1
 10949  00228C  6E13               	movwf	___fladd@grs^0,c
 10950  00228E  EF4B  F011         	goto	l7196
 10951  002292                     l7194:
 10952  002292  90D8               	bcf	status,0,c
 10953  002294  3213               	rrcf	___fladd@grs^0,f,c
 10954  002296                     l7196:
 10955  002296  A004               	btfss	___fladd@b^0,0,c
 10956  002298  EF50  F011         	goto	u8651
 10957  00229C  EF52  F011         	goto	u8650
 10958  0022A0                     u8651:
 10959  0022A0  EF53  F011         	goto	l7200
 10960  0022A4                     u8650:
 10961  0022A4  8E13               	bsf	___fladd@grs^0,7,c
 10962  0022A6                     l7200:
 10963  0022A6  3407               	rlcf	(___fladd@b+3)^0,w,c
 10964  0022A8  3207               	rrcf	(___fladd@b+3)^0,f,c
 10965  0022AA  3206               	rrcf	(___fladd@b+2)^0,f,c
 10966  0022AC  3205               	rrcf	(___fladd@b+1)^0,f,c
 10967  0022AE  3204               	rrcf	___fladd@b^0,f,c
 10968  0022B0  2A12               	incf	___fladd@bexp^0,f,c
 10969  0022B2                     l1316:
 10970  0022B2  5011               	movf	___fladd@aexp^0,w,c
 10971  0022B4  5C12               	subwf	___fladd@bexp^0,w,c
 10972  0022B6  A0D8               	btfss	status,0,c
 10973  0022B8  EF60  F011         	goto	u8661
 10974  0022BC  EF62  F011         	goto	u8660
 10975  0022C0                     u8661:
 10976  0022C0  EF3C  F011         	goto	l1317
 10977  0022C4                     u8660:
 10978  0022C4                     l1315:
 10979  0022C4  BC10               	btfsc	___fladd@signs^0,6,c
 10980  0022C6  EF67  F011         	goto	u8671
 10981  0022CA  EF69  F011         	goto	u8670
 10982  0022CE                     u8671:
 10983  0022CE  EFA9  F011         	goto	l7228
 10984  0022D2                     u8670:
 10985  0022D2  5012               	movf	___fladd@bexp^0,w,c
 10986  0022D4  A4D8               	btfss	status,2,c
 10987  0022D6  EF6F  F011         	goto	u8681
 10988  0022DA  EF71  F011         	goto	u8680
 10989  0022DE                     u8681:
 10990  0022DE  EF7B  F011         	goto	l7210
 10991  0022E2                     u8680:
 10992  0022E2  0E00               	movlw	0
 10993  0022E4  6E04               	movwf	?___fladd^0,c
 10994  0022E6  0E00               	movlw	0
 10995  0022E8  6E05               	movwf	(?___fladd+1)^0,c
 10996  0022EA  0E00               	movlw	0
 10997  0022EC  6E06               	movwf	(?___fladd+2)^0,c
 10998  0022EE  0E00               	movlw	0
 10999  0022F0  6E07               	movwf	(?___fladd+3)^0,c
 11000  0022F2  EFCA  F012         	goto	l1324
 11001  0022F6                     l7210:
 11002  0022F6  5008               	movf	___fladd@a^0,w,c
 11003  0022F8  2604               	addwf	___fladd@b^0,f,c
 11004  0022FA  5009               	movf	(___fladd@a+1)^0,w,c
 11005  0022FC  2205               	addwfc	(___fladd@b+1)^0,f,c
 11006  0022FE  500A               	movf	(___fladd@a+2)^0,w,c
 11007  002300  2206               	addwfc	(___fladd@b+2)^0,f,c
 11008  002302  500B               	movf	(___fladd@a+3)^0,w,c
 11009  002304  2207               	addwfc	(___fladd@b+3)^0,f,c
 11010  002306  A007               	btfss	(___fladd@b+3)^0,0,c
 11011  002308  EF88  F011         	goto	u8691
 11012  00230C  EF8A  F011         	goto	u8690
 11013  002310                     u8691:
 11014  002310  EF36  F012         	goto	l7264
 11015  002314                     u8690:
 11016  002314  A013               	btfss	___fladd@grs^0,0,c
 11017  002316  EF8F  F011         	goto	u8701
 11018  00231A  EF91  F011         	goto	u8700
 11019  00231E                     u8701:
 11020  00231E  EF97  F011         	goto	l7218
 11021  002322                     u8700:
 11022  002322  90D8               	bcf	status,0,c
 11023  002324  3013               	rrcf	___fladd@grs^0,w,c
 11024  002326  0901               	iorlw	1
 11025  002328  6E13               	movwf	___fladd@grs^0,c
 11026  00232A  EF99  F011         	goto	l7220
 11027  00232E                     l7218:
 11028  00232E  90D8               	bcf	status,0,c
 11029  002330  3213               	rrcf	___fladd@grs^0,f,c
 11030  002332                     l7220:
 11031  002332  A004               	btfss	___fladd@b^0,0,c
 11032  002334  EF9E  F011         	goto	u8711
 11033  002338  EFA0  F011         	goto	u8710
 11034  00233C                     u8711:
 11035  00233C  EFA1  F011         	goto	l7224
 11036  002340                     u8710:
 11037  002340  8E13               	bsf	___fladd@grs^0,7,c
 11038  002342                     l7224:
 11039  002342  3407               	rlcf	(___fladd@b+3)^0,w,c
 11040  002344  3207               	rrcf	(___fladd@b+3)^0,f,c
 11041  002346  3206               	rrcf	(___fladd@b+2)^0,f,c
 11042  002348  3205               	rrcf	(___fladd@b+1)^0,f,c
 11043  00234A  3204               	rrcf	___fladd@b^0,f,c
 11044  00234C  2A12               	incf	___fladd@bexp^0,f,c
 11045  00234E  EF36  F012         	goto	l7264
 11046  002352                     l7228:
 11047  002352  5008               	movf	___fladd@a^0,w,c
 11048  002354  5C04               	subwf	___fladd@b^0,w,c
 11049  002356  5009               	movf	(___fladd@a+1)^0,w,c
 11050  002358  5805               	subwfb	(___fladd@b+1)^0,w,c
 11051  00235A  500A               	movf	(___fladd@a+2)^0,w,c
 11052  00235C  5806               	subwfb	(___fladd@b+2)^0,w,c
 11053  00235E  5007               	movf	(___fladd@b+3)^0,w,c
 11054  002360  0A80               	xorlw	128
 11055  002362  6E0C               	movwf	??___fladd^0,c
 11056  002364  500B               	movf	(___fladd@a+3)^0,w,c
 11057  002366  0A80               	xorlw	128
 11058  002368  580C               	subwfb	??___fladd^0,w,c
 11059  00236A  B0D8               	btfsc	status,0,c
 11060  00236C  EFBA  F011         	goto	u8721
 11061  002370  EFBC  F011         	goto	u8720
 11062  002374                     u8721:
 11063  002374  EFE7  F011         	goto	l7238
 11064  002378                     u8720:
 11065  002378  5004               	movf	___fladd@b^0,w,c
 11066  00237A  5C08               	subwf	___fladd@a^0,w,c
 11067  00237C  6E0C               	movwf	??___fladd^0,c
 11068  00237E  5005               	movf	(___fladd@b+1)^0,w,c
 11069  002380  5809               	subwfb	(___fladd@a+1)^0,w,c
 11070  002382  6E0D               	movwf	(??___fladd+1)^0,c
 11071  002384  5006               	movf	(___fladd@b+2)^0,w,c
 11072  002386  580A               	subwfb	(___fladd@a+2)^0,w,c
 11073  002388  6E0E               	movwf	(??___fladd+2)^0,c
 11074  00238A  5007               	movf	(___fladd@b+3)^0,w,c
 11075  00238C  580B               	subwfb	(___fladd@a+3)^0,w,c
 11076  00238E  6E0F               	movwf	(??___fladd+3)^0,c
 11077  002390  0EFF               	movlw	255
 11078  002392  240C               	addwf	??___fladd^0,w,c
 11079  002394  6E04               	movwf	___fladd@b^0,c
 11080  002396  0EFF               	movlw	255
 11081  002398  200D               	addwfc	(??___fladd+1)^0,w,c
 11082  00239A  6E05               	movwf	(___fladd@b+1)^0,c
 11083  00239C  0EFF               	movlw	255
 11084  00239E  200E               	addwfc	(??___fladd+2)^0,w,c
 11085  0023A0  6E06               	movwf	(___fladd@b+2)^0,c
 11086  0023A2  0EFF               	movlw	255
 11087  0023A4  200F               	addwfc	(??___fladd+3)^0,w,c
 11088  0023A6  6E07               	movwf	(___fladd@b+3)^0,c
 11089  0023A8  0E80               	movlw	128
 11090  0023AA  1A10               	xorwf	___fladd@signs^0,f,c
 11091  0023AC  6C13               	negf	___fladd@grs^0,c
 11092  0023AE  5013               	movf	___fladd@grs^0,w,c
 11093  0023B0  A4D8               	btfss	status,2,c
 11094  0023B2  EFDD  F011         	goto	u8731
 11095  0023B6  EFDF  F011         	goto	u8730
 11096  0023BA                     u8731:
 11097  0023BA  EFEF  F011         	goto	l1332
 11098  0023BE                     u8730:
 11099  0023BE  0E01               	movlw	1
 11100  0023C0  2604               	addwf	___fladd@b^0,f,c
 11101  0023C2  0E00               	movlw	0
 11102  0023C4  2205               	addwfc	(___fladd@b+1)^0,f,c
 11103  0023C6  2206               	addwfc	(___fladd@b+2)^0,f,c
 11104  0023C8  2207               	addwfc	(___fladd@b+3)^0,f,c
 11105  0023CA  EFEF  F011         	goto	l1332
 11106  0023CE                     l7238:
 11107  0023CE  5008               	movf	___fladd@a^0,w,c
 11108  0023D0  5E04               	subwf	___fladd@b^0,f,c
 11109  0023D2  5009               	movf	(___fladd@a+1)^0,w,c
 11110  0023D4  5A05               	subwfb	(___fladd@b+1)^0,f,c
 11111  0023D6  500A               	movf	(___fladd@a+2)^0,w,c
 11112  0023D8  5A06               	subwfb	(___fladd@b+2)^0,f,c
 11113  0023DA  500B               	movf	(___fladd@a+3)^0,w,c
 11114  0023DC  5A07               	subwfb	(___fladd@b+3)^0,f,c
 11115  0023DE                     l1332:
 11116  0023DE  5004               	movf	___fladd@b^0,w,c
 11117  0023E0  1005               	iorwf	(___fladd@b+1)^0,w,c
 11118  0023E2  1006               	iorwf	(___fladd@b+2)^0,w,c
 11119  0023E4  1007               	iorwf	(___fladd@b+3)^0,w,c
 11120  0023E6  A4D8               	btfss	status,2,c
 11121  0023E8  EFF8  F011         	goto	u8741
 11122  0023EC  EFFA  F011         	goto	u8740
 11123  0023F0                     u8741:
 11124  0023F0  EF2F  F012         	goto	l7262
 11125  0023F4                     u8740:
 11126  0023F4  5013               	movf	___fladd@grs^0,w,c
 11127  0023F6  A4D8               	btfss	status,2,c
 11128  0023F8  EF00  F012         	goto	u8751
 11129  0023FC  EF02  F012         	goto	u8750
 11130  002400                     u8751:
 11131  002400  EF2F  F012         	goto	l7262
 11132  002404                     u8750:
 11133  002404  0E00               	movlw	0
 11134  002406  6E04               	movwf	?___fladd^0,c
 11135  002408  0E00               	movlw	0
 11136  00240A  6E05               	movwf	(?___fladd+1)^0,c
 11137  00240C  0E00               	movlw	0
 11138  00240E  6E06               	movwf	(?___fladd+2)^0,c
 11139  002410  0E00               	movlw	0
 11140  002412  6E07               	movwf	(?___fladd+3)^0,c
 11141  002414  EFCA  F012         	goto	l1324
 11142  002418                     l7246:
 11143  002418  90D8               	bcf	status,0,c
 11144  00241A  3604               	rlcf	___fladd@b^0,f,c
 11145  00241C  3605               	rlcf	(___fladd@b+1)^0,f,c
 11146  00241E  3606               	rlcf	(___fladd@b+2)^0,f,c
 11147  002420  3607               	rlcf	(___fladd@b+3)^0,f,c
 11148  002422  AE13               	btfss	___fladd@grs^0,7,c
 11149  002424  EF16  F012         	goto	u8761
 11150  002428  EF18  F012         	goto	u8760
 11151  00242C                     u8761:
 11152  00242C  EF19  F012         	goto	l7252
 11153  002430                     u8760:
 11154  002430  8004               	bsf	___fladd@b^0,0,c
 11155  002432                     l7252:
 11156  002432  A013               	btfss	___fladd@grs^0,0,c
 11157  002434  EF1E  F012         	goto	u8771
 11158  002438  EF20  F012         	goto	u8770
 11159  00243C                     u8771:
 11160  00243C  EF24  F012         	goto	l7256
 11161  002440                     u8770:
 11162  002440  80D8               	bsf	status,0,c
 11163  002442  3613               	rlcf	___fladd@grs^0,f,c
 11164  002444  EF26  F012         	goto	l7258
 11165  002448                     l7256:
 11166  002448  90D8               	bcf	status,0,c
 11167  00244A  3613               	rlcf	___fladd@grs^0,f,c
 11168  00244C                     l7258:
 11169  00244C  5012               	movf	___fladd@bexp^0,w,c
 11170  00244E  B4D8               	btfsc	status,2,c
 11171  002450  EF2C  F012         	goto	u8781
 11172  002454  EF2E  F012         	goto	u8780
 11173  002458                     u8781:
 11174  002458  EF2F  F012         	goto	l7262
 11175  00245C                     u8780:
 11176  00245C  0612               	decf	___fladd@bexp^0,f,c
 11177  00245E                     l7262:
 11178  00245E  AE06               	btfss	(___fladd@b+2)^0,7,c
 11179  002460  EF34  F012         	goto	u8791
 11180  002464  EF36  F012         	goto	u8790
 11181  002468                     u8791:
 11182  002468  EF0C  F012         	goto	l7246
 11183  00246C                     u8790:
 11184  00246C                     l7264:
 11185  00246C  0E00               	movlw	0
 11186  00246E  6E11               	movwf	___fladd@aexp^0,c
 11187  002470  AE13               	btfss	___fladd@grs^0,7,c
 11188  002472  EF3D  F012         	goto	u8801
 11189  002476  EF3F  F012         	goto	u8800
 11190  00247A                     u8801:
 11191  00247A  EF57  F012         	goto	l1341
 11192  00247E                     u8800:
 11193  00247E  C013  F00C         	movff	___fladd@grs,??___fladd
 11194  002482  0E7F               	movlw	127
 11195  002484  160C               	andwf	??___fladd^0,f,c
 11196  002486  B4D8               	btfsc	status,2,c
 11197  002488  EF48  F012         	goto	u8811
 11198  00248C  EF4A  F012         	goto	u8810
 11199  002490                     u8811:
 11200  002490  EF4E  F012         	goto	l1342
 11201  002494                     u8810:
 11202  002494                     l7270:
 11203  002494  0E01               	movlw	1
 11204  002496  6E11               	movwf	___fladd@aexp^0,c
 11205  002498  EF57  F012         	goto	l1341
 11206  00249C                     l1342:
 11207  00249C  A004               	btfss	___fladd@b^0,0,c
 11208  00249E  EF53  F012         	goto	u8821
 11209  0024A2  EF55  F012         	goto	u8820
 11210  0024A6                     u8821:
 11211  0024A6  EF57  F012         	goto	l1341
 11212  0024AA                     u8820:
 11213  0024AA  EF4A  F012         	goto	l7270
 11214  0024AE                     l1341:
 11215  0024AE  5011               	movf	___fladd@aexp^0,w,c
 11216  0024B0  B4D8               	btfsc	status,2,c
 11217  0024B2  EF5D  F012         	goto	u8831
 11218  0024B6  EF5F  F012         	goto	u8830
 11219  0024BA                     u8831:
 11220  0024BA  EF8A  F012         	goto	l7282
 11221  0024BE                     u8830:
 11222  0024BE  0E01               	movlw	1
 11223  0024C0  2604               	addwf	___fladd@b^0,f,c
 11224  0024C2  0E00               	movlw	0
 11225  0024C4  2205               	addwfc	(___fladd@b+1)^0,f,c
 11226  0024C6  2206               	addwfc	(___fladd@b+2)^0,f,c
 11227  0024C8  2207               	addwfc	(___fladd@b+3)^0,f,c
 11228  0024CA  A007               	btfss	(___fladd@b+3)^0,0,c
 11229  0024CC  EF6A  F012         	goto	u8841
 11230  0024D0  EF6C  F012         	goto	u8840
 11231  0024D4                     u8841:
 11232  0024D4  EF8A  F012         	goto	l7282
 11233  0024D8                     u8840:
 11234  0024D8  C004  F00C         	movff	___fladd@b,??___fladd
 11235  0024DC  C005  F00D         	movff	___fladd@b+1,??___fladd+1
 11236  0024E0  C006  F00E         	movff	___fladd@b+2,??___fladd+2
 11237  0024E4  C007  F00F         	movff	___fladd@b+3,??___fladd+3
 11238  0024E8  340F               	rlcf	(??___fladd+3)^0,w,c
 11239  0024EA  320F               	rrcf	(??___fladd+3)^0,f,c
 11240  0024EC  320E               	rrcf	(??___fladd+2)^0,f,c
 11241  0024EE  320D               	rrcf	(??___fladd+1)^0,f,c
 11242  0024F0  320C               	rrcf	??___fladd^0,f,c
 11243  0024F2  C00C  F004         	movff	??___fladd,___fladd@b
 11244  0024F6  C00D  F005         	movff	??___fladd+1,___fladd@b+1
 11245  0024FA  C00E  F006         	movff	??___fladd+2,___fladd@b+2
 11246  0024FE  C00F  F007         	movff	??___fladd+3,___fladd@b+3
 11247  002502  2812               	incf	___fladd@bexp^0,w,c
 11248  002504  B4D8               	btfsc	status,2,c
 11249  002506  EF87  F012         	goto	u8851
 11250  00250A  EF89  F012         	goto	u8850
 11251  00250E                     u8851:
 11252  00250E  EF8A  F012         	goto	l7282
 11253  002512                     u8850:
 11254  002512  2A12               	incf	___fladd@bexp^0,f,c
 11255  002514                     l7282:
 11256  002514  2812               	incf	___fladd@bexp^0,w,c
 11257  002516  B4D8               	btfsc	status,2,c
 11258  002518  EF90  F012         	goto	u8861
 11259  00251C  EF92  F012         	goto	u8860
 11260  002520                     u8861:
 11261  002520  EF9A  F012         	goto	l7286
 11262  002524                     u8860:
 11263  002524  5012               	movf	___fladd@bexp^0,w,c
 11264  002526  A4D8               	btfss	status,2,c
 11265  002528  EF98  F012         	goto	u8871
 11266  00252C  EF9A  F012         	goto	u8870
 11267  002530                     u8871:
 11268  002530  EFAC  F012         	goto	l7290
 11269  002534                     u8870:
 11270  002534                     l7286:
 11271  002534  0E00               	movlw	0
 11272  002536  6E04               	movwf	___fladd@b^0,c
 11273  002538  0E00               	movlw	0
 11274  00253A  6E05               	movwf	(___fladd@b+1)^0,c
 11275  00253C  0E00               	movlw	0
 11276  00253E  6E06               	movwf	(___fladd@b+2)^0,c
 11277  002540  0E00               	movlw	0
 11278  002542  6E07               	movwf	(___fladd@b+3)^0,c
 11279  002544  5012               	movf	___fladd@bexp^0,w,c
 11280  002546  A4D8               	btfss	status,2,c
 11281  002548  EFA8  F012         	goto	u8881
 11282  00254C  EFAA  F012         	goto	u8880
 11283  002550                     u8881:
 11284  002550  EFAC  F012         	goto	l7290
 11285  002554                     u8880:
 11286  002554  0E00               	movlw	0
 11287  002556  6E10               	movwf	___fladd@signs^0,c
 11288  002558                     l7290:
 11289  002558  A012               	btfss	___fladd@bexp^0,0,c
 11290  00255A  EFB1  F012         	goto	u8891
 11291  00255E  EFB3  F012         	goto	u8890
 11292  002562                     u8891:
 11293  002562  EFB6  F012         	goto	l7294
 11294  002566                     u8890:
 11295  002566  8E06               	bsf	(___fladd@b+2)^0,7,c
 11296  002568  EFB7  F012         	goto	l7296
 11297  00256C                     l7294:
 11298  00256C  9E06               	bcf	(___fladd@b+2)^0,7,c
 11299  00256E                     l7296:
 11300  00256E  90D8               	bcf	status,0,c
 11301  002570  3012               	rrcf	___fladd@bexp^0,w,c
 11302  002572  6E07               	movwf	(___fladd@b+3)^0,c
 11303  002574  AE10               	btfss	___fladd@signs^0,7,c
 11304  002576  EFBF  F012         	goto	u8901
 11305  00257A  EFC1  F012         	goto	u8900
 11306  00257E                     u8901:
 11307  00257E  EFC2  F012         	goto	l7302
 11308  002582                     u8900:
 11309  002582  8E07               	bsf	(___fladd@b+3)^0,7,c
 11310  002584                     l7302:
 11311  002584  C004  F004         	movff	___fladd@b,?___fladd
 11312  002588  C005  F005         	movff	___fladd@b+1,?___fladd+1
 11313  00258C  C006  F006         	movff	___fladd@b+2,?___fladd+2
 11314  002590  C007  F007         	movff	___fladd@b+3,?___fladd+3
 11315  002594                     l1324:
 11316  002594  0012               	return		;funcret
 11317  002596                     __end_of___fladd:
 11318                           	opt callstack 0
 11319                           
 11320 ;; *************** function ___flneg *****************
 11321 ;; Defined at:
 11322 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
 11323 ;; Parameters:    Size  Location     Type
 11324 ;;  f1              4    3[COMRAM] unsigned char 
 11325 ;; Auto vars:     Size  Location     Type
 11326 ;;		None
 11327 ;; Return value:  Size  Location     Type
 11328 ;;                  4    3[COMRAM] unsigned char 
 11329 ;; Registers used:
 11330 ;;		wreg, status,2, status,0
 11331 ;; Tracked objects:
 11332 ;;		On entry : 0/0
 11333 ;;		On exit  : 0/0
 11334 ;;		Unchanged: 0/0
 11335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11336 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11339 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11340 ;;Total ram usage:        4 bytes
 11341 ;; Hardware stack levels used:    1
 11342 ;; Hardware stack levels required when called:    4
 11343 ;; This function calls:
 11344 ;;		Nothing
 11345 ;; This function is called by:
 11346 ;;		_efgtoa
 11347 ;; This function uses a non-reentrant model
 11348 ;;
 11349                           
 11350                           	psect	text24
 11351  0059D4                     __ptext24:
 11352                           	opt callstack 0
 11353  0059D4                     ___flneg:
 11354                           	opt callstack 21
 11355  0059D4  5004               	movf	___flneg@f1^0,w,c
 11356  0059D6  1005               	iorwf	(___flneg@f1+1)^0,w,c
 11357  0059D8  1006               	iorwf	(___flneg@f1+2)^0,w,c
 11358  0059DA  1007               	iorwf	(___flneg@f1+3)^0,w,c
 11359  0059DC  B4D8               	btfsc	status,2,c
 11360  0059DE  EFF3  F02C         	goto	u10021
 11361  0059E2  EFF5  F02C         	goto	u10020
 11362  0059E6                     u10021:
 11363  0059E6  EFFD  F02C         	goto	l7900
 11364  0059EA                     u10020:
 11365  0059EA  0E00               	movlw	0
 11366  0059EC  1A04               	xorwf	___flneg@f1^0,f,c
 11367  0059EE  0E00               	movlw	0
 11368  0059F0  1A05               	xorwf	(___flneg@f1+1)^0,f,c
 11369  0059F2  0E00               	movlw	0
 11370  0059F4  1A06               	xorwf	(___flneg@f1+2)^0,f,c
 11371  0059F6  0E80               	movlw	128
 11372  0059F8  1A07               	xorwf	(___flneg@f1+3)^0,f,c
 11373  0059FA                     l7900:
 11374  0059FA  C004  F004         	movff	___flneg@f1,?___flneg
 11375  0059FE  C005  F005         	movff	___flneg@f1+1,?___flneg+1
 11376  005A02  C006  F006         	movff	___flneg@f1+2,?___flneg+2
 11377  005A06  C007  F007         	movff	___flneg@f1+3,?___flneg+3
 11378  005A0A  0012               	return		;funcret
 11379  005A0C                     __end_of___flneg:
 11380                           	opt callstack 0
 11381                           
 11382 ;; *************** function ___flmul *****************
 11383 ;; Defined at:
 11384 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 11385 ;; Parameters:    Size  Location     Type
 11386 ;;  b               4   17[COMRAM] unsigned char 
 11387 ;;  a               4   21[COMRAM] unsigned char 
 11388 ;; Auto vars:     Size  Location     Type
 11389 ;;  prod            4   36[COMRAM] struct .
 11390 ;;  grs             4   31[COMRAM] unsigned long 
 11391 ;;  temp            2   40[COMRAM] struct .
 11392 ;;  bexp            1   35[COMRAM] unsigned char 
 11393 ;;  aexp            1   30[COMRAM] unsigned char 
 11394 ;;  sign            1   29[COMRAM] unsigned char 
 11395 ;; Return value:  Size  Location     Type
 11396 ;;                  4   17[COMRAM] unsigned char 
 11397 ;; Registers used:
 11398 ;;		wreg, status,2, status,0, prodl, prodh
 11399 ;; Tracked objects:
 11400 ;;		On entry : 0/0
 11401 ;;		On exit  : 0/0
 11402 ;;		Unchanged: 0/0
 11403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11404 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11405 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11406 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11407 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11408 ;;Total ram usage:       25 bytes
 11409 ;; Hardware stack levels used:    1
 11410 ;; Hardware stack levels required when called:    4
 11411 ;; This function calls:
 11412 ;;		Nothing
 11413 ;; This function is called by:
 11414 ;;		_main
 11415 ;;		_efgtoa
 11416 ;; This function uses a non-reentrant model
 11417 ;;
 11418                           
 11419                           	psect	text25
 11420  002596                     __ptext25:
 11421                           	opt callstack 0
 11422  002596                     ___flmul:
 11423                           	opt callstack 21
 11424  002596  5015               	movf	(___flmul@b+3)^0,w,c
 11425  002598  0B80               	andlw	128
 11426  00259A  6E1E               	movwf	___flmul@sign^0,c
 11427  00259C  5015               	movf	(___flmul@b+3)^0,w,c
 11428  00259E  2415               	addwf	(___flmul@b+3)^0,w,c
 11429  0025A0  6E24               	movwf	___flmul@bexp^0,c
 11430  0025A2  AE14               	btfss	(___flmul@b+2)^0,7,c
 11431  0025A4  EFD6  F012         	goto	u9631
 11432  0025A8  EFD8  F012         	goto	u9630
 11433  0025AC                     u9631:
 11434  0025AC  EFD9  F012         	goto	l7648
 11435  0025B0                     u9630:
 11436  0025B0  8024               	bsf	___flmul@bexp^0,0,c
 11437  0025B2                     l7648:
 11438  0025B2  5024               	movf	___flmul@bexp^0,w,c
 11439  0025B4  B4D8               	btfsc	status,2,c
 11440  0025B6  EFDF  F012         	goto	u9641
 11441  0025BA  EFE1  F012         	goto	u9640
 11442  0025BE                     u9641:
 11443  0025BE  EFF4  F012         	goto	l7656
 11444  0025C2                     u9640:
 11445  0025C2  2824               	incf	___flmul@bexp^0,w,c
 11446  0025C4  A4D8               	btfss	status,2,c
 11447  0025C6  EFE7  F012         	goto	u9651
 11448  0025CA  EFE9  F012         	goto	u9650
 11449  0025CE                     u9651:
 11450  0025CE  EFF1  F012         	goto	l7654
 11451  0025D2                     u9650:
 11452  0025D2  0E00               	movlw	0
 11453  0025D4  6E12               	movwf	___flmul@b^0,c
 11454  0025D6  0E00               	movlw	0
 11455  0025D8  6E13               	movwf	(___flmul@b+1)^0,c
 11456  0025DA  0E00               	movlw	0
 11457  0025DC  6E14               	movwf	(___flmul@b+2)^0,c
 11458  0025DE  0E00               	movlw	0
 11459  0025E0  6E15               	movwf	(___flmul@b+3)^0,c
 11460  0025E2                     l7654:
 11461  0025E2  8E14               	bsf	(___flmul@b+2)^0,7,c
 11462  0025E4  EFFC  F012         	goto	l7658
 11463  0025E8                     l7656:
 11464  0025E8  0E00               	movlw	0
 11465  0025EA  6E12               	movwf	___flmul@b^0,c
 11466  0025EC  0E00               	movlw	0
 11467  0025EE  6E13               	movwf	(___flmul@b+1)^0,c
 11468  0025F0  0E00               	movlw	0
 11469  0025F2  6E14               	movwf	(___flmul@b+2)^0,c
 11470  0025F4  0E00               	movlw	0
 11471  0025F6  6E15               	movwf	(___flmul@b+3)^0,c
 11472  0025F8                     l7658:
 11473  0025F8  5019               	movf	(___flmul@a+3)^0,w,c
 11474  0025FA  0B80               	andlw	128
 11475  0025FC  1A1E               	xorwf	___flmul@sign^0,f,c
 11476  0025FE  5019               	movf	(___flmul@a+3)^0,w,c
 11477  002600  2419               	addwf	(___flmul@a+3)^0,w,c
 11478  002602  6E1F               	movwf	___flmul@aexp^0,c
 11479  002604  AE18               	btfss	(___flmul@a+2)^0,7,c
 11480  002606  EF07  F013         	goto	u9661
 11481  00260A  EF09  F013         	goto	u9660
 11482  00260E                     u9661:
 11483  00260E  EF0A  F013         	goto	l7666
 11484  002612                     u9660:
 11485  002612  801F               	bsf	___flmul@aexp^0,0,c
 11486  002614                     l7666:
 11487  002614  501F               	movf	___flmul@aexp^0,w,c
 11488  002616  B4D8               	btfsc	status,2,c
 11489  002618  EF10  F013         	goto	u9671
 11490  00261C  EF12  F013         	goto	u9670
 11491  002620                     u9671:
 11492  002620  EF25  F013         	goto	l7674
 11493  002624                     u9670:
 11494  002624  281F               	incf	___flmul@aexp^0,w,c
 11495  002626  A4D8               	btfss	status,2,c
 11496  002628  EF18  F013         	goto	u9681
 11497  00262C  EF1A  F013         	goto	u9680
 11498  002630                     u9681:
 11499  002630  EF22  F013         	goto	l7672
 11500  002634                     u9680:
 11501  002634  0E00               	movlw	0
 11502  002636  6E16               	movwf	___flmul@a^0,c
 11503  002638  0E00               	movlw	0
 11504  00263A  6E17               	movwf	(___flmul@a+1)^0,c
 11505  00263C  0E00               	movlw	0
 11506  00263E  6E18               	movwf	(___flmul@a+2)^0,c
 11507  002640  0E00               	movlw	0
 11508  002642  6E19               	movwf	(___flmul@a+3)^0,c
 11509  002644                     l7672:
 11510  002644  8E18               	bsf	(___flmul@a+2)^0,7,c
 11511  002646  EF2D  F013         	goto	l1401
 11512  00264A                     l7674:
 11513  00264A  0E00               	movlw	0
 11514  00264C  6E16               	movwf	___flmul@a^0,c
 11515  00264E  0E00               	movlw	0
 11516  002650  6E17               	movwf	(___flmul@a+1)^0,c
 11517  002652  0E00               	movlw	0
 11518  002654  6E18               	movwf	(___flmul@a+2)^0,c
 11519  002656  0E00               	movlw	0
 11520  002658  6E19               	movwf	(___flmul@a+3)^0,c
 11521  00265A                     l1401:
 11522  00265A  501F               	movf	___flmul@aexp^0,w,c
 11523  00265C  B4D8               	btfsc	status,2,c
 11524  00265E  EF33  F013         	goto	u9691
 11525  002662  EF35  F013         	goto	u9690
 11526  002666                     u9691:
 11527  002666  EF3D  F013         	goto	l7678
 11528  00266A                     u9690:
 11529  00266A  5024               	movf	___flmul@bexp^0,w,c
 11530  00266C  A4D8               	btfss	status,2,c
 11531  00266E  EF3B  F013         	goto	u9701
 11532  002672  EF3D  F013         	goto	u9700
 11533  002676                     u9701:
 11534  002676  EF47  F013         	goto	l7682
 11535  00267A                     u9700:
 11536  00267A                     l7678:
 11537  00267A  0E00               	movlw	0
 11538  00267C  6E12               	movwf	?___flmul^0,c
 11539  00267E  0E00               	movlw	0
 11540  002680  6E13               	movwf	(?___flmul+1)^0,c
 11541  002682  0E00               	movlw	0
 11542  002684  6E14               	movwf	(?___flmul+2)^0,c
 11543  002686  0E00               	movlw	0
 11544  002688  6E15               	movwf	(?___flmul+3)^0,c
 11545  00268A  EFDF  F014         	goto	l1405
 11546  00268E                     l7682:
 11547  00268E  5018               	movf	(___flmul@a+2)^0,w,c
 11548  002690  0212               	mulwf	___flmul@b^0,c
 11549  002692  CFF3 F029          	movff	prodl,___flmul@temp
 11550  002696  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11551  00269A  5029               	movf	___flmul@temp^0,w,c
 11552  00269C  6E20               	movwf	___flmul@grs^0,c
 11553  00269E  6A21               	clrf	(___flmul@grs+1)^0,c
 11554  0026A0  6A22               	clrf	(___flmul@grs+2)^0,c
 11555  0026A2  6A23               	clrf	(___flmul@grs+3)^0,c
 11556  0026A4  502A               	movf	(___flmul@temp+1)^0,w,c
 11557  0026A6  6E25               	movwf	___flmul@prod^0,c
 11558  0026A8  6A26               	clrf	(___flmul@prod+1)^0,c
 11559  0026AA  6A27               	clrf	(___flmul@prod+2)^0,c
 11560  0026AC  6A28               	clrf	(___flmul@prod+3)^0,c
 11561  0026AE  5017               	movf	(___flmul@a+1)^0,w,c
 11562  0026B0  0213               	mulwf	(___flmul@b+1)^0,c
 11563  0026B2  CFF3 F029          	movff	prodl,___flmul@temp
 11564  0026B6  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11565  0026BA  5029               	movf	___flmul@temp^0,w,c
 11566  0026BC  2620               	addwf	___flmul@grs^0,f,c
 11567  0026BE  0E00               	movlw	0
 11568  0026C0  2221               	addwfc	(___flmul@grs+1)^0,f,c
 11569  0026C2  2222               	addwfc	(___flmul@grs+2)^0,f,c
 11570  0026C4  2223               	addwfc	(___flmul@grs+3)^0,f,c
 11571  0026C6  502A               	movf	(___flmul@temp+1)^0,w,c
 11572  0026C8  2625               	addwf	___flmul@prod^0,f,c
 11573  0026CA  0E00               	movlw	0
 11574  0026CC  2226               	addwfc	(___flmul@prod+1)^0,f,c
 11575  0026CE  2227               	addwfc	(___flmul@prod+2)^0,f,c
 11576  0026D0  2228               	addwfc	(___flmul@prod+3)^0,f,c
 11577  0026D2  5016               	movf	___flmul@a^0,w,c
 11578  0026D4  0214               	mulwf	(___flmul@b+2)^0,c
 11579  0026D6  CFF3 F029          	movff	prodl,___flmul@temp
 11580  0026DA  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11581  0026DE  5029               	movf	___flmul@temp^0,w,c
 11582  0026E0  2620               	addwf	___flmul@grs^0,f,c
 11583  0026E2  0E00               	movlw	0
 11584  0026E4  2221               	addwfc	(___flmul@grs+1)^0,f,c
 11585  0026E6  2222               	addwfc	(___flmul@grs+2)^0,f,c
 11586  0026E8  2223               	addwfc	(___flmul@grs+3)^0,f,c
 11587  0026EA  502A               	movf	(___flmul@temp+1)^0,w,c
 11588  0026EC  2625               	addwf	___flmul@prod^0,f,c
 11589  0026EE  0E00               	movlw	0
 11590  0026F0  2226               	addwfc	(___flmul@prod+1)^0,f,c
 11591  0026F2  2227               	addwfc	(___flmul@prod+2)^0,f,c
 11592  0026F4  2228               	addwfc	(___flmul@prod+3)^0,f,c
 11593  0026F6  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 11594  0026FA  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 11595  0026FE  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 11596  002702  6A20               	clrf	___flmul@grs^0,c
 11597  002704  5016               	movf	___flmul@a^0,w,c
 11598  002706  0213               	mulwf	(___flmul@b+1)^0,c
 11599  002708  CFF3 F029          	movff	prodl,___flmul@temp
 11600  00270C  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11601  002710  5029               	movf	___flmul@temp^0,w,c
 11602  002712  2620               	addwf	___flmul@grs^0,f,c
 11603  002714  502A               	movf	(___flmul@temp+1)^0,w,c
 11604  002716  2221               	addwfc	(___flmul@grs+1)^0,f,c
 11605  002718  0E00               	movlw	0
 11606  00271A  2222               	addwfc	(___flmul@grs+2)^0,f,c
 11607  00271C  0E00               	movlw	0
 11608  00271E  2223               	addwfc	(___flmul@grs+3)^0,f,c
 11609  002720  5017               	movf	(___flmul@a+1)^0,w,c
 11610  002722  0212               	mulwf	___flmul@b^0,c
 11611  002724  CFF3 F029          	movff	prodl,___flmul@temp
 11612  002728  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11613  00272C  5029               	movf	___flmul@temp^0,w,c
 11614  00272E  2620               	addwf	___flmul@grs^0,f,c
 11615  002730  502A               	movf	(___flmul@temp+1)^0,w,c
 11616  002732  2221               	addwfc	(___flmul@grs+1)^0,f,c
 11617  002734  0E00               	movlw	0
 11618  002736  2222               	addwfc	(___flmul@grs+2)^0,f,c
 11619  002738  0E00               	movlw	0
 11620  00273A  2223               	addwfc	(___flmul@grs+3)^0,f,c
 11621  00273C  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 11622  002740  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 11623  002744  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 11624  002748  6A20               	clrf	___flmul@grs^0,c
 11625  00274A  5016               	movf	___flmul@a^0,w,c
 11626  00274C  0212               	mulwf	___flmul@b^0,c
 11627  00274E  CFF3 F029          	movff	prodl,___flmul@temp
 11628  002752  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11629  002756  5029               	movf	___flmul@temp^0,w,c
 11630  002758  2620               	addwf	___flmul@grs^0,f,c
 11631  00275A  502A               	movf	(___flmul@temp+1)^0,w,c
 11632  00275C  2221               	addwfc	(___flmul@grs+1)^0,f,c
 11633  00275E  0E00               	movlw	0
 11634  002760  2222               	addwfc	(___flmul@grs+2)^0,f,c
 11635  002762  0E00               	movlw	0
 11636  002764  2223               	addwfc	(___flmul@grs+3)^0,f,c
 11637  002766  5018               	movf	(___flmul@a+2)^0,w,c
 11638  002768  0213               	mulwf	(___flmul@b+1)^0,c
 11639  00276A  CFF3 F029          	movff	prodl,___flmul@temp
 11640  00276E  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11641  002772  5029               	movf	___flmul@temp^0,w,c
 11642  002774  2625               	addwf	___flmul@prod^0,f,c
 11643  002776  502A               	movf	(___flmul@temp+1)^0,w,c
 11644  002778  2226               	addwfc	(___flmul@prod+1)^0,f,c
 11645  00277A  0E00               	movlw	0
 11646  00277C  2227               	addwfc	(___flmul@prod+2)^0,f,c
 11647  00277E  0E00               	movlw	0
 11648  002780  2228               	addwfc	(___flmul@prod+3)^0,f,c
 11649  002782  5017               	movf	(___flmul@a+1)^0,w,c
 11650  002784  0214               	mulwf	(___flmul@b+2)^0,c
 11651  002786  CFF3 F029          	movff	prodl,___flmul@temp
 11652  00278A  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11653  00278E  5029               	movf	___flmul@temp^0,w,c
 11654  002790  2625               	addwf	___flmul@prod^0,f,c
 11655  002792  502A               	movf	(___flmul@temp+1)^0,w,c
 11656  002794  2226               	addwfc	(___flmul@prod+1)^0,f,c
 11657  002796  0E00               	movlw	0
 11658  002798  2227               	addwfc	(___flmul@prod+2)^0,f,c
 11659  00279A  0E00               	movlw	0
 11660  00279C  2228               	addwfc	(___flmul@prod+3)^0,f,c
 11661  00279E  5018               	movf	(___flmul@a+2)^0,w,c
 11662  0027A0  0214               	mulwf	(___flmul@b+2)^0,c
 11663  0027A2  CFF3 F029          	movff	prodl,___flmul@temp
 11664  0027A6  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11665  0027AA  5029               	movf	___flmul@temp^0,w,c
 11666  0027AC  6E1A               	movwf	??___flmul^0,c
 11667  0027AE  502A               	movf	(___flmul@temp+1)^0,w,c
 11668  0027B0  6E1B               	movwf	(??___flmul+1)^0,c
 11669  0027B2  6A1C               	clrf	(??___flmul+2)^0,c
 11670  0027B4  6A1D               	clrf	(??___flmul+3)^0,c
 11671  0027B6  C01C  F01D         	movff	??___flmul+2,??___flmul+3
 11672  0027BA  C01B  F01C         	movff	??___flmul+1,??___flmul+2
 11673  0027BE  C01A  F01B         	movff	??___flmul,??___flmul+1
 11674  0027C2  6A1A               	clrf	??___flmul^0,c
 11675  0027C4  501A               	movf	??___flmul^0,w,c
 11676  0027C6  2625               	addwf	___flmul@prod^0,f,c
 11677  0027C8  501B               	movf	(??___flmul+1)^0,w,c
 11678  0027CA  2226               	addwfc	(___flmul@prod+1)^0,f,c
 11679  0027CC  501C               	movf	(??___flmul+2)^0,w,c
 11680  0027CE  2227               	addwfc	(___flmul@prod+2)^0,f,c
 11681  0027D0  501D               	movf	(??___flmul+3)^0,w,c
 11682  0027D2  2228               	addwfc	(___flmul@prod+3)^0,f,c
 11683  0027D4  C020  F01A         	movff	___flmul@grs,??___flmul
 11684  0027D8  C021  F01B         	movff	___flmul@grs+1,??___flmul+1
 11685  0027DC  C022  F01C         	movff	___flmul@grs+2,??___flmul+2
 11686  0027E0  C023  F01D         	movff	___flmul@grs+3,??___flmul+3
 11687  0027E4  0E19               	movlw	25
 11688  0027E6  EFFA  F013         	goto	u9710
 11689  0027EA                     u9715:
 11690  0027EA  90D8               	bcf	status,0,c
 11691  0027EC  321D               	rrcf	(??___flmul+3)^0,f,c
 11692  0027EE  321C               	rrcf	(??___flmul+2)^0,f,c
 11693  0027F0  321B               	rrcf	(??___flmul+1)^0,f,c
 11694  0027F2  321A               	rrcf	??___flmul^0,f,c
 11695  0027F4                     u9710:
 11696  0027F4  2EE8               	decfsz	wreg,f,c
 11697  0027F6  EFF5  F013         	goto	u9715
 11698  0027FA  501A               	movf	??___flmul^0,w,c
 11699  0027FC  2625               	addwf	___flmul@prod^0,f,c
 11700  0027FE  501B               	movf	(??___flmul+1)^0,w,c
 11701  002800  2226               	addwfc	(___flmul@prod+1)^0,f,c
 11702  002802  501C               	movf	(??___flmul+2)^0,w,c
 11703  002804  2227               	addwfc	(___flmul@prod+2)^0,f,c
 11704  002806  501D               	movf	(??___flmul+3)^0,w,c
 11705  002808  2228               	addwfc	(___flmul@prod+3)^0,f,c
 11706  00280A  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 11707  00280E  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 11708  002812  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 11709  002816  6A20               	clrf	___flmul@grs^0,c
 11710  002818  501F               	movf	___flmul@aexp^0,w,c
 11711  00281A  C024  F01A         	movff	___flmul@bexp,??___flmul
 11712  00281E  6A1B               	clrf	(??___flmul+1)^0,c
 11713  002820  261A               	addwf	??___flmul^0,f,c
 11714  002822  0E00               	movlw	0
 11715  002824  221B               	addwfc	(??___flmul+1)^0,f,c
 11716  002826  0E82               	movlw	130
 11717  002828  241A               	addwf	??___flmul^0,w,c
 11718  00282A  6E29               	movwf	___flmul@temp^0,c
 11719  00282C  0EFF               	movlw	255
 11720  00282E  201B               	addwfc	(??___flmul+1)^0,w,c
 11721  002830  6E2A               	movwf	(___flmul@temp+1)^0,c
 11722  002832  EF30  F014         	goto	l7730
 11723  002836                     l7724:
 11724  002836  90D8               	bcf	status,0,c
 11725  002838  3625               	rlcf	___flmul@prod^0,f,c
 11726  00283A  3626               	rlcf	(___flmul@prod+1)^0,f,c
 11727  00283C  3627               	rlcf	(___flmul@prod+2)^0,f,c
 11728  00283E  3628               	rlcf	(___flmul@prod+3)^0,f,c
 11729  002840  AE23               	btfss	(___flmul@grs+3)^0,7,c
 11730  002842  EF25  F014         	goto	u9721
 11731  002846  EF27  F014         	goto	u9720
 11732  00284A                     u9721:
 11733  00284A  EF28  F014         	goto	l1408
 11734  00284E                     u9720:
 11735  00284E  8025               	bsf	___flmul@prod^0,0,c
 11736  002850                     l1408:
 11737  002850  90D8               	bcf	status,0,c
 11738  002852  3620               	rlcf	___flmul@grs^0,f,c
 11739  002854  3621               	rlcf	(___flmul@grs+1)^0,f,c
 11740  002856  3622               	rlcf	(___flmul@grs+2)^0,f,c
 11741  002858  3623               	rlcf	(___flmul@grs+3)^0,f,c
 11742  00285A  0629               	decf	___flmul@temp^0,f,c
 11743  00285C  A0D8               	btfss	status,0,c
 11744  00285E  062A               	decf	(___flmul@temp+1)^0,f,c
 11745  002860                     l7730:
 11746  002860  AE27               	btfss	(___flmul@prod+2)^0,7,c
 11747  002862  EF35  F014         	goto	u9731
 11748  002866  EF37  F014         	goto	u9730
 11749  00286A                     u9731:
 11750  00286A  EF1B  F014         	goto	l7724
 11751  00286E                     u9730:
 11752  00286E  0E00               	movlw	0
 11753  002870  6E1F               	movwf	___flmul@aexp^0,c
 11754  002872  AE23               	btfss	(___flmul@grs+3)^0,7,c
 11755  002874  EF3E  F014         	goto	u9741
 11756  002878  EF40  F014         	goto	u9740
 11757  00287C                     u9741:
 11758  00287C  EF64  F014         	goto	l1410
 11759  002880                     u9740:
 11760  002880  0EFF               	movlw	255
 11761  002882  1420               	andwf	___flmul@grs^0,w,c
 11762  002884  6E1A               	movwf	??___flmul^0,c
 11763  002886  0EFF               	movlw	255
 11764  002888  1421               	andwf	(___flmul@grs+1)^0,w,c
 11765  00288A  6E1B               	movwf	(??___flmul+1)^0,c
 11766  00288C  0EFF               	movlw	255
 11767  00288E  1422               	andwf	(___flmul@grs+2)^0,w,c
 11768  002890  6E1C               	movwf	(??___flmul+2)^0,c
 11769  002892  0E7F               	movlw	127
 11770  002894  1423               	andwf	(___flmul@grs+3)^0,w,c
 11771  002896  6E1D               	movwf	(??___flmul+3)^0,c
 11772  002898  501A               	movf	??___flmul^0,w,c
 11773  00289A  101B               	iorwf	(??___flmul+1)^0,w,c
 11774  00289C  101C               	iorwf	(??___flmul+2)^0,w,c
 11775  00289E  101D               	iorwf	(??___flmul+3)^0,w,c
 11776  0028A0  B4D8               	btfsc	status,2,c
 11777  0028A2  EF55  F014         	goto	u9751
 11778  0028A6  EF57  F014         	goto	u9750
 11779  0028AA                     u9751:
 11780  0028AA  EF5B  F014         	goto	l1411
 11781  0028AE                     u9750:
 11782  0028AE                     l7738:
 11783  0028AE  0E01               	movlw	1
 11784  0028B0  6E1F               	movwf	___flmul@aexp^0,c
 11785  0028B2  EF64  F014         	goto	l1410
 11786  0028B6                     l1411:
 11787  0028B6  A025               	btfss	___flmul@prod^0,0,c
 11788  0028B8  EF60  F014         	goto	u9761
 11789  0028BC  EF62  F014         	goto	u9760
 11790  0028C0                     u9761:
 11791  0028C0  EF64  F014         	goto	l1410
 11792  0028C4                     u9760:
 11793  0028C4  EF57  F014         	goto	l7738
 11794  0028C8                     l1410:
 11795  0028C8  501F               	movf	___flmul@aexp^0,w,c
 11796  0028CA  B4D8               	btfsc	status,2,c
 11797  0028CC  EF6A  F014         	goto	u9771
 11798  0028D0  EF6C  F014         	goto	u9770
 11799  0028D4                     u9771:
 11800  0028D4  EF90  F014         	goto	l7750
 11801  0028D8                     u9770:
 11802  0028D8  0E01               	movlw	1
 11803  0028DA  2625               	addwf	___flmul@prod^0,f,c
 11804  0028DC  0E00               	movlw	0
 11805  0028DE  2226               	addwfc	(___flmul@prod+1)^0,f,c
 11806  0028E0  2227               	addwfc	(___flmul@prod+2)^0,f,c
 11807  0028E2  2228               	addwfc	(___flmul@prod+3)^0,f,c
 11808  0028E4  A028               	btfss	(___flmul@prod+3)^0,0,c
 11809  0028E6  EF77  F014         	goto	u9781
 11810  0028EA  EF79  F014         	goto	u9780
 11811  0028EE                     u9781:
 11812  0028EE  EF90  F014         	goto	l7750
 11813  0028F2                     u9780:
 11814  0028F2  C025  F01A         	movff	___flmul@prod,??___flmul
 11815  0028F6  C026  F01B         	movff	___flmul@prod+1,??___flmul+1
 11816  0028FA  C027  F01C         	movff	___flmul@prod+2,??___flmul+2
 11817  0028FE  C028  F01D         	movff	___flmul@prod+3,??___flmul+3
 11818  002902  341D               	rlcf	(??___flmul+3)^0,w,c
 11819  002904  321D               	rrcf	(??___flmul+3)^0,f,c
 11820  002906  321C               	rrcf	(??___flmul+2)^0,f,c
 11821  002908  321B               	rrcf	(??___flmul+1)^0,f,c
 11822  00290A  321A               	rrcf	??___flmul^0,f,c
 11823  00290C  C01A  F025         	movff	??___flmul,___flmul@prod
 11824  002910  C01B  F026         	movff	??___flmul+1,___flmul@prod+1
 11825  002914  C01C  F027         	movff	??___flmul+2,___flmul@prod+2
 11826  002918  C01D  F028         	movff	??___flmul+3,___flmul@prod+3
 11827  00291C  4A29               	infsnz	___flmul@temp^0,f,c
 11828  00291E  2A2A               	incf	(___flmul@temp+1)^0,f,c
 11829  002920                     l7750:
 11830  002920  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
 11831  002922  EF9B  F014         	goto	u9791
 11832  002926  502A               	movf	(___flmul@temp+1)^0,w,c
 11833  002928  E108               	bnz	u9790
 11834  00292A  2829               	incf	___flmul@temp^0,w,c
 11835  00292C  A0D8               	btfss	status,0,c
 11836  00292E  EF9B  F014         	goto	u9791
 11837  002932  EF9D  F014         	goto	u9790
 11838  002936                     u9791:
 11839  002936  EFA7  F014         	goto	l7754
 11840  00293A                     u9790:
 11841  00293A  0E00               	movlw	0
 11842  00293C  6E25               	movwf	___flmul@prod^0,c
 11843  00293E  0E00               	movlw	0
 11844  002940  6E26               	movwf	(___flmul@prod+1)^0,c
 11845  002942  0E80               	movlw	128
 11846  002944  6E27               	movwf	(___flmul@prod+2)^0,c
 11847  002946  0E7F               	movlw	127
 11848  002948  6E28               	movwf	(___flmul@prod+3)^0,c
 11849  00294A  EFD5  F014         	goto	l7766
 11850  00294E                     l7754:
 11851  00294E  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
 11852  002950  EFB4  F014         	goto	u9800
 11853  002954  502A               	movf	(___flmul@temp+1)^0,w,c
 11854  002956  E106               	bnz	u9801
 11855  002958  0429               	decf	___flmul@temp^0,w,c
 11856  00295A  B0D8               	btfsc	status,0,c
 11857  00295C  EFB2  F014         	goto	u9801
 11858  002960  EFB4  F014         	goto	u9800
 11859  002964                     u9801:
 11860  002964  EFC0  F014         	goto	l1418
 11861  002968                     u9800:
 11862  002968  0E00               	movlw	0
 11863  00296A  6E25               	movwf	___flmul@prod^0,c
 11864  00296C  0E00               	movlw	0
 11865  00296E  6E26               	movwf	(___flmul@prod+1)^0,c
 11866  002970  0E00               	movlw	0
 11867  002972  6E27               	movwf	(___flmul@prod+2)^0,c
 11868  002974  0E00               	movlw	0
 11869  002976  6E28               	movwf	(___flmul@prod+3)^0,c
 11870  002978  0E00               	movlw	0
 11871  00297A  6E1E               	movwf	___flmul@sign^0,c
 11872  00297C  EFD5  F014         	goto	l7766
 11873  002980                     l1418:
 11874  002980  C029  F024         	movff	___flmul@temp,___flmul@bexp
 11875  002984  0EFF               	movlw	255
 11876  002986  1625               	andwf	___flmul@prod^0,f,c
 11877  002988  0EFF               	movlw	255
 11878  00298A  1626               	andwf	(___flmul@prod+1)^0,f,c
 11879  00298C  0E7F               	movlw	127
 11880  00298E  1627               	andwf	(___flmul@prod+2)^0,f,c
 11881  002990  0E00               	movlw	0
 11882  002992  1628               	andwf	(___flmul@prod+3)^0,f,c
 11883  002994  A024               	btfss	___flmul@bexp^0,0,c
 11884  002996  EFCF  F014         	goto	u9811
 11885  00299A  EFD1  F014         	goto	u9810
 11886  00299E                     u9811:
 11887  00299E  EFD2  F014         	goto	l7764
 11888  0029A2                     u9810:
 11889  0029A2  8E27               	bsf	(___flmul@prod+2)^0,7,c
 11890  0029A4                     l7764:
 11891  0029A4  90D8               	bcf	status,0,c
 11892  0029A6  3024               	rrcf	___flmul@bexp^0,w,c
 11893  0029A8  6E28               	movwf	(___flmul@prod+3)^0,c
 11894  0029AA                     l7766:
 11895  0029AA  501E               	movf	___flmul@sign^0,w,c
 11896  0029AC  1228               	iorwf	(___flmul@prod+3)^0,f,c
 11897  0029AE  C025  F012         	movff	___flmul@prod,?___flmul
 11898  0029B2  C026  F013         	movff	___flmul@prod+1,?___flmul+1
 11899  0029B6  C027  F014         	movff	___flmul@prod+2,?___flmul+2
 11900  0029BA  C028  F015         	movff	___flmul@prod+3,?___flmul+3
 11901  0029BE                     l1405:
 11902  0029BE  0012               	return		;funcret
 11903  0029C0                     __end_of___flmul:
 11904                           	opt callstack 0
 11905                           
 11906 ;; *************** function ___flge *****************
 11907 ;; Defined at:
 11908 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 11909 ;; Parameters:    Size  Location     Type
 11910 ;;  ff1             4   42[COMRAM] unsigned char 
 11911 ;;  ff2             4   46[COMRAM] unsigned char 
 11912 ;; Auto vars:     Size  Location     Type
 11913 ;;		None
 11914 ;; Return value:  Size  Location     Type
 11915 ;;		None               void
 11916 ;; Registers used:
 11917 ;;		wreg, status,2, status,0
 11918 ;; Tracked objects:
 11919 ;;		On entry : 0/0
 11920 ;;		On exit  : 0/0
 11921 ;;		Unchanged: 0/0
 11922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11923 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11925 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11926 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11927 ;;Total ram usage:       12 bytes
 11928 ;; Hardware stack levels used:    1
 11929 ;; Hardware stack levels required when called:    4
 11930 ;; This function calls:
 11931 ;;		Nothing
 11932 ;; This function is called by:
 11933 ;;		_efgtoa
 11934 ;; This function uses a non-reentrant model
 11935 ;;
 11936                           
 11937                           	psect	text26
 11938  004B98                     __ptext26:
 11939                           	opt callstack 0
 11940  004B98                     ___flge:
 11941                           	opt callstack 21
 11942  004B98  0E00               	movlw	0
 11943  004B9A  142B               	andwf	___flge@ff1^0,w,c
 11944  004B9C  6E33               	movwf	??___flge^0,c
 11945  004B9E  0E00               	movlw	0
 11946  004BA0  142C               	andwf	(___flge@ff1+1)^0,w,c
 11947  004BA2  6E34               	movwf	(??___flge+1)^0,c
 11948  004BA4  0E80               	movlw	128
 11949  004BA6  142D               	andwf	(___flge@ff1+2)^0,w,c
 11950  004BA8  6E35               	movwf	(??___flge+2)^0,c
 11951  004BAA  0E7F               	movlw	127
 11952  004BAC  142E               	andwf	(___flge@ff1+3)^0,w,c
 11953  004BAE  6E36               	movwf	(??___flge+3)^0,c
 11954  004BB0  5033               	movf	??___flge^0,w,c
 11955  004BB2  1034               	iorwf	(??___flge+1)^0,w,c
 11956  004BB4  1035               	iorwf	(??___flge+2)^0,w,c
 11957  004BB6  1036               	iorwf	(??___flge+3)^0,w,c
 11958  004BB8  A4D8               	btfss	status,2,c
 11959  004BBA  EFE1  F025         	goto	u9971
 11960  004BBE  EFE3  F025         	goto	u9970
 11961  004BC2                     u9971:
 11962  004BC2  EFEB  F025         	goto	l7878
 11963  004BC6                     u9970:
 11964  004BC6  0E00               	movlw	0
 11965  004BC8  6E2B               	movwf	___flge@ff1^0,c
 11966  004BCA  0E00               	movlw	0
 11967  004BCC  6E2C               	movwf	(___flge@ff1+1)^0,c
 11968  004BCE  0E00               	movlw	0
 11969  004BD0  6E2D               	movwf	(___flge@ff1+2)^0,c
 11970  004BD2  0E00               	movlw	0
 11971  004BD4  6E2E               	movwf	(___flge@ff1+3)^0,c
 11972  004BD6                     l7878:
 11973  004BD6  0E00               	movlw	0
 11974  004BD8  142F               	andwf	___flge@ff2^0,w,c
 11975  004BDA  6E33               	movwf	??___flge^0,c
 11976  004BDC  0E00               	movlw	0
 11977  004BDE  1430               	andwf	(___flge@ff2+1)^0,w,c
 11978  004BE0  6E34               	movwf	(??___flge+1)^0,c
 11979  004BE2  0E80               	movlw	128
 11980  004BE4  1431               	andwf	(___flge@ff2+2)^0,w,c
 11981  004BE6  6E35               	movwf	(??___flge+2)^0,c
 11982  004BE8  0E7F               	movlw	127
 11983  004BEA  1432               	andwf	(___flge@ff2+3)^0,w,c
 11984  004BEC  6E36               	movwf	(??___flge+3)^0,c
 11985  004BEE  5033               	movf	??___flge^0,w,c
 11986  004BF0  1034               	iorwf	(??___flge+1)^0,w,c
 11987  004BF2  1035               	iorwf	(??___flge+2)^0,w,c
 11988  004BF4  1036               	iorwf	(??___flge+3)^0,w,c
 11989  004BF6  A4D8               	btfss	status,2,c
 11990  004BF8  EF00  F026         	goto	u9981
 11991  004BFC  EF02  F026         	goto	u9980
 11992  004C00                     u9981:
 11993  004C00  EF0A  F026         	goto	l7882
 11994  004C04                     u9980:
 11995  004C04  0E00               	movlw	0
 11996  004C06  6E2F               	movwf	___flge@ff2^0,c
 11997  004C08  0E00               	movlw	0
 11998  004C0A  6E30               	movwf	(___flge@ff2+1)^0,c
 11999  004C0C  0E00               	movlw	0
 12000  004C0E  6E31               	movwf	(___flge@ff2+2)^0,c
 12001  004C10  0E00               	movlw	0
 12002  004C12  6E32               	movwf	(___flge@ff2+3)^0,c
 12003  004C14                     l7882:
 12004  004C14  AE2E               	btfss	(___flge@ff1+3)^0,7,c
 12005  004C16  EF0F  F026         	goto	u9991
 12006  004C1A  EF11  F026         	goto	u9990
 12007  004C1E                     u9991:
 12008  004C1E  EF1A  F026         	goto	l7886
 12009  004C22                     u9990:
 12010  004C22  6C2B               	negf	___flge@ff1^0,c
 12011  004C24  1E2C               	comf	(___flge@ff1+1)^0,f,c
 12012  004C26  B0D8               	btfsc	status,0,c
 12013  004C28  2A2C               	incf	(___flge@ff1+1)^0,f,c
 12014  004C2A  1E2D               	comf	(___flge@ff1+2)^0,f,c
 12015  004C2C  B0D8               	btfsc	status,0,c
 12016  004C2E  2A2D               	incf	(___flge@ff1+2)^0,f,c
 12017  004C30  0E80               	movlw	128
 12018  004C32  562E               	subfwb	(___flge@ff1+3)^0,f,c
 12019  004C34                     l7886:
 12020  004C34  AE32               	btfss	(___flge@ff2+3)^0,7,c
 12021  004C36  EF1F  F026         	goto	u10001
 12022  004C3A  EF21  F026         	goto	u10000
 12023  004C3E                     u10001:
 12024  004C3E  EF2A  F026         	goto	l1052
 12025  004C42                     u10000:
 12026  004C42  6C2F               	negf	___flge@ff2^0,c
 12027  004C44  1E30               	comf	(___flge@ff2+1)^0,f,c
 12028  004C46  B0D8               	btfsc	status,0,c
 12029  004C48  2A30               	incf	(___flge@ff2+1)^0,f,c
 12030  004C4A  1E31               	comf	(___flge@ff2+2)^0,f,c
 12031  004C4C  B0D8               	btfsc	status,0,c
 12032  004C4E  2A31               	incf	(___flge@ff2+2)^0,f,c
 12033  004C50  0E80               	movlw	128
 12034  004C52  5632               	subfwb	(___flge@ff2+3)^0,f,c
 12035  004C54                     l1052:
 12036  004C54  0E00               	movlw	0
 12037  004C56  1A2B               	xorwf	___flge@ff1^0,f,c
 12038  004C58  0E00               	movlw	0
 12039  004C5A  1A2C               	xorwf	(___flge@ff1+1)^0,f,c
 12040  004C5C  0E00               	movlw	0
 12041  004C5E  1A2D               	xorwf	(___flge@ff1+2)^0,f,c
 12042  004C60  0E80               	movlw	128
 12043  004C62  1A2E               	xorwf	(___flge@ff1+3)^0,f,c
 12044  004C64  0E00               	movlw	0
 12045  004C66  1A2F               	xorwf	___flge@ff2^0,f,c
 12046  004C68  0E00               	movlw	0
 12047  004C6A  1A30               	xorwf	(___flge@ff2+1)^0,f,c
 12048  004C6C  0E00               	movlw	0
 12049  004C6E  1A31               	xorwf	(___flge@ff2+2)^0,f,c
 12050  004C70  0E80               	movlw	128
 12051  004C72  1A32               	xorwf	(___flge@ff2+3)^0,f,c
 12052  004C74  502F               	movf	___flge@ff2^0,w,c
 12053  004C76  5C2B               	subwf	___flge@ff1^0,w,c
 12054  004C78  5030               	movf	(___flge@ff2+1)^0,w,c
 12055  004C7A  582C               	subwfb	(___flge@ff1+1)^0,w,c
 12056  004C7C  5031               	movf	(___flge@ff2+2)^0,w,c
 12057  004C7E  582D               	subwfb	(___flge@ff1+2)^0,w,c
 12058  004C80  5032               	movf	(___flge@ff2+3)^0,w,c
 12059  004C82  582E               	subwfb	(___flge@ff1+3)^0,w,c
 12060  004C84  B0D8               	btfsc	status,0,c
 12061  004C86  EF47  F026         	goto	u10011
 12062  004C8A  EF49  F026         	goto	u10010
 12063  004C8E                     u10011:
 12064  004C8E  EF4C  F026         	goto	l7892
 12065  004C92                     u10010:
 12066  004C92  90D8               	bcf	status,0,c
 12067  004C94  EF4D  F026         	goto	l1057
 12068  004C98                     l7892:
 12069  004C98  80D8               	bsf	status,0,c
 12070  004C9A                     l1057:
 12071  004C9A  0012               	return		;funcret
 12072  004C9C                     __end_of___flge:
 12073                           	opt callstack 0
 12074                           
 12075 ;; *************** function ___fleq *****************
 12076 ;; Defined at:
 12077 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
 12078 ;; Parameters:    Size  Location     Type
 12079 ;;  ff1             4    3[COMRAM] unsigned char 
 12080 ;;  ff2             4    7[COMRAM] unsigned char 
 12081 ;; Auto vars:     Size  Location     Type
 12082 ;;		None
 12083 ;; Return value:  Size  Location     Type
 12084 ;;		None               void
 12085 ;; Registers used:
 12086 ;;		wreg, status,2, status,0
 12087 ;; Tracked objects:
 12088 ;;		On entry : 0/0
 12089 ;;		On exit  : 0/0
 12090 ;;		Unchanged: 0/0
 12091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12092 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12094 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12095 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12096 ;;Total ram usage:       12 bytes
 12097 ;; Hardware stack levels used:    1
 12098 ;; Hardware stack levels required when called:    4
 12099 ;; This function calls:
 12100 ;;		Nothing
 12101 ;; This function is called by:
 12102 ;;		_efgtoa
 12103 ;; This function uses a non-reentrant model
 12104 ;;
 12105                           
 12106                           	psect	text27
 12107  00530E                     __ptext27:
 12108                           	opt callstack 0
 12109  00530E                     ___fleq:
 12110                           	opt callstack 21
 12111  00530E  0E00               	movlw	0
 12112  005310  1404               	andwf	___fleq@ff1^0,w,c
 12113  005312  6E0C               	movwf	??___fleq^0,c
 12114  005314  0E00               	movlw	0
 12115  005316  1405               	andwf	(___fleq@ff1+1)^0,w,c
 12116  005318  6E0D               	movwf	(??___fleq+1)^0,c
 12117  00531A  0E80               	movlw	128
 12118  00531C  1406               	andwf	(___fleq@ff1+2)^0,w,c
 12119  00531E  6E0E               	movwf	(??___fleq+2)^0,c
 12120  005320  0E7F               	movlw	127
 12121  005322  1407               	andwf	(___fleq@ff1+3)^0,w,c
 12122  005324  6E0F               	movwf	(??___fleq+3)^0,c
 12123  005326  500C               	movf	??___fleq^0,w,c
 12124  005328  100D               	iorwf	(??___fleq+1)^0,w,c
 12125  00532A  100E               	iorwf	(??___fleq+2)^0,w,c
 12126  00532C  100F               	iorwf	(??___fleq+3)^0,w,c
 12127  00532E  A4D8               	btfss	status,2,c
 12128  005330  EF9C  F029         	goto	u9941
 12129  005334  EF9E  F029         	goto	u9940
 12130  005338                     u9941:
 12131  005338  EFA6  F029         	goto	l7862
 12132  00533C                     u9940:
 12133  00533C  0E00               	movlw	0
 12134  00533E  6E04               	movwf	___fleq@ff1^0,c
 12135  005340  0E00               	movlw	0
 12136  005342  6E05               	movwf	(___fleq@ff1+1)^0,c
 12137  005344  0E00               	movlw	0
 12138  005346  6E06               	movwf	(___fleq@ff1+2)^0,c
 12139  005348  0E00               	movlw	0
 12140  00534A  6E07               	movwf	(___fleq@ff1+3)^0,c
 12141  00534C                     l7862:
 12142  00534C  0E00               	movlw	0
 12143  00534E  1408               	andwf	___fleq@ff2^0,w,c
 12144  005350  6E0C               	movwf	??___fleq^0,c
 12145  005352  0E00               	movlw	0
 12146  005354  1409               	andwf	(___fleq@ff2+1)^0,w,c
 12147  005356  6E0D               	movwf	(??___fleq+1)^0,c
 12148  005358  0E80               	movlw	128
 12149  00535A  140A               	andwf	(___fleq@ff2+2)^0,w,c
 12150  00535C  6E0E               	movwf	(??___fleq+2)^0,c
 12151  00535E  0E7F               	movlw	127
 12152  005360  140B               	andwf	(___fleq@ff2+3)^0,w,c
 12153  005362  6E0F               	movwf	(??___fleq+3)^0,c
 12154  005364  500C               	movf	??___fleq^0,w,c
 12155  005366  100D               	iorwf	(??___fleq+1)^0,w,c
 12156  005368  100E               	iorwf	(??___fleq+2)^0,w,c
 12157  00536A  100F               	iorwf	(??___fleq+3)^0,w,c
 12158  00536C  A4D8               	btfss	status,2,c
 12159  00536E  EFBB  F029         	goto	u9951
 12160  005372  EFBD  F029         	goto	u9950
 12161  005376                     u9951:
 12162  005376  EFC5  F029         	goto	l7866
 12163  00537A                     u9950:
 12164  00537A  0E00               	movlw	0
 12165  00537C  6E08               	movwf	___fleq@ff2^0,c
 12166  00537E  0E00               	movlw	0
 12167  005380  6E09               	movwf	(___fleq@ff2+1)^0,c
 12168  005382  0E00               	movlw	0
 12169  005384  6E0A               	movwf	(___fleq@ff2+2)^0,c
 12170  005386  0E00               	movlw	0
 12171  005388  6E0B               	movwf	(___fleq@ff2+3)^0,c
 12172  00538A                     l7866:
 12173  00538A  5008               	movf	___fleq@ff2^0,w,c
 12174  00538C  1804               	xorwf	___fleq@ff1^0,w,c
 12175  00538E  E10F               	bnz	u9960
 12176  005390  5009               	movf	(___fleq@ff2+1)^0,w,c
 12177  005392  1805               	xorwf	(___fleq@ff1+1)^0,w,c
 12178  005394  E10C               	bnz	u9960
 12179  005396  500A               	movf	(___fleq@ff2+2)^0,w,c
 12180  005398  1806               	xorwf	(___fleq@ff1+2)^0,w,c
 12181  00539A  E109               	bnz	u9960
 12182  00539C  500B               	movf	(___fleq@ff2+3)^0,w,c
 12183  00539E  1807               	xorwf	(___fleq@ff1+3)^0,w,c
 12184  0053A0  B4D8               	btfsc	status,2,c
 12185  0053A2  EFD5  F029         	goto	u9961
 12186  0053A6  EFD7  F029         	goto	u9960
 12187  0053AA                     u9961:
 12188  0053AA  EFDA  F029         	goto	l7870
 12189  0053AE                     u9960:
 12190  0053AE  90D8               	bcf	status,0,c
 12191  0053B0  EFDB  F029         	goto	l1046
 12192  0053B4                     l7870:
 12193  0053B4  80D8               	bsf	status,0,c
 12194  0053B6                     l1046:
 12195  0053B6  0012               	return		;funcret
 12196  0053B8                     __end_of___fleq:
 12197                           	opt callstack 0
 12198                           
 12199 ;; *************** function ___fldiv *****************
 12200 ;; Defined at:
 12201 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 12202 ;; Parameters:    Size  Location     Type
 12203 ;;  b               4    3[COMRAM] unsigned char 
 12204 ;;  a               4    7[COMRAM] unsigned char 
 12205 ;; Auto vars:     Size  Location     Type
 12206 ;;  grs             4   22[COMRAM] unsigned long 
 12207 ;;  rem             4   15[COMRAM] unsigned long 
 12208 ;;  new_exp         2   20[COMRAM] short 
 12209 ;;  aexp            1   27[COMRAM] unsigned char 
 12210 ;;  bexp            1   26[COMRAM] unsigned char 
 12211 ;;  sign            1   19[COMRAM] unsigned char 
 12212 ;; Return value:  Size  Location     Type
 12213 ;;                  4    3[COMRAM] unsigned char 
 12214 ;; Registers used:
 12215 ;;		wreg, status,2, status,0
 12216 ;; Tracked objects:
 12217 ;;		On entry : 0/0
 12218 ;;		On exit  : 0/0
 12219 ;;		Unchanged: 0/0
 12220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12221 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12222 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12223 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12224 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12225 ;;Total ram usage:       25 bytes
 12226 ;; Hardware stack levels used:    1
 12227 ;; Hardware stack levels required when called:    4
 12228 ;; This function calls:
 12229 ;;		Nothing
 12230 ;; This function is called by:
 12231 ;;		_efgtoa
 12232 ;; This function uses a non-reentrant model
 12233 ;;
 12234                           
 12235                           	psect	text28
 12236  0029C0                     __ptext28:
 12237                           	opt callstack 0
 12238  0029C0                     ___fldiv:
 12239                           	opt callstack 21
 12240  0029C0  5007               	movf	(___fldiv@b+3)^0,w,c
 12241  0029C2  0B80               	andlw	128
 12242  0029C4  6E14               	movwf	___fldiv@sign^0,c
 12243  0029C6  5007               	movf	(___fldiv@b+3)^0,w,c
 12244  0029C8  2407               	addwf	(___fldiv@b+3)^0,w,c
 12245  0029CA  6E1B               	movwf	___fldiv@bexp^0,c
 12246  0029CC  AE06               	btfss	(___fldiv@b+2)^0,7,c
 12247  0029CE  EFEB  F014         	goto	u9401
 12248  0029D2  EFED  F014         	goto	u9400
 12249  0029D6                     u9401:
 12250  0029D6  EFEE  F014         	goto	l7510
 12251  0029DA                     u9400:
 12252  0029DA  801B               	bsf	___fldiv@bexp^0,0,c
 12253  0029DC                     l7510:
 12254  0029DC  501B               	movf	___fldiv@bexp^0,w,c
 12255  0029DE  B4D8               	btfsc	status,2,c
 12256  0029E0  EFF4  F014         	goto	u9411
 12257  0029E4  EFF6  F014         	goto	u9410
 12258  0029E8                     u9411:
 12259  0029E8  EF0B  F015         	goto	l7520
 12260  0029EC                     u9410:
 12261  0029EC  281B               	incf	___fldiv@bexp^0,w,c
 12262  0029EE  A4D8               	btfss	status,2,c
 12263  0029F0  EFFC  F014         	goto	u9421
 12264  0029F4  EFFE  F014         	goto	u9420
 12265  0029F8                     u9421:
 12266  0029F8  EF06  F015         	goto	l7516
 12267  0029FC                     u9420:
 12268  0029FC  0E00               	movlw	0
 12269  0029FE  6E04               	movwf	___fldiv@b^0,c
 12270  002A00  0E00               	movlw	0
 12271  002A02  6E05               	movwf	(___fldiv@b+1)^0,c
 12272  002A04  0E00               	movlw	0
 12273  002A06  6E06               	movwf	(___fldiv@b+2)^0,c
 12274  002A08  0E00               	movlw	0
 12275  002A0A  6E07               	movwf	(___fldiv@b+3)^0,c
 12276  002A0C                     l7516:
 12277  002A0C  8E06               	bsf	(___fldiv@b+2)^0,7,c
 12278  002A0E  0E00               	movlw	0
 12279  002A10  6E07               	movwf	(___fldiv@b+3)^0,c
 12280  002A12  EF13  F015         	goto	l7522
 12281  002A16                     l7520:
 12282  002A16  0E00               	movlw	0
 12283  002A18  6E04               	movwf	___fldiv@b^0,c
 12284  002A1A  0E00               	movlw	0
 12285  002A1C  6E05               	movwf	(___fldiv@b+1)^0,c
 12286  002A1E  0E00               	movlw	0
 12287  002A20  6E06               	movwf	(___fldiv@b+2)^0,c
 12288  002A22  0E00               	movlw	0
 12289  002A24  6E07               	movwf	(___fldiv@b+3)^0,c
 12290  002A26                     l7522:
 12291  002A26  500B               	movf	(___fldiv@a+3)^0,w,c
 12292  002A28  0B80               	andlw	128
 12293  002A2A  1A14               	xorwf	___fldiv@sign^0,f,c
 12294  002A2C  500B               	movf	(___fldiv@a+3)^0,w,c
 12295  002A2E  240B               	addwf	(___fldiv@a+3)^0,w,c
 12296  002A30  6E1C               	movwf	___fldiv@aexp^0,c
 12297  002A32  AE0A               	btfss	(___fldiv@a+2)^0,7,c
 12298  002A34  EF1E  F015         	goto	u9431
 12299  002A38  EF20  F015         	goto	u9430
 12300  002A3C                     u9431:
 12301  002A3C  EF21  F015         	goto	l7530
 12302  002A40                     u9430:
 12303  002A40  801C               	bsf	___fldiv@aexp^0,0,c
 12304  002A42                     l7530:
 12305  002A42  501C               	movf	___fldiv@aexp^0,w,c
 12306  002A44  B4D8               	btfsc	status,2,c
 12307  002A46  EF27  F015         	goto	u9441
 12308  002A4A  EF29  F015         	goto	u9440
 12309  002A4E                     u9441:
 12310  002A4E  EF3E  F015         	goto	l7540
 12311  002A52                     u9440:
 12312  002A52  281C               	incf	___fldiv@aexp^0,w,c
 12313  002A54  A4D8               	btfss	status,2,c
 12314  002A56  EF2F  F015         	goto	u9451
 12315  002A5A  EF31  F015         	goto	u9450
 12316  002A5E                     u9451:
 12317  002A5E  EF39  F015         	goto	l7536
 12318  002A62                     u9450:
 12319  002A62  0E00               	movlw	0
 12320  002A64  6E08               	movwf	___fldiv@a^0,c
 12321  002A66  0E00               	movlw	0
 12322  002A68  6E09               	movwf	(___fldiv@a+1)^0,c
 12323  002A6A  0E00               	movlw	0
 12324  002A6C  6E0A               	movwf	(___fldiv@a+2)^0,c
 12325  002A6E  0E00               	movlw	0
 12326  002A70  6E0B               	movwf	(___fldiv@a+3)^0,c
 12327  002A72                     l7536:
 12328  002A72  8E0A               	bsf	(___fldiv@a+2)^0,7,c
 12329  002A74  0E00               	movlw	0
 12330  002A76  6E0B               	movwf	(___fldiv@a+3)^0,c
 12331  002A78  EF46  F015         	goto	l7542
 12332  002A7C                     l7540:
 12333  002A7C  0E00               	movlw	0
 12334  002A7E  6E08               	movwf	___fldiv@a^0,c
 12335  002A80  0E00               	movlw	0
 12336  002A82  6E09               	movwf	(___fldiv@a+1)^0,c
 12337  002A84  0E00               	movlw	0
 12338  002A86  6E0A               	movwf	(___fldiv@a+2)^0,c
 12339  002A88  0E00               	movlw	0
 12340  002A8A  6E0B               	movwf	(___fldiv@a+3)^0,c
 12341  002A8C                     l7542:
 12342  002A8C  5008               	movf	___fldiv@a^0,w,c
 12343  002A8E  1009               	iorwf	(___fldiv@a+1)^0,w,c
 12344  002A90  100A               	iorwf	(___fldiv@a+2)^0,w,c
 12345  002A92  100B               	iorwf	(___fldiv@a+3)^0,w,c
 12346  002A94  A4D8               	btfss	status,2,c
 12347  002A96  EF4F  F015         	goto	u9461
 12348  002A9A  EF51  F015         	goto	u9460
 12349  002A9E                     u9461:
 12350  002A9E  EF69  F015         	goto	l7554
 12351  002AA2                     u9460:
 12352  002AA2  0E00               	movlw	0
 12353  002AA4  6E04               	movwf	___fldiv@b^0,c
 12354  002AA6  0E00               	movlw	0
 12355  002AA8  6E05               	movwf	(___fldiv@b+1)^0,c
 12356  002AAA  0E00               	movlw	0
 12357  002AAC  6E06               	movwf	(___fldiv@b+2)^0,c
 12358  002AAE  0E00               	movlw	0
 12359  002AB0  6E07               	movwf	(___fldiv@b+3)^0,c
 12360  002AB2  0E80               	movlw	128
 12361  002AB4  1206               	iorwf	(___fldiv@b+2)^0,f,c
 12362  002AB6  0E7F               	movlw	127
 12363  002AB8  1207               	iorwf	(___fldiv@b+3)^0,f,c
 12364  002ABA                     l7548:
 12365  002ABA  5014               	movf	___fldiv@sign^0,w,c
 12366  002ABC  1207               	iorwf	(___fldiv@b+3)^0,f,c
 12367  002ABE  C004  F004         	movff	___fldiv@b,?___fldiv
 12368  002AC2  C005  F005         	movff	___fldiv@b+1,?___fldiv+1
 12369  002AC6  C006  F006         	movff	___fldiv@b+2,?___fldiv+2
 12370  002ACA  C007  F007         	movff	___fldiv@b+3,?___fldiv+3
 12371  002ACE  EFAC  F016         	goto	l1369
 12372  002AD2                     l7554:
 12373  002AD2  501B               	movf	___fldiv@bexp^0,w,c
 12374  002AD4  A4D8               	btfss	status,2,c
 12375  002AD6  EF6F  F015         	goto	u9471
 12376  002ADA  EF71  F015         	goto	u9470
 12377  002ADE                     u9471:
 12378  002ADE  EF7B  F015         	goto	l7562
 12379  002AE2                     u9470:
 12380  002AE2  0E00               	movlw	0
 12381  002AE4  6E04               	movwf	?___fldiv^0,c
 12382  002AE6  0E00               	movlw	0
 12383  002AE8  6E05               	movwf	(?___fldiv+1)^0,c
 12384  002AEA  0E00               	movlw	0
 12385  002AEC  6E06               	movwf	(?___fldiv+2)^0,c
 12386  002AEE  0E00               	movlw	0
 12387  002AF0  6E07               	movwf	(?___fldiv+3)^0,c
 12388  002AF2  EFAC  F016         	goto	l1369
 12389  002AF6                     l7562:
 12390  002AF6  501C               	movf	___fldiv@aexp^0,w,c
 12391  002AF8  C01B  F00C         	movff	___fldiv@bexp,??___fldiv
 12392  002AFC  6A0D               	clrf	(??___fldiv+1)^0,c
 12393  002AFE  5E0C               	subwf	??___fldiv^0,f,c
 12394  002B00  0E00               	movlw	0
 12395  002B02  5A0D               	subwfb	(??___fldiv+1)^0,f,c
 12396  002B04  0E7F               	movlw	127
 12397  002B06  240C               	addwf	??___fldiv^0,w,c
 12398  002B08  6E15               	movwf	___fldiv@new_exp^0,c
 12399  002B0A  0E00               	movlw	0
 12400  002B0C  200D               	addwfc	(??___fldiv+1)^0,w,c
 12401  002B0E  6E16               	movwf	(___fldiv@new_exp+1)^0,c
 12402  002B10  C004  F010         	movff	___fldiv@b,___fldiv@rem
 12403  002B14  C005  F011         	movff	___fldiv@b+1,___fldiv@rem+1
 12404  002B18  C006  F012         	movff	___fldiv@b+2,___fldiv@rem+2
 12405  002B1C  C007  F013         	movff	___fldiv@b+3,___fldiv@rem+3
 12406  002B20  0E00               	movlw	0
 12407  002B22  6E04               	movwf	___fldiv@b^0,c
 12408  002B24  0E00               	movlw	0
 12409  002B26  6E05               	movwf	(___fldiv@b+1)^0,c
 12410  002B28  0E00               	movlw	0
 12411  002B2A  6E06               	movwf	(___fldiv@b+2)^0,c
 12412  002B2C  0E00               	movlw	0
 12413  002B2E  6E07               	movwf	(___fldiv@b+3)^0,c
 12414  002B30  0E00               	movlw	0
 12415  002B32  6E17               	movwf	___fldiv@grs^0,c
 12416  002B34  0E00               	movlw	0
 12417  002B36  6E18               	movwf	(___fldiv@grs+1)^0,c
 12418  002B38  0E00               	movlw	0
 12419  002B3A  6E19               	movwf	(___fldiv@grs+2)^0,c
 12420  002B3C  0E00               	movlw	0
 12421  002B3E  6E1A               	movwf	(___fldiv@grs+3)^0,c
 12422  002B40  0E00               	movlw	0
 12423  002B42  6E1C               	movwf	___fldiv@aexp^0,c
 12424  002B44  EFDC  F015         	goto	l1371
 12425  002B48                     l7572:
 12426  002B48  501C               	movf	___fldiv@aexp^0,w,c
 12427  002B4A  B4D8               	btfsc	status,2,c
 12428  002B4C  EFAA  F015         	goto	u9481
 12429  002B50  EFAC  F015         	goto	u9480
 12430  002B54                     u9481:
 12431  002B54  EFC3  F015         	goto	l7580
 12432  002B58                     u9480:
 12433  002B58  90D8               	bcf	status,0,c
 12434  002B5A  3610               	rlcf	___fldiv@rem^0,f,c
 12435  002B5C  3611               	rlcf	(___fldiv@rem+1)^0,f,c
 12436  002B5E  3612               	rlcf	(___fldiv@rem+2)^0,f,c
 12437  002B60  3613               	rlcf	(___fldiv@rem+3)^0,f,c
 12438  002B62  90D8               	bcf	status,0,c
 12439  002B64  3604               	rlcf	___fldiv@b^0,f,c
 12440  002B66  3605               	rlcf	(___fldiv@b+1)^0,f,c
 12441  002B68  3606               	rlcf	(___fldiv@b+2)^0,f,c
 12442  002B6A  3607               	rlcf	(___fldiv@b+3)^0,f,c
 12443  002B6C  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
 12444  002B6E  EFBB  F015         	goto	u9491
 12445  002B72  EFBD  F015         	goto	u9490
 12446  002B76                     u9491:
 12447  002B76  EFBE  F015         	goto	l1374
 12448  002B7A                     u9490:
 12449  002B7A  8004               	bsf	___fldiv@b^0,0,c
 12450  002B7C                     l1374:
 12451  002B7C  90D8               	bcf	status,0,c
 12452  002B7E  3617               	rlcf	___fldiv@grs^0,f,c
 12453  002B80  3618               	rlcf	(___fldiv@grs+1)^0,f,c
 12454  002B82  3619               	rlcf	(___fldiv@grs+2)^0,f,c
 12455  002B84  361A               	rlcf	(___fldiv@grs+3)^0,f,c
 12456  002B86                     l7580:
 12457  002B86  5008               	movf	___fldiv@a^0,w,c
 12458  002B88  5C10               	subwf	___fldiv@rem^0,w,c
 12459  002B8A  5009               	movf	(___fldiv@a+1)^0,w,c
 12460  002B8C  5811               	subwfb	(___fldiv@rem+1)^0,w,c
 12461  002B8E  500A               	movf	(___fldiv@a+2)^0,w,c
 12462  002B90  5812               	subwfb	(___fldiv@rem+2)^0,w,c
 12463  002B92  500B               	movf	(___fldiv@a+3)^0,w,c
 12464  002B94  5813               	subwfb	(___fldiv@rem+3)^0,w,c
 12465  002B96  A0D8               	btfss	status,0,c
 12466  002B98  EFD0  F015         	goto	u9501
 12467  002B9C  EFD2  F015         	goto	u9500
 12468  002BA0                     u9501:
 12469  002BA0  EFDB  F015         	goto	l7586
 12470  002BA4                     u9500:
 12471  002BA4  8C1A               	bsf	(___fldiv@grs+3)^0,6,c
 12472  002BA6  5008               	movf	___fldiv@a^0,w,c
 12473  002BA8  5E10               	subwf	___fldiv@rem^0,f,c
 12474  002BAA  5009               	movf	(___fldiv@a+1)^0,w,c
 12475  002BAC  5A11               	subwfb	(___fldiv@rem+1)^0,f,c
 12476  002BAE  500A               	movf	(___fldiv@a+2)^0,w,c
 12477  002BB0  5A12               	subwfb	(___fldiv@rem+2)^0,f,c
 12478  002BB2  500B               	movf	(___fldiv@a+3)^0,w,c
 12479  002BB4  5A13               	subwfb	(___fldiv@rem+3)^0,f,c
 12480  002BB6                     l7586:
 12481  002BB6  2A1C               	incf	___fldiv@aexp^0,f,c
 12482  002BB8                     l1371:
 12483  002BB8  0E19               	movlw	25
 12484  002BBA  641C               	cpfsgt	___fldiv@aexp^0,c
 12485  002BBC  EFE2  F015         	goto	u9511
 12486  002BC0  EFE4  F015         	goto	u9510
 12487  002BC4                     u9511:
 12488  002BC4  EFA4  F015         	goto	l7572
 12489  002BC8                     u9510:
 12490  002BC8  5010               	movf	___fldiv@rem^0,w,c
 12491  002BCA  1011               	iorwf	(___fldiv@rem+1)^0,w,c
 12492  002BCC  1012               	iorwf	(___fldiv@rem+2)^0,w,c
 12493  002BCE  1013               	iorwf	(___fldiv@rem+3)^0,w,c
 12494  002BD0  B4D8               	btfsc	status,2,c
 12495  002BD2  EFED  F015         	goto	u9521
 12496  002BD6  EFEF  F015         	goto	u9520
 12497  002BDA                     u9521:
 12498  002BDA  EF07  F016         	goto	l7598
 12499  002BDE                     u9520:
 12500  002BDE  8017               	bsf	___fldiv@grs^0,0,c
 12501  002BE0  EF07  F016         	goto	l7598
 12502  002BE4                     l7592:
 12503  002BE4  90D8               	bcf	status,0,c
 12504  002BE6  3604               	rlcf	___fldiv@b^0,f,c
 12505  002BE8  3605               	rlcf	(___fldiv@b+1)^0,f,c
 12506  002BEA  3606               	rlcf	(___fldiv@b+2)^0,f,c
 12507  002BEC  3607               	rlcf	(___fldiv@b+3)^0,f,c
 12508  002BEE  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
 12509  002BF0  EFFC  F015         	goto	u9531
 12510  002BF4  EFFE  F015         	goto	u9530
 12511  002BF8                     u9531:
 12512  002BF8  EFFF  F015         	goto	l1380
 12513  002BFC                     u9530:
 12514  002BFC  8004               	bsf	___fldiv@b^0,0,c
 12515  002BFE                     l1380:
 12516  002BFE  90D8               	bcf	status,0,c
 12517  002C00  3617               	rlcf	___fldiv@grs^0,f,c
 12518  002C02  3618               	rlcf	(___fldiv@grs+1)^0,f,c
 12519  002C04  3619               	rlcf	(___fldiv@grs+2)^0,f,c
 12520  002C06  361A               	rlcf	(___fldiv@grs+3)^0,f,c
 12521  002C08  0615               	decf	___fldiv@new_exp^0,f,c
 12522  002C0A  A0D8               	btfss	status,0,c
 12523  002C0C  0616               	decf	(___fldiv@new_exp+1)^0,f,c
 12524  002C0E                     l7598:
 12525  002C0E  AE06               	btfss	(___fldiv@b+2)^0,7,c
 12526  002C10  EF0C  F016         	goto	u9541
 12527  002C14  EF0E  F016         	goto	u9540
 12528  002C18                     u9541:
 12529  002C18  EFF2  F015         	goto	l7592
 12530  002C1C                     u9540:
 12531  002C1C  0E00               	movlw	0
 12532  002C1E  6E1C               	movwf	___fldiv@aexp^0,c
 12533  002C20  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
 12534  002C22  EF15  F016         	goto	u9551
 12535  002C26  EF17  F016         	goto	u9550
 12536  002C2A                     u9551:
 12537  002C2A  EF3B  F016         	goto	l1382
 12538  002C2E                     u9550:
 12539  002C2E  0EFF               	movlw	255
 12540  002C30  1417               	andwf	___fldiv@grs^0,w,c
 12541  002C32  6E0C               	movwf	??___fldiv^0,c
 12542  002C34  0EFF               	movlw	255
 12543  002C36  1418               	andwf	(___fldiv@grs+1)^0,w,c
 12544  002C38  6E0D               	movwf	(??___fldiv+1)^0,c
 12545  002C3A  0EFF               	movlw	255
 12546  002C3C  1419               	andwf	(___fldiv@grs+2)^0,w,c
 12547  002C3E  6E0E               	movwf	(??___fldiv+2)^0,c
 12548  002C40  0E7F               	movlw	127
 12549  002C42  141A               	andwf	(___fldiv@grs+3)^0,w,c
 12550  002C44  6E0F               	movwf	(??___fldiv+3)^0,c
 12551  002C46  500C               	movf	??___fldiv^0,w,c
 12552  002C48  100D               	iorwf	(??___fldiv+1)^0,w,c
 12553  002C4A  100E               	iorwf	(??___fldiv+2)^0,w,c
 12554  002C4C  100F               	iorwf	(??___fldiv+3)^0,w,c
 12555  002C4E  B4D8               	btfsc	status,2,c
 12556  002C50  EF2C  F016         	goto	u9561
 12557  002C54  EF2E  F016         	goto	u9560
 12558  002C58                     u9561:
 12559  002C58  EF32  F016         	goto	l1383
 12560  002C5C                     u9560:
 12561  002C5C                     l7606:
 12562  002C5C  0E01               	movlw	1
 12563  002C5E  6E1C               	movwf	___fldiv@aexp^0,c
 12564  002C60  EF3B  F016         	goto	l1382
 12565  002C64                     l1383:
 12566  002C64  A004               	btfss	___fldiv@b^0,0,c
 12567  002C66  EF37  F016         	goto	u9571
 12568  002C6A  EF39  F016         	goto	u9570
 12569  002C6E                     u9571:
 12570  002C6E  EF3B  F016         	goto	l1382
 12571  002C72                     u9570:
 12572  002C72  EF2E  F016         	goto	l7606
 12573  002C76                     l1382:
 12574  002C76  501C               	movf	___fldiv@aexp^0,w,c
 12575  002C78  B4D8               	btfsc	status,2,c
 12576  002C7A  EF41  F016         	goto	u9581
 12577  002C7E  EF43  F016         	goto	u9580
 12578  002C82                     u9581:
 12579  002C82  EF67  F016         	goto	l7618
 12580  002C86                     u9580:
 12581  002C86  0E01               	movlw	1
 12582  002C88  2604               	addwf	___fldiv@b^0,f,c
 12583  002C8A  0E00               	movlw	0
 12584  002C8C  2205               	addwfc	(___fldiv@b+1)^0,f,c
 12585  002C8E  2206               	addwfc	(___fldiv@b+2)^0,f,c
 12586  002C90  2207               	addwfc	(___fldiv@b+3)^0,f,c
 12587  002C92  A007               	btfss	(___fldiv@b+3)^0,0,c
 12588  002C94  EF4E  F016         	goto	u9591
 12589  002C98  EF50  F016         	goto	u9590
 12590  002C9C                     u9591:
 12591  002C9C  EF67  F016         	goto	l7618
 12592  002CA0                     u9590:
 12593  002CA0  C004  F00C         	movff	___fldiv@b,??___fldiv
 12594  002CA4  C005  F00D         	movff	___fldiv@b+1,??___fldiv+1
 12595  002CA8  C006  F00E         	movff	___fldiv@b+2,??___fldiv+2
 12596  002CAC  C007  F00F         	movff	___fldiv@b+3,??___fldiv+3
 12597  002CB0  340F               	rlcf	(??___fldiv+3)^0,w,c
 12598  002CB2  320F               	rrcf	(??___fldiv+3)^0,f,c
 12599  002CB4  320E               	rrcf	(??___fldiv+2)^0,f,c
 12600  002CB6  320D               	rrcf	(??___fldiv+1)^0,f,c
 12601  002CB8  320C               	rrcf	??___fldiv^0,f,c
 12602  002CBA  C00C  F004         	movff	??___fldiv,___fldiv@b
 12603  002CBE  C00D  F005         	movff	??___fldiv+1,___fldiv@b+1
 12604  002CC2  C00E  F006         	movff	??___fldiv+2,___fldiv@b+2
 12605  002CC6  C00F  F007         	movff	??___fldiv+3,___fldiv@b+3
 12606  002CCA  4A15               	infsnz	___fldiv@new_exp^0,f,c
 12607  002CCC  2A16               	incf	(___fldiv@new_exp+1)^0,f,c
 12608  002CCE                     l7618:
 12609  002CCE  BE16               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12610  002CD0  EF72  F016         	goto	u9601
 12611  002CD4  5016               	movf	(___fldiv@new_exp+1)^0,w,c
 12612  002CD6  E108               	bnz	u9600
 12613  002CD8  2815               	incf	___fldiv@new_exp^0,w,c
 12614  002CDA  A0D8               	btfss	status,0,c
 12615  002CDC  EF72  F016         	goto	u9601
 12616  002CE0  EF74  F016         	goto	u9600
 12617  002CE4                     u9601:
 12618  002CE4  EF7F  F016         	goto	l7622
 12619  002CE8                     u9600:
 12620  002CE8  0E00               	movlw	0
 12621  002CEA  6E16               	movwf	(___fldiv@new_exp+1)^0,c
 12622  002CEC  6815               	setf	___fldiv@new_exp^0,c
 12623  002CEE  0E00               	movlw	0
 12624  002CF0  6E04               	movwf	___fldiv@b^0,c
 12625  002CF2  0E00               	movlw	0
 12626  002CF4  6E05               	movwf	(___fldiv@b+1)^0,c
 12627  002CF6  0E00               	movlw	0
 12628  002CF8  6E06               	movwf	(___fldiv@b+2)^0,c
 12629  002CFA  0E00               	movlw	0
 12630  002CFC  6E07               	movwf	(___fldiv@b+3)^0,c
 12631  002CFE                     l7622:
 12632  002CFE  BE16               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12633  002D00  EF8C  F016         	goto	u9610
 12634  002D04  5016               	movf	(___fldiv@new_exp+1)^0,w,c
 12635  002D06  E106               	bnz	u9611
 12636  002D08  0415               	decf	___fldiv@new_exp^0,w,c
 12637  002D0A  B0D8               	btfsc	status,0,c
 12638  002D0C  EF8A  F016         	goto	u9611
 12639  002D10  EF8C  F016         	goto	u9610
 12640  002D14                     u9611:
 12641  002D14  EF9A  F016         	goto	l7626
 12642  002D18                     u9610:
 12643  002D18  0E00               	movlw	0
 12644  002D1A  6E16               	movwf	(___fldiv@new_exp+1)^0,c
 12645  002D1C  0E00               	movlw	0
 12646  002D1E  6E15               	movwf	___fldiv@new_exp^0,c
 12647  002D20  0E00               	movlw	0
 12648  002D22  6E04               	movwf	___fldiv@b^0,c
 12649  002D24  0E00               	movlw	0
 12650  002D26  6E05               	movwf	(___fldiv@b+1)^0,c
 12651  002D28  0E00               	movlw	0
 12652  002D2A  6E06               	movwf	(___fldiv@b+2)^0,c
 12653  002D2C  0E00               	movlw	0
 12654  002D2E  6E07               	movwf	(___fldiv@b+3)^0,c
 12655  002D30  0E00               	movlw	0
 12656  002D32  6E14               	movwf	___fldiv@sign^0,c
 12657  002D34                     l7626:
 12658  002D34  C015  F01B         	movff	___fldiv@new_exp,___fldiv@bexp
 12659  002D38  A01B               	btfss	___fldiv@bexp^0,0,c
 12660  002D3A  EFA1  F016         	goto	u9621
 12661  002D3E  EFA3  F016         	goto	u9620
 12662  002D42                     u9621:
 12663  002D42  EFA6  F016         	goto	l7632
 12664  002D46                     u9620:
 12665  002D46  8E06               	bsf	(___fldiv@b+2)^0,7,c
 12666  002D48  EFA7  F016         	goto	l7634
 12667  002D4C                     l7632:
 12668  002D4C  9E06               	bcf	(___fldiv@b+2)^0,7,c
 12669  002D4E                     l7634:
 12670  002D4E  90D8               	bcf	status,0,c
 12671  002D50  301B               	rrcf	___fldiv@bexp^0,w,c
 12672  002D52  6E07               	movwf	(___fldiv@b+3)^0,c
 12673  002D54  EF5D  F015         	goto	l7548
 12674  002D58                     l1369:
 12675  002D58  0012               	return		;funcret
 12676  002D5A                     __end_of___fldiv:
 12677                           	opt callstack 0
 12678                           
 12679 ;; *************** function ___awmod *****************
 12680 ;; Defined at:
 12681 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 12682 ;; Parameters:    Size  Location     Type
 12683 ;;  dividend        2    3[COMRAM] int 
 12684 ;;  divisor         2    5[COMRAM] int 
 12685 ;; Auto vars:     Size  Location     Type
 12686 ;;  sign            1    8[COMRAM] unsigned char 
 12687 ;;  counter         1    7[COMRAM] unsigned char 
 12688 ;; Return value:  Size  Location     Type
 12689 ;;                  2    3[COMRAM] int 
 12690 ;; Registers used:
 12691 ;;		wreg, status,2, status,0
 12692 ;; Tracked objects:
 12693 ;;		On entry : 0/0
 12694 ;;		On exit  : 0/0
 12695 ;;		Unchanged: 0/0
 12696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12697 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12698 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12700 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12701 ;;Total ram usage:        6 bytes
 12702 ;; Hardware stack levels used:    1
 12703 ;; Hardware stack levels required when called:    4
 12704 ;; This function calls:
 12705 ;;		Nothing
 12706 ;; This function is called by:
 12707 ;;		_efgtoa
 12708 ;; This function uses a non-reentrant model
 12709 ;;
 12710                           
 12711                           	psect	text29
 12712  0051AE                     __ptext29:
 12713                           	opt callstack 0
 12714  0051AE                     ___awmod:
 12715                           	opt callstack 21
 12716  0051AE  0E00               	movlw	0
 12717  0051B0  6E09               	movwf	___awmod@sign^0,c
 12718  0051B2  BE05               	btfsc	(___awmod@dividend+1)^0,7,c
 12719  0051B4  EFE0  F028         	goto	u9880
 12720  0051B8  EFDE  F028         	goto	u9881
 12721  0051BC                     u9881:
 12722  0051BC  EFE6  F028         	goto	l7830
 12723  0051C0                     u9880:
 12724  0051C0  6C04               	negf	___awmod@dividend^0,c
 12725  0051C2  1E05               	comf	(___awmod@dividend+1)^0,f,c
 12726  0051C4  B0D8               	btfsc	status,0,c
 12727  0051C6  2A05               	incf	(___awmod@dividend+1)^0,f,c
 12728  0051C8  0E01               	movlw	1
 12729  0051CA  6E09               	movwf	___awmod@sign^0,c
 12730  0051CC                     l7830:
 12731  0051CC  BE07               	btfsc	(___awmod@divisor+1)^0,7,c
 12732  0051CE  EFED  F028         	goto	u9890
 12733  0051D2  EFEB  F028         	goto	u9891
 12734  0051D6                     u9891:
 12735  0051D6  EFF1  F028         	goto	l7834
 12736  0051DA                     u9890:
 12737  0051DA  6C06               	negf	___awmod@divisor^0,c
 12738  0051DC  1E07               	comf	(___awmod@divisor+1)^0,f,c
 12739  0051DE  B0D8               	btfsc	status,0,c
 12740  0051E0  2A07               	incf	(___awmod@divisor+1)^0,f,c
 12741  0051E2                     l7834:
 12742  0051E2  5006               	movf	___awmod@divisor^0,w,c
 12743  0051E4  1007               	iorwf	(___awmod@divisor+1)^0,w,c
 12744  0051E6  B4D8               	btfsc	status,2,c
 12745  0051E8  EFF8  F028         	goto	u9901
 12746  0051EC  EFFA  F028         	goto	u9900
 12747  0051F0                     u9901:
 12748  0051F0  EF1E  F029         	goto	l7850
 12749  0051F4                     u9900:
 12750  0051F4  0E01               	movlw	1
 12751  0051F6  6E08               	movwf	___awmod@counter^0,c
 12752  0051F8  EF02  F029         	goto	l7840
 12753  0051FC                     l7838:
 12754  0051FC  90D8               	bcf	status,0,c
 12755  0051FE  3606               	rlcf	___awmod@divisor^0,f,c
 12756  005200  3607               	rlcf	(___awmod@divisor+1)^0,f,c
 12757  005202  2A08               	incf	___awmod@counter^0,f,c
 12758  005204                     l7840:
 12759  005204  AE07               	btfss	(___awmod@divisor+1)^0,7,c
 12760  005206  EF07  F029         	goto	u9911
 12761  00520A  EF09  F029         	goto	u9910
 12762  00520E                     u9911:
 12763  00520E  EFFE  F028         	goto	l7838
 12764  005212                     u9910:
 12765  005212                     l7842:
 12766  005212  5006               	movf	___awmod@divisor^0,w,c
 12767  005214  5C04               	subwf	___awmod@dividend^0,w,c
 12768  005216  5007               	movf	(___awmod@divisor+1)^0,w,c
 12769  005218  5805               	subwfb	(___awmod@dividend+1)^0,w,c
 12770  00521A  A0D8               	btfss	status,0,c
 12771  00521C  EF12  F029         	goto	u9921
 12772  005220  EF14  F029         	goto	u9920
 12773  005224                     u9921:
 12774  005224  EF18  F029         	goto	l7846
 12775  005228                     u9920:
 12776  005228  5006               	movf	___awmod@divisor^0,w,c
 12777  00522A  5E04               	subwf	___awmod@dividend^0,f,c
 12778  00522C  5007               	movf	(___awmod@divisor+1)^0,w,c
 12779  00522E  5A05               	subwfb	(___awmod@dividend+1)^0,f,c
 12780  005230                     l7846:
 12781  005230  90D8               	bcf	status,0,c
 12782  005232  3207               	rrcf	(___awmod@divisor+1)^0,f,c
 12783  005234  3206               	rrcf	___awmod@divisor^0,f,c
 12784  005236  2E08               	decfsz	___awmod@counter^0,f,c
 12785  005238  EF09  F029         	goto	l7842
 12786  00523C                     l7850:
 12787  00523C  5009               	movf	___awmod@sign^0,w,c
 12788  00523E  B4D8               	btfsc	status,2,c
 12789  005240  EF24  F029         	goto	u9931
 12790  005244  EF26  F029         	goto	u9930
 12791  005248                     u9931:
 12792  005248  EF2A  F029         	goto	l7854
 12793  00524C                     u9930:
 12794  00524C  6C04               	negf	___awmod@dividend^0,c
 12795  00524E  1E05               	comf	(___awmod@dividend+1)^0,f,c
 12796  005250  B0D8               	btfsc	status,0,c
 12797  005252  2A05               	incf	(___awmod@dividend+1)^0,f,c
 12798  005254                     l7854:
 12799  005254  C004  F004         	movff	___awmod@dividend,?___awmod
 12800  005258  C005  F005         	movff	___awmod@dividend+1,?___awmod+1
 12801  00525C  0012               	return		;funcret
 12802  00525E                     __end_of___awmod:
 12803                           	opt callstack 0
 12804                           
 12805 ;; *************** function ___awdiv *****************
 12806 ;; Defined at:
 12807 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 12808 ;; Parameters:    Size  Location     Type
 12809 ;;  dividend        2    3[COMRAM] int 
 12810 ;;  divisor         2    5[COMRAM] int 
 12811 ;; Auto vars:     Size  Location     Type
 12812 ;;  quotient        2    9[COMRAM] int 
 12813 ;;  sign            1    8[COMRAM] unsigned char 
 12814 ;;  counter         1    7[COMRAM] unsigned char 
 12815 ;; Return value:  Size  Location     Type
 12816 ;;                  2    3[COMRAM] int 
 12817 ;; Registers used:
 12818 ;;		wreg, status,2, status,0
 12819 ;; Tracked objects:
 12820 ;;		On entry : 0/0
 12821 ;;		On exit  : 0/0
 12822 ;;		Unchanged: 0/0
 12823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12824 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12825 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12827 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12828 ;;Total ram usage:        8 bytes
 12829 ;; Hardware stack levels used:    1
 12830 ;; Hardware stack levels required when called:    4
 12831 ;; This function calls:
 12832 ;;		Nothing
 12833 ;; This function is called by:
 12834 ;;		_efgtoa
 12835 ;; This function uses a non-reentrant model
 12836 ;;
 12837                           
 12838                           	psect	text30
 12839  0050EA                     __ptext30:
 12840                           	opt callstack 0
 12841  0050EA                     ___awdiv:
 12842                           	opt callstack 21
 12843  0050EA  0E00               	movlw	0
 12844  0050EC  6E09               	movwf	___awdiv@sign^0,c
 12845  0050EE  BE07               	btfsc	(___awdiv@divisor+1)^0,7,c
 12846  0050F0  EF7E  F028         	goto	u9820
 12847  0050F4  EF7C  F028         	goto	u9821
 12848  0050F8                     u9821:
 12849  0050F8  EF84  F028         	goto	l7786
 12850  0050FC                     u9820:
 12851  0050FC  6C06               	negf	___awdiv@divisor^0,c
 12852  0050FE  1E07               	comf	(___awdiv@divisor+1)^0,f,c
 12853  005100  B0D8               	btfsc	status,0,c
 12854  005102  2A07               	incf	(___awdiv@divisor+1)^0,f,c
 12855  005104  0E01               	movlw	1
 12856  005106  6E09               	movwf	___awdiv@sign^0,c
 12857  005108                     l7786:
 12858  005108  BE05               	btfsc	(___awdiv@dividend+1)^0,7,c
 12859  00510A  EF8B  F028         	goto	u9830
 12860  00510E  EF89  F028         	goto	u9831
 12861  005112                     u9831:
 12862  005112  EF91  F028         	goto	l7792
 12863  005116                     u9830:
 12864  005116  6C04               	negf	___awdiv@dividend^0,c
 12865  005118  1E05               	comf	(___awdiv@dividend+1)^0,f,c
 12866  00511A  B0D8               	btfsc	status,0,c
 12867  00511C  2A05               	incf	(___awdiv@dividend+1)^0,f,c
 12868  00511E  0E01               	movlw	1
 12869  005120  1A09               	xorwf	___awdiv@sign^0,f,c
 12870  005122                     l7792:
 12871  005122  0E00               	movlw	0
 12872  005124  6E0B               	movwf	(___awdiv@quotient+1)^0,c
 12873  005126  0E00               	movlw	0
 12874  005128  6E0A               	movwf	___awdiv@quotient^0,c
 12875  00512A  5006               	movf	___awdiv@divisor^0,w,c
 12876  00512C  1007               	iorwf	(___awdiv@divisor+1)^0,w,c
 12877  00512E  B4D8               	btfsc	status,2,c
 12878  005130  EF9C  F028         	goto	u9841
 12879  005134  EF9E  F028         	goto	u9840
 12880  005138                     u9841:
 12881  005138  EFC6  F028         	goto	l7814
 12882  00513C                     u9840:
 12883  00513C  0E01               	movlw	1
 12884  00513E  6E08               	movwf	___awdiv@counter^0,c
 12885  005140  EFA6  F028         	goto	l7800
 12886  005144                     l7798:
 12887  005144  90D8               	bcf	status,0,c
 12888  005146  3606               	rlcf	___awdiv@divisor^0,f,c
 12889  005148  3607               	rlcf	(___awdiv@divisor+1)^0,f,c
 12890  00514A  2A08               	incf	___awdiv@counter^0,f,c
 12891  00514C                     l7800:
 12892  00514C  AE07               	btfss	(___awdiv@divisor+1)^0,7,c
 12893  00514E  EFAB  F028         	goto	u9851
 12894  005152  EFAD  F028         	goto	u9850
 12895  005156                     u9851:
 12896  005156  EFA2  F028         	goto	l7798
 12897  00515A                     u9850:
 12898  00515A                     l7802:
 12899  00515A  90D8               	bcf	status,0,c
 12900  00515C  360A               	rlcf	___awdiv@quotient^0,f,c
 12901  00515E  360B               	rlcf	(___awdiv@quotient+1)^0,f,c
 12902  005160  5006               	movf	___awdiv@divisor^0,w,c
 12903  005162  5C04               	subwf	___awdiv@dividend^0,w,c
 12904  005164  5007               	movf	(___awdiv@divisor+1)^0,w,c
 12905  005166  5805               	subwfb	(___awdiv@dividend+1)^0,w,c
 12906  005168  A0D8               	btfss	status,0,c
 12907  00516A  EFB9  F028         	goto	u9861
 12908  00516E  EFBB  F028         	goto	u9860
 12909  005172                     u9861:
 12910  005172  EFC0  F028         	goto	l7810
 12911  005176                     u9860:
 12912  005176  5006               	movf	___awdiv@divisor^0,w,c
 12913  005178  5E04               	subwf	___awdiv@dividend^0,f,c
 12914  00517A  5007               	movf	(___awdiv@divisor+1)^0,w,c
 12915  00517C  5A05               	subwfb	(___awdiv@dividend+1)^0,f,c
 12916  00517E  800A               	bsf	___awdiv@quotient^0,0,c
 12917  005180                     l7810:
 12918  005180  90D8               	bcf	status,0,c
 12919  005182  3207               	rrcf	(___awdiv@divisor+1)^0,f,c
 12920  005184  3206               	rrcf	___awdiv@divisor^0,f,c
 12921  005186  2E08               	decfsz	___awdiv@counter^0,f,c
 12922  005188  EFAD  F028         	goto	l7802
 12923  00518C                     l7814:
 12924  00518C  5009               	movf	___awdiv@sign^0,w,c
 12925  00518E  B4D8               	btfsc	status,2,c
 12926  005190  EFCC  F028         	goto	u9871
 12927  005194  EFCE  F028         	goto	u9870
 12928  005198                     u9871:
 12929  005198  EFD2  F028         	goto	l7818
 12930  00519C                     u9870:
 12931  00519C  6C0A               	negf	___awdiv@quotient^0,c
 12932  00519E  1E0B               	comf	(___awdiv@quotient+1)^0,f,c
 12933  0051A0  B0D8               	btfsc	status,0,c
 12934  0051A2  2A0B               	incf	(___awdiv@quotient+1)^0,f,c
 12935  0051A4                     l7818:
 12936  0051A4  C00A  F004         	movff	___awdiv@quotient,?___awdiv
 12937  0051A8  C00B  F005         	movff	___awdiv@quotient+1,?___awdiv+1
 12938  0051AC  0012               	return		;funcret
 12939  0051AE                     __end_of___awdiv:
 12940                           	opt callstack 0
 12941                           
 12942 ;; *************** function _dtoa *****************
 12943 ;; Defined at:
 12944 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 12945 ;; Parameters:    Size  Location     Type
 12946 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 12947 ;;		 -> vsnprintf@f(6), 
 12948 ;;  d               8   32[COMRAM] long long 
 12949 ;; Auto vars:     Size  Location     Type
 12950 ;;  n               8   56[COMRAM] long long 
 12951 ;;  i               2   64[COMRAM] int 
 12952 ;;  s               2   54[COMRAM] int 
 12953 ;;  w               2   52[COMRAM] int 
 12954 ;;  p               2   50[COMRAM] int 
 12955 ;; Return value:  Size  Location     Type
 12956 ;;                  2   30[COMRAM] int 
 12957 ;; Registers used:
 12958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12959 ;; Tracked objects:
 12960 ;;		On entry : 0/0
 12961 ;;		On exit  : 0/0
 12962 ;;		Unchanged: 0/0
 12963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12964 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12965 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12966 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12967 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12968 ;;Total ram usage:       36 bytes
 12969 ;; Hardware stack levels used:    1
 12970 ;; Hardware stack levels required when called:    8
 12971 ;; This function calls:
 12972 ;;		___aodiv
 12973 ;;		___aomod
 12974 ;;		_abs
 12975 ;;		_pad
 12976 ;; This function is called by:
 12977 ;;		_vfpfcnvrt
 12978 ;; This function uses a non-reentrant model
 12979 ;;
 12980                           
 12981                           	psect	text31
 12982  0030E0                     __ptext31:
 12983                           	opt callstack 0
 12984  0030E0                     _dtoa:
 12985                           	opt callstack 18
 12986  0030E0                     
 12987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 12988  0030E0  C021  F039         	movff	dtoa@d,dtoa@n
 12989  0030E4  C022  F03A         	movff	dtoa@d+1,dtoa@n+1
 12990  0030E8  C023  F03B         	movff	dtoa@d+2,dtoa@n+2
 12991  0030EC  C024  F03C         	movff	dtoa@d+3,dtoa@n+3
 12992  0030F0  C025  F03D         	movff	dtoa@d+4,dtoa@n+4
 12993  0030F4  C026  F03E         	movff	dtoa@d+5,dtoa@n+5
 12994  0030F8  C027  F03F         	movff	dtoa@d+6,dtoa@n+6
 12995  0030FC  C028  F040         	movff	dtoa@d+7,dtoa@n+7
 12996  003100                     
 12997                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 12998  003100  BE40               	btfsc	(dtoa@n+7)^0,7,c
 12999  003102  EF85  F018         	goto	u10201
 13000  003106  EF88  F018         	goto	u10200
 13001  00310A                     u10201:
 13002  00310A  0E01               	movlw	1
 13003  00310C  EF89  F018         	goto	u10210
 13004  003110                     u10200:
 13005  003110  0E00               	movlw	0
 13006  003112                     u10210:
 13007  003112  6E37               	movwf	dtoa@s^0,c
 13008  003114  6A38               	clrf	(dtoa@s+1)^0,c
 13009                           
 13010                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 13011  003116  5037               	movf	dtoa@s^0,w,c
 13012  003118  1038               	iorwf	(dtoa@s+1)^0,w,c
 13013  00311A  B4D8               	btfsc	status,2,c
 13014  00311C  EF92  F018         	goto	u10221
 13015  003120  EF94  F018         	goto	u10220
 13016  003124                     u10221:
 13017  003124  EFA4  F018         	goto	l8018
 13018  003128                     u10220:
 13019  003128                     
 13020                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 13021  003128  1E40               	comf	(dtoa@n+7)^0,f,c
 13022  00312A  1E3F               	comf	(dtoa@n+6)^0,f,c
 13023  00312C  1E3E               	comf	(dtoa@n+5)^0,f,c
 13024  00312E  1E3D               	comf	(dtoa@n+4)^0,f,c
 13025  003130  1E3C               	comf	(dtoa@n+3)^0,f,c
 13026  003132  1E3B               	comf	(dtoa@n+2)^0,f,c
 13027  003134  1E3A               	comf	(dtoa@n+1)^0,f,c
 13028  003136  6C39               	negf	dtoa@n^0,c
 13029  003138  0E00               	movlw	0
 13030  00313A  223A               	addwfc	(dtoa@n+1)^0,f,c
 13031  00313C  223B               	addwfc	(dtoa@n+2)^0,f,c
 13032  00313E  223C               	addwfc	(dtoa@n+3)^0,f,c
 13033  003140  223D               	addwfc	(dtoa@n+4)^0,f,c
 13034  003142  223E               	addwfc	(dtoa@n+5)^0,f,c
 13035  003144  223F               	addwfc	(dtoa@n+6)^0,f,c
 13036  003146  2240               	addwfc	(dtoa@n+7)^0,f,c
 13037  003148                     l8018:
 13038                           
 13039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 13040  003148  BE59               	btfsc	(_prec+1)^0,7,c
 13041  00314A  EFA9  F018         	goto	u10231
 13042  00314E  EFAB  F018         	goto	u10230
 13043  003152                     u10231:
 13044  003152  EFAD  F018         	goto	l8022
 13045  003156                     u10230:
 13046  003156                     
 13047                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 13048  003156  0100               	movlb	0	; () banked
 13049  003158  93F2               	bcf	_flags& (0+255),1,b
 13050  00315A                     l8022:
 13051                           
 13052                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 13053  00315A  BE59               	btfsc	(_prec+1)^0,7,c
 13054  00315C  EFBA  F018         	goto	u10240
 13055  003160  5059               	movf	(_prec+1)^0,w,c
 13056  003162  E106               	bnz	u10241
 13057  003164  0458               	decf	_prec^0,w,c
 13058  003166  B0D8               	btfsc	status,0,c
 13059  003168  EFB8  F018         	goto	u10241
 13060  00316C  EFBA  F018         	goto	u10240
 13061  003170                     u10241:
 13062  003170  EFC0  F018         	goto	l497
 13063  003174                     u10240:
 13064  003174  0E00               	movlw	0
 13065  003176  6E34               	movwf	(dtoa@p+1)^0,c
 13066  003178  0E01               	movlw	1
 13067  00317A  6E33               	movwf	dtoa@p^0,c
 13068  00317C  EFC4  F018         	goto	l499
 13069  003180                     l497:
 13070  003180  C058  F033         	movff	_prec,dtoa@p
 13071  003184  C059  F034         	movff	_prec+1,dtoa@p+1
 13072  003188                     l499:
 13073                           
 13074                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 13075  003188  C0F0  F035         	movff	_width,dtoa@w
 13076  00318C  C0F1  F036         	movff	_width+1,dtoa@w+1
 13077  003190                     
 13078                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 13079  003190  5037               	movf	dtoa@s^0,w,c
 13080  003192  1038               	iorwf	(dtoa@s+1)^0,w,c
 13081  003194  A4D8               	btfss	status,2,c
 13082  003196  EFCF  F018         	goto	u10251
 13083  00319A  EFD1  F018         	goto	u10250
 13084  00319E                     u10251:
 13085  00319E  EFD9  F018         	goto	l8030
 13086  0031A2                     u10250:
 13087  0031A2  0100               	movlb	0	; () banked
 13088  0031A4  A5F2               	btfss	_flags& (0+255),2,b
 13089  0031A6  EFD7  F018         	goto	u10261
 13090  0031AA  EFD9  F018         	goto	u10260
 13091  0031AE                     u10261:
 13092  0031AE  EFDC  F018         	goto	l8032
 13093  0031B2                     u10260:
 13094  0031B2                     l8030:
 13095                           
 13096                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 13097  0031B2  0635               	decf	dtoa@w^0,f,c
 13098  0031B4  A0D8               	btfss	status,0,c
 13099  0031B6  0636               	decf	(dtoa@w+1)^0,f,c
 13100  0031B8                     l8032:
 13101                           
 13102                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 13103  0031B8  0E00               	movlw	0
 13104  0031BA  6E42               	movwf	(dtoa@i+1)^0,c
 13105  0031BC  0E4F               	movlw	79
 13106  0031BE  6E41               	movwf	dtoa@i^0,c
 13107  0031C0                     
 13108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 13109  0031C0  0E00               	movlw	0
 13110  0031C2  0101               	movlb	1	; () banked
 13111  0031C4  6FB3               	movwf	(_dbuf+79)& (0+255),b
 13112                           
 13113                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13114  0031C6  EF61  F019         	goto	l8046
 13115  0031CA                     l8036:
 13116                           
 13117                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 13118  0031CA  0641               	decf	dtoa@i^0,f,c
 13119  0031CC  A0D8               	btfss	status,0,c
 13120  0031CE  0642               	decf	(dtoa@i+1)^0,f,c
 13121  0031D0                     
 13122                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 13123  0031D0  0E64               	movlw	low _dbuf
 13124  0031D2  2441               	addwf	dtoa@i^0,w,c
 13125  0031D4  6ED9               	movwf	fsr2l,c
 13126  0031D6  0E01               	movlw	high _dbuf
 13127  0031D8  2042               	addwfc	(dtoa@i+1)^0,w,c
 13128  0031DA  6EDA               	movwf	fsr2h,c
 13129  0031DC  C039  F004         	movff	dtoa@n,___aomod@dividend
 13130  0031E0  C03A  F005         	movff	dtoa@n+1,___aomod@dividend+1
 13131  0031E4  C03B  F006         	movff	dtoa@n+2,___aomod@dividend+2
 13132  0031E8  C03C  F007         	movff	dtoa@n+3,___aomod@dividend+3
 13133  0031EC  C03D  F008         	movff	dtoa@n+4,___aomod@dividend+4
 13134  0031F0  C03E  F009         	movff	dtoa@n+5,___aomod@dividend+5
 13135  0031F4  C03F  F00A         	movff	dtoa@n+6,___aomod@dividend+6
 13136  0031F8  C040  F00B         	movff	dtoa@n+7,___aomod@dividend+7
 13137  0031FC  0E0A               	movlw	10
 13138  0031FE  6E0C               	movwf	___aomod@divisor^0,c
 13139  003200  0E00               	movlw	0
 13140  003202  6E0D               	movwf	(___aomod@divisor+1)^0,c
 13141  003204  0E00               	movlw	0
 13142  003206  6E0E               	movwf	(___aomod@divisor+2)^0,c
 13143  003208  0E00               	movlw	0
 13144  00320A  6E0F               	movwf	(___aomod@divisor+3)^0,c
 13145  00320C  0E00               	movlw	0
 13146  00320E  6E10               	movwf	(___aomod@divisor+4)^0,c
 13147  003210  0E00               	movlw	0
 13148  003212  6E11               	movwf	(___aomod@divisor+5)^0,c
 13149  003214  0E00               	movlw	0
 13150  003216  6E12               	movwf	(___aomod@divisor+6)^0,c
 13151  003218  0E00               	movlw	0
 13152  00321A  6E13               	movwf	(___aomod@divisor+7)^0,c
 13153  00321C  EC3F  F022         	call	___aomod	;wreg free
 13154  003220  C004  F029         	movff	?___aomod,??_dtoa
 13155  003224  C005  F02A         	movff	?___aomod+1,??_dtoa+1
 13156  003228  C006  F02B         	movff	?___aomod+2,??_dtoa+2
 13157  00322C  C007  F02C         	movff	?___aomod+3,??_dtoa+3
 13158  003230  C008  F02D         	movff	?___aomod+4,??_dtoa+4
 13159  003234  C009  F02E         	movff	?___aomod+5,??_dtoa+5
 13160  003238  C00A  F02F         	movff	?___aomod+6,??_dtoa+6
 13161  00323C  C00B  F030         	movff	?___aomod+7,??_dtoa+7
 13162  003240  C029  F016         	movff	??_dtoa,abs@a
 13163  003244  C02B  F017         	movff	??_dtoa+2,abs@a+1
 13164  003248  EC57  F02C         	call	_abs	;wreg free
 13165  00324C  5016               	movf	?_abs^0,w,c
 13166  00324E  0F30               	addlw	48
 13167  003250  6EDF               	movwf	indf2,c
 13168  003252                     
 13169                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 13170  003252  0633               	decf	dtoa@p^0,f,c
 13171  003254  A0D8               	btfss	status,0,c
 13172  003256  0634               	decf	(dtoa@p+1)^0,f,c
 13173  003258                     
 13174                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 13175  003258  0635               	decf	dtoa@w^0,f,c
 13176  00325A  A0D8               	btfss	status,0,c
 13177  00325C  0636               	decf	(dtoa@w+1)^0,f,c
 13178  00325E                     
 13179                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 13180  00325E  C039  F004         	movff	dtoa@n,___aodiv@dividend
 13181  003262  C03A  F005         	movff	dtoa@n+1,___aodiv@dividend+1
 13182  003266  C03B  F006         	movff	dtoa@n+2,___aodiv@dividend+2
 13183  00326A  C03C  F007         	movff	dtoa@n+3,___aodiv@dividend+3
 13184  00326E  C03D  F008         	movff	dtoa@n+4,___aodiv@dividend+4
 13185  003272  C03E  F009         	movff	dtoa@n+5,___aodiv@dividend+5
 13186  003276  C03F  F00A         	movff	dtoa@n+6,___aodiv@dividend+6
 13187  00327A  C040  F00B         	movff	dtoa@n+7,___aodiv@dividend+7
 13188  00327E  0E0A               	movlw	10
 13189  003280  6E0C               	movwf	___aodiv@divisor^0,c
 13190  003282  0E00               	movlw	0
 13191  003284  6E0D               	movwf	(___aodiv@divisor+1)^0,c
 13192  003286  0E00               	movlw	0
 13193  003288  6E0E               	movwf	(___aodiv@divisor+2)^0,c
 13194  00328A  0E00               	movlw	0
 13195  00328C  6E0F               	movwf	(___aodiv@divisor+3)^0,c
 13196  00328E  0E00               	movlw	0
 13197  003290  6E10               	movwf	(___aodiv@divisor+4)^0,c
 13198  003292  0E00               	movlw	0
 13199  003294  6E11               	movwf	(___aodiv@divisor+5)^0,c
 13200  003296  0E00               	movlw	0
 13201  003298  6E12               	movwf	(___aodiv@divisor+6)^0,c
 13202  00329A  0E00               	movlw	0
 13203  00329C  6E13               	movwf	(___aodiv@divisor+7)^0,c
 13204  00329E  ECFB  F01F         	call	___aodiv	;wreg free
 13205  0032A2  C004  F039         	movff	?___aodiv,dtoa@n
 13206  0032A6  C005  F03A         	movff	?___aodiv+1,dtoa@n+1
 13207  0032AA  C006  F03B         	movff	?___aodiv+2,dtoa@n+2
 13208  0032AE  C007  F03C         	movff	?___aodiv+3,dtoa@n+3
 13209  0032B2  C008  F03D         	movff	?___aodiv+4,dtoa@n+4
 13210  0032B6  C009  F03E         	movff	?___aodiv+5,dtoa@n+5
 13211  0032BA  C00A  F03F         	movff	?___aodiv+6,dtoa@n+6
 13212  0032BE  C00B  F040         	movff	?___aodiv+7,dtoa@n+7
 13213  0032C2                     l8046:
 13214                           
 13215                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13216  0032C2  BE42               	btfsc	(dtoa@i+1)^0,7,c
 13217  0032C4  EF6C  F019         	goto	u10271
 13218  0032C8  5042               	movf	(dtoa@i+1)^0,w,c
 13219  0032CA  E108               	bnz	u10270
 13220  0032CC  0441               	decf	dtoa@i^0,w,c
 13221  0032CE  A0D8               	btfss	status,0,c
 13222  0032D0  EF6C  F019         	goto	u10271
 13223  0032D4  EF6E  F019         	goto	u10270
 13224  0032D8                     u10271:
 13225  0032D8  EF9F  F019         	goto	l8056
 13226  0032DC                     u10270:
 13227  0032DC  5039               	movf	dtoa@n^0,w,c
 13228  0032DE  103A               	iorwf	(dtoa@n+1)^0,w,c
 13229  0032E0  103B               	iorwf	(dtoa@n+2)^0,w,c
 13230  0032E2  103C               	iorwf	(dtoa@n+3)^0,w,c
 13231  0032E4  103D               	iorwf	(dtoa@n+4)^0,w,c
 13232  0032E6  103E               	iorwf	(dtoa@n+5)^0,w,c
 13233  0032E8  103F               	iorwf	(dtoa@n+6)^0,w,c
 13234  0032EA  1040               	iorwf	(dtoa@n+7)^0,w,c
 13235  0032EC  A4D8               	btfss	status,2,c
 13236  0032EE  EF7B  F019         	goto	u10281
 13237  0032F2  EF7D  F019         	goto	u10280
 13238  0032F6                     u10281:
 13239  0032F6  EFE5  F018         	goto	l8036
 13240  0032FA                     u10280:
 13241  0032FA  BE34               	btfsc	(dtoa@p+1)^0,7,c
 13242  0032FC  EF8A  F019         	goto	u10290
 13243  003300  5034               	movf	(dtoa@p+1)^0,w,c
 13244  003302  E106               	bnz	u10291
 13245  003304  0433               	decf	dtoa@p^0,w,c
 13246  003306  B0D8               	btfsc	status,0,c
 13247  003308  EF88  F019         	goto	u10291
 13248  00330C  EF8A  F019         	goto	u10290
 13249  003310                     u10291:
 13250  003310  EFE5  F018         	goto	l8036
 13251  003314                     u10290:
 13252  003314  BE36               	btfsc	(dtoa@w+1)^0,7,c
 13253  003316  EF95  F019         	goto	u10301
 13254  00331A  5036               	movf	(dtoa@w+1)^0,w,c
 13255  00331C  E108               	bnz	u10300
 13256  00331E  0435               	decf	dtoa@w^0,w,c
 13257  003320  A0D8               	btfss	status,0,c
 13258  003322  EF95  F019         	goto	u10301
 13259  003326  EF97  F019         	goto	u10300
 13260  00332A                     u10301:
 13261  00332A  EF9F  F019         	goto	l8056
 13262  00332E                     u10300:
 13263  00332E  0100               	movlb	0	; () banked
 13264  003330  B3F2               	btfsc	_flags& (0+255),1,b
 13265  003332  EF9D  F019         	goto	u10311
 13266  003336  EF9F  F019         	goto	u10310
 13267  00333A                     u10311:
 13268  00333A  EFE5  F018         	goto	l8036
 13269  00333E                     u10310:
 13270  00333E                     l8056:
 13271                           
 13272                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 13273  00333E  5037               	movf	dtoa@s^0,w,c
 13274  003340  1038               	iorwf	(dtoa@s+1)^0,w,c
 13275  003342  A4D8               	btfss	status,2,c
 13276  003344  EFA6  F019         	goto	u10321
 13277  003348  EFA8  F019         	goto	u10320
 13278  00334C                     u10321:
 13279  00334C  EFB0  F019         	goto	l8060
 13280  003350                     u10320:
 13281  003350  0100               	movlb	0	; () banked
 13282  003352  A5F2               	btfss	_flags& (0+255),2,b
 13283  003354  EFAE  F019         	goto	u10331
 13284  003358  EFB0  F019         	goto	u10330
 13285  00335C                     u10331:
 13286  00335C  EFCE  F019         	goto	l8070
 13287  003360                     u10330:
 13288  003360                     l8060:
 13289                           
 13290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 13291  003360  0641               	decf	dtoa@i^0,f,c
 13292  003362  A0D8               	btfss	status,0,c
 13293  003364  0642               	decf	(dtoa@i+1)^0,f,c
 13294  003366                     
 13295                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 13296  003366  5037               	movf	dtoa@s^0,w,c
 13297  003368  1038               	iorwf	(dtoa@s+1)^0,w,c
 13298  00336A  A4D8               	btfss	status,2,c
 13299  00336C  EFBA  F019         	goto	u10341
 13300  003370  EFBC  F019         	goto	u10340
 13301  003374                     u10341:
 13302  003374  EFC2  F019         	goto	l8066
 13303  003378                     u10340:
 13304  003378  0E00               	movlw	0
 13305  00337A  6E32               	movwf	(_dtoa$1290+1)^0,c
 13306  00337C  0E2B               	movlw	43
 13307  00337E  6E31               	movwf	_dtoa$1290^0,c
 13308  003380  EFC6  F019         	goto	l8068
 13309  003384                     l8066:
 13310  003384  0E00               	movlw	0
 13311  003386  6E32               	movwf	(_dtoa$1290+1)^0,c
 13312  003388  0E2D               	movlw	45
 13313  00338A  6E31               	movwf	_dtoa$1290^0,c
 13314  00338C                     l8068:
 13315  00338C  0E64               	movlw	low _dbuf
 13316  00338E  2441               	addwf	dtoa@i^0,w,c
 13317  003390  6ED9               	movwf	fsr2l,c
 13318  003392  0E01               	movlw	high _dbuf
 13319  003394  2042               	addwfc	(dtoa@i+1)^0,w,c
 13320  003396  6EDA               	movwf	fsr2h,c
 13321  003398  C031  FFDF         	movff	_dtoa$1290,indf2
 13322  00339C                     l8070:
 13323                           
 13324                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 13325  00339C  C01F  F014         	movff	dtoa@fp,pad@fp
 13326  0033A0  C020  F015         	movff	dtoa@fp+1,pad@fp+1
 13327  0033A4  0E64               	movlw	low _dbuf
 13328  0033A6  2441               	addwf	dtoa@i^0,w,c
 13329  0033A8  6E16               	movwf	pad@buf^0,c
 13330  0033AA  0E01               	movlw	high _dbuf
 13331  0033AC  2042               	addwfc	(dtoa@i+1)^0,w,c
 13332  0033AE  6E17               	movwf	(pad@buf+1)^0,c
 13333  0033B0  C035  F018         	movff	dtoa@w,pad@p
 13334  0033B4  C036  F019         	movff	dtoa@w+1,pad@p+1
 13335  0033B8  EC12  F028         	call	_pad	;wreg free
 13336  0033BC  C014  F01F         	movff	?_pad,?_dtoa
 13337  0033C0  C015  F020         	movff	?_pad+1,?_dtoa+1
 13338  0033C4  0012               	return		;funcret
 13339  0033C6                     __end_of_dtoa:
 13340                           	opt callstack 0
 13341                           
 13342 ;; *************** function _abs *****************
 13343 ;; Defined at:
 13344 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 13345 ;; Parameters:    Size  Location     Type
 13346 ;;  a               2   21[COMRAM] int 
 13347 ;; Auto vars:     Size  Location     Type
 13348 ;;		None
 13349 ;; Return value:  Size  Location     Type
 13350 ;;                  2   21[COMRAM] int 
 13351 ;; Registers used:
 13352 ;;		wreg, status,2, status,0
 13353 ;; Tracked objects:
 13354 ;;		On entry : 0/0
 13355 ;;		On exit  : 0/0
 13356 ;;		Unchanged: 0/0
 13357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13358 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13360 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13361 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13362 ;;Total ram usage:        4 bytes
 13363 ;; Hardware stack levels used:    1
 13364 ;; Hardware stack levels required when called:    4
 13365 ;; This function calls:
 13366 ;;		Nothing
 13367 ;; This function is called by:
 13368 ;;		_dtoa
 13369 ;; This function uses a non-reentrant model
 13370 ;;
 13371                           
 13372                           	psect	text32
 13373  0058AE                     __ptext32:
 13374                           	opt callstack 0
 13375  0058AE                     _abs:
 13376                           	opt callstack 21
 13377  0058AE  BE17               	btfsc	(abs@a+1)^0,7,c
 13378  0058B0  EF64  F02C         	goto	u8970
 13379  0058B4  5017               	movf	(abs@a+1)^0,w,c
 13380  0058B6  E106               	bnz	u8971
 13381  0058B8  0416               	decf	abs@a^0,w,c
 13382  0058BA  B0D8               	btfsc	status,0,c
 13383  0058BC  EF62  F02C         	goto	u8971
 13384  0058C0  EF64  F02C         	goto	u8970
 13385  0058C4                     u8971:
 13386  0058C4  EF72  F02C         	goto	l1473
 13387  0058C8                     u8970:
 13388  0058C8  C016  F018         	movff	abs@a,??_abs
 13389  0058CC  C017  F019         	movff	abs@a+1,??_abs+1
 13390  0058D0  1E18               	comf	??_abs^0,f,c
 13391  0058D2  1E19               	comf	(??_abs+1)^0,f,c
 13392  0058D4  4A18               	infsnz	??_abs^0,f,c
 13393  0058D6  2A19               	incf	(??_abs+1)^0,f,c
 13394  0058D8  C018  F016         	movff	??_abs,?_abs
 13395  0058DC  C019  F017         	movff	??_abs+1,?_abs+1
 13396  0058E0  EF76  F02C         	goto	l1476
 13397  0058E4                     l1473:
 13398  0058E4  C016  F016         	movff	abs@a,?_abs
 13399  0058E8  C017  F017         	movff	abs@a+1,?_abs+1
 13400  0058EC                     l1476:
 13401  0058EC  0012               	return		;funcret
 13402  0058EE                     __end_of_abs:
 13403                           	opt callstack 0
 13404                           
 13405 ;; *************** function ___aomod *****************
 13406 ;; Defined at:
 13407 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 13408 ;; Parameters:    Size  Location     Type
 13409 ;;  dividend        8    3[COMRAM] long long 
 13410 ;;  divisor         8   11[COMRAM] long long 
 13411 ;; Auto vars:     Size  Location     Type
 13412 ;;  sign            1   20[COMRAM] unsigned char 
 13413 ;;  counter         1   19[COMRAM] unsigned char 
 13414 ;; Return value:  Size  Location     Type
 13415 ;;                  8    3[COMRAM] long long 
 13416 ;; Registers used:
 13417 ;;		wreg, status,2, status,0
 13418 ;; Tracked objects:
 13419 ;;		On entry : 0/0
 13420 ;;		On exit  : 0/0
 13421 ;;		Unchanged: 0/0
 13422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13423 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13424 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13426 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13427 ;;Total ram usage:       18 bytes
 13428 ;; Hardware stack levels used:    1
 13429 ;; Hardware stack levels required when called:    4
 13430 ;; This function calls:
 13431 ;;		Nothing
 13432 ;; This function is called by:
 13433 ;;		_dtoa
 13434 ;; This function uses a non-reentrant model
 13435 ;;
 13436                           
 13437                           	psect	text33
 13438  00447E                     __ptext33:
 13439                           	opt callstack 0
 13440  00447E                     ___aomod:
 13441                           	opt callstack 21
 13442  00447E  0E00               	movlw	0
 13443  004480  6E15               	movwf	___aomod@sign^0,c
 13444  004482  BE0B               	btfsc	(___aomod@dividend+7)^0,7,c
 13445  004484  EF48  F022         	goto	u9340
 13446  004488  EF46  F022         	goto	u9341
 13447  00448C                     u9341:
 13448  00448C  EF5A  F022         	goto	l7476
 13449  004490                     u9340:
 13450  004490  1E0B               	comf	(___aomod@dividend+7)^0,f,c
 13451  004492  1E0A               	comf	(___aomod@dividend+6)^0,f,c
 13452  004494  1E09               	comf	(___aomod@dividend+5)^0,f,c
 13453  004496  1E08               	comf	(___aomod@dividend+4)^0,f,c
 13454  004498  1E07               	comf	(___aomod@dividend+3)^0,f,c
 13455  00449A  1E06               	comf	(___aomod@dividend+2)^0,f,c
 13456  00449C  1E05               	comf	(___aomod@dividend+1)^0,f,c
 13457  00449E  6C04               	negf	___aomod@dividend^0,c
 13458  0044A0  0E00               	movlw	0
 13459  0044A2  2205               	addwfc	(___aomod@dividend+1)^0,f,c
 13460  0044A4  2206               	addwfc	(___aomod@dividend+2)^0,f,c
 13461  0044A6  2207               	addwfc	(___aomod@dividend+3)^0,f,c
 13462  0044A8  2208               	addwfc	(___aomod@dividend+4)^0,f,c
 13463  0044AA  2209               	addwfc	(___aomod@dividend+5)^0,f,c
 13464  0044AC  220A               	addwfc	(___aomod@dividend+6)^0,f,c
 13465  0044AE  220B               	addwfc	(___aomod@dividend+7)^0,f,c
 13466  0044B0  0E01               	movlw	1
 13467  0044B2  6E15               	movwf	___aomod@sign^0,c
 13468  0044B4                     l7476:
 13469  0044B4  BE13               	btfsc	(___aomod@divisor+7)^0,7,c
 13470  0044B6  EF61  F022         	goto	u9350
 13471  0044BA  EF5F  F022         	goto	u9351
 13472  0044BE                     u9351:
 13473  0044BE  EF71  F022         	goto	l7480
 13474  0044C2                     u9350:
 13475  0044C2  1E13               	comf	(___aomod@divisor+7)^0,f,c
 13476  0044C4  1E12               	comf	(___aomod@divisor+6)^0,f,c
 13477  0044C6  1E11               	comf	(___aomod@divisor+5)^0,f,c
 13478  0044C8  1E10               	comf	(___aomod@divisor+4)^0,f,c
 13479  0044CA  1E0F               	comf	(___aomod@divisor+3)^0,f,c
 13480  0044CC  1E0E               	comf	(___aomod@divisor+2)^0,f,c
 13481  0044CE  1E0D               	comf	(___aomod@divisor+1)^0,f,c
 13482  0044D0  6C0C               	negf	___aomod@divisor^0,c
 13483  0044D2  0E00               	movlw	0
 13484  0044D4  220D               	addwfc	(___aomod@divisor+1)^0,f,c
 13485  0044D6  220E               	addwfc	(___aomod@divisor+2)^0,f,c
 13486  0044D8  220F               	addwfc	(___aomod@divisor+3)^0,f,c
 13487  0044DA  2210               	addwfc	(___aomod@divisor+4)^0,f,c
 13488  0044DC  2211               	addwfc	(___aomod@divisor+5)^0,f,c
 13489  0044DE  2212               	addwfc	(___aomod@divisor+6)^0,f,c
 13490  0044E0  2213               	addwfc	(___aomod@divisor+7)^0,f,c
 13491  0044E2                     l7480:
 13492  0044E2  500C               	movf	___aomod@divisor^0,w,c
 13493  0044E4  100D               	iorwf	(___aomod@divisor+1)^0,w,c
 13494  0044E6  100E               	iorwf	(___aomod@divisor+2)^0,w,c
 13495  0044E8  100F               	iorwf	(___aomod@divisor+3)^0,w,c
 13496  0044EA  1010               	iorwf	(___aomod@divisor+4)^0,w,c
 13497  0044EC  1011               	iorwf	(___aomod@divisor+5)^0,w,c
 13498  0044EE  1012               	iorwf	(___aomod@divisor+6)^0,w,c
 13499  0044F0  1013               	iorwf	(___aomod@divisor+7)^0,w,c
 13500  0044F2  B4D8               	btfsc	status,2,c
 13501  0044F4  EF7E  F022         	goto	u9361
 13502  0044F8  EF80  F022         	goto	u9360
 13503  0044FC                     u9361:
 13504  0044FC  EFC8  F022         	goto	l7496
 13505  004500                     u9360:
 13506  004500  0E01               	movlw	1
 13507  004502  6E14               	movwf	___aomod@counter^0,c
 13508  004504  EF8E  F022         	goto	l7486
 13509  004508                     l7484:
 13510  004508  90D8               	bcf	status,0,c
 13511  00450A  360C               	rlcf	___aomod@divisor^0,f,c
 13512  00450C  360D               	rlcf	(___aomod@divisor+1)^0,f,c
 13513  00450E  360E               	rlcf	(___aomod@divisor+2)^0,f,c
 13514  004510  360F               	rlcf	(___aomod@divisor+3)^0,f,c
 13515  004512  3610               	rlcf	(___aomod@divisor+4)^0,f,c
 13516  004514  3611               	rlcf	(___aomod@divisor+5)^0,f,c
 13517  004516  3612               	rlcf	(___aomod@divisor+6)^0,f,c
 13518  004518  3613               	rlcf	(___aomod@divisor+7)^0,f,c
 13519  00451A  2A14               	incf	___aomod@counter^0,f,c
 13520  00451C                     l7486:
 13521  00451C  AE13               	btfss	(___aomod@divisor+7)^0,7,c
 13522  00451E  EF93  F022         	goto	u9371
 13523  004522  EF95  F022         	goto	u9370
 13524  004526                     u9371:
 13525  004526  EF84  F022         	goto	l7484
 13526  00452A                     u9370:
 13527  00452A                     l7488:
 13528  00452A  500C               	movf	___aomod@divisor^0,w,c
 13529  00452C  5C04               	subwf	___aomod@dividend^0,w,c
 13530  00452E  500D               	movf	(___aomod@divisor+1)^0,w,c
 13531  004530  5805               	subwfb	(___aomod@dividend+1)^0,w,c
 13532  004532  500E               	movf	(___aomod@divisor+2)^0,w,c
 13533  004534  5806               	subwfb	(___aomod@dividend+2)^0,w,c
 13534  004536  500F               	movf	(___aomod@divisor+3)^0,w,c
 13535  004538  5807               	subwfb	(___aomod@dividend+3)^0,w,c
 13536  00453A  5010               	movf	(___aomod@divisor+4)^0,w,c
 13537  00453C  5808               	subwfb	(___aomod@dividend+4)^0,w,c
 13538  00453E  5011               	movf	(___aomod@divisor+5)^0,w,c
 13539  004540  5809               	subwfb	(___aomod@dividend+5)^0,w,c
 13540  004542  5012               	movf	(___aomod@divisor+6)^0,w,c
 13541  004544  580A               	subwfb	(___aomod@dividend+6)^0,w,c
 13542  004546  5013               	movf	(___aomod@divisor+7)^0,w,c
 13543  004548  580B               	subwfb	(___aomod@dividend+7)^0,w,c
 13544  00454A  A0D8               	btfss	status,0,c
 13545  00454C  EFAA  F022         	goto	u9381
 13546  004550  EFAC  F022         	goto	u9380
 13547  004554                     u9381:
 13548  004554  EFBC  F022         	goto	l7492
 13549  004558                     u9380:
 13550  004558  500C               	movf	___aomod@divisor^0,w,c
 13551  00455A  5E04               	subwf	___aomod@dividend^0,f,c
 13552  00455C  500D               	movf	(___aomod@divisor+1)^0,w,c
 13553  00455E  5A05               	subwfb	(___aomod@dividend+1)^0,f,c
 13554  004560  500E               	movf	(___aomod@divisor+2)^0,w,c
 13555  004562  5A06               	subwfb	(___aomod@dividend+2)^0,f,c
 13556  004564  500F               	movf	(___aomod@divisor+3)^0,w,c
 13557  004566  5A07               	subwfb	(___aomod@dividend+3)^0,f,c
 13558  004568  5010               	movf	(___aomod@divisor+4)^0,w,c
 13559  00456A  5A08               	subwfb	(___aomod@dividend+4)^0,f,c
 13560  00456C  5011               	movf	(___aomod@divisor+5)^0,w,c
 13561  00456E  5A09               	subwfb	(___aomod@dividend+5)^0,f,c
 13562  004570  5012               	movf	(___aomod@divisor+6)^0,w,c
 13563  004572  5A0A               	subwfb	(___aomod@dividend+6)^0,f,c
 13564  004574  5013               	movf	(___aomod@divisor+7)^0,w,c
 13565  004576  5A0B               	subwfb	(___aomod@dividend+7)^0,f,c
 13566  004578                     l7492:
 13567  004578  90D8               	bcf	status,0,c
 13568  00457A  3213               	rrcf	(___aomod@divisor+7)^0,f,c
 13569  00457C  3212               	rrcf	(___aomod@divisor+6)^0,f,c
 13570  00457E  3211               	rrcf	(___aomod@divisor+5)^0,f,c
 13571  004580  3210               	rrcf	(___aomod@divisor+4)^0,f,c
 13572  004582  320F               	rrcf	(___aomod@divisor+3)^0,f,c
 13573  004584  320E               	rrcf	(___aomod@divisor+2)^0,f,c
 13574  004586  320D               	rrcf	(___aomod@divisor+1)^0,f,c
 13575  004588  320C               	rrcf	___aomod@divisor^0,f,c
 13576  00458A  2E14               	decfsz	___aomod@counter^0,f,c
 13577  00458C  EF95  F022         	goto	l7488
 13578  004590                     l7496:
 13579  004590  5015               	movf	___aomod@sign^0,w,c
 13580  004592  B4D8               	btfsc	status,2,c
 13581  004594  EFCE  F022         	goto	u9391
 13582  004598  EFD0  F022         	goto	u9390
 13583  00459C                     u9391:
 13584  00459C  EFE0  F022         	goto	l7500
 13585  0045A0                     u9390:
 13586  0045A0  1E0B               	comf	(___aomod@dividend+7)^0,f,c
 13587  0045A2  1E0A               	comf	(___aomod@dividend+6)^0,f,c
 13588  0045A4  1E09               	comf	(___aomod@dividend+5)^0,f,c
 13589  0045A6  1E08               	comf	(___aomod@dividend+4)^0,f,c
 13590  0045A8  1E07               	comf	(___aomod@dividend+3)^0,f,c
 13591  0045AA  1E06               	comf	(___aomod@dividend+2)^0,f,c
 13592  0045AC  1E05               	comf	(___aomod@dividend+1)^0,f,c
 13593  0045AE  6C04               	negf	___aomod@dividend^0,c
 13594  0045B0  0E00               	movlw	0
 13595  0045B2  2205               	addwfc	(___aomod@dividend+1)^0,f,c
 13596  0045B4  2206               	addwfc	(___aomod@dividend+2)^0,f,c
 13597  0045B6  2207               	addwfc	(___aomod@dividend+3)^0,f,c
 13598  0045B8  2208               	addwfc	(___aomod@dividend+4)^0,f,c
 13599  0045BA  2209               	addwfc	(___aomod@dividend+5)^0,f,c
 13600  0045BC  220A               	addwfc	(___aomod@dividend+6)^0,f,c
 13601  0045BE  220B               	addwfc	(___aomod@dividend+7)^0,f,c
 13602  0045C0                     l7500:
 13603  0045C0  C004  F004         	movff	___aomod@dividend,?___aomod
 13604  0045C4  C005  F005         	movff	___aomod@dividend+1,?___aomod+1
 13605  0045C8  C006  F006         	movff	___aomod@dividend+2,?___aomod+2
 13606  0045CC  C007  F007         	movff	___aomod@dividend+3,?___aomod+3
 13607  0045D0  C008  F008         	movff	___aomod@dividend+4,?___aomod+4
 13608  0045D4  C009  F009         	movff	___aomod@dividend+5,?___aomod+5
 13609  0045D8  C00A  F00A         	movff	___aomod@dividend+6,?___aomod+6
 13610  0045DC  C00B  F00B         	movff	___aomod@dividend+7,?___aomod+7
 13611  0045E0  0012               	return		;funcret
 13612  0045E2                     __end_of___aomod:
 13613                           	opt callstack 0
 13614                           
 13615 ;; *************** function ___aodiv *****************
 13616 ;; Defined at:
 13617 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 13618 ;; Parameters:    Size  Location     Type
 13619 ;;  dividend        8    3[COMRAM] long long 
 13620 ;;  divisor         8   11[COMRAM] long long 
 13621 ;; Auto vars:     Size  Location     Type
 13622 ;;  quotient        8   21[COMRAM] long long 
 13623 ;;  sign            1   20[COMRAM] unsigned char 
 13624 ;;  counter         1   19[COMRAM] unsigned char 
 13625 ;; Return value:  Size  Location     Type
 13626 ;;                  8    3[COMRAM] long long 
 13627 ;; Registers used:
 13628 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13629 ;; Tracked objects:
 13630 ;;		On entry : 0/0
 13631 ;;		On exit  : 0/0
 13632 ;;		Unchanged: 0/0
 13633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13634 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13635 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13637 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13638 ;;Total ram usage:       26 bytes
 13639 ;; Hardware stack levels used:    1
 13640 ;; Hardware stack levels required when called:    4
 13641 ;; This function calls:
 13642 ;;		Nothing
 13643 ;; This function is called by:
 13644 ;;		_dtoa
 13645 ;; This function uses a non-reentrant model
 13646 ;;
 13647                           
 13648                           	psect	text34
 13649  003FF6                     __ptext34:
 13650                           	opt callstack 0
 13651  003FF6                     ___aodiv:
 13652                           	opt callstack 21
 13653  003FF6  0E00               	movlw	0
 13654  003FF8  6E15               	movwf	___aodiv@sign^0,c
 13655  003FFA  BE13               	btfsc	(___aodiv@divisor+7)^0,7,c
 13656  003FFC  EF04  F020         	goto	u9270
 13657  004000  EF02  F020         	goto	u9271
 13658  004004                     u9271:
 13659  004004  EF16  F020         	goto	l7432
 13660  004008                     u9270:
 13661  004008  1E13               	comf	(___aodiv@divisor+7)^0,f,c
 13662  00400A  1E12               	comf	(___aodiv@divisor+6)^0,f,c
 13663  00400C  1E11               	comf	(___aodiv@divisor+5)^0,f,c
 13664  00400E  1E10               	comf	(___aodiv@divisor+4)^0,f,c
 13665  004010  1E0F               	comf	(___aodiv@divisor+3)^0,f,c
 13666  004012  1E0E               	comf	(___aodiv@divisor+2)^0,f,c
 13667  004014  1E0D               	comf	(___aodiv@divisor+1)^0,f,c
 13668  004016  6C0C               	negf	___aodiv@divisor^0,c
 13669  004018  0E00               	movlw	0
 13670  00401A  220D               	addwfc	(___aodiv@divisor+1)^0,f,c
 13671  00401C  220E               	addwfc	(___aodiv@divisor+2)^0,f,c
 13672  00401E  220F               	addwfc	(___aodiv@divisor+3)^0,f,c
 13673  004020  2210               	addwfc	(___aodiv@divisor+4)^0,f,c
 13674  004022  2211               	addwfc	(___aodiv@divisor+5)^0,f,c
 13675  004024  2212               	addwfc	(___aodiv@divisor+6)^0,f,c
 13676  004026  2213               	addwfc	(___aodiv@divisor+7)^0,f,c
 13677  004028  0E01               	movlw	1
 13678  00402A  6E15               	movwf	___aodiv@sign^0,c
 13679  00402C                     l7432:
 13680  00402C  BE0B               	btfsc	(___aodiv@dividend+7)^0,7,c
 13681  00402E  EF1D  F020         	goto	u9280
 13682  004032  EF1B  F020         	goto	u9281
 13683  004036                     u9281:
 13684  004036  EF2F  F020         	goto	l7438
 13685  00403A                     u9280:
 13686  00403A  1E0B               	comf	(___aodiv@dividend+7)^0,f,c
 13687  00403C  1E0A               	comf	(___aodiv@dividend+6)^0,f,c
 13688  00403E  1E09               	comf	(___aodiv@dividend+5)^0,f,c
 13689  004040  1E08               	comf	(___aodiv@dividend+4)^0,f,c
 13690  004042  1E07               	comf	(___aodiv@dividend+3)^0,f,c
 13691  004044  1E06               	comf	(___aodiv@dividend+2)^0,f,c
 13692  004046  1E05               	comf	(___aodiv@dividend+1)^0,f,c
 13693  004048  6C04               	negf	___aodiv@dividend^0,c
 13694  00404A  0E00               	movlw	0
 13695  00404C  2205               	addwfc	(___aodiv@dividend+1)^0,f,c
 13696  00404E  2206               	addwfc	(___aodiv@dividend+2)^0,f,c
 13697  004050  2207               	addwfc	(___aodiv@dividend+3)^0,f,c
 13698  004052  2208               	addwfc	(___aodiv@dividend+4)^0,f,c
 13699  004054  2209               	addwfc	(___aodiv@dividend+5)^0,f,c
 13700  004056  220A               	addwfc	(___aodiv@dividend+6)^0,f,c
 13701  004058  220B               	addwfc	(___aodiv@dividend+7)^0,f,c
 13702  00405A  0E01               	movlw	1
 13703  00405C  1A15               	xorwf	___aodiv@sign^0,f,c
 13704  00405E                     l7438:
 13705  00405E  EE20  F016         	lfsr	2,___aodiv@quotient
 13706  004062  0E07               	movlw	7
 13707  004064                     u9291:
 13708  004064  6ADE               	clrf	postinc2,c
 13709  004066  06E8               	decf	wreg,f,c
 13710  004068  E2FD               	bc	u9291
 13711  00406A  500C               	movf	___aodiv@divisor^0,w,c
 13712  00406C  100D               	iorwf	(___aodiv@divisor+1)^0,w,c
 13713  00406E  100E               	iorwf	(___aodiv@divisor+2)^0,w,c
 13714  004070  100F               	iorwf	(___aodiv@divisor+3)^0,w,c
 13715  004072  1010               	iorwf	(___aodiv@divisor+4)^0,w,c
 13716  004074  1011               	iorwf	(___aodiv@divisor+5)^0,w,c
 13717  004076  1012               	iorwf	(___aodiv@divisor+6)^0,w,c
 13718  004078  1013               	iorwf	(___aodiv@divisor+7)^0,w,c
 13719  00407A  B4D8               	btfsc	status,2,c
 13720  00407C  EF42  F020         	goto	u9301
 13721  004080  EF44  F020         	goto	u9300
 13722  004084                     u9301:
 13723  004084  EF96  F020         	goto	l7460
 13724  004088                     u9300:
 13725  004088  0E01               	movlw	1
 13726  00408A  6E14               	movwf	___aodiv@counter^0,c
 13727  00408C  EF52  F020         	goto	l7446
 13728  004090                     l7444:
 13729  004090  90D8               	bcf	status,0,c
 13730  004092  360C               	rlcf	___aodiv@divisor^0,f,c
 13731  004094  360D               	rlcf	(___aodiv@divisor+1)^0,f,c
 13732  004096  360E               	rlcf	(___aodiv@divisor+2)^0,f,c
 13733  004098  360F               	rlcf	(___aodiv@divisor+3)^0,f,c
 13734  00409A  3610               	rlcf	(___aodiv@divisor+4)^0,f,c
 13735  00409C  3611               	rlcf	(___aodiv@divisor+5)^0,f,c
 13736  00409E  3612               	rlcf	(___aodiv@divisor+6)^0,f,c
 13737  0040A0  3613               	rlcf	(___aodiv@divisor+7)^0,f,c
 13738  0040A2  2A14               	incf	___aodiv@counter^0,f,c
 13739  0040A4                     l7446:
 13740  0040A4  AE13               	btfss	(___aodiv@divisor+7)^0,7,c
 13741  0040A6  EF57  F020         	goto	u9311
 13742  0040AA  EF59  F020         	goto	u9310
 13743  0040AE                     u9311:
 13744  0040AE  EF48  F020         	goto	l7444
 13745  0040B2                     u9310:
 13746  0040B2                     l7448:
 13747  0040B2  90D8               	bcf	status,0,c
 13748  0040B4  3616               	rlcf	___aodiv@quotient^0,f,c
 13749  0040B6  3617               	rlcf	(___aodiv@quotient+1)^0,f,c
 13750  0040B8  3618               	rlcf	(___aodiv@quotient+2)^0,f,c
 13751  0040BA  3619               	rlcf	(___aodiv@quotient+3)^0,f,c
 13752  0040BC  361A               	rlcf	(___aodiv@quotient+4)^0,f,c
 13753  0040BE  361B               	rlcf	(___aodiv@quotient+5)^0,f,c
 13754  0040C0  361C               	rlcf	(___aodiv@quotient+6)^0,f,c
 13755  0040C2  361D               	rlcf	(___aodiv@quotient+7)^0,f,c
 13756  0040C4  500C               	movf	___aodiv@divisor^0,w,c
 13757  0040C6  5C04               	subwf	___aodiv@dividend^0,w,c
 13758  0040C8  500D               	movf	(___aodiv@divisor+1)^0,w,c
 13759  0040CA  5805               	subwfb	(___aodiv@dividend+1)^0,w,c
 13760  0040CC  500E               	movf	(___aodiv@divisor+2)^0,w,c
 13761  0040CE  5806               	subwfb	(___aodiv@dividend+2)^0,w,c
 13762  0040D0  500F               	movf	(___aodiv@divisor+3)^0,w,c
 13763  0040D2  5807               	subwfb	(___aodiv@dividend+3)^0,w,c
 13764  0040D4  5010               	movf	(___aodiv@divisor+4)^0,w,c
 13765  0040D6  5808               	subwfb	(___aodiv@dividend+4)^0,w,c
 13766  0040D8  5011               	movf	(___aodiv@divisor+5)^0,w,c
 13767  0040DA  5809               	subwfb	(___aodiv@dividend+5)^0,w,c
 13768  0040DC  5012               	movf	(___aodiv@divisor+6)^0,w,c
 13769  0040DE  580A               	subwfb	(___aodiv@dividend+6)^0,w,c
 13770  0040E0  5013               	movf	(___aodiv@divisor+7)^0,w,c
 13771  0040E2  580B               	subwfb	(___aodiv@dividend+7)^0,w,c
 13772  0040E4  A0D8               	btfss	status,0,c
 13773  0040E6  EF77  F020         	goto	u9321
 13774  0040EA  EF79  F020         	goto	u9320
 13775  0040EE                     u9321:
 13776  0040EE  EF8A  F020         	goto	l7456
 13777  0040F2                     u9320:
 13778  0040F2  500C               	movf	___aodiv@divisor^0,w,c
 13779  0040F4  5E04               	subwf	___aodiv@dividend^0,f,c
 13780  0040F6  500D               	movf	(___aodiv@divisor+1)^0,w,c
 13781  0040F8  5A05               	subwfb	(___aodiv@dividend+1)^0,f,c
 13782  0040FA  500E               	movf	(___aodiv@divisor+2)^0,w,c
 13783  0040FC  5A06               	subwfb	(___aodiv@dividend+2)^0,f,c
 13784  0040FE  500F               	movf	(___aodiv@divisor+3)^0,w,c
 13785  004100  5A07               	subwfb	(___aodiv@dividend+3)^0,f,c
 13786  004102  5010               	movf	(___aodiv@divisor+4)^0,w,c
 13787  004104  5A08               	subwfb	(___aodiv@dividend+4)^0,f,c
 13788  004106  5011               	movf	(___aodiv@divisor+5)^0,w,c
 13789  004108  5A09               	subwfb	(___aodiv@dividend+5)^0,f,c
 13790  00410A  5012               	movf	(___aodiv@divisor+6)^0,w,c
 13791  00410C  5A0A               	subwfb	(___aodiv@dividend+6)^0,f,c
 13792  00410E  5013               	movf	(___aodiv@divisor+7)^0,w,c
 13793  004110  5A0B               	subwfb	(___aodiv@dividend+7)^0,f,c
 13794  004112  8016               	bsf	___aodiv@quotient^0,0,c
 13795  004114                     l7456:
 13796  004114  90D8               	bcf	status,0,c
 13797  004116  3213               	rrcf	(___aodiv@divisor+7)^0,f,c
 13798  004118  3212               	rrcf	(___aodiv@divisor+6)^0,f,c
 13799  00411A  3211               	rrcf	(___aodiv@divisor+5)^0,f,c
 13800  00411C  3210               	rrcf	(___aodiv@divisor+4)^0,f,c
 13801  00411E  320F               	rrcf	(___aodiv@divisor+3)^0,f,c
 13802  004120  320E               	rrcf	(___aodiv@divisor+2)^0,f,c
 13803  004122  320D               	rrcf	(___aodiv@divisor+1)^0,f,c
 13804  004124  320C               	rrcf	___aodiv@divisor^0,f,c
 13805  004126  2E14               	decfsz	___aodiv@counter^0,f,c
 13806  004128  EF59  F020         	goto	l7448
 13807  00412C                     l7460:
 13808  00412C  5015               	movf	___aodiv@sign^0,w,c
 13809  00412E  B4D8               	btfsc	status,2,c
 13810  004130  EF9C  F020         	goto	u9331
 13811  004134  EF9E  F020         	goto	u9330
 13812  004138                     u9331:
 13813  004138  EFAE  F020         	goto	l7464
 13814  00413C                     u9330:
 13815  00413C  1E1D               	comf	(___aodiv@quotient+7)^0,f,c
 13816  00413E  1E1C               	comf	(___aodiv@quotient+6)^0,f,c
 13817  004140  1E1B               	comf	(___aodiv@quotient+5)^0,f,c
 13818  004142  1E1A               	comf	(___aodiv@quotient+4)^0,f,c
 13819  004144  1E19               	comf	(___aodiv@quotient+3)^0,f,c
 13820  004146  1E18               	comf	(___aodiv@quotient+2)^0,f,c
 13821  004148  1E17               	comf	(___aodiv@quotient+1)^0,f,c
 13822  00414A  6C16               	negf	___aodiv@quotient^0,c
 13823  00414C  0E00               	movlw	0
 13824  00414E  2217               	addwfc	(___aodiv@quotient+1)^0,f,c
 13825  004150  2218               	addwfc	(___aodiv@quotient+2)^0,f,c
 13826  004152  2219               	addwfc	(___aodiv@quotient+3)^0,f,c
 13827  004154  221A               	addwfc	(___aodiv@quotient+4)^0,f,c
 13828  004156  221B               	addwfc	(___aodiv@quotient+5)^0,f,c
 13829  004158  221C               	addwfc	(___aodiv@quotient+6)^0,f,c
 13830  00415A  221D               	addwfc	(___aodiv@quotient+7)^0,f,c
 13831  00415C                     l7464:
 13832  00415C  C016  F004         	movff	___aodiv@quotient,?___aodiv
 13833  004160  C017  F005         	movff	___aodiv@quotient+1,?___aodiv+1
 13834  004164  C018  F006         	movff	___aodiv@quotient+2,?___aodiv+2
 13835  004168  C019  F007         	movff	___aodiv@quotient+3,?___aodiv+3
 13836  00416C  C01A  F008         	movff	___aodiv@quotient+4,?___aodiv+4
 13837  004170  C01B  F009         	movff	___aodiv@quotient+5,?___aodiv+5
 13838  004174  C01C  F00A         	movff	___aodiv@quotient+6,?___aodiv+6
 13839  004178  C01D  F00B         	movff	___aodiv@quotient+7,?___aodiv+7
 13840  00417C  0012               	return		;funcret
 13841  00417E                     __end_of___aodiv:
 13842                           	opt callstack 0
 13843                           
 13844 ;; *************** function _ctoa *****************
 13845 ;; Defined at:
 13846 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13847 ;; Parameters:    Size  Location     Type
 13848 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 13849 ;;		 -> vsnprintf@f(6), 
 13850 ;;  c               1   32[COMRAM] unsigned char 
 13851 ;; Auto vars:     Size  Location     Type
 13852 ;;  w               2   33[COMRAM] int 
 13853 ;;  l               2    0        int 
 13854 ;; Return value:  Size  Location     Type
 13855 ;;                  2   30[COMRAM] int 
 13856 ;; Registers used:
 13857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13858 ;; Tracked objects:
 13859 ;;		On entry : 0/0
 13860 ;;		On exit  : 0/0
 13861 ;;		Unchanged: 0/0
 13862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13863 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13864 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13866 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13867 ;;Total ram usage:        5 bytes
 13868 ;; Hardware stack levels used:    1
 13869 ;; Hardware stack levels required when called:    8
 13870 ;; This function calls:
 13871 ;;		_pad
 13872 ;; This function is called by:
 13873 ;;		_vfpfcnvrt
 13874 ;; This function uses a non-reentrant model
 13875 ;;
 13876                           
 13877                           	psect	text35
 13878  005618                     __ptext35:
 13879                           	opt callstack 0
 13880  005618                     _ctoa:
 13881                           	opt callstack 18
 13882  005618                     
 13883                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 13884  005618  0100               	movlb	0	; () banked
 13885  00561A  51F0               	movf	_width& (0+255),w,b
 13886  00561C  11F1               	iorwf	(_width+1)& (0+255),w,b
 13887  00561E  A4D8               	btfss	status,2,c
 13888  005620  EF14  F02B         	goto	u10191
 13889  005624  EF16  F02B         	goto	u10190
 13890  005628                     u10191:
 13891  005628  EF1C  F02B         	goto	l8002
 13892  00562C                     u10190:
 13893  00562C                     
 13894                           ; BSR set to: 0
 13895  00562C  C0F0  F022         	movff	_width,ctoa@w
 13896  005630  C0F1  F023         	movff	_width+1,ctoa@w+1
 13897  005634  EF22  F02B         	goto	l8004
 13898  005638                     l8002:
 13899                           
 13900                           ; BSR set to: 0
 13901  005638  0EFF               	movlw	255
 13902  00563A  25F0               	addwf	_width& (0+255),w,b
 13903  00563C  6E22               	movwf	ctoa@w^0,c
 13904  00563E  0EFF               	movlw	255
 13905  005640  21F1               	addwfc	(_width+1)& (0+255),w,b
 13906  005642  6E23               	movwf	(ctoa@w+1)^0,c
 13907  005644                     l8004:
 13908                           
 13909                           ; BSR set to: 0
 13910                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 13911  005644  C021  F164         	movff	ctoa@c,_dbuf
 13912  005648                     
 13913                           ; BSR set to: 0
 13914                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 13915  005648  0E00               	movlw	0
 13916  00564A  0101               	movlb	1	; () banked
 13917  00564C  6F65               	movwf	(_dbuf+1)& (0+255),b
 13918  00564E                     
 13919                           ; BSR set to: 1
 13920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 13921  00564E  C01F  F014         	movff	ctoa@fp,pad@fp
 13922  005652  C020  F015         	movff	ctoa@fp+1,pad@fp+1
 13923  005656  0E64               	movlw	low _dbuf
 13924  005658  6E16               	movwf	pad@buf^0,c
 13925  00565A  0E01               	movlw	high _dbuf
 13926  00565C  6E17               	movwf	(pad@buf+1)^0,c
 13927  00565E  C022  F018         	movff	ctoa@w,pad@p
 13928  005662  C023  F019         	movff	ctoa@w+1,pad@p+1
 13929  005666  EC12  F028         	call	_pad	;wreg free
 13930  00566A  C014  F01F         	movff	?_pad,?_ctoa
 13931  00566E  C015  F020         	movff	?_pad+1,?_ctoa+1
 13932  005672  0012               	return		;funcret
 13933  005674                     __end_of_ctoa:
 13934                           	opt callstack 0
 13935                           
 13936 ;; *************** function _pad *****************
 13937 ;; Defined at:
 13938 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13939 ;; Parameters:    Size  Location     Type
 13940 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
 13941 ;;		 -> vsnprintf@f(6), 
 13942 ;;  buf             2   21[COMRAM] PTR unsigned char 
 13943 ;;		 -> dbuf(80), 
 13944 ;;  p               2   23[COMRAM] int 
 13945 ;; Auto vars:     Size  Location     Type
 13946 ;;  w               2   28[COMRAM] int 
 13947 ;;  i               2   26[COMRAM] int 
 13948 ;; Return value:  Size  Location     Type
 13949 ;;                  2   19[COMRAM] int 
 13950 ;; Registers used:
 13951 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13952 ;; Tracked objects:
 13953 ;;		On entry : 0/0
 13954 ;;		On exit  : 0/0
 13955 ;;		Unchanged: 0/0
 13956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13957 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13958 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13959 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13960 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13961 ;;Total ram usage:       11 bytes
 13962 ;; Hardware stack levels used:    1
 13963 ;; Hardware stack levels required when called:    7
 13964 ;; This function calls:
 13965 ;;		_fputc
 13966 ;;		_fputs
 13967 ;;		_strlen
 13968 ;; This function is called by:
 13969 ;;		_ctoa
 13970 ;;		_dtoa
 13971 ;;		_efgtoa
 13972 ;;		_otoa
 13973 ;;		_utoa
 13974 ;;		_xtoa
 13975 ;; This function uses a non-reentrant model
 13976 ;;
 13977                           
 13978                           	psect	text36
 13979  005024                     __ptext36:
 13980                           	opt callstack 0
 13981  005024                     _pad:
 13982                           	opt callstack 18
 13983  005024                     
 13984                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 13985  005024  0100               	movlb	0	; () banked
 13986  005026  A1F2               	btfss	_flags& (0+255),0,b
 13987  005028  EF18  F028         	goto	u8931
 13988  00502C  EF1A  F028         	goto	u8930
 13989  005030                     u8931:
 13990  005030  EF24  F028         	goto	l7314
 13991  005034                     u8930:
 13992  005034                     
 13993                           ; BSR set to: 0
 13994                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 13995  005034  C016  F00D         	movff	pad@buf,fputs@s
 13996  005038  C017  F00E         	movff	pad@buf+1,fputs@s+1
 13997  00503C  C014  F00F         	movff	pad@fp,fputs@fp
 13998  005040  C015  F010         	movff	pad@fp+1,fputs@fp+1
 13999  005044  EC14  F02C         	call	_fputs	;wreg free
 14000  005048                     l7314:
 14001                           
 14002                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 14003  005048  BE19               	btfsc	(pad@p+1)^0,7,c
 14004  00504A  EF29  F028         	goto	u8941
 14005  00504E  EF2B  F028         	goto	u8940
 14006  005052                     u8941:
 14007  005052  EF31  F028         	goto	l7318
 14008  005056                     u8940:
 14009  005056  C018  F01D         	movff	pad@p,pad@w
 14010  00505A  C019  F01E         	movff	pad@p+1,pad@w+1
 14011  00505E  EF35  F028         	goto	l479
 14012  005062                     l7318:
 14013  005062  0E00               	movlw	0
 14014  005064  6E1E               	movwf	(pad@w+1)^0,c
 14015  005066  0E00               	movlw	0
 14016  005068  6E1D               	movwf	pad@w^0,c
 14017  00506A                     l479:
 14018                           
 14019                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 14020  00506A  0E00               	movlw	0
 14021  00506C  6E1C               	movwf	(pad@i+1)^0,c
 14022  00506E  0E00               	movlw	0
 14023  005070  6E1B               	movwf	pad@i^0,c
 14024                           
 14025                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14026  005072  EF47  F028         	goto	l7324
 14027  005076                     l7320:
 14028                           
 14029                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 14030  005076  0E00               	movlw	0
 14031  005078  6E05               	movwf	(fputc@c+1)^0,c
 14032  00507A  0E20               	movlw	32
 14033  00507C  6E04               	movwf	fputc@c^0,c
 14034  00507E  C014  F006         	movff	pad@fp,fputc@fp
 14035  005082  C015  F007         	movff	pad@fp+1,fputc@fp+1
 14036  005086  ECAD  F027         	call	_fputc	;wreg free
 14037  00508A                     
 14038                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 14039  00508A  4A1B               	infsnz	pad@i^0,f,c
 14040  00508C  2A1C               	incf	(pad@i+1)^0,f,c
 14041  00508E                     l7324:
 14042                           
 14043                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14044  00508E  501D               	movf	pad@w^0,w,c
 14045  005090  5C1B               	subwf	pad@i^0,w,c
 14046  005092  501C               	movf	(pad@i+1)^0,w,c
 14047  005094  0A80               	xorlw	128
 14048  005096  6E1A               	movwf	??_pad^0,c
 14049  005098  501E               	movf	(pad@w+1)^0,w,c
 14050  00509A  0A80               	xorlw	128
 14051  00509C  581A               	subwfb	??_pad^0,w,c
 14052  00509E  A0D8               	btfss	status,0,c
 14053  0050A0  EF54  F028         	goto	u8951
 14054  0050A4  EF56  F028         	goto	u8950
 14055  0050A8                     u8951:
 14056  0050A8  EF3B  F028         	goto	l7320
 14057  0050AC                     u8950:
 14058  0050AC                     
 14059                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 14060  0050AC  0100               	movlb	0	; () banked
 14061  0050AE  B1F2               	btfsc	_flags& (0+255),0,b
 14062  0050B0  EF5C  F028         	goto	u8961
 14063  0050B4  EF5E  F028         	goto	u8960
 14064  0050B8                     u8961:
 14065  0050B8  EF68  F028         	goto	l7328
 14066  0050BC                     u8960:
 14067  0050BC                     
 14068                           ; BSR set to: 0
 14069                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 14070  0050BC  C016  F00D         	movff	pad@buf,fputs@s
 14071  0050C0  C017  F00E         	movff	pad@buf+1,fputs@s+1
 14072  0050C4  C014  F00F         	movff	pad@fp,fputs@fp
 14073  0050C8  C015  F010         	movff	pad@fp+1,fputs@fp+1
 14074  0050CC  EC14  F02C         	call	_fputs	;wreg free
 14075  0050D0                     l7328:
 14076                           
 14077                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 14078  0050D0  C016  F004         	movff	pad@buf,strlen@s
 14079  0050D4  C017  F005         	movff	pad@buf+1,strlen@s+1
 14080  0050D8  EC22  F02D         	call	_strlen	;wreg free
 14081  0050DC  501D               	movf	pad@w^0,w,c
 14082  0050DE  2404               	addwf	?_strlen^0,w,c
 14083  0050E0  6E14               	movwf	?_pad^0,c
 14084  0050E2  501E               	movf	(pad@w+1)^0,w,c
 14085  0050E4  2005               	addwfc	(?_strlen+1)^0,w,c
 14086  0050E6  6E15               	movwf	(?_pad+1)^0,c
 14087  0050E8  0012               	return		;funcret
 14088  0050EA                     __end_of_pad:
 14089                           	opt callstack 0
 14090                           
 14091 ;; *************** function _strlen *****************
 14092 ;; Defined at:
 14093 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 14094 ;; Parameters:    Size  Location     Type
 14095 ;;  s               2    3[COMRAM] PTR const unsigned char 
 14096 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), 
 14097 ;; Auto vars:     Size  Location     Type
 14098 ;;  a               2    5[COMRAM] PTR const unsigned char 
 14099 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), 
 14100 ;; Return value:  Size  Location     Type
 14101 ;;                  2    3[COMRAM] unsigned int 
 14102 ;; Registers used:
 14103 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14104 ;; Tracked objects:
 14105 ;;		On entry : 0/0
 14106 ;;		On exit  : 0/0
 14107 ;;		Unchanged: 0/0
 14108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14109 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14110 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14112 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14113 ;;Total ram usage:        4 bytes
 14114 ;; Hardware stack levels used:    1
 14115 ;; Hardware stack levels required when called:    4
 14116 ;; This function calls:
 14117 ;;		Nothing
 14118 ;; This function is called by:
 14119 ;;		_pad
 14120 ;;		_stoa
 14121 ;; This function uses a non-reentrant model
 14122 ;;
 14123                           
 14124                           	psect	text37
 14125  005A44                     __ptext37:
 14126                           	opt callstack 0
 14127  005A44                     _strlen:
 14128                           	opt callstack 20
 14129  005A44  C004  F006         	movff	strlen@s,strlen@a
 14130  005A48  C005  F007         	movff	strlen@s+1,strlen@a+1
 14131  005A4C  EF2A  F02D         	goto	l7094
 14132  005A50                     l7092:
 14133  005A50  4A04               	infsnz	strlen@s^0,f,c
 14134  005A52  2A05               	incf	(strlen@s+1)^0,f,c
 14135  005A54                     l7094:
 14136  005A54  C004  FFD9         	movff	strlen@s,fsr2l
 14137  005A58  C005  FFDA         	movff	strlen@s+1,fsr2h
 14138  005A5C  50DF               	movf	indf2,w,c
 14139  005A5E  A4D8               	btfss	status,2,c
 14140  005A60  EF34  F02D         	goto	u8491
 14141  005A64  EF36  F02D         	goto	u8490
 14142  005A68                     u8491:
 14143  005A68  EF28  F02D         	goto	l7092
 14144  005A6C                     u8490:
 14145  005A6C  5006               	movf	strlen@a^0,w,c
 14146  005A6E  5C04               	subwf	strlen@s^0,w,c
 14147  005A70  6E04               	movwf	?_strlen^0,c
 14148  005A72  5007               	movf	(strlen@a+1)^0,w,c
 14149  005A74  5805               	subwfb	(strlen@s+1)^0,w,c
 14150  005A76  6E05               	movwf	(?_strlen+1)^0,c
 14151  005A78  0012               	return		;funcret
 14152  005A7A                     __end_of_strlen:
 14153                           	opt callstack 0
 14154                           
 14155 ;; *************** function _fputs *****************
 14156 ;; Defined at:
 14157 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 14158 ;; Parameters:    Size  Location     Type
 14159 ;;  s               2   12[COMRAM] PTR const unsigned char 
 14160 ;;		 -> dbuf(80), 
 14161 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
 14162 ;;		 -> vsnprintf@f(6), 
 14163 ;; Auto vars:     Size  Location     Type
 14164 ;;  i               2   17[COMRAM] int 
 14165 ;;  c               1   16[COMRAM] unsigned char 
 14166 ;; Return value:  Size  Location     Type
 14167 ;;                  2   12[COMRAM] int 
 14168 ;; Registers used:
 14169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14170 ;; Tracked objects:
 14171 ;;		On entry : 0/0
 14172 ;;		On exit  : 0/0
 14173 ;;		Unchanged: 0/0
 14174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14175 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14176 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14178 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14179 ;;Total ram usage:        7 bytes
 14180 ;; Hardware stack levels used:    1
 14181 ;; Hardware stack levels required when called:    6
 14182 ;; This function calls:
 14183 ;;		_fputc
 14184 ;; This function is called by:
 14185 ;;		_pad
 14186 ;; This function uses a non-reentrant model
 14187 ;;
 14188                           
 14189                           	psect	text38
 14190  005828                     __ptext38:
 14191                           	opt callstack 0
 14192  005828                     _fputs:
 14193                           	opt callstack 18
 14194  005828  0E00               	movlw	0
 14195  00582A  6E13               	movwf	(fputs@i+1)^0,c
 14196  00582C  0E00               	movlw	0
 14197  00582E  6E12               	movwf	fputs@i^0,c
 14198  005830  EF25  F02C         	goto	l7088
 14199  005834                     l7084:
 14200  005834  C011  F004         	movff	fputs@c,fputc@c
 14201  005838  6A05               	clrf	(fputc@c+1)^0,c
 14202  00583A  C00F  F006         	movff	fputs@fp,fputc@fp
 14203  00583E  C010  F007         	movff	fputs@fp+1,fputc@fp+1
 14204  005842  ECAD  F027         	call	_fputc	;wreg free
 14205  005846  4A12               	infsnz	fputs@i^0,f,c
 14206  005848  2A13               	incf	(fputs@i+1)^0,f,c
 14207  00584A                     l7088:
 14208  00584A  5012               	movf	fputs@i^0,w,c
 14209  00584C  240D               	addwf	fputs@s^0,w,c
 14210  00584E  6ED9               	movwf	fsr2l,c
 14211  005850  5013               	movf	(fputs@i+1)^0,w,c
 14212  005852  200E               	addwfc	(fputs@s+1)^0,w,c
 14213  005854  6EDA               	movwf	fsr2h,c
 14214  005856  50DF               	movf	indf2,w,c
 14215  005858  6E11               	movwf	fputs@c^0,c
 14216  00585A  5011               	movf	fputs@c^0,w,c
 14217  00585C  A4D8               	btfss	status,2,c
 14218  00585E  EF33  F02C         	goto	u8481
 14219  005862  EF35  F02C         	goto	u8480
 14220  005866                     u8481:
 14221  005866  EF1A  F02C         	goto	l7084
 14222  00586A                     u8480:
 14223  00586A  0012               	return		;funcret
 14224  00586C                     __end_of_fputs:
 14225                           	opt callstack 0
 14226                           
 14227 ;; *************** function _fputc *****************
 14228 ;; Defined at:
 14229 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 14230 ;; Parameters:    Size  Location     Type
 14231 ;;  c               2    3[COMRAM] int 
 14232 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
 14233 ;;		 -> vsnprintf@f(6), 
 14234 ;; Auto vars:     Size  Location     Type
 14235 ;;		None
 14236 ;; Return value:  Size  Location     Type
 14237 ;;                  2    3[COMRAM] int 
 14238 ;; Registers used:
 14239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14240 ;; Tracked objects:
 14241 ;;		On entry : 0/0
 14242 ;;		On exit  : 0/0
 14243 ;;		Unchanged: 0/0
 14244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14245 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14247 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14248 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14249 ;;Total ram usage:        9 bytes
 14250 ;; Hardware stack levels used:    1
 14251 ;; Hardware stack levels required when called:    5
 14252 ;; This function calls:
 14253 ;;		_putch
 14254 ;; This function is called by:
 14255 ;;		_pad
 14256 ;;		_stoa
 14257 ;;		_vfpfcnvrt
 14258 ;;		_fputs
 14259 ;; This function uses a non-reentrant model
 14260 ;;
 14261                           
 14262                           	psect	text39
 14263  004F5A                     __ptext39:
 14264                           	opt callstack 0
 14265  004F5A                     _fputc:
 14266                           	opt callstack 18
 14267  004F5A  5006               	movf	fputc@fp^0,w,c
 14268  004F5C  1007               	iorwf	(fputc@fp+1)^0,w,c
 14269  004F5E  B4D8               	btfsc	status,2,c
 14270  004F60  EFB4  F027         	goto	u8441
 14271  004F64  EFB6  F027         	goto	u8440
 14272  004F68                     u8441:
 14273  004F68  EFBF  F027         	goto	l7072
 14274  004F6C                     u8440:
 14275  004F6C  5006               	movf	fputc@fp^0,w,c
 14276  004F6E  1007               	iorwf	(fputc@fp+1)^0,w,c
 14277  004F70  A4D8               	btfss	status,2,c
 14278  004F72  EFBD  F027         	goto	u8451
 14279  004F76  EFBF  F027         	goto	u8450
 14280  004F7A                     u8451:
 14281  004F7A  EFC4  F027         	goto	l7074
 14282  004F7E                     u8450:
 14283  004F7E                     l7072:
 14284  004F7E  5004               	movf	fputc@c^0,w,c
 14285  004F80  EC12  F02E         	call	_putch
 14286  004F84  EF11  F028         	goto	l1558
 14287  004F88                     l7074:
 14288  004F88  EE20 F004          	lfsr	2,4
 14289  004F8C  5006               	movf	fputc@fp^0,w,c
 14290  004F8E  26D9               	addwf	fsr2l,f,c
 14291  004F90  5007               	movf	(fputc@fp+1)^0,w,c
 14292  004F92  22DA               	addwfc	fsr2h,f,c
 14293  004F94  50DE               	movf	postinc2,w,c
 14294  004F96  10DE               	iorwf	postinc2,w,c
 14295  004F98  B4D8               	btfsc	status,2,c
 14296  004F9A  EFD1  F027         	goto	u8461
 14297  004F9E  EFD3  F027         	goto	u8460
 14298  004FA2                     u8461:
 14299  004FA2  EFEE  F027         	goto	l7078
 14300  004FA6                     u8460:
 14301  004FA6  EE20 F004          	lfsr	2,4
 14302  004FAA  5006               	movf	fputc@fp^0,w,c
 14303  004FAC  26D9               	addwf	fsr2l,f,c
 14304  004FAE  5007               	movf	(fputc@fp+1)^0,w,c
 14305  004FB0  22DA               	addwfc	fsr2h,f,c
 14306  004FB2  EE10 F002          	lfsr	1,2
 14307  004FB6  5006               	movf	fputc@fp^0,w,c
 14308  004FB8  26E1               	addwf	fsr1l,f,c
 14309  004FBA  5007               	movf	(fputc@fp+1)^0,w,c
 14310  004FBC  22E2               	addwfc	fsr1h,f,c
 14311  004FBE  50DE               	movf	postinc2,w,c
 14312  004FC0  5CE6               	subwf	postinc1,w,c
 14313  004FC2  50E6               	movf	postinc1,w,c
 14314  004FC4  0A80               	xorlw	128
 14315  004FC6  6E0C               	movwf	(??_fputc+4)^0,c
 14316  004FC8  50DE               	movf	postinc2,w,c
 14317  004FCA  0A80               	xorlw	128
 14318  004FCC  580C               	subwfb	(??_fputc+4)^0,w,c
 14319  004FCE  B0D8               	btfsc	status,0,c
 14320  004FD0  EFEC  F027         	goto	u8471
 14321  004FD4  EFEE  F027         	goto	u8470
 14322  004FD8                     u8471:
 14323  004FD8  EF11  F028         	goto	l1558
 14324  004FDC                     u8470:
 14325  004FDC                     l7078:
 14326  004FDC  EE20 F002          	lfsr	2,2
 14327  004FE0  5006               	movf	fputc@fp^0,w,c
 14328  004FE2  26D9               	addwf	fsr2l,f,c
 14329  004FE4  5007               	movf	(fputc@fp+1)^0,w,c
 14330  004FE6  22DA               	addwfc	fsr2h,f,c
 14331  004FE8  CFDE F008          	movff	postinc2,??_fputc
 14332  004FEC  CFDD F009          	movff	postdec2,??_fputc+1
 14333  004FF0  C006  FFD9         	movff	fputc@fp,fsr2l
 14334  004FF4  C007  FFDA         	movff	fputc@fp+1,fsr2h
 14335  004FF8  CFDE F00A          	movff	postinc2,??_fputc+2
 14336  004FFC  CFDD F00B          	movff	postdec2,??_fputc+3
 14337  005000  5008               	movf	??_fputc^0,w,c
 14338  005002  240A               	addwf	(??_fputc+2)^0,w,c
 14339  005004  6ED9               	movwf	fsr2l,c
 14340  005006  5009               	movf	(??_fputc+1)^0,w,c
 14341  005008  200B               	addwfc	(??_fputc+3)^0,w,c
 14342  00500A  6EDA               	movwf	fsr2h,c
 14343  00500C  C004  FFDF         	movff	fputc@c,indf2
 14344  005010  EE20 F002          	lfsr	2,2
 14345  005014  5006               	movf	fputc@fp^0,w,c
 14346  005016  26D9               	addwf	fsr2l,f,c
 14347  005018  5007               	movf	(fputc@fp+1)^0,w,c
 14348  00501A  22DA               	addwfc	fsr2h,f,c
 14349  00501C  2ADE               	incf	postinc2,f,c
 14350  00501E  0E00               	movlw	0
 14351  005020  22DD               	addwfc	postdec2,f,c
 14352  005022                     l1558:
 14353  005022  0012               	return		;funcret
 14354  005024                     __end_of_fputc:
 14355                           	opt callstack 0
 14356                           
 14357 ;; *************** function _putch *****************
 14358 ;; Defined at:
 14359 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
 14360 ;; Parameters:    Size  Location     Type
 14361 ;;  c               1    wreg     unsigned char 
 14362 ;; Auto vars:     Size  Location     Type
 14363 ;;  c               1    0[COMRAM] unsigned char 
 14364 ;; Return value:  Size  Location     Type
 14365 ;;                  1    wreg      void 
 14366 ;; Registers used:
 14367 ;;		wreg
 14368 ;; Tracked objects:
 14369 ;;		On entry : 0/0
 14370 ;;		On exit  : 0/0
 14371 ;;		Unchanged: 0/0
 14372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14377 ;;Total ram usage:        0 bytes
 14378 ;; Hardware stack levels used:    1
 14379 ;; Hardware stack levels required when called:    4
 14380 ;; This function calls:
 14381 ;;		Nothing
 14382 ;; This function is called by:
 14383 ;;		_fputc
 14384 ;; This function uses a non-reentrant model
 14385 ;;
 14386                           
 14387                           	psect	text40
 14388  005C24                     __ptext40:
 14389                           	opt callstack 0
 14390  005C24                     _putch:
 14391                           	opt callstack 18
 14392  005C24  0012               	return		;funcret
 14393  005C26                     __end_of_putch:
 14394                           	opt callstack 0
 14395                           
 14396 ;; *************** function _atoi *****************
 14397 ;; Defined at:
 14398 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 14399 ;; Parameters:    Size  Location     Type
 14400 ;;  s               2   10[COMRAM] PTR const unsigned char 
 14401 ;;		 -> STR_2(17), 
 14402 ;; Auto vars:     Size  Location     Type
 14403 ;;  n               2   23[COMRAM] int 
 14404 ;;  neg             2   16[COMRAM] int 
 14405 ;; Return value:  Size  Location     Type
 14406 ;;                  2   10[COMRAM] int 
 14407 ;; Registers used:
 14408 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14409 ;; Tracked objects:
 14410 ;;		On entry : 0/0
 14411 ;;		On exit  : 0/0
 14412 ;;		Unchanged: 0/0
 14413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14414 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14415 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14416 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14417 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14418 ;;Total ram usage:       15 bytes
 14419 ;; Hardware stack levels used:    1
 14420 ;; Hardware stack levels required when called:    5
 14421 ;; This function calls:
 14422 ;;		___wmul
 14423 ;;		_isdigit
 14424 ;;		_isspace
 14425 ;; This function is called by:
 14426 ;;		_vfpfcnvrt
 14427 ;; This function uses a non-reentrant model
 14428 ;;
 14429                           
 14430                           	psect	text41
 14431  003E5C                     __ptext41:
 14432                           	opt callstack 0
 14433  003E5C                     _atoi:
 14434                           	opt callstack 21
 14435  003E5C  0E00               	movlw	0
 14436  003E5E  6E19               	movwf	(atoi@n+1)^0,c
 14437  003E60  0E00               	movlw	0
 14438  003E62  6E18               	movwf	atoi@n^0,c
 14439  003E64  0E00               	movlw	0
 14440  003E66  6E12               	movwf	(atoi@neg+1)^0,c
 14441  003E68  0E00               	movlw	0
 14442  003E6A  6E11               	movwf	atoi@neg^0,c
 14443  003E6C  EF3A  F01F         	goto	l8568
 14444  003E70                     l8566:
 14445  003E70  4A0B               	infsnz	atoi@s^0,f,c
 14446  003E72  2A0C               	incf	(atoi@s+1)^0,f,c
 14447  003E74                     l8568:
 14448  003E74  0E01               	movlw	1
 14449  003E76  6E17               	movwf	_atoi$1959^0,c
 14450  003E78  C00B  FFF6         	movff	atoi@s,tblptrl
 14451  003E7C  C00C  FFF7         	movff	atoi@s+1,tblptrh
 14452  003E80                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14453  003E80  6AF8               	clrf	tblptru,c
 14454  003E82                     	endif
 14455  003E82                     	if	0	;tblptru may be non-zero
 14456  003E82                     	endif
 14457  003E82  0008               	tblrd		*
 14458  003E84  50F5               	movf	tablat,w,c
 14459  003E86  0A20               	xorlw	32
 14460  003E88  B4D8               	btfsc	status,2,c
 14461  003E8A  EF49  F01F         	goto	u11301
 14462  003E8E  EF4B  F01F         	goto	u11300
 14463  003E92                     u11301:
 14464  003E92  EF69  F01F         	goto	l8576
 14465  003E96                     u11300:
 14466  003E96  0EF7               	movlw	247
 14467  003E98  6E0D               	movwf	??_atoi^0,c
 14468  003E9A  0EFF               	movlw	255
 14469  003E9C  6E0E               	movwf	(??_atoi+1)^0,c
 14470  003E9E  C00B  FFF6         	movff	atoi@s,tblptrl
 14471  003EA2  C00C  FFF7         	movff	atoi@s+1,tblptrh
 14472  003EA6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14473  003EA6  6AF8               	clrf	tblptru,c
 14474  003EA8                     	endif
 14475  003EA8                     	if	0	;tblptru may be non-zero
 14476  003EA8                     	endif
 14477  003EA8  0008               	tblrd		*
 14478  003EAA  50F5               	movf	tablat,w,c
 14479  003EAC  6E0F               	movwf	(??_atoi+2)^0,c
 14480  003EAE  6A10               	clrf	(??_atoi+3)^0,c
 14481  003EB0  500D               	movf	??_atoi^0,w,c
 14482  003EB2  260F               	addwf	(??_atoi+2)^0,f,c
 14483  003EB4  500E               	movf	(??_atoi+1)^0,w,c
 14484  003EB6  2210               	addwfc	(??_atoi+3)^0,f,c
 14485  003EB8  5010               	movf	(??_atoi+3)^0,w,c
 14486  003EBA  E109               	bnz	u11310
 14487  003EBC  0E05               	movlw	5
 14488  003EBE  5C0F               	subwf	(??_atoi+2)^0,w,c
 14489  003EC0  A0D8               	btfss	status,0,c
 14490  003EC2  EF65  F01F         	goto	u11311
 14491  003EC6  EF67  F01F         	goto	u11310
 14492  003ECA                     u11311:
 14493  003ECA  EF69  F01F         	goto	l8576
 14494  003ECE                     u11310:
 14495  003ECE  0E00               	movlw	0
 14496  003ED0  6E17               	movwf	_atoi$1959^0,c
 14497  003ED2                     l8576:
 14498  003ED2  C017  F013         	movff	_atoi$1959,_atoi$1958
 14499  003ED6  6A14               	clrf	(_atoi$1958+1)^0,c
 14500  003ED8  5013               	movf	_atoi$1958^0,w,c
 14501  003EDA  1014               	iorwf	(_atoi$1958+1)^0,w,c
 14502  003EDC  A4D8               	btfss	status,2,c
 14503  003EDE  EF73  F01F         	goto	u11321
 14504  003EE2  EF75  F01F         	goto	u11320
 14505  003EE6                     u11321:
 14506  003EE6  EF38  F01F         	goto	l8566
 14507  003EEA                     u11320:
 14508  003EEA  EF7F  F01F         	goto	l8586
 14509  003EEE                     l8582:
 14510  003EEE  0E00               	movlw	0
 14511  003EF0  6E12               	movwf	(atoi@neg+1)^0,c
 14512  003EF2  0E01               	movlw	1
 14513  003EF4  6E11               	movwf	atoi@neg^0,c
 14514  003EF6                     l8584:
 14515  003EF6  4A0B               	infsnz	atoi@s^0,f,c
 14516  003EF8  2A0C               	incf	(atoi@s+1)^0,f,c
 14517  003EFA  EFB6  F01F         	goto	l8592
 14518  003EFE                     l8586:
 14519  003EFE  C00B  FFF6         	movff	atoi@s,tblptrl
 14520  003F02  C00C  FFF7         	movff	atoi@s+1,tblptrh
 14521  003F06                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14522  003F06  6AF8               	clrf	tblptru,c
 14523  003F08                     	endif
 14524  003F08                     	if	0	;tblptru may be non-zero
 14525  003F08                     	endif
 14526  003F08  0008               	tblrd		*
 14527  003F0A  50F5               	movf	tablat,w,c
 14528  003F0C  6E0D               	movwf	??_atoi^0,c
 14529  003F0E  6A0E               	clrf	(??_atoi+1)^0,c
 14530                           
 14531                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14532                           ; Switch size 1, requested type "simple"
 14533                           ; Number of cases is 1, Range of values is 0 to 0
 14534                           ; switch strategies available:
 14535                           ; Name         Instructions Cycles
 14536                           ; simple_byte            4     3 (average)
 14537                           ;	Chosen strategy is simple_byte
 14538  003F10  500E               	movf	(??_atoi+1)^0,w,c
 14539  003F12  0A00               	xorlw	0	; case 0
 14540  003F14  B4D8               	btfsc	status,2,c
 14541  003F16  EF8F  F01F         	goto	l9118
 14542  003F1A  EFB6  F01F         	goto	l8592
 14543  003F1E                     l9118:
 14544                           
 14545                           ; Switch size 1, requested type "simple"
 14546                           ; Number of cases is 2, Range of values is 43 to 45
 14547                           ; switch strategies available:
 14548                           ; Name         Instructions Cycles
 14549                           ; simple_byte            7     4 (average)
 14550                           ;	Chosen strategy is simple_byte
 14551  003F1E  500D               	movf	??_atoi^0,w,c
 14552  003F20  0A2B               	xorlw	43	; case 43
 14553  003F22  B4D8               	btfsc	status,2,c
 14554  003F24  EF7B  F01F         	goto	l8584
 14555  003F28  0A06               	xorlw	6	; case 45
 14556  003F2A  B4D8               	btfsc	status,2,c
 14557  003F2C  EF77  F01F         	goto	l8582
 14558  003F30  EFB6  F01F         	goto	l8592
 14559  003F34                     l8588:
 14560  003F34  C018  F004         	movff	atoi@n,___wmul@multiplier
 14561  003F38  C019  F005         	movff	atoi@n+1,___wmul@multiplier+1
 14562  003F3C  0E00               	movlw	0
 14563  003F3E  6E07               	movwf	(___wmul@multiplicand+1)^0,c
 14564  003F40  0E0A               	movlw	10
 14565  003F42  6E06               	movwf	___wmul@multiplicand^0,c
 14566  003F44  EC9A  F02D         	call	___wmul	;wreg free
 14567  003F48  C00B  FFF6         	movff	atoi@s,tblptrl
 14568  003F4C  C00C  FFF7         	movff	atoi@s+1,tblptrh
 14569  003F50                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14570  003F50  6AF8               	clrf	tblptru,c
 14571  003F52                     	endif
 14572  003F52                     	if	0	;tblptru may be non-zero
 14573  003F52                     	endif
 14574  003F52  0008               	tblrd		*
 14575  003F54  50F5               	movf	tablat,w,c
 14576  003F56  5E04               	subwf	?___wmul^0,f,c
 14577  003F58  0E00               	movlw	0
 14578  003F5A  5A05               	subwfb	(?___wmul+1)^0,f,c
 14579  003F5C  0E30               	movlw	48
 14580  003F5E  2404               	addwf	?___wmul^0,w,c
 14581  003F60  6E18               	movwf	atoi@n^0,c
 14582  003F62  0E00               	movlw	0
 14583  003F64  2005               	addwfc	(?___wmul+1)^0,w,c
 14584  003F66  6E19               	movwf	(atoi@n+1)^0,c
 14585  003F68  EF7B  F01F         	goto	l8584
 14586  003F6C                     l8592:
 14587  003F6C  0ED0               	movlw	208
 14588  003F6E  6E0D               	movwf	??_atoi^0,c
 14589  003F70  0EFF               	movlw	255
 14590  003F72  6E0E               	movwf	(??_atoi+1)^0,c
 14591  003F74  C00B  FFF6         	movff	atoi@s,tblptrl
 14592  003F78  C00C  FFF7         	movff	atoi@s+1,tblptrh
 14593  003F7C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14594  003F7C  6AF8               	clrf	tblptru,c
 14595  003F7E                     	endif
 14596  003F7E                     	if	0	;tblptru may be non-zero
 14597  003F7E                     	endif
 14598  003F7E  0008               	tblrd		*
 14599  003F80  50F5               	movf	tablat,w,c
 14600  003F82  6E0F               	movwf	(??_atoi+2)^0,c
 14601  003F84  6A10               	clrf	(??_atoi+3)^0,c
 14602  003F86  500D               	movf	??_atoi^0,w,c
 14603  003F88  260F               	addwf	(??_atoi+2)^0,f,c
 14604  003F8A  500E               	movf	(??_atoi+1)^0,w,c
 14605  003F8C  2210               	addwfc	(??_atoi+3)^0,f,c
 14606  003F8E  5010               	movf	(??_atoi+3)^0,w,c
 14607  003F90  E10A               	bnz	u11330
 14608  003F92  0E0A               	movlw	10
 14609  003F94  5C0F               	subwf	(??_atoi+2)^0,w,c
 14610  003F96  A0D8               	btfss	status,0,c
 14611  003F98  EFD0  F01F         	goto	u11331
 14612  003F9C  EFD3  F01F         	goto	u11330
 14613  003FA0                     u11331:
 14614  003FA0  0E01               	movlw	1
 14615  003FA2  EFD4  F01F         	goto	u11340
 14616  003FA6                     u11330:
 14617  003FA6  0E00               	movlw	0
 14618  003FA8                     u11340:
 14619  003FA8  6E15               	movwf	_atoi$1960^0,c
 14620  003FAA  6A16               	clrf	(_atoi$1960+1)^0,c
 14621  003FAC  5015               	movf	_atoi$1960^0,w,c
 14622  003FAE  1016               	iorwf	(_atoi$1960+1)^0,w,c
 14623  003FB0  A4D8               	btfss	status,2,c
 14624  003FB2  EFDD  F01F         	goto	u11351
 14625  003FB6  EFDF  F01F         	goto	u11350
 14626  003FBA                     u11351:
 14627  003FBA  EF9A  F01F         	goto	l8588
 14628  003FBE                     u11350:
 14629  003FBE  5011               	movf	atoi@neg^0,w,c
 14630  003FC0  1012               	iorwf	(atoi@neg+1)^0,w,c
 14631  003FC2  A4D8               	btfss	status,2,c
 14632  003FC4  EFE6  F01F         	goto	u11361
 14633  003FC8  EFE8  F01F         	goto	u11360
 14634  003FCC                     u11361:
 14635  003FCC  EFF6  F01F         	goto	l1504
 14636  003FD0                     u11360:
 14637  003FD0  C018  F00D         	movff	atoi@n,??_atoi
 14638  003FD4  C019  F00E         	movff	atoi@n+1,??_atoi+1
 14639  003FD8  1E0D               	comf	??_atoi^0,f,c
 14640  003FDA  1E0E               	comf	(??_atoi+1)^0,f,c
 14641  003FDC  4A0D               	infsnz	??_atoi^0,f,c
 14642  003FDE  2A0E               	incf	(??_atoi+1)^0,f,c
 14643  003FE0  C00D  F00B         	movff	??_atoi,?_atoi
 14644  003FE4  C00E  F00C         	movff	??_atoi+1,?_atoi+1
 14645  003FE8  EFFA  F01F         	goto	l1507
 14646  003FEC                     l1504:
 14647  003FEC  C018  F00B         	movff	atoi@n,?_atoi
 14648  003FF0  C019  F00C         	movff	atoi@n+1,?_atoi+1
 14649  003FF4                     l1507:
 14650  003FF4  0012               	return		;funcret
 14651  003FF6                     __end_of_atoi:
 14652                           	opt callstack 0
 14653                           
 14654 ;; *************** function _isspace *****************
 14655 ;; Defined at:
 14656 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 14657 ;; Parameters:    Size  Location     Type
 14658 ;;  c               2    3[COMRAM] int 
 14659 ;; Auto vars:     Size  Location     Type
 14660 ;;		None
 14661 ;; Return value:  Size  Location     Type
 14662 ;;                  2    3[COMRAM] int 
 14663 ;; Registers used:
 14664 ;;		wreg, status,2, status,0
 14665 ;; Tracked objects:
 14666 ;;		On entry : 0/0
 14667 ;;		On exit  : 0/0
 14668 ;;		Unchanged: 0/0
 14669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14670 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14671 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14672 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14673 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14674 ;;Total ram usage:        7 bytes
 14675 ;; Hardware stack levels used:    1
 14676 ;; Hardware stack levels required when called:    4
 14677 ;; This function calls:
 14678 ;;		Nothing
 14679 ;; This function is called by:
 14680 ;;		_atoi
 14681 ;; This function uses a non-reentrant model
 14682 ;;
 14683                           
 14684                           	psect	text42
 14685  005674                     __ptext42:
 14686                           	opt callstack 0
 14687  005674                     _isspace:
 14688                           	opt callstack 21
 14689  005674  0E01               	movlw	1
 14690  005676  6E0A               	movwf	_isspace$1998^0,c
 14691  005678  0E20               	movlw	32
 14692  00567A  1804               	xorwf	isspace@c^0,w,c
 14693  00567C  1005               	iorwf	(isspace@c+1)^0,w,c
 14694  00567E  B4D8               	btfsc	status,2,c
 14695  005680  EF44  F02B         	goto	u10171
 14696  005684  EF46  F02B         	goto	u10170
 14697  005688                     u10171:
 14698  005688  EF5F  F02B         	goto	l7994
 14699  00568C                     u10170:
 14700  00568C  0EF7               	movlw	247
 14701  00568E  6E06               	movwf	??_isspace^0,c
 14702  005690  0EFF               	movlw	255
 14703  005692  6E07               	movwf	(??_isspace+1)^0,c
 14704  005694  C004  F008         	movff	isspace@c,??_isspace+2
 14705  005698  C005  F009         	movff	isspace@c+1,??_isspace+3
 14706  00569C  5006               	movf	??_isspace^0,w,c
 14707  00569E  2608               	addwf	(??_isspace+2)^0,f,c
 14708  0056A0  5007               	movf	(??_isspace+1)^0,w,c
 14709  0056A2  2209               	addwfc	(??_isspace+3)^0,f,c
 14710  0056A4  5009               	movf	(??_isspace+3)^0,w,c
 14711  0056A6  E109               	bnz	u10180
 14712  0056A8  0E05               	movlw	5
 14713  0056AA  5C08               	subwf	(??_isspace+2)^0,w,c
 14714  0056AC  A0D8               	btfss	status,0,c
 14715  0056AE  EF5B  F02B         	goto	u10181
 14716  0056B2  EF5D  F02B         	goto	u10180
 14717  0056B6                     u10181:
 14718  0056B6  EF5F  F02B         	goto	l7994
 14719  0056BA                     u10180:
 14720  0056BA  0E00               	movlw	0
 14721  0056BC  6E0A               	movwf	_isspace$1998^0,c
 14722  0056BE                     l7994:
 14723  0056BE  C00A  F004         	movff	_isspace$1998,?_isspace
 14724  0056C2  6A05               	clrf	(?_isspace+1)^0,c
 14725  0056C4  0012               	return		;funcret
 14726  0056C6                     __end_of_isspace:
 14727                           	opt callstack 0
 14728                           
 14729 ;; *************** function _isdigit *****************
 14730 ;; Defined at:
 14731 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 14732 ;; Parameters:    Size  Location     Type
 14733 ;;  c               2    3[COMRAM] int 
 14734 ;; Auto vars:     Size  Location     Type
 14735 ;;		None
 14736 ;; Return value:  Size  Location     Type
 14737 ;;                  2    3[COMRAM] int 
 14738 ;; Registers used:
 14739 ;;		wreg, status,2, status,0
 14740 ;; Tracked objects:
 14741 ;;		On entry : 0/0
 14742 ;;		On exit  : 0/0
 14743 ;;		Unchanged: 0/0
 14744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14745 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14747 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14748 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14749 ;;Total ram usage:        6 bytes
 14750 ;; Hardware stack levels used:    1
 14751 ;; Hardware stack levels required when called:    4
 14752 ;; This function calls:
 14753 ;;		Nothing
 14754 ;; This function is called by:
 14755 ;;		_vfpfcnvrt
 14756 ;;		_atoi
 14757 ;; This function uses a non-reentrant model
 14758 ;;
 14759                           
 14760                           	psect	text43
 14761  005A0C                     __ptext43:
 14762                           	opt callstack 0
 14763  005A0C                     _isdigit:
 14764                           	opt callstack 22
 14765  005A0C  0ED0               	movlw	208
 14766  005A0E  6E06               	movwf	??_isdigit^0,c
 14767  005A10  0EFF               	movlw	255
 14768  005A12  6E07               	movwf	(??_isdigit+1)^0,c
 14769  005A14  C004  F008         	movff	isdigit@c,??_isdigit+2
 14770  005A18  C005  F009         	movff	isdigit@c+1,??_isdigit+3
 14771  005A1C  5006               	movf	??_isdigit^0,w,c
 14772  005A1E  2608               	addwf	(??_isdigit+2)^0,f,c
 14773  005A20  5007               	movf	(??_isdigit+1)^0,w,c
 14774  005A22  2209               	addwfc	(??_isdigit+3)^0,f,c
 14775  005A24  5009               	movf	(??_isdigit+3)^0,w,c
 14776  005A26  E10A               	bnz	u9250
 14777  005A28  0E0A               	movlw	10
 14778  005A2A  5C08               	subwf	(??_isdigit+2)^0,w,c
 14779  005A2C  A0D8               	btfss	status,0,c
 14780  005A2E  EF1B  F02D         	goto	u9251
 14781  005A32  EF1E  F02D         	goto	u9250
 14782  005A36                     u9251:
 14783  005A36  0E01               	movlw	1
 14784  005A38  EF1F  F02D         	goto	u9260
 14785  005A3C                     u9250:
 14786  005A3C  0E00               	movlw	0
 14787  005A3E                     u9260:
 14788  005A3E  6E04               	movwf	?_isdigit^0,c
 14789  005A40  6A05               	clrf	(?_isdigit+1)^0,c
 14790  005A42  0012               	return		;funcret
 14791  005A44                     __end_of_isdigit:
 14792                           	opt callstack 0
 14793                           
 14794 ;; *************** function ___wmul *****************
 14795 ;; Defined at:
 14796 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 14797 ;; Parameters:    Size  Location     Type
 14798 ;;  multiplier      2    3[COMRAM] unsigned int 
 14799 ;;  multiplicand    2    5[COMRAM] unsigned int 
 14800 ;; Auto vars:     Size  Location     Type
 14801 ;;  product         2    7[COMRAM] unsigned int 
 14802 ;; Return value:  Size  Location     Type
 14803 ;;                  2    3[COMRAM] unsigned int 
 14804 ;; Registers used:
 14805 ;;		wreg, status,2, status,0, prodl, prodh
 14806 ;; Tracked objects:
 14807 ;;		On entry : 0/0
 14808 ;;		On exit  : 0/0
 14809 ;;		Unchanged: 0/0
 14810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14811 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14812 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14814 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14815 ;;Total ram usage:        6 bytes
 14816 ;; Hardware stack levels used:    1
 14817 ;; Hardware stack levels required when called:    4
 14818 ;; This function calls:
 14819 ;;		Nothing
 14820 ;; This function is called by:
 14821 ;;		_atoi
 14822 ;; This function uses a non-reentrant model
 14823 ;;
 14824                           
 14825                           	psect	text44
 14826  005B34                     __ptext44:
 14827                           	opt callstack 0
 14828  005B34                     ___wmul:
 14829                           	opt callstack 21
 14830  005B34  5004               	movf	___wmul@multiplier^0,w,c
 14831  005B36  0206               	mulwf	___wmul@multiplicand^0,c
 14832  005B38  CFF3 F008          	movff	prodl,___wmul@product
 14833  005B3C  CFF4 F009          	movff	prodh,___wmul@product+1
 14834  005B40  5004               	movf	___wmul@multiplier^0,w,c
 14835  005B42  0207               	mulwf	(___wmul@multiplicand+1)^0,c
 14836  005B44  50F3               	movf	243,w,c
 14837  005B46  2609               	addwf	(___wmul@product+1)^0,f,c
 14838  005B48  5005               	movf	(___wmul@multiplier+1)^0,w,c
 14839  005B4A  0206               	mulwf	___wmul@multiplicand^0,c
 14840  005B4C  50F3               	movf	243,w,c
 14841  005B4E  2609               	addwf	(___wmul@product+1)^0,f,c
 14842  005B50  C008  F004         	movff	___wmul@product,?___wmul
 14843  005B54  C009  F005         	movff	___wmul@product+1,?___wmul+1
 14844  005B58  0012               	return		;funcret
 14845  005B5A                     __end_of___wmul:
 14846                           	opt callstack 0
 14847                           
 14848 ;; *************** function _lcd_init *****************
 14849 ;; Defined at:
 14850 ;;		line 34 in file "lib_ili9341.c"
 14851 ;; Parameters:    Size  Location     Type
 14852 ;;		None
 14853 ;; Auto vars:     Size  Location     Type
 14854 ;;		None
 14855 ;; Return value:  Size  Location     Type
 14856 ;;                  1    wreg      void 
 14857 ;; Registers used:
 14858 ;;		wreg, status,2, status,0, cstack
 14859 ;; Tracked objects:
 14860 ;;		On entry : 0/0
 14861 ;;		On exit  : 0/0
 14862 ;;		Unchanged: 0/0
 14863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14868 ;;Total ram usage:        0 bytes
 14869 ;; Hardware stack levels used:    1
 14870 ;; Hardware stack levels required when called:    9
 14871 ;; This function calls:
 14872 ;;		_lcd_fill
 14873 ;;		_lcd_send
 14874 ;;		_msDelay
 14875 ;; This function is called by:
 14876 ;;		_main
 14877 ;; This function uses a non-reentrant model
 14878 ;;
 14879                           
 14880                           	psect	text45
 14881  002D5A                     __ptext45:
 14882                           	opt callstack 0
 14883  002D5A                     _lcd_init:
 14884                           	opt callstack 21
 14885  002D5A                     
 14886                           ;lib_ili9341.c: 37:     lcd_send(0, 0x01);
 14887  002D5A  0E01               	movlw	1
 14888  002D5C  6E05               	movwf	lcd_send@value^0,c
 14889  002D5E  0E00               	movlw	0
 14890  002D60  ECC7  F02D         	call	_lcd_send
 14891  002D64                     
 14892                           ;lib_ili9341.c: 38:     msDelay(150);
 14893  002D64  0E96               	movlw	150
 14894  002D66  EC56  F02D         	call	_msDelay
 14895  002D6A                     
 14896                           ;lib_ili9341.c: 40:     lcd_send(0,0xEF);
 14897  002D6A  0EEF               	movlw	239
 14898  002D6C  6E05               	movwf	lcd_send@value^0,c
 14899  002D6E  0E00               	movlw	0
 14900  002D70  ECC7  F02D         	call	_lcd_send
 14901  002D74                     
 14902                           ;lib_ili9341.c: 41:     lcd_send(1,0x03);
 14903  002D74  0E03               	movlw	3
 14904  002D76  6E05               	movwf	lcd_send@value^0,c
 14905  002D78  0E01               	movlw	1
 14906  002D7A  ECC7  F02D         	call	_lcd_send
 14907  002D7E                     
 14908                           ;lib_ili9341.c: 42:     lcd_send(1,0x80);
 14909  002D7E  0E80               	movlw	128
 14910  002D80  6E05               	movwf	lcd_send@value^0,c
 14911  002D82  0E01               	movlw	1
 14912  002D84  ECC7  F02D         	call	_lcd_send
 14913  002D88                     
 14914                           ;lib_ili9341.c: 43:     lcd_send(1,0x02);
 14915  002D88  0E02               	movlw	2
 14916  002D8A  6E05               	movwf	lcd_send@value^0,c
 14917  002D8C  0E01               	movlw	1
 14918  002D8E  ECC7  F02D         	call	_lcd_send
 14919  002D92                     
 14920                           ;lib_ili9341.c: 44:     lcd_send(0,0xCF);
 14921  002D92  0ECF               	movlw	207
 14922  002D94  6E05               	movwf	lcd_send@value^0,c
 14923  002D96  0E00               	movlw	0
 14924  002D98  ECC7  F02D         	call	_lcd_send
 14925  002D9C                     
 14926                           ;lib_ili9341.c: 45:     lcd_send(1,0x00);
 14927  002D9C  0E00               	movlw	0
 14928  002D9E  6E05               	movwf	lcd_send@value^0,c
 14929  002DA0  0E01               	movlw	1
 14930  002DA2  ECC7  F02D         	call	_lcd_send
 14931  002DA6                     
 14932                           ;lib_ili9341.c: 46:     lcd_send(1,0XC1);
 14933  002DA6  0EC1               	movlw	193
 14934  002DA8  6E05               	movwf	lcd_send@value^0,c
 14935  002DAA  0E01               	movlw	1
 14936  002DAC  ECC7  F02D         	call	_lcd_send
 14937  002DB0                     
 14938                           ;lib_ili9341.c: 47:     lcd_send(1,0X30);
 14939  002DB0  0E30               	movlw	48
 14940  002DB2  6E05               	movwf	lcd_send@value^0,c
 14941  002DB4  0E01               	movlw	1
 14942  002DB6  ECC7  F02D         	call	_lcd_send
 14943  002DBA                     
 14944                           ;lib_ili9341.c: 48:     lcd_send(0,0xED);
 14945  002DBA  0EED               	movlw	237
 14946  002DBC  6E05               	movwf	lcd_send@value^0,c
 14947  002DBE  0E00               	movlw	0
 14948  002DC0  ECC7  F02D         	call	_lcd_send
 14949  002DC4                     
 14950                           ;lib_ili9341.c: 49:     lcd_send(1,0x64);
 14951  002DC4  0E64               	movlw	100
 14952  002DC6  6E05               	movwf	lcd_send@value^0,c
 14953  002DC8  0E01               	movlw	1
 14954  002DCA  ECC7  F02D         	call	_lcd_send
 14955  002DCE                     
 14956                           ;lib_ili9341.c: 50:     lcd_send(1,0x03);
 14957  002DCE  0E03               	movlw	3
 14958  002DD0  6E05               	movwf	lcd_send@value^0,c
 14959  002DD2  0E01               	movlw	1
 14960  002DD4  ECC7  F02D         	call	_lcd_send
 14961  002DD8                     
 14962                           ;lib_ili9341.c: 51:     lcd_send(1,0X12);
 14963  002DD8  0E12               	movlw	18
 14964  002DDA  6E05               	movwf	lcd_send@value^0,c
 14965  002DDC  0E01               	movlw	1
 14966  002DDE  ECC7  F02D         	call	_lcd_send
 14967  002DE2                     
 14968                           ;lib_ili9341.c: 52:     lcd_send(1,0X81);
 14969  002DE2  0E81               	movlw	129
 14970  002DE4  6E05               	movwf	lcd_send@value^0,c
 14971  002DE6  0E01               	movlw	1
 14972  002DE8  ECC7  F02D         	call	_lcd_send
 14973  002DEC                     
 14974                           ;lib_ili9341.c: 53:     lcd_send(0,0xE8);
 14975  002DEC  0EE8               	movlw	232
 14976  002DEE  6E05               	movwf	lcd_send@value^0,c
 14977  002DF0  0E00               	movlw	0
 14978  002DF2  ECC7  F02D         	call	_lcd_send
 14979  002DF6                     
 14980                           ;lib_ili9341.c: 54:     lcd_send(1,0x85);
 14981  002DF6  0E85               	movlw	133
 14982  002DF8  6E05               	movwf	lcd_send@value^0,c
 14983  002DFA  0E01               	movlw	1
 14984  002DFC  ECC7  F02D         	call	_lcd_send
 14985  002E00                     
 14986                           ;lib_ili9341.c: 55:     lcd_send(1,0x00);
 14987  002E00  0E00               	movlw	0
 14988  002E02  6E05               	movwf	lcd_send@value^0,c
 14989  002E04  0E01               	movlw	1
 14990  002E06  ECC7  F02D         	call	_lcd_send
 14991  002E0A                     
 14992                           ;lib_ili9341.c: 56:     lcd_send(1,0x78);
 14993  002E0A  0E78               	movlw	120
 14994  002E0C  6E05               	movwf	lcd_send@value^0,c
 14995  002E0E  0E01               	movlw	1
 14996  002E10  ECC7  F02D         	call	_lcd_send
 14997  002E14                     
 14998                           ;lib_ili9341.c: 57:     lcd_send(0,0xCB);
 14999  002E14  0ECB               	movlw	203
 15000  002E16  6E05               	movwf	lcd_send@value^0,c
 15001  002E18  0E00               	movlw	0
 15002  002E1A  ECC7  F02D         	call	_lcd_send
 15003  002E1E                     
 15004                           ;lib_ili9341.c: 58:     lcd_send(1,0x39);
 15005  002E1E  0E39               	movlw	57
 15006  002E20  6E05               	movwf	lcd_send@value^0,c
 15007  002E22  0E01               	movlw	1
 15008  002E24  ECC7  F02D         	call	_lcd_send
 15009  002E28                     
 15010                           ;lib_ili9341.c: 59:     lcd_send(1,0x2C);
 15011  002E28  0E2C               	movlw	44
 15012  002E2A  6E05               	movwf	lcd_send@value^0,c
 15013  002E2C  0E01               	movlw	1
 15014  002E2E  ECC7  F02D         	call	_lcd_send
 15015  002E32                     
 15016                           ;lib_ili9341.c: 60:     lcd_send(1,0x00);
 15017  002E32  0E00               	movlw	0
 15018  002E34  6E05               	movwf	lcd_send@value^0,c
 15019  002E36  0E01               	movlw	1
 15020  002E38  ECC7  F02D         	call	_lcd_send
 15021  002E3C                     
 15022                           ;lib_ili9341.c: 61:     lcd_send(1,0x34);
 15023  002E3C  0E34               	movlw	52
 15024  002E3E  6E05               	movwf	lcd_send@value^0,c
 15025  002E40  0E01               	movlw	1
 15026  002E42  ECC7  F02D         	call	_lcd_send
 15027  002E46                     
 15028                           ;lib_ili9341.c: 62:     lcd_send(1,0x02);
 15029  002E46  0E02               	movlw	2
 15030  002E48  6E05               	movwf	lcd_send@value^0,c
 15031  002E4A  0E01               	movlw	1
 15032  002E4C  ECC7  F02D         	call	_lcd_send
 15033  002E50                     
 15034                           ;lib_ili9341.c: 63:     lcd_send(0,0xF7);
 15035  002E50  0EF7               	movlw	247
 15036  002E52  6E05               	movwf	lcd_send@value^0,c
 15037  002E54  0E00               	movlw	0
 15038  002E56  ECC7  F02D         	call	_lcd_send
 15039  002E5A                     
 15040                           ;lib_ili9341.c: 64:     lcd_send(1,0x20);
 15041  002E5A  0E20               	movlw	32
 15042  002E5C  6E05               	movwf	lcd_send@value^0,c
 15043  002E5E  0E01               	movlw	1
 15044  002E60  ECC7  F02D         	call	_lcd_send
 15045  002E64                     
 15046                           ;lib_ili9341.c: 65:     lcd_send(0,0xEA);
 15047  002E64  0EEA               	movlw	234
 15048  002E66  6E05               	movwf	lcd_send@value^0,c
 15049  002E68  0E00               	movlw	0
 15050  002E6A  ECC7  F02D         	call	_lcd_send
 15051  002E6E                     
 15052                           ;lib_ili9341.c: 66:     lcd_send(1,0x00);
 15053  002E6E  0E00               	movlw	0
 15054  002E70  6E05               	movwf	lcd_send@value^0,c
 15055  002E72  0E01               	movlw	1
 15056  002E74  ECC7  F02D         	call	_lcd_send
 15057  002E78                     
 15058                           ;lib_ili9341.c: 67:     lcd_send(1,0x00);
 15059  002E78  0E00               	movlw	0
 15060  002E7A  6E05               	movwf	lcd_send@value^0,c
 15061  002E7C  0E01               	movlw	1
 15062  002E7E  ECC7  F02D         	call	_lcd_send
 15063  002E82                     
 15064                           ;lib_ili9341.c: 68:     lcd_send(0,0xC0);
 15065  002E82  0EC0               	movlw	192
 15066  002E84  6E05               	movwf	lcd_send@value^0,c
 15067  002E86  0E00               	movlw	0
 15068  002E88  ECC7  F02D         	call	_lcd_send
 15069  002E8C                     
 15070                           ;lib_ili9341.c: 69:     lcd_send(1,0x23);
 15071  002E8C  0E23               	movlw	35
 15072  002E8E  6E05               	movwf	lcd_send@value^0,c
 15073  002E90  0E01               	movlw	1
 15074  002E92  ECC7  F02D         	call	_lcd_send
 15075  002E96                     
 15076                           ;lib_ili9341.c: 70:     lcd_send(0,0xC1);
 15077  002E96  0EC1               	movlw	193
 15078  002E98  6E05               	movwf	lcd_send@value^0,c
 15079  002E9A  0E00               	movlw	0
 15080  002E9C  ECC7  F02D         	call	_lcd_send
 15081  002EA0                     
 15082                           ;lib_ili9341.c: 71:     lcd_send(1,0x10);
 15083  002EA0  0E10               	movlw	16
 15084  002EA2  6E05               	movwf	lcd_send@value^0,c
 15085  002EA4  0E01               	movlw	1
 15086  002EA6  ECC7  F02D         	call	_lcd_send
 15087  002EAA                     
 15088                           ;lib_ili9341.c: 72:     lcd_send(0,0xC5);
 15089  002EAA  0EC5               	movlw	197
 15090  002EAC  6E05               	movwf	lcd_send@value^0,c
 15091  002EAE  0E00               	movlw	0
 15092  002EB0  ECC7  F02D         	call	_lcd_send
 15093  002EB4                     
 15094                           ;lib_ili9341.c: 73:     lcd_send(1,0x3e);
 15095  002EB4  0E3E               	movlw	62
 15096  002EB6  6E05               	movwf	lcd_send@value^0,c
 15097  002EB8  0E01               	movlw	1
 15098  002EBA  ECC7  F02D         	call	_lcd_send
 15099  002EBE                     
 15100                           ;lib_ili9341.c: 74:     lcd_send(1,0x28);
 15101  002EBE  0E28               	movlw	40
 15102  002EC0  6E05               	movwf	lcd_send@value^0,c
 15103  002EC2  0E01               	movlw	1
 15104  002EC4  ECC7  F02D         	call	_lcd_send
 15105  002EC8                     
 15106                           ;lib_ili9341.c: 75:     lcd_send(0,0xC7);
 15107  002EC8  0EC7               	movlw	199
 15108  002ECA  6E05               	movwf	lcd_send@value^0,c
 15109  002ECC  0E00               	movlw	0
 15110  002ECE  ECC7  F02D         	call	_lcd_send
 15111  002ED2                     
 15112                           ;lib_ili9341.c: 76:     lcd_send(1,0x86);
 15113  002ED2  0E86               	movlw	134
 15114  002ED4  6E05               	movwf	lcd_send@value^0,c
 15115  002ED6  0E01               	movlw	1
 15116  002ED8  ECC7  F02D         	call	_lcd_send
 15117  002EDC                     
 15118                           ;lib_ili9341.c: 77:     lcd_send(0,0x36);
 15119  002EDC  0E36               	movlw	54
 15120  002EDE  6E05               	movwf	lcd_send@value^0,c
 15121  002EE0  0E00               	movlw	0
 15122  002EE2  ECC7  F02D         	call	_lcd_send
 15123  002EE6                     
 15124                           ;lib_ili9341.c: 78:     lcd_send(1,0x48);
 15125  002EE6  0E48               	movlw	72
 15126  002EE8  6E05               	movwf	lcd_send@value^0,c
 15127  002EEA  0E01               	movlw	1
 15128  002EEC  ECC7  F02D         	call	_lcd_send
 15129  002EF0                     
 15130                           ;lib_ili9341.c: 79:     lcd_send(0,0x3A);
 15131  002EF0  0E3A               	movlw	58
 15132  002EF2  6E05               	movwf	lcd_send@value^0,c
 15133  002EF4  0E00               	movlw	0
 15134  002EF6  ECC7  F02D         	call	_lcd_send
 15135  002EFA                     
 15136                           ;lib_ili9341.c: 80:     lcd_send(1,0x55);
 15137  002EFA  0E55               	movlw	85
 15138  002EFC  6E05               	movwf	lcd_send@value^0,c
 15139  002EFE  0E01               	movlw	1
 15140  002F00  ECC7  F02D         	call	_lcd_send
 15141  002F04                     
 15142                           ;lib_ili9341.c: 81:     lcd_send(0,0xB1);
 15143  002F04  0EB1               	movlw	177
 15144  002F06  6E05               	movwf	lcd_send@value^0,c
 15145  002F08  0E00               	movlw	0
 15146  002F0A  ECC7  F02D         	call	_lcd_send
 15147  002F0E                     
 15148                           ;lib_ili9341.c: 82:     lcd_send(1,0x00);
 15149  002F0E  0E00               	movlw	0
 15150  002F10  6E05               	movwf	lcd_send@value^0,c
 15151  002F12  0E01               	movlw	1
 15152  002F14  ECC7  F02D         	call	_lcd_send
 15153  002F18                     
 15154                           ;lib_ili9341.c: 83:     lcd_send(1,0x18);
 15155  002F18  0E18               	movlw	24
 15156  002F1A  6E05               	movwf	lcd_send@value^0,c
 15157  002F1C  0E01               	movlw	1
 15158  002F1E  ECC7  F02D         	call	_lcd_send
 15159  002F22                     
 15160                           ;lib_ili9341.c: 84:     lcd_send(0,0xB6);
 15161  002F22  0EB6               	movlw	182
 15162  002F24  6E05               	movwf	lcd_send@value^0,c
 15163  002F26  0E00               	movlw	0
 15164  002F28  ECC7  F02D         	call	_lcd_send
 15165  002F2C                     
 15166                           ;lib_ili9341.c: 85:     lcd_send(1,0x08);
 15167  002F2C  0E08               	movlw	8
 15168  002F2E  6E05               	movwf	lcd_send@value^0,c
 15169  002F30  0E01               	movlw	1
 15170  002F32  ECC7  F02D         	call	_lcd_send
 15171  002F36                     
 15172                           ;lib_ili9341.c: 86:     lcd_send(1,0x82);
 15173  002F36  0E82               	movlw	130
 15174  002F38  6E05               	movwf	lcd_send@value^0,c
 15175  002F3A  0E01               	movlw	1
 15176  002F3C  ECC7  F02D         	call	_lcd_send
 15177  002F40                     
 15178                           ;lib_ili9341.c: 87:     lcd_send(1,0x27);
 15179  002F40  0E27               	movlw	39
 15180  002F42  6E05               	movwf	lcd_send@value^0,c
 15181  002F44  0E01               	movlw	1
 15182  002F46  ECC7  F02D         	call	_lcd_send
 15183  002F4A                     
 15184                           ;lib_ili9341.c: 88:     lcd_send(0,0xF2);
 15185  002F4A  0EF2               	movlw	242
 15186  002F4C  6E05               	movwf	lcd_send@value^0,c
 15187  002F4E  0E00               	movlw	0
 15188  002F50  ECC7  F02D         	call	_lcd_send
 15189  002F54                     
 15190                           ;lib_ili9341.c: 89:     lcd_send(1,0x00);
 15191  002F54  0E00               	movlw	0
 15192  002F56  6E05               	movwf	lcd_send@value^0,c
 15193  002F58  0E01               	movlw	1
 15194  002F5A  ECC7  F02D         	call	_lcd_send
 15195  002F5E                     
 15196                           ;lib_ili9341.c: 90:     lcd_send(0,0x26);
 15197  002F5E  0E26               	movlw	38
 15198  002F60  6E05               	movwf	lcd_send@value^0,c
 15199  002F62  0E00               	movlw	0
 15200  002F64  ECC7  F02D         	call	_lcd_send
 15201  002F68                     
 15202                           ;lib_ili9341.c: 91:     lcd_send(1,0x01);
 15203  002F68  0E01               	movlw	1
 15204  002F6A  6E05               	movwf	lcd_send@value^0,c
 15205  002F6C  0E01               	movlw	1
 15206  002F6E  ECC7  F02D         	call	_lcd_send
 15207  002F72                     
 15208                           ;lib_ili9341.c: 92:     lcd_send(0,0xE0);
 15209  002F72  0EE0               	movlw	224
 15210  002F74  6E05               	movwf	lcd_send@value^0,c
 15211  002F76  0E00               	movlw	0
 15212  002F78  ECC7  F02D         	call	_lcd_send
 15213  002F7C                     
 15214                           ;lib_ili9341.c: 93:     lcd_send(1,0x0F);
 15215  002F7C  0E0F               	movlw	15
 15216  002F7E  6E05               	movwf	lcd_send@value^0,c
 15217  002F80  0E01               	movlw	1
 15218  002F82  ECC7  F02D         	call	_lcd_send
 15219  002F86                     
 15220                           ;lib_ili9341.c: 94:     lcd_send(1,0x31);
 15221  002F86  0E31               	movlw	49
 15222  002F88  6E05               	movwf	lcd_send@value^0,c
 15223  002F8A  0E01               	movlw	1
 15224  002F8C  ECC7  F02D         	call	_lcd_send
 15225  002F90                     
 15226                           ;lib_ili9341.c: 95:     lcd_send(1,0x2B);
 15227  002F90  0E2B               	movlw	43
 15228  002F92  6E05               	movwf	lcd_send@value^0,c
 15229  002F94  0E01               	movlw	1
 15230  002F96  ECC7  F02D         	call	_lcd_send
 15231  002F9A                     
 15232                           ;lib_ili9341.c: 96:     lcd_send(1,0x0C);
 15233  002F9A  0E0C               	movlw	12
 15234  002F9C  6E05               	movwf	lcd_send@value^0,c
 15235  002F9E  0E01               	movlw	1
 15236  002FA0  ECC7  F02D         	call	_lcd_send
 15237  002FA4                     
 15238                           ;lib_ili9341.c: 97:     lcd_send(1,0x0E);
 15239  002FA4  0E0E               	movlw	14
 15240  002FA6  6E05               	movwf	lcd_send@value^0,c
 15241  002FA8  0E01               	movlw	1
 15242  002FAA  ECC7  F02D         	call	_lcd_send
 15243  002FAE                     
 15244                           ;lib_ili9341.c: 98:     lcd_send(1,0x08);
 15245  002FAE  0E08               	movlw	8
 15246  002FB0  6E05               	movwf	lcd_send@value^0,c
 15247  002FB2  0E01               	movlw	1
 15248  002FB4  ECC7  F02D         	call	_lcd_send
 15249  002FB8                     
 15250                           ;lib_ili9341.c: 99:     lcd_send(1,0x4E);
 15251  002FB8  0E4E               	movlw	78
 15252  002FBA  6E05               	movwf	lcd_send@value^0,c
 15253  002FBC  0E01               	movlw	1
 15254  002FBE  ECC7  F02D         	call	_lcd_send
 15255  002FC2                     
 15256                           ;lib_ili9341.c: 100:     lcd_send(1,0xF1);
 15257  002FC2  0EF1               	movlw	241
 15258  002FC4  6E05               	movwf	lcd_send@value^0,c
 15259  002FC6  0E01               	movlw	1
 15260  002FC8  ECC7  F02D         	call	_lcd_send
 15261  002FCC                     
 15262                           ;lib_ili9341.c: 101:     lcd_send(1,0x37);
 15263  002FCC  0E37               	movlw	55
 15264  002FCE  6E05               	movwf	lcd_send@value^0,c
 15265  002FD0  0E01               	movlw	1
 15266  002FD2  ECC7  F02D         	call	_lcd_send
 15267  002FD6                     
 15268                           ;lib_ili9341.c: 102:     lcd_send(1,0x07);
 15269  002FD6  0E07               	movlw	7
 15270  002FD8  6E05               	movwf	lcd_send@value^0,c
 15271  002FDA  0E01               	movlw	1
 15272  002FDC  ECC7  F02D         	call	_lcd_send
 15273  002FE0                     
 15274                           ;lib_ili9341.c: 103:     lcd_send(1,0x10);
 15275  002FE0  0E10               	movlw	16
 15276  002FE2  6E05               	movwf	lcd_send@value^0,c
 15277  002FE4  0E01               	movlw	1
 15278  002FE6  ECC7  F02D         	call	_lcd_send
 15279  002FEA                     
 15280                           ;lib_ili9341.c: 104:     lcd_send(1,0x03);
 15281  002FEA  0E03               	movlw	3
 15282  002FEC  6E05               	movwf	lcd_send@value^0,c
 15283  002FEE  0E01               	movlw	1
 15284  002FF0  ECC7  F02D         	call	_lcd_send
 15285  002FF4                     
 15286                           ;lib_ili9341.c: 105:     lcd_send(1,0x0E);
 15287  002FF4  0E0E               	movlw	14
 15288  002FF6  6E05               	movwf	lcd_send@value^0,c
 15289  002FF8  0E01               	movlw	1
 15290  002FFA  ECC7  F02D         	call	_lcd_send
 15291  002FFE                     
 15292                           ;lib_ili9341.c: 106:     lcd_send(1,0x09);
 15293  002FFE  0E09               	movlw	9
 15294  003000  6E05               	movwf	lcd_send@value^0,c
 15295  003002  0E01               	movlw	1
 15296  003004  ECC7  F02D         	call	_lcd_send
 15297  003008                     
 15298                           ;lib_ili9341.c: 107:     lcd_send(1,0x00);
 15299  003008  0E00               	movlw	0
 15300  00300A  6E05               	movwf	lcd_send@value^0,c
 15301  00300C  0E01               	movlw	1
 15302  00300E  ECC7  F02D         	call	_lcd_send
 15303  003012                     
 15304                           ;lib_ili9341.c: 108:     lcd_send(0,0xE1);
 15305  003012  0EE1               	movlw	225
 15306  003014  6E05               	movwf	lcd_send@value^0,c
 15307  003016  0E00               	movlw	0
 15308  003018  ECC7  F02D         	call	_lcd_send
 15309  00301C                     
 15310                           ;lib_ili9341.c: 109:     lcd_send(1,0x00);
 15311  00301C  0E00               	movlw	0
 15312  00301E  6E05               	movwf	lcd_send@value^0,c
 15313  003020  0E01               	movlw	1
 15314  003022  ECC7  F02D         	call	_lcd_send
 15315  003026                     
 15316                           ;lib_ili9341.c: 110:     lcd_send(1,0x0E);
 15317  003026  0E0E               	movlw	14
 15318  003028  6E05               	movwf	lcd_send@value^0,c
 15319  00302A  0E01               	movlw	1
 15320  00302C  ECC7  F02D         	call	_lcd_send
 15321  003030                     
 15322                           ;lib_ili9341.c: 111:     lcd_send(1,0x14);
 15323  003030  0E14               	movlw	20
 15324  003032  6E05               	movwf	lcd_send@value^0,c
 15325  003034  0E01               	movlw	1
 15326  003036  ECC7  F02D         	call	_lcd_send
 15327  00303A                     
 15328                           ;lib_ili9341.c: 112:     lcd_send(1,0x03);
 15329  00303A  0E03               	movlw	3
 15330  00303C  6E05               	movwf	lcd_send@value^0,c
 15331  00303E  0E01               	movlw	1
 15332  003040  ECC7  F02D         	call	_lcd_send
 15333  003044                     
 15334                           ;lib_ili9341.c: 113:     lcd_send(1,0x11);
 15335  003044  0E11               	movlw	17
 15336  003046  6E05               	movwf	lcd_send@value^0,c
 15337  003048  0E01               	movlw	1
 15338  00304A  ECC7  F02D         	call	_lcd_send
 15339  00304E                     
 15340                           ;lib_ili9341.c: 114:     lcd_send(1,0x07);
 15341  00304E  0E07               	movlw	7
 15342  003050  6E05               	movwf	lcd_send@value^0,c
 15343  003052  0E01               	movlw	1
 15344  003054  ECC7  F02D         	call	_lcd_send
 15345  003058                     
 15346                           ;lib_ili9341.c: 115:     lcd_send(1,0x31);
 15347  003058  0E31               	movlw	49
 15348  00305A  6E05               	movwf	lcd_send@value^0,c
 15349  00305C  0E01               	movlw	1
 15350  00305E  ECC7  F02D         	call	_lcd_send
 15351  003062                     
 15352                           ;lib_ili9341.c: 116:     lcd_send(1,0xC1);
 15353  003062  0EC1               	movlw	193
 15354  003064  6E05               	movwf	lcd_send@value^0,c
 15355  003066  0E01               	movlw	1
 15356  003068  ECC7  F02D         	call	_lcd_send
 15357  00306C                     
 15358                           ;lib_ili9341.c: 117:     lcd_send(1,0x48);
 15359  00306C  0E48               	movlw	72
 15360  00306E  6E05               	movwf	lcd_send@value^0,c
 15361  003070  0E01               	movlw	1
 15362  003072  ECC7  F02D         	call	_lcd_send
 15363  003076                     
 15364                           ;lib_ili9341.c: 118:     lcd_send(1,0x08);
 15365  003076  0E08               	movlw	8
 15366  003078  6E05               	movwf	lcd_send@value^0,c
 15367  00307A  0E01               	movlw	1
 15368  00307C  ECC7  F02D         	call	_lcd_send
 15369  003080                     
 15370                           ;lib_ili9341.c: 119:     lcd_send(1,0x0F);
 15371  003080  0E0F               	movlw	15
 15372  003082  6E05               	movwf	lcd_send@value^0,c
 15373  003084  0E01               	movlw	1
 15374  003086  ECC7  F02D         	call	_lcd_send
 15375  00308A                     
 15376                           ;lib_ili9341.c: 120:     lcd_send(1,0x0C);
 15377  00308A  0E0C               	movlw	12
 15378  00308C  6E05               	movwf	lcd_send@value^0,c
 15379  00308E  0E01               	movlw	1
 15380  003090  ECC7  F02D         	call	_lcd_send
 15381  003094                     
 15382                           ;lib_ili9341.c: 121:     lcd_send(1,0x31);
 15383  003094  0E31               	movlw	49
 15384  003096  6E05               	movwf	lcd_send@value^0,c
 15385  003098  0E01               	movlw	1
 15386  00309A  ECC7  F02D         	call	_lcd_send
 15387  00309E                     
 15388                           ;lib_ili9341.c: 122:     lcd_send(1,0x36);
 15389  00309E  0E36               	movlw	54
 15390  0030A0  6E05               	movwf	lcd_send@value^0,c
 15391  0030A2  0E01               	movlw	1
 15392  0030A4  ECC7  F02D         	call	_lcd_send
 15393  0030A8                     
 15394                           ;lib_ili9341.c: 123:     lcd_send(1,0x0F);
 15395  0030A8  0E0F               	movlw	15
 15396  0030AA  6E05               	movwf	lcd_send@value^0,c
 15397  0030AC  0E01               	movlw	1
 15398  0030AE  ECC7  F02D         	call	_lcd_send
 15399  0030B2                     
 15400                           ;lib_ili9341.c: 124:     lcd_send(0,0x11);
 15401  0030B2  0E11               	movlw	17
 15402  0030B4  6E05               	movwf	lcd_send@value^0,c
 15403  0030B6  0E00               	movlw	0
 15404  0030B8  ECC7  F02D         	call	_lcd_send
 15405                           
 15406                           ;lib_ili9341.c: 125:     msDelay(120);
 15407  0030BC  0E78               	movlw	120
 15408  0030BE  EC56  F02D         	call	_msDelay
 15409  0030C2                     
 15410                           ;lib_ili9341.c: 126:     lcd_send(0,0x29);
 15411  0030C2  0E29               	movlw	41
 15412  0030C4  6E05               	movwf	lcd_send@value^0,c
 15413  0030C6  0E00               	movlw	0
 15414  0030C8  ECC7  F02D         	call	_lcd_send
 15415  0030CC                     
 15416                           ;lib_ili9341.c: 127:     msDelay(120);
 15417  0030CC  0E78               	movlw	120
 15418  0030CE  EC56  F02D         	call	_msDelay
 15419  0030D2                     
 15420                           ;lib_ili9341.c: 130:     lcd_fill(global_bg_color);
 15421  0030D2  0E00               	movlw	0
 15422  0030D4  6E0E               	movwf	(lcd_fill@bg_color+1)^0,c
 15423  0030D6  0E00               	movlw	0
 15424  0030D8  6E0D               	movwf	lcd_fill@bg_color^0,c
 15425  0030DA  ECDC  F029         	call	_lcd_fill	;wreg free
 15426  0030DE  0012               	return		;funcret
 15427  0030E0                     __end_of_lcd_init:
 15428                           	opt callstack 0
 15429                           
 15430 ;; *************** function _msDelay *****************
 15431 ;; Defined at:
 15432 ;;		line 16 in file "lib_ili9341.c"
 15433 ;; Parameters:    Size  Location     Type
 15434 ;;  ms              1    wreg     unsigned char 
 15435 ;; Auto vars:     Size  Location     Type
 15436 ;;  ms              1    4[COMRAM] unsigned char 
 15437 ;;  k               1    5[COMRAM] unsigned char 
 15438 ;; Return value:  Size  Location     Type
 15439 ;;                  1    wreg      void 
 15440 ;; Registers used:
 15441 ;;		wreg, status,2, status,0
 15442 ;; Tracked objects:
 15443 ;;		On entry : 0/0
 15444 ;;		On exit  : 0/0
 15445 ;;		Unchanged: 0/0
 15446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15448 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15449 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15450 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15451 ;;Total ram usage:        3 bytes
 15452 ;; Hardware stack levels used:    1
 15453 ;; Hardware stack levels required when called:    4
 15454 ;; This function calls:
 15455 ;;		Nothing
 15456 ;; This function is called by:
 15457 ;;		_lcd_init
 15458 ;; This function uses a non-reentrant model
 15459 ;;
 15460                           
 15461                           	psect	text46
 15462  005AAC                     __ptext46:
 15463                           	opt callstack 0
 15464  005AAC                     _msDelay:
 15465                           	opt callstack 25
 15466                           
 15467                           ;incstack = 0
 15468                           ;msDelay@ms stored from wreg
 15469  005AAC  6E05               	movwf	msDelay@ms^0,c
 15470  005AAE                     
 15471                           ;lib_ili9341.c: 16: void msDelay (uint8_t ms);lib_ili9341.c: 17: {;lib_ili9341.c: 18:   
      +                            uint8_t k;;lib_ili9341.c: 20:     for(k=0; k<ms; k++)
 15472  005AAE  0E00               	movlw	0
 15473  005AB0  6E06               	movwf	msDelay@k^0,c
 15474  005AB2  EF63  F02D         	goto	l6436
 15475  005AB6                     l6432:
 15476                           
 15477                           ;lib_ili9341.c: 21:     {;lib_ili9341.c: 22:         _delay((unsigned long)((1)*(8000000
      +                          /4000.0)));
 15478  005AB6  0E03               	movlw	3
 15479  005AB8  6E04               	movwf	??_msDelay^0,c
 15480  005ABA  0E98               	movlw	152
 15481  005ABC                     u12037:
 15482  005ABC  2EE8               	decfsz	wreg,f,c
 15483  005ABE  D7FE               	bra	u12037
 15484  005AC0  2E04               	decfsz	??_msDelay^0,f,c
 15485  005AC2  D7FC               	bra	u12037
 15486  005AC4                     
 15487                           ;lib_ili9341.c: 23:     }
 15488  005AC4  2A06               	incf	msDelay@k^0,f,c
 15489  005AC6                     l6436:
 15490  005AC6  5005               	movf	msDelay@ms^0,w,c
 15491  005AC8  5C06               	subwf	msDelay@k^0,w,c
 15492  005ACA  A0D8               	btfss	status,0,c
 15493  005ACC  EF6A  F02D         	goto	u7881
 15494  005AD0  EF6C  F02D         	goto	u7880
 15495  005AD4                     u7881:
 15496  005AD4  EF5B  F02D         	goto	l6432
 15497  005AD8                     u7880:
 15498  005AD8  0012               	return		;funcret
 15499  005ADA                     __end_of_msDelay:
 15500                           	opt callstack 0
 15501                           
 15502 ;; *************** function _lcd_fill *****************
 15503 ;; Defined at:
 15504 ;;		line 193 in file "lib_ili9341.c"
 15505 ;; Parameters:    Size  Location     Type
 15506 ;;  bg_color        2   12[COMRAM] unsigned short 
 15507 ;; Auto vars:     Size  Location     Type
 15508 ;;  width           2   16[COMRAM] unsigned short 
 15509 ;;  height          2   14[COMRAM] unsigned short 
 15510 ;; Return value:  Size  Location     Type
 15511 ;;                  1    wreg      void 
 15512 ;; Registers used:
 15513 ;;		wreg, status,2, status,0, cstack
 15514 ;; Tracked objects:
 15515 ;;		On entry : 0/0
 15516 ;;		On exit  : 0/0
 15517 ;;		Unchanged: 0/0
 15518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15519 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15520 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15522 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15523 ;;Total ram usage:        6 bytes
 15524 ;; Hardware stack levels used:    1
 15525 ;; Hardware stack levels required when called:    8
 15526 ;; This function calls:
 15527 ;;		_lcd_draw_pixel
 15528 ;;		_lcd_set_cursor
 15529 ;; This function is called by:
 15530 ;;		_lcd_init
 15531 ;; This function uses a non-reentrant model
 15532 ;;
 15533                           
 15534                           	psect	text47
 15535  0053B8                     __ptext47:
 15536                           	opt callstack 0
 15537  0053B8                     _lcd_fill:
 15538                           	opt callstack 21
 15539  0053B8                     
 15540                           ;lib_ili9341.c: 193: void lcd_fill(uint16_t bg_color);lib_ili9341.c: 194: {;lib_ili9341.
      +                          c: 195:     uint16_t width = 320, height = 240;
 15541  0053B8  0E01               	movlw	1
 15542  0053BA  6E12               	movwf	(lcd_fill@width+1)^0,c
 15543  0053BC  0E40               	movlw	64
 15544  0053BE  6E11               	movwf	lcd_fill@width^0,c
 15545  0053C0  0E00               	movlw	0
 15546  0053C2  6E10               	movwf	(lcd_fill@height+1)^0,c
 15547  0053C4  0EF0               	movlw	240
 15548  0053C6  6E0F               	movwf	lcd_fill@height^0,c
 15549  0053C8                     
 15550                           ;lib_ili9341.c: 197:     if( lcd_set_cursor(0,0) )
 15551  0053C8  0E00               	movlw	0
 15552  0053CA  6E0A               	movwf	(lcd_set_cursor@x+1)^0,c
 15553  0053CC  0E00               	movlw	0
 15554  0053CE  6E09               	movwf	lcd_set_cursor@x^0,c
 15555  0053D0  0E00               	movlw	0
 15556  0053D2  6E0C               	movwf	(lcd_set_cursor@y+1)^0,c
 15557  0053D4  0E00               	movlw	0
 15558  0053D6  6E0B               	movwf	lcd_set_cursor@y^0,c
 15559  0053D8  EC36  F02C         	call	_lcd_set_cursor	;wreg free
 15560  0053DC  0900               	iorlw	0
 15561  0053DE  B4D8               	btfsc	status,2,c
 15562  0053E0  EFF4  F029         	goto	u7891
 15563  0053E4  EFF6  F029         	goto	u7890
 15564  0053E8                     u7891:
 15565  0053E8  EF0F  F02A         	goto	l6450
 15566  0053EC                     u7890:
 15567  0053EC  EF1C  F02A         	goto	l354
 15568  0053F0                     l6444:
 15569                           
 15570                           ;lib_ili9341.c: 205:         {;lib_ili9341.c: 206:             lcd_draw_pixel(bg_color);
 15571  0053F0  C00D  F007         	movff	lcd_fill@bg_color,lcd_draw_pixel@color
 15572  0053F4  C00E  F008         	movff	lcd_fill@bg_color+1,lcd_draw_pixel@color+1
 15573  0053F8  ECDF  F02D         	call	_lcd_draw_pixel	;wreg free
 15574  0053FC                     l6446:
 15575                           
 15576                           ;lib_ili9341.c: 204:         while(width--)
 15577  0053FC  0611               	decf	lcd_fill@width^0,f,c
 15578  0053FE  A0D8               	btfss	status,0,c
 15579  005400  0612               	decf	(lcd_fill@width+1)^0,f,c
 15580  005402  2811               	incf	lcd_fill@width^0,w,c
 15581  005404  E106               	bnz	u7901
 15582  005406  2812               	incf	(lcd_fill@width+1)^0,w,c
 15583  005408  A4D8               	btfss	status,2,c
 15584  00540A  EF09  F02A         	goto	u7901
 15585  00540E  EF0B  F02A         	goto	u7900
 15586  005412                     u7901:
 15587  005412  EFF8  F029         	goto	l6444
 15588  005416                     u7900:
 15589  005416                     
 15590                           ;lib_ili9341.c: 208:         width = 320;
 15591  005416  0E01               	movlw	1
 15592  005418  6E12               	movwf	(lcd_fill@width+1)^0,c
 15593  00541A  0E40               	movlw	64
 15594  00541C  6E11               	movwf	lcd_fill@width^0,c
 15595  00541E                     l6450:
 15596                           
 15597                           ;lib_ili9341.c: 202:     while(height--)
 15598  00541E  060F               	decf	lcd_fill@height^0,f,c
 15599  005420  A0D8               	btfss	status,0,c
 15600  005422  0610               	decf	(lcd_fill@height+1)^0,f,c
 15601  005424  280F               	incf	lcd_fill@height^0,w,c
 15602  005426  E106               	bnz	u7911
 15603  005428  2810               	incf	(lcd_fill@height+1)^0,w,c
 15604  00542A  A4D8               	btfss	status,2,c
 15605  00542C  EF1A  F02A         	goto	u7911
 15606  005430  EF1C  F02A         	goto	u7910
 15607  005434                     u7911:
 15608  005434  EFFE  F029         	goto	l6446
 15609  005438                     u7910:
 15610  005438                     l354:
 15611  005438  0012               	return		;funcret
 15612  00543A                     __end_of_lcd_fill:
 15613                           	opt callstack 0
 15614                           
 15615 ;; *************** function _lcd_draw_string *****************
 15616 ;; Defined at:
 15617 ;;		line 380 in file "lib_ili9341.c"
 15618 ;; Parameters:    Size  Location     Type
 15619 ;;  x               2   34[COMRAM] unsigned short 
 15620 ;;  y               2   36[COMRAM] unsigned short 
 15621 ;;  pS              2   38[COMRAM] PTR const unsigned char 
 15622 ;;		 -> string_temp(100), STR_1(12), 
 15623 ;;  fg_color        2   40[COMRAM] unsigned short 
 15624 ;;  bg_color        2   42[COMRAM] unsigned short 
 15625 ;; Auto vars:     Size  Location     Type
 15626 ;;  lIndex          2   50[COMRAM] unsigned short 
 15627 ;;  k               2   48[COMRAM] unsigned short 
 15628 ;; Return value:  Size  Location     Type
 15629 ;;                  1    wreg      void 
 15630 ;; Registers used:
 15631 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15632 ;; Tracked objects:
 15633 ;;		On entry : 0/0
 15634 ;;		On exit  : 0/0
 15635 ;;		Unchanged: 0/0
 15636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15637 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15638 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15639 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15640 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15641 ;;Total ram usage:       18 bytes
 15642 ;; Hardware stack levels used:    1
 15643 ;; Hardware stack levels required when called:    9
 15644 ;; This function calls:
 15645 ;;		_lcd_draw_char
 15646 ;; This function is called by:
 15647 ;;		_main
 15648 ;; This function uses a non-reentrant model
 15649 ;;
 15650                           
 15651                           	psect	text48
 15652  00472A                     __ptext48:
 15653                           	opt callstack 0
 15654  00472A                     _lcd_draw_string:
 15655                           	opt callstack 21
 15656  00472A                     
 15657                           ;lib_ili9341.c: 380: void lcd_draw_string (uint16_t x, uint16_t y, const char *pS, uint1
      +                          6_t fg_color, uint16_t bg_color);lib_ili9341.c: 381: {;lib_ili9341.c: 382:     uint16_t 
      +                          lIndex, k;;lib_ili9341.c: 384:     while(*pS)
 15658  00472A  EF14  F024         	goto	l6774
 15659  00472E                     l6760:
 15660                           
 15661                           ;lib_ili9341.c: 385:     {;lib_ili9341.c: 386:         lIndex = 0;
 15662  00472E  0E00               	movlw	0
 15663  004730  6E34               	movwf	(lcd_draw_string@lIndex+1)^0,c
 15664  004732  0E00               	movlw	0
 15665  004734  6E33               	movwf	lcd_draw_string@lIndex^0,c
 15666                           
 15667                           ;lib_ili9341.c: 387:         for(k=0; k<(*pS - ' '); k++)
 15668  004736  0E00               	movlw	0
 15669  004738  6E32               	movwf	(lcd_draw_string@k+1)^0,c
 15670  00473A  0E00               	movlw	0
 15671  00473C  6E31               	movwf	lcd_draw_string@k^0,c
 15672  00473E  EFC0  F023         	goto	l6766
 15673  004742                     l6762:
 15674                           
 15675                           ;lib_ili9341.c: 388:         {;lib_ili9341.c: 389:             lIndex += ((font[lIndex])
      +                           << 1) + 1;
 15676  004742  90D8               	bcf	status,0,c
 15677  004744  3433               	rlcf	lcd_draw_string@lIndex^0,w,c
 15678  004746  6EF6               	movwf	tblptrl,c
 15679  004748  3434               	rlcf	(lcd_draw_string@lIndex+1)^0,w,c
 15680  00474A  6EF7               	movwf	tblptrh,c
 15681  00474C  0ECD               	movlw	low _font
 15682  00474E  26F6               	addwf	tblptrl,f,c
 15683  004750  0EF1               	movlw	high _font
 15684  004752  22F7               	addwfc	tblptrh,f,c
 15685  004754                     	if	1	;There are 3 active tblptr bytes
 15686  004754  6AF8               	clrf	tblptru,c
 15687  004756  0E00               	movlw	low (__mediumconst shr (0+16))
 15688  004758  22F8               	addwfc	tblptru,f,c
 15689  00475A                     	endif
 15690  00475A  0009               	tblrd		*+
 15691  00475C  CFF5 F02D          	movff	tablat,??_lcd_draw_string
 15692  004760  0009               	tblrd		*+
 15693  004762  CFF5 F02E          	movff	tablat,??_lcd_draw_string+1
 15694  004766  90D8               	bcf	status,0,c
 15695  004768  362D               	rlcf	??_lcd_draw_string^0,f,c
 15696  00476A  362E               	rlcf	(??_lcd_draw_string+1)^0,f,c
 15697  00476C  0E01               	movlw	1
 15698  00476E  262D               	addwf	??_lcd_draw_string^0,f,c
 15699  004770  0E00               	movlw	0
 15700  004772  222E               	addwfc	(??_lcd_draw_string+1)^0,f,c
 15701  004774  502D               	movf	??_lcd_draw_string^0,w,c
 15702  004776  2633               	addwf	lcd_draw_string@lIndex^0,f,c
 15703  004778  502E               	movf	(??_lcd_draw_string+1)^0,w,c
 15704  00477A  2234               	addwfc	(lcd_draw_string@lIndex+1)^0,f,c
 15705  00477C                     
 15706                           ;lib_ili9341.c: 390:         }
 15707  00477C  4A31               	infsnz	lcd_draw_string@k^0,f,c
 15708  00477E  2A32               	incf	(lcd_draw_string@k+1)^0,f,c
 15709  004780                     l6766:
 15710  004780  0EE0               	movlw	224
 15711  004782  6E2D               	movwf	??_lcd_draw_string^0,c
 15712  004784  0EFF               	movlw	255
 15713  004786  6E2E               	movwf	(??_lcd_draw_string+1)^0,c
 15714  004788  C027  FFF6         	movff	lcd_draw_string@pS,tblptrl
 15715  00478C  C028  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 15716  004790  0E00               	movlw	low (__mediumconst shr (0+16))
 15717  004792  6EF8               	movwf	tblptru,c
 15718  004794  0E0E               	movlw	(high __ramtop+-1)
 15719  004796  64F7               	cpfsgt	tblptrh,c
 15720  004798  D003               	bra	u8077
 15721  00479A  0008               	tblrd		*
 15722  00479C  50F5               	movf	tablat,w,c
 15723  00479E  D005               	bra	u8070
 15724  0047A0                     u8077:
 15725  0047A0  CFF6 FFE1          	movff	tblptrl,fsr1l
 15726  0047A4  CFF7 FFE2          	movff	tblptrh,fsr1h
 15727  0047A8  50E7               	movf	indf1,w,c
 15728  0047AA                     u8070:
 15729  0047AA  6E2F               	movwf	(??_lcd_draw_string+2)^0,c
 15730  0047AC  6A30               	clrf	(??_lcd_draw_string+3)^0,c
 15731  0047AE  502D               	movf	??_lcd_draw_string^0,w,c
 15732  0047B0  262F               	addwf	(??_lcd_draw_string+2)^0,f,c
 15733  0047B2  502E               	movf	(??_lcd_draw_string+1)^0,w,c
 15734  0047B4  2230               	addwfc	(??_lcd_draw_string+3)^0,f,c
 15735  0047B6  502F               	movf	(??_lcd_draw_string+2)^0,w,c
 15736  0047B8  5C31               	subwf	lcd_draw_string@k^0,w,c
 15737  0047BA  5030               	movf	(??_lcd_draw_string+3)^0,w,c
 15738  0047BC  5832               	subwfb	(lcd_draw_string@k+1)^0,w,c
 15739  0047BE  A0D8               	btfss	status,0,c
 15740  0047C0  EFE4  F023         	goto	u8081
 15741  0047C4  EFE6  F023         	goto	u8080
 15742  0047C8                     u8081:
 15743  0047C8  EFA1  F023         	goto	l6762
 15744  0047CC                     u8080:
 15745  0047CC                     
 15746                           ;lib_ili9341.c: 392:         lcd_draw_char(x, y, lIndex, fg_color, bg_color);
 15747  0047CC  C023  F00D         	movff	lcd_draw_string@x,lcd_draw_char@x
 15748  0047D0  C024  F00E         	movff	lcd_draw_string@x+1,lcd_draw_char@x+1
 15749  0047D4  C025  F00F         	movff	lcd_draw_string@y,lcd_draw_char@y
 15750  0047D8  C026  F010         	movff	lcd_draw_string@y+1,lcd_draw_char@y+1
 15751  0047DC  C033  F011         	movff	lcd_draw_string@lIndex,lcd_draw_char@fIndex
 15752  0047E0  C034  F012         	movff	lcd_draw_string@lIndex+1,lcd_draw_char@fIndex+1
 15753  0047E4  C029  F013         	movff	lcd_draw_string@fg_color,lcd_draw_char@fg_color
 15754  0047E8  C02A  F014         	movff	lcd_draw_string@fg_color+1,lcd_draw_char@fg_color+1
 15755  0047EC  C02B  F015         	movff	lcd_draw_string@bg_color,lcd_draw_char@bg_color
 15756  0047F0  C02C  F016         	movff	lcd_draw_string@bg_color+1,lcd_draw_char@bg_color+1
 15757  0047F4  EC82  F021         	call	_lcd_draw_char	;wreg free
 15758  0047F8                     
 15759                           ;lib_ili9341.c: 394:         x += font[lIndex];
 15760  0047F8  90D8               	bcf	status,0,c
 15761  0047FA  3433               	rlcf	lcd_draw_string@lIndex^0,w,c
 15762  0047FC  6EF6               	movwf	tblptrl,c
 15763  0047FE  3434               	rlcf	(lcd_draw_string@lIndex+1)^0,w,c
 15764  004800  6EF7               	movwf	tblptrh,c
 15765  004802  0ECD               	movlw	low _font
 15766  004804  26F6               	addwf	tblptrl,f,c
 15767  004806  0EF1               	movlw	high _font
 15768  004808  22F7               	addwfc	tblptrh,f,c
 15769  00480A                     	if	1	;There are 3 active tblptr bytes
 15770  00480A  6AF8               	clrf	tblptru,c
 15771  00480C  0E00               	movlw	low (__mediumconst shr (0+16))
 15772  00480E  22F8               	addwfc	tblptru,f,c
 15773  004810                     	endif
 15774  004810  0009               	tblrd		*+
 15775  004812  CFF5 F02D          	movff	tablat,??_lcd_draw_string
 15776  004816  0009               	tblrd		*+
 15777  004818  CFF5 F02E          	movff	tablat,??_lcd_draw_string+1
 15778  00481C  502D               	movf	??_lcd_draw_string^0,w,c
 15779  00481E  2623               	addwf	lcd_draw_string@x^0,f,c
 15780  004820  502E               	movf	(??_lcd_draw_string+1)^0,w,c
 15781  004822  2224               	addwfc	(lcd_draw_string@x+1)^0,f,c
 15782  004824                     
 15783                           ;lib_ili9341.c: 396:         pS++;
 15784  004824  4A27               	infsnz	lcd_draw_string@pS^0,f,c
 15785  004826  2A28               	incf	(lcd_draw_string@pS+1)^0,f,c
 15786  004828                     l6774:
 15787                           
 15788                           ;lib_ili9341.c: 384:     while(*pS)
 15789  004828  C027  FFF6         	movff	lcd_draw_string@pS,tblptrl
 15790  00482C  C028  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 15791  004830  0E00               	movlw	low (__mediumconst shr (0+16))
 15792  004832  6EF8               	movwf	tblptru,c
 15793  004834  0E0E               	movlw	(high __ramtop+-1)
 15794  004836  64F7               	cpfsgt	tblptrh,c
 15795  004838  D003               	bra	u8097
 15796  00483A  0008               	tblrd		*
 15797  00483C  50F5               	movf	tablat,w,c
 15798  00483E  D005               	bra	u8090
 15799  004840                     u8097:
 15800  004840  CFF6 FFE1          	movff	tblptrl,fsr1l
 15801  004844  CFF7 FFE2          	movff	tblptrh,fsr1h
 15802  004848  50E7               	movf	indf1,w,c
 15803  00484A                     u8090:
 15804  00484A  0900               	iorlw	0
 15805  00484C  A4D8               	btfss	status,2,c
 15806  00484E  EF2B  F024         	goto	u8101
 15807  004852  EF2D  F024         	goto	u8100
 15808  004856                     u8101:
 15809  004856  EF97  F023         	goto	l6760
 15810  00485A                     u8100:
 15811  00485A  0012               	return		;funcret
 15812  00485C                     __end_of_lcd_draw_string:
 15813                           	opt callstack 0
 15814                           
 15815 ;; *************** function _lcd_draw_char *****************
 15816 ;; Defined at:
 15817 ;;		line 355 in file "lib_ili9341.c"
 15818 ;; Parameters:    Size  Location     Type
 15819 ;;  x               2   12[COMRAM] unsigned short 
 15820 ;;  y               2   14[COMRAM] unsigned short 
 15821 ;;  fIndex          2   16[COMRAM] unsigned short 
 15822 ;;  fg_color        2   18[COMRAM] unsigned short 
 15823 ;;  bg_color        2   20[COMRAM] unsigned short 
 15824 ;; Auto vars:     Size  Location     Type
 15825 ;;  i               1   33[COMRAM] unsigned char 
 15826 ;;  k               1   32[COMRAM] unsigned char 
 15827 ;;  j               1   31[COMRAM] unsigned char 
 15828 ;; Return value:  Size  Location     Type
 15829 ;;                  1    wreg      void 
 15830 ;; Registers used:
 15831 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15832 ;; Tracked objects:
 15833 ;;		On entry : 0/0
 15834 ;;		On exit  : 0/0
 15835 ;;		Unchanged: 0/0
 15836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15837 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15838 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15839 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15840 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15841 ;;Total ram usage:       22 bytes
 15842 ;; Hardware stack levels used:    1
 15843 ;; Hardware stack levels required when called:    8
 15844 ;; This function calls:
 15845 ;;		_lcd_draw_pixel
 15846 ;;		_lcd_set_cursor
 15847 ;; This function is called by:
 15848 ;;		_lcd_draw_string
 15849 ;; This function uses a non-reentrant model
 15850 ;;
 15851                           
 15852                           	psect	text49
 15853  004304                     __ptext49:
 15854                           	opt callstack 0
 15855  004304                     _lcd_draw_char:
 15856                           	opt callstack 21
 15857  004304                     
 15858                           ;lib_ili9341.c: 355: void lcd_draw_char (uint16_t x, uint16_t y, uint16_t fIndex, uint16
      +                          _t fg_color, uint16_t bg_color);lib_ili9341.c: 356: {;lib_ili9341.c: 357:     uint8_t j,
      +                           k, i;;lib_ili9341.c: 359:     for(j=0; j < font[fIndex]; j++)
 15859  004304  0E00               	movlw	0
 15860  004306  6E20               	movwf	lcd_draw_char@j^0,c
 15861  004308  EF22  F022         	goto	l6488
 15862  00430C                     l6458:
 15863                           
 15864                           ;lib_ili9341.c: 360:     {;lib_ili9341.c: 361:         lcd_set_cursor(x + font[fIndex] -
      +                           j, y);
 15865  00430C  90D8               	bcf	status,0,c
 15866  00430E  3411               	rlcf	lcd_draw_char@fIndex^0,w,c
 15867  004310  6EF6               	movwf	tblptrl,c
 15868  004312  3412               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 15869  004314  6EF7               	movwf	tblptrh,c
 15870  004316  0ECD               	movlw	low _font
 15871  004318  26F6               	addwf	tblptrl,f,c
 15872  00431A  0EF1               	movlw	high _font
 15873  00431C  22F7               	addwfc	tblptrh,f,c
 15874  00431E                     	if	1	;There are 3 active tblptr bytes
 15875  00431E  6AF8               	clrf	tblptru,c
 15876  004320  0E00               	movlw	low (__mediumconst shr (0+16))
 15877  004322  22F8               	addwfc	tblptru,f,c
 15878  004324                     	endif
 15879  004324  0009               	tblrd		*+
 15880  004326  CFF5 F017          	movff	tablat,??_lcd_draw_char
 15881  00432A  0009               	tblrd		*+
 15882  00432C  CFF5 F018          	movff	tablat,??_lcd_draw_char+1
 15883  004330  5020               	movf	lcd_draw_char@j^0,w,c
 15884  004332  5E17               	subwf	??_lcd_draw_char^0,f,c
 15885  004334  0E00               	movlw	0
 15886  004336  5A18               	subwfb	(??_lcd_draw_char+1)^0,f,c
 15887  004338  500D               	movf	lcd_draw_char@x^0,w,c
 15888  00433A  2417               	addwf	??_lcd_draw_char^0,w,c
 15889  00433C  6E09               	movwf	lcd_set_cursor@x^0,c
 15890  00433E  500E               	movf	(lcd_draw_char@x+1)^0,w,c
 15891  004340  2018               	addwfc	(??_lcd_draw_char+1)^0,w,c
 15892  004342  6E0A               	movwf	(lcd_set_cursor@x+1)^0,c
 15893  004344  C00F  F00B         	movff	lcd_draw_char@y,lcd_set_cursor@y
 15894  004348  C010  F00C         	movff	lcd_draw_char@y+1,lcd_set_cursor@y+1
 15895  00434C  EC36  F02C         	call	_lcd_set_cursor	;wreg free
 15896  004350                     
 15897                           ;lib_ili9341.c: 363:         for(k=0; k<2; k++)
 15898  004350  0E00               	movlw	0
 15899  004352  6E21               	movwf	lcd_draw_char@k^0,c
 15900  004354                     l6466:
 15901                           
 15902                           ;lib_ili9341.c: 364:         {;lib_ili9341.c: 365:             for(i=0; i<8; i++)
 15903  004354  0E00               	movlw	0
 15904  004356  6E22               	movwf	lcd_draw_char@i^0,c
 15905  004358                     l6472:
 15906                           
 15907                           ;lib_ili9341.c: 366:             {;lib_ili9341.c: 367:                 if( font[ (fIndex
      +                           + ((font[fIndex]) << 1)) - (j<<1) - k ] & (0x80 >> i) )
 15908  004358  5020               	movf	lcd_draw_char@j^0,w,c
 15909  00435A  6E17               	movwf	??_lcd_draw_char^0,c
 15910  00435C  6A18               	clrf	(??_lcd_draw_char+1)^0,c
 15911  00435E  90D8               	bcf	status,0,c
 15912  004360  3617               	rlcf	??_lcd_draw_char^0,f,c
 15913  004362  3618               	rlcf	(??_lcd_draw_char+1)^0,f,c
 15914  004364  90D8               	bcf	status,0,c
 15915  004366  3411               	rlcf	lcd_draw_char@fIndex^0,w,c
 15916  004368  6EF6               	movwf	tblptrl,c
 15917  00436A  3412               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 15918  00436C  6EF7               	movwf	tblptrh,c
 15919  00436E  0ECD               	movlw	low _font
 15920  004370  26F6               	addwf	tblptrl,f,c
 15921  004372  0EF1               	movlw	high _font
 15922  004374  22F7               	addwfc	tblptrh,f,c
 15923  004376                     	if	1	;There are 3 active tblptr bytes
 15924  004376  6AF8               	clrf	tblptru,c
 15925  004378  0E00               	movlw	low (__mediumconst shr (0+16))
 15926  00437A  22F8               	addwfc	tblptru,f,c
 15927  00437C                     	endif
 15928  00437C  0009               	tblrd		*+
 15929  00437E  CFF5 F019          	movff	tablat,??_lcd_draw_char+2
 15930  004382  0009               	tblrd		*+
 15931  004384  CFF5 F01A          	movff	tablat,??_lcd_draw_char+3
 15932  004388  90D8               	bcf	status,0,c
 15933  00438A  3619               	rlcf	(??_lcd_draw_char+2)^0,f,c
 15934  00438C  361A               	rlcf	(??_lcd_draw_char+3)^0,f,c
 15935  00438E  5017               	movf	??_lcd_draw_char^0,w,c
 15936  004390  5E19               	subwf	(??_lcd_draw_char+2)^0,f,c
 15937  004392  5018               	movf	(??_lcd_draw_char+1)^0,w,c
 15938  004394  5A1A               	subwfb	(??_lcd_draw_char+3)^0,f,c
 15939  004396  5021               	movf	lcd_draw_char@k^0,w,c
 15940  004398  5E19               	subwf	(??_lcd_draw_char+2)^0,f,c
 15941  00439A  0E00               	movlw	0
 15942  00439C  5A1A               	subwfb	(??_lcd_draw_char+3)^0,f,c
 15943  00439E  5011               	movf	lcd_draw_char@fIndex^0,w,c
 15944  0043A0  2619               	addwf	(??_lcd_draw_char+2)^0,f,c
 15945  0043A2  5012               	movf	(lcd_draw_char@fIndex+1)^0,w,c
 15946  0043A4  221A               	addwfc	(??_lcd_draw_char+3)^0,f,c
 15947  0043A6  90D8               	bcf	status,0,c
 15948  0043A8  3619               	rlcf	(??_lcd_draw_char+2)^0,f,c
 15949  0043AA  361A               	rlcf	(??_lcd_draw_char+3)^0,f,c
 15950  0043AC  0ECD               	movlw	low _font
 15951  0043AE  2419               	addwf	(??_lcd_draw_char+2)^0,w,c
 15952  0043B0  6EF6               	movwf	tblptrl,c
 15953  0043B2  0EF1               	movlw	high _font
 15954  0043B4  201A               	addwfc	(??_lcd_draw_char+3)^0,w,c
 15955  0043B6  6EF7               	movwf	tblptrh,c
 15956  0043B8                     	if	1	;There are 3 active tblptr bytes
 15957  0043B8  6AF8               	clrf	tblptru,c
 15958  0043BA  0E00               	movlw	low (__mediumconst shr (0+16))
 15959  0043BC  22F8               	addwfc	tblptru,f,c
 15960  0043BE                     	endif
 15961  0043BE  0009               	tblrd		*+
 15962  0043C0  CFF5 F01B          	movff	tablat,??_lcd_draw_char+4
 15963  0043C4  0009               	tblrd		*+
 15964  0043C6  CFF5 F01C          	movff	tablat,??_lcd_draw_char+5
 15965  0043CA  C022  F01D         	movff	lcd_draw_char@i,??_lcd_draw_char+6
 15966  0043CE  0E80               	movlw	128
 15967  0043D0  6E1E               	movwf	(??_lcd_draw_char+7)^0,c
 15968  0043D2  0E00               	movlw	0
 15969  0043D4  6E1F               	movwf	(??_lcd_draw_char+8)^0,c
 15970  0043D6  2A1D               	incf	(??_lcd_draw_char+6)^0,f,c
 15971  0043D8  EFF1  F021         	goto	u7934
 15972  0043DC                     u7935:
 15973  0043DC  341F               	rlcf	(??_lcd_draw_char+8)^0,w,c
 15974  0043DE  321F               	rrcf	(??_lcd_draw_char+8)^0,f,c
 15975  0043E0  321E               	rrcf	(??_lcd_draw_char+7)^0,f,c
 15976  0043E2                     u7934:
 15977  0043E2  2E1D               	decfsz	(??_lcd_draw_char+6)^0,f,c
 15978  0043E4  EFEE  F021         	goto	u7935
 15979  0043E8  501B               	movf	(??_lcd_draw_char+4)^0,w,c
 15980  0043EA  161E               	andwf	(??_lcd_draw_char+7)^0,f,c
 15981  0043EC  501C               	movf	(??_lcd_draw_char+5)^0,w,c
 15982  0043EE  161F               	andwf	(??_lcd_draw_char+8)^0,f,c
 15983  0043F0  501E               	movf	(??_lcd_draw_char+7)^0,w,c
 15984  0043F2  101F               	iorwf	(??_lcd_draw_char+8)^0,w,c
 15985  0043F4  B4D8               	btfsc	status,2,c
 15986  0043F6  EFFF  F021         	goto	u7941
 15987  0043FA  EF01  F022         	goto	u7940
 15988  0043FE                     u7941:
 15989  0043FE  EF09  F022         	goto	l6476
 15990  004402                     u7940:
 15991  004402                     
 15992                           ;lib_ili9341.c: 368:                 {;lib_ili9341.c: 369:                     lcd_draw_
      +                          pixel(fg_color);
 15993  004402  C013  F007         	movff	lcd_draw_char@fg_color,lcd_draw_pixel@color
 15994  004406  C014  F008         	movff	lcd_draw_char@fg_color+1,lcd_draw_pixel@color+1
 15995  00440A  ECDF  F02D         	call	_lcd_draw_pixel	;wreg free
 15996                           
 15997                           ;lib_ili9341.c: 370:                 }
 15998  00440E  EF0F  F022         	goto	l6478
 15999  004412                     l6476:
 16000                           
 16001                           ;lib_ili9341.c: 372:                 {;lib_ili9341.c: 373:                     lcd_draw_
      +                          pixel(bg_color);
 16002  004412  C015  F007         	movff	lcd_draw_char@bg_color,lcd_draw_pixel@color
 16003  004416  C016  F008         	movff	lcd_draw_char@bg_color+1,lcd_draw_pixel@color+1
 16004  00441A  ECDF  F02D         	call	_lcd_draw_pixel	;wreg free
 16005  00441E                     l6478:
 16006                           
 16007                           ;lib_ili9341.c: 375:             }
 16008  00441E  2A22               	incf	lcd_draw_char@i^0,f,c
 16009  004420  0E07               	movlw	7
 16010  004422  6422               	cpfsgt	lcd_draw_char@i^0,c
 16011  004424  EF16  F022         	goto	u7951
 16012  004428  EF18  F022         	goto	u7950
 16013  00442C                     u7951:
 16014  00442C  EFAC  F021         	goto	l6472
 16015  004430                     u7950:
 16016  004430                     
 16017                           ;lib_ili9341.c: 376:         }
 16018  004430  2A21               	incf	lcd_draw_char@k^0,f,c
 16019  004432  0E01               	movlw	1
 16020  004434  6421               	cpfsgt	lcd_draw_char@k^0,c
 16021  004436  EF1F  F022         	goto	u7961
 16022  00443A  EF21  F022         	goto	u7960
 16023  00443E                     u7961:
 16024  00443E  EFAA  F021         	goto	l6466
 16025  004442                     u7960:
 16026  004442                     
 16027                           ;lib_ili9341.c: 377:     }
 16028  004442  2A20               	incf	lcd_draw_char@j^0,f,c
 16029  004444                     l6488:
 16030  004444  90D8               	bcf	status,0,c
 16031  004446  3411               	rlcf	lcd_draw_char@fIndex^0,w,c
 16032  004448  6EF6               	movwf	tblptrl,c
 16033  00444A  3412               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 16034  00444C  6EF7               	movwf	tblptrh,c
 16035  00444E  0ECD               	movlw	low _font
 16036  004450  26F6               	addwf	tblptrl,f,c
 16037  004452  0EF1               	movlw	high _font
 16038  004454  22F7               	addwfc	tblptrh,f,c
 16039  004456                     	if	1	;There are 3 active tblptr bytes
 16040  004456  6AF8               	clrf	tblptru,c
 16041  004458  0E00               	movlw	low (__mediumconst shr (0+16))
 16042  00445A  22F8               	addwfc	tblptru,f,c
 16043  00445C                     	endif
 16044  00445C  5020               	movf	lcd_draw_char@j^0,w,c
 16045  00445E  6E17               	movwf	??_lcd_draw_char^0,c
 16046  004460  6A18               	clrf	(??_lcd_draw_char+1)^0,c
 16047  004462  0009               	tblrd		*+
 16048  004464  50F5               	movf	tablat,w,c
 16049  004466  5C17               	subwf	??_lcd_draw_char^0,w,c
 16050  004468  0009               	tblrd		*+
 16051  00446A  50F5               	movf	tablat,w,c
 16052  00446C  5818               	subwfb	(??_lcd_draw_char+1)^0,w,c
 16053  00446E  A0D8               	btfss	status,0,c
 16054  004470  EF3C  F022         	goto	u7971
 16055  004474  EF3E  F022         	goto	u7970
 16056  004478                     u7971:
 16057  004478  EF86  F021         	goto	l6458
 16058  00447C                     u7970:
 16059  00447C  0012               	return		;funcret
 16060  00447E                     __end_of_lcd_draw_char:
 16061                           	opt callstack 0
 16062                           
 16063 ;; *************** function _lcd_set_cursor *****************
 16064 ;; Defined at:
 16065 ;;		line 144 in file "lib_ili9341.c"
 16066 ;; Parameters:    Size  Location     Type
 16067 ;;  x               2    8[COMRAM] unsigned short 
 16068 ;;  y               2   10[COMRAM] unsigned short 
 16069 ;; Auto vars:     Size  Location     Type
 16070 ;;		None
 16071 ;; Return value:  Size  Location     Type
 16072 ;;                  1    wreg      unsigned char 
 16073 ;; Registers used:
 16074 ;;		wreg, status,2, status,0, cstack
 16075 ;; Tracked objects:
 16076 ;;		On entry : 0/0
 16077 ;;		On exit  : 0/0
 16078 ;;		Unchanged: 0/0
 16079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16080 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16083 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16084 ;;Total ram usage:        4 bytes
 16085 ;; Hardware stack levels used:    1
 16086 ;; Hardware stack levels required when called:    7
 16087 ;; This function calls:
 16088 ;;		_lcd_set_cursor_x
 16089 ;;		_lcd_set_cursor_y
 16090 ;; This function is called by:
 16091 ;;		_lcd_fill
 16092 ;;		_lcd_draw_char
 16093 ;;		_lcd_draw_pixel_at
 16094 ;;		_lcd_fill_rect
 16095 ;; This function uses a non-reentrant model
 16096 ;;
 16097                           
 16098                           	psect	text50
 16099  00586C                     __ptext50:
 16100                           	opt callstack 0
 16101  00586C                     _lcd_set_cursor:
 16102                           	opt callstack 21
 16103  00586C                     
 16104                           ;lib_ili9341.c: 144: uint8_t lcd_set_cursor(uint16_t x, uint16_t y);lib_ili9341.c: 145: 
      +                          {;lib_ili9341.c: 146:     if( lcd_set_cursor_x(x) || lcd_set_cursor_y(y) )
 16105  00586C  C009  F007         	movff	lcd_set_cursor@x,lcd_set_cursor_x@x
 16106  005870  C00A  F008         	movff	lcd_set_cursor@x+1,lcd_set_cursor_x@x+1
 16107  005874  EC87  F02B         	call	_lcd_set_cursor_x	;wreg free
 16108  005878  0900               	iorlw	0
 16109  00587A  A4D8               	btfss	status,2,c
 16110  00587C  EF42  F02C         	goto	u7831
 16111  005880  EF44  F02C         	goto	u7830
 16112  005884                     u7831:
 16113  005884  EF52  F02C         	goto	l6372
 16114  005888                     u7830:
 16115  005888  C00B  F007         	movff	lcd_set_cursor@y,lcd_set_cursor_y@y
 16116  00588C  C00C  F008         	movff	lcd_set_cursor@y+1,lcd_set_cursor_y@y+1
 16117  005890  EC63  F02B         	call	_lcd_set_cursor_y	;wreg free
 16118  005894  0900               	iorlw	0
 16119  005896  B4D8               	btfsc	status,2,c
 16120  005898  EF50  F02C         	goto	u7841
 16121  00589C  EF52  F02C         	goto	u7840
 16122  0058A0                     u7841:
 16123  0058A0  EF55  F02C         	goto	l6376
 16124  0058A4                     u7840:
 16125  0058A4                     l6372:
 16126                           
 16127                           ;lib_ili9341.c: 147:     {;lib_ili9341.c: 148:         return 1;
 16128  0058A4  0E01               	movlw	1
 16129  0058A6  EF56  F02C         	goto	l339
 16130  0058AA                     l6376:
 16131                           
 16132                           ;lib_ili9341.c: 151:     return 0;
 16133  0058AA  0E00               	movlw	0
 16134  0058AC                     l339:
 16135  0058AC  0012               	return		;funcret
 16136  0058AE                     __end_of_lcd_set_cursor:
 16137                           	opt callstack 0
 16138                           
 16139 ;; *************** function _lcd_set_cursor_y *****************
 16140 ;; Defined at:
 16141 ;;		line 170 in file "lib_ili9341.c"
 16142 ;; Parameters:    Size  Location     Type
 16143 ;;  y               2    6[COMRAM] unsigned short 
 16144 ;; Auto vars:     Size  Location     Type
 16145 ;;		None
 16146 ;; Return value:  Size  Location     Type
 16147 ;;                  1    wreg      unsigned char 
 16148 ;; Registers used:
 16149 ;;		wreg, status,2, status,0, cstack
 16150 ;; Tracked objects:
 16151 ;;		On entry : 0/0
 16152 ;;		On exit  : 0/0
 16153 ;;		Unchanged: 0/0
 16154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16155 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16158 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16159 ;;Total ram usage:        2 bytes
 16160 ;; Hardware stack levels used:    1
 16161 ;; Hardware stack levels required when called:    6
 16162 ;; This function calls:
 16163 ;;		_lcd_send
 16164 ;; This function is called by:
 16165 ;;		_lcd_set_cursor
 16166 ;; This function uses a non-reentrant model
 16167 ;;
 16168                           
 16169                           	psect	text51
 16170  0056C6                     __ptext51:
 16171                           	opt callstack 0
 16172  0056C6                     _lcd_set_cursor_y:
 16173                           	opt callstack 21
 16174  0056C6                     
 16175                           ;lib_ili9341.c: 170: uint8_t lcd_set_cursor_y(uint16_t y);lib_ili9341.c: 171: {;lib_ili9
      +                          341.c: 172:     if( y >= 240 )
 16176  0056C6  5008               	movf	(lcd_set_cursor_y@y+1)^0,w,c
 16177  0056C8  E109               	bnz	u7270
 16178  0056CA  0EF0               	movlw	240
 16179  0056CC  5C07               	subwf	lcd_set_cursor_y@y^0,w,c
 16180  0056CE  A0D8               	btfss	status,0,c
 16181  0056D0  EF6C  F02B         	goto	u7271
 16182  0056D4  EF6E  F02B         	goto	u7270
 16183  0056D8                     u7271:
 16184  0056D8  EF71  F02B         	goto	l5982
 16185  0056DC                     u7270:
 16186  0056DC                     
 16187                           ;lib_ili9341.c: 173:     {;lib_ili9341.c: 174:         return 1;
 16188  0056DC  0E01               	movlw	1
 16189  0056DE  EF86  F02B         	goto	l347
 16190  0056E2                     l5982:
 16191                           
 16192                           ;lib_ili9341.c: 177:     lcd_send(0, 0x2A);
 16193  0056E2  0E2A               	movlw	42
 16194  0056E4  6E05               	movwf	lcd_send@value^0,c
 16195  0056E6  0E00               	movlw	0
 16196  0056E8  ECC7  F02D         	call	_lcd_send
 16197                           
 16198                           ;lib_ili9341.c: 178:     lcd_send(1, y >> 8);
 16199  0056EC  5008               	movf	(lcd_set_cursor_y@y+1)^0,w,c
 16200  0056EE  6E05               	movwf	lcd_send@value^0,c
 16201  0056F0  0E01               	movlw	1
 16202  0056F2  ECC7  F02D         	call	_lcd_send
 16203                           
 16204                           ;lib_ili9341.c: 179:     lcd_send(1, y & 0xFF);
 16205  0056F6  C007  F005         	movff	lcd_set_cursor_y@y,lcd_send@value
 16206  0056FA  0E01               	movlw	1
 16207  0056FC  ECC7  F02D         	call	_lcd_send
 16208                           
 16209                           ;lib_ili9341.c: 180:     lcd_send(0, 0x2c);
 16210  005700  0E2C               	movlw	44
 16211  005702  6E05               	movwf	lcd_send@value^0,c
 16212  005704  0E00               	movlw	0
 16213  005706  ECC7  F02D         	call	_lcd_send
 16214  00570A                     
 16215                           ;lib_ili9341.c: 182:     return 0;
 16216  00570A  0E00               	movlw	0
 16217  00570C                     l347:
 16218  00570C  0012               	return		;funcret
 16219  00570E                     __end_of_lcd_set_cursor_y:
 16220                           	opt callstack 0
 16221                           
 16222 ;; *************** function _lcd_set_cursor_x *****************
 16223 ;; Defined at:
 16224 ;;		line 155 in file "lib_ili9341.c"
 16225 ;; Parameters:    Size  Location     Type
 16226 ;;  x               2    6[COMRAM] unsigned short 
 16227 ;; Auto vars:     Size  Location     Type
 16228 ;;		None
 16229 ;; Return value:  Size  Location     Type
 16230 ;;                  1    wreg      unsigned char 
 16231 ;; Registers used:
 16232 ;;		wreg, status,2, status,0, cstack
 16233 ;; Tracked objects:
 16234 ;;		On entry : 0/0
 16235 ;;		On exit  : 0/0
 16236 ;;		Unchanged: 0/0
 16237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16238 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16241 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16242 ;;Total ram usage:        2 bytes
 16243 ;; Hardware stack levels used:    1
 16244 ;; Hardware stack levels required when called:    6
 16245 ;; This function calls:
 16246 ;;		_lcd_send
 16247 ;; This function is called by:
 16248 ;;		_lcd_set_cursor
 16249 ;; This function uses a non-reentrant model
 16250 ;;
 16251                           
 16252                           	psect	text52
 16253  00570E                     __ptext52:
 16254                           	opt callstack 0
 16255  00570E                     _lcd_set_cursor_x:
 16256                           	opt callstack 21
 16257  00570E                     
 16258                           ;lib_ili9341.c: 155: uint8_t lcd_set_cursor_x(uint16_t x);lib_ili9341.c: 156: {;lib_ili9
      +                          341.c: 157:     if( x >= 320 )
 16259  00570E  0E40               	movlw	64
 16260  005710  5C07               	subwf	lcd_set_cursor_x@x^0,w,c
 16261  005712  0E01               	movlw	1
 16262  005714  5808               	subwfb	(lcd_set_cursor_x@x+1)^0,w,c
 16263  005716  A0D8               	btfss	status,0,c
 16264  005718  EF90  F02B         	goto	u7261
 16265  00571C  EF92  F02B         	goto	u7260
 16266  005720                     u7261:
 16267  005720  EF95  F02B         	goto	l5970
 16268  005724                     u7260:
 16269  005724                     
 16270                           ;lib_ili9341.c: 158:     {;lib_ili9341.c: 159:         return 1;
 16271  005724  0E01               	movlw	1
 16272  005726  EFAA  F02B         	goto	l343
 16273  00572A                     l5970:
 16274                           
 16275                           ;lib_ili9341.c: 162:     lcd_send(0, 0x2B);
 16276  00572A  0E2B               	movlw	43
 16277  00572C  6E05               	movwf	lcd_send@value^0,c
 16278  00572E  0E00               	movlw	0
 16279  005730  ECC7  F02D         	call	_lcd_send
 16280                           
 16281                           ;lib_ili9341.c: 163:     lcd_send(1, x >> 8);
 16282  005734  5008               	movf	(lcd_set_cursor_x@x+1)^0,w,c
 16283  005736  6E05               	movwf	lcd_send@value^0,c
 16284  005738  0E01               	movlw	1
 16285  00573A  ECC7  F02D         	call	_lcd_send
 16286                           
 16287                           ;lib_ili9341.c: 164:     lcd_send(1, x & 0xFF);
 16288  00573E  C007  F005         	movff	lcd_set_cursor_x@x,lcd_send@value
 16289  005742  0E01               	movlw	1
 16290  005744  ECC7  F02D         	call	_lcd_send
 16291                           
 16292                           ;lib_ili9341.c: 165:     lcd_send(0, 0x2c);
 16293  005748  0E2C               	movlw	44
 16294  00574A  6E05               	movwf	lcd_send@value^0,c
 16295  00574C  0E00               	movlw	0
 16296  00574E  ECC7  F02D         	call	_lcd_send
 16297  005752                     
 16298                           ;lib_ili9341.c: 167:     return 0;
 16299  005752  0E00               	movlw	0
 16300  005754                     l343:
 16301  005754  0012               	return		;funcret
 16302  005756                     __end_of_lcd_set_cursor_x:
 16303                           	opt callstack 0
 16304                           
 16305 ;; *************** function _lcd_draw_pixel *****************
 16306 ;; Defined at:
 16307 ;;		line 185 in file "lib_ili9341.c"
 16308 ;; Parameters:    Size  Location     Type
 16309 ;;  color           2    6[COMRAM] unsigned short 
 16310 ;; Auto vars:     Size  Location     Type
 16311 ;;		None
 16312 ;; Return value:  Size  Location     Type
 16313 ;;                  1    wreg      unsigned char 
 16314 ;; Registers used:
 16315 ;;		wreg, status,2, cstack
 16316 ;; Tracked objects:
 16317 ;;		On entry : 0/0
 16318 ;;		On exit  : 0/0
 16319 ;;		Unchanged: 0/0
 16320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16321 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16324 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16325 ;;Total ram usage:        2 bytes
 16326 ;; Hardware stack levels used:    1
 16327 ;; Hardware stack levels required when called:    6
 16328 ;; This function calls:
 16329 ;;		_lcd_send
 16330 ;; This function is called by:
 16331 ;;		_lcd_fill
 16332 ;;		_lcd_draw_char
 16333 ;;		_lcd_draw_pixel_at
 16334 ;;		_lcd_fill_rect
 16335 ;; This function uses a non-reentrant model
 16336 ;;
 16337                           
 16338                           	psect	text53
 16339  005BBE                     __ptext53:
 16340                           	opt callstack 0
 16341  005BBE                     _lcd_draw_pixel:
 16342                           	opt callstack 22
 16343  005BBE                     
 16344                           ;lib_ili9341.c: 185: uint8_t lcd_draw_pixel(uint16_t color);lib_ili9341.c: 186: {;lib_il
      +                          i9341.c: 187:     lcd_send(1, color >> 8);
 16345  005BBE  5008               	movf	(lcd_draw_pixel@color+1)^0,w,c
 16346  005BC0  6E05               	movwf	lcd_send@value^0,c
 16347  005BC2  0E01               	movlw	1
 16348  005BC4  ECC7  F02D         	call	_lcd_send
 16349                           
 16350                           ;lib_ili9341.c: 188:     lcd_send(1, color & 0xFF);
 16351  005BC8  C007  F005         	movff	lcd_draw_pixel@color,lcd_send@value
 16352  005BCC  0E01               	movlw	1
 16353  005BCE  ECC7  F02D         	call	_lcd_send
 16354  005BD2  0012               	return		;funcret
 16355  005BD4                     __end_of_lcd_draw_pixel:
 16356                           	opt callstack 0
 16357                           
 16358 ;; *************** function _lcd_send *****************
 16359 ;; Defined at:
 16360 ;;		line 134 in file "lib_ili9341.c"
 16361 ;; Parameters:    Size  Location     Type
 16362 ;;  dc              1    wreg     _Bool 
 16363 ;;  value           1    4[COMRAM] unsigned char 
 16364 ;; Auto vars:     Size  Location     Type
 16365 ;;  dc              1    5[COMRAM] _Bool 
 16366 ;; Return value:  Size  Location     Type
 16367 ;;                  1    wreg      void 
 16368 ;; Registers used:
 16369 ;;		wreg, status,2, cstack
 16370 ;; Tracked objects:
 16371 ;;		On entry : 0/0
 16372 ;;		On exit  : 0/0
 16373 ;;		Unchanged: 0/0
 16374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16375 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16376 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16378 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16379 ;;Total ram usage:        2 bytes
 16380 ;; Hardware stack levels used:    1
 16381 ;; Hardware stack levels required when called:    5
 16382 ;; This function calls:
 16383 ;;		_SPI_ExchangeByte
 16384 ;; This function is called by:
 16385 ;;		_lcd_init
 16386 ;;		_lcd_set_cursor_x
 16387 ;;		_lcd_set_cursor_y
 16388 ;;		_lcd_draw_pixel
 16389 ;; This function uses a non-reentrant model
 16390 ;;
 16391                           
 16392                           	psect	text54
 16393  005B8E                     __ptext54:
 16394                           	opt callstack 0
 16395  005B8E                     _lcd_send:
 16396                           	opt callstack 24
 16397                           
 16398                           ;incstack = 0
 16399                           ;lcd_send@dc stored from wreg
 16400  005B8E  6E06               	movwf	lcd_send@dc^0,c
 16401  005B90                     
 16402                           ;lib_ili9341.c: 134: void lcd_send(_Bool dc, uint8_t value);lib_ili9341.c: 135: {;lib_il
      +                          i9341.c: 136:     LATEbits.LE0 = dc;
 16403  005B90  B006               	btfsc	lcd_send@dc^0,0,c
 16404  005B92  D002               	bra	u6005
 16405  005B94  908D               	bcf	141,0,c	;volatile
 16406  005B96  D001               	bra	u6006
 16407  005B98                     u6005:
 16408  005B98  808D               	bsf	141,0,c	;volatile
 16409  005B9A                     u6006:
 16410  005B9A                     
 16411                           ;lib_ili9341.c: 138:     LATEbits.LE1 = 0;
 16412  005B9A  928D               	bcf	141,1,c	;volatile
 16413  005B9C                     
 16414                           ;lib_ili9341.c: 140:     SPI_ExchangeByte(value);
 16415  005B9C  5005               	movf	lcd_send@value^0,w,c
 16416  005B9E  ECAD  F02D         	call	_SPI_ExchangeByte
 16417  005BA2                     
 16418                           ;lib_ili9341.c: 141:     LATEbits.LE1 = 1;
 16419  005BA2  828D               	bsf	141,1,c	;volatile
 16420  005BA4  0012               	return		;funcret
 16421  005BA6                     __end_of_lcd_send:
 16422                           	opt callstack 0
 16423                           
 16424 ;; *************** function _SPI_ExchangeByte *****************
 16425 ;; Defined at:
 16426 ;;		line 92 in file "mcc_generated_files/spi.c"
 16427 ;; Parameters:    Size  Location     Type
 16428 ;;  data            1    wreg     unsigned char 
 16429 ;; Auto vars:     Size  Location     Type
 16430 ;;  data            1    3[COMRAM] unsigned char 
 16431 ;; Return value:  Size  Location     Type
 16432 ;;                  1    wreg      unsigned char 
 16433 ;; Registers used:
 16434 ;;		wreg, status,2
 16435 ;; Tracked objects:
 16436 ;;		On entry : 0/0
 16437 ;;		On exit  : 0/0
 16438 ;;		Unchanged: 0/0
 16439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16441 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16443 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16444 ;;Total ram usage:        1 bytes
 16445 ;; Hardware stack levels used:    1
 16446 ;; Hardware stack levels required when called:    4
 16447 ;; This function calls:
 16448 ;;		Nothing
 16449 ;; This function is called by:
 16450 ;;		_lcd_send
 16451 ;;		_SPI_WriteBlock
 16452 ;;		_SPI_ReadBlock
 16453 ;; This function uses a non-reentrant model
 16454 ;;
 16455                           
 16456                           	psect	text55
 16457  005B5A                     __ptext55:
 16458                           	opt callstack 0
 16459  005B5A                     _SPI_ExchangeByte:
 16460                           	opt callstack 24
 16461                           
 16462                           ;incstack = 0
 16463                           ;SPI_ExchangeByte@data stored from wreg
 16464  005B5A  6E04               	movwf	SPI_ExchangeByte@data^0,c
 16465  005B5C                     
 16466                           ;mcc_generated_files/spi.c: 92: uint8_t SPI_ExchangeByte(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 93: {;mcc_generated_files/spi.c: 94:     SSPBUF = data;
 16467  005B5C  C004  FFC9         	movff	SPI_ExchangeByte@data,4041	;volatile
 16468  005B60                     l130:
 16469  005B60  A69E               	btfss	158,3,c	;volatile
 16470  005B62  EFB5  F02D         	goto	u4731
 16471  005B66  EFB7  F02D         	goto	u4730
 16472  005B6A                     u4731:
 16473  005B6A  EFB0  F02D         	goto	l130
 16474  005B6E                     u4730:
 16475  005B6E                     
 16476                           ;mcc_generated_files/spi.c: 96:     PIR1bits.SSPIF = 0;
 16477  005B6E  969E               	bcf	158,3,c	;volatile
 16478                           
 16479                           ;mcc_generated_files/spi.c: 97:     return SSPBUF;
 16480  005B70  50C9               	movf	201,w,c	;volatile
 16481  005B72  0012               	return		;funcret
 16482  005B74                     __end_of_SPI_ExchangeByte:
 16483                           	opt callstack 0
 16484                           
 16485 ;; *************** function ___xxtofl *****************
 16486 ;; Defined at:
 16487 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 16488 ;; Parameters:    Size  Location     Type
 16489 ;;  sign            1    wreg     unsigned char 
 16490 ;;  val             4    3[COMRAM] long 
 16491 ;; Auto vars:     Size  Location     Type
 16492 ;;  sign            1   11[COMRAM] unsigned char 
 16493 ;;  arg             4   13[COMRAM] unsigned long 
 16494 ;;  exp             1   12[COMRAM] unsigned char 
 16495 ;; Return value:  Size  Location     Type
 16496 ;;                  4    3[COMRAM] unsigned char 
 16497 ;; Registers used:
 16498 ;;		wreg, status,2, status,0
 16499 ;; Tracked objects:
 16500 ;;		On entry : 0/0
 16501 ;;		On exit  : 0/0
 16502 ;;		Unchanged: 0/0
 16503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16504 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16505 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16506 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16507 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16508 ;;Total ram usage:       14 bytes
 16509 ;; Hardware stack levels used:    1
 16510 ;; Hardware stack levels required when called:    4
 16511 ;; This function calls:
 16512 ;;		Nothing
 16513 ;; This function is called by:
 16514 ;;		_main
 16515 ;; This function uses a non-reentrant model
 16516 ;;
 16517                           
 16518                           	psect	text56
 16519  003CA8                     __ptext56:
 16520                           	opt callstack 0
 16521  003CA8                     ___xxtofl:
 16522                           	opt callstack 26
 16523                           
 16524                           ;incstack = 0
 16525                           ;___xxtofl@sign stored from wreg
 16526  003CA8  6E0C               	movwf	___xxtofl@sign^0,c
 16527  003CAA  500C               	movf	___xxtofl@sign^0,w,c
 16528  003CAC  B4D8               	btfsc	status,2,c
 16529  003CAE  EF5B  F01E         	goto	u8191
 16530  003CB2  EF5D  F01E         	goto	u8190
 16531  003CB6                     u8191:
 16532  003CB6  EF7F  F01E         	goto	l1442
 16533  003CBA                     u8190:
 16534  003CBA  BE07               	btfsc	(___xxtofl@val+3)^0,7,c
 16535  003CBC  EF64  F01E         	goto	u8200
 16536  003CC0  EF62  F01E         	goto	u8201
 16537  003CC4                     u8201:
 16538  003CC4  EF7F  F01E         	goto	l1442
 16539  003CC8                     u8200:
 16540  003CC8  C004  F008         	movff	___xxtofl@val,??___xxtofl
 16541  003CCC  C005  F009         	movff	___xxtofl@val+1,??___xxtofl+1
 16542  003CD0  C006  F00A         	movff	___xxtofl@val+2,??___xxtofl+2
 16543  003CD4  C007  F00B         	movff	___xxtofl@val+3,??___xxtofl+3
 16544  003CD8  1E08               	comf	??___xxtofl^0,f,c
 16545  003CDA  1E09               	comf	(??___xxtofl+1)^0,f,c
 16546  003CDC  1E0A               	comf	(??___xxtofl+2)^0,f,c
 16547  003CDE  1E0B               	comf	(??___xxtofl+3)^0,f,c
 16548  003CE0  2A08               	incf	??___xxtofl^0,f,c
 16549  003CE2  0E00               	movlw	0
 16550  003CE4  2209               	addwfc	(??___xxtofl+1)^0,f,c
 16551  003CE6  220A               	addwfc	(??___xxtofl+2)^0,f,c
 16552  003CE8  220B               	addwfc	(??___xxtofl+3)^0,f,c
 16553  003CEA  C008  F00E         	movff	??___xxtofl,___xxtofl@arg
 16554  003CEE  C009  F00F         	movff	??___xxtofl+1,___xxtofl@arg+1
 16555  003CF2  C00A  F010         	movff	??___xxtofl+2,___xxtofl@arg+2
 16556  003CF6  C00B  F011         	movff	??___xxtofl+3,___xxtofl@arg+3
 16557  003CFA  EF87  F01E         	goto	l6826
 16558  003CFE                     l1442:
 16559  003CFE  C004  F00E         	movff	___xxtofl@val,___xxtofl@arg
 16560  003D02  C005  F00F         	movff	___xxtofl@val+1,___xxtofl@arg+1
 16561  003D06  C006  F010         	movff	___xxtofl@val+2,___xxtofl@arg+2
 16562  003D0A  C007  F011         	movff	___xxtofl@val+3,___xxtofl@arg+3
 16563  003D0E                     l6826:
 16564  003D0E  5004               	movf	___xxtofl@val^0,w,c
 16565  003D10  1005               	iorwf	(___xxtofl@val+1)^0,w,c
 16566  003D12  1006               	iorwf	(___xxtofl@val+2)^0,w,c
 16567  003D14  1007               	iorwf	(___xxtofl@val+3)^0,w,c
 16568  003D16  A4D8               	btfss	status,2,c
 16569  003D18  EF90  F01E         	goto	u8211
 16570  003D1C  EF92  F01E         	goto	u8210
 16571  003D20                     u8211:
 16572  003D20  EF9C  F01E         	goto	l6832
 16573  003D24                     u8210:
 16574  003D24  0E00               	movlw	0
 16575  003D26  6E04               	movwf	?___xxtofl^0,c
 16576  003D28  0E00               	movlw	0
 16577  003D2A  6E05               	movwf	(?___xxtofl+1)^0,c
 16578  003D2C  0E00               	movlw	0
 16579  003D2E  6E06               	movwf	(?___xxtofl+2)^0,c
 16580  003D30  0E00               	movlw	0
 16581  003D32  6E07               	movwf	(?___xxtofl+3)^0,c
 16582  003D34  EF2D  F01F         	goto	l1445
 16583  003D38                     l6832:
 16584  003D38  0E96               	movlw	150
 16585  003D3A  6E0D               	movwf	___xxtofl@exp^0,c
 16586  003D3C  EFA6  F01E         	goto	l6836
 16587  003D40                     l6834:
 16588  003D40  2A0D               	incf	___xxtofl@exp^0,f,c
 16589  003D42  90D8               	bcf	status,0,c
 16590  003D44  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
 16591  003D46  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
 16592  003D48  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
 16593  003D4A  320E               	rrcf	___xxtofl@arg^0,f,c
 16594  003D4C                     l6836:
 16595  003D4C  0E00               	movlw	0
 16596  003D4E  140E               	andwf	___xxtofl@arg^0,w,c
 16597  003D50  6E08               	movwf	??___xxtofl^0,c
 16598  003D52  0E00               	movlw	0
 16599  003D54  140F               	andwf	(___xxtofl@arg+1)^0,w,c
 16600  003D56  6E09               	movwf	(??___xxtofl+1)^0,c
 16601  003D58  0E00               	movlw	0
 16602  003D5A  1410               	andwf	(___xxtofl@arg+2)^0,w,c
 16603  003D5C  6E0A               	movwf	(??___xxtofl+2)^0,c
 16604  003D5E  0EFE               	movlw	254
 16605  003D60  1411               	andwf	(___xxtofl@arg+3)^0,w,c
 16606  003D62  6E0B               	movwf	(??___xxtofl+3)^0,c
 16607  003D64  5008               	movf	??___xxtofl^0,w,c
 16608  003D66  1009               	iorwf	(??___xxtofl+1)^0,w,c
 16609  003D68  100A               	iorwf	(??___xxtofl+2)^0,w,c
 16610  003D6A  100B               	iorwf	(??___xxtofl+3)^0,w,c
 16611  003D6C  A4D8               	btfss	status,2,c
 16612  003D6E  EFBB  F01E         	goto	u8221
 16613  003D72  EFBD  F01E         	goto	u8220
 16614  003D76                     u8221:
 16615  003D76  EFA0  F01E         	goto	l6834
 16616  003D7A                     u8220:
 16617  003D7A  EFCB  F01E         	goto	l1449
 16618  003D7E                     l6838:
 16619  003D7E  2A0D               	incf	___xxtofl@exp^0,f,c
 16620  003D80  0E01               	movlw	1
 16621  003D82  260E               	addwf	___xxtofl@arg^0,f,c
 16622  003D84  0E00               	movlw	0
 16623  003D86  220F               	addwfc	(___xxtofl@arg+1)^0,f,c
 16624  003D88  2210               	addwfc	(___xxtofl@arg+2)^0,f,c
 16625  003D8A  2211               	addwfc	(___xxtofl@arg+3)^0,f,c
 16626  003D8C  90D8               	bcf	status,0,c
 16627  003D8E  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
 16628  003D90  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
 16629  003D92  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
 16630  003D94  320E               	rrcf	___xxtofl@arg^0,f,c
 16631  003D96                     l1449:
 16632  003D96  0E00               	movlw	0
 16633  003D98  140E               	andwf	___xxtofl@arg^0,w,c
 16634  003D9A  6E08               	movwf	??___xxtofl^0,c
 16635  003D9C  0E00               	movlw	0
 16636  003D9E  140F               	andwf	(___xxtofl@arg+1)^0,w,c
 16637  003DA0  6E09               	movwf	(??___xxtofl+1)^0,c
 16638  003DA2  0E00               	movlw	0
 16639  003DA4  1410               	andwf	(___xxtofl@arg+2)^0,w,c
 16640  003DA6  6E0A               	movwf	(??___xxtofl+2)^0,c
 16641  003DA8  0EFF               	movlw	255
 16642  003DAA  1411               	andwf	(___xxtofl@arg+3)^0,w,c
 16643  003DAC  6E0B               	movwf	(??___xxtofl+3)^0,c
 16644  003DAE  5008               	movf	??___xxtofl^0,w,c
 16645  003DB0  1009               	iorwf	(??___xxtofl+1)^0,w,c
 16646  003DB2  100A               	iorwf	(??___xxtofl+2)^0,w,c
 16647  003DB4  100B               	iorwf	(??___xxtofl+3)^0,w,c
 16648  003DB6  A4D8               	btfss	status,2,c
 16649  003DB8  EFE0  F01E         	goto	u8231
 16650  003DBC  EFE2  F01E         	goto	u8230
 16651  003DC0                     u8231:
 16652  003DC0  EFBF  F01E         	goto	l6838
 16653  003DC4                     u8230:
 16654  003DC4  EFEA  F01E         	goto	l6846
 16655  003DC8                     l6844:
 16656  003DC8  060D               	decf	___xxtofl@exp^0,f,c
 16657  003DCA  90D8               	bcf	status,0,c
 16658  003DCC  360E               	rlcf	___xxtofl@arg^0,f,c
 16659  003DCE  360F               	rlcf	(___xxtofl@arg+1)^0,f,c
 16660  003DD0  3610               	rlcf	(___xxtofl@arg+2)^0,f,c
 16661  003DD2  3611               	rlcf	(___xxtofl@arg+3)^0,f,c
 16662  003DD4                     l6846:
 16663  003DD4  BE10               	btfsc	(___xxtofl@arg+2)^0,7,c
 16664  003DD6  EFEF  F01E         	goto	u8241
 16665  003DDA  EFF1  F01E         	goto	u8240
 16666  003DDE                     u8241:
 16667  003DDE  EFF9  F01E         	goto	l1456
 16668  003DE2                     u8240:
 16669  003DE2  0E02               	movlw	2
 16670  003DE4  600D               	cpfslt	___xxtofl@exp^0,c
 16671  003DE6  EFF7  F01E         	goto	u8251
 16672  003DEA  EFF9  F01E         	goto	u8250
 16673  003DEE                     u8251:
 16674  003DEE  EFE4  F01E         	goto	l6844
 16675  003DF2                     u8250:
 16676  003DF2                     l1456:
 16677  003DF2  B00D               	btfsc	___xxtofl@exp^0,0,c
 16678  003DF4  EFFE  F01E         	goto	u8261
 16679  003DF8  EF00  F01F         	goto	u8260
 16680  003DFC                     u8261:
 16681  003DFC  EF01  F01F         	goto	l6852
 16682  003E00                     u8260:
 16683  003E00  9E10               	bcf	(___xxtofl@arg+2)^0,7,c
 16684  003E02                     l6852:
 16685  003E02  90D8               	bcf	status,0,c
 16686  003E04  320D               	rrcf	___xxtofl@exp^0,f,c
 16687  003E06  C00D  F008         	movff	___xxtofl@exp,??___xxtofl
 16688  003E0A  6A09               	clrf	(??___xxtofl+1)^0,c
 16689  003E0C  6A0A               	clrf	(??___xxtofl+2)^0,c
 16690  003E0E  6A0B               	clrf	(??___xxtofl+3)^0,c
 16691  003E10  C008  F00B         	movff	??___xxtofl,??___xxtofl+3
 16692  003E14  6A0A               	clrf	(??___xxtofl+2)^0,c
 16693  003E16  6A09               	clrf	(??___xxtofl+1)^0,c
 16694  003E18  6A08               	clrf	??___xxtofl^0,c
 16695  003E1A  5008               	movf	??___xxtofl^0,w,c
 16696  003E1C  120E               	iorwf	___xxtofl@arg^0,f,c
 16697  003E1E  5009               	movf	(??___xxtofl+1)^0,w,c
 16698  003E20  120F               	iorwf	(___xxtofl@arg+1)^0,f,c
 16699  003E22  500A               	movf	(??___xxtofl+2)^0,w,c
 16700  003E24  1210               	iorwf	(___xxtofl@arg+2)^0,f,c
 16701  003E26  500B               	movf	(??___xxtofl+3)^0,w,c
 16702  003E28  1211               	iorwf	(___xxtofl@arg+3)^0,f,c
 16703  003E2A  500C               	movf	___xxtofl@sign^0,w,c
 16704  003E2C  B4D8               	btfsc	status,2,c
 16705  003E2E  EF1B  F01F         	goto	u8271
 16706  003E32  EF1D  F01F         	goto	u8270
 16707  003E36                     u8271:
 16708  003E36  EF25  F01F         	goto	l6862
 16709  003E3A                     u8270:
 16710  003E3A  BE07               	btfsc	(___xxtofl@val+3)^0,7,c
 16711  003E3C  EF24  F01F         	goto	u8280
 16712  003E40  EF22  F01F         	goto	u8281
 16713  003E44                     u8281:
 16714  003E44  EF25  F01F         	goto	l6862
 16715  003E48                     u8280:
 16716  003E48  8E11               	bsf	(___xxtofl@arg+3)^0,7,c
 16717  003E4A                     l6862:
 16718  003E4A  C00E  F004         	movff	___xxtofl@arg,?___xxtofl
 16719  003E4E  C00F  F005         	movff	___xxtofl@arg+1,?___xxtofl+1
 16720  003E52  C010  F006         	movff	___xxtofl@arg+2,?___xxtofl+2
 16721  003E56  C011  F007         	movff	___xxtofl@arg+3,?___xxtofl+3
 16722  003E5A                     l1445:
 16723  003E5A  0012               	return		;funcret
 16724  003E5C                     __end_of___xxtofl:
 16725                           	opt callstack 0
 16726                           
 16727 ;; *************** function _SYSTEM_Initialize *****************
 16728 ;; Defined at:
 16729 ;;		line 50 in file "mcc_generated_files/mcc.c"
 16730 ;; Parameters:    Size  Location     Type
 16731 ;;		None
 16732 ;; Auto vars:     Size  Location     Type
 16733 ;;		None
 16734 ;; Return value:  Size  Location     Type
 16735 ;;                  1    wreg      void 
 16736 ;; Registers used:
 16737 ;;		wreg, status,2, status,0, cstack
 16738 ;; Tracked objects:
 16739 ;;		On entry : 0/0
 16740 ;;		On exit  : 0/0
 16741 ;;		Unchanged: 0/0
 16742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16747 ;;Total ram usage:        0 bytes
 16748 ;; Hardware stack levels used:    1
 16749 ;; Hardware stack levels required when called:    6
 16750 ;; This function calls:
 16751 ;;		_ADC_Initialize
 16752 ;;		_INTERRUPT_Initialize
 16753 ;;		_OSCILLATOR_Initialize
 16754 ;;		_PIN_MANAGER_Initialize
 16755 ;;		_SPI_Initialize
 16756 ;;		_TMR1_Initialize
 16757 ;; This function is called by:
 16758 ;;		_main
 16759 ;; This function uses a non-reentrant model
 16760 ;;
 16761                           
 16762                           	psect	text57
 16763  005B74                     __ptext57:
 16764                           	opt callstack 0
 16765  005B74                     _SYSTEM_Initialize:
 16766                           	opt callstack 24
 16767  005B74                     
 16768                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
 16769  005B74  EC10  F02E         	call	_INTERRUPT_Initialize	;wreg free
 16770  005B78                     
 16771                           ;mcc_generated_files/mcc.c: 54:     SPI_Initialize();
 16772  005B78  ECF5  F02D         	call	_SPI_Initialize	;wreg free
 16773  005B7C                     
 16774                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 16775  005B7C  ECF1  F02B         	call	_PIN_MANAGER_Initialize	;wreg free
 16776  005B80                     
 16777                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 16778  005B80  ECFE  F02D         	call	_OSCILLATOR_Initialize	;wreg free
 16779  005B84                     
 16780                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
 16781  005B84  EC84  F02D         	call	_TMR1_Initialize	;wreg free
 16782  005B88                     
 16783                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
 16784  005B88  ECEA  F02D         	call	_ADC_Initialize	;wreg free
 16785  005B8C  0012               	return		;funcret
 16786  005B8E                     __end_of_SYSTEM_Initialize:
 16787                           	opt callstack 0
 16788                           
 16789 ;; *************** function _TMR1_Initialize *****************
 16790 ;; Defined at:
 16791 ;;		line 63 in file "mcc_generated_files/tmr1.c"
 16792 ;; Parameters:    Size  Location     Type
 16793 ;;		None
 16794 ;; Auto vars:     Size  Location     Type
 16795 ;;		None
 16796 ;; Return value:  Size  Location     Type
 16797 ;;                  1    wreg      void 
 16798 ;; Registers used:
 16799 ;;		wreg, status,2, status,0
 16800 ;; Tracked objects:
 16801 ;;		On entry : 0/0
 16802 ;;		On exit  : 0/0
 16803 ;;		Unchanged: 0/0
 16804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16807 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16808 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16809 ;;Total ram usage:        2 bytes
 16810 ;; Hardware stack levels used:    1
 16811 ;; Hardware stack levels required when called:    4
 16812 ;; This function calls:
 16813 ;;		Nothing
 16814 ;; This function is called by:
 16815 ;;		_SYSTEM_Initialize
 16816 ;; This function uses a non-reentrant model
 16817 ;;
 16818                           
 16819                           	psect	text58
 16820  005B08                     __ptext58:
 16821                           	opt callstack 0
 16822  005B08                     _TMR1_Initialize:
 16823                           	opt callstack 25
 16824  005B08                     
 16825                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
 16826  005B08  0E00               	movlw	0
 16827  005B0A  6EAA               	movwf	170,c	;volatile
 16828                           
 16829                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x0B;
 16830  005B0C  0E0B               	movlw	11
 16831  005B0E  6ECF               	movwf	207,c	;volatile
 16832                           
 16833                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0xDC;
 16834  005B10  0EDC               	movlw	220
 16835  005B12  6ECE               	movwf	206,c	;volatile
 16836  005B14                     
 16837                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
 16838  005B14  909E               	bcf	158,0,c	;volatile
 16839  005B16                     
 16840                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 16841  005B16  50CE               	movf	206,w,c	;volatile
 16842  005B18  CFCF F004          	movff	4047,??_TMR1_Initialize	;volatile
 16843  005B1C  6A05               	clrf	(??_TMR1_Initialize+1)^0,c
 16844  005B1E  C004  F005         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 16845  005B22  6A04               	clrf	??_TMR1_Initialize^0,c
 16846  005B24  1004               	iorwf	??_TMR1_Initialize^0,w,c
 16847  005B26  0100               	movlb	0	; () banked
 16848  005B28  6FFC               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 16849  005B2A  5005               	movf	(??_TMR1_Initialize+1)^0,w,c
 16850  005B2C  6FFD               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 16851  005B2E                     
 16852                           ; BSR set to: 0
 16853                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x31;
 16854  005B2E  0E31               	movlw	49
 16855  005B30  6ECD               	movwf	205,c	;volatile
 16856  005B32                     
 16857                           ; BSR set to: 0
 16858  005B32  0012               	return		;funcret
 16859  005B34                     __end_of_TMR1_Initialize:
 16860                           	opt callstack 0
 16861                           
 16862 ;; *************** function _SPI_Initialize *****************
 16863 ;; Defined at:
 16864 ;;		line 62 in file "mcc_generated_files/spi.c"
 16865 ;; Parameters:    Size  Location     Type
 16866 ;;		None
 16867 ;; Auto vars:     Size  Location     Type
 16868 ;;		None
 16869 ;; Return value:  Size  Location     Type
 16870 ;;                  1    wreg      void 
 16871 ;; Registers used:
 16872 ;;		wreg, status,2
 16873 ;; Tracked objects:
 16874 ;;		On entry : 0/0
 16875 ;;		On exit  : 0/0
 16876 ;;		Unchanged: 0/0
 16877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16882 ;;Total ram usage:        0 bytes
 16883 ;; Hardware stack levels used:    1
 16884 ;; Hardware stack levels required when called:    4
 16885 ;; This function calls:
 16886 ;;		Nothing
 16887 ;; This function is called by:
 16888 ;;		_SYSTEM_Initialize
 16889 ;; This function uses a non-reentrant model
 16890 ;;
 16891                           
 16892                           	psect	text59
 16893  005BEA                     __ptext59:
 16894                           	opt callstack 0
 16895  005BEA                     _SPI_Initialize:
 16896                           	opt callstack 25
 16897  005BEA                     
 16898                           ;mcc_generated_files/spi.c: 65:     SSPSTAT = 0x40;
 16899  005BEA  0E40               	movlw	64
 16900  005BEC  6EC7               	movwf	199,c	;volatile
 16901                           
 16902                           ;mcc_generated_files/spi.c: 66:     SSPCON1 = 0x00;
 16903  005BEE  0E00               	movlw	0
 16904  005BF0  6EC6               	movwf	198,c	;volatile
 16905                           
 16906                           ;mcc_generated_files/spi.c: 67:     SSPADD = 0x01;
 16907  005BF2  0E01               	movlw	1
 16908  005BF4  6EC8               	movwf	200,c	;volatile
 16909  005BF6                     
 16910                           ;mcc_generated_files/spi.c: 68:     TRISCbits.TRISC3 = 0;
 16911  005BF6  9694               	bcf	148,3,c	;volatile
 16912  005BF8                     
 16913                           ;mcc_generated_files/spi.c: 69:     SSPCON1bits.SSPEN = 0;
 16914  005BF8  9AC6               	bcf	198,5,c	;volatile
 16915  005BFA  0012               	return		;funcret
 16916  005BFC                     __end_of_SPI_Initialize:
 16917                           	opt callstack 0
 16918                           
 16919 ;; *************** function _PIN_MANAGER_Initialize *****************
 16920 ;; Defined at:
 16921 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 16922 ;; Parameters:    Size  Location     Type
 16923 ;;		None
 16924 ;; Auto vars:     Size  Location     Type
 16925 ;;		None
 16926 ;; Return value:  Size  Location     Type
 16927 ;;                  1    wreg      void 
 16928 ;; Registers used:
 16929 ;;		wreg, status,2, status,0, cstack
 16930 ;; Tracked objects:
 16931 ;;		On entry : 0/0
 16932 ;;		On exit  : 0/0
 16933 ;;		Unchanged: 0/0
 16934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16939 ;;Total ram usage:        0 bytes
 16940 ;; Hardware stack levels used:    1
 16941 ;; Hardware stack levels required when called:    5
 16942 ;; This function calls:
 16943 ;;		_IOCB4_SetInterruptHandler
 16944 ;; This function is called by:
 16945 ;;		_SYSTEM_Initialize
 16946 ;; This function uses a non-reentrant model
 16947 ;;
 16948                           
 16949                           	psect	text60
 16950  0057E2                     __ptext60:
 16951                           	opt callstack 0
 16952  0057E2                     _PIN_MANAGER_Initialize:
 16953                           	opt callstack 24
 16954  0057E2                     
 16955                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
 16956  0057E2  0E00               	movlw	0
 16957  0057E4  6E8D               	movwf	141,c	;volatile
 16958                           
 16959                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 16960  0057E6  0E00               	movlw	0
 16961  0057E8  6E8C               	movwf	140,c	;volatile
 16962                           
 16963                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 16964  0057EA  0E00               	movlw	0
 16965  0057EC  6E89               	movwf	137,c	;volatile
 16966                           
 16967                           ;mcc_generated_files/pin_manager.c: 65:     LATB = 0x00;
 16968  0057EE  0E00               	movlw	0
 16969  0057F0  6E8A               	movwf	138,c	;volatile
 16970                           
 16971                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x00;
 16972  0057F2  0E00               	movlw	0
 16973  0057F4  6E8B               	movwf	139,c	;volatile
 16974                           
 16975                           ;mcc_generated_files/pin_manager.c: 71:     TRISE = 0x04;
 16976  0057F6  0E04               	movlw	4
 16977  0057F8  6E96               	movwf	150,c	;volatile
 16978                           
 16979                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0x0F;
 16980  0057FA  0E0F               	movlw	15
 16981  0057FC  6E92               	movwf	146,c	;volatile
 16982  0057FE                     
 16983                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
 16984  0057FE  6893               	setf	147,c	;volatile
 16985                           
 16986                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xD7;
 16987  005800  0ED7               	movlw	215
 16988  005802  6E94               	movwf	148,c	;volatile
 16989  005804                     
 16990                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xFF;
 16991  005804  6895               	setf	149,c	;volatile
 16992                           
 16993                           ;mcc_generated_files/pin_manager.c: 80:     ANCON0 = 0x87;
 16994  005806  0E87               	movlw	135
 16995  005808  010F               	movlb	15	; () banked
 16996  00580A  6F5D               	movwf	93,b	;volatile
 16997                           
 16998                           ;mcc_generated_files/pin_manager.c: 81:     ANCON1 = 0x7D;
 16999  00580C  0E7D               	movlw	125
 17000  00580E  6F5C               	movwf	92,b	;volatile
 17001                           
 17002                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
 17003  005810  0E00               	movlw	0
 17004  005812  6F5B               	movwf	91,b	;volatile
 17005  005814                     
 17006                           ; BSR set to: 15
 17007                           ;mcc_generated_files/pin_manager.c: 87:     INTCON2bits.nRBPU = 1;
 17008  005814  8EF1               	bsf	241,7,c	;volatile
 17009  005816                     
 17010                           ; BSR set to: 15
 17011                           ;mcc_generated_files/pin_manager.c: 95:     IOCBbits.IOCB4 = 1;
 17012  005816  895A               	bsf	90,4,b	;volatile
 17013  005818                     
 17014                           ; BSR set to: 15
 17015                           ;mcc_generated_files/pin_manager.c: 100:     IOCB4_SetInterruptHandler(IOCB4_DefaultInte
      +                          rruptHandler);
 17016  005818  0E26               	movlw	low _IOCB4_DefaultInterruptHandler
 17017  00581A  6E04               	movwf	IOCB4_SetInterruptHandler@InterruptHandler^0,c
 17018  00581C  0E5C               	movlw	high _IOCB4_DefaultInterruptHandler
 17019  00581E  6E05               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)^0,c
 17020  005820  EC07  F02E         	call	_IOCB4_SetInterruptHandler	;wreg free
 17021  005824                     
 17022                           ;mcc_generated_files/pin_manager.c: 103:     INTCONbits.RBIE = 1;
 17023  005824  86F2               	bsf	242,3,c	;volatile
 17024  005826  0012               	return		;funcret
 17025  005828                     __end_of_PIN_MANAGER_Initialize:
 17026                           	opt callstack 0
 17027                           
 17028 ;; *************** function _IOCB4_SetInterruptHandler *****************
 17029 ;; Defined at:
 17030 ;;		line 135 in file "mcc_generated_files/pin_manager.c"
 17031 ;; Parameters:    Size  Location     Type
 17032 ;;  InterruptHan    2    3[COMRAM] PTR FTN()void 
 17033 ;;		 -> IOCB4_InterruptCall(1), IOCB4_DefaultInterruptHandler(1), 
 17034 ;; Auto vars:     Size  Location     Type
 17035 ;;		None
 17036 ;; Return value:  Size  Location     Type
 17037 ;;                  1    wreg      void 
 17038 ;; Registers used:
 17039 ;;		wreg, status,2, status,0
 17040 ;; Tracked objects:
 17041 ;;		On entry : 0/0
 17042 ;;		On exit  : 0/0
 17043 ;;		Unchanged: 0/0
 17044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17045 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17048 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17049 ;;Total ram usage:        2 bytes
 17050 ;; Hardware stack levels used:    1
 17051 ;; Hardware stack levels required when called:    4
 17052 ;; This function calls:
 17053 ;;		Nothing
 17054 ;; This function is called by:
 17055 ;;		_PIN_MANAGER_Initialize
 17056 ;;		_main
 17057 ;; This function uses a non-reentrant model
 17058 ;;
 17059                           
 17060                           	psect	text61
 17061  005C0E                     __ptext61:
 17062                           	opt callstack 0
 17063  005C0E                     _IOCB4_SetInterruptHandler:
 17064                           	opt callstack 24
 17065  005C0E                     
 17066                           ;mcc_generated_files/pin_manager.c: 136:     IOCB4_InterruptHandler = InterruptHandler;
 17067  005C0E  C004  F0FE         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
 17068  005C12  C005  F0FF         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
 17069  005C16  0012               	return		;funcret
 17070  005C18                     __end_of_IOCB4_SetInterruptHandler:
 17071                           	opt callstack 0
 17072                           
 17073 ;; *************** function _OSCILLATOR_Initialize *****************
 17074 ;; Defined at:
 17075 ;;		line 61 in file "mcc_generated_files/mcc.c"
 17076 ;; Parameters:    Size  Location     Type
 17077 ;;		None
 17078 ;; Auto vars:     Size  Location     Type
 17079 ;;		None
 17080 ;; Return value:  Size  Location     Type
 17081 ;;                  1    wreg      void 
 17082 ;; Registers used:
 17083 ;;		wreg, status,2
 17084 ;; Tracked objects:
 17085 ;;		On entry : 0/0
 17086 ;;		On exit  : 0/0
 17087 ;;		Unchanged: 0/0
 17088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17093 ;;Total ram usage:        0 bytes
 17094 ;; Hardware stack levels used:    1
 17095 ;; Hardware stack levels required when called:    4
 17096 ;; This function calls:
 17097 ;;		Nothing
 17098 ;; This function is called by:
 17099 ;;		_SYSTEM_Initialize
 17100 ;; This function uses a non-reentrant model
 17101 ;;
 17102                           
 17103                           	psect	text62
 17104  005BFC                     __ptext62:
 17105                           	opt callstack 0
 17106  005BFC                     _OSCILLATOR_Initialize:
 17107                           	opt callstack 25
 17108  005BFC                     
 17109                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x62;
 17110  005BFC  0E62               	movlw	98
 17111  005BFE  6ED3               	movwf	211,c	;volatile
 17112                           
 17113                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x00;
 17114  005C00  0E00               	movlw	0
 17115  005C02  6ED2               	movwf	210,c	;volatile
 17116                           
 17117                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
 17118  005C04  0E00               	movlw	0
 17119  005C06  6E9B               	movwf	155,c	;volatile
 17120                           
 17121                           ;mcc_generated_files/mcc.c: 70:     REFOCON = 0x00;
 17122  005C08  0E00               	movlw	0
 17123  005C0A  6E9A               	movwf	154,c	;volatile
 17124  005C0C  0012               	return		;funcret
 17125  005C0E                     __end_of_OSCILLATOR_Initialize:
 17126                           	opt callstack 0
 17127                           
 17128 ;; *************** function _INTERRUPT_Initialize *****************
 17129 ;; Defined at:
 17130 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 17131 ;; Parameters:    Size  Location     Type
 17132 ;;		None
 17133 ;; Auto vars:     Size  Location     Type
 17134 ;;		None
 17135 ;; Return value:  Size  Location     Type
 17136 ;;                  1    wreg      void 
 17137 ;; Registers used:
 17138 ;;		None
 17139 ;; Tracked objects:
 17140 ;;		On entry : 0/0
 17141 ;;		On exit  : 0/0
 17142 ;;		Unchanged: 0/0
 17143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17148 ;;Total ram usage:        0 bytes
 17149 ;; Hardware stack levels used:    1
 17150 ;; Hardware stack levels required when called:    4
 17151 ;; This function calls:
 17152 ;;		Nothing
 17153 ;; This function is called by:
 17154 ;;		_SYSTEM_Initialize
 17155 ;; This function uses a non-reentrant model
 17156 ;;
 17157                           
 17158                           	psect	text63
 17159  005C20                     __ptext63:
 17160                           	opt callstack 0
 17161  005C20                     _INTERRUPT_Initialize:
 17162                           	opt callstack 25
 17163  005C20                     
 17164                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
 17165  005C20  9ED0               	bcf	208,7,c	;volatile
 17166  005C22  0012               	return		;funcret
 17167  005C24                     __end_of_INTERRUPT_Initialize:
 17168                           	opt callstack 0
 17169                           
 17170 ;; *************** function _ADC_Initialize *****************
 17171 ;; Defined at:
 17172 ;;		line 62 in file "mcc_generated_files/adc.c"
 17173 ;; Parameters:    Size  Location     Type
 17174 ;;		None
 17175 ;; Auto vars:     Size  Location     Type
 17176 ;;		None
 17177 ;; Return value:  Size  Location     Type
 17178 ;;                  1    wreg      void 
 17179 ;; Registers used:
 17180 ;;		wreg, status,2
 17181 ;; Tracked objects:
 17182 ;;		On entry : 0/0
 17183 ;;		On exit  : 0/0
 17184 ;;		Unchanged: 0/0
 17185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17190 ;;Total ram usage:        0 bytes
 17191 ;; Hardware stack levels used:    1
 17192 ;; Hardware stack levels required when called:    4
 17193 ;; This function calls:
 17194 ;;		Nothing
 17195 ;; This function is called by:
 17196 ;;		_SYSTEM_Initialize
 17197 ;; This function uses a non-reentrant model
 17198 ;;
 17199                           
 17200                           	psect	text64
 17201  005BD4                     __ptext64:
 17202                           	opt callstack 0
 17203  005BD4                     _ADC_Initialize:
 17204                           	opt callstack 25
 17205  005BD4                     
 17206                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x01;
 17207  005BD4  0E01               	movlw	1
 17208  005BD6  6EC2               	movwf	194,c	;volatile
 17209                           
 17210                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x80;
 17211  005BD8  0E80               	movlw	128
 17212  005BDA  6EC1               	movwf	193,c	;volatile
 17213                           
 17214                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0xAD;
 17215  005BDC  0EAD               	movlw	173
 17216  005BDE  6EC0               	movwf	192,c	;volatile
 17217                           
 17218                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
 17219  005BE0  0E00               	movlw	0
 17220  005BE2  6EC4               	movwf	196,c	;volatile
 17221                           
 17222                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
 17223  005BE4  0E00               	movlw	0
 17224  005BE6  6EC3               	movwf	195,c	;volatile
 17225  005BE8  0012               	return		;funcret
 17226  005BEA                     __end_of_ADC_Initialize:
 17227                           	opt callstack 0
 17228                           
 17229 ;; *************** function _SPI_Open *****************
 17230 ;; Defined at:
 17231 ;;		line 72 in file "mcc_generated_files/spi.c"
 17232 ;; Parameters:    Size  Location     Type
 17233 ;;  spiUniqueCon    1    wreg     enum E353
 17234 ;; Auto vars:     Size  Location     Type
 17235 ;;  spiUniqueCon    1    4[COMRAM] enum E353
 17236 ;; Return value:  Size  Location     Type
 17237 ;;                  1    wreg      _Bool 
 17238 ;; Registers used:
 17239 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 17240 ;; Tracked objects:
 17241 ;;		On entry : 0/0
 17242 ;;		On exit  : 0/0
 17243 ;;		Unchanged: 0/0
 17244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17246 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17247 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17248 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17249 ;;Total ram usage:        2 bytes
 17250 ;; Hardware stack levels used:    1
 17251 ;; Hardware stack levels required when called:    4
 17252 ;; This function calls:
 17253 ;;		Nothing
 17254 ;; This function is called by:
 17255 ;;		_main
 17256 ;; This function uses a non-reentrant model
 17257 ;;
 17258                           
 17259                           	psect	text65
 17260  00525E                     __ptext65:
 17261                           	opt callstack 0
 17262  00525E                     _SPI_Open:
 17263                           	opt callstack 26
 17264                           
 17265                           ;incstack = 0
 17266                           ;SPI_Open@spiUniqueConfiguration stored from wreg
 17267  00525E  6E05               	movwf	SPI_Open@spiUniqueConfiguration^0,c
 17268  005260                     
 17269                           ;mcc_generated_files/spi.c: 72: _Bool SPI_Open(spi_modes_t spiUniqueConfiguration);mcc_g
      +                          enerated_files/spi.c: 73: {;mcc_generated_files/spi.c: 74:     if(!SSPCON1bits.SSPEN)
 17270  005260  BAC6               	btfsc	198,5,c	;volatile
 17271  005262  EF35  F029         	goto	u8041
 17272  005266  EF37  F029         	goto	u8040
 17273  00526A                     u8041:
 17274  00526A  EF86  F029         	goto	l124
 17275  00526E                     u8040:
 17276  00526E                     
 17277                           ;mcc_generated_files/spi.c: 75:     {;mcc_generated_files/spi.c: 76:         SSPSTAT = s
      +                          pi_configuration[spiUniqueConfiguration].stat;
 17278  00526E  5005               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 17279  005270  0D04               	mullw	4
 17280  005272  0E01               	movlw	1
 17281  005274  26F3               	addwf	243,f,c
 17282  005276  0E00               	movlw	0
 17283  005278  22F4               	addwfc	244,f,c
 17284  00527A  0E99               	movlw	low _spi_configuration
 17285  00527C  24F3               	addwf	243,w,c
 17286  00527E  6EF6               	movwf	tblptrl,c
 17287  005280  0EFF               	movlw	high _spi_configuration
 17288  005282  20F4               	addwfc	244,w,c
 17289  005284  6EF7               	movwf	tblptrh,c
 17290  005286                     	if	1	;There are 3 active tblptr bytes
 17291  005286  6AF8               	clrf	tblptru,c
 17292  005288  0E00               	movlw	low (__mediumconst shr (0+16))
 17293  00528A  22F8               	addwfc	tblptru,f,c
 17294  00528C                     	endif
 17295  00528C  0008               	tblrd		*
 17296  00528E  CFF5 FFC7          	movff	tablat,4039	;volatile
 17297                           
 17298                           ;mcc_generated_files/spi.c: 77:         SSPCON1 = spi_configuration[spiUniqueConfigurati
      +                          on].con1;
 17299  005292  5005               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 17300  005294  0D04               	mullw	4
 17301  005296  0E99               	movlw	low _spi_configuration
 17302  005298  24F3               	addwf	243,w,c
 17303  00529A  6EF6               	movwf	tblptrl,c
 17304  00529C  0EFF               	movlw	high _spi_configuration
 17305  00529E  20F4               	addwfc	244,w,c
 17306  0052A0  6EF7               	movwf	tblptrh,c
 17307  0052A2                     	if	1	;There are 3 active tblptr bytes
 17308  0052A2  6AF8               	clrf	tblptru,c
 17309  0052A4  0E00               	movlw	low (__mediumconst shr (0+16))
 17310  0052A6  22F8               	addwfc	tblptru,f,c
 17311  0052A8                     	endif
 17312  0052A8  0008               	tblrd		*
 17313  0052AA  CFF5 FFC6          	movff	tablat,4038	;volatile
 17314  0052AE                     
 17315                           ;mcc_generated_files/spi.c: 78:         SSPCON2 = 0x00;
 17316  0052AE  0E00               	movlw	0
 17317  0052B0  6EC5               	movwf	197,c	;volatile
 17318  0052B2                     
 17319                           ;mcc_generated_files/spi.c: 79:         SSPADD = spi_configuration[spiUniqueConfiguratio
      +                          n].add;
 17320  0052B2  5005               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 17321  0052B4  0D04               	mullw	4
 17322  0052B6  0E02               	movlw	2
 17323  0052B8  26F3               	addwf	243,f,c
 17324  0052BA  0E00               	movlw	0
 17325  0052BC  22F4               	addwfc	244,f,c
 17326  0052BE  0E99               	movlw	low _spi_configuration
 17327  0052C0  24F3               	addwf	243,w,c
 17328  0052C2  6EF6               	movwf	tblptrl,c
 17329  0052C4  0EFF               	movlw	high _spi_configuration
 17330  0052C6  20F4               	addwfc	244,w,c
 17331  0052C8  6EF7               	movwf	tblptrh,c
 17332  0052CA                     	if	1	;There are 3 active tblptr bytes
 17333  0052CA  6AF8               	clrf	tblptru,c
 17334  0052CC  0E00               	movlw	low (__mediumconst shr (0+16))
 17335  0052CE  22F8               	addwfc	tblptru,f,c
 17336  0052D0                     	endif
 17337  0052D0  0008               	tblrd		*
 17338  0052D2  CFF5 FFC8          	movff	tablat,4040	;volatile
 17339  0052D6                     
 17340                           ;mcc_generated_files/spi.c: 80:         TRISCbits.TRISC3 = spi_configuration[spiUniqueCo
      +                          nfiguration].operation;
 17341  0052D6  5005               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 17342  0052D8  0D04               	mullw	4
 17343  0052DA  0E03               	movlw	3
 17344  0052DC  26F3               	addwf	243,f,c
 17345  0052DE  0E00               	movlw	0
 17346  0052E0  22F4               	addwfc	244,f,c
 17347  0052E2  0E99               	movlw	low _spi_configuration
 17348  0052E4  24F3               	addwf	243,w,c
 17349  0052E6  6EF6               	movwf	tblptrl,c
 17350  0052E8  0EFF               	movlw	high _spi_configuration
 17351  0052EA  20F4               	addwfc	244,w,c
 17352  0052EC  6EF7               	movwf	tblptrh,c
 17353  0052EE                     	if	1	;There are 3 active tblptr bytes
 17354  0052EE  6AF8               	clrf	tblptru,c
 17355  0052F0  0E00               	movlw	low (__mediumconst shr (0+16))
 17356  0052F2  22F8               	addwfc	tblptru,f,c
 17357  0052F4                     	endif
 17358  0052F4  0008               	tblrd		*
 17359  0052F6  CFF5 F004          	movff	tablat,??_SPI_Open
 17360  0052FA  4604               	rlncf	??_SPI_Open^0,f,c
 17361  0052FC  4604               	rlncf	??_SPI_Open^0,f,c
 17362  0052FE  4604               	rlncf	??_SPI_Open^0,f,c
 17363  005300  5094               	movf	148,w,c	;volatile
 17364  005302  1804               	xorwf	??_SPI_Open^0,w,c
 17365  005304  0BF7               	andlw	-9
 17366  005306  1804               	xorwf	??_SPI_Open^0,w,c
 17367  005308  6E94               	movwf	148,c	;volatile
 17368  00530A                     
 17369                           ;mcc_generated_files/spi.c: 81:         SSPCON1bits.SSPEN = 1;
 17370  00530A  8AC6               	bsf	198,5,c	;volatile
 17371  00530C                     l124:
 17372  00530C  0012               	return		;funcret
 17373  00530E                     __end_of_SPI_Open:
 17374                           	opt callstack 0
 17375                           
 17376 ;; *************** function _ADC_GetConversion *****************
 17377 ;; Defined at:
 17378 ;;		line 108 in file "mcc_generated_files/adc.c"
 17379 ;; Parameters:    Size  Location     Type
 17380 ;;  channel         1    wreg     enum E12385
 17381 ;; Auto vars:     Size  Location     Type
 17382 ;;  channel         1    7[COMRAM] enum E12385
 17383 ;; Return value:  Size  Location     Type
 17384 ;;                  2    3[COMRAM] unsigned short 
 17385 ;; Registers used:
 17386 ;;		wreg, status,2, status,0
 17387 ;; Tracked objects:
 17388 ;;		On entry : 0/0
 17389 ;;		On exit  : 0/0
 17390 ;;		Unchanged: 0/0
 17391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17392 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17393 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17394 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17395 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17396 ;;Total ram usage:        5 bytes
 17397 ;; Hardware stack levels used:    1
 17398 ;; Hardware stack levels required when called:    4
 17399 ;; This function calls:
 17400 ;;		Nothing
 17401 ;; This function is called by:
 17402 ;;		_main
 17403 ;; This function uses a non-reentrant model
 17404 ;;
 17405                           
 17406                           	psect	text66
 17407  00592A                     __ptext66:
 17408                           	opt callstack 0
 17409  00592A                     _ADC_GetConversion:
 17410                           	opt callstack 26
 17411                           
 17412                           ;incstack = 0
 17413                           ;ADC_GetConversion@channel stored from wreg
 17414  00592A  6E08               	movwf	ADC_GetConversion@channel^0,c
 17415  00592C                     
 17416                           ;mcc_generated_files/adc.c: 108: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 109: {;mcc_generated_files/adc.c: 111:     ADCON0bits.CHS = ch
      +                          annel;
 17417  00592C  C008  F006         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 17418  005930  4606               	rlncf	??_ADC_GetConversion^0,f,c
 17419  005932  4606               	rlncf	??_ADC_GetConversion^0,f,c
 17420  005934  50C2               	movf	194,w,c	;volatile
 17421  005936  1806               	xorwf	??_ADC_GetConversion^0,w,c
 17422  005938  0B83               	andlw	-125
 17423  00593A  1806               	xorwf	??_ADC_GetConversion^0,w,c
 17424  00593C  6EC2               	movwf	194,c	;volatile
 17425  00593E                     
 17426                           ;mcc_generated_files/adc.c: 114:     ADCON0bits.ADON = 1;
 17427  00593E  80C2               	bsf	194,0,c	;volatile
 17428  005940                     
 17429                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.GO_nDONE = 1;
 17430  005940  82C2               	bsf	194,1,c	;volatile
 17431  005942                     l191:
 17432                           
 17433                           ;mcc_generated_files/adc.c: 121:     while (ADCON0bits.GO_nDONE)
 17434  005942  B2C2               	btfsc	194,1,c	;volatile
 17435  005944  EFA6  F02C         	goto	u8051
 17436  005948  EFA8  F02C         	goto	u8050
 17437  00594C                     u8051:
 17438  00594C  EFA1  F02C         	goto	l191
 17439  005950                     u8050:
 17440  005950                     
 17441                           ;mcc_generated_files/adc.c: 126:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 17442  005950  50C4               	movf	196,w,c	;volatile
 17443  005952  6E07               	movwf	(??_ADC_GetConversion+1)^0,c
 17444  005954  6A06               	clrf	??_ADC_GetConversion^0,c
 17445  005956  50C3               	movf	195,w,c	;volatile
 17446  005958  2406               	addwf	??_ADC_GetConversion^0,w,c
 17447  00595A  6E04               	movwf	?_ADC_GetConversion^0,c
 17448  00595C  0E00               	movlw	0
 17449  00595E  2007               	addwfc	(??_ADC_GetConversion+1)^0,w,c
 17450  005960  6E05               	movwf	(?_ADC_GetConversion+1)^0,c
 17451  005962  0012               	return		;funcret
 17452  005964                     __end_of_ADC_GetConversion:
 17453                           	opt callstack 0
 17454                           
 17455 ;; *************** function _INTERRUPT_InterruptManager *****************
 17456 ;; Defined at:
 17457 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 17458 ;; Parameters:    Size  Location     Type
 17459 ;;		None
 17460 ;; Auto vars:     Size  Location     Type
 17461 ;;		None
 17462 ;; Return value:  Size  Location     Type
 17463 ;;                  1    wreg      void 
 17464 ;; Registers used:
 17465 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17466 ;; Tracked objects:
 17467 ;;		On entry : 0/0
 17468 ;;		On exit  : 0/0
 17469 ;;		Unchanged: 0/0
 17470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17473 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17474 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17475 ;;Total ram usage:        2 bytes
 17476 ;; Hardware stack levels used:    1
 17477 ;; Hardware stack levels required when called:    3
 17478 ;; This function calls:
 17479 ;;		_PIN_MANAGER_IOC
 17480 ;; This function is called by:
 17481 ;;		Interrupt level 2
 17482 ;; This function uses a non-reentrant model
 17483 ;;
 17484                           
 17485                           	psect	intcode
 17486  000008                     __pintcode:
 17487                           	opt callstack 0
 17488  000008                     _INTERRUPT_InterruptManager:
 17489                           	opt callstack 18
 17490                           
 17491                           ;incstack = 0
 17492  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 17493  00000A  CFFA F002          	movff	pclath,??_INTERRUPT_InterruptManager
 17494  00000E  CFFB F003          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 17495  000012                     
 17496                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.RBIE == 1 && INTCONbits.
      +                          RBIF == 1)
 17497  000012  A6F2               	btfss	242,3,c	;volatile
 17498  000014  EF0E  F000         	goto	i2u829_41
 17499  000018  EF10  F000         	goto	i2u829_40
 17500  00001C                     i2u829_41:
 17501  00001C  EF19  F000         	goto	i2l42
 17502  000020                     i2u829_40:
 17503  000020  A0F2               	btfss	242,0,c	;volatile
 17504  000022  EF15  F000         	goto	i2u830_41
 17505  000026  EF17  F000         	goto	i2u830_40
 17506  00002A                     i2u830_41:
 17507  00002A  EF19  F000         	goto	i2l42
 17508  00002E                     i2u830_40:
 17509  00002E                     
 17510                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         PIN_MANAGER_IOC();
 17511  00002E  ECD3  F02D         	call	_PIN_MANAGER_IOC	;wreg free
 17512  000032                     i2l42:
 17513  000032  C003  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 17514  000036  C002  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 17515  00003A  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 17516  00003C  0011               	retfie		f
 17517  00003E                     __end_of_INTERRUPT_InterruptManager:
 17518                           	opt callstack 0
 17519                           
 17520 ;; *************** function _PIN_MANAGER_IOC *****************
 17521 ;; Defined at:
 17522 ;;		line 107 in file "mcc_generated_files/pin_manager.c"
 17523 ;; Parameters:    Size  Location     Type
 17524 ;;		None
 17525 ;; Auto vars:     Size  Location     Type
 17526 ;;		None
 17527 ;; Return value:  Size  Location     Type
 17528 ;;                  1    wreg      void 
 17529 ;; Registers used:
 17530 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17531 ;; Tracked objects:
 17532 ;;		On entry : 0/0
 17533 ;;		On exit  : 0/0
 17534 ;;		Unchanged: 0/0
 17535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17540 ;;Total ram usage:        0 bytes
 17541 ;; Hardware stack levels used:    1
 17542 ;; Hardware stack levels required when called:    2
 17543 ;; This function calls:
 17544 ;;		_IOCB4_ISR
 17545 ;; This function is called by:
 17546 ;;		_INTERRUPT_InterruptManager
 17547 ;; This function uses a non-reentrant model
 17548 ;;
 17549                           
 17550                           	psect	text68
 17551  005BA6                     __ptext68:
 17552                           	opt callstack 0
 17553  005BA6                     _PIN_MANAGER_IOC:
 17554                           	opt callstack 18
 17555  005BA6                     
 17556                           ;mcc_generated_files/pin_manager.c: 110:     if(IOCBbits.IOCB4 == 1)
 17557  005BA6  010F               	movlb	15	; () banked
 17558  005BA8  A95A               	btfss	90,4,b	;volatile
 17559  005BAA  EFD9  F02D         	goto	i2u803_41
 17560  005BAE  EFDB  F02D         	goto	i2u803_40
 17561  005BB2                     i2u803_41:
 17562  005BB2  EFDD  F02D         	goto	i2l6538
 17563  005BB6                     i2u803_40:
 17564  005BB6                     
 17565                           ; BSR set to: 15
 17566                           ;mcc_generated_files/pin_manager.c: 111:     {;mcc_generated_files/pin_manager.c: 112:  
      +                                 IOCB4_ISR();
 17567  005BB6  EC6D  F02D         	call	_IOCB4_ISR	;wreg free
 17568  005BBA                     i2l6538:
 17569                           
 17570                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.RBIF = 0;
 17571  005BBA  90F2               	bcf	242,0,c	;volatile
 17572  005BBC  0012               	return		;funcret
 17573  005BBE                     __end_of_PIN_MANAGER_IOC:
 17574                           	opt callstack 0
 17575                           
 17576 ;; *************** function _IOCB4_ISR *****************
 17577 ;; Defined at:
 17578 ;;		line 121 in file "mcc_generated_files/pin_manager.c"
 17579 ;; Parameters:    Size  Location     Type
 17580 ;;		None
 17581 ;; Auto vars:     Size  Location     Type
 17582 ;;		None
 17583 ;; Return value:  Size  Location     Type
 17584 ;;                  1    wreg      void 
 17585 ;; Registers used:
 17586 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17587 ;; Tracked objects:
 17588 ;;		On entry : 0/0
 17589 ;;		On exit  : 0/0
 17590 ;;		Unchanged: 0/0
 17591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17596 ;;Total ram usage:        0 bytes
 17597 ;; Hardware stack levels used:    1
 17598 ;; Hardware stack levels required when called:    1
 17599 ;; This function calls:
 17600 ;;		Absolute function
 17601 ;;		_IOCB4_DefaultInterruptHandler
 17602 ;;		_IOCB4_InterruptCall
 17603 ;; This function is called by:
 17604 ;;		_PIN_MANAGER_IOC
 17605 ;; This function uses a non-reentrant model
 17606 ;;
 17607                           
 17608                           	psect	text69
 17609  005ADA                     __ptext69:
 17610                           	opt callstack 0
 17611  005ADA                     _IOCB4_ISR:
 17612                           	opt callstack 18
 17613  005ADA                     
 17614                           ;mcc_generated_files/pin_manager.c: 126:     if(IOCB4_InterruptHandler)
 17615  005ADA  0100               	movlb	0	; () banked
 17616  005ADC  51FE               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 17617  005ADE  11FF               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 17618  005AE0  B4D8               	btfsc	status,2,c
 17619  005AE2  EF75  F02D         	goto	i2u786_41
 17620  005AE6  EF77  F02D         	goto	i2u786_40
 17621  005AEA                     i2u786_41:
 17622  005AEA  EF83  F02D         	goto	i2l93
 17623  005AEE                     i2u786_40:
 17624  005AEE                     
 17625                           ; BSR set to: 0
 17626                           ;mcc_generated_files/pin_manager.c: 127:     {;mcc_generated_files/pin_manager.c: 128:  
      +                                 IOCB4_InterruptHandler();
 17627  005AEE  D802               	call	i2u787_48
 17628  005AF0  EF83  F02D         	goto	i2u787_49
 17629  005AF4                     i2u787_48:
 17630  005AF4  0005               	push	
 17631  005AF6  6EFA               	movwf	pclath,c
 17632  005AF8  51FE               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 17633  005AFA  6EFD               	movwf	tosl,c
 17634  005AFC  51FF               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 17635  005AFE  6EFE               	movwf	tosh,c
 17636  005B00  6AFF               	clrf	tosu,c
 17637  005B02  50FA               	movf	pclath,w,c
 17638  005B04  0012               	return		;indir
 17639  005B06                     i2u787_49:
 17640  005B06                     i2l93:
 17641  005B06  0012               	return		;funcret
 17642  005B08                     __end_of_IOCB4_ISR:
 17643                           	opt callstack 0
 17644                           
 17645 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 17646 ;; Defined at:
 17647 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 17648 ;; Parameters:    Size  Location     Type
 17649 ;;		None
 17650 ;; Auto vars:     Size  Location     Type
 17651 ;;		None
 17652 ;; Return value:  Size  Location     Type
 17653 ;;                  1    wreg      void 
 17654 ;; Registers used:
 17655 ;;		None
 17656 ;; Tracked objects:
 17657 ;;		On entry : 0/0
 17658 ;;		On exit  : 0/0
 17659 ;;		Unchanged: 0/0
 17660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17665 ;;Total ram usage:        0 bytes
 17666 ;; Hardware stack levels used:    1
 17667 ;; This function calls:
 17668 ;;		Nothing
 17669 ;; This function is called by:
 17670 ;;		_PIN_MANAGER_Initialize
 17671 ;;		_IOCB4_ISR
 17672 ;; This function uses a non-reentrant model
 17673 ;;
 17674                           
 17675                           	psect	text70
 17676  005C26                     __ptext70:
 17677                           	opt callstack 0
 17678  005C26                     _IOCB4_DefaultInterruptHandler:
 17679                           	opt callstack 18
 17680  005C26  0012               	return		;funcret
 17681  005C28                     __end_of_IOCB4_DefaultInterruptHandler:
 17682                           	opt callstack 0
 17683                           
 17684 ;; *************** function _IOCB4_InterruptCall *****************
 17685 ;; Defined at:
 17686 ;;		line 18 in file "main.c"
 17687 ;; Parameters:    Size  Location     Type
 17688 ;;		None
 17689 ;; Auto vars:     Size  Location     Type
 17690 ;;		None
 17691 ;; Return value:  Size  Location     Type
 17692 ;;                  1    wreg      void 
 17693 ;; Registers used:
 17694 ;;		wreg, status,2, status,0
 17695 ;; Tracked objects:
 17696 ;;		On entry : 0/0
 17697 ;;		On exit  : 0/0
 17698 ;;		Unchanged: 0/0
 17699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17702 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17703 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17704 ;;Total ram usage:        1 bytes
 17705 ;; Hardware stack levels used:    1
 17706 ;; This function calls:
 17707 ;;		Nothing
 17708 ;; This function is called by:
 17709 ;;		_main
 17710 ;;		_IOCB4_ISR
 17711 ;; This function uses a non-reentrant model
 17712 ;;
 17713                           
 17714                           	psect	text71
 17715  0055BA                     __ptext71:
 17716                           	opt callstack 0
 17717  0055BA                     _IOCB4_InterruptCall:
 17718                           	opt callstack 18
 17719  0055BA                     
 17720                           ;main.c: 20:     if(!PORTBbits.RB4){
 17721  0055BA  B881               	btfsc	129,4,c	;volatile
 17722  0055BC  EFE2  F02A         	goto	i2u780_41
 17723  0055C0  EFE4  F02A         	goto	i2u780_40
 17724  0055C4                     i2u780_41:
 17725  0055C4  EF0B  F02B         	goto	i2l282
 17726  0055C8                     i2u780_40:
 17727  0055C8  BC89               	btfsc	137,6,c	;volatile
 17728  0055CA  EFE9  F02A         	goto	i2u781_41
 17729  0055CE  EFEC  F02A         	goto	i2u781_40
 17730  0055D2                     i2u781_41:
 17731  0055D2  0E01               	movlw	1
 17732  0055D4  EFED  F02A         	goto	i2u781_46
 17733  0055D8                     i2u781_40:
 17734  0055D8  0E00               	movlw	0
 17735  0055DA                     i2u781_46:
 17736  0055DA  0AFF               	xorlw	255
 17737  0055DC  6E01               	movwf	??_IOCB4_InterruptCall^0,c
 17738  0055DE  3A01               	swapf	??_IOCB4_InterruptCall^0,f,c
 17739  0055E0  4601               	rlncf	??_IOCB4_InterruptCall^0,f,c
 17740  0055E2  4601               	rlncf	??_IOCB4_InterruptCall^0,f,c
 17741  0055E4  5089               	movf	137,w,c	;volatile
 17742  0055E6  1801               	xorwf	??_IOCB4_InterruptCall^0,w,c
 17743  0055E8  0BBF               	andlw	-65
 17744  0055EA  1801               	xorwf	??_IOCB4_InterruptCall^0,w,c
 17745  0055EC  6E89               	movwf	137,c	;volatile
 17746  0055EE                     
 17747                           ;main.c: 22:         if(!botao){
 17748  0055EE  0100               	movlb	0	; () banked
 17749  0055F0  51F6               	movf	_botao& (0+255),w,b
 17750  0055F2  11F7               	iorwf	(_botao+1)& (0+255),w,b
 17751  0055F4  A4D8               	btfss	status,2,c
 17752  0055F6  EFFF  F02A         	goto	i2u782_41
 17753  0055FA  EF01  F02B         	goto	i2u782_40
 17754  0055FE                     i2u782_41:
 17755  0055FE  EF07  F02B         	goto	i2l6366
 17756  005602                     i2u782_40:
 17757  005602                     
 17758                           ; BSR set to: 0
 17759                           ;main.c: 23:             botao=1;
 17760  005602  0E00               	movlw	0
 17761  005604  6FF7               	movwf	(_botao+1)& (0+255),b
 17762  005606  0E01               	movlw	1
 17763  005608  6FF6               	movwf	_botao& (0+255),b
 17764                           
 17765                           ;main.c: 24:         }
 17766  00560A  EF0B  F02B         	goto	i2l282
 17767  00560E                     i2l6366:
 17768                           
 17769                           ; BSR set to: 0
 17770                           ;main.c: 26:             botao=0;
 17771  00560E  0E00               	movlw	0
 17772  005610  6FF7               	movwf	(_botao+1)& (0+255),b
 17773  005612  0E00               	movlw	0
 17774  005614  6FF6               	movwf	_botao& (0+255),b
 17775  005616                     i2l282:
 17776  005616  0012               	return		;funcret
 17777  005618                     __end_of_IOCB4_InterruptCall:
 17778                           	opt callstack 0
 17779                           
 17780                           	psect	text72
 17781  000000                     __ptext72:
 17782                           	opt callstack 0
 17783  000000                     
 17784                           	psect	rparam
 17785  0000                     
 17786                           	psect	temp
 17787  00005A                     btemp:
 17788                           	opt callstack 0
 17789  00005A                     	ds	1
 17790  0000                     int$flags	set	btemp
 17791  0000                     wtemp8	set	btemp+1
 17792  0000                     ttemp5	set	btemp+1
 17793  0000                     ttemp6	set	btemp+4
 17794  0000                     ttemp7	set	btemp+8
 17795                           tosu	equ	0xFFF
 17796                           tosh	equ	0xFFE
 17797                           tosl	equ	0xFFD
 17798                           stkptr	equ	0xFFC
 17799                           pclatu	equ	0xFFB
 17800                           pclath	equ	0xFFA
 17801                           pcl	equ	0xFF9
 17802                           tblptru	equ	0xFF8
 17803                           tblptrh	equ	0xFF7
 17804                           tblptrl	equ	0xFF6
 17805                           tablat	equ	0xFF5
 17806                           prodh	equ	0xFF4
 17807                           prodl	equ	0xFF3
 17808                           indf0	equ	0xFEF
 17809                           postinc0	equ	0xFEE
 17810                           postdec0	equ	0xFED
 17811                           preinc0	equ	0xFEC
 17812                           plusw0	equ	0xFEB
 17813                           fsr0h	equ	0xFEA
 17814                           fsr0l	equ	0xFE9
 17815                           wreg	equ	0xFE8
 17816                           indf1	equ	0xFE7
 17817                           postinc1	equ	0xFE6
 17818                           postdec1	equ	0xFE5
 17819                           preinc1	equ	0xFE4
 17820                           plusw1	equ	0xFE3
 17821                           fsr1h	equ	0xFE2
 17822                           fsr1l	equ	0xFE1
 17823                           bsr	equ	0xFE0
 17824                           indf2	equ	0xFDF
 17825                           postinc2	equ	0xFDE
 17826                           postdec2	equ	0xFDD
 17827                           preinc2	equ	0xFDC
 17828                           plusw2	equ	0xFDB
 17829                           fsr2h	equ	0xFDA
 17830                           fsr2l	equ	0xFD9
 17831                           status	equ	0xFD8


Data Sizes:
    Strings     97
    Constant    3536
    Data        7
    BSS         214
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     87      89
    BANK0           160    124     160
    BANK1           256      4     191
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[17]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> string_temp(BANK1[100]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> string_temp(BANK1[100]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_112(CODE[3]), STR_108(CODE[3]), STR_103(CODE[3]), STR_99(CODE[3]), 
		 -> STR_94(CODE[4]), STR_90(CODE[4]), STR_85(CODE[3]), STR_80(CODE[3]), 
		 -> STR_75(CODE[4]), STR_70(CODE[3]), STR_65(CODE[3]), STR_60(CODE[4]), 
		 -> STR_55(CODE[3]), STR_50(CODE[3]), STR_45(CODE[4]), STR_40(CODE[3]), 
		 -> STR_35(CODE[3]), STR_31(CODE[3]), STR_26(CODE[3]), STR_22(CODE[3]), 
		 -> STR_17(CODE[4]), STR_13(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_112(CODE[3]), STR_108(CODE[3]), STR_103(CODE[3]), STR_99(CODE[3]), 
		 -> STR_94(CODE[4]), STR_90(CODE[4]), STR_85(CODE[3]), STR_80(CODE[3]), 
		 -> STR_75(CODE[4]), STR_70(CODE[3]), STR_65(CODE[3]), STR_60(CODE[4]), 
		 -> STR_55(CODE[3]), STR_50(CODE[3]), STR_45(CODE[4]), STR_40(CODE[3]), 
		 -> STR_35(CODE[3]), STR_31(CODE[3]), STR_26(CODE[3]), STR_22(CODE[3]), 
		 -> STR_17(CODE[4]), STR_13(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 17
		 -> vfpfcnvrt@ct(BANK0[3]), STR_2(CODE[17]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 17
		 -> vfpfcnvrt@ct(BANK0[3]), STR_2(CODE[17]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[17]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> string_temp(BANK1[100]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    S2011_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> string_temp(BANK1[100]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> string_temp(BANK1[100]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[17]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[17]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK0[2]), stoa@nuls(COMRAM[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    lcd_draw_string@pS	PTR const unsigned char  size(2) Largest target is 100
		 -> string_temp(BANK1[100]), STR_1(CODE[12]), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_InterruptCall(), IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_InterruptCall(), Absolute function(), IOCB4_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _efgtoa->___flge
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _lcd_init->_lcd_fill
    _lcd_fill->_lcd_set_cursor
    _lcd_draw_string->_lcd_draw_char
    _lcd_draw_char->_lcd_set_cursor
    _lcd_set_cursor->_lcd_set_cursor_x
    _lcd_set_cursor->_lcd_set_cursor_y
    _lcd_set_cursor_y->_lcd_send
    _lcd_set_cursor_x->_lcd_send
    _lcd_draw_pixel->_lcd_send
    _lcd_send->_SPI_ExchangeByte
    _SYSTEM_Initialize->_TMR1_Initialize
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _IOCB4_ISR->_IOCB4_InterruptCall

Critical Paths under _main in BANK0

    _main->_snprintf
    _snprintf->_vsnprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_snprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  158940
                  _ADC_GetConversion
          _IOCB4_SetInterruptHandler
                           _SPI_Open
                  _SYSTEM_Initialize
                            ___flmul
                           ___xxtofl
                    _lcd_draw_string
                           _lcd_init
                           _snprintf
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            14     4     10   97768
                                            114 BANK0     10     0     10
                                              0 BANK1      4     4      0
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   97193
                                             92 BANK0     22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   96156
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   95329
                                             69 COMRAM    10     4      6
                                             56 BANK0     36    36      0
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _otoa
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11   10037
                                             30 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                              9 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    8429
                                             30 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                              3 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                              3 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    6265
                                              3 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2732
                                             12 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    7701
                                             30 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   31927
                                             54 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1232
                                              9 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     641
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              3 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             28 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     517
                                              3 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4007
                                             42 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3442
                                              3 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3593
                                             17 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     806
                                             42 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2723
                                              3 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    9283
                                             30 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             21 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              3 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              3 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    6756
                                             30 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    6477
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     310
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2077
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1577
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2195
                                             10 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              3 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     371
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     912
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0   31303
                           _lcd_fill
                           _lcd_send
                            _msDelay
 ---------------------------------------------------------------------------------
 (2) _msDelay                                              3     3      0      46
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _lcd_fill                                             6     4      2   23819
                                             12 COMRAM     6     4      2
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_draw_string                                     18     8     10   25420
                                             34 COMRAM    18     8     10
                      _lcd_draw_char
 ---------------------------------------------------------------------------------
 (2) _lcd_draw_char                                       22    12     10   24434
                                             12 COMRAM    22    12     10
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       4     0      4   15812
                                              8 COMRAM     4     0      4
                   _lcd_set_cursor_x
                   _lcd_set_cursor_y
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_y                                     2     0      2    7580
                                              6 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_x                                     2     0      2    7580
                                              6 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_draw_pixel                                       2     0      2    7862
                                              6 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_send                                             2     1      1    7438
                                              4 COMRAM     2     1      1
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI_ExchangeByte                                     1     1      0      22
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
                     _ADC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     174
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Open                                             2     2      0      88
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      22
                                              3 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          2     2      0       0
                                              1 COMRAM     2     2      0
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
      _IOCB4_DefaultInterruptHandler *
                _IOCB4_InterruptCall *
 ---------------------------------------------------------------------------------
 (13) _IOCB4_InterruptCall                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _IOCB4_SetInterruptHandler
   _SPI_Open
   _SYSTEM_Initialize
     _ADC_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI_Initialize
     _TMR1_Initialize
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _lcd_draw_string
     _lcd_draw_char
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
   _lcd_init
     _lcd_fill
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
     _lcd_send
       _SPI_ExchangeByte
     _msDelay
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _IOCB4_DefaultInterruptHandler *
       _IOCB4_InterruptCall *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      4      BF       8       74.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7C      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     57      59       1       94.7%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B8       6        0.0%
DATA                 0      0     1B8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Nov 04 16:08:24 2020

                           _SPI_Initialize 5BEA                               ___fldiv@aexp 001C  
                             ___fldiv@bexp 001B                               ___fldiv@sign 0014  
                              _SSPSTATbits 000FC7                                         l23 5B8C  
                                       l26 5C0C                                         l35 5C22  
                                       l85 5826                                         l96 5C16  
                             ___awdiv@sign 0009                        ___wmul@multiplicand 0006  
       __size_of_IOCB4_SetInterruptHandler 000A                                __CFG_BORV$3 000000  
              __end_of_IOCB4_InterruptCall 5618                 ?_IOCB4_SetInterruptHandler 0004  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                             __CFG_CP2$OFF 000000                               __CFG_CP3$OFF 000000  
                                      l120 5BFA                                        l130 5B60  
                                      l124 530C                                        l132 5B6E  
                                      l133 5B72                                        l216 5B32  
                                      l321 5AD8                                        l330 30DE  
                                      l333 5BA4                                        l350 5BD2  
                                      l191 5942                                        l343 5754  
                                      l423 447C                                        l432 485A  
                                      l194 5962                                        l354 5438  
                                      l179 5BE8                                        l347 570C  
                                      l339 58AC                                        l517 33C4  
                                      l613 3AF0                                        l622 3C40  
                                      l535 20D4                                        l615 3AF8  
                                      l631 41FE                                        l624 3CA6  
                                      l553 1912                                        l633 4206  
                                      l482 50AC                                        l642 42B0  
                                      l706 0138                                        l491 5672  
                                      l643 42FA                                        l731 1524  
                                      l484 50E8                                        l652 38EC  
                                      l901 417C                                        l662 3AB6  
                                      l654 38F4                                        l479 506A  
                                      l647 4302                                        l751 093E  
                                      l497 3180                                        l914 45E0  
                                      l690 363C                                        l499 3188  
                                      l579 1CAA                                        l667 33FE  
                                      l692 36A0                                        l676 349E  
                                      l669 3406                                        l783 5494  
                                      l784 549C                                        l787 5B58  
                             __CFG_CPB$OFF 000000                               __CFG_CPD$OFF 000000  
                          _timer1ReloadVal 00FC                                        _abs 58AE  
                                      _pad 5024                               ___awmod@sign 0009  
                                      tosl 000FFD                                        wreg 000FE8  
                             ___flmul@aexp 001F                               ___flmul@bexp 0024  
                             ___flmul@sign 001E                               ___flmul@temp 0029  
                             ___flmul@prod 0025                            ?_lcd_set_cursor 0009  
                             ___fltol@exp1 000D                         __size_of_IOCB4_ISR 002E  
                                     l1031 525C                                       l1018 51AC  
                                     ?_abs 0016                                       l1052 4C54  
                                     l1061 5A0A                                       l1046 53B6  
                                     l1232 4E88                                       l1057 4C9A  
                                     l1401 265A                                       l1225 4E68  
                                     l1410 28C8                                       l1242 4F58  
                                     l1411 28B6                                       l1315 22C4  
                                     l1235 4F38                                       l1332 23DE  
                                     l1324 2594                                       l1316 22B2  
                                     l1084 4B96                                       l1405 29BE  
                                     l1341 24AE                                       l1317 2278  
                                     l1342 249C                                       l1504 3FEC  
                                     l1408 2850                                       l1513 38B2  
                                     l1442 3CFE                                       l1418 2980  
                                     l1602 54F4                                       l1507 3FF4  
                                     l1371 2BB8                                       l1523 5928  
                                     l1380 2BFE                                       l1516 37F6  
                                     l1620 555A                                       l1445 3E5A  
                                     l1357 57E0                                       l1382 2C76  
                                     l1374 2B7C                                       l1383 2C64  
                                     l1543 59D2                                       l1607 54FC  
                                     l1615 5552                                       l1456 3DF2  
                                     l1449 3D96                                       l1529 5A42  
                                     l1537 56C4                                       l1473 58E4  
                                     l1369 2D58                                       l1626 599A  
                                     l1642 4A70                                       l1476 58EC  
                                     l1468 4D98                                       l1637 4A90  
                                     l1558 5022                                       l1566 586A  
                                     l1582 55B8                                       l1592 4980  
                                     l1576 5AAA                                       l1569 5C24  
                                     l1588 5A78                                       l5330 5B9A  
                                     l5332 5B9C                                       l7100 599C  
                                     l5334 5BA2                                       l7110 20F2  
                                     ?_pad 0014                                       l6400 57E2  
                                     l5328 5B90                                       l8000 562C  
                                     l7200 22A6                                       l7112 2102  
                                     l7120 212C                                       l7104 20D6  
                                     l6410 5818                                       l6402 57FE  
                                     l8002 5638                                       l7210 22F6  
                                     l7202 22B0                                       l7130 215C  
                                     l7122 213C                                       l7114 2112  
                                     l7106 20E2                                       l6412 5824  
                                     l6404 5804                                       l6420 5B16  
                                     l8004 5644                                       l8020 3156  
                                     l8012 30E0                                       l7300 2582  
                                     l7220 2332                                       l7212 2306  
                                     l7204 22D2                                       l7140 219C  
                                     l7132 216A                                       l7124 2142  
                                     l7116 2122                                       l7108 20F0  
                                     l8100 15D6                                       l6414 5BFC  
                                     l6406 5814                                       l6422 5B2E  
                                     l4638 5B5C                                       l6430 5AAE  
                                     l7070 4F6C                                       l7310 5024  
                                     l8006 5648                                       l8030 31B2  
                                     l8022 315A                                       l8014 3100  
                                     l7302 2584                                       l7230 2378  
                                     l7222 2340                                       l7214 2314  
                                     l7206 22E2                                       l7150 21D6  
                                     l7142 219E                                       l7134 216C  
                                     l7126 2154                                       l7118 2124  
                                     l8110 163C                                       l8102 15DA  
                                     l6424 5BD4                                       l6408 5816  
                                     l6416 5B08                                       l6440 53C8  
                                     l6432 5AB6                                       l6600 2DC4  
                                     l7072 4F7E                                       l7320 5076  
                                     l7312 5034                                       l8008 564E  
                                     l8040 3252                                       l8032 31B8  
                                     l8024 3174                                       l8016 3128  
                                     l7240 23F4                                       l7232 23AC  
                                     l7224 2342                                       l7216 2322  
                                     l7160 21EA                                       l7152 21DA  
                                     l7136 217C                                       l7144 21A6  
                                     l7128 2156                                       l8200 19F0  
                                     l8112 164E                                       l8104 15E0  
                                     l7400 58EE                                       l9000 5450  
                                     l6418 5B14                                       l6530 5B84  
                                     l6522 5B74                                       l6370 5888  
                                     l6450 541E                                       l6434 5AC4  
                                     l6610 2DF6                                       l6602 2DCE  
                                     l7074 4F88                                       l7082 5828  
                                     l7090 5A44                                       l7322 508A  
                                     l7314 5048                                       l8050 32FA  
                                     l8042 3258                                       l8034 31C0  
                                     l8026 3190                                       l8018 3148  
                                     l7250 2430                                       l7242 2404  
                                     l7234 23AE                                       l7226 234C  
                                     l7218 232E                                       l7170 21FE  
                                     l7162 21EE                                       l7154 21DE  
                                     l7146 21B6                                       l7138 218C  
                                     l8210 1A38                                       l8202 19FE  
                                     l8130 1722                                       l8114 166A  
                                     l8106 1606                                       l8122 16B4  
                                     l7306 5964                                       l7410 5546  
                                     l9002 5476                                       l6540 5260  
                                     l6532 5B88                                       l6524 5B78  
                                     l6380 5BBE                                       l6372 58A4  
                                     l6460 4350                                       l6444 53F0  
                                     l6436 5AC6                                       l6700 2FB8  
                                     l6620 2E28                                       l6612 2E00  
                                     l6604 2DD8                                       l7420 5B50  
                                     l7076 4FA6                                       l7068 4F5A  
                                     l7084 5834                                       l7092 5A50  
                                     l7324 508E                                       l7316 5056  
                                     l7500 45C0                                       l7332 58AE  
                                     l8060 3360                                       l8052 3314  
                                     l8044 325E                                       l8036 31CA  
                                     l8028 31A2                                       l7260 245C  
                                     l7252 2432                                       l7236 23BE  
                                     l7228 2352                                       l7180 2212  
                                     l7172 2202                                       l7164 21F2  
                                     l7156 21E2                                       l7148 21C8  
                                     l7340 4CFA                                       l8300 1EEC  
                                     l8220 1B4C                                       l8212 1A48  
                                     l8204 1A16                                       l8132 173E  
                                     l8124 16DA                                       l8140 175A  
                                     l8116 1682                                       l7404 54FE  
                                     l9020 49EC                                       l9012 49A6  
                                     l9004 4982                                       l6550 530A  
                                     l6542 526E                                       l6358 5C0E  
                                     l6526 5B7C                                       l6446 53FC  
                                     l6438 53B8                                       l6710 2FEA  
                                     l6702 2FC2                                       l6630 2E5A  
                                     l6622 2E32                                       l6614 2E0A  
                                     l6606 2DE2                                       l7414 5A0C  
                                     l7078 4FDC                                       l7086 5846  
                                     l7094 5A54                                       l7326 50BC  
                                     l7318 5062                                       l7430 4028  
                                     l7334 58C8                                       l8062 3366  
                                     l8070 339C                                       l8054 332E  
                                     l8038 31D0                                       l8046 32C2  
                                     l7510 29DC                                       l7270 2494  
                                     l7254 2440                                       l7246 2418  
                                     l7262 245E                                       l7238 23CE  
                                     l7190 2270                                       l7174 2206  
                                     l7166 21F6                                       l7158 21E6  
                                     l7182 2216                                       l7350 4D4C  
                                     l7342 4D22                                       l8310 1F30  
                                     l8302 1EFA                                       l8230 1BEC  
                                     l8214 1A5C                                       l8222 1B52  
                                     l8206 1A28                                       l8150 17E4  
                                     l8142 1774                                       l8118 168C  
                                     l9030 4A78                                       l9022 4A10  
                                     l9014 49C4                                       l9006 4996  
                                     l6560 5950                                       l6544 52AE  
                                     l6392 5C20                                       l6528 5B80  
                                     l6376 58AA                                       l6368 586C  
                                     l6480 4420                                       l6472 4358  
                                     l6456 4304                                       l6448 5416  
                                     l6720 301C                                       l6712 2FF4  
                                     l6704 2FCC                                       l6640 2E8C  
                                     l6632 2E64                                       l6624 2E3C  
                                     l6616 2E14                                       l6608 2DEC  
                                     l7088 584A                                       l7096 5A6C  
                                     l7328 50D0                                       l7440 406A  
                                     l7432 402C                                       l7424 3FF6  
                                     l8064 3378                                       l8048 32DC  
                                     l8056 333E                                       l7600 2C1C  
                                     l7512 29EC                                       l7520 2A16  
                                     l7504 29C0                                       l7280 2512  
                                     l7256 2448                                       l7248 2422  
                                     l7264 246C                                       l7192 2286  
                                     l7184 221A                                       l7176 220A  
                                     l7168 21FA                                       l7344 4D2E  
                                     l7336 4C9C                                       l7360 556C  
                                     l8320 1F66                                       l8312 1F38  
                                     l8304 1F0A                                       l8240 1C82  
                                     l8232 1C1E                                       l8224 1B70  
                                     l8216 1AC0                                       l8208 1A30  
                                     l8160 18BC                                       l8152 183E  
                                     l8128 1710                                       l8080 154E  
                                     l8400 3BDE                                       l7408 5534  
                                     l9024 4A24                                       l9032 4A88  
                                     l9016 49D0                                       l9008 499E  
                                     l6554 592C                                       l6546 52B2  
                                     l6394 5BEA                                       l6482 4430  
                                     l6474 4402                                       l6466 4354  
                                     l6458 430C                                       l6730 304E  
                                     l6722 3026                                       l6714 2FFE  
                                     l6706 2FD6                                       l6650 2EBE  
                                     l6642 2E96                                       l6634 2E6E  
                                     l6626 2E46                                       l6618 2E1E  
                                     l7418 5B34                                       l7450 40C4  
                                     l7442 4088                                       l7434 403A  
                                     l7426 3FFA                                       l8066 3384  
                                     l8058 3350                                       l7610 2C86  
                                     l7602 2C20                                       l7530 2A42  
                                     l7522 2A26                                       l7514 29FC  
                                     l7506 29CC                                       l7290 2558  
                                     l7274 24BE                                       l7282 2514  
                                     l7266 2470                                       l7258 244C  
                                     l7194 2292                                       l7186 2244  
                                     l7178 220E                                       l7354 4D90  
                                     l7338 4CBC                                       l7362 549E  
                                     l8330 1FC2                                       l8322 1F6E  
                                     l8314 1F48                                       l8306 1F0E  
                                     l8250 1D3A                                       l8242 1C96  
                                     l8234 1C2E                                       l8226 1BA4  
                                     l8218 1B18                                       l8170 1906  
                                     l8162 18C0                                       l8154 1872  
                                     l8146 17AA                                       l8090 159E  
                                     l8082 1556                                       l8074 1526  
                                     l8410 3C62                                       l8402 3BFC  
                                     l9026 4A32                                       l9018 49DC  
                                     l9050 45FC                                       l9042 45E2  
                                     l6556 593E                                       l6548 52D6  
                                     l6396 5BF6                                       l6820 3CAA  
                                     l6484 4432                                       l6476 4412  
                                     l6740 3080                                       l6732 3058  
                                     l6724 3030                                       l6716 3008  
                                     l6708 2FE0                                       l6660 2EF0  
                                     l6652 2EC8                                       l6644 2EA0  
                                     l6636 2E78                                       l6628 2E50  
                                     l6580 2D64                                       l7452 40F2  
                                     l7444 4090                                       l7460 412C  
                                     l7436 405A                                       l7428 4008  
                                     l8068 338C                                       l7620 2CE8  
                                     l7612 2C92                                       l7604 2C2E  
                                     l7532 2A52                                       l7540 2A7C  
                                     l7524 2A2C                                       l7516 2A0C  
                                     l7508 29DA                                       l7700 2710  
                                     l7292 2566                                       l7284 2524  
                                     l7276 24CA                                       l7268 247E  
                                     l7196 2296                                       l7188 2260  
                                     l7348 4D3A                                       l7380 373A  
                                     l7372 36A2                                       l8340 2002  
                                     l8332 1FCA                                       l8324 1F7A  
                                     l8316 1F50                                       l8308 1F1E  
                                     l8260 1D86                                       l8252 1D4C  
                                     l8244 1CA2                                       l8236 1C3E  
                                     l8228 1BD6                                       l8180 1942  
                                     l8164 18D2                                       l8172 191E  
                                     l8156 187A                                       l8148 17DE  
                                     l8092 15AC                                       l8084 157A  
                                     l8076 1530                                       l8412 3C68  
                                     l8404 3C16                                       l8420 417E  
                                     l8500 33D4                                       l9116 00F8  
                                     l9028 4A60                                       l9036 5A7A  
                                     l9060 4696                                       l9052 45FE  
                                     l9044 45E6                                       l6558 5940  
                                     l6398 5BF8                                       l6822 3CBA  
                                     l6486 4442                                       l6478 441E  
                                     l6750 30B2                                       l6742 308A  
                                     l6734 3062                                       l6726 303A  
                                     l6718 3012                                       l6670 2F22  
                                     l6662 2EFA                                       l6654 2ED2  
                                     l6646 2EAA                                       l6638 2E82  
                                     l6590 2D92                                       l6582 2D6A  
                                     l9118 3F1E                                       l7462 413C  
                                     l7454 4112                                       l7446 40A4  
                                     l7438 405E                                       l7470 4482  
                                     l7630 2D46                                       l7622 2CFE  
                                     l7614 2CA0                                       l7606 2C5C  
                                     l7550 2ABE                                       l7542 2A8C  
                                     l7534 2A62                                       l7526 2A32  
                                     l7518 2A0E                                       l7710 2766  
                                     l7702 2720                                       l7294 256C  
                                     l7286 2534                                       l7278 24D8  
                                     l7198 22A4                                       l7390 3856  
                                     l7374 36C2                                       l7358 555C  
                                     l7366 54D4                                       l8350 203E  
                                     l8342 2014                                       l8326 1F80  
                                     l8334 1FD0                                       l8318 1F5E  
                                     l8270 1DBA                                       l8262 1D94  
                                     l8254 1D5E                                       l8246 1CC6  
                                     l8238 1C72                                       l8190 19A8  
                                     l8182 195E                                       l8166 18E4  
                                     l8158 18AC                                       l8094 15BE  
                                     l8086 1584                                       l8078 1540  
                                     l8414 3C78                                       l8406 3C30  
                                     l8430 41C6                                       l8422 4190  
                                     l8510 3446                                       l8502 33D8  
                                     l9038 5A84                                       l9062 46CA  
                                     l9054 4628                                       l9046 45EC  
                                     l6840 3D80                                       l6832 3D38  
                                     l6824 3CC8                                       l6488 4444  
                                     l6760 472E                                       l6752 30C2  
                                     l6744 3094                                       l6736 306C  
                                     l6728 3044                                       l6680 2F54  
                                     l6672 2F2C                                       l6664 2F04  
                                     l6656 2EDC                                       l6648 2EB4  
                                     l6592 2D9C                                       l6584 2D74  
                                     l8600 3FD0                                       l7464 415C  
                                     l7456 4114                                       l7448 40B2  
                                     l7480 44E2                                       l7472 4490  
                                     l7800 514C                                       l7632 2D4C  
                                     l7624 2D18                                       l7616 2CCA  
                                     l7544 2AA2                                       l7536 2A72  
                                     l7528 2A40                                       l7720 280A  
                                     l7712 2782                                       l7704 272C  
                                     l7296 256E                                       l7288 2554  
                                     l7392 386A                                       l7384 37AA  
                                     l7376 3718                                       l7368 54E6  
                                     l8360 2096                                       l8352 2044  
                                     l8344 2020                                       l8336 1FE2  
                                     l8328 1FA6                                       l8280 1DEC  
                                     l8272 1DCA                                       l8264 1DA4  
                                     l8256 1D6C                                       l8248 1D2A  
                                     l8192 19BA                                       l8184 1994  
                                     l8168 18EC                                       l8096 15CA  
                                     l8088 158C                                       l8408 3C50  
                                     l8416 3C7E                                       l8440 423E  
                                     l8432 41CE                                       l8424 4198  
                                     l8520 3482                                       l8512 344E  
                                     l8504 33F2                                       l9064 46F8  
                                     l9056 463C                                       l9048 45F0  
                                     l6850 3E00                                       l6842 3D8C  
                                     l6834 3D40                                       l6826 3D0E  
                                     l5970 572A                                       l6770 47F8  
                                     l6762 4742                                       l6754 30CC  
                                     l6746 309E                                       l6738 3076  
                                     l6690 2F86                                       l6682 2F5E  
                                     l6674 2F36                                       l6666 2F0E  
                                     l6658 2EE6                                       l6594 2DA6  
                                     l6586 2D7E                                       l6578 2D5A  
                                     l7458 4126                                       l7490 4558  
                                     l7482 4500                                       l7474 44B0  
                                     l7810 5180                                       l7802 515A  
                                     l7634 2D4E                                       l7626 2D34  
                                     l7618 2CCE                                       l7570 2B40  
                                     l7562 2AF6                                       l7546 2AB2  
                                     l7554 2AD2                                       l7538 2A74  
                                     l7730 2860                                       l7722 2818  
                                     l7714 278E                                       l7706 273C  
                                     l7650 25C2                                       l7642 2596  
                                     l7298 2574                                       l7394 3892  
                                     l7386 37E6                                       l7378 372C  
                                     l8362 209E                                       l8346 2028  
                                     l8338 1FFC                                       l8290 1E94  
                                     l8282 1DFE                                       l8274 1DCE  
                                     l8266 1DA8                                       l8258 1D74  
                                     l8194 19CC                                       l8186 199C  
                                     l8178 1930                                       l8098 15D2  
                                     l8450 428E                                       l8442 4242  
                                     l8434 41DC                                       l8426 41AA  
                                     l8522 3492                                       l8514 3458  
                                     l8506 341E                                       l9058 464A  
                                     l6860 3E48                                       l6852 3E02  
                                     l6844 3DC8                                       l6836 3D4C  
                                     l6828 3D24                                       l5972 5752  
                                     l5964 570E                                       l6772 4824  
                                     l6764 477C                                       l6756 30D2  
                                     l6748 30A8                                       l6692 2F90  
                                     l6684 2F68                                       l6676 2F40  
                                     l6668 2F18                                       l6596 2DB0  
                                     l6588 2D88                                       l7492 4578  
                                     l7484 4508                                       l7476 44B4  
                                     l7468 447E                                       l7812 5186  
                                     l7804 5160                                       l7628 2D38  
                                     l7580 2B86                                       l7572 2B48  
                                     l7564 2B10                                       l7556 2AE2  
                                     l7548 2ABA                                       l7732 286E  
                                     l7724 2836                                       l7716 27AA  
                                     l7708 2756                                       l7660 25FE  
                                     l7652 25D2                                       l7644 25A2  
                                     l7900 59FA                                       l7396 38A2  
                                     l7388 381A                                       l8364 20AE  
                                     l8356 2078                                       l8348 2038  
                                     l8292 1E9C                                       l8284 1E02  
                                     l8276 1DD4                                       l8268 1DAE  
                                     l8196 19DA                                       l8188 19A0  
                                     l8380 3B20                                       l8372 3AB8  
                                     l8460 42DC                                       l8452 4292  
                                     l8444 4260                                       l8428 41B2  
                                     l8620 4902                                       l8612 4892  
                                     l8540 355A                                       l8532 351E  
                                     l8516 345E                                       l8508 3426  
                                     l6862 3E4A                                       l6854 3E06  
                                     l6846 3DD4                                       l6838 3D7E  
                                     l5966 5724                                       l5982 56E2  
                                     l6766 4780                                       l6774 4828  
                                     l6758 472A                                       l6694 2F9A  
                                     l6686 2F72                                       l6678 2F4A  
                                     l6598 2DBA                                       l7494 458A  
                                     l7486 451C                                       l7478 44C2  
                                     l7806 5176                                       l7814 518C  
                                     l7830 51CC                                       l7822 51AE  
                                     l7590 2BDE                                       l7582 2BA4  
                                     l7574 2B58                                       l7566 2B20  
                                     l7558 2AE2                                       l7742 28D8  
                                     l7750 2920                                       l7734 2872  
                                     l7726 2840                                       l7718 27D4  
                                     l7670 2634                                       l7662 2604  
                                     l7654 25E2                                       l7646 25B0  
                                     l7910 4ABC                                       l8366 20B4  
                                     l8358 208A                                       l8278 1DDA  
                                     l8286 1E08                                       l8294 1EA0  
                                     l8198 19DE                                       l8390 3B48  
                                     l8382 3B28                                       l8374 3AC6  
                                     l8446 426C                                       l8438 422A  
                                     l8622 4944                                       l8614 48A0  
                                     l8606 485C                                       l8470 391C  
                                     l8462 38B4                                       l8550 3612  
                                     l8542 3560                                       l8534 3530  
                                     l8526 34D2                                       l8518 3466  
                                     l8710 03D8                                       l8702 035E  
                                     l8630 0076                                       l6856 3E2A  
                                     l6848 3DE2                                       l5984 570A  
                                     l5976 56C6                                       l6768 47CC  
                                     l6696 2FA4                                       l6688 2F7C  
                                     l7488 452A                                       l7496 4590  
                                     l7816 519C                                       l7808 517E  
                                     l7840 5204                                       l7832 51DA  
                                     l7824 51B2                                       l7592 2BE4  
                                     l7584 2BA6                                       l7576 2B6C  
                                     l7568 2B30                                       l7760 2994  
                                     l7752 293A                                       l7744 28E4  
                                     l7736 2880                                       l7728 284E  
                                     l7672 2644                                       l7664 2612  
                                     l7656 25E8                                       l7648 25B2  
                                     l7920 4B0A                                       l7912 4AE6  
                                     l7904 4A92                                       l8296 1EBE  
                                     l8288 1E60                                       l8392 3B5A  
                                     l8384 3B2E                                       l8376 3ACA  
                                     l8456 42C4                                       l8448 428A  
                                     l8616 48D2                                       l8608 4886  
                                     l8480 39B0                                       l8472 3924  
                                     l8464 38C2                                       l8560 3678  
                                     l8552 362C                                       l8528 34E4  
                                     l8536 3544                                       l8544 35BE  
                                     l8800 0A3E                                       l8712 03E8  
                                     l8704 0370                                       l8640 00AC  
                                     l8632 0088                                       l6858 3E3A  
                                     l5978 56DC                                       l6698 2FAE  
                                     l8570 3E78                                       l7498 45A0  
                                     l7818 51A4                                       l7842 5212  
                                     l7850 523C                                       l7834 51E2  
                                     l7826 51C0                                       l7594 2BEE  
                                     l7586 2BB6                                       l7578 2B7A  
                                     l7762 29A2                                       l7754 294E  
                                     l7746 28F2                                       l7738 28AE  
                                     l7690 26C6                                       l7682 268E  
                                     l7674 264A                                       l7666 2614  
                                     l7658 25F8                                       l7930 4B36  
                                     l7914 4AE8                                       l7906 4AA8  
                                     l8298 1EDA                                       l8394 3B60  
                                     l8386 3B3A                                       l8378 3AE4  
                                     l8458 42D8                                       l8618 48F0  
                                     l8490 3A64                                       l8482 39B6  
                                     l8474 392E                                       l8466 38C6  
                                     l8554 364C                                       l8546 35DA  
                                     l8538 3554                                       l8722 0490  
                                     l8714 041C                                       l8706 0394  
                                     l8634 008C                                       l8626 0042  
                                     l8580 3ED8                                       l8572 3E96  
                                     l8564 3E5C                                       l7780 50EE  
                                     l7852 524C                                       l7844 5228  
                                     l7836 51F4                                       l7828 51C8  
                                     l7596 2BFC                                       l7588 2BC8  
                                     l7860 533C                                       l7764 29A4  
                                     l7756 2968                                       l7748 291C  
                                     l7692 26DE                                       l7684 269A  
                                     l7676 266A                                       l7668 2624  
                                     l7772 579C                                       l7940 4B66  
                                     l7916 4AF8                                       l8396 3B66  
                                     l8388 3B40                                       l8492 3A7E  
                                     l8476 3934                                       l8484 3A1A  
                                     l8468 38E0                                       l8556 3652  
                                     l8548 35F8                                       l8732 057E  
                                     l8724 04C6                                       l8716 0442  
                                     l8708 03A4                                       l8660 00D0  
                                     l8652 00BE                                       l8644 00B2  
                                     l8636 0098                                       l8628 0068  
                                     l8582 3EEE                                       l8574 3ECE  
                                     l8566 3E70                                       l7790 511E  
                                     l7782 50FC                                       l7854 5254  
                                     l7846 5230                                       l7838 51FC  
                                     l7598 2C0E                                       l7870 53B4  
                                     l7862 534C                                       l7758 2984  
                                     l7766 29AA                                       l7694 26EA  
                                     l7686 26A4                                       l7678 267A  
                                     l7774 57AC                                       l7942 4B76  
                                     l7926 4B22                                       l7918 4AFC  
                                     l8398 3BC4                                       l7950 4DA6  
                                     l8486 3A2C                                       l8494 3A8E  
                                     l8478 39AA                                       l8558 3662  
                                     l8910 10EE                                       l8902 1066  
                                     l8822 0B8E                                       l8814 0B06  
                                     l8806 0A90                                       l8742 063A  
                                     l8734 05B4                                       l8726 04FC  
                                     l8718 0474                                       l8670 01A4  
                                     l8638 009A                                       l8662 0126  
                                     l8592 3F6C                                       l8584 3EF6  
                                     l8576 3ED2                                       l8568 3E74  
                                     l7792 5122                                       l7784 5104  
                                     l7848 5236                                       l7864 537A  
                                     l7880 4C04                                       l7768 29AE  
                                     l7696 26F6                                       l7688 26BA  
                                     l7944 4B86                                       l7936 4B4A  
                                     l7928 4B2C                                       l7960 4E00  
                                     l7952 4DC4                                       l8488 3A4A  
                                     l8920 11CA                                       l8912 1124  
                                     l8904 109C                                       l8824 0BC4  
                                     l8832 0C14                                       l8816 0B3C  
                                     l8808 0AB6                                       l8752 06D4  
                                     l8744 0660                                       l8736 05EA  
                                     l8728 0546                                       l8672 01B2  
                                     l8664 0146                                       l8656 00C4  
                                     l8648 00B8                                       l8586 3EFE  
                                     l7794 512A                                       l7786 5108  
                                     l7778 50EA                                       l7866 538A  
                                     l7858 530E                                       l7890 4C92  
                                     l7882 4C14                                       l7874 4B98  
                                     l7698 2704                                       l7938 4B56  
                                     l7962 4E2E                                       l7954 4DCC  
                                     l7970 4E8A                                       l8498 33C6  
                                     l8930 129A                                       l8914 115A  
                                     l8834 0C4A                                       l8842 0C96  
                                     l8826 0BFC                                       l8770 07FC  
                                     l8762 0792                                       l8754 070A  
                                     l8746 0686                                       l8690 0286  
                                     l8682 0238                                       l8674 01C0  
                                     l8666 0148                                       l8596 3FAC  
                                     l8588 3F34                                       l7796 513C  
                                     l7788 5116                                       l7868 53AE  
                                     l7892 4C98                                       l7884 4C22  
                                     l7876 4BC6                                       l7964 4E4E  
                                     l7956 4DE0                                       l7948 4D9A  
                                     l7980 4F00                                       l7972 4EA8  
                                     l8940 1312                                       l8932 12AA  
                                     l8916 1182                                       l8924 1206  
                                     l8844 0CBC                                       l8852 0D06  
                                     l8836 0C82                                       l8828 0C08  
                                     l8780 08C8                                       l8764 07A6  
                                     l8756 0740                                       l8692 02AC  
                                     l8676 01E0                                       l8684 024A  
                                     l8668 016E                                       l7990 568C  
                                     l8598 3FBE                                       l7798 5144  
                                     l7886 4C34                                       l7878 4BD6  
                                     l7966 4E50                                       l7958 4DEE  
                                     l7982 4F20                                       l7974 4EB0  
                                     l8942 1338                                       l8926 123C  
                                     l8918 1192                                       l8870 0E36  
                                     l8854 0D3C                                       l8862 0D88  
                                     l8846 0CF2                                       l8782 08DA  
                                     l8790 0952                                       l8766 07BE  
                                     l8774 0828                                       l8694 02E6  
                                     l8686 0270                                       l8678 01EE  
                                     l7992 56BA                                       l7888 4C42  
                                     l7896 59D4                                       l7968 4E62  
                                     l7984 4F32                                       l7976 4EC4  
                                     l8960 1444                                       l8944 1350  
                                     l8952 13A0                                       l8928 1272  
                                     l8880 0EE8                                       l8872 0E5C  
                                     l8864 0DAE                                       l8856 0D74  
                                     l8792 0988                                       l8784 090E  
                                     l8776 0856                                       l8768 07CC  
                                     l8696 0306                                       l8688 0278  
                                     l7994 56BE                                       l7986 5674  
                                     l7898 59EA                                       l7978 4ED2  
                                     l8970 14BA                                       l8954 13D6  
                                     l8946 135E                                       l8938 12EC  
                                     l8882 0F30                                       l8874 0E92  
                                     l8866 0DFA                                       l8794 09D0  
                                     l8698 0314                                       l7988 5678  
                                     l8972 14CE                                       l8956 140C  
                                     l7998 5618                                       l8958 1434  
                                     l8966 1486                                       l8894 0FF0  
                                     l8886 0F68                                       l8878 0EB2  
                                     l8798 0A08                                       l8982 14EC  
                                     STR_1 FFAE                                       l8984 1512  
                                     l8968 14AC                                       l8976 14DA  
                                     l8896 1016                                       l8888 0F9E  
                                     STR_2 FF9D                                       STR_3 FFBA  
                                     STR_4 FFCA                                       l8996 543A  
                                     STR_7 FFBE                                       l8998 5442  
                                     STR_8 FFD2                                       _LATA 000F89  
                                     _LATB 000F8A                                       _LATC 000F8B  
                                     _LATD 000F8C                                       _LATE 000F8D  
                                     u6005 5B98                                       u6006 5B9A  
                                     u4730 5B6E                                       u4731 5B6A  
                                     u8100 485A                                       u8101 4856  
                                     u8040 526E                                       u8200 3CC8  
                                     u9000 4D22                                       u8041 526A  
                                     u8201 3CC4                                       u9001 4D1E  
                                     i2l42 0032                                       u8050 5950  
                                     u8210 3D24                                       u9010 4D4C  
                                     u8051 594C                                       u8211 3D20  
                                     u9011 4D48                                       u8220 3D7A  
                                     u7260 5724                                       u9100 36EA  
                                     u8221 3D76                                       u7261 5720  
                                     u8230 3DC4                                       u7270 56DC  
                                     u8070 47AA                                       u9030 4D86  
                                     u9110 3718                                       u8231 3DC0  
                                     u7271 56D8                                       u9031 4D80  
                                     u9111 3714                                       u8240 3DE2  
                                     u8080 47CC                                       u9040 4D88  
                                     u9120 373A                                       u9200 5922  
                                     u8241 3DDE                                       u8081 47C8  
                                     u9025 4D5E                                       u9121 3736  
                                     u9105 36E0                                       u9201 591C  
                                     u8250 3DF2                                       u8090 484A  
                                     u9050 55A6                                       u9210 5924  
                                     u8251 3DEE                                       u8260 3E00  
                                     u9300 4088                                       u9140 37A6  
                                     u9060 55B8                                       u8500 59CC  
                                     u9220 552E                                       i2l93 5B06  
                                     u8261 3DFC                                       u8077 47A0  
                                     u9301 4084                                       u9141 37A2  
                                     u9061 55B4                                       u8501 59C6  
                                     u9221 5528                                       u8270 3E3A  
                                     u8190 3CBA                                       u9310 40B2  
                                     u9150 37CA                                       u8510 59CE  
                                     u9070 54CE                                       u9230 5530  
                                     u8271 3E36                                       u8191 3CB6  
                                     u9311 40AE                                       u9135 374E  
                                     u9071 54C8                                       u8280 3E48  
                                     u8440 4F6C                                       u9320 40F2  
                                     u9400 29DA                                       u8600 21D6  
                                     u8520 20F0                                       u9160 37E6  
                                     u9136 3758                                       u9080 54D0  
                                     u9240 5546                                       i2l89 5BBC  
                                     u8281 3E44                                       u8097 4840  
                                     u8441 4F68                                       u9321 40EE  
                                     u9401 29D6                                       u8601 21D2  
                                     u8521 20EC                                       u9161 37E2  
                                     u9137 3768                                       u9057 559C  
                                     u9241 5542                                       u9250 5A3C  
                                     u8450 4F7E                                       u9330 413C  
                                     u9410 29EC                                       u8610 2244  
                                     u8530 2102                                       u9170 383A  
                                     u9090 54E6                                       i2l99 5C26  
                                     u9251 5A36                                       u8451 4F7A  
                                     u9331 4138                                       u9411 29E8  
                                     u8611 2240                                       u8531 20FE  
                                     u9155 37C0                                       u9091 54E2  
                                     u7900 5416                                       u9260 5A3E  
                                     u8460 4FA6                                       u9340 4490  
                                     u9500 2BA4                                       u9420 29FC  
                                     u8700 2322                                       u8620 225C  
                                     u8540 2112                                       u9180 3856  
                                     u7901 5412                                       u8461 4FA2  
                                     u9341 448C                                       u9501 2BA0  
                                     u9421 29F8                                       u8701 231E  
                                     u8621 2256                                       u8541 210E  
                                     u9181 3852                                       u7830 5888  
                                     u7910 5438                                       u8470 4FDC  
                                     u9270 4008                                       u9350 44C2  
                                     u9510 2BC8                                       u9430 2A40  
                                     u8710 2340                                       u8630 225E  
                                     u8550 2154                                       u9190 3892  
                                     u7831 5884                                       u7911 5434  
                                     u8471 4FD8                                       u9271 4004  
                                     u9351 44BE                                       u9511 2BC4  
                                     u9431 2A3C                                       u8711 233C  
                                     u8551 2150                                       u9191 388E  
                                     u9175 3830                                       u7840 58A4  
                                     u8480 586A                                       u9280 403A  
                                     u9360 4500                                       u9600 2CE8  
                                     u9520 2BDE                                       u9440 2A52  
                                     u8800 247E                                       u8720 2378  
                                     u8640 2286                                       u8560 216A  
                                     u7841 58A0                                       u8481 5866  
                                     u9281 4036                                       u9361 44FC  
                                     u9601 2CE4                                       u9521 2BDA  
                                     u9441 2A4E                                       u8801 247A  
                                     u8721 2374                                       u8641 2282  
                                     u8561 2166                                       u8490 5A6C  
                                     u9370 452A                                       u9610 2D18  
                                     u9530 2BFC                                       u9450 2A62  
                                     u8810 2494                                       u8730 23BE  
                                     u8650 22A4                                       u8570 217C  
                                     u8491 5A68                                       u9291 4064  
                                     u9371 4526                                       u9611 2D14  
                                     u9531 2BF8                                       u9451 2A5E  
                                     u8811 2490                                       u8731 23BA  
                                     u8651 22A0                                       u8571 2178  
                                     u7940 4402                                       u9380 4558  
                                     u9620 2D46                                       u9540 2C1C  
                                     u9460 2AA2                                       u9700 267A  
                                     u8900 2582                                       u8820 24AA  
                                     u8740 23F4                                       u8660 22C4  
                                     u8580 218C                                       u7941 43FE  
                                     u9381 4554                                       u9621 2D42  
                                     u9541 2C18                                       u9461 2A9E  
                                     u9701 2676                                       u8901 257E  
                                     u8821 24A6                                       u8741 23F0  
                                     u8661 22C0                                       u8581 2188  
                                     u7950 4430                                       u7934 43E2  
                                     u9390 45A0                                       u9550 2C2E  
                                     u9470 2AE2                                       u9710 27F4  
                                     u9630 25B0                                       u8830 24BE  
                                     u8750 2404                                       u8670 22D2  
                                     u8590 21C8                                       u8910 5994  
                                     u7951 442C                                       u7935 43DC  
                                     u9391 459C                                       u9551 2C2A  
                                     u9471 2ADE                                       u9631 25AC  
                                     u8831 24BA                                       u8751 2400  
                                     u8671 22CE                                       u8591 21C4  
                                     u8911 598E                                       u7960 4442  
                                     u7880 5AD8                                       u9560 2C5C  
                                     u9480 2B58                                       u9800 2968  
                                     u9720 284E                                       u9640 25C2  
                                     u8840 24D8                                       u8760 2430  
                                     u8680 22E2                                       u8920 5996  
                                     u7961 443E                                       u7881 5AD4  
                                     u9561 2C58                                       u9481 2B54  
                                     u9801 2964                                       u9721 284A  
                                     u9641 25BE                                       u8841 24D4  
                                     u8761 242C                                       u8681 22DE  
                                     u7970 447C                                       u7890 53EC  
                                     u8930 5034                                       u9570 2C72  
                                     u9490 2B7A                                       u9810 29A2  
                                     u9730 286E                                       u9650 25D2  
                                     u8850 2512                                       u8770 2440  
                                     u8690 2314                                       u7971 4478  
                                     u7891 53E8                                       u8931 5030  
                                     u9571 2C6E                                       u9491 2B76  
                                     u9811 299E                                       u9731 286A  
                                     u9715 27EA                                       u9651 25CE  
                                     u8851 250E                                       u8771 243C  
                                     u8691 2310                                       u8940 5056  
                                     u9820 50FC                                       u9900 51F4  
                                     u9580 2C86                                       u9740 2880  
                                     u9660 2612                                       u8860 2524  
                                     u8780 245C                                       u8941 5052  
                                     u9821 50F8                                       u9901 51F0  
                                     u9581 2C82                                       u9741 287C  
                                     u9661 260E                                       u8861 2520  
                                     u8781 2458                                       u8950 50AC  
                                     u9830 5116                                       u9910 5212  
                                     u9590 2CA0                                       u9750 28AE  
                                     u9670 2624                                       u8870 2534  
                                     u8790 246C                                       u8951 50A8  
                                     u9831 5112                                       u9911 520E  
                                     u9591 2C9C                                       u9751 28AA  
                                     u9671 2620                                       u8871 2530  
                                     u8791 2468                                       u8960 50BC  
                                     u9840 513C                                       u9920 5228  
                                     u9760 28C4                                       u9680 2634  
                                     u8880 2554                                       u8961 50B8  
                                     u9841 5138                                       u9921 5224  
                                     u9761 28C0                                       u9681 2630  
                                     u8881 2550                                       u8970 58C8  
                                     u9850 515A                                       u9930 524C  
                                     u9770 28D8                                       u9690 266A  
                                     u8890 2566                                       u8971 58C4  
                                     u9851 5156                                       u9931 5248  
                                     u9771 28D4                                       u9691 2666  
                                     u8891 2562                                       u9860 5176  
                                     u9940 533C                                       u9780 28F2  
                                     u8980 4CDC                                       u9861 5172  
                                     u9941 5338                                       u9781 28EE  
                                     u9870 519C                                       u9950 537A  
                                     u9790 293A                                       u8990 4CFA  
                                     u9871 5198                                       u9951 5376  
                                     u9791 2936                                       u8991 4CF6  
                                     u9880 51C0                                       u9960 53AE  
                                     u9881 51BC                                       u9961 53AA  
                                     u8985 4CD2                                       u9890 51DA  
                                     u9970 4BC6                                       u9891 51D6  
                                     u9971 4BC2                                       u9980 4C04  
                                     u9981 4C00                                       u9990 4C22  
                                     u9991 4C1E                                       _WPUB 000F5B  
                                     abs@a 0016                                       _dbuf 0164  
                                     _atoi 3E5C                                       _ctoa 5618  
                                     _main 45E2                                       _dtoa 30E0  
                                     _font F1CD                                       _prec 0058  
                                     _temp 00E4                                       _otoa 3AB8  
                                     _nout 00EE                                       pad@i 001B  
                                     pad@p 0018                                       fsr1h 000FE2  
                                     fsr2h 000FDA                                       indf1 000FE7  
                                     indf2 000FDF                                       fsr1l 000FE1  
                                     pad@w 001D                                       fsr2l 000FD9  
                                     _stoa 417E                                       btemp 005A  
                                     _utoa 38B4                                       _xtoa 33C6  
                            ___fpclassifyf 4C9C                                       prodh 000FF4  
                                     prodl 000FF3                                       start 003E  
                            __CFG_IESO$OFF 000000                            ___fldiv@new_exp 0015  
                   __end_of_SPI_Initialize 5BFC                               _tolower$2081 0010  
                            lcd_fill@width 0011                              __CFG_MCLRE$ON 000000  
                             ___param_bank 000000                                _string_temp 0100  
                                    ??_abs 0018                                      ??_pad 001A  
           __size_of_OSCILLATOR_Initialize 0012              __end_of_OSCILLATOR_Initialize 5C0E  
                            ___fltol@sign1 000C                            __end_of___aodiv 417E  
                                    ?_atoi 000B                                      ?_ctoa 001F  
                          __end_of___fladd 2596                                      ?_main 0001  
                                    ?_dtoa 001F                            __end_of___aomod 45E2  
                          __end_of___fldiv 2D5A                            __end_of___awdiv 51AE  
                          __end_of___flneg 5A0C                                      STR_11 FFC6  
                                    STR_13 FFC6                                      STR_22 FFC7  
                                    STR_31 FFE9                                      STR_15 FFCE  
                                    STR_40 FFEC                                      STR_17 FFCE  
                                    STR_33 FFEF                                      STR_26 FFCF  
                                    STR_50 FFDB                                      STR_35 FFEF  
                                    STR_43 FFDA                                      STR_60 FFD6  
                          __end_of___awmod 525E                                      STR_45 FFDA  
                                    STR_53 FFF5                                      STR_29 FFE9  
                                    STR_70 FFF2                                      STR_38 FFEC  
                                    STR_55 FFF5                                      STR_80 FFDF  
                                    STR_65 FFD7                                      STR_73 FFDE  
                                    STR_90 FFE2                                      STR_58 FFD6  
                                    STR_75 FFDE                                      STR_83 FFF8  
                                    STR_68 FFF2                                      STR_92 FFC2  
                                    STR_85 FFF8                                      STR_94 FFC2  
                                    STR_88 FFE2                            __end_of___flmul 29C0  
                                    ?_otoa 001F                                      STR_99 FFE3  
                          __end_of___flsub 57E2                            __end_of___fltol 4B98  
        __end_of_IOCB4_SetInterruptHandler 5C18                                      ?_stoa 000D  
                                    u10000 4C42                                      u10001 4C3E  
                                    u10010 4C92                                      u10011 4C8E  
                                    u10020 59EA                                      u10021 59E6  
                                    u10101 4DA0                                      u10030 4AA8  
                                    u10110 4DC4                                      u10031 4AA4  
                                    u10111 4DC0                                      ?_utoa 001F  
                                    u10200 3110                                      u10040 4ADC  
                                    u11000 41FA                                      u10120 4DEE  
                                    u10201 310A                                      u11001 41F6  
                                    u10121 4DEA                                      u10210 3112  
                                    u10050 4B0A                                      u11010 4226  
                                    u10130 4E2E                                      u10051 4B06  
                                    u11011 4222                                      u10131 4E2A  
                                    u10300 332E                                      u10220 3128  
                                    u10060 4B1E                                      u11020 4260  
                                    u10140 4EA8                                      u11100 3A64  
                                    u10301 332A                                      u10221 3124  
                                    u10061 4B1A                                      u10045 4AD2  
                                    u11021 425C                                      u10141 4EA4  
                                    u11101 3A60                                      u10310 333E  
                                    u10230 3156                                      u10070 4B46  
                                    u11030 42B0                                      u10150 4ED2  
                                    u11110 3A7E                                      u10311 333A  
                                    u10231 3152                                      u10071 4B42  
                                    u11031 42AC                                      u10151 4ECE  
                                    u11111 3A7A                                      u10320 3350  
                                    u10240 3174                                      u10080 4B66  
                                    u10400 1634                                      u11040 42C0  
                                    u10160 4F00                                      u11120 3A8E  
                                    u11200 3518                                      u12000 4A32  
                                    u10321 334C                                      u10241 3170  
                                    u10081 4B62                                      u10401 162E  
                                    u11041 42BC                                      u10161 4EFC  
                                    u11121 3A8A                                      u11201 3512  
                                    u12001 4A2E                                      u10170 568C  
                                    u10330 3360                                      u10250 31A2  
                                    u10090 4B76                                      u10410 1636  
                                    u11050 42FA                                      u11210 351A  
                                    u11130 33D4                                      u12010 4A60  
                                    u10171 5688                                      u10331 335C  
                                    u10251 319E                                      u10091 4B72  
                                    u11051 42F6                                      u11131 33D0  
                                    u12011 4A5C                                      u10180 56BA  
                                    u11300 3E96                                      u10340 3378  
                                    u10260 31B2                                      u10500 18D2  
                                    u10420 164E                                      u11060 38C2  
                                    u11220 3530                                      u11140 33F2  
                                    u12020 463C                                      u10181 56B6  
                                    u11301 3E92                                      u10341 3374  
                                    u10261 31AE                                      u10501 18CE  
                                    u10421 164A                                      u11061 38BE  
                                    u11221 352C                                      u11141 33EE  
                                    u12021 4638                                      u11310 3ECE  
                                    u10190 562C                                      u10270 32DC  
                                    u10510 18E4                                      u10430 16DA  
                                    u10350 154E                                      u11070 38E0  
                                    u11230 3598                                      u11150 341E  
                                    u11311 3ECA                                      u10191 5628  
                                    u10271 32D8                                      u10511 18E0  
                                    u10431 16D6                                      u10351 154A  
                                    u11071 38DC                                      u11151 341A  
                                    u11320 3EEA                                      u10280 32FA  
                                    u10600 19F0                                      u10520 1906  
                                    u10440 1708                                      u10360 159E  
                                    u11400 48F0                                      u11080 3A2C  
                                    u11240 35DA                                      u11160 3482  
                                    u11321 3EE6                                      u10281 32F6  
                                    u10601 19EC                                      u10521 1902  
                                    u10441 1702                                      u10361 159A  
                                    u11401 48EC                                      u11081 3A28  
                                    u11241 35D6                                      u11161 347E  
                                    u11330 3FA6                                      u10290 3314  
                                    u10610 19FE                                      u10530 192C  
                                    u10450 170A                                      u10370 15AC  
                                    u11410 4902                                      u11090 3A4A  
                                    u11250 35F8                                      u11170 34CC  
                                    u11331 3FA0                                      u10291 3310  
                                    u10611 19FA                                      u10531 1928  
                                    u10371 15A8                                      u11411 48FE  
                          __end_of___lodiv 4E8A                                      u11091 3A46  
                                    u11251 35F4                                      u11235 3586  
                                    u11171 34C6                                      u11340 3FA8  
                                    u10700 1D5E                                      u10620 1A28  
                                    u10540 1942                                      u10460 1722  
                                    u10380 15BE                                      u11420 4944  
                                    u11260 3612                                      u11180 34CE  
                                    u11500 0232                            ___awdiv@divisor 0006  
                                    u12037 5ABC                                      u10701 1D5A  
                                    u10621 1A24                                      u10541 193E  
                                    u10461 171E                                      u10381 15BA  
                                    u11421 4940                                      u11261 360E  
                                    u11350 3FBE                                      u10710 1D6C  
                                    u10630 1B70                                      u10550 195E  
                                    u10470 17A6                                      u10390 1606  
                                    u11430 4966                                      u11270 362C  
                                    u11190 34E4                                      u11510 024A  
                                    u11351 3FBA                                      u10711 1D68  
                                    u10631 1B6C                                      u10551 195A  
                                    u10471 17A2                                      u10391 1602  
                                    u11271 3628                                      u11191 34E0  
                                    u11511 0246                                      ?_xtoa 001F  
                                    u11360 3FD0                                      u10800 1F5E  
                                    u10720 1D86                                      u10640 1BD6  
                                    u10560 1994                                      u10480 183A  
                                    u11280 363C                                      u11600 04C6  
                                    u11520 0270                                      u11440 0068  
                                    _T1CON 000FCD                                      u11361 3FCC  
                                    u10801 1F5A                                      u10721 1D82  
                                    u10641 1BD2                                      u10561 1990  
                                    u10481 1836                                      u11425 4934  
                                    u11281 3638                                      u11601 04C2  
                                    u11521 026C                                      u11441 0064  
                                    u10810 1FE2                                      u10730 1D94  
                                    u10650 1C1E                                      u10570 19BA  
                                    u10490 18AC                                      u11370 4886  
                                    u11290 364C                                      u11610 04FC  
                                    u11530 02AC                                      u11450 0138  
                                    u10811 1FDE                                      u10731 1D90  
                                    u10651 1C1A                                      u10571 19B6  
                                    u10491 18A8                                      u11427 492A  
                                    u11371 4882                                      u11291 3648  
                                    u11611 04F8                                      u11531 02A8  
                                    u11451 0134                                      u10820 1FFC  
                                    u10740 1DEC                                      u10660 1C2E  
                                    u10580 19CC                                      u10900 3BDE  
                                    u11380 48C2                                      u11700 08C0  
                                    u11620 05B4                                      u11540 0356  
                                    u11460 0146                                      u10821 1FF8  
                                    u10741 1DE8                                      u10661 1C2A  
                                    u10581 19C8                                      u10901 3BDA  
                                    u11437 495C                                      u11701 08BA  
                                    u11621 05B0                                      u11541 0350  
                                    u11461 0142                                      u10830 2014  
                                    u10750 1EBE                                      u10670 1C96  
                                    u10590 19DA                                      u10910 3BFC  
                                    u11390 48D2                                      u11710 08C2  
                                    u11630 05EA                                      u11550 0358  
                                    u11470 016E                                      u10831 2010  
                                    u10751 1EBA                                      u10671 1C92  
                                    u10591 19D6                                      u10911 3BF8  
                                    u11391 48CE                                      u11631 05E6  
                                    u11471 016A                                      u10840 2072  
                                    u10760 1EDA                                      u10680 1D3A  
                                    u10920 3C16                                      u11800 0D3C  
                                    u11720 08DA                                      u11640 0660  
                                    u11560 0370                                      u11480 01B2  
                                    u10841 206C                                      u10761 1ED6  
                                    u10681 1D36                                      u10921 3C12  
                                    u11801 0D38                                      u11721 08D6  
                                    u11641 065C                                      u11561 036C  
                                    u11481 01AE                                      u10850 2074  
                                    u10770 1EEC                                      u10690 1D4C  
                                    u10930 3C30                                      u11810 0DAE  
                                    u11730 0988                                      u11650 0686  
                                    u11570 03A4                                      u11490 0230  
                                    u10771 1EE8                                      u10691 1D48  
                                    u10931 3C2C                                      u11387 48B8  
                                    u11811 0DAA                                      u11731 0984  
                                    u11651 0682                                      u11571 03A0  
                                    u11491 022A                                      u10860 208A  
                                    u10780 1EFA                                      u10940 3C40  
                                    u11900 1272                                      u11820 0E5C  
                                    u11740 0A3E                                      u11660 070A  
                                    u11580 03E8                                      u10861 2086  
                                    u10781 1EF6                                      u10941 3C3C  
                                    u11901 126E                                      u11821 0E58  
                                    u11741 0A3A                                      u11661 0706  
                                    u11581 03E4                                      u10790 1F30  
                                    u10950 3C50                                      u10870 3AC6  
                                    u11910 1312                                      u11830 0EE8  
                                    u11750 0AB6                                      u11670 0740  
                                    u11590 0442                                      u10791 1F2C  
                                    u10951 3C4C                                      u10871 3AC2  
                                    u11911 130E                                      u11831 0EE4  
                                    u11751 0AB2                                      u11671 073C  
                                    u11591 043E                                      u10960 3C62  
                                    u10880 3AE4                                      u11920 1338  
                                    u11840 0F9E                                      u11760 0B3C  
                                    u11680 07A6                                      u10961 3C5E  
                                    u10881 3AE0                                      u11921 1334  
                                    u11841 0F9A                                      u11761 0B38  
                                    u11681 07A2                                      u10890 3B9E  
                                    u11930 13D6                                      u11850 1016  
                                    u11770 0BC4                                      u11690 0856  
                                    u10971 4188                                      u11931 13D2  
                                    u11851 1012                                      u11771 0BC0  
                                    u11691 0852                                      u10980 41AA  
                                    u11940 140C                                      u11860 109C  
                                    u11780 0C4A                                      u10981 41A6  
                                    u11941 1408                                      u11861 1098  
                                    u11781 0C46                                      u10990 41DC  
                                    u11950 14AC                                      u11870 1124  
                                    u11790 0CBC                                      u10895 3B8C  
                                    u10991 41D8                                      u11951 14A8  
                                    u11871 1120                                      u11791 0CB8  
                                    u11880 115A                                      u11960 5494  
                          __end_of___lomod 4F5A                                      u11881 1156  
                                    u11961 5490                                      u11890 123C  
                                    u11970 4996                                      u11891 1238  
                                    u11971 4992                                      u11980 49C4  
                                    u11981 49C0                                      u11990 4A24  
                                    u11991 4A20                                      i2l282 5616  
                                    i2l279 55EE                            ___awdiv@counter 0008  
                             vfpfcnvrt@fmt 0048                               vfpfcnvrt@llu 00B4  
                                    _TMR1H 000FCF                                      _TMR1L 000FCE  
                                    _TRISA 000F92                                      _TRISB 000F93  
                                    _TRISC 000F94                                      _TRISD 000F95  
                                    _TRISE 000F96                              __CFG_WRT0$OFF 000000  
                          ??_lcd_draw_char 0017                              __CFG_WRT1$OFF 000000  
                            __CFG_WRT2$OFF 000000                              __CFG_WRT3$OFF 000000  
                           __CFG_EBTR0$OFF 000000                             __CFG_FCMEN$OFF 000000  
                           __CFG_EBTR1$OFF 000000                             __CFG_EBTR2$OFF 000000  
                           __CFG_EBTR3$OFF 000000                              __CFG_WRTB$OFF 000000  
                            __CFG_WRTC$OFF 000000                              __CFG_WRTD$OFF 000000  
                          __end_of_msDelay 5ADA                             __CFG_EBTRB$OFF 000000  
                  __end_of_PIN_MANAGER_IOC 5BBE                                      _flags 00F2  
                                    _botao 00F6                                      _errno 00EC  
                                    _fputc 4F5A                            __end_of_isalpha 592A  
                                    _fputs 5828                            __end_of_isdigit 5A44  
                                    atoi@n 0018                                      pad@fp 0014  
                                    atoi@s 000B                                      _width 00F0  
                                    ctoa@c 0021                                      _putch 5C24  
                                    ctoa@w 0022                                      dtoa@d 0021  
                                    dtoa@i 0041                                      dtoa@n 0039  
                                    dtoa@p 0033                                      dtoa@s 0037  
                                    dtoa@w 0035                           __end_of_SPI_Open 530E  
                          __end_of_islower 599C                            __end_of_isspace 56C6  
                  __end_of_TMR1_Initialize 5B34                            __end_of_isupper 59D4  
                                    pclath 000FFA                                      tablat 000FF5  
                                    otoa@d 0021                                      otoa@i 003F  
                                    otoa@n 0037                                      otoa@p 0031  
                                    otoa@t 0033                                      otoa@w 0035  
                                    plusw1 000FE3                                      plusw2 000FDB  
                                    stoa@i 0019                                      stoa@l 0021  
                                    stoa@p 001F                                      stoa@s 000F  
                                    stoa@w 001B                                      ttemp5 005B  
                                    ttemp6 005E                                      ttemp7 0062  
                                    utoa@d 0021                                      utoa@i 003D  
                                    utoa@n 0035                                      utoa@p 0031  
                                    utoa@w 0033                                      status 000FD8  
                                    wtemp8 005B                             ?___fpclassifyf 0004  
                          __end_of_tolower 54FE                                      xtoa@c 0044  
                                    xtoa@d 0021                                      xtoa@i 0042  
                                    xtoa@n 003A                                      xtoa@p 0036  
                                    xtoa@w 0038                                      xtoa@x 0029  
                          __end_of_strncmp 4982                            __end_of_toupper 555C  
                           lcd_fill@height 000F                           ___lodiv@dividend 0004  
                          ?_SPI_Initialize 0001            ??_IOCB4_DefaultInterruptHandler 0001  
                             _toupper$2096 0010                            __initialization 5756  
                             __end_of_atoi 3FF6                               __end_of_ctoa 5674  
                             __end_of_main 472A                               __end_of_dtoa 33C6  
                             __end_of_font FF99                               __end_of_otoa 3CA8  
                             __end_of_stoa 4304                               __end_of_utoa 3AB8  
                             __end_of_xtoa 36A2                          __end_of_IOCB4_ISR 5B08  
              ?_INTERRUPT_InterruptManager 0001                                     ??_atoi 000D  
                                   ??_ctoa 0022                                     ??_main 0058  
                                   ??_dtoa 0029                          ?_lcd_set_cursor_x 0007  
                        ?_lcd_set_cursor_y 0007                              lcd_send@value 0005  
                                   ??_otoa 0029                                     ??_stoa 0011  
                                   ??_utoa 0029                                     ??_xtoa 002A  
                            __activetblptr 000003                         ??_lcd_set_cursor_x 0009  
                       ??_lcd_set_cursor_y 0009                             __CFG_RETEN$OFF 000000  
                         ___lodiv@quotient 0014                             lcd_draw_char@i 0022  
                           lcd_draw_char@j 0020                             lcd_draw_char@k 0021  
                 __end_of_SPI_ExchangeByte 5B74                             lcd_draw_char@x 000D  
                           lcd_draw_char@y 000F                                     _ADCON0 000FC2  
                                   _ADCON1 000FC1                                     _ADCON2 000FC0  
                                   ?_fputc 0004                                     STR_110 FFE6  
                                   ?_fputs 000D                                     STR_103 FFC3  
                                   STR_112 FFE6                                     STR_106 FFFB  
                                   _ADRESH 000FC4                                     STR_108 FFFB  
                                   _ADRESL 000FC3                                     _ANCON0 000F5D  
                                   _ANCON1 000F5C                           ___awdiv@dividend 0004  
                                   ?_putch 0001                                     _T1GCON 000FAA  
                          __CFG_BBSIZ$BB2K 000000                             __CFG_WDTEN$OFF 000000  
                                   i2l6360 55BA                                     i2l6362 55C8  
                                   i2l6426 5ADA                                     i2l6364 5602  
                                   i2l6428 5AEE                                     i2l6366 560E  
                                   i2l6534 5BA6                                     i2l6536 5BB6  
                                   i2l6538 5BBA                                     i2l6870 002E  
                                   i2l6866 0012                                     i2l6868 0020  
                                   _OSCCON 000FD3                              vfpfcnvrt@done 009A  
                                   _SSPADD 000FC8                                     _SSPBUF 000FC9  
                         __end_of___xxtofl 3E5C                            _global_bg_color 00F4  
                           __CFG_XINST$OFF 000000                           ??_lcd_draw_pixel 0009  
                         __end_of_lcd_fill 543A                               vfprintf@cfmt 0056  
                         __end_of_lcd_init 30E0                           __end_of_lcd_send 5BA6  
                                   ___flge 4B98                                     ___fleq 530E  
                                ??___aodiv 0014                                  ??___fladd 000C  
                                ??___aomod 0014                                     ___wmul 5B34  
                                ??___fldiv 000C                                  ??___awdiv 0008  
                                ??___flneg 0008                             __CFG_STVREN$ON 000000  
                                ??___awmod 0008                                  ??___flmul 001A  
                                ??___flsub 0033                                  ??___fltol 0008  
                                ??___lodiv 0014                                  ??___lomod 0014  
                                   _efgtoa 1526                                     _floorf 36A2  
                                   clear_0 577C                                     clear_1 5788  
                         ___awdiv@quotient 000A                            ___awmod@divisor 0006  
                          ___awmod@counter 0008                                     pad@buf 0016  
                                   ctoa@fp 001F                                     dtoa@fp 001F  
                                   _strcpy 555C                                     _strlen 5A44  
                                ??_msDelay 0004                                     fputc@c 0004  
                                   fputs@c 0011                                     fputs@i 0012  
                                   fputs@s 000D                                  ??_isalpha 0006  
                                ??_isdigit 0006                            ___fpclassifyf@e 000C  
                          ___fpclassifyf@u 000E                            ___fpclassifyf@x 0004  
                                ??_islower 0006                               __mediumconst F1CC  
                                ??_isspace 0006                                     otoa@fp 001F  
                                   tblptrh 000FF7                                  ??_isupper 0006  
                                   tblptrl 000FF6                                     tblptru 000FF8  
                 ADC_GetConversion@channel 0008                                     stoa@cp 001D  
                                   stoa@fp 000D                                     putch@c 0001  
                         __end_of_vfprintf 549E                                     utoa@fp 001F  
IOCB4_SetInterruptHandler@InterruptHandler 0004                           ?_PIN_MANAGER_IOC 0001  
                         __end_of_snprintf 5AAC                                  ??_tolower 000C  
                                   xtoa@fp 001F                                  ??_strncmp 000A  
                                ??_toupper 000C              __size_of_INTERRUPT_Initialize 0004  
                               ___flge@ff1 002B                                 ___flge@ff2 002F  
                          ??___fpclassifyf 0008                           ?_TMR1_Initialize 0001  
                             ___xxtofl@arg 000E                               ___xxtofl@exp 000D  
                        _SYSTEM_Initialize 5B74                               ___xxtofl@val 0004  
                               ___fleq@ff1 0004                                 ___fleq@ff2 0008  
                               __accesstop 0060                   __size_of_lcd_draw_string 0132  
                  __end_of__initialization 5792                                 ___flneg@f1 0004  
                       ?_SYSTEM_Initialize 0001                              ___rparam_used 000001  
                               ___fltol@f1 0004                             __pcstackCOMRAM 0001  
                             __pidataBANK1 5C18                        ??_SYSTEM_Initialize 0006  
                            __end_of_fputc 5024                              __end_of_fputs 586C  
    __end_of_IOCB4_DefaultInterruptHandler 5C28     __size_of_IOCB4_DefaultInterruptHandler 0002  
            _IOCB4_DefaultInterruptHandler 5C26                              __end_of_putch 5C26  
                                ?_SPI_Open 0001                ??_IOCB4_SetInterruptHandler 0006  
                         ??_lcd_set_cursor 000D                     fp__IOCB4_InterruptCall 0000  
                                  ??_fputc 0008                  __end_of_SYSTEM_Initialize 5B8E  
                                  ??_fputs 0011                                    ??_putch 0004  
                               __pbssBANK0 00DC                                 __pbssBANK1 0100  
                          __CFG_PLLCFG$OFF 000000                                    ?___flge 002B  
                                  ?___fleq 0004                                    ?___wmul 0004  
                                  ?_efgtoa 0037                                    ?_floorf 001D  
                               ??_SPI_Open 0004                    __size_of_ADC_Initialize 0016  
                                  ?_strcpy 0004                                    ?_strlen 0004  
                         __CFG_CANMX$PORTB 000000                                  ?___xxtofl 0004  
                                  _REFOCON 000F9A                                    _OSCCON2 000FD2  
                       __size_of_vfpfcnvrt 14E4                                    _OSCTUNE 000F9B  
             __size_of_IOCB4_InterruptCall 005E                                    _SSPCON1 000FC6  
                                  _SSPCON2 000FC5                                  ?_lcd_fill 000D  
                                ?_lcd_init 0001                                  ?_lcd_send 0005  
                                  _SSPSTAT 000FC7                           ___lomod@dividend 0004  
                         ??_SPI_Initialize 0004                  _IOCB4_SetInterruptHandler 5C0E  
                             _codigo_digit 00F8                            __CFG_PWRTEN$OFF 000000  
                     _ADC_InterruptHandler 00FA                                    __Hparam 0000  
                                  __Lparam 0000                         __size_of_vsnprintf 0110  
                        ??_lcd_draw_string 002D                            __size_of___flge 0104  
                          __size_of___fleq 00AA                                    ___aodiv 3FF6  
                                  ___fladd 20D6                                    ___aomod 447E  
                                  ___fldiv 29C0                                    ___awdiv 50EA  
                                  ___flneg 59D4                                    ___awmod 51AE  
                                  ___flmul 2596                                    ___flsub 579C  
                                  ___fltol 4A92                            __size_of___wmul 0026  
                                  ___lodiv 4D9A                                    ___lomod 4E8A  
                                ?_vfprintf 0050                            __size_of_efgtoa 0BB0  
                                ?_snprintf 00D2                            __size_of_floorf 0212  
                                  __pcinit 5756                                    __ramtop 0F00  
                                  __ptext0 45E2                                    __ptext1 5A7A  
                                  __ptext2 4982                                    __ptext3 543A  
                                  __ptext4 0042                                    __ptext5 33C6  
                                  __ptext6 54FE                                    __ptext7 5964  
                                  __ptext8 58EE                                    __ptext9 38B4  
                                  _msDelay 5AAC                                  _IOCB4_ISR 5ADA  
                          __size_of_strcpy 005E                            __size_of_strlen 0036  
                                _T1CONbits 000FCD                      _OSCILLATOR_Initialize 5BFC  
                             __size_of_abs 0040                               __size_of_pad 00C6  
                                  _isalpha 58EE                                    _isdigit 5A0C  
                               ??___xxtofl 0008                           ___awmod@dividend 0004  
                                  _islower 5964                   ??_PIN_MANAGER_Initialize 0006  
                                  _isspace 5674                          __CFG_MSSPMSK$MSK7 000000  
                                  _isupper 599C                                    efgtoa@c 003D  
                                  efgtoa@d 0078                                    efgtoa@e 0090  
                                  efgtoa@f 0039                                    efgtoa@g 008C  
                                  efgtoa@h 0082                                    efgtoa@i 008A  
                                  efgtoa@l 0086                                    efgtoa@m 0074  
                                  efgtoa@n 0092                                    efgtoa@p 007C  
                                  efgtoa@t 0070                                    efgtoa@u 0094  
                                  efgtoa@w 007F                                    atoi@neg 0011  
                    __end_of_lcd_draw_char 447E                 __size_of_SYSTEM_Initialize 001A  
                               ??_lcd_fill 000F                                    _tolower 549E  
                        ?_SPI_ExchangeByte 0001                                 ??_lcd_init 0013  
                               ??_lcd_send 0006                                    _strncmp 485C  
                                  _toupper 54FE                       end_of_initialization 5792  
                                  floorf@e 002B                                    floorf@m 0027  
                                  floorf@u 002D                                    floorf@x 001D  
                       ??_SPI_ExchangeByte 0004                  __size_of_lcd_set_cursor_x 0048  
                __size_of_lcd_set_cursor_y 0048                                    fputc@fp 0006  
                                  fputs@fp 000F                        lcd_draw_char@fIndex 0011  
                        __end_of_vfpfcnvrt 1526                                 efgtoa@mode 0081  
                               efgtoa@sign 007A                                    postdec1 000FE5  
                                  postdec2 000FDD                                    postinc0 000FEE  
                                  postinc1 000FE6                                    postinc2 000FDE  
                         lcd_fill@bg_color 000D                                 ??_vfprintf 0056  
                               ??_snprintf 0058                                    strcpy@d 000C  
                                  strlen@a 0006                                    strcpy@s 000A  
                                  strlen@s 0004                          lcd_draw_string@pS 0027  
                                _PORTBbits 000F81                          _spi_configuration FF99  
                               ?_IOCB4_ISR 0001                                ___fladd@grs 0013  
                         __CFG_FOSC$INTIO2 000000                              ___xxtofl@sign 000C  
                                _TRISCbits 000F94                          __end_of_vsnprintf 4A92  
                              ___fldiv@grs 0017                                ___fldiv@rem 0010  
                              ___flmul@grs 0020                                 lcd_send@dc 0006  
             __end_of_INTERRUPT_Initialize 5C24                       SPI_ExchangeByte@data 0004  
                           __end_of___flge 4C9C                             __end_of___fleq 53B8  
                __end_of_spi_configuration FF9D                                vfpfcnvrt@ap 004A  
                              vfpfcnvrt@cp 0098                                vfpfcnvrt@ct 00A6  
                              vfpfcnvrt@fp 0046                                vfpfcnvrt@ll 00A9  
                           __end_of___wmul 5B5A                                vfpfcnvrt@vp 00B1  
                           __end_of_efgtoa 20D6                             _ADC_Initialize 5BD4  
                           __end_of_floorf 38B4                     ?_OSCILLATOR_Initialize 0001  
                               floorf@F524 00DC                          __size_of_SPI_Open 00B0  
                           __end_of_strcpy 55BA                             __end_of_strlen 5A7A  
                      start_initialization 5756                            ___lodiv@divisor 000C  
                          ___lodiv@counter 001C            __size_of_PIN_MANAGER_Initialize 0046  
                              __end_of_abs 58EE                                __end_of_pad 50EA  
                    __end_of___fpclassifyf 4D9A                   __size_of_PIN_MANAGER_IOC 0018  
           SPI_Open@spiUniqueConfiguration 0005                   __size_of_TMR1_Initialize 002C  
                              vfprintf@fmt 0052                        _IOCB4_InterruptCall 55BA  
                                 ??___flge 0033                                   ??___fleq 000C  
                                 ??___wmul 0008                                   ??_efgtoa 003E  
                   __end_of_ADC_Initialize 5BEA                                __pdataBANK1 01B4  
                                 ??_floorf 0021                                   ??_strcpy 0008  
                                 ??_strlen 0006                                ??_IOCB4_ISR 0002  
                                ___fladd@a 0008                                  ___fladd@b 0004  
                  __size_of_lcd_draw_pixel 0016                               vsnprintf@cnt 00CA  
                             vsnprintf@fmt 00C0                                  ___fldiv@a 0008  
                                ___fldiv@b 0004                                  ___flmul@a 0016  
                                ___flmul@b 0012                                __pbssCOMRAM 0058  
                                ___flsub@a 002F                                  ___flsub@b 002B  
                            __pcstackBANK0 0060                              __pcstackBANK1 01BB  
                         ___aodiv@dividend 0004                       ?_IOCB4_InterruptCall 0001  
                              snprintf@fmt 00D6                          __size_of___xxtofl 01B4  
                          _lcd_draw_string 472A                           _lcd_set_cursor_x 570E  
                         _lcd_set_cursor_y 56C6                          __size_of_lcd_fill 0082  
                        __size_of_lcd_init 0386                          __size_of_lcd_send 0018  
                                _atoi$1960 0015                                  _atoi$1958 0013  
                                _atoi$1959 0017                                  __pnvBANK0 00FC  
                              _efgtoa$1313 0064                                _efgtoa$1322 006A  
                              _efgtoa$1314 0066                                _efgtoa$1323 006C  
                              _efgtoa$1324 006E                                _efgtoa$1318 0068  
                   _PIN_MANAGER_Initialize 57E2                                  _dtoa$1290 0031  
                                __pintcode 0008                              __pmediumconst F1CC  
                                 ?___aodiv 0004                                   ?___fladd 0004  
                                 ?___aomod 0004                                   ?___fldiv 0004  
                                 ?___awdiv 0004                           ___aodiv@quotient 0016  
                                 ?___flneg 0004                                   ?___awmod 0004  
                                 ?___flmul 0012                                   ?___flsub 002B  
                                 ?___fltol 0004                                   ?___lodiv 0004  
                                 ?___lomod 0004                            ?_ADC_Initialize 0001  
             ??_INTERRUPT_InterruptManager 0002                          __size_of_vfprintf 0064  
                        __size_of_snprintf 0032                                   ?_msDelay 0001  
                          ___lomod@divisor 000C                            ___lomod@counter 0014  
                                 ?_isalpha 0004                                   ?_isdigit 0004  
                                 ?_islower 0004                      ??_IOCB4_InterruptCall 0001  
                                 ?_isspace 0004                                   ?_isupper 0004  
                                 ?_tolower 000A                             __size_of_fputc 00CA  
                           __size_of_fputs 0044                                   ?_strncmp 0004  
                                 ?_toupper 000A                             __size_of_putch 0002  
                     _INTERRUPT_Initialize 5C20                    __size_of_lcd_set_cursor 0042  
                           ___wmul@product 0008                                   _IOCBbits 000F5A  
                                 _LATAbits 000F89                                   _LATEbits 000F8D  
                          lcd_set_cursor@x 0009                            lcd_set_cursor@y 000B  
      __size_of_INTERRUPT_InterruptManager 0036                                   _PIR1bits 000F9E  
                    lcd_draw_string@lIndex 0033                                   i2u803_40 5BB6  
                                 i2u803_41 5BB2                                   i2u830_40 002E  
                                 i2u830_41 002A                                   i2u780_40 55C8  
                                 i2u780_41 55C4                                   i2u781_40 55D8  
                                 i2u829_40 0020                                   i2u781_41 55D2  
                                 i2u829_41 001C                                   i2u781_46 55DA  
                                 i2u782_40 5602                                   i2u782_41 55FE  
                                 i2u786_40 5AEE                                   i2u786_41 5AEA  
                                 i2u787_48 5AF4                                   i2u787_49 5B06  
                                 _RCONbits 000FD0                  __size_of_SPI_ExchangeByte 001A  
                                _tensao_in 00E8                           lcd_draw_string@k 0031  
                         lcd_draw_string@x 0023                           lcd_draw_string@y 0025  
                        ??_PIN_MANAGER_IOC 0002                                  _vfpfcnvrt 0042  
                                _xtoa$1360 0032                                  _xtoa$1361 0034  
                                 _SPI_Open 525E                          ??_TMR1_Initialize 0004  
                               _ADCON0bits 000FC2                          ___wmul@multiplier 0004  
                         __CFG_SOSCSEL$DIG 000000                    __end_of_lcd_draw_string 485C  
                             _isspace$1998 000A                                  msDelay@ms 0005  
                               vfpfcnvrt@c 00B3                                 vfpfcnvrt@f 00A2  
                              _INTCON2bits 000FF1                                  copy_data0 576A  
                    ?_INTERRUPT_Initialize 0001                                  _vsnprintf 4982  
                      lcd_draw_pixel@color 0007                                   __Hrparam 0000  
                               vfprintf@ap 0054                                   __Lrparam 0000  
                               vfprintf@fp 0050                          _ADC_GetConversion 592A  
                       __CFG_BOREN$SBORDIS 000000                    __size_of_SPI_Initialize 0012  
                  ??_OSCILLATOR_Initialize 0004                     __size_of_lcd_draw_char 017A  
                       ?_ADC_GetConversion 0004                           __size_of___aodiv 0188  
                         __size_of___fladd 04C0                           __size_of___aomod 0164  
                         __size_of___fldiv 039A                           __size_of___awdiv 00C4  
                         __size_of___flneg 0038                           __size_of___awmod 00B0  
                              vsnprintf@ap 00C2                           __size_of___flmul 042A  
                         __size_of___flsub 0046                           __size_of___fltol 0106  
                         __size_of___lodiv 00F0                           __size_of___lomod 00D0  
                               ?_vfpfcnvrt 0046                                 snprintf@ap 01BD  
                          ___aodiv@divisor 000C                            ___aodiv@counter 0014  
                   _IOCB4_InterruptHandler 00FE                             _lcd_draw_pixel 5BBE  
                       ___fpclassifyf@F463 00E0                        ??_ADC_GetConversion 0006  
                         __size_of_msDelay 002E                                   ___xxtofl 3CA8  
                         __size_of_isalpha 003C                           __size_of_isdigit 0038  
         fp__IOCB4_DefaultInterruptHandler 0000             ?_IOCB4_DefaultInterruptHandler 0001  
                         __size_of_islower 0038                           __size_of_isspace 0052  
                                 __ptext10 4E8A                                   __ptext11 4D9A  
                                 __ptext20 4C9C                                   __ptext12 485C  
                                 __ptext21 4A92                                   __ptext13 417E  
                               _T1GCONbits 000FAA                                   __ptext30 50EA  
                                 __ptext22 579C                                   __ptext14 3AB8  
                                 __ptext31 30E0                                   __ptext23 20D6  
                                 __ptext15 1526                                   __ptext40 5C24  
                                 __ptext32 58AE                                   __ptext24 59D4  
                                 __ptext16 549E                                   __ptext41 3E5C  
                                 __ptext33 447E                                   __ptext25 2596  
                                 __ptext17 599C                                   __ptext50 586C  
                                 __ptext42 5674                                   __ptext34 3FF6  
                                 __ptext26 4B98                                   __ptext18 555C  
                                 __ptext51 56C6                                   __ptext43 5A0C  
                                 __ptext35 5618                                   __ptext27 530E  
                                 __ptext19 36A2                                   __ptext60 57E2  
                                 __ptext52 570E                                   __ptext44 5B34  
                                 __ptext36 5024                                   __ptext28 29C0  
                                 __ptext61 5C0E                                   __ptext53 5BBE  
                                 __ptext45 2D5A                                   __ptext37 5A44  
                                 __ptext29 51AE                                   __ptext70 5C26  
                                 __ptext62 5BFC                                   __ptext54 5B8E  
                                 __ptext46 5AAC                                   __ptext38 5828  
                                 __ptext71 55BA                                   __ptext63 5C20  
                                 __ptext55 5B5A                                   __ptext47 53B8  
                                 __ptext39 4F5A                                   __ptext72 0000  
                                 __ptext64 5BD4                                   __ptext56 3CA8  
                                 __ptext48 472A                                   __ptext65 525E  
                                 __ptext57 5B74                                   __ptext49 4304  
                                 __ptext66 592A                                   __ptext58 5B08  
                                 __ptext59 5BEA                                   __ptext68 5BA6  
                                 __ptext69 5ADA                           __size_of_isupper 0038  
                                 _lcd_fill 53B8                                   _lcd_init 2D5A  
                                 _lcd_send 5B8E                           __size_of_tolower 0060  
                               strcpy@dest 0004                           __size_of_strncmp 0126  
                         __size_of_toupper 005E                                 ?_vsnprintf 00BC  
                            __size_of_atoi 019A                              __size_of_ctoa 005C  
                            __size_of_main 0148                              __size_of_dtoa 02E6  
                            __size_of_otoa 01F0                              __size_of_stoa 0186  
                            __size_of_utoa 0204                              __size_of_xtoa 02DC  
                __end_of_ADC_GetConversion 5964                                   efgtoa@fp 0037  
                                 efgtoa@ne 0076                                   efgtoa@pp 0072  
                                 efgtoa@ou 0060                                  stoa@F1174 01B4  
                    lcd_draw_char@bg_color 0015                                   int$flags 005A  
                                 _vfprintf 543A                      lcd_draw_char@fg_color 0013  
       __end_of_INTERRUPT_InterruptManager 003E                 _INTERRUPT_InterruptManager 0008  
                   __end_of_lcd_draw_pixel 5BD4                                   _snprintf 5A7A  
                 __end_of_lcd_set_cursor_x 5756                   __end_of_lcd_set_cursor_y 570E  
                      __CFG_INTOSCSEL$HIGH 000000                                   msDelay@k 0006  
                         ___aomod@dividend 0004                             _vfpfcnvrt$1375 009C  
                           _vfpfcnvrt$1376 009E                             _vfpfcnvrt$1397 00A0  
                               _INTCONbits 000FF2                           ?_lcd_draw_string 0023  
                                 isalpha@c 0004                                   isdigit@c 0004  
                   ??_INTERRUPT_Initialize 0004                                 vsnprintf@f 00CC  
                               vsnprintf@n 00BE                                 vsnprintf@s 00BC  
                            _lcd_draw_char 4304                                  snprintf@n 00D4  
                                snprintf@s 00D2                                   intlevel2 0000  
                           _lcd_set_cursor 586C                          lcd_set_cursor_x@x 0007  
                        lcd_set_cursor_y@y 0007                                   islower@c 0004  
                                 isspace@c 0004                    ?_PIN_MANAGER_Initialize 0001  
                                strcpy@src 0006                                   isupper@c 0004  
                                strncmp@_l 0004                                  strncmp@_r 0006  
                         ??_ADC_Initialize 0004                           _SPI_ExchangeByte 5B5A  
                  lcd_draw_string@bg_color 002B                                efgtoa@nmode 007E  
                       __CFG_WDTPS$1048576 000000                            ___aomod@divisor 000C  
                  lcd_draw_string@fg_color 0029                            ?_lcd_draw_pixel 0007  
                              ??_vfpfcnvrt 004C                                   stoa@nuls 0012  
                          ___aomod@counter 0014                                   tolower@c 000A  
                           _vsnprintf$2128 00C8                     __size_of___fpclassifyf 00FE  
                                 strncmp@l 000B                                   strncmp@n 0008  
                                 strncmp@r 000D                                   toupper@c 000A  
                              _SSPCON1bits 000FC6                     __end_of_lcd_set_cursor 58AE  
                           ?_lcd_draw_char 000D                              ___fladd@signs 0010  
                             ___aodiv@sign 0015             __end_of_PIN_MANAGER_Initialize 5828  
                              ??_vsnprintf 00C4                               ___fladd@aexp 0011  
                             ___fladd@bexp 0012                        __CFG_BORPWR$ZPBORMV 000000  
                          _PIN_MANAGER_IOC 5BA6                 __size_of_ADC_GetConversion 003A  
                             ___aomod@sign 0015                            _TMR1_Initialize 5B08  
