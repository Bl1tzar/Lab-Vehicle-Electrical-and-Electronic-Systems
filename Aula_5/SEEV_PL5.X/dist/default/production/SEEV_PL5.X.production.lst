

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Dec 03 15:52:53 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	text100,global,reloc=2,class=CODE,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1
   122                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   123                           	psect	text103,global,reloc=2,class=CODE,delta=1
   124                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   125                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   126  0000                     
   127                           ; Version 2.10
   128                           ; Generated 31/07/2019 GMT
   129                           ; 
   130                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   131                           ; All rights reserved.
   132                           ; 
   133                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   134                           ; 
   135                           ; Redistribution and use in source and binary forms, with or without modification, are
   136                           ; permitted provided that the following conditions are met:
   137                           ; 
   138                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   139                           ;        conditions and the following disclaimer.
   140                           ; 
   141                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   142                           ;        of conditions and the following disclaimer in the documentation and/or other
   143                           ;        materials provided with the distribution.
   144                           ; 
   145                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   146                           ;        software without specific prior written permission.
   147                           ; 
   148                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   149                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   150                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   151                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   152                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   153                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   154                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   155                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   156                           ; 
   157                           ; 
   158                           ; Code-generator required, PIC18F46K80 Definitions
   159                           ; 
   160                           ; SFR Addresses
   161  0000                     
   162 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   163  0000                     
   164 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   165  0000                     
   166 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   167  0000                     
   168                           	psect	idataBANK0
   169  0068D6                     __pidataBANK0:
   170                           	opt callstack 0
   171                           
   172                           ;initializer for stoa@F1152
   173  0068D6  28                 	db	40
   174  0068D7  6E                 	db	110
   175  0068D8  75                 	db	117
   176  0068D9  6C                 	db	108
   177  0068DA  6C                 	db	108
   178  0068DB  29                 	db	41
   179  0068DC  00                 	db	0
   180                           
   181                           	psect	idataBANK1
   182  0068DD                     __pidataBANK1:
   183                           	opt callstack 0
   184                           
   185                           ;initializer for _turn_off_value
   186  0068DD  0050               	dw	80
   187                           
   188                           ;initializer for _turn_on_value
   189  0068DF  005A               	dw	90
   190                           
   191                           	psect	mediumconst
   192  00F134                     __pmediumconst:
   193                           	opt callstack 0
   194  00F134  00                 	db	0
   195  00F135                     _font:
   196                           	opt callstack 0
   197  00F135  0004               	dw	4
   198  00F137  0000               	dw	0
   199  00F139  0000               	dw	0
   200  00F13B  0000               	dw	0
   201  00F13D  0000               	dw	0
   202  00F13F  0000               	dw	0
   203  00F141  0000               	dw	0
   204  00F143  0000               	dw	0
   205  00F145  0000               	dw	0
   206  00F147  0003               	dw	3
   207  00F149  0000               	dw	0
   208  00F14B  0000               	dw	0
   209  00F14D  00FE               	dw	254
   210  00F14F  001B               	dw	27
   211  00F151  0000               	dw	0
   212  00F153  0000               	dw	0
   213  00F155  0005               	dw	5
   214  00F157  001E               	dw	30
   215  00F159  0000               	dw	0
   216  00F15B  0000               	dw	0
   217  00F15D  0000               	dw	0
   218  00F15F  0000               	dw	0
   219  00F161  0000               	dw	0
   220  00F163  001E               	dw	30
   221  00F165  0000               	dw	0
   222  00F167  0000               	dw	0
   223  00F169  0000               	dw	0
   224  00F16B  000B               	dw	11
   225  00F16D  0000               	dw	0
   226  00F16F  0000               	dw	0
   227  00F171  0010               	dw	16
   228  00F173  0001               	dw	1
   229  00F175  0010               	dw	16
   230  00F177  001D               	dw	29
   231  00F179  00F0               	dw	240
   232  00F17B  0003               	dw	3
   233  00F17D  001E               	dw	30
   234  00F17F  0001               	dw	1
   235  00F181  0010               	dw	16
   236  00F183  0001               	dw	1
   237  00F185  0010               	dw	16
   238  00F187  001D               	dw	29
   239  00F189  00F0               	dw	240
   240  00F18B  0003               	dw	3
   241  00F18D  001E               	dw	30
   242  00F18F  0001               	dw	1
   243  00F191  0010               	dw	16
   244  00F193  0001               	dw	1
   245  00F195  0000               	dw	0
   246  00F197  0000               	dw	0
   247  00F199  0009               	dw	9
   248  00F19B  0000               	dw	0
   249  00F19D  0004               	dw	4
   250  00F19F  001C               	dw	28
   251  00F1A1  0008               	dw	8
   252  00F1A3  0022               	dw	34
   253  00F1A5  0010               	dw	16
   254  00F1A7  0042               	dw	66
   255  00F1A9  0010               	dw	16
   256  00F1AB  00FF               	dw	255
   257  00F1AD  007F               	dw	127
   258  00F1AF  0042               	dw	66
   259  00F1B1  0010               	dw	16
   260  00F1B3  0084               	dw	132
   261  00F1B5  0010               	dw	16
   262  00F1B7  0000               	dw	0
   263  00F1B9  000F               	dw	15
   264  00F1BB  0000               	dw	0
   265  00F1BD  0000               	dw	0
   266  00F1BF  000C               	dw	12
   267  00F1C1  001C               	dw	28
   268  00F1C3  0000               	dw	0
   269  00F1C5  0022               	dw	34
   270  00F1C7  0010               	dw	16
   271  00F1C9  0022               	dw	34
   272  00F1CB  0008               	dw	8
   273  00F1CD  0022               	dw	34
   274  00F1CF  0006               	dw	6
   275  00F1D1  001C               	dw	28
   276  00F1D3  0001               	dw	1
   277  00F1D5  00C0               	dw	192
   278  00F1D7  0000               	dw	0
   279  00F1D9  0020               	dw	32
   280  00F1DB  000E               	dw	14
   281  00F1DD  0018               	dw	24
   282  00F1DF  0011               	dw	17
   283  00F1E1  0004               	dw	4
   284  00F1E3  0011               	dw	17
   285  00F1E5  0002               	dw	2
   286  00F1E7  0011               	dw	17
   287  00F1E9  0000               	dw	0
   288  00F1EB  000E               	dw	14
   289  00F1ED  0000               	dw	0
   290  00F1EF  0000               	dw	0
   291  00F1F1  000B               	dw	11
   292  00F1F3  0000               	dw	0
   293  00F1F5  0000               	dw	0
   294  00F1F7  0000               	dw	0
   295  00F1F9  000E               	dw	14
   296  00F1FB  001C               	dw	28
   297  00F1FD  0011               	dw	17
   298  00F1FF  00A2               	dw	162
   299  00F201  0010               	dw	16
   300  00F203  00C2               	dw	194
   301  00F205  0010               	dw	16
   302  00F207  0022               	dw	34
   303  00F209  0011               	dw	17
   304  00F20B  001C               	dw	28
   305  00F20D  000A               	dw	10
   306  00F20F  0000               	dw	0
   307  00F211  000C               	dw	12
   308  00F213  0000               	dw	0
   309  00F215  000C               	dw	12
   310  00F217  0000               	dw	0
   311  00F219  0012               	dw	18
   312  00F21B  0000               	dw	0
   313  00F21D  0000               	dw	0
   314  00F21F  0003               	dw	3
   315  00F221  0000               	dw	0
   316  00F223  0000               	dw	0
   317  00F225  001E               	dw	30
   318  00F227  0000               	dw	0
   319  00F229  0000               	dw	0
   320  00F22B  0000               	dw	0
   321  00F22D  0006               	dw	6
   322  00F22F  0000               	dw	0
   323  00F231  0000               	dw	0
   324  00F233  0000               	dw	0
   325  00F235  0000               	dw	0
   326  00F237  00E0               	dw	224
   327  00F239  001F               	dw	31
   328  00F23B  001C               	dw	28
   329  00F23D  0060               	dw	96
   330  00F23F  0002               	dw	2
   331  00F241  0080               	dw	128
   332  00F243  0000               	dw	0
   333  00F245  0000               	dw	0
   334  00F247  0004               	dw	4
   335  00F249  0000               	dw	0
   336  00F24B  0000               	dw	0
   337  00F24D  0006               	dw	6
   338  00F24F  00C0               	dw	192
   339  00F251  00F8               	dw	248
   340  00F253  003F               	dw	63
   341  00F255  0000               	dw	0
   342  00F257  0000               	dw	0
   343  00F259  0006               	dw	6
   344  00F25B  0024               	dw	36
   345  00F25D  0000               	dw	0
   346  00F25F  0018               	dw	24
   347  00F261  0000               	dw	0
   348  00F263  007E               	dw	126
   349  00F265  0000               	dw	0
   350  00F267  0018               	dw	24
   351  00F269  0000               	dw	0
   352  00F26B  0024               	dw	36
   353  00F26D  0000               	dw	0
   354  00F26F  0000               	dw	0
   355  00F271  0000               	dw	0
   356  00F273  0009               	dw	9
   357  00F275  0000               	dw	0
   358  00F277  0000               	dw	0
   359  00F279  0080               	dw	128
   360  00F27B  0000               	dw	0
   361  00F27D  0080               	dw	128
   362  00F27F  0000               	dw	0
   363  00F281  0080               	dw	128
   364  00F283  0000               	dw	0
   365  00F285  00F0               	dw	240
   366  00F287  0007               	dw	7
   367  00F289  0080               	dw	128
   368  00F28B  0000               	dw	0
   369  00F28D  0080               	dw	128
   370  00F28F  0000               	dw	0
   371  00F291  0080               	dw	128
   372  00F293  0000               	dw	0
   373  00F295  0000               	dw	0
   374  00F297  0000               	dw	0
   375  00F299  0004               	dw	4
   376  00F29B  0000               	dw	0
   377  00F29D  0000               	dw	0
   378  00F29F  0000               	dw	0
   379  00F2A1  0060               	dw	96
   380  00F2A3  0000               	dw	0
   381  00F2A5  0018               	dw	24
   382  00F2A7  0000               	dw	0
   383  00F2A9  0000               	dw	0
   384  00F2AB  0005               	dw	5
   385  00F2AD  0000               	dw	0
   386  00F2AF  0001               	dw	1
   387  00F2B1  0000               	dw	0
   388  00F2B3  0001               	dw	1
   389  00F2B5  0000               	dw	0
   390  00F2B7  0001               	dw	1
   391  00F2B9  0000               	dw	0
   392  00F2BB  0001               	dw	1
   393  00F2BD  0000               	dw	0
   394  00F2BF  0000               	dw	0
   395  00F2C1  0004               	dw	4
   396  00F2C3  0000               	dw	0
   397  00F2C5  0000               	dw	0
   398  00F2C7  0000               	dw	0
   399  00F2C9  0018               	dw	24
   400  00F2CB  0000               	dw	0
   401  00F2CD  0018               	dw	24
   402  00F2CF  0000               	dw	0
   403  00F2D1  0000               	dw	0
   404  00F2D3  0008               	dw	8
   405  00F2D5  0000               	dw	0
   406  00F2D7  0000               	dw	0
   407  00F2D9  0000               	dw	0
   408  00F2DB  0040               	dw	64
   409  00F2DD  0000               	dw	0
   410  00F2DF  0038               	dw	56
   411  00F2E1  0000               	dw	0
   412  00F2E3  0007               	dw	7
   413  00F2E5  00E0               	dw	224
   414  00F2E7  0000               	dw	0
   415  00F2E9  001C               	dw	28
   416  00F2EB  0000               	dw	0
   417  00F2ED  0002               	dw	2
   418  00F2EF  0000               	dw	0
   419  00F2F1  0000               	dw	0
   420  00F2F3  0000               	dw	0
   421  00F2F5  0009               	dw	9
   422  00F2F7  00F8               	dw	248
   423  00F2F9  0007               	dw	7
   424  00F2FB  0004               	dw	4
   425  00F2FD  0008               	dw	8
   426  00F2FF  0002               	dw	2
   427  00F301  0010               	dw	16
   428  00F303  0002               	dw	2
   429  00F305  0010               	dw	16
   430  00F307  0002               	dw	2
   431  00F309  0010               	dw	16
   432  00F30B  0002               	dw	2
   433  00F30D  0010               	dw	16
   434  00F30F  0004               	dw	4
   435  00F311  0008               	dw	8
   436  00F313  00F8               	dw	248
   437  00F315  0007               	dw	7
   438  00F317  0000               	dw	0
   439  00F319  0000               	dw	0
   440  00F31B  0006               	dw	6
   441  00F31D  0000               	dw	0
   442  00F31F  0000               	dw	0
   443  00F321  0000               	dw	0
   444  00F323  0000               	dw	0
   445  00F325  0002               	dw	2
   446  00F327  0000               	dw	0
   447  00F329  0002               	dw	2
   448  00F32B  0000               	dw	0
   449  00F32D  00FE               	dw	254
   450  00F32F  001F               	dw	31
   451  00F331  0000               	dw	0
   452  00F333  0000               	dw	0
   453  00F335  0009               	dw	9
   454  00F337  0018               	dw	24
   455  00F339  0010               	dw	16
   456  00F33B  0004               	dw	4
   457  00F33D  0018               	dw	24
   458  00F33F  0002               	dw	2
   459  00F341  0014               	dw	20
   460  00F343  0002               	dw	2
   461  00F345  0012               	dw	18
   462  00F347  0002               	dw	2
   463  00F349  0011               	dw	17
   464  00F34B  0082               	dw	130
   465  00F34D  0010               	dw	16
   466  00F34F  0044               	dw	68
   467  00F351  0010               	dw	16
   468  00F353  0038               	dw	56
   469  00F355  0010               	dw	16
   470  00F357  0000               	dw	0
   471  00F359  0000               	dw	0
   472  00F35B  0009               	dw	9
   473  00F35D  0008               	dw	8
   474  00F35F  000C               	dw	12
   475  00F361  0004               	dw	4
   476  00F363  0010               	dw	16
   477  00F365  0002               	dw	2
   478  00F367  0010               	dw	16
   479  00F369  0042               	dw	66
   480  00F36B  0010               	dw	16
   481  00F36D  0042               	dw	66
   482  00F36F  0010               	dw	16
   483  00F371  0044               	dw	68
   484  00F373  0010               	dw	16
   485  00F375  00B8               	dw	184
   486  00F377  0008               	dw	8
   487  00F379  0000               	dw	0
   488  00F37B  0007               	dw	7
   489  00F37D  0000               	dw	0
   490  00F37F  0000               	dw	0
   491  00F381  0009               	dw	9
   492  00F383  0000               	dw	0
   493  00F385  0002               	dw	2
   494  00F387  0000               	dw	0
   495  00F389  0003               	dw	3
   496  00F38B  0080               	dw	128
   497  00F38D  0002               	dw	2
   498  00F38F  0060               	dw	96
   499  00F391  0002               	dw	2
   500  00F393  0010               	dw	16
   501  00F395  0002               	dw	2
   502  00F397  0008               	dw	8
   503  00F399  0002               	dw	2
   504  00F39B  00FE               	dw	254
   505  00F39D  001F               	dw	31
   506  00F39F  0000               	dw	0
   507  00F3A1  0002               	dw	2
   508  00F3A3  0000               	dw	0
   509  00F3A5  0000               	dw	0
   510  00F3A7  0009               	dw	9
   511  00F3A9  0000               	dw	0
   512  00F3AB  0004               	dw	4
   513  00F3AD  0070               	dw	112
   514  00F3AF  0008               	dw	8
   515  00F3B1  002E               	dw	46
   516  00F3B3  0010               	dw	16
   517  00F3B5  0022               	dw	34
   518  00F3B7  0010               	dw	16
   519  00F3B9  0022               	dw	34
   520  00F3BB  0010               	dw	16
   521  00F3BD  0022               	dw	34
   522  00F3BF  0010               	dw	16
   523  00F3C1  0042               	dw	66
   524  00F3C3  0008               	dw	8
   525  00F3C5  0082               	dw	130
   526  00F3C7  0007               	dw	7
   527  00F3C9  0000               	dw	0
   528  00F3CB  0000               	dw	0
   529  00F3CD  0009               	dw	9
   530  00F3CF  0000               	dw	0
   531  00F3D1  0000               	dw	0
   532  00F3D3  0000               	dw	0
   533  00F3D5  0007               	dw	7
   534  00F3D7  00C0               	dw	192
   535  00F3D9  0008               	dw	8
   536  00F3DB  0060               	dw	96
   537  00F3DD  0010               	dw	16
   538  00F3DF  0058               	dw	88
   539  00F3E1  0010               	dw	16
   540  00F3E3  0044               	dw	68
   541  00F3E5  0010               	dw	16
   542  00F3E7  0082               	dw	130
   543  00F3E9  0008               	dw	8
   544  00F3EB  0000               	dw	0
   545  00F3ED  0007               	dw	7
   546  00F3EF  0000               	dw	0
   547  00F3F1  0000               	dw	0
   548  00F3F3  0009               	dw	9
   549  00F3F5  0000               	dw	0
   550  00F3F7  0000               	dw	0
   551  00F3F9  0002               	dw	2
   552  00F3FB  0010               	dw	16
   553  00F3FD  0002               	dw	2
   554  00F3FF  000C               	dw	12
   555  00F401  0002               	dw	2
   556  00F403  0003               	dw	3
   557  00F405  00C2               	dw	194
   558  00F407  0000               	dw	0
   559  00F409  0032               	dw	50
   560  00F40B  0000               	dw	0
   561  00F40D  000E               	dw	14
   562  00F40F  0000               	dw	0
   563  00F411  0002               	dw	2
   564  00F413  0000               	dw	0
   565  00F415  0000               	dw	0
   566  00F417  0000               	dw	0
   567  00F419  0009               	dw	9
   568  00F41B  0000               	dw	0
   569  00F41D  0007               	dw	7
   570  00F41F  0098               	dw	152
   571  00F421  0008               	dw	8
   572  00F423  0064               	dw	100
   573  00F425  0010               	dw	16
   574  00F427  0042               	dw	66
   575  00F429  0010               	dw	16
   576  00F42B  0042               	dw	66
   577  00F42D  0010               	dw	16
   578  00F42F  0064               	dw	100
   579  00F431  0010               	dw	16
   580  00F433  0098               	dw	152
   581  00F435  0008               	dw	8
   582  00F437  0000               	dw	0
   583  00F439  0007               	dw	7
   584  00F43B  0000               	dw	0
   585  00F43D  0000               	dw	0
   586  00F43F  0009               	dw	9
   587  00F441  0000               	dw	0
   588  00F443  0000               	dw	0
   589  00F445  0038               	dw	56
   590  00F447  0000               	dw	0
   591  00F449  0044               	dw	68
   592  00F44B  0010               	dw	16
   593  00F44D  0082               	dw	130
   594  00F44F  0008               	dw	8
   595  00F451  0082               	dw	130
   596  00F453  0004               	dw	4
   597  00F455  0082               	dw	130
   598  00F457  0003               	dw	3
   599  00F459  0084               	dw	132
   600  00F45B  0000               	dw	0
   601  00F45D  0078               	dw	120
   602  00F45F  0000               	dw	0
   603  00F461  0000               	dw	0
   604  00F463  0000               	dw	0
   605  00F465  0004               	dw	4
   606  00F467  0000               	dw	0
   607  00F469  0000               	dw	0
   608  00F46B  0030               	dw	48
   609  00F46D  0018               	dw	24
   610  00F46F  0030               	dw	48
   611  00F471  0018               	dw	24
   612  00F473  0000               	dw	0
   613  00F475  0000               	dw	0
   614  00F477  0004               	dw	4
   615  00F479  0000               	dw	0
   616  00F47B  0000               	dw	0
   617  00F47D  0030               	dw	48
   618  00F47F  0060               	dw	96
   619  00F481  0030               	dw	48
   620  00F483  0018               	dw	24
   621  00F485  0000               	dw	0
   622  00F487  0000               	dw	0
   623  00F489  000A               	dw	10
   624  00F48B  0000               	dw	0
   625  00F48D  0000               	dw	0
   626  00F48F  0080               	dw	128
   627  00F491  0000               	dw	0
   628  00F493  0080               	dw	128
   629  00F495  0000               	dw	0
   630  00F497  0040               	dw	64
   631  00F499  0001               	dw	1
   632  00F49B  0020               	dw	32
   633  00F49D  0002               	dw	2
   634  00F49F  0020               	dw	32
   635  00F4A1  0002               	dw	2
   636  00F4A3  0010               	dw	16
   637  00F4A5  0004               	dw	4
   638  00F4A7  0010               	dw	16
   639  00F4A9  0004               	dw	4
   640  00F4AB  0008               	dw	8
   641  00F4AD  0008               	dw	8
   642  00F4AF  0000               	dw	0
   643  00F4B1  0000               	dw	0
   644  00F4B3  000A               	dw	10
   645  00F4B5  0000               	dw	0
   646  00F4B7  0000               	dw	0
   647  00F4B9  0020               	dw	32
   648  00F4BB  0001               	dw	1
   649  00F4BD  0020               	dw	32
   650  00F4BF  0001               	dw	1
   651  00F4C1  0020               	dw	32
   652  00F4C3  0001               	dw	1
   653  00F4C5  0020               	dw	32
   654  00F4C7  0001               	dw	1
   655  00F4C9  0020               	dw	32
   656  00F4CB  0001               	dw	1
   657  00F4CD  0020               	dw	32
   658  00F4CF  0001               	dw	1
   659  00F4D1  0020               	dw	32
   660  00F4D3  0001               	dw	1
   661  00F4D5  0020               	dw	32
   662  00F4D7  0001               	dw	1
   663  00F4D9  0000               	dw	0
   664  00F4DB  0000               	dw	0
   665  00F4DD  000A               	dw	10
   666  00F4DF  0000               	dw	0
   667  00F4E1  0000               	dw	0
   668  00F4E3  0008               	dw	8
   669  00F4E5  0008               	dw	8
   670  00F4E7  0010               	dw	16
   671  00F4E9  0004               	dw	4
   672  00F4EB  0010               	dw	16
   673  00F4ED  0004               	dw	4
   674  00F4EF  0020               	dw	32
   675  00F4F1  0002               	dw	2
   676  00F4F3  0020               	dw	32
   677  00F4F5  0002               	dw	2
   678  00F4F7  0040               	dw	64
   679  00F4F9  0001               	dw	1
   680  00F4FB  0080               	dw	128
   681  00F4FD  0000               	dw	0
   682  00F4FF  0080               	dw	128
   683  00F501  0000               	dw	0
   684  00F503  0000               	dw	0
   685  00F505  0000               	dw	0
   686  00F507  0008               	dw	8
   687  00F509  0000               	dw	0
   688  00F50B  0000               	dw	0
   689  00F50D  000C               	dw	12
   690  00F50F  0000               	dw	0
   691  00F511  0082               	dw	130
   692  00F513  0001               	dw	1
   693  00F515  0042               	dw	66
   694  00F517  0002               	dw	2
   695  00F519  0022               	dw	34
   696  00F51B  001A               	dw	26
   697  00F51D  0022               	dw	34
   698  00F51F  001A               	dw	26
   699  00F521  009C               	dw	156
   700  00F523  0001               	dw	1
   701  00F525  0000               	dw	0
   702  00F527  0000               	dw	0
   703  00F529  000E               	dw	14
   704  00F52B  0000               	dw	0
   705  00F52D  0000               	dw	0
   706  00F52F  00F0               	dw	240
   707  00F531  0003               	dw	3
   708  00F533  0008               	dw	8
   709  00F535  0004               	dw	4
   710  00F537  0004               	dw	4
   711  00F539  0008               	dw	8
   712  00F53B  00C2               	dw	194
   713  00F53D  0011               	dw	17
   714  00F53F  0022               	dw	34
   715  00F541  0012               	dw	18
   716  00F543  0012               	dw	18
   717  00F545  0012               	dw	18
   718  00F547  0012               	dw	18
   719  00F549  0012               	dw	18
   720  00F54B  00E2               	dw	226
   721  00F54D  0011               	dw	17
   722  00F54F  0012               	dw	18
   723  00F551  0012               	dw	18
   724  00F553  0004               	dw	4
   725  00F555  0012               	dw	18
   726  00F557  0008               	dw	8
   727  00F559  0009               	dw	9
   728  00F55B  00F0               	dw	240
   729  00F55D  0004               	dw	4
   730  00F55F  0000               	dw	0
   731  00F561  0000               	dw	0
   732  00F563  000D               	dw	13
   733  00F565  0000               	dw	0
   734  00F567  0000               	dw	0
   735  00F569  0000               	dw	0
   736  00F56B  0010               	dw	16
   737  00F56D  0000               	dw	0
   738  00F56F  000E               	dw	14
   739  00F571  0080               	dw	128
   740  00F573  0001               	dw	1
   741  00F575  0060               	dw	96
   742  00F577  0001               	dw	1
   743  00F579  001C               	dw	28
   744  00F57B  0001               	dw	1
   745  00F57D  0002               	dw	2
   746  00F57F  0001               	dw	1
   747  00F581  001C               	dw	28
   748  00F583  0001               	dw	1
   749  00F585  0060               	dw	96
   750  00F587  0001               	dw	1
   751  00F589  0080               	dw	128
   752  00F58B  0001               	dw	1
   753  00F58D  0000               	dw	0
   754  00F58F  000E               	dw	14
   755  00F591  0000               	dw	0
   756  00F593  0010               	dw	16
   757  00F595  0000               	dw	0
   758  00F597  0000               	dw	0
   759  00F599  0009               	dw	9
   760  00F59B  0000               	dw	0
   761  00F59D  0000               	dw	0
   762  00F59F  0000               	dw	0
   763  00F5A1  0000               	dw	0
   764  00F5A3  00FE               	dw	254
   765  00F5A5  001F               	dw	31
   766  00F5A7  0042               	dw	66
   767  00F5A9  0010               	dw	16
   768  00F5AB  0042               	dw	66
   769  00F5AD  0010               	dw	16
   770  00F5AF  0064               	dw	100
   771  00F5B1  0010               	dw	16
   772  00F5B3  0098               	dw	152
   773  00F5B5  0008               	dw	8
   774  00F5B7  0000               	dw	0
   775  00F5B9  0007               	dw	7
   776  00F5BB  0000               	dw	0
   777  00F5BD  0000               	dw	0
   778  00F5BF  000D               	dw	13
   779  00F5C1  0000               	dw	0
   780  00F5C3  0000               	dw	0
   781  00F5C5  00F0               	dw	240
   782  00F5C7  0003               	dw	3
   783  00F5C9  0008               	dw	8
   784  00F5CB  0004               	dw	4
   785  00F5CD  0004               	dw	4
   786  00F5CF  0008               	dw	8
   787  00F5D1  0002               	dw	2
   788  00F5D3  0010               	dw	16
   789  00F5D5  0002               	dw	2
   790  00F5D7  0010               	dw	16
   791  00F5D9  0002               	dw	2
   792  00F5DB  0010               	dw	16
   793  00F5DD  0002               	dw	2
   794  00F5DF  0010               	dw	16
   795  00F5E1  0002               	dw	2
   796  00F5E3  0010               	dw	16
   797  00F5E5  0004               	dw	4
   798  00F5E7  0008               	dw	8
   799  00F5E9  0004               	dw	4
   800  00F5EB  0008               	dw	8
   801  00F5ED  0008               	dw	8
   802  00F5EF  0004               	dw	4
   803  00F5F1  0000               	dw	0
   804  00F5F3  0000               	dw	0
   805  00F5F5  000C               	dw	12
   806  00F5F7  0000               	dw	0
   807  00F5F9  0000               	dw	0
   808  00F5FB  0000               	dw	0
   809  00F5FD  0000               	dw	0
   810  00F5FF  00FE               	dw	254
   811  00F601  001F               	dw	31
   812  00F603  0002               	dw	2
   813  00F605  0010               	dw	16
   814  00F607  0002               	dw	2
   815  00F609  0010               	dw	16
   816  00F60B  0002               	dw	2
   817  00F60D  0010               	dw	16
   818  00F60F  0002               	dw	2
   819  00F611  0010               	dw	16
   820  00F613  0002               	dw	2
   821  00F615  0010               	dw	16
   822  00F617  0004               	dw	4
   823  00F619  0008               	dw	8
   824  00F61B  0008               	dw	8
   825  00F61D  0004               	dw	4
   826  00F61F  00F0               	dw	240
   827  00F621  0003               	dw	3
   828  00F623  0000               	dw	0
   829  00F625  0000               	dw	0
   830  00F627  0009               	dw	9
   831  00F629  0000               	dw	0
   832  00F62B  0000               	dw	0
   833  00F62D  0000               	dw	0
   834  00F62F  0000               	dw	0
   835  00F631  00FE               	dw	254
   836  00F633  001F               	dw	31
   837  00F635  0042               	dw	66
   838  00F637  0010               	dw	16
   839  00F639  0042               	dw	66
   840  00F63B  0010               	dw	16
   841  00F63D  0042               	dw	66
   842  00F63F  0010               	dw	16
   843  00F641  0042               	dw	66
   844  00F643  0010               	dw	16
   845  00F645  0042               	dw	66
   846  00F647  0010               	dw	16
   847  00F649  0000               	dw	0
   848  00F64B  0000               	dw	0
   849  00F64D  0008               	dw	8
   850  00F64F  0000               	dw	0
   851  00F651  0000               	dw	0
   852  00F653  0000               	dw	0
   853  00F655  0000               	dw	0
   854  00F657  00FE               	dw	254
   855  00F659  001F               	dw	31
   856  00F65B  0042               	dw	66
   857  00F65D  0000               	dw	0
   858  00F65F  0042               	dw	66
   859  00F661  0000               	dw	0
   860  00F663  0042               	dw	66
   861  00F665  0000               	dw	0
   862  00F667  0042               	dw	66
   863  00F669  0000               	dw	0
   864  00F66B  0000               	dw	0
   865  00F66D  0000               	dw	0
   866  00F66F  000E               	dw	14
   867  00F671  0000               	dw	0
   868  00F673  0000               	dw	0
   869  00F675  00F0               	dw	240
   870  00F677  0003               	dw	3
   871  00F679  0008               	dw	8
   872  00F67B  0004               	dw	4
   873  00F67D  0004               	dw	4
   874  00F67F  0008               	dw	8
   875  00F681  0002               	dw	2
   876  00F683  0010               	dw	16
   877  00F685  0002               	dw	2
   878  00F687  0010               	dw	16
   879  00F689  0002               	dw	2
   880  00F68B  0010               	dw	16
   881  00F68D  0002               	dw	2
   882  00F68F  0010               	dw	16
   883  00F691  0082               	dw	130
   884  00F693  0010               	dw	16
   885  00F695  0084               	dw	132
   886  00F697  0010               	dw	16
   887  00F699  0084               	dw	132
   888  00F69B  0008               	dw	8
   889  00F69D  0088               	dw	136
   890  00F69F  0004               	dw	4
   891  00F6A1  0080               	dw	128
   892  00F6A3  0003               	dw	3
   893  00F6A5  0000               	dw	0
   894  00F6A7  0000               	dw	0
   895  00F6A9  000A               	dw	10
   896  00F6AB  0000               	dw	0
   897  00F6AD  0000               	dw	0
   898  00F6AF  0000               	dw	0
   899  00F6B1  0000               	dw	0
   900  00F6B3  00FE               	dw	254
   901  00F6B5  001F               	dw	31
   902  00F6B7  0040               	dw	64
   903  00F6B9  0000               	dw	0
   904  00F6BB  0040               	dw	64
   905  00F6BD  0000               	dw	0
   906  00F6BF  0040               	dw	64
   907  00F6C1  0000               	dw	0
   908  00F6C3  0040               	dw	64
   909  00F6C5  0000               	dw	0
   910  00F6C7  0040               	dw	64
   911  00F6C9  0000               	dw	0
   912  00F6CB  00FE               	dw	254
   913  00F6CD  001F               	dw	31
   914  00F6CF  0000               	dw	0
   915  00F6D1  0000               	dw	0
   916  00F6D3  0004               	dw	4
   917  00F6D5  0000               	dw	0
   918  00F6D7  0000               	dw	0
   919  00F6D9  0000               	dw	0
   920  00F6DB  0000               	dw	0
   921  00F6DD  00FE               	dw	254
   922  00F6DF  001F               	dw	31
   923  00F6E1  0000               	dw	0
   924  00F6E3  0000               	dw	0
   925  00F6E5  0007               	dw	7
   926  00F6E7  0000               	dw	0
   927  00F6E9  0000               	dw	0
   928  00F6EB  0000               	dw	0
   929  00F6ED  0008               	dw	8
   930  00F6EF  0000               	dw	0
   931  00F6F1  0010               	dw	16
   932  00F6F3  0000               	dw	0
   933  00F6F5  0010               	dw	16
   934  00F6F7  0000               	dw	0
   935  00F6F9  0008               	dw	8
   936  00F6FB  00FE               	dw	254
   937  00F6FD  0007               	dw	7
   938  00F6FF  0000               	dw	0
   939  00F701  0000               	dw	0
   940  00F703  0009               	dw	9
   941  00F705  0000               	dw	0
   942  00F707  0000               	dw	0
   943  00F709  0000               	dw	0
   944  00F70B  0000               	dw	0
   945  00F70D  00FE               	dw	254
   946  00F70F  001F               	dw	31
   947  00F711  0060               	dw	96
   948  00F713  0000               	dw	0
   949  00F715  0090               	dw	144
   950  00F717  0001               	dw	1
   951  00F719  0008               	dw	8
   952  00F71B  0002               	dw	2
   953  00F71D  0004               	dw	4
   954  00F71F  000C               	dw	12
   955  00F721  0002               	dw	2
   956  00F723  0010               	dw	16
   957  00F725  0000               	dw	0
   958  00F727  0000               	dw	0
   959  00F729  0008               	dw	8
   960  00F72B  0000               	dw	0
   961  00F72D  0000               	dw	0
   962  00F72F  0000               	dw	0
   963  00F731  0000               	dw	0
   964  00F733  00FE               	dw	254
   965  00F735  001F               	dw	31
   966  00F737  0000               	dw	0
   967  00F739  0010               	dw	16
   968  00F73B  0000               	dw	0
   969  00F73D  0010               	dw	16
   970  00F73F  0000               	dw	0
   971  00F741  0010               	dw	16
   972  00F743  0000               	dw	0
   973  00F745  0010               	dw	16
   974  00F747  0000               	dw	0
   975  00F749  0000               	dw	0
   976  00F74B  000F               	dw	15
   977  00F74D  0000               	dw	0
   978  00F74F  0000               	dw	0
   979  00F751  0000               	dw	0
   980  00F753  001C               	dw	28
   981  00F755  00F8               	dw	248
   982  00F757  0003               	dw	3
   983  00F759  0006               	dw	6
   984  00F75B  0000               	dw	0
   985  00F75D  0038               	dw	56
   986  00F75F  0000               	dw	0
   987  00F761  00C0               	dw	192
   988  00F763  0001               	dw	1
   989  00F765  0000               	dw	0
   990  00F767  000E               	dw	14
   991  00F769  0000               	dw	0
   992  00F76B  0010               	dw	16
   993  00F76D  0000               	dw	0
   994  00F76F  000E               	dw	14
   995  00F771  00C0               	dw	192
   996  00F773  0001               	dw	1
   997  00F775  0038               	dw	56
   998  00F777  0000               	dw	0
   999  00F779  0006               	dw	6
  1000  00F77B  0000               	dw	0
  1001  00F77D  00F8               	dw	248
  1002  00F77F  0003               	dw	3
  1003  00F781  0000               	dw	0
  1004  00F783  001C               	dw	28
  1005  00F785  0000               	dw	0
  1006  00F787  0000               	dw	0
  1007  00F789  000B               	dw	11
  1008  00F78B  0000               	dw	0
  1009  00F78D  0000               	dw	0
  1010  00F78F  0000               	dw	0
  1011  00F791  0000               	dw	0
  1012  00F793  00FE               	dw	254
  1013  00F795  001F               	dw	31
  1014  00F797  0008               	dw	8
  1015  00F799  0000               	dw	0
  1016  00F79B  0030               	dw	48
  1017  00F79D  0000               	dw	0
  1018  00F79F  0040               	dw	64
  1019  00F7A1  0000               	dw	0
  1020  00F7A3  0080               	dw	128
  1021  00F7A5  0000               	dw	0
  1022  00F7A7  0000               	dw	0
  1023  00F7A9  0003               	dw	3
  1024  00F7AB  0000               	dw	0
  1025  00F7AD  0004               	dw	4
  1026  00F7AF  00FE               	dw	254
  1027  00F7B1  001F               	dw	31
  1028  00F7B3  0000               	dw	0
  1029  00F7B5  0000               	dw	0
  1030  00F7B7  000E               	dw	14
  1031  00F7B9  0000               	dw	0
  1032  00F7BB  0000               	dw	0
  1033  00F7BD  00F0               	dw	240
  1034  00F7BF  0003               	dw	3
  1035  00F7C1  0008               	dw	8
  1036  00F7C3  0004               	dw	4
  1037  00F7C5  0004               	dw	4
  1038  00F7C7  0008               	dw	8
  1039  00F7C9  0002               	dw	2
  1040  00F7CB  0010               	dw	16
  1041  00F7CD  0002               	dw	2
  1042  00F7CF  0010               	dw	16
  1043  00F7D1  0002               	dw	2
  1044  00F7D3  0010               	dw	16
  1045  00F7D5  0002               	dw	2
  1046  00F7D7  0010               	dw	16
  1047  00F7D9  0002               	dw	2
  1048  00F7DB  0010               	dw	16
  1049  00F7DD  0002               	dw	2
  1050  00F7DF  0010               	dw	16
  1051  00F7E1  0004               	dw	4
  1052  00F7E3  0008               	dw	8
  1053  00F7E5  0008               	dw	8
  1054  00F7E7  0004               	dw	4
  1055  00F7E9  00F0               	dw	240
  1056  00F7EB  0003               	dw	3
  1057  00F7ED  0000               	dw	0
  1058  00F7EF  0000               	dw	0
  1059  00F7F1  0009               	dw	9
  1060  00F7F3  0000               	dw	0
  1061  00F7F5  0000               	dw	0
  1062  00F7F7  0000               	dw	0
  1063  00F7F9  0000               	dw	0
  1064  00F7FB  00FE               	dw	254
  1065  00F7FD  001F               	dw	31
  1066  00F7FF  0042               	dw	66
  1067  00F801  0000               	dw	0
  1068  00F803  0042               	dw	66
  1069  00F805  0000               	dw	0
  1070  00F807  0042               	dw	66
  1071  00F809  0000               	dw	0
  1072  00F80B  0024               	dw	36
  1073  00F80D  0000               	dw	0
  1074  00F80F  0018               	dw	24
  1075  00F811  0000               	dw	0
  1076  00F813  0000               	dw	0
  1077  00F815  0000               	dw	0
  1078  00F817  000E               	dw	14
  1079  00F819  0000               	dw	0
  1080  00F81B  0000               	dw	0
  1081  00F81D  00F0               	dw	240
  1082  00F81F  0003               	dw	3
  1083  00F821  0008               	dw	8
  1084  00F823  0004               	dw	4
  1085  00F825  0004               	dw	4
  1086  00F827  0008               	dw	8
  1087  00F829  0002               	dw	2
  1088  00F82B  0010               	dw	16
  1089  00F82D  0002               	dw	2
  1090  00F82F  0010               	dw	16
  1091  00F831  0002               	dw	2
  1092  00F833  0010               	dw	16
  1093  00F835  0002               	dw	2
  1094  00F837  0011               	dw	17
  1095  00F839  0002               	dw	2
  1096  00F83B  0012               	dw	18
  1097  00F83D  0002               	dw	2
  1098  00F83F  000C               	dw	12
  1099  00F841  0004               	dw	4
  1100  00F843  0008               	dw	8
  1101  00F845  0008               	dw	8
  1102  00F847  0016               	dw	22
  1103  00F849  00F0               	dw	240
  1104  00F84B  0021               	dw	33
  1105  00F84D  0000               	dw	0
  1106  00F84F  0000               	dw	0
  1107  00F851  000A               	dw	10
  1108  00F853  0000               	dw	0
  1109  00F855  0000               	dw	0
  1110  00F857  0000               	dw	0
  1111  00F859  0000               	dw	0
  1112  00F85B  00FE               	dw	254
  1113  00F85D  001F               	dw	31
  1114  00F85F  0042               	dw	66
  1115  00F861  0000               	dw	0
  1116  00F863  00C2               	dw	194
  1117  00F865  0000               	dw	0
  1118  00F867  0042               	dw	66
  1119  00F869  0001               	dw	1
  1120  00F86B  0042               	dw	66
  1121  00F86D  0006               	dw	6
  1122  00F86F  0024               	dw	36
  1123  00F871  0008               	dw	8
  1124  00F873  0018               	dw	24
  1125  00F875  0010               	dw	16
  1126  00F877  0000               	dw	0
  1127  00F879  0000               	dw	0
  1128  00F87B  0008               	dw	8
  1129  00F87D  0000               	dw	0
  1130  00F87F  0004               	dw	4
  1131  00F881  0018               	dw	24
  1132  00F883  0008               	dw	8
  1133  00F885  0024               	dw	36
  1134  00F887  0010               	dw	16
  1135  00F889  0042               	dw	66
  1136  00F88B  0010               	dw	16
  1137  00F88D  0042               	dw	66
  1138  00F88F  0010               	dw	16
  1139  00F891  0084               	dw	132
  1140  00F893  0008               	dw	8
  1141  00F895  0008               	dw	8
  1142  00F897  0007               	dw	7
  1143  00F899  0000               	dw	0
  1144  00F89B  0000               	dw	0
  1145  00F89D  0008               	dw	8
  1146  00F89F  0002               	dw	2
  1147  00F8A1  0000               	dw	0
  1148  00F8A3  0002               	dw	2
  1149  00F8A5  0000               	dw	0
  1150  00F8A7  0002               	dw	2
  1151  00F8A9  0000               	dw	0
  1152  00F8AB  00FE               	dw	254
  1153  00F8AD  001F               	dw	31
  1154  00F8AF  0002               	dw	2
  1155  00F8B1  0000               	dw	0
  1156  00F8B3  0002               	dw	2
  1157  00F8B5  0000               	dw	0
  1158  00F8B7  0002               	dw	2
  1159  00F8B9  0000               	dw	0
  1160  00F8BB  0000               	dw	0
  1161  00F8BD  0000               	dw	0
  1162  00F8BF  000A               	dw	10
  1163  00F8C1  0000               	dw	0
  1164  00F8C3  0000               	dw	0
  1165  00F8C5  0000               	dw	0
  1166  00F8C7  0000               	dw	0
  1167  00F8C9  00FE               	dw	254
  1168  00F8CB  0007               	dw	7
  1169  00F8CD  0000               	dw	0
  1170  00F8CF  0008               	dw	8
  1171  00F8D1  0000               	dw	0
  1172  00F8D3  0010               	dw	16
  1173  00F8D5  0000               	dw	0
  1174  00F8D7  0010               	dw	16
  1175  00F8D9  0000               	dw	0
  1176  00F8DB  0010               	dw	16
  1177  00F8DD  0000               	dw	0
  1178  00F8DF  0008               	dw	8
  1179  00F8E1  00FE               	dw	254
  1180  00F8E3  0007               	dw	7
  1181  00F8E5  0000               	dw	0
  1182  00F8E7  0000               	dw	0
  1183  00F8E9  000C               	dw	12
  1184  00F8EB  0002               	dw	2
  1185  00F8ED  0000               	dw	0
  1186  00F8EF  001C               	dw	28
  1187  00F8F1  0000               	dw	0
  1188  00F8F3  0060               	dw	96
  1189  00F8F5  0000               	dw	0
  1190  00F8F7  0080               	dw	128
  1191  00F8F9  0001               	dw	1
  1192  00F8FB  0000               	dw	0
  1193  00F8FD  000E               	dw	14
  1194  00F8FF  0000               	dw	0
  1195  00F901  0010               	dw	16
  1196  00F903  0000               	dw	0
  1197  00F905  000E               	dw	14
  1198  00F907  0080               	dw	128
  1199  00F909  0001               	dw	1
  1200  00F90B  0060               	dw	96
  1201  00F90D  0000               	dw	0
  1202  00F90F  001C               	dw	28
  1203  00F911  0000               	dw	0
  1204  00F913  0002               	dw	2
  1205  00F915  0000               	dw	0
  1206  00F917  0000               	dw	0
  1207  00F919  0000               	dw	0
  1208  00F91B  000F               	dw	15
  1209  00F91D  0000               	dw	0
  1210  00F91F  0000               	dw	0
  1211  00F921  0006               	dw	6
  1212  00F923  0000               	dw	0
  1213  00F925  0078               	dw	120
  1214  00F927  0000               	dw	0
  1215  00F929  0080               	dw	128
  1216  00F92B  0007               	dw	7
  1217  00F92D  0000               	dw	0
  1218  00F92F  0018               	dw	24
  1219  00F931  0080               	dw	128
  1220  00F933  0007               	dw	7
  1221  00F935  0078               	dw	120
  1222  00F937  0000               	dw	0
  1223  00F939  0006               	dw	6
  1224  00F93B  0000               	dw	0
  1225  00F93D  0078               	dw	120
  1226  00F93F  0000               	dw	0
  1227  00F941  0080               	dw	128
  1228  00F943  0007               	dw	7
  1229  00F945  0000               	dw	0
  1230  00F947  0018               	dw	24
  1231  00F949  0080               	dw	128
  1232  00F94B  0007               	dw	7
  1233  00F94D  0078               	dw	120
  1234  00F94F  0000               	dw	0
  1235  00F951  0006               	dw	6
  1236  00F953  0000               	dw	0
  1237  00F955  0000               	dw	0
  1238  00F957  0000               	dw	0
  1239  00F959  0009               	dw	9
  1240  00F95B  0000               	dw	0
  1241  00F95D  0000               	dw	0
  1242  00F95F  0006               	dw	6
  1243  00F961  0018               	dw	24
  1244  00F963  0008               	dw	8
  1245  00F965  0004               	dw	4
  1246  00F967  0030               	dw	48
  1247  00F969  0003               	dw	3
  1248  00F96B  00C0               	dw	192
  1249  00F96D  0000               	dw	0
  1250  00F96F  0030               	dw	48
  1251  00F971  0003               	dw	3
  1252  00F973  0008               	dw	8
  1253  00F975  0004               	dw	4
  1254  00F977  0006               	dw	6
  1255  00F979  0018               	dw	24
  1256  00F97B  0000               	dw	0
  1257  00F97D  0000               	dw	0
  1258  00F97F  000B               	dw	11
  1259  00F981  0000               	dw	0
  1260  00F983  0000               	dw	0
  1261  00F985  0002               	dw	2
  1262  00F987  0000               	dw	0
  1263  00F989  0004               	dw	4
  1264  00F98B  0000               	dw	0
  1265  00F98D  0018               	dw	24
  1266  00F98F  0000               	dw	0
  1267  00F991  0060               	dw	96
  1268  00F993  0000               	dw	0
  1269  00F995  0080               	dw	128
  1270  00F997  001F               	dw	31
  1271  00F999  0060               	dw	96
  1272  00F99B  0000               	dw	0
  1273  00F99D  0018               	dw	24
  1274  00F99F  0000               	dw	0
  1275  00F9A1  0004               	dw	4
  1276  00F9A3  0000               	dw	0
  1277  00F9A5  0002               	dw	2
  1278  00F9A7  0000               	dw	0
  1279  00F9A9  0000               	dw	0
  1280  00F9AB  0000               	dw	0
  1281  00F9AD  0008               	dw	8
  1282  00F9AF  0002               	dw	2
  1283  00F9B1  0010               	dw	16
  1284  00F9B3  0002               	dw	2
  1285  00F9B5  001C               	dw	28
  1286  00F9B7  0002               	dw	2
  1287  00F9B9  0013               	dw	19
  1288  00F9BB  00C2               	dw	194
  1289  00F9BD  0010               	dw	16
  1290  00F9BF  0032               	dw	50
  1291  00F9C1  0010               	dw	16
  1292  00F9C3  000E               	dw	14
  1293  00F9C5  0010               	dw	16
  1294  00F9C7  0002               	dw	2
  1295  00F9C9  0010               	dw	16
  1296  00F9CB  0000               	dw	0
  1297  00F9CD  0000               	dw	0
  1298  00F9CF  0006               	dw	6
  1299  00F9D1  0000               	dw	0
  1300  00F9D3  0000               	dw	0
  1301  00F9D5  0000               	dw	0
  1302  00F9D7  0000               	dw	0
  1303  00F9D9  00FE               	dw	254
  1304  00F9DB  00FF               	dw	255
  1305  00F9DD  0002               	dw	2
  1306  00F9DF  0080               	dw	128
  1307  00F9E1  0002               	dw	2
  1308  00F9E3  0080               	dw	128
  1309  00F9E5  0000               	dw	0
  1310  00F9E7  0000               	dw	0
  1311  00F9E9  000A               	dw	10
  1312  00F9EB  0002               	dw	2
  1313  00F9ED  0000               	dw	0
  1314  00F9EF  000C               	dw	12
  1315  00F9F1  0000               	dw	0
  1316  00F9F3  0010               	dw	16
  1317  00F9F5  0000               	dw	0
  1318  00F9F7  0060               	dw	96
  1319  00F9F9  0000               	dw	0
  1320  00F9FB  0080               	dw	128
  1321  00F9FD  0001               	dw	1
  1322  00F9FF  0000               	dw	0
  1323  00FA01  0006               	dw	6
  1324  00FA03  0000               	dw	0
  1325  00FA05  0008               	dw	8
  1326  00FA07  0000               	dw	0
  1327  00FA09  0030               	dw	48
  1328  00FA0B  0000               	dw	0
  1329  00FA0D  0040               	dw	64
  1330  00FA0F  0000               	dw	0
  1331  00FA11  0000               	dw	0
  1332  00FA13  0005               	dw	5
  1333  00FA15  0000               	dw	0
  1334  00FA17  0000               	dw	0
  1335  00FA19  0002               	dw	2
  1336  00FA1B  0080               	dw	128
  1337  00FA1D  0002               	dw	2
  1338  00FA1F  0080               	dw	128
  1339  00FA21  00FE               	dw	254
  1340  00FA23  00FF               	dw	255
  1341  00FA25  0000               	dw	0
  1342  00FA27  0000               	dw	0
  1343  00FA29  000B               	dw	11
  1344  00FA2B  0000               	dw	0
  1345  00FA2D  0000               	dw	0
  1346  00FA2F  0000               	dw	0
  1347  00FA31  0002               	dw	2
  1348  00FA33  0080               	dw	128
  1349  00FA35  0001               	dw	1
  1350  00FA37  0070               	dw	112
  1351  00FA39  0000               	dw	0
  1352  00FA3B  000C               	dw	12
  1353  00FA3D  0000               	dw	0
  1354  00FA3F  0002               	dw	2
  1355  00FA41  0000               	dw	0
  1356  00FA43  000C               	dw	12
  1357  00FA45  0000               	dw	0
  1358  00FA47  0070               	dw	112
  1359  00FA49  0000               	dw	0
  1360  00FA4B  0080               	dw	128
  1361  00FA4D  0001               	dw	1
  1362  00FA4F  0000               	dw	0
  1363  00FA51  0002               	dw	2
  1364  00FA53  0000               	dw	0
  1365  00FA55  0000               	dw	0
  1366  00FA57  0009               	dw	9
  1367  00FA59  0000               	dw	0
  1368  00FA5B  0040               	dw	64
  1369  00FA5D  0000               	dw	0
  1370  00FA5F  0040               	dw	64
  1371  00FA61  0000               	dw	0
  1372  00FA63  0040               	dw	64
  1373  00FA65  0000               	dw	0
  1374  00FA67  0040               	dw	64
  1375  00FA69  0000               	dw	0
  1376  00FA6B  0040               	dw	64
  1377  00FA6D  0000               	dw	0
  1378  00FA6F  0040               	dw	64
  1379  00FA71  0000               	dw	0
  1380  00FA73  0040               	dw	64
  1381  00FA75  0000               	dw	0
  1382  00FA77  0040               	dw	64
  1383  00FA79  0000               	dw	0
  1384  00FA7B  0000               	dw	0
  1385  00FA7D  0005               	dw	5
  1386  00FA7F  0000               	dw	0
  1387  00FA81  0000               	dw	0
  1388  00FA83  0000               	dw	0
  1389  00FA85  0000               	dw	0
  1390  00FA87  0002               	dw	2
  1391  00FA89  0000               	dw	0
  1392  00FA8B  0004               	dw	4
  1393  00FA8D  0000               	dw	0
  1394  00FA8F  0000               	dw	0
  1395  00FA91  0000               	dw	0
  1396  00FA93  000B               	dw	11
  1397  00FA95  0000               	dw	0
  1398  00FA97  0000               	dw	0
  1399  00FA99  00C0               	dw	192
  1400  00FA9B  0007               	dw	7
  1401  00FA9D  0020               	dw	32
  1402  00FA9F  0008               	dw	8
  1403  00FAA1  0010               	dw	16
  1404  00FAA3  0010               	dw	16
  1405  00FAA5  0010               	dw	16
  1406  00FAA7  0010               	dw	16
  1407  00FAA9  0010               	dw	16
  1408  00FAAB  0010               	dw	16
  1409  00FAAD  0010               	dw	16
  1410  00FAAF  0010               	dw	16
  1411  00FAB1  0010               	dw	16
  1412  00FAB3  0010               	dw	16
  1413  00FAB5  0020               	dw	32
  1414  00FAB7  0008               	dw	8
  1415  00FAB9  00F0               	dw	240
  1416  00FABB  001F               	dw	31
  1417  00FABD  0000               	dw	0
  1418  00FABF  0000               	dw	0
  1419  00FAC1  000B               	dw	11
  1420  00FAC3  0000               	dw	0
  1421  00FAC5  0000               	dw	0
  1422  00FAC7  00FE               	dw	254
  1423  00FAC9  001F               	dw	31
  1424  00FACB  0020               	dw	32
  1425  00FACD  0008               	dw	8
  1426  00FACF  0010               	dw	16
  1427  00FAD1  0010               	dw	16
  1428  00FAD3  0010               	dw	16
  1429  00FAD5  0010               	dw	16
  1430  00FAD7  0010               	dw	16
  1431  00FAD9  0010               	dw	16
  1432  00FADB  0010               	dw	16
  1433  00FADD  0010               	dw	16
  1434  00FADF  0010               	dw	16
  1435  00FAE1  0010               	dw	16
  1436  00FAE3  0020               	dw	32
  1437  00FAE5  0008               	dw	8
  1438  00FAE7  00C0               	dw	192
  1439  00FAE9  0007               	dw	7
  1440  00FAEB  0000               	dw	0
  1441  00FAED  0000               	dw	0
  1442  00FAEF  000A               	dw	10
  1443  00FAF1  0000               	dw	0
  1444  00FAF3  0000               	dw	0
  1445  00FAF5  00C0               	dw	192
  1446  00FAF7  0007               	dw	7
  1447  00FAF9  0020               	dw	32
  1448  00FAFB  0008               	dw	8
  1449  00FAFD  0010               	dw	16
  1450  00FAFF  0010               	dw	16
  1451  00FB01  0010               	dw	16
  1452  00FB03  0010               	dw	16
  1453  00FB05  0010               	dw	16
  1454  00FB07  0010               	dw	16
  1455  00FB09  0010               	dw	16
  1456  00FB0B  0010               	dw	16
  1457  00FB0D  0020               	dw	32
  1458  00FB0F  0008               	dw	8
  1459  00FB11  0040               	dw	64
  1460  00FB13  0004               	dw	4
  1461  00FB15  0000               	dw	0
  1462  00FB17  0000               	dw	0
  1463  00FB19  000B               	dw	11
  1464  00FB1B  0000               	dw	0
  1465  00FB1D  0000               	dw	0
  1466  00FB1F  00C0               	dw	192
  1467  00FB21  0007               	dw	7
  1468  00FB23  0020               	dw	32
  1469  00FB25  0008               	dw	8
  1470  00FB27  0010               	dw	16
  1471  00FB29  0010               	dw	16
  1472  00FB2B  0010               	dw	16
  1473  00FB2D  0010               	dw	16
  1474  00FB2F  0010               	dw	16
  1475  00FB31  0010               	dw	16
  1476  00FB33  0010               	dw	16
  1477  00FB35  0010               	dw	16
  1478  00FB37  0010               	dw	16
  1479  00FB39  0010               	dw	16
  1480  00FB3B  0020               	dw	32
  1481  00FB3D  0008               	dw	8
  1482  00FB3F  00FE               	dw	254
  1483  00FB41  001F               	dw	31
  1484  00FB43  0000               	dw	0
  1485  00FB45  0000               	dw	0
  1486  00FB47  000A               	dw	10
  1487  00FB49  0000               	dw	0
  1488  00FB4B  0000               	dw	0
  1489  00FB4D  00C0               	dw	192
  1490  00FB4F  0007               	dw	7
  1491  00FB51  0020               	dw	32
  1492  00FB53  0009               	dw	9
  1493  00FB55  0010               	dw	16
  1494  00FB57  0011               	dw	17
  1495  00FB59  0010               	dw	16
  1496  00FB5B  0011               	dw	17
  1497  00FB5D  0010               	dw	16
  1498  00FB5F  0011               	dw	17
  1499  00FB61  0010               	dw	16
  1500  00FB63  0011               	dw	17
  1501  00FB65  0020               	dw	32
  1502  00FB67  0009               	dw	9
  1503  00FB69  00C0               	dw	192
  1504  00FB6B  0005               	dw	5
  1505  00FB6D  0000               	dw	0
  1506  00FB6F  0000               	dw	0
  1507  00FB71  0006               	dw	6
  1508  00FB73  0000               	dw	0
  1509  00FB75  0000               	dw	0
  1510  00FB77  0010               	dw	16
  1511  00FB79  0000               	dw	0
  1512  00FB7B  00FC               	dw	252
  1513  00FB7D  001F               	dw	31
  1514  00FB7F  0012               	dw	18
  1515  00FB81  0000               	dw	0
  1516  00FB83  0012               	dw	18
  1517  00FB85  0000               	dw	0
  1518  00FB87  0000               	dw	0
  1519  00FB89  0000               	dw	0
  1520  00FB8B  000B               	dw	11
  1521  00FB8D  0000               	dw	0
  1522  00FB8F  0000               	dw	0
  1523  00FB91  00C0               	dw	192
  1524  00FB93  0027               	dw	39
  1525  00FB95  0020               	dw	32
  1526  00FB97  0048               	dw	72
  1527  00FB99  0010               	dw	16
  1528  00FB9B  0090               	dw	144
  1529  00FB9D  0010               	dw	16
  1530  00FB9F  0090               	dw	144
  1531  00FBA1  0010               	dw	16
  1532  00FBA3  0090               	dw	144
  1533  00FBA5  0010               	dw	16
  1534  00FBA7  0090               	dw	144
  1535  00FBA9  0010               	dw	16
  1536  00FBAB  0090               	dw	144
  1537  00FBAD  0020               	dw	32
  1538  00FBAF  0048               	dw	72
  1539  00FBB1  00F0               	dw	240
  1540  00FBB3  003F               	dw	63
  1541  00FBB5  0000               	dw	0
  1542  00FBB7  0000               	dw	0
  1543  00FBB9  000A               	dw	10
  1544  00FBBB  0000               	dw	0
  1545  00FBBD  0000               	dw	0
  1546  00FBBF  00FE               	dw	254
  1547  00FBC1  001F               	dw	31
  1548  00FBC3  0020               	dw	32
  1549  00FBC5  0000               	dw	0
  1550  00FBC7  0010               	dw	16
  1551  00FBC9  0000               	dw	0
  1552  00FBCB  0010               	dw	16
  1553  00FBCD  0000               	dw	0
  1554  00FBCF  0010               	dw	16
  1555  00FBD1  0000               	dw	0
  1556  00FBD3  0010               	dw	16
  1557  00FBD5  0000               	dw	0
  1558  00FBD7  0020               	dw	32
  1559  00FBD9  0000               	dw	0
  1560  00FBDB  00C0               	dw	192
  1561  00FBDD  001F               	dw	31
  1562  00FBDF  0000               	dw	0
  1563  00FBE1  0000               	dw	0
  1564  00FBE3  0003               	dw	3
  1565  00FBE5  0000               	dw	0
  1566  00FBE7  0000               	dw	0
  1567  00FBE9  00F6               	dw	246
  1568  00FBEB  001F               	dw	31
  1569  00FBED  0000               	dw	0
  1570  00FBEF  0000               	dw	0
  1571  00FBF1  0003               	dw	3
  1572  00FBF3  0000               	dw	0
  1573  00FBF5  0080               	dw	128
  1574  00FBF7  00F6               	dw	246
  1575  00FBF9  007F               	dw	127
  1576  00FBFB  0000               	dw	0
  1577  00FBFD  0000               	dw	0
  1578  00FBFF  0008               	dw	8
  1579  00FC01  0000               	dw	0
  1580  00FC03  0000               	dw	0
  1581  00FC05  00FE               	dw	254
  1582  00FC07  001F               	dw	31
  1583  00FC09  0000               	dw	0
  1584  00FC0B  0001               	dw	1
  1585  00FC0D  0080               	dw	128
  1586  00FC0F  0002               	dw	2
  1587  00FC11  0040               	dw	64
  1588  00FC13  0004               	dw	4
  1589  00FC15  0020               	dw	32
  1590  00FC17  0008               	dw	8
  1591  00FC19  0010               	dw	16
  1592  00FC1B  0010               	dw	16
  1593  00FC1D  0000               	dw	0
  1594  00FC1F  0000               	dw	0
  1595  00FC21  0003               	dw	3
  1596  00FC23  0000               	dw	0
  1597  00FC25  0000               	dw	0
  1598  00FC27  00FE               	dw	254
  1599  00FC29  001F               	dw	31
  1600  00FC2B  0000               	dw	0
  1601  00FC2D  0000               	dw	0
  1602  00FC2F  000F               	dw	15
  1603  00FC31  0000               	dw	0
  1604  00FC33  0000               	dw	0
  1605  00FC35  00F0               	dw	240
  1606  00FC37  001F               	dw	31
  1607  00FC39  0020               	dw	32
  1608  00FC3B  0000               	dw	0
  1609  00FC3D  0010               	dw	16
  1610  00FC3F  0000               	dw	0
  1611  00FC41  0010               	dw	16
  1612  00FC43  0000               	dw	0
  1613  00FC45  0010               	dw	16
  1614  00FC47  0000               	dw	0
  1615  00FC49  0020               	dw	32
  1616  00FC4B  0000               	dw	0
  1617  00FC4D  00C0               	dw	192
  1618  00FC4F  001F               	dw	31
  1619  00FC51  0020               	dw	32
  1620  00FC53  0000               	dw	0
  1621  00FC55  0010               	dw	16
  1622  00FC57  0000               	dw	0
  1623  00FC59  0010               	dw	16
  1624  00FC5B  0000               	dw	0
  1625  00FC5D  0010               	dw	16
  1626  00FC5F  0000               	dw	0
  1627  00FC61  0020               	dw	32
  1628  00FC63  0000               	dw	0
  1629  00FC65  00C0               	dw	192
  1630  00FC67  001F               	dw	31
  1631  00FC69  0000               	dw	0
  1632  00FC6B  0000               	dw	0
  1633  00FC6D  000A               	dw	10
  1634  00FC6F  0000               	dw	0
  1635  00FC71  0000               	dw	0
  1636  00FC73  00F0               	dw	240
  1637  00FC75  001F               	dw	31
  1638  00FC77  0020               	dw	32
  1639  00FC79  0000               	dw	0
  1640  00FC7B  0010               	dw	16
  1641  00FC7D  0000               	dw	0
  1642  00FC7F  0010               	dw	16
  1643  00FC81  0000               	dw	0
  1644  00FC83  0010               	dw	16
  1645  00FC85  0000               	dw	0
  1646  00FC87  0010               	dw	16
  1647  00FC89  0000               	dw	0
  1648  00FC8B  0020               	dw	32
  1649  00FC8D  0000               	dw	0
  1650  00FC8F  00C0               	dw	192
  1651  00FC91  001F               	dw	31
  1652  00FC93  0000               	dw	0
  1653  00FC95  0000               	dw	0
  1654  00FC97  000A               	dw	10
  1655  00FC99  0000               	dw	0
  1656  00FC9B  0000               	dw	0
  1657  00FC9D  00C0               	dw	192
  1658  00FC9F  0007               	dw	7
  1659  00FCA1  0020               	dw	32
  1660  00FCA3  0008               	dw	8
  1661  00FCA5  0010               	dw	16
  1662  00FCA7  0010               	dw	16
  1663  00FCA9  0010               	dw	16
  1664  00FCAB  0010               	dw	16
  1665  00FCAD  0010               	dw	16
  1666  00FCAF  0010               	dw	16
  1667  00FCB1  0010               	dw	16
  1668  00FCB3  0010               	dw	16
  1669  00FCB5  0020               	dw	32
  1670  00FCB7  0008               	dw	8
  1671  00FCB9  00C0               	dw	192
  1672  00FCBB  0007               	dw	7
  1673  00FCBD  0000               	dw	0
  1674  00FCBF  0000               	dw	0
  1675  00FCC1  000B               	dw	11
  1676  00FCC3  0000               	dw	0
  1677  00FCC5  0000               	dw	0
  1678  00FCC7  00F0               	dw	240
  1679  00FCC9  00FF               	dw	255
  1680  00FCCB  0020               	dw	32
  1681  00FCCD  0008               	dw	8
  1682  00FCCF  0010               	dw	16
  1683  00FCD1  0010               	dw	16
  1684  00FCD3  0010               	dw	16
  1685  00FCD5  0010               	dw	16
  1686  00FCD7  0010               	dw	16
  1687  00FCD9  0010               	dw	16
  1688  00FCDB  0010               	dw	16
  1689  00FCDD  0010               	dw	16
  1690  00FCDF  0010               	dw	16
  1691  00FCE1  0010               	dw	16
  1692  00FCE3  0020               	dw	32
  1693  00FCE5  0008               	dw	8
  1694  00FCE7  00C0               	dw	192
  1695  00FCE9  0007               	dw	7
  1696  00FCEB  0000               	dw	0
  1697  00FCED  0000               	dw	0
  1698  00FCEF  000B               	dw	11
  1699  00FCF1  0000               	dw	0
  1700  00FCF3  0000               	dw	0
  1701  00FCF5  00C0               	dw	192
  1702  00FCF7  0007               	dw	7
  1703  00FCF9  0020               	dw	32
  1704  00FCFB  0008               	dw	8
  1705  00FCFD  0010               	dw	16
  1706  00FCFF  0010               	dw	16
  1707  00FD01  0010               	dw	16
  1708  00FD03  0010               	dw	16
  1709  00FD05  0010               	dw	16
  1710  00FD07  0010               	dw	16
  1711  00FD09  0010               	dw	16
  1712  00FD0B  0010               	dw	16
  1713  00FD0D  0010               	dw	16
  1714  00FD0F  0010               	dw	16
  1715  00FD11  0020               	dw	32
  1716  00FD13  0008               	dw	8
  1717  00FD15  00F0               	dw	240
  1718  00FD17  00FF               	dw	255
  1719  00FD19  0000               	dw	0
  1720  00FD1B  0000               	dw	0
  1721  00FD1D  0006               	dw	6
  1722  00FD1F  0000               	dw	0
  1723  00FD21  0000               	dw	0
  1724  00FD23  00F0               	dw	240
  1725  00FD25  001F               	dw	31
  1726  00FD27  0020               	dw	32
  1727  00FD29  0000               	dw	0
  1728  00FD2B  0010               	dw	16
  1729  00FD2D  0000               	dw	0
  1730  00FD2F  0010               	dw	16
  1731  00FD31  0000               	dw	0
  1732  00FD33  0000               	dw	0
  1733  00FD35  0000               	dw	0
  1734  00FD37  0006               	dw	6
  1735  00FD39  0060               	dw	96
  1736  00FD3B  0008               	dw	8
  1737  00FD3D  0090               	dw	144
  1738  00FD3F  0010               	dw	16
  1739  00FD41  0010               	dw	16
  1740  00FD43  0011               	dw	17
  1741  00FD45  0010               	dw	16
  1742  00FD47  0011               	dw	17
  1743  00FD49  0020               	dw	32
  1744  00FD4B  000E               	dw	14
  1745  00FD4D  0000               	dw	0
  1746  00FD4F  0000               	dw	0
  1747  00FD51  0007               	dw	7
  1748  00FD53  0000               	dw	0
  1749  00FD55  0000               	dw	0
  1750  00FD57  0010               	dw	16
  1751  00FD59  0000               	dw	0
  1752  00FD5B  0010               	dw	16
  1753  00FD5D  0000               	dw	0
  1754  00FD5F  00FE               	dw	254
  1755  00FD61  001F               	dw	31
  1756  00FD63  0010               	dw	16
  1757  00FD65  0000               	dw	0
  1758  00FD67  0010               	dw	16
  1759  00FD69  0000               	dw	0
  1760  00FD6B  0000               	dw	0
  1761  00FD6D  0000               	dw	0
  1762  00FD6F  000A               	dw	10
  1763  00FD71  0000               	dw	0
  1764  00FD73  0000               	dw	0
  1765  00FD75  00F0               	dw	240
  1766  00FD77  0007               	dw	7
  1767  00FD79  0000               	dw	0
  1768  00FD7B  0008               	dw	8
  1769  00FD7D  0000               	dw	0
  1770  00FD7F  0010               	dw	16
  1771  00FD81  0000               	dw	0
  1772  00FD83  0010               	dw	16
  1773  00FD85  0000               	dw	0
  1774  00FD87  0010               	dw	16
  1775  00FD89  0000               	dw	0
  1776  00FD8B  0010               	dw	16
  1777  00FD8D  0000               	dw	0
  1778  00FD8F  0008               	dw	8
  1779  00FD91  00F0               	dw	240
  1780  00FD93  0007               	dw	7
  1781  00FD95  0000               	dw	0
  1782  00FD97  0000               	dw	0
  1783  00FD99  000A               	dw	10
  1784  00FD9B  0010               	dw	16
  1785  00FD9D  0000               	dw	0
  1786  00FD9F  0060               	dw	96
  1787  00FDA1  0000               	dw	0
  1788  00FDA3  0080               	dw	128
  1789  00FDA5  0003               	dw	3
  1790  00FDA7  0000               	dw	0
  1791  00FDA9  000C               	dw	12
  1792  00FDAB  0000               	dw	0
  1793  00FDAD  0010               	dw	16
  1794  00FDAF  0000               	dw	0
  1795  00FDB1  000C               	dw	12
  1796  00FDB3  0080               	dw	128
  1797  00FDB5  0003               	dw	3
  1798  00FDB7  0060               	dw	96
  1799  00FDB9  0000               	dw	0
  1800  00FDBB  0010               	dw	16
  1801  00FDBD  0000               	dw	0
  1802  00FDBF  0000               	dw	0
  1803  00FDC1  0000               	dw	0
  1804  00FDC3  000E               	dw	14
  1805  00FDC5  0010               	dw	16
  1806  00FDC7  0000               	dw	0
  1807  00FDC9  00E0               	dw	224
  1808  00FDCB  0000               	dw	0
  1809  00FDCD  0000               	dw	0
  1810  00FDCF  0007               	dw	7
  1811  00FDD1  0000               	dw	0
  1812  00FDD3  0018               	dw	24
  1813  00FDD5  0000               	dw	0
  1814  00FDD7  0007               	dw	7
  1815  00FDD9  00E0               	dw	224
  1816  00FDDB  0000               	dw	0
  1817  00FDDD  0010               	dw	16
  1818  00FDDF  0000               	dw	0
  1819  00FDE1  00E0               	dw	224
  1820  00FDE3  0000               	dw	0
  1821  00FDE5  0000               	dw	0
  1822  00FDE7  0007               	dw	7
  1823  00FDE9  0000               	dw	0
  1824  00FDEB  0018               	dw	24
  1825  00FDED  0000               	dw	0
  1826  00FDEF  0007               	dw	7
  1827  00FDF1  00E0               	dw	224
  1828  00FDF3  0000               	dw	0
  1829  00FDF5  0010               	dw	16
  1830  00FDF7  0000               	dw	0
  1831  00FDF9  0000               	dw	0
  1832  00FDFB  0000               	dw	0
  1833  00FDFD  0009               	dw	9
  1834  00FDFF  0010               	dw	16
  1835  00FE01  0010               	dw	16
  1836  00FE03  0020               	dw	32
  1837  00FE05  0008               	dw	8
  1838  00FE07  0040               	dw	64
  1839  00FE09  0004               	dw	4
  1840  00FE0B  0080               	dw	128
  1841  00FE0D  0003               	dw	3
  1842  00FE0F  0080               	dw	128
  1843  00FE11  0003               	dw	3
  1844  00FE13  0040               	dw	64
  1845  00FE15  0004               	dw	4
  1846  00FE17  0020               	dw	32
  1847  00FE19  0008               	dw	8
  1848  00FE1B  0010               	dw	16
  1849  00FE1D  0010               	dw	16
  1850  00FE1F  0000               	dw	0
  1851  00FE21  0000               	dw	0
  1852  00FE23  0009               	dw	9
  1853  00FE25  0010               	dw	16
  1854  00FE27  0000               	dw	0
  1855  00FE29  00E0               	dw	224
  1856  00FE2B  0000               	dw	0
  1857  00FE2D  0000               	dw	0
  1858  00FE2F  0083               	dw	131
  1859  00FE31  0000               	dw	0
  1860  00FE33  007C               	dw	124
  1861  00FE35  0000               	dw	0
  1862  00FE37  000C               	dw	12
  1863  00FE39  0000               	dw	0
  1864  00FE3B  0003               	dw	3
  1865  00FE3D  00E0               	dw	224
  1866  00FE3F  0000               	dw	0
  1867  00FE41  0010               	dw	16
  1868  00FE43  0000               	dw	0
  1869  00FE45  0000               	dw	0
  1870  00FE47  0000               	dw	0
  1871  00FE49  0008               	dw	8
  1872  00FE4B  0010               	dw	16
  1873  00FE4D  0010               	dw	16
  1874  00FE4F  0010               	dw	16
  1875  00FE51  0018               	dw	24
  1876  00FE53  0010               	dw	16
  1877  00FE55  0016               	dw	22
  1878  00FE57  0010               	dw	16
  1879  00FE59  0011               	dw	17
  1880  00FE5B  00D0               	dw	208
  1881  00FE5D  0010               	dw	16
  1882  00FE5F  0030               	dw	48
  1883  00FE61  0010               	dw	16
  1884  00FE63  0010               	dw	16
  1885  00FE65  0010               	dw	16
  1886  00FE67  0000               	dw	0
  1887  00FE69  0000               	dw	0
  1888  00FE6B  0007               	dw	7
  1889  00FE6D  0000               	dw	0
  1890  00FE6F  0000               	dw	0
  1891  00FE71  0000               	dw	0
  1892  00FE73  0001               	dw	1
  1893  00FE75  0080               	dw	128
  1894  00FE77  0002               	dw	2
  1895  00FE79  00FC               	dw	252
  1896  00FE7B  007E               	dw	126
  1897  00FE7D  0002               	dw	2
  1898  00FE7F  0080               	dw	128
  1899  00FE81  0002               	dw	2
  1900  00FE83  0080               	dw	128
  1901  00FE85  0000               	dw	0
  1902  00FE87  0000               	dw	0
  1903  00FE89  0007               	dw	7
  1904  00FE8B  0000               	dw	0
  1905  00FE8D  0000               	dw	0
  1906  00FE8F  0000               	dw	0
  1907  00FE91  0000               	dw	0
  1908  00FE93  0000               	dw	0
  1909  00FE95  0000               	dw	0
  1910  00FE97  0000               	dw	0
  1911  00FE99  0000               	dw	0
  1912  00FE9B  0000               	dw	0
  1913  00FE9D  0000               	dw	0
  1914  00FE9F  00FE               	dw	254
  1915  00FEA1  00FF               	dw	255
  1916  00FEA3  0000               	dw	0
  1917  00FEA5  0000               	dw	0
  1918  00FEA7  0006               	dw	6
  1919  00FEA9  0002               	dw	2
  1920  00FEAB  0080               	dw	128
  1921  00FEAD  0002               	dw	2
  1922  00FEAF  0080               	dw	128
  1923  00FEB1  00FC               	dw	252
  1924  00FEB3  007E               	dw	126
  1925  00FEB5  0080               	dw	128
  1926  00FEB7  0002               	dw	2
  1927  00FEB9  0000               	dw	0
  1928  00FEBB  0001               	dw	1
  1929  00FEBD  0000               	dw	0
  1930  00FEBF  0000               	dw	0
  1931  00FEC1  000A               	dw	10
  1932  00FEC3  0000               	dw	0
  1933  00FEC5  0000               	dw	0
  1934  00FEC7  0080               	dw	128
  1935  00FEC9  0000               	dw	0
  1936  00FECB  0040               	dw	64
  1937  00FECD  0000               	dw	0
  1938  00FECF  0040               	dw	64
  1939  00FED1  0000               	dw	0
  1940  00FED3  0040               	dw	64
  1941  00FED5  0000               	dw	0
  1942  00FED7  0080               	dw	128
  1943  00FED9  0000               	dw	0
  1944  00FEDB  0080               	dw	128
  1945  00FEDD  0000               	dw	0
  1946  00FEDF  0080               	dw	128
  1947  00FEE1  0000               	dw	0
  1948  00FEE3  0040               	dw	64
  1949  00FEE5  0000               	dw	0
  1950  00FEE7  0000               	dw	0
  1951  00FEE9  0000               	dw	0
  1952  00FEEB  0005               	dw	5
  1953  00FEED  00FF               	dw	255
  1954  00FEEF  000F               	dw	15
  1955  00FEF1  0001               	dw	1
  1956  00FEF3  0008               	dw	8
  1957  00FEF5  0001               	dw	1
  1958  00FEF7  0008               	dw	8
  1959  00FEF9  00FF               	dw	255
  1960  00FEFB  000F               	dw	15
  1961  00FEFD  0000               	dw	0
  1962  00FEFF  0000               	dw	0
  1963  00FF01                     __end_of_font:
  1964                           	opt callstack 0
  1965  00FF01                     _spi_configuration:
  1966                           	opt callstack 0
  1967  00FF01  00                 	db	0
  1968  00FF02  40                 	db	64
  1969  00FF03  01                 	db	1
  1970  00FF04  00                 	db	0
  1971  00FF05                     __end_of_spi_configuration:
  1972                           	opt callstack 0
  1973  00FF05                     STR_8:
  1974  00FF05  0A                 	db	10
  1975  00FF06  0A                 	db	10
  1976  00FF07  0D                 	db	13
  1977  00FF08  54                 	db	84	;'T'
  1978  00FF09  55                 	db	85	;'U'
  1979  00FF0A  52                 	db	82	;'R'
  1980  00FF0B  4E                 	db	78	;'N'
  1981  00FF0C  20                 	db	32
  1982  00FF0D  56                 	db	86	;'V'
  1983  00FF0E  41                 	db	65	;'A'
  1984  00FF0F  4C                 	db	76	;'L'
  1985  00FF10  55                 	db	85	;'U'
  1986  00FF11  45                 	db	69	;'E'
  1987  00FF12  53                 	db	83	;'S'
  1988  00FF13  20                 	db	32
  1989  00FF14  53                 	db	83	;'S'
  1990  00FF15  41                 	db	65	;'A'
  1991  00FF16  56                 	db	86	;'V'
  1992  00FF17  45                 	db	69	;'E'
  1993  00FF18  44                 	db	68	;'D'
  1994  00FF19  20                 	db	32
  1995  00FF1A  20                 	db	32
  1996  00FF1B  20                 	db	32
  1997  00FF1C  4F                 	db	79	;'O'
  1998  00FF1D  4E                 	db	78	;'N'
  1999  00FF1E  3A                 	db	58	;':'
  2000  00FF1F  20                 	db	32
  2001  00FF20  25                 	db	37
  2002  00FF21  64                 	db	100	;'d'
  2003  00FF22  20                 	db	32
  2004  00FF23  4F                 	db	79	;'O'
  2005  00FF24  46                 	db	70	;'F'
  2006  00FF25  46                 	db	70	;'F'
  2007  00FF26  3A                 	db	58	;':'
  2008  00FF27  20                 	db	32
  2009  00FF28  25                 	db	37
  2010  00FF29  64                 	db	100	;'d'
  2011  00FF2A  0A                 	db	10
  2012  00FF2B  0D                 	db	13
  2013  00FF2C  00                 	db	0
  2014  00FF2D                     STR_5:
  2015  00FF2D  0A                 	db	10
  2016  00FF2E  0D                 	db	13
  2017  00FF2F  41                 	db	65	;'A'
  2018  00FF30  43                 	db	67	;'C'
  2019  00FF31  54                 	db	84	;'T'
  2020  00FF32  55                 	db	85	;'U'
  2021  00FF33  41                 	db	65	;'A'
  2022  00FF34  4C                 	db	76	;'L'
  2023  00FF35  20                 	db	32
  2024  00FF36  54                 	db	84	;'T'
  2025  00FF37  55                 	db	85	;'U'
  2026  00FF38  52                 	db	82	;'R'
  2027  00FF39  4E                 	db	78	;'N'
  2028  00FF3A  20                 	db	32
  2029  00FF3B  56                 	db	86	;'V'
  2030  00FF3C  41                 	db	65	;'A'
  2031  00FF3D  4C                 	db	76	;'L'
  2032  00FF3E  55                 	db	85	;'U'
  2033  00FF3F  45                 	db	69	;'E'
  2034  00FF40  53                 	db	83	;'S'
  2035  00FF41  20                 	db	32
  2036  00FF42  20                 	db	32
  2037  00FF43  4F                 	db	79	;'O'
  2038  00FF44  4E                 	db	78	;'N'
  2039  00FF45  3A                 	db	58	;':'
  2040  00FF46  20                 	db	32
  2041  00FF47  25                 	db	37
  2042  00FF48  64                 	db	100	;'d'
  2043  00FF49  20                 	db	32
  2044  00FF4A  4F                 	db	79	;'O'
  2045  00FF4B  46                 	db	70	;'F'
  2046  00FF4C  46                 	db	70	;'F'
  2047  00FF4D  3A                 	db	58	;':'
  2048  00FF4E  20                 	db	32
  2049  00FF4F  25                 	db	37
  2050  00FF50  64                 	db	100	;'d'
  2051  00FF51  0A                 	db	10
  2052  00FF52  0D                 	db	13
  2053  00FF53  00                 	db	0
  2054  00FF54                     STR_2:
  2055  00FF54  45                 	db	69	;'E'
  2056  00FF55  41                 	db	65	;'A'
  2057  00FF56  55                 	db	85	;'U'
  2058  00FF57  20                 	db	32
  2059  00FF58  20                 	db	32
  2060  00FF59  20                 	db	32
  2061  00FF5A  20                 	db	32
  2062  00FF5B  20                 	db	32
  2063  00FF5C  20                 	db	32
  2064  00FF5D  20                 	db	32
  2065  00FF5E  20                 	db	32
  2066  00FF5F  20                 	db	32
  2067  00FF60  20                 	db	32
  2068  00FF61  53                 	db	83	;'S'
  2069  00FF62  45                 	db	69	;'E'
  2070  00FF63  45                 	db	69	;'E'
  2071  00FF64  56                 	db	86	;'V'
  2072  00FF65  20                 	db	32
  2073  00FF66  20                 	db	32
  2074  00FF67  20                 	db	32
  2075  00FF68  20                 	db	32
  2076  00FF69  20                 	db	32
  2077  00FF6A  20                 	db	32
  2078  00FF6B  20                 	db	32
  2079  00FF6C  20                 	db	32
  2080  00FF6D  20                 	db	32
  2081  00FF6E  41                 	db	65	;'A'
  2082  00FF6F  55                 	db	85	;'U'
  2083  00FF70  4C                 	db	76	;'L'
  2084  00FF71  41                 	db	65	;'A'
  2085  00FF72  5F                 	db	95	;'_'
  2086  00FF73  35                 	db	53	;'5'
  2087  00FF74  00                 	db	0
  2088  00FF75                     STR_4:
  2089  00FF75  43                 	db	67	;'C'
  2090  00FF76  6F                 	db	111	;'o'
  2091  00FF77  6E                 	db	110	;'n'
  2092  00FF78  66                 	db	102	;'f'
  2093  00FF79  69                 	db	105	;'i'
  2094  00FF7A  67                 	db	103	;'g'
  2095  00FF7B  75                 	db	117	;'u'
  2096  00FF7C  72                 	db	114	;'r'
  2097  00FF7D  61                 	db	97	;'a'
  2098  00FF7E  74                 	db	116	;'t'
  2099  00FF7F  69                 	db	105	;'i'
  2100  00FF80  6F                 	db	111	;'o'
  2101  00FF81  6E                 	db	110	;'n'
  2102  00FF82  20                 	db	32
  2103  00FF83  4D                 	db	77	;'M'
  2104  00FF84  4F                 	db	79	;'O'
  2105  00FF85  44                 	db	68	;'D'
  2106  00FF86  45                 	db	69	;'E'
  2107  00FF87  20                 	db	32
  2108  00FF88  0A                 	db	10
  2109  00FF89  0D                 	db	13
  2110  00FF8A  00                 	db	0
  2111  00FF8B                     STR_7:
  2112  00FF8B  0A                 	db	10
  2113  00FF8C  0D                 	db	13
  2114  00FF8D  54                 	db	84	;'T'
  2115  00FF8E  75                 	db	117	;'u'
  2116  00FF8F  72                 	db	114	;'r'
  2117  00FF90  6E                 	db	110	;'n'
  2118  00FF91  20                 	db	32
  2119  00FF92  4F                 	db	79	;'O'
  2120  00FF93  46                 	db	70	;'F'
  2121  00FF94  46                 	db	70	;'F'
  2122  00FF95  20                 	db	32
  2123  00FF96  56                 	db	86	;'V'
  2124  00FF97  61                 	db	97	;'a'
  2125  00FF98  6C                 	db	108	;'l'
  2126  00FF99  75                 	db	117	;'u'
  2127  00FF9A  65                 	db	101	;'e'
  2128  00FF9B  3A                 	db	58	;':'
  2129  00FF9C  20                 	db	32
  2130  00FF9D  0A                 	db	10
  2131  00FF9E  0D                 	db	13
  2132  00FF9F  00                 	db	0
  2133  00FFA0                     STR_6:
  2134  00FFA0  0A                 	db	10
  2135  00FFA1  0D                 	db	13
  2136  00FFA2  54                 	db	84	;'T'
  2137  00FFA3  75                 	db	117	;'u'
  2138  00FFA4  72                 	db	114	;'r'
  2139  00FFA5  6E                 	db	110	;'n'
  2140  00FFA6  20                 	db	32
  2141  00FFA7  4F                 	db	79	;'O'
  2142  00FFA8  4E                 	db	78	;'N'
  2143  00FFA9  20                 	db	32
  2144  00FFAA  56                 	db	86	;'V'
  2145  00FFAB  61                 	db	97	;'a'
  2146  00FFAC  6C                 	db	108	;'l'
  2147  00FFAD  75                 	db	117	;'u'
  2148  00FFAE  65                 	db	101	;'e'
  2149  00FFAF  3A                 	db	58	;':'
  2150  00FFB0  20                 	db	32
  2151  00FFB1  0A                 	db	10
  2152  00FFB2  0D                 	db	13
  2153  00FFB3  00                 	db	0
  2154  00FFB4                     STR_1:
  2155  00FFB4  0C                 	db	12
  2156  00FFB5  0D                 	db	13
  2157  00FFB6  50                 	db	80	;'P'
  2158  00FFB7  4F                 	db	79	;'O'
  2159  00FFB8  54                 	db	84	;'T'
  2160  00FFB9  3A                 	db	58	;':'
  2161  00FFBA  20                 	db	32
  2162  00FFBB  25                 	db	37
  2163  00FFBC  33                 	db	51	;'3'
  2164  00FFBD  64                 	db	100	;'d'
  2165  00FFBE  20                 	db	32
  2166  00FFBF  0D                 	db	13
  2167  00FFC0  00                 	db	0
  2168  00FFC1                     STR_3:
  2169  00FFC1  50                 	db	80	;'P'
  2170  00FFC2  4F                 	db	79	;'O'
  2171  00FFC3  54                 	db	84	;'T'
  2172  00FFC4  3A                 	db	58	;':'
  2173  00FFC5  20                 	db	32
  2174  00FFC6  25                 	db	37
  2175  00FFC7  33                 	db	51	;'3'
  2176  00FFC8  64                 	db	100	;'d'
  2177  00FFC9  20                 	db	32
  2178  00FFCA  25                 	db	37
  2179  00FFCB  25                 	db	37
  2180  00FFCC  00                 	db	0
  2181  00FFCD                     STR_85:
  2182  00FFCD  68                 	db	104	;'h'
  2183  00FFCE  68                 	db	104	;'h'
  2184  00FFCF  58                 	db	88	;'X'
  2185  00FFD0  00                 	db	0
  2186  00FFD1                     STR_9:
  2187  00FFD1  68                 	db	104	;'h'
  2188  00FFD2  68                 	db	104	;'h'
  2189  00FFD3  64                 	db	100	;'d'
  2190  00FFD4  00                 	db	0
  2191  00FFD5                     STR_13:
  2192  00FFD5  68                 	db	104	;'h'
  2193  00FFD6  68                 	db	104	;'h'
  2194  00FFD7  69                 	db	105	;'i'
  2195  00FFD8  00                 	db	0
  2196  00FFD9                     STR_51:
  2197  00FFD9  68                 	db	104	;'h'
  2198  00FFDA  68                 	db	104	;'h'
  2199  00FFDB  6E                 	db	110	;'n'
  2200  00FFDC  00                 	db	0
  2201  00FFDD                     STR_36:
  2202  00FFDD  68                 	db	104	;'h'
  2203  00FFDE  68                 	db	104	;'h'
  2204  00FFDF  6F                 	db	111	;'o'
  2205  00FFE0  00                 	db	0
  2206  00FFE1                     STR_66:
  2207  00FFE1  68                 	db	104	;'h'
  2208  00FFE2  68                 	db	104	;'h'
  2209  00FFE3  75                 	db	117	;'u'
  2210  00FFE4  00                 	db	0
  2211  00FFE5                     STR_81:
  2212  00FFE5  68                 	db	104	;'h'
  2213  00FFE6  68                 	db	104	;'h'
  2214  00FFE7  78                 	db	120	;'x'
  2215  00FFE8  00                 	db	0
  2216  00FFE9                     STR_103:
  2217  00FFE9  7A                 	db	122	;'z'
  2218  00FFEA  58                 	db	88	;'X'
  2219  00FFEB  00                 	db	0
  2220  00FFEC                     STR_27:
  2221  00FFEC  7A                 	db	122	;'z'
  2222  00FFED  64                 	db	100	;'d'
  2223  00FFEE  00                 	db	0
  2224  00FFEF                     STR_31:
  2225  00FFEF  7A                 	db	122	;'z'
  2226  00FFF0  69                 	db	105	;'i'
  2227  00FFF1  00                 	db	0
  2228  00FFF2                     STR_61:
  2229  00FFF2  7A                 	db	122	;'z'
  2230  00FFF3  6E                 	db	110	;'n'
  2231  00FFF4  00                 	db	0
  2232  00FFF5                     STR_46:
  2233  00FFF5  7A                 	db	122	;'z'
  2234  00FFF6  6F                 	db	111	;'o'
  2235  00FFF7  00                 	db	0
  2236  00FFF8                     STR_76:
  2237  00FFF8  7A                 	db	122	;'z'
  2238  00FFF9  75                 	db	117	;'u'
  2239  00FFFA  00                 	db	0
  2240  00FFFB                     STR_99:
  2241  00FFFB  7A                 	db	122	;'z'
  2242  00FFFC  78                 	db	120	;'x'
  2243  00FFFD  00                 	db	0
  2244  0000                     
  2245                           ; #config settings
  2246  00FFFE  00                 	db	0	; dummy byte at the end
  2247  0000                     
  2248                           	psect	nvCOMRAM
  2249  00005B                     __pnvCOMRAM:
  2250                           	opt callstack 0
  2251  00005B                     _timer0ReloadVal:
  2252                           	opt callstack 0
  2253  00005B                     	ds	2
  2254                           
  2255                           	psect	nvBANK0
  2256  0000C2                     __pnvBANK0:
  2257                           	opt callstack 0
  2258  0000C2                     _EUSART1_ErrorHandler:
  2259                           	opt callstack 0
  2260  0000C2                     	ds	2
  2261  0000C4                     _EUSART1_OverrunErrorHandler:
  2262                           	opt callstack 0
  2263  0000C4                     	ds	2
  2264  0000C6                     _EUSART1_FramingErrorHandler:
  2265                           	opt callstack 0
  2266  0000C6                     	ds	2
  2267  0000C8                     _timer1ReloadVal:
  2268                           	opt callstack 0
  2269  0000C8                     	ds	2
  2270  0000CA                     _IOCB4_InterruptHandler:
  2271                           	opt callstack 0
  2272  0000CA                     	ds	2
  2273  0000                     _IOCBbits	set	3930
  2274  0000                     _WPUB	set	3931
  2275  0000                     _ANCON1	set	3932
  2276  0000                     _ANCON0	set	3933
  2277  0000                     _LATEbits	set	3981
  2278  0000                     _SSPSTATbits	set	4039
  2279  0000                     _LATAbits	set	3977
  2280  0000                     _PORTBbits	set	3969
  2281  0000                     _T0CON	set	4053
  2282  0000                     _TMR0L	set	4054
  2283  0000                     _TMR0H	set	4055
  2284  0000                     _T0CONbits	set	4053
  2285  0000                     _RCONbits	set	4048
  2286  0000                     _TXREG1	set	4013
  2287  0000                     _RCREG1	set	4014
  2288  0000                     _RCSTA1bits	set	4011
  2289  0000                     _TXSTA1bits	set	4012
  2290  0000                     _SPBRGH1	set	3965
  2291  0000                     _SPBRG1	set	4015
  2292  0000                     _TXSTA1	set	4012
  2293  0000                     _RCSTA1	set	4011
  2294  0000                     _BAUDCON1	set	4007
  2295  0000                     _T1GCONbits	set	4010
  2296  0000                     _T1CONbits	set	4045
  2297  0000                     _T1CON	set	4045
  2298  0000                     _TMR1L	set	4046
  2299  0000                     _TMR1H	set	4047
  2300  0000                     _T1GCON	set	4010
  2301  0000                     _ADCON0bits	set	4034
  2302  0000                     _ADRESL	set	4035
  2303  0000                     _ADRESH	set	4036
  2304  0000                     _ADCON2	set	4032
  2305  0000                     _ADCON1	set	4033
  2306  0000                     _ADCON0	set	4034
  2307  0000                     _INTCONbits	set	4082
  2308  0000                     _INTCON2bits	set	4081
  2309  0000                     _TRISD	set	3989
  2310  0000                     _TRISC	set	3988
  2311  0000                     _TRISB	set	3987
  2312  0000                     _TRISA	set	3986
  2313  0000                     _TRISE	set	3990
  2314  0000                     _LATC	set	3979
  2315  0000                     _LATB	set	3978
  2316  0000                     _LATA	set	3977
  2317  0000                     _LATD	set	3980
  2318  0000                     _LATE	set	3981
  2319  0000                     _PIR1bits	set	3998
  2320  0000                     _SSPBUF	set	4041
  2321  0000                     _SSPCON2	set	4037
  2322  0000                     _SSPCON1bits	set	4038
  2323  0000                     _TRISCbits	set	3988
  2324  0000                     _SSPADD	set	4040
  2325  0000                     _SSPCON1	set	4038
  2326  0000                     _SSPSTAT	set	4039
  2327  0000                     _REFOCON	set	3994
  2328  0000                     _OSCTUNE	set	3995
  2329  0000                     _OSCCON2	set	4050
  2330  0000                     _OSCCON	set	4051
  2331                           
  2332                           	psect	cinit
  2333  005CE8                     __pcinit:
  2334                           	opt callstack 0
  2335  005CE8                     start_initialization:
  2336                           	opt callstack 0
  2337  005CE8                     __initialization:
  2338                           	opt callstack 0
  2339                           
  2340                           ; Initialize objects allocated to BANK1 (4 bytes)
  2341                           ; load TBLPTR registers with __pidataBANK1
  2342  005CE8  0EDD               	movlw	low __pidataBANK1
  2343  005CEA  6EF6               	movwf	tblptrl,c
  2344  005CEC  0E68               	movlw	high __pidataBANK1
  2345  005CEE  6EF7               	movwf	tblptrh,c
  2346  005CF0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2347  005CF2  6EF8               	movwf	tblptru,c
  2348  005CF4  EE01  F0B6         	lfsr	0,__pdataBANK1
  2349  005CF8  EE10 F004          	lfsr	1,4
  2350  005CFC                     copy_data0:
  2351  005CFC  0009               	tblrd		*+
  2352  005CFE  CFF5 FFEE          	movff	tablat,postinc0
  2353  005D02  50E5               	movf	postdec1,w,c
  2354  005D04  50E1               	movf	fsr1l,w,c
  2355  005D06  E1FA               	bnz	copy_data0
  2356                           
  2357                           ; Initialize objects allocated to BANK0 (7 bytes)
  2358                           ; load TBLPTR registers with __pidataBANK0
  2359  005D08  0ED6               	movlw	low __pidataBANK0
  2360  005D0A  6EF6               	movwf	tblptrl,c
  2361  005D0C  0E68               	movlw	high __pidataBANK0
  2362  005D0E  6EF7               	movwf	tblptrh,c
  2363  005D10  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2364  005D12  6EF8               	movwf	tblptru,c
  2365  005D14  EE00  F0CC         	lfsr	0,__pdataBANK0
  2366  005D18  EE10 F007          	lfsr	1,7
  2367  005D1C                     copy_data1:
  2368  005D1C  0009               	tblrd		*+
  2369  005D1E  CFF5 FFEE          	movff	tablat,postinc0
  2370  005D22  50E5               	movf	postdec1,w,c
  2371  005D24  50E1               	movf	fsr1l,w,c
  2372  005D26  E1FA               	bnz	copy_data1
  2373                           
  2374                           ; Clear objects allocated to BANK1 (68 bytes)
  2375  005D28  EE01  F072         	lfsr	0,__pbssBANK1
  2376  005D2C  0E44               	movlw	68
  2377  005D2E                     clear_0:
  2378  005D2E  6AEE               	clrf	postinc0,c
  2379  005D30  06E8               	decf	wreg,f,c
  2380  005D32  E1FD               	bnz	clear_0
  2381                           
  2382                           ; Clear objects allocated to BANK0 (13 bytes)
  2383  005D34  EE00  F0B5         	lfsr	0,__pbssBANK0
  2384  005D38  0E0D               	movlw	13
  2385  005D3A                     clear_1:
  2386  005D3A  6AEE               	clrf	postinc0,c
  2387  005D3C  06E8               	decf	wreg,f,c
  2388  005D3E  E1FD               	bnz	clear_1
  2389                           
  2390                           ; Clear objects allocated to COMRAM (2 bytes)
  2391  005D40  6A5E               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2392  005D42  6A5D               	clrf	__pbssCOMRAM& (0+255),c
  2393  005D44                     end_of_initialization:
  2394                           	opt callstack 0
  2395  005D44                     __end_of__initialization:
  2396                           	opt callstack 0
  2397  005D44  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2398  005D46  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2399  005D48  0100               	movlb	0
  2400  005D4A  EFDB  F01A         	goto	_main	;jump to C main() function
  2401                           
  2402                           	psect	bssCOMRAM
  2403  00005D                     __pbssCOMRAM:
  2404                           	opt callstack 0
  2405  00005D                     _ADC_InterruptHandler:
  2406                           	opt callstack 0
  2407  00005D                     	ds	2
  2408                           
  2409                           	psect	bssBANK0
  2410  0000B5                     __pbssBANK0:
  2411                           	opt callstack 0
  2412  0000B5                     _adc_perc:
  2413                           	opt callstack 0
  2414  0000B5                     	ds	4
  2415  0000B9                     _width:
  2416                           	opt callstack 0
  2417  0000B9                     	ds	2
  2418  0000BB                     _prec:
  2419                           	opt callstack 0
  2420  0000BB                     	ds	2
  2421  0000BD                     _flags:
  2422                           	opt callstack 0
  2423  0000BD                     	ds	2
  2424  0000BF                     _global_bg_color:
  2425                           	opt callstack 0
  2426  0000BF                     	ds	2
  2427  0000C1                     _eusart1RxLastError:
  2428                           	opt callstack 0
  2429  0000C1                     	ds	1
  2430                           
  2431                           	psect	dataBANK0
  2432  0000CC                     __pdataBANK0:
  2433                           	opt callstack 0
  2434  0000CC                     stoa@F1152:
  2435                           	opt callstack 0
  2436  0000CC                     	ds	7
  2437                           
  2438                           	psect	bssBANK1
  2439  000172                     __pbssBANK1:
  2440                           	opt callstack 0
  2441  000172                     _errno:
  2442                           	opt callstack 0
  2443  000172                     	ds	2
  2444  000174                     _nout:
  2445                           	opt callstack 0
  2446  000174                     	ds	2
  2447  000176                     _adc_value:
  2448                           	opt callstack 0
  2449  000176                     	ds	2
  2450  000178                     _dbuf:
  2451                           	opt callstack 0
  2452  000178                     	ds	32
  2453  000198                     _string:
  2454                           	opt callstack 0
  2455  000198                     	ds	30
  2456                           
  2457                           	psect	dataBANK1
  2458  0001B6                     __pdataBANK1:
  2459                           	opt callstack 0
  2460  0001B6                     _turn_off_value:
  2461                           	opt callstack 0
  2462  0001B6                     	ds	2
  2463  0001B8                     _turn_on_value:
  2464                           	opt callstack 0
  2465  0001B8                     	ds	2
  2466                           
  2467                           	psect	cstackBANK1
  2468  000100                     __pcstackBANK1:
  2469                           	opt callstack 0
  2470  000100                     ??_dtoa:
  2471  000100                     ??_otoa:
  2472  000100                     ??_utoa:
  2473  000100                     ??_xtoa:
  2474  000100                     lcd_draw_string@x:
  2475                           	opt callstack 0
  2476                           
  2477                           ; 2 bytes @ 0x0
  2478  000100                     	ds	2
  2479  000102                     lcd_draw_string@y:
  2480                           	opt callstack 0
  2481                           
  2482                           ; 2 bytes @ 0x2
  2483  000102                     	ds	2
  2484  000104                     lcd_draw_string@pS:
  2485                           	opt callstack 0
  2486                           
  2487                           ; 2 bytes @ 0x4
  2488  000104                     	ds	2
  2489  000106                     lcd_draw_string@fg_color:
  2490                           	opt callstack 0
  2491                           
  2492                           ; 2 bytes @ 0x6
  2493  000106                     	ds	2
  2494  000108                     lcd_draw_string@bg_color:
  2495                           	opt callstack 0
  2496  000108                     _dtoa$1670:
  2497                           	opt callstack 0
  2498  000108                     otoa@p:
  2499                           	opt callstack 0
  2500  000108                     utoa@p:
  2501                           	opt callstack 0
  2502  000108                     _xtoa$1706:
  2503                           	opt callstack 0
  2504                           
  2505                           ; 2 bytes @ 0x8
  2506  000108                     	ds	2
  2507  00010A                     dtoa@p:
  2508                           	opt callstack 0
  2509  00010A                     otoa@t:
  2510                           	opt callstack 0
  2511  00010A                     utoa@w:
  2512                           	opt callstack 0
  2513  00010A                     _xtoa$1707:
  2514                           	opt callstack 0
  2515                           
  2516                           ; 2 bytes @ 0xA
  2517  00010A                     	ds	2
  2518  00010C                     dtoa@w:
  2519                           	opt callstack 0
  2520  00010C                     otoa@w:
  2521                           	opt callstack 0
  2522  00010C                     xtoa@p:
  2523                           	opt callstack 0
  2524  00010C                     utoa@n:
  2525                           	opt callstack 0
  2526                           
  2527                           ; 8 bytes @ 0xC
  2528  00010C                     	ds	2
  2529  00010E                     dtoa@s:
  2530                           	opt callstack 0
  2531  00010E                     xtoa@w:
  2532                           	opt callstack 0
  2533  00010E                     otoa@n:
  2534                           	opt callstack 0
  2535                           
  2536                           ; 8 bytes @ 0xE
  2537  00010E                     	ds	2
  2538  000110                     dtoa@n:
  2539                           	opt callstack 0
  2540  000110                     xtoa@n:
  2541                           	opt callstack 0
  2542                           
  2543                           ; 8 bytes @ 0x10
  2544  000110                     	ds	4
  2545  000114                     utoa@i:
  2546                           	opt callstack 0
  2547                           
  2548                           ; 2 bytes @ 0x14
  2549  000114                     	ds	2
  2550  000116                     otoa@i:
  2551                           	opt callstack 0
  2552                           
  2553                           ; 2 bytes @ 0x16
  2554  000116                     	ds	2
  2555  000118                     dtoa@i:
  2556                           	opt callstack 0
  2557  000118                     xtoa@i:
  2558                           	opt callstack 0
  2559                           
  2560                           ; 2 bytes @ 0x18
  2561  000118                     	ds	2
  2562  00011A                     xtoa@c:
  2563                           	opt callstack 0
  2564                           
  2565                           ; 2 bytes @ 0x1A
  2566  00011A                     	ds	2
  2567  00011C                     ?_vfpfcnvrt:
  2568                           	opt callstack 0
  2569  00011C                     vfpfcnvrt@fp:
  2570                           	opt callstack 0
  2571                           
  2572                           ; 2 bytes @ 0x1C
  2573  00011C                     	ds	2
  2574  00011E                     vfpfcnvrt@fmt:
  2575                           	opt callstack 0
  2576                           
  2577                           ; 2 bytes @ 0x1E
  2578  00011E                     	ds	2
  2579  000120                     vfpfcnvrt@ap:
  2580                           	opt callstack 0
  2581                           
  2582                           ; 2 bytes @ 0x20
  2583  000120                     	ds	2
  2584  000122                     ??_vfpfcnvrt:
  2585                           
  2586                           ; 1 bytes @ 0x22
  2587  000122                     	ds	4
  2588  000126                     vfpfcnvrt@cp:
  2589                           	opt callstack 0
  2590                           
  2591                           ; 2 bytes @ 0x26
  2592  000126                     	ds	2
  2593  000128                     vfpfcnvrt@done:
  2594                           	opt callstack 0
  2595                           
  2596                           ; 2 bytes @ 0x28
  2597  000128                     	ds	2
  2598  00012A                     _vfpfcnvrt$1721:
  2599                           	opt callstack 0
  2600                           
  2601                           ; 2 bytes @ 0x2A
  2602  00012A                     	ds	2
  2603  00012C                     _vfpfcnvrt$1722:
  2604                           	opt callstack 0
  2605                           
  2606                           ; 2 bytes @ 0x2C
  2607  00012C                     	ds	2
  2608  00012E                     vfpfcnvrt@ll:
  2609                           	opt callstack 0
  2610                           
  2611                           ; 8 bytes @ 0x2E
  2612  00012E                     	ds	8
  2613  000136                     vfpfcnvrt@vp:
  2614                           	opt callstack 0
  2615                           
  2616                           ; 2 bytes @ 0x36
  2617  000136                     	ds	2
  2618  000138                     vfpfcnvrt@c:
  2619                           	opt callstack 0
  2620                           
  2621                           ; 1 bytes @ 0x38
  2622  000138                     	ds	1
  2623  000139                     vfpfcnvrt@llu:
  2624                           	opt callstack 0
  2625                           
  2626                           ; 8 bytes @ 0x39
  2627  000139                     	ds	8
  2628  000141                     ?_vfprintf:
  2629                           	opt callstack 0
  2630  000141                     vfprintf@fp:
  2631                           	opt callstack 0
  2632                           
  2633                           ; 2 bytes @ 0x41
  2634  000141                     	ds	2
  2635  000143                     vfprintf@fmt:
  2636                           	opt callstack 0
  2637                           
  2638                           ; 2 bytes @ 0x43
  2639  000143                     	ds	2
  2640  000145                     vfprintf@ap:
  2641                           	opt callstack 0
  2642                           
  2643                           ; 2 bytes @ 0x45
  2644  000145                     	ds	2
  2645  000147                     vfprintf@cfmt:
  2646                           	opt callstack 0
  2647                           
  2648                           ; 2 bytes @ 0x47
  2649  000147                     	ds	2
  2650  000149                     ?_printf:
  2651                           	opt callstack 0
  2652  000149                     ?_vsnprintf:
  2653                           	opt callstack 0
  2654  000149                     printf@fmt:
  2655                           	opt callstack 0
  2656  000149                     vsnprintf@s:
  2657                           	opt callstack 0
  2658                           
  2659                           ; 2 bytes @ 0x49
  2660  000149                     	ds	2
  2661  00014B                     vsnprintf@n:
  2662                           	opt callstack 0
  2663                           
  2664                           ; 2 bytes @ 0x4B
  2665  00014B                     	ds	2
  2666  00014D                     vsnprintf@fmt:
  2667                           	opt callstack 0
  2668                           
  2669                           ; 2 bytes @ 0x4D
  2670  00014D                     	ds	2
  2671  00014F                     vsnprintf@ap:
  2672                           	opt callstack 0
  2673                           
  2674                           ; 2 bytes @ 0x4F
  2675  00014F                     	ds	2
  2676  000151                     ??_vsnprintf:
  2677  000151                     printf@ap:
  2678                           	opt callstack 0
  2679                           
  2680                           ; 2 bytes @ 0x51
  2681  000151                     	ds	4
  2682  000155                     _vsnprintf$2428:
  2683                           	opt callstack 0
  2684                           
  2685                           ; 2 bytes @ 0x55
  2686  000155                     	ds	2
  2687  000157                     vsnprintf@cnt:
  2688                           	opt callstack 0
  2689                           
  2690                           ; 2 bytes @ 0x57
  2691  000157                     	ds	2
  2692  000159                     vsnprintf@f:
  2693                           	opt callstack 0
  2694                           
  2695                           ; 6 bytes @ 0x59
  2696  000159                     	ds	6
  2697  00015F                     ?_snprintf:
  2698                           	opt callstack 0
  2699  00015F                     snprintf@s:
  2700                           	opt callstack 0
  2701                           
  2702                           ; 2 bytes @ 0x5F
  2703  00015F                     	ds	2
  2704  000161                     snprintf@n:
  2705                           	opt callstack 0
  2706                           
  2707                           ; 2 bytes @ 0x61
  2708  000161                     	ds	2
  2709  000163                     snprintf@fmt:
  2710                           	opt callstack 0
  2711                           
  2712                           ; 2 bytes @ 0x63
  2713  000163                     	ds	8
  2714  00016B                     snprintf@ap:
  2715                           	opt callstack 0
  2716                           
  2717                           ; 2 bytes @ 0x6B
  2718  00016B                     	ds	2
  2719  00016D                     ??_main:
  2720                           
  2721                           ; 1 bytes @ 0x6D
  2722  00016D                     	ds	5
  2723                           
  2724                           	psect	cstackBANK0
  2725  000060                     __pcstackBANK0:
  2726                           	opt callstack 0
  2727  000060                     i2vfpfcnvrt@cp:
  2728                           	opt callstack 0
  2729                           
  2730                           ; 2 bytes @ 0x0
  2731  000060                     	ds	2
  2732  000062                     i2vfpfcnvrt@done:
  2733                           	opt callstack 0
  2734                           
  2735                           ; 2 bytes @ 0x2
  2736  000062                     	ds	2
  2737  000064                     i2_vfpfcnvrt$1721:
  2738                           	opt callstack 0
  2739                           
  2740                           ; 2 bytes @ 0x4
  2741  000064                     	ds	2
  2742  000066                     i2_vfpfcnvrt$1722:
  2743                           	opt callstack 0
  2744                           
  2745                           ; 2 bytes @ 0x6
  2746  000066                     	ds	2
  2747  000068                     i2vfpfcnvrt@ll:
  2748                           	opt callstack 0
  2749                           
  2750                           ; 8 bytes @ 0x8
  2751  000068                     	ds	8
  2752  000070                     i2vfpfcnvrt@vp:
  2753                           	opt callstack 0
  2754                           
  2755                           ; 2 bytes @ 0x10
  2756  000070                     	ds	2
  2757  000072                     i2vfpfcnvrt@c:
  2758                           	opt callstack 0
  2759                           
  2760                           ; 1 bytes @ 0x12
  2761  000072                     	ds	1
  2762  000073                     i2vfpfcnvrt@llu:
  2763                           	opt callstack 0
  2764                           
  2765                           ; 8 bytes @ 0x13
  2766  000073                     	ds	8
  2767  00007B                     ?i2_printf:
  2768                           	opt callstack 0
  2769  00007B                     i2printf@fmt:
  2770                           	opt callstack 0
  2771                           
  2772                           ; 2 bytes @ 0x1B
  2773  00007B                     	ds	6
  2774  000081                     ??_INTERRUPT_InterruptManager:
  2775                           
  2776                           ; 1 bytes @ 0x21
  2777  000081                     	ds	12
  2778  00008D                     ??_TMR1_Initialize:
  2779  00008D                     ??_TMR0_Initialize:
  2780  00008D                     ??_SPI_Open:
  2781  00008D                     ??_msDelay:
  2782  00008D                     ?_strlen:
  2783                           	opt callstack 0
  2784  00008D                     ?_isupper:
  2785                           	opt callstack 0
  2786  00008D                     ?_isalpha:
  2787                           	opt callstack 0
  2788  00008D                     ?_isdigit:
  2789                           	opt callstack 0
  2790  00008D                     ?_strncmp:
  2791                           	opt callstack 0
  2792  00008D                     ?_isspace:
  2793                           	opt callstack 0
  2794  00008D                     ?_islower:
  2795                           	opt callstack 0
  2796  00008D                     ?_ADC_GetConversion:
  2797                           	opt callstack 0
  2798  00008D                     ?_TMR0_ReadTimer:
  2799                           	opt callstack 0
  2800  00008D                     ?___wmul:
  2801                           	opt callstack 0
  2802  00008D                     ?___lmul:
  2803                           	opt callstack 0
  2804  00008D                     ?___aodiv:
  2805                           	opt callstack 0
  2806  00008D                     ?___aomod:
  2807                           	opt callstack 0
  2808  00008D                     ?___lodiv:
  2809                           	opt callstack 0
  2810  00008D                     ?___lomod:
  2811                           	opt callstack 0
  2812  00008D                     SPI_ExchangeByte@data:
  2813                           	opt callstack 0
  2814  00008D                     _EUSART1_is_tx_ready$859:
  2815                           	opt callstack 0
  2816  00008D                     EUSART1_Write@txData:
  2817                           	opt callstack 0
  2818  00008D                     IOCB4_SetInterruptHandler@InterruptHandler:
  2819                           	opt callstack 0
  2820  00008D                     EUSART1_SetFramingErrorHandler@interruptHandler:
  2821                           	opt callstack 0
  2822  00008D                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  2823                           	opt callstack 0
  2824  00008D                     EUSART1_SetErrorHandler@interruptHandler:
  2825                           	opt callstack 0
  2826  00008D                     TMR0_WriteTimer@timerVal:
  2827                           	opt callstack 0
  2828  00008D                     ___wmul@multiplier:
  2829                           	opt callstack 0
  2830  00008D                     isalpha@c:
  2831                           	opt callstack 0
  2832  00008D                     isdigit@c:
  2833                           	opt callstack 0
  2834  00008D                     isspace@c:
  2835                           	opt callstack 0
  2836  00008D                     isupper@c:
  2837                           	opt callstack 0
  2838  00008D                     strlen@s:
  2839                           	opt callstack 0
  2840  00008D                     strncmp@_l:
  2841                           	opt callstack 0
  2842  00008D                     islower@c:
  2843                           	opt callstack 0
  2844  00008D                     ___lmul@multiplier:
  2845                           	opt callstack 0
  2846  00008D                     ___aodiv@dividend:
  2847                           	opt callstack 0
  2848  00008D                     ___aomod@dividend:
  2849                           	opt callstack 0
  2850  00008D                     ___lodiv@dividend:
  2851                           	opt callstack 0
  2852  00008D                     ___lomod@dividend:
  2853                           	opt callstack 0
  2854                           
  2855                           ; 8 bytes @ 0x2D
  2856  00008D                     	ds	1
  2857  00008E                     SPI_Open@spiUniqueConfiguration:
  2858                           	opt callstack 0
  2859  00008E                     putch@txData:
  2860                           	opt callstack 0
  2861  00008E                     msDelay@ms:
  2862                           	opt callstack 0
  2863  00008E                     lcd_send@value:
  2864                           	opt callstack 0
  2865                           
  2866                           ; 1 bytes @ 0x2E
  2867  00008E                     	ds	1
  2868  00008F                     ??_isupper:
  2869  00008F                     ??_isalpha:
  2870  00008F                     ??_isdigit:
  2871  00008F                     ??_isspace:
  2872  00008F                     ??_islower:
  2873  00008F                     ??_ADC_GetConversion:
  2874  00008F                     ??_TMR0_ReadTimer:
  2875  00008F                     msDelay@k:
  2876                           	opt callstack 0
  2877  00008F                     lcd_send@dc:
  2878                           	opt callstack 0
  2879  00008F                     ___wmul@multiplicand:
  2880                           	opt callstack 0
  2881  00008F                     fputc@c:
  2882                           	opt callstack 0
  2883  00008F                     strlen@a:
  2884                           	opt callstack 0
  2885  00008F                     strncmp@_r:
  2886                           	opt callstack 0
  2887                           
  2888                           ; 2 bytes @ 0x2F
  2889  00008F                     	ds	1
  2890  000090                     lcd_set_cursor_x@x:
  2891                           	opt callstack 0
  2892  000090                     lcd_set_cursor_y@y:
  2893                           	opt callstack 0
  2894  000090                     lcd_draw_pixel@color:
  2895                           	opt callstack 0
  2896                           
  2897                           ; 2 bytes @ 0x30
  2898  000090                     	ds	1
  2899  000091                     ADC_GetConversion@channel:
  2900                           	opt callstack 0
  2901  000091                     TMR0_ReadTimer@readVal:
  2902                           	opt callstack 0
  2903  000091                     ___wmul@product:
  2904                           	opt callstack 0
  2905  000091                     fputc@fp:
  2906                           	opt callstack 0
  2907  000091                     strncmp@n:
  2908                           	opt callstack 0
  2909  000091                     ___lmul@multiplicand:
  2910                           	opt callstack 0
  2911                           
  2912                           ; 4 bytes @ 0x31
  2913  000091                     	ds	1
  2914  000092                     lcd_set_cursor@x:
  2915                           	opt callstack 0
  2916                           
  2917                           ; 2 bytes @ 0x32
  2918  000092                     	ds	1
  2919  000093                     ??_fputc:
  2920  000093                     ??_strncmp:
  2921  000093                     ?_toupper:
  2922                           	opt callstack 0
  2923  000093                     TMR0_ReadTimer@readValLow:
  2924                           	opt callstack 0
  2925  000093                     _isspace$2310:
  2926                           	opt callstack 0
  2927  000093                     toupper@c:
  2928                           	opt callstack 0
  2929                           
  2930                           ; 2 bytes @ 0x33
  2931  000093                     	ds	1
  2932  000094                     ?_atoi:
  2933                           	opt callstack 0
  2934  000094                     TMR0_ReadTimer@readValHigh:
  2935                           	opt callstack 0
  2936  000094                     lcd_set_cursor@y:
  2937                           	opt callstack 0
  2938  000094                     atoi@s:
  2939                           	opt callstack 0
  2940  000094                     strncmp@l:
  2941                           	opt callstack 0
  2942                           
  2943                           ; 2 bytes @ 0x34
  2944  000094                     	ds	1
  2945  000095                     ??_toupper:
  2946  000095                     ___lmul@product:
  2947                           	opt callstack 0
  2948  000095                     ___aodiv@divisor:
  2949                           	opt callstack 0
  2950  000095                     ___aomod@divisor:
  2951                           	opt callstack 0
  2952  000095                     ___lodiv@divisor:
  2953                           	opt callstack 0
  2954  000095                     ___lomod@divisor:
  2955                           	opt callstack 0
  2956                           
  2957                           ; 8 bytes @ 0x35
  2958  000095                     	ds	1
  2959  000096                     ??_atoi:
  2960  000096                     lcd_fill@bg_color:
  2961                           	opt callstack 0
  2962  000096                     lcd_draw_char@x:
  2963                           	opt callstack 0
  2964  000096                     strncmp@r:
  2965                           	opt callstack 0
  2966                           
  2967                           ; 2 bytes @ 0x36
  2968  000096                     	ds	2
  2969  000098                     ?_stoa:
  2970                           	opt callstack 0
  2971  000098                     lcd_fill@height:
  2972                           	opt callstack 0
  2973  000098                     lcd_draw_char@y:
  2974                           	opt callstack 0
  2975  000098                     stoa@fp:
  2976                           	opt callstack 0
  2977  000098                     fputs@s:
  2978                           	opt callstack 0
  2979                           
  2980                           ; 2 bytes @ 0x38
  2981  000098                     	ds	1
  2982  000099                     ?___aldiv:
  2983                           	opt callstack 0
  2984  000099                     _toupper$2397:
  2985                           	opt callstack 0
  2986  000099                     ___aldiv@dividend:
  2987                           	opt callstack 0
  2988                           
  2989                           ; 4 bytes @ 0x39
  2990  000099                     	ds	1
  2991  00009A                     lcd_fill@width:
  2992                           	opt callstack 0
  2993  00009A                     lcd_draw_char@fIndex:
  2994                           	opt callstack 0
  2995  00009A                     stoa@s:
  2996                           	opt callstack 0
  2997  00009A                     atoi@neg:
  2998                           	opt callstack 0
  2999  00009A                     fputs@fp:
  3000                           	opt callstack 0
  3001                           
  3002                           ; 2 bytes @ 0x3A
  3003  00009A                     	ds	2
  3004  00009C                     ??_stoa:
  3005  00009C                     fputs@c:
  3006                           	opt callstack 0
  3007  00009C                     lcd_draw_char@fg_color:
  3008                           	opt callstack 0
  3009  00009C                     _atoi$2283:
  3010                           	opt callstack 0
  3011                           
  3012                           ; 2 bytes @ 0x3C
  3013  00009C                     	ds	1
  3014  00009D                     ___aodiv@counter:
  3015                           	opt callstack 0
  3016  00009D                     ___aomod@counter:
  3017                           	opt callstack 0
  3018  00009D                     ___lomod@counter:
  3019                           	opt callstack 0
  3020  00009D                     fputs@i:
  3021                           	opt callstack 0
  3022  00009D                     ___aldiv@divisor:
  3023                           	opt callstack 0
  3024  00009D                     stoa@nuls:
  3025                           	opt callstack 0
  3026  00009D                     ___lodiv@quotient:
  3027                           	opt callstack 0
  3028                           
  3029                           ; 8 bytes @ 0x3D
  3030  00009D                     	ds	1
  3031  00009E                     ___aodiv@sign:
  3032                           	opt callstack 0
  3033  00009E                     ___aomod@sign:
  3034                           	opt callstack 0
  3035  00009E                     lcd_draw_char@bg_color:
  3036                           	opt callstack 0
  3037  00009E                     _atoi$2285:
  3038                           	opt callstack 0
  3039                           
  3040                           ; 2 bytes @ 0x3E
  3041  00009E                     	ds	1
  3042  00009F                     ?_abs:
  3043                           	opt callstack 0
  3044  00009F                     ?_pad:
  3045                           	opt callstack 0
  3046  00009F                     pad@fp:
  3047                           	opt callstack 0
  3048  00009F                     abs@a:
  3049                           	opt callstack 0
  3050  00009F                     ___aodiv@quotient:
  3051                           	opt callstack 0
  3052                           
  3053                           ; 8 bytes @ 0x3F
  3054  00009F                     	ds	1
  3055  0000A0                     ??_lcd_draw_char:
  3056  0000A0                     _atoi$2284:
  3057                           	opt callstack 0
  3058                           
  3059                           ; 1 bytes @ 0x40
  3060  0000A0                     	ds	1
  3061  0000A1                     ??_abs:
  3062  0000A1                     ___aldiv@counter:
  3063                           	opt callstack 0
  3064  0000A1                     pad@buf:
  3065                           	opt callstack 0
  3066  0000A1                     atoi@n:
  3067                           	opt callstack 0
  3068                           
  3069                           ; 2 bytes @ 0x41
  3070  0000A1                     	ds	1
  3071  0000A2                     ___aldiv@sign:
  3072                           	opt callstack 0
  3073                           
  3074                           ; 1 bytes @ 0x42
  3075  0000A2                     	ds	1
  3076  0000A3                     ?_read_from_usart:
  3077                           	opt callstack 0
  3078  0000A3                     read_from_usart@length:
  3079                           	opt callstack 0
  3080  0000A3                     pad@p:
  3081                           	opt callstack 0
  3082  0000A3                     ___aldiv@quotient:
  3083                           	opt callstack 0
  3084                           
  3085                           ; 4 bytes @ 0x43
  3086  0000A3                     	ds	1
  3087  0000A4                     stoa@i:
  3088                           	opt callstack 0
  3089                           
  3090                           ; 2 bytes @ 0x44
  3091  0000A4                     	ds	1
  3092  0000A5                     ??_read_from_usart:
  3093  0000A5                     ??_pad:
  3094  0000A5                     ___lodiv@counter:
  3095                           	opt callstack 0
  3096                           
  3097                           ; 1 bytes @ 0x45
  3098  0000A5                     	ds	1
  3099  0000A6                     pad@i:
  3100                           	opt callstack 0
  3101  0000A6                     stoa@w:
  3102                           	opt callstack 0
  3103  0000A6                     read_from_usart@data:
  3104                           	opt callstack 0
  3105                           
  3106                           ; 10 bytes @ 0x46
  3107  0000A6                     	ds	2
  3108  0000A8                     pad@w:
  3109                           	opt callstack 0
  3110  0000A8                     stoa@cp:
  3111                           	opt callstack 0
  3112                           
  3113                           ; 2 bytes @ 0x48
  3114  0000A8                     	ds	1
  3115  0000A9                     lcd_draw_char@j:
  3116                           	opt callstack 0
  3117                           
  3118                           ; 1 bytes @ 0x49
  3119  0000A9                     	ds	1
  3120  0000AA                     ?_ctoa:
  3121                           	opt callstack 0
  3122  0000AA                     ?_dtoa:
  3123                           	opt callstack 0
  3124  0000AA                     ?_otoa:
  3125                           	opt callstack 0
  3126  0000AA                     ?_utoa:
  3127                           	opt callstack 0
  3128  0000AA                     ?_xtoa:
  3129                           	opt callstack 0
  3130  0000AA                     lcd_draw_char@k:
  3131                           	opt callstack 0
  3132  0000AA                     ctoa@fp:
  3133                           	opt callstack 0
  3134  0000AA                     dtoa@fp:
  3135                           	opt callstack 0
  3136  0000AA                     otoa@fp:
  3137                           	opt callstack 0
  3138  0000AA                     stoa@p:
  3139                           	opt callstack 0
  3140  0000AA                     utoa@fp:
  3141                           	opt callstack 0
  3142  0000AA                     xtoa@fp:
  3143                           	opt callstack 0
  3144                           
  3145                           ; 2 bytes @ 0x4A
  3146  0000AA                     	ds	1
  3147  0000AB                     lcd_draw_char@i:
  3148                           	opt callstack 0
  3149                           
  3150                           ; 1 bytes @ 0x4B
  3151  0000AB                     	ds	1
  3152  0000AC                     ??_lcd_draw_string:
  3153  0000AC                     ctoa@c:
  3154                           	opt callstack 0
  3155  0000AC                     stoa@l:
  3156                           	opt callstack 0
  3157  0000AC                     dtoa@d:
  3158                           	opt callstack 0
  3159  0000AC                     otoa@d:
  3160                           	opt callstack 0
  3161  0000AC                     utoa@d:
  3162                           	opt callstack 0
  3163  0000AC                     xtoa@d:
  3164                           	opt callstack 0
  3165                           
  3166                           ; 8 bytes @ 0x4C
  3167  0000AC                     	ds	1
  3168  0000AD                     ctoa@w:
  3169                           	opt callstack 0
  3170                           
  3171                           ; 2 bytes @ 0x4D
  3172  0000AD                     	ds	3
  3173  0000B0                     read_from_usart@value:
  3174                           	opt callstack 0
  3175  0000B0                     lcd_draw_string@k:
  3176                           	opt callstack 0
  3177                           
  3178                           ; 2 bytes @ 0x50
  3179  0000B0                     	ds	2
  3180  0000B2                     read_from_usart@i:
  3181                           	opt callstack 0
  3182  0000B2                     lcd_draw_string@lIndex:
  3183                           	opt callstack 0
  3184                           
  3185                           ; 2 bytes @ 0x52
  3186  0000B2                     	ds	2
  3187  0000B4                     xtoa@x:
  3188                           	opt callstack 0
  3189                           
  3190                           ; 1 bytes @ 0x54
  3191  0000B4                     	ds	1
  3192  0000B5                     
  3193                           ; 1 bytes @ 0x55
  3194                           
  3195                           	psect	cstackCOMRAM
  3196  000001                     __pcstackCOMRAM:
  3197                           	opt callstack 0
  3198  000001                     ?i2___wmul:
  3199                           	opt callstack 0
  3200  000001                     ?i2_isalpha:
  3201                           	opt callstack 0
  3202  000001                     ?i2_isdigit:
  3203                           	opt callstack 0
  3204  000001                     ?i2_isspace:
  3205                           	opt callstack 0
  3206  000001                     ?i2_isupper:
  3207                           	opt callstack 0
  3208  000001                     ?i2_strlen:
  3209                           	opt callstack 0
  3210  000001                     ?i2_strncmp:
  3211                           	opt callstack 0
  3212  000001                     ?i2_islower:
  3213                           	opt callstack 0
  3214  000001                     ?i2___aodiv:
  3215                           	opt callstack 0
  3216  000001                     ?i2___aomod:
  3217                           	opt callstack 0
  3218  000001                     ?i2___lodiv:
  3219                           	opt callstack 0
  3220  000001                     ?i2___lomod:
  3221                           	opt callstack 0
  3222  000001                     i2EUSART1_Write@txData:
  3223                           	opt callstack 0
  3224  000001                     i2TMR0_WriteTimer@timerVal:
  3225                           	opt callstack 0
  3226  000001                     i2___wmul@multiplier:
  3227                           	opt callstack 0
  3228  000001                     i2isalpha@c:
  3229                           	opt callstack 0
  3230  000001                     i2isdigit@c:
  3231                           	opt callstack 0
  3232  000001                     i2isspace@c:
  3233                           	opt callstack 0
  3234  000001                     i2isupper@c:
  3235                           	opt callstack 0
  3236  000001                     i2strlen@s:
  3237                           	opt callstack 0
  3238  000001                     i2strncmp@_l:
  3239                           	opt callstack 0
  3240  000001                     i2islower@c:
  3241                           	opt callstack 0
  3242  000001                     i2___aodiv@dividend:
  3243                           	opt callstack 0
  3244  000001                     i2___aomod@dividend:
  3245                           	opt callstack 0
  3246  000001                     i2___lodiv@dividend:
  3247                           	opt callstack 0
  3248  000001                     i2___lomod@dividend:
  3249                           	opt callstack 0
  3250                           
  3251                           ; 8 bytes @ 0x0
  3252  000001                     	ds	1
  3253  000002                     i2putch@txData:
  3254                           	opt callstack 0
  3255                           
  3256                           ; 1 bytes @ 0x1
  3257  000002                     	ds	1
  3258  000003                     ??i2_isalpha:
  3259  000003                     ??i2_isdigit:
  3260  000003                     ??i2_isspace:
  3261  000003                     ??i2_isupper:
  3262  000003                     ??i2_islower:
  3263  000003                     i2___wmul@multiplicand:
  3264                           	opt callstack 0
  3265  000003                     i2fputc@c:
  3266                           	opt callstack 0
  3267  000003                     i2strlen@a:
  3268                           	opt callstack 0
  3269  000003                     i2strncmp@_r:
  3270                           	opt callstack 0
  3271                           
  3272                           ; 2 bytes @ 0x2
  3273  000003                     	ds	2
  3274  000005                     i2___wmul@product:
  3275                           	opt callstack 0
  3276  000005                     i2fputc@fp:
  3277                           	opt callstack 0
  3278  000005                     i2strncmp@n:
  3279                           	opt callstack 0
  3280                           
  3281                           ; 2 bytes @ 0x4
  3282  000005                     	ds	2
  3283  000007                     ??i2_fputc:
  3284  000007                     ??i2_strncmp:
  3285  000007                     ?i2_toupper:
  3286                           	opt callstack 0
  3287  000007                     i2_isspace$2310:
  3288                           	opt callstack 0
  3289  000007                     i2toupper@c:
  3290                           	opt callstack 0
  3291                           
  3292                           ; 2 bytes @ 0x6
  3293  000007                     	ds	1
  3294  000008                     ?i2_atoi:
  3295                           	opt callstack 0
  3296  000008                     i2atoi@s:
  3297                           	opt callstack 0
  3298  000008                     i2strncmp@l:
  3299                           	opt callstack 0
  3300                           
  3301                           ; 2 bytes @ 0x7
  3302  000008                     	ds	1
  3303  000009                     ??i2_toupper:
  3304  000009                     i2___aodiv@divisor:
  3305                           	opt callstack 0
  3306  000009                     i2___aomod@divisor:
  3307                           	opt callstack 0
  3308  000009                     i2___lodiv@divisor:
  3309                           	opt callstack 0
  3310  000009                     i2___lomod@divisor:
  3311                           	opt callstack 0
  3312                           
  3313                           ; 8 bytes @ 0x8
  3314  000009                     	ds	1
  3315  00000A                     ??i2_atoi:
  3316  00000A                     i2strncmp@r:
  3317                           	opt callstack 0
  3318                           
  3319                           ; 2 bytes @ 0x9
  3320  00000A                     	ds	2
  3321  00000C                     ?i2_stoa:
  3322                           	opt callstack 0
  3323  00000C                     i2stoa@fp:
  3324                           	opt callstack 0
  3325  00000C                     i2fputs@s:
  3326                           	opt callstack 0
  3327                           
  3328                           ; 2 bytes @ 0xB
  3329  00000C                     	ds	1
  3330  00000D                     i2_toupper$2397:
  3331                           	opt callstack 0
  3332                           
  3333                           ; 2 bytes @ 0xC
  3334  00000D                     	ds	1
  3335  00000E                     i2stoa@s:
  3336                           	opt callstack 0
  3337  00000E                     i2atoi@neg:
  3338                           	opt callstack 0
  3339  00000E                     i2fputs@fp:
  3340                           	opt callstack 0
  3341                           
  3342                           ; 2 bytes @ 0xD
  3343  00000E                     	ds	2
  3344  000010                     ??i2_stoa:
  3345  000010                     i2fputs@c:
  3346                           	opt callstack 0
  3347  000010                     i2_atoi$2283:
  3348                           	opt callstack 0
  3349                           
  3350                           ; 2 bytes @ 0xF
  3351  000010                     	ds	1
  3352  000011                     i2___aodiv@counter:
  3353                           	opt callstack 0
  3354  000011                     i2___aomod@counter:
  3355                           	opt callstack 0
  3356  000011                     i2___lomod@counter:
  3357                           	opt callstack 0
  3358  000011                     i2fputs@i:
  3359                           	opt callstack 0
  3360  000011                     i2stoa@nuls:
  3361                           	opt callstack 0
  3362  000011                     i2___lodiv@quotient:
  3363                           	opt callstack 0
  3364                           
  3365                           ; 8 bytes @ 0x10
  3366  000011                     	ds	1
  3367  000012                     i2___aodiv@sign:
  3368                           	opt callstack 0
  3369  000012                     i2___aomod@sign:
  3370                           	opt callstack 0
  3371  000012                     i2_atoi$2285:
  3372                           	opt callstack 0
  3373                           
  3374                           ; 2 bytes @ 0x11
  3375  000012                     	ds	1
  3376  000013                     ?i2_pad:
  3377                           	opt callstack 0
  3378  000013                     ?i2_abs:
  3379                           	opt callstack 0
  3380  000013                     i2pad@fp:
  3381                           	opt callstack 0
  3382  000013                     i2abs@a:
  3383                           	opt callstack 0
  3384  000013                     i2___aodiv@quotient:
  3385                           	opt callstack 0
  3386                           
  3387                           ; 8 bytes @ 0x12
  3388  000013                     	ds	1
  3389  000014                     i2_atoi$2284:
  3390                           	opt callstack 0
  3391                           
  3392                           ; 1 bytes @ 0x13
  3393  000014                     	ds	1
  3394  000015                     ??i2_abs:
  3395  000015                     i2pad@buf:
  3396                           	opt callstack 0
  3397  000015                     i2atoi@n:
  3398                           	opt callstack 0
  3399                           
  3400                           ; 2 bytes @ 0x14
  3401  000015                     	ds	2
  3402  000017                     i2pad@p:
  3403                           	opt callstack 0
  3404                           
  3405                           ; 2 bytes @ 0x16
  3406  000017                     	ds	1
  3407  000018                     i2stoa@i:
  3408                           	opt callstack 0
  3409                           
  3410                           ; 2 bytes @ 0x17
  3411  000018                     	ds	1
  3412  000019                     ??i2_pad:
  3413  000019                     i2___lodiv@counter:
  3414                           	opt callstack 0
  3415                           
  3416                           ; 1 bytes @ 0x18
  3417  000019                     	ds	1
  3418  00001A                     i2pad@i:
  3419                           	opt callstack 0
  3420  00001A                     i2stoa@w:
  3421                           	opt callstack 0
  3422                           
  3423                           ; 2 bytes @ 0x19
  3424  00001A                     	ds	2
  3425  00001C                     i2pad@w:
  3426                           	opt callstack 0
  3427  00001C                     i2stoa@cp:
  3428                           	opt callstack 0
  3429                           
  3430                           ; 2 bytes @ 0x1B
  3431  00001C                     	ds	2
  3432  00001E                     ?i2_ctoa:
  3433                           	opt callstack 0
  3434  00001E                     ?i2_dtoa:
  3435                           	opt callstack 0
  3436  00001E                     ?i2_otoa:
  3437                           	opt callstack 0
  3438  00001E                     ?i2_utoa:
  3439                           	opt callstack 0
  3440  00001E                     ?i2_xtoa:
  3441                           	opt callstack 0
  3442  00001E                     i2ctoa@fp:
  3443                           	opt callstack 0
  3444  00001E                     i2dtoa@fp:
  3445                           	opt callstack 0
  3446  00001E                     i2otoa@fp:
  3447                           	opt callstack 0
  3448  00001E                     i2stoa@p:
  3449                           	opt callstack 0
  3450  00001E                     i2utoa@fp:
  3451                           	opt callstack 0
  3452  00001E                     i2xtoa@fp:
  3453                           	opt callstack 0
  3454                           
  3455                           ; 2 bytes @ 0x1D
  3456  00001E                     	ds	2
  3457  000020                     i2ctoa@c:
  3458                           	opt callstack 0
  3459  000020                     i2stoa@l:
  3460                           	opt callstack 0
  3461  000020                     i2dtoa@d:
  3462                           	opt callstack 0
  3463  000020                     i2otoa@d:
  3464                           	opt callstack 0
  3465  000020                     i2utoa@d:
  3466                           	opt callstack 0
  3467  000020                     i2xtoa@d:
  3468                           	opt callstack 0
  3469                           
  3470                           ; 8 bytes @ 0x1F
  3471  000020                     	ds	1
  3472  000021                     i2ctoa@w:
  3473                           	opt callstack 0
  3474                           
  3475                           ; 2 bytes @ 0x20
  3476  000021                     	ds	7
  3477  000028                     ??i2_dtoa:
  3478  000028                     ??i2_otoa:
  3479  000028                     ??i2_utoa:
  3480  000028                     i2xtoa@x:
  3481                           	opt callstack 0
  3482                           
  3483                           ; 1 bytes @ 0x27
  3484  000028                     	ds	1
  3485  000029                     ??i2_xtoa:
  3486                           
  3487                           ; 1 bytes @ 0x28
  3488  000029                     	ds	7
  3489  000030                     i2_dtoa$1670:
  3490                           	opt callstack 0
  3491  000030                     i2otoa@p:
  3492                           	opt callstack 0
  3493  000030                     i2utoa@p:
  3494                           	opt callstack 0
  3495                           
  3496                           ; 2 bytes @ 0x2F
  3497  000030                     	ds	1
  3498  000031                     i2_xtoa$1706:
  3499                           	opt callstack 0
  3500                           
  3501                           ; 2 bytes @ 0x30
  3502  000031                     	ds	1
  3503  000032                     i2dtoa@p:
  3504                           	opt callstack 0
  3505  000032                     i2otoa@t:
  3506                           	opt callstack 0
  3507  000032                     i2utoa@w:
  3508                           	opt callstack 0
  3509                           
  3510                           ; 2 bytes @ 0x31
  3511  000032                     	ds	1
  3512  000033                     i2_xtoa$1707:
  3513                           	opt callstack 0
  3514                           
  3515                           ; 2 bytes @ 0x32
  3516  000033                     	ds	1
  3517  000034                     i2dtoa@w:
  3518                           	opt callstack 0
  3519  000034                     i2otoa@w:
  3520                           	opt callstack 0
  3521  000034                     i2utoa@n:
  3522                           	opt callstack 0
  3523                           
  3524                           ; 8 bytes @ 0x33
  3525  000034                     	ds	1
  3526  000035                     i2xtoa@p:
  3527                           	opt callstack 0
  3528                           
  3529                           ; 2 bytes @ 0x34
  3530  000035                     	ds	1
  3531  000036                     i2dtoa@s:
  3532                           	opt callstack 0
  3533  000036                     i2otoa@n:
  3534                           	opt callstack 0
  3535                           
  3536                           ; 8 bytes @ 0x35
  3537  000036                     	ds	1
  3538  000037                     i2xtoa@w:
  3539                           	opt callstack 0
  3540                           
  3541                           ; 2 bytes @ 0x36
  3542  000037                     	ds	1
  3543  000038                     i2dtoa@n:
  3544                           	opt callstack 0
  3545                           
  3546                           ; 8 bytes @ 0x37
  3547  000038                     	ds	1
  3548  000039                     i2xtoa@n:
  3549                           	opt callstack 0
  3550                           
  3551                           ; 8 bytes @ 0x38
  3552  000039                     	ds	3
  3553  00003C                     i2utoa@i:
  3554                           	opt callstack 0
  3555                           
  3556                           ; 2 bytes @ 0x3B
  3557  00003C                     	ds	2
  3558  00003E                     i2otoa@i:
  3559                           	opt callstack 0
  3560                           
  3561                           ; 2 bytes @ 0x3D
  3562  00003E                     	ds	2
  3563  000040                     i2dtoa@i:
  3564                           	opt callstack 0
  3565                           
  3566                           ; 2 bytes @ 0x3F
  3567  000040                     	ds	1
  3568  000041                     i2xtoa@i:
  3569                           	opt callstack 0
  3570                           
  3571                           ; 2 bytes @ 0x40
  3572  000041                     	ds	2
  3573  000043                     i2xtoa@c:
  3574                           	opt callstack 0
  3575                           
  3576                           ; 2 bytes @ 0x42
  3577  000043                     	ds	2
  3578  000045                     ?i2_vfpfcnvrt:
  3579                           	opt callstack 0
  3580  000045                     i2vfpfcnvrt@fp:
  3581                           	opt callstack 0
  3582                           
  3583                           ; 2 bytes @ 0x44
  3584  000045                     	ds	2
  3585  000047                     i2vfpfcnvrt@fmt:
  3586                           	opt callstack 0
  3587                           
  3588                           ; 2 bytes @ 0x46
  3589  000047                     	ds	2
  3590  000049                     i2vfpfcnvrt@ap:
  3591                           	opt callstack 0
  3592                           
  3593                           ; 2 bytes @ 0x48
  3594  000049                     	ds	2
  3595  00004B                     ??i2_vfpfcnvrt:
  3596                           
  3597                           ; 1 bytes @ 0x4A
  3598  00004B                     	ds	4
  3599  00004F                     ?i2_vfprintf:
  3600                           	opt callstack 0
  3601  00004F                     i2vfprintf@fp:
  3602                           	opt callstack 0
  3603                           
  3604                           ; 2 bytes @ 0x4E
  3605  00004F                     	ds	2
  3606  000051                     i2vfprintf@fmt:
  3607                           	opt callstack 0
  3608                           
  3609                           ; 2 bytes @ 0x50
  3610  000051                     	ds	2
  3611  000053                     i2vfprintf@ap:
  3612                           	opt callstack 0
  3613                           
  3614                           ; 2 bytes @ 0x52
  3615  000053                     	ds	2
  3616  000055                     i2vfprintf@cfmt:
  3617                           	opt callstack 0
  3618                           
  3619                           ; 2 bytes @ 0x54
  3620  000055                     	ds	2
  3621  000057                     
  3622                           ; 1 bytes @ 0x56
  3623  000057                     	ds	2
  3624  000059                     i2printf@ap:
  3625                           	opt callstack 0
  3626                           
  3627                           ; 2 bytes @ 0x58
  3628  000059                     	ds	2
  3629  00005B                     
  3630                           ; 1 bytes @ 0x5A
  3631 ;;
  3632 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  3633 ;;
  3634 ;; *************** function _main *****************
  3635 ;; Defined at:
  3636 ;;		line 44 in file "main.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;		None
  3639 ;; Auto vars:     Size  Location     Type
  3640 ;;		None
  3641 ;; Return value:  Size  Location     Type
  3642 ;;                  1    wreg      void 
  3643 ;; Registers used:
  3644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3645 ;; Tracked objects:
  3646 ;;		On entry : 0/0
  3647 ;;		On exit  : 0/0
  3648 ;;		Unchanged: 0/0
  3649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3652 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3653 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3654 ;;Total ram usage:        5 bytes
  3655 ;; Hardware stack levels required when called:   23
  3656 ;; This function calls:
  3657 ;;		_ADC_GetConversion
  3658 ;;		_IOCB4_SetInterruptHandler
  3659 ;;		_SPI_Open
  3660 ;;		_SYSTEM_Initialize
  3661 ;;		_TMR0_ReadTimer
  3662 ;;		_TMR0_WriteTimer
  3663 ;;		___aldiv
  3664 ;;		___lmul
  3665 ;;		_lcd_draw_string
  3666 ;;		_lcd_init
  3667 ;;		_printf
  3668 ;;		_read_from_usart
  3669 ;;		_snprintf
  3670 ;; This function is called by:
  3671 ;;		Startup code after reset
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           	psect	text0
  3676  0035B6                     __ptext0:
  3677                           	opt callstack 0
  3678  0035B6                     _main:
  3679                           	opt callstack 8
  3680  0035B6                     
  3681                           ;main.c: 46:     SYSTEM_Initialize();
  3682  0035B6  ECAC  F033         	call	_SYSTEM_Initialize	;wreg free
  3683  0035BA                     
  3684                           ;main.c: 47:     SPI_Open(SPI_DEFAULT);
  3685  0035BA  0E00               	movlw	0
  3686  0035BC  ECA0  F02D         	call	_SPI_Open
  3687  0035C0                     
  3688                           ;main.c: 48:     lcd_init();
  3689  0035C0  ECE5  F012         	call	_lcd_init	;wreg free
  3690  0035C4                     
  3691                           ;main.c: 52:     IOCB4_SetInterruptHandler(INTERRUPT_S1_CALLBACK);
  3692  0035C4  0E34               	movlw	low _INTERRUPT_S1_CALLBACK
  3693  0035C6  0100               	movlb	0	; () banked
  3694  0035C8  6F8D               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  3695  0035CA  0E60               	movlw	high _INTERRUPT_S1_CALLBACK
  3696  0035CC  6F8E               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3697  0035CE  EC4D  F034         	call	_IOCB4_SetInterruptHandler	;wreg free
  3698  0035D2                     
  3699                           ;main.c: 59:     (INTCONbits.GIE = 1);
  3700  0035D2  8EF2               	bsf	242,7,c	;volatile
  3701  0035D4                     
  3702                           ;main.c: 69:     lcd_draw_string(60, 220, "EAU          SEEV         AULA_5", 0xFFFF, 0x
      +                          0000);
  3703  0035D4  0E00               	movlw	0
  3704  0035D6  0101               	movlb	1	; () banked
  3705  0035D8  6F01               	movwf	(lcd_draw_string@x+1)& (0+255),b
  3706  0035DA  0E3C               	movlw	60
  3707  0035DC  6F00               	movwf	lcd_draw_string@x& (0+255),b
  3708  0035DE  0E00               	movlw	0
  3709  0035E0  6F03               	movwf	(lcd_draw_string@y+1)& (0+255),b
  3710  0035E2  0EDC               	movlw	220
  3711  0035E4  6F02               	movwf	lcd_draw_string@y& (0+255),b
  3712  0035E6  0E54               	movlw	low STR_2
  3713  0035E8  6F04               	movwf	lcd_draw_string@pS& (0+255),b
  3714  0035EA  0EFF               	movlw	high STR_2
  3715  0035EC  6F05               	movwf	(lcd_draw_string@pS+1)& (0+255),b
  3716  0035EE  0EFF               	movlw	255
  3717  0035F0  6F07               	movwf	(lcd_draw_string@fg_color+1)& (0+255),b
  3718  0035F2  6906               	setf	lcd_draw_string@fg_color& (0+255),b
  3719  0035F4  0E00               	movlw	0
  3720  0035F6  6F09               	movwf	(lcd_draw_string@bg_color+1)& (0+255),b
  3721  0035F8  0E00               	movlw	0
  3722  0035FA  6F08               	movwf	lcd_draw_string@bg_color& (0+255),b
  3723  0035FC  EC54  F027         	call	_lcd_draw_string	;wreg free
  3724  003600                     
  3725                           ;main.c: 70:     TMR0_WriteTimer(0x00);
  3726  003600  0E00               	movlw	0
  3727  003602  0100               	movlb	0	; () banked
  3728  003604  6F8E               	movwf	(TMR0_WriteTimer@timerVal+1)& (0+255),b
  3729  003606  0E00               	movlw	0
  3730  003608  6F8D               	movwf	TMR0_WriteTimer@timerVal& (0+255),b
  3731  00360A  EC47  F034         	call	_TMR0_WriteTimer	;wreg free
  3732  00360E                     l9083:
  3733                           
  3734                           ;main.c: 74:         adc_value = ADC_GetConversion(POT_PIN);
  3735  00360E  0E00               	movlw	0
  3736  003610  EC5E  F031         	call	_ADC_GetConversion
  3737  003614  C08D  F176         	movff	?_ADC_GetConversion,_adc_value
  3738  003618  C08E  F177         	movff	?_ADC_GetConversion+1,_adc_value+1
  3739  00361C                     
  3740                           ;main.c: 75:         adc_perc = (long int) adc_value * 100 / 4095;
  3741  00361C  C176  F08D         	movff	_adc_value,___lmul@multiplier
  3742  003620  C177  F08E         	movff	_adc_value+1,___lmul@multiplier+1
  3743  003624  0100               	movlb	0	; () banked
  3744  003626  0E00               	movlw	0
  3745  003628  BF8E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
  3746  00362A  0EFF               	movlw	-1
  3747  00362C  6F8F               	movwf	(___lmul@multiplier+2)& (0+255),b
  3748  00362E  6F90               	movwf	(___lmul@multiplier+3)& (0+255),b
  3749  003630  0E64               	movlw	100
  3750  003632  6F91               	movwf	___lmul@multiplicand& (0+255),b
  3751  003634  0E00               	movlw	0
  3752  003636  6F92               	movwf	(___lmul@multiplicand+1)& (0+255),b
  3753  003638  0E00               	movlw	0
  3754  00363A  6F93               	movwf	(___lmul@multiplicand+2)& (0+255),b
  3755  00363C  0E00               	movlw	0
  3756  00363E  6F94               	movwf	(___lmul@multiplicand+3)& (0+255),b
  3757  003640  EC3E  F02E         	call	___lmul	;wreg free
  3758  003644  C08D  F099         	movff	?___lmul,___aldiv@dividend
  3759  003648  C08E  F09A         	movff	?___lmul+1,___aldiv@dividend+1
  3760  00364C  C08F  F09B         	movff	?___lmul+2,___aldiv@dividend+2
  3761  003650  C090  F09C         	movff	?___lmul+3,___aldiv@dividend+3
  3762  003654  0EFF               	movlw	255
  3763  003656  0100               	movlb	0	; () banked
  3764  003658  6F9D               	movwf	___aldiv@divisor& (0+255),b
  3765  00365A  0E0F               	movlw	15
  3766  00365C  6F9E               	movwf	(___aldiv@divisor+1)& (0+255),b
  3767  00365E  0E00               	movlw	0
  3768  003660  6F9F               	movwf	(___aldiv@divisor+2)& (0+255),b
  3769  003662  0E00               	movlw	0
  3770  003664  6FA0               	movwf	(___aldiv@divisor+3)& (0+255),b
  3771  003666  EC7B  F028         	call	___aldiv	;wreg free
  3772  00366A  C099  F0B5         	movff	?___aldiv,_adc_perc
  3773  00366E  C09A  F0B6         	movff	?___aldiv+1,_adc_perc+1
  3774  003672  C09B  F0B7         	movff	?___aldiv+2,_adc_perc+2
  3775  003676  C09C  F0B8         	movff	?___aldiv+3,_adc_perc+3
  3776  00367A                     
  3777                           ;main.c: 76:         snprintf(string, sizeof (string), "POT: %3d %%", adc_perc);
  3778  00367A  0E98               	movlw	low _string
  3779  00367C  0101               	movlb	1	; () banked
  3780  00367E  6F5F               	movwf	snprintf@s& (0+255),b
  3781  003680  0E01               	movlw	high _string
  3782  003682  6F60               	movwf	(snprintf@s+1)& (0+255),b
  3783  003684  0E00               	movlw	0
  3784  003686  6F62               	movwf	(snprintf@n+1)& (0+255),b
  3785  003688  0E1E               	movlw	30
  3786  00368A  6F61               	movwf	snprintf@n& (0+255),b
  3787  00368C  0EC1               	movlw	low STR_3
  3788  00368E  6F63               	movwf	snprintf@fmt& (0+255),b
  3789  003690  0EFF               	movlw	high STR_3
  3790  003692  6F64               	movwf	(snprintf@fmt+1)& (0+255),b
  3791  003694  C0B5  F165         	movff	_adc_perc,?_snprintf+6
  3792  003698  C0B6  F166         	movff	_adc_perc+1,?_snprintf+7
  3793  00369C  C0B7  F167         	movff	_adc_perc+2,?_snprintf+8
  3794  0036A0  C0B8  F168         	movff	_adc_perc+3,?_snprintf+9
  3795  0036A4  ECDA  F032         	call	_snprintf	;wreg free
  3796  0036A8                     
  3797                           ;main.c: 77:         lcd_draw_string(100, 100, string, 0xFFFF, 0x0000);
  3798  0036A8  0E00               	movlw	0
  3799  0036AA  0101               	movlb	1	; () banked
  3800  0036AC  6F01               	movwf	(lcd_draw_string@x+1)& (0+255),b
  3801  0036AE  0E64               	movlw	100
  3802  0036B0  6F00               	movwf	lcd_draw_string@x& (0+255),b
  3803  0036B2  0E00               	movlw	0
  3804  0036B4  6F03               	movwf	(lcd_draw_string@y+1)& (0+255),b
  3805  0036B6  0E64               	movlw	100
  3806  0036B8  6F02               	movwf	lcd_draw_string@y& (0+255),b
  3807  0036BA  0E98               	movlw	low _string
  3808  0036BC  6F04               	movwf	lcd_draw_string@pS& (0+255),b
  3809  0036BE  0E01               	movlw	high _string
  3810  0036C0  6F05               	movwf	(lcd_draw_string@pS+1)& (0+255),b
  3811  0036C2  0EFF               	movlw	255
  3812  0036C4  6F07               	movwf	(lcd_draw_string@fg_color+1)& (0+255),b
  3813  0036C6  6906               	setf	lcd_draw_string@fg_color& (0+255),b
  3814  0036C8  0E00               	movlw	0
  3815  0036CA  6F09               	movwf	(lcd_draw_string@bg_color+1)& (0+255),b
  3816  0036CC  0E00               	movlw	0
  3817  0036CE  6F08               	movwf	lcd_draw_string@bg_color& (0+255),b
  3818  0036D0  EC54  F027         	call	_lcd_draw_string	;wreg free
  3819  0036D4                     
  3820                           ;main.c: 80:         if (adc_perc >= turn_on_value) {
  3821  0036D4  C1B8  F16D         	movff	_turn_on_value,??_main
  3822  0036D8  C1B9  F16E         	movff	_turn_on_value+1,??_main+1
  3823  0036DC  0E00               	movlw	0
  3824  0036DE  0101               	movlb	1	; () banked
  3825  0036E0  BF6E               	btfsc	(??_main+1)& (0+255),7,b
  3826  0036E2  0EFF               	movlw	255
  3827  0036E4  6F6F               	movwf	(??_main+2)& (0+255),b
  3828  0036E6  6F70               	movwf	(??_main+3)& (0+255),b
  3829  0036E8  516D               	movf	??_main& (0+255),w,b
  3830  0036EA  0100               	movlb	0	; () banked
  3831  0036EC  5DB5               	subwf	_adc_perc& (0+255),w,b
  3832  0036EE  0101               	movlb	1	; () banked
  3833  0036F0  516E               	movf	(??_main+1)& (0+255),w,b
  3834  0036F2  0100               	movlb	0	; () banked
  3835  0036F4  59B6               	subwfb	(_adc_perc+1)& (0+255),w,b
  3836  0036F6  0101               	movlb	1	; () banked
  3837  0036F8  516F               	movf	(??_main+2)& (0+255),w,b
  3838  0036FA  0100               	movlb	0	; () banked
  3839  0036FC  59B7               	subwfb	(_adc_perc+2)& (0+255),w,b
  3840  0036FE  51B8               	movf	(_adc_perc+3)& (0+255),w,b
  3841  003700  0A80               	xorlw	128
  3842  003702  0101               	movlb	1	; () banked
  3843  003704  6F71               	movwf	(??_main+4)& (0+255),b
  3844  003706  5170               	movf	(??_main+3)& (0+255),w,b
  3845  003708  0A80               	xorlw	128
  3846  00370A  5971               	subwfb	(??_main+4)& (0+255),w,b
  3847  00370C  A0D8               	btfss	status,0,c
  3848  00370E  EF8B  F01B         	goto	u11761
  3849  003712  EF8D  F01B         	goto	u11760
  3850  003716                     u11761:
  3851  003716  EF8E  F01B         	goto	l9093
  3852  00371A                     u11760:
  3853  00371A                     
  3854                           ; BSR set to: 1
  3855  00371A  8A89               	bsf	137,5,c	;volatile
  3856  00371C                     l9093:
  3857                           
  3858                           ; BSR set to: 1
  3859                           ;main.c: 83:         if (adc_perc <= turn_off_value) {
  3860  00371C  C1B6  F16D         	movff	_turn_off_value,??_main
  3861  003720  C1B7  F16E         	movff	_turn_off_value+1,??_main+1
  3862  003724  0E00               	movlw	0
  3863  003726  BF6E               	btfsc	(??_main+1)& (0+255),7,b
  3864  003728  0EFF               	movlw	255
  3865  00372A  6F6F               	movwf	(??_main+2)& (0+255),b
  3866  00372C  6F70               	movwf	(??_main+3)& (0+255),b
  3867  00372E  0100               	movlb	0	; () banked
  3868  003730  51B5               	movf	_adc_perc& (0+255),w,b
  3869  003732  0101               	movlb	1	; () banked
  3870  003734  5D6D               	subwf	??_main& (0+255),w,b
  3871  003736  0100               	movlb	0	; () banked
  3872  003738  51B6               	movf	(_adc_perc+1)& (0+255),w,b
  3873  00373A  0101               	movlb	1	; () banked
  3874  00373C  596E               	subwfb	(??_main+1)& (0+255),w,b
  3875  00373E  0100               	movlb	0	; () banked
  3876  003740  51B7               	movf	(_adc_perc+2)& (0+255),w,b
  3877  003742  0101               	movlb	1	; () banked
  3878  003744  596F               	subwfb	(??_main+2)& (0+255),w,b
  3879  003746  5170               	movf	(??_main+3)& (0+255),w,b
  3880  003748  0A80               	xorlw	128
  3881  00374A  6F71               	movwf	(??_main+4)& (0+255),b
  3882  00374C  0100               	movlb	0	; () banked
  3883  00374E  51B8               	movf	(_adc_perc+3)& (0+255),w,b
  3884  003750  0A80               	xorlw	128
  3885  003752  0101               	movlb	1	; () banked
  3886  003754  5971               	subwfb	(??_main+4)& (0+255),w,b
  3887  003756  A0D8               	btfss	status,0,c
  3888  003758  EFB0  F01B         	goto	u11771
  3889  00375C  EFB2  F01B         	goto	u11770
  3890  003760                     u11771:
  3891  003760  EFB3  F01B         	goto	l9095
  3892  003764                     u11770:
  3893  003764                     
  3894                           ; BSR set to: 1
  3895  003764  9A89               	bcf	137,5,c	;volatile
  3896  003766                     l9095:
  3897                           
  3898                           ; BSR set to: 1
  3899                           ;main.c: 88:         if (TMR0_ReadTimer() > 23500) {
  3900  003766  ECBD  F033         	call	_TMR0_ReadTimer	;wreg free
  3901  00376A  0ECD               	movlw	205
  3902  00376C  0100               	movlb	0	; () banked
  3903  00376E  5D8D               	subwf	?_TMR0_ReadTimer& (0+255),w,b
  3904  003770  0E5B               	movlw	91
  3905  003772  598E               	subwfb	(?_TMR0_ReadTimer+1)& (0+255),w,b
  3906  003774  A0D8               	btfss	status,0,c
  3907  003776  EFBF  F01B         	goto	u11781
  3908  00377A  EFC1  F01B         	goto	u11780
  3909  00377E                     u11781:
  3910  00377E  EF07  F01B         	goto	l9083
  3911  003782                     u11780:
  3912  003782                     
  3913                           ; BSR set to: 0
  3914                           ;main.c: 90:             printf("Configuration MODE \n\r");
  3915  003782  0E75               	movlw	low STR_4
  3916  003784  0101               	movlb	1	; () banked
  3917  003786  6F49               	movwf	printf@fmt& (0+255),b
  3918  003788  0EFF               	movlw	high STR_4
  3919  00378A  6F4A               	movwf	(printf@fmt+1)& (0+255),b
  3920  00378C  EC5E  F033         	call	_printf	;wreg free
  3921                           
  3922                           ;main.c: 91:             printf("\n\rACTUAL TURN VALUES  ON: %d OFF: %d\n\r", turn_on_va
      +                          lue, turn_off_value);
  3923  003790  0E2D               	movlw	low STR_5
  3924  003792  0101               	movlb	1	; () banked
  3925  003794  6F49               	movwf	printf@fmt& (0+255),b
  3926  003796  0EFF               	movlw	high STR_5
  3927  003798  6F4A               	movwf	(printf@fmt+1)& (0+255),b
  3928  00379A  C1B8  F14B         	movff	_turn_on_value,?_printf+2
  3929  00379E  C1B9  F14C         	movff	_turn_on_value+1,?_printf+3
  3930  0037A2  C1B6  F14D         	movff	_turn_off_value,?_printf+4
  3931  0037A6  C1B7  F14E         	movff	_turn_off_value+1,?_printf+5
  3932  0037AA  EC5E  F033         	call	_printf	;wreg free
  3933                           
  3934                           ;main.c: 93:             printf("\n\rTurn ON Value: \n\r");
  3935  0037AE  0EA0               	movlw	low STR_6
  3936  0037B0  0101               	movlb	1	; () banked
  3937  0037B2  6F49               	movwf	printf@fmt& (0+255),b
  3938  0037B4  0EFF               	movlw	high STR_6
  3939  0037B6  6F4A               	movwf	(printf@fmt+1)& (0+255),b
  3940  0037B8  EC5E  F033         	call	_printf	;wreg free
  3941                           
  3942                           ;main.c: 94:             turn_on_value = read_from_usart(2);
  3943  0037BC  0E00               	movlw	0
  3944  0037BE  0100               	movlb	0	; () banked
  3945  0037C0  6FA4               	movwf	(read_from_usart@length+1)& (0+255),b
  3946  0037C2  0E02               	movlw	2
  3947  0037C4  6FA3               	movwf	read_from_usart@length& (0+255),b
  3948  0037C6  EC42  F02D         	call	_read_from_usart	;wreg free
  3949  0037CA  C0A3  F1B8         	movff	?_read_from_usart,_turn_on_value
  3950  0037CE  C0A4  F1B9         	movff	?_read_from_usart+1,_turn_on_value+1
  3951                           
  3952                           ;main.c: 95:             printf("\n\rTurn OFF Value: \n\r");
  3953  0037D2  0E8B               	movlw	low STR_7
  3954  0037D4  0101               	movlb	1	; () banked
  3955  0037D6  6F49               	movwf	printf@fmt& (0+255),b
  3956  0037D8  0EFF               	movlw	high STR_7
  3957  0037DA  6F4A               	movwf	(printf@fmt+1)& (0+255),b
  3958  0037DC  EC5E  F033         	call	_printf	;wreg free
  3959                           
  3960                           ;main.c: 96:             turn_off_value = read_from_usart(2);
  3961  0037E0  0E00               	movlw	0
  3962  0037E2  0100               	movlb	0	; () banked
  3963  0037E4  6FA4               	movwf	(read_from_usart@length+1)& (0+255),b
  3964  0037E6  0E02               	movlw	2
  3965  0037E8  6FA3               	movwf	read_from_usart@length& (0+255),b
  3966  0037EA  EC42  F02D         	call	_read_from_usart	;wreg free
  3967  0037EE  C0A3  F1B6         	movff	?_read_from_usart,_turn_off_value
  3968  0037F2  C0A4  F1B7         	movff	?_read_from_usart+1,_turn_off_value+1
  3969                           
  3970                           ;main.c: 98:             printf("\n\n\rTURN VALUES SAVED   ON: %d OFF: %d\n\r", turn_on_
      +                          value, turn_off_value);
  3971  0037F6  0E05               	movlw	low STR_8
  3972  0037F8  0101               	movlb	1	; () banked
  3973  0037FA  6F49               	movwf	printf@fmt& (0+255),b
  3974  0037FC  0EFF               	movlw	high STR_8
  3975  0037FE  6F4A               	movwf	(printf@fmt+1)& (0+255),b
  3976  003800  C1B8  F14B         	movff	_turn_on_value,?_printf+2
  3977  003804  C1B9  F14C         	movff	_turn_on_value+1,?_printf+3
  3978  003808  C1B6  F14D         	movff	_turn_off_value,?_printf+4
  3979  00380C  C1B7  F14E         	movff	_turn_off_value+1,?_printf+5
  3980  003810  EC5E  F033         	call	_printf	;wreg free
  3981  003814  EF07  F01B         	goto	l9083
  3982  003818  EF47  F000         	goto	start
  3983  00381C                     __end_of_main:
  3984                           	opt callstack 0
  3985                           
  3986 ;; *************** function _snprintf *****************
  3987 ;; Defined at:
  3988 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\snprintf.c"
  3989 ;; Parameters:    Size  Location     Type
  3990 ;;  s               2   95[BANK1 ] PTR unsigned char 
  3991 ;;		 -> string(30), 
  3992 ;;  n               2   97[BANK1 ] unsigned int 
  3993 ;;  fmt             2   99[BANK1 ] PTR const unsigned char 
  3994 ;;		 -> STR_3(12), 
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;  ap              2  107[BANK1 ] PTR void [1]
  3997 ;;		 -> ?_snprintf(2), ?_printf(2), 
  3998 ;;  ret             2    0        int 
  3999 ;; Return value:  Size  Location     Type
  4000 ;;                  2   95[BANK1 ] int 
  4001 ;; Registers used:
  4002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4003 ;; Tracked objects:
  4004 ;;		On entry : 0/0
  4005 ;;		On exit  : 0/0
  4006 ;;		Unchanged: 0/0
  4007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4008 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4009 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4011 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4012 ;;Total ram usage:       14 bytes
  4013 ;; Hardware stack levels used:    1
  4014 ;; Hardware stack levels required when called:   22
  4015 ;; This function calls:
  4016 ;;		_vsnprintf
  4017 ;; This function is called by:
  4018 ;;		_main
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021                           
  4022                           	psect	text1
  4023  0065B4                     __ptext1:
  4024                           	opt callstack 0
  4025  0065B4                     _snprintf:
  4026                           	opt callstack 8
  4027  0065B4  0E65               	movlw	low (?_snprintf+6)
  4028  0065B6  0101               	movlb	1	; () banked
  4029  0065B8  6F6B               	movwf	snprintf@ap& (0+255),b
  4030  0065BA  0E01               	movlw	high (?_snprintf+6)
  4031  0065BC  6F6C               	movwf	(snprintf@ap+1)& (0+255),b
  4032  0065BE                     
  4033                           ; BSR set to: 1
  4034  0065BE  C15F  F149         	movff	snprintf@s,vsnprintf@s
  4035  0065C2  C160  F14A         	movff	snprintf@s+1,vsnprintf@s+1
  4036  0065C6  C161  F14B         	movff	snprintf@n,vsnprintf@n
  4037  0065CA  C162  F14C         	movff	snprintf@n+1,vsnprintf@n+1
  4038  0065CE  C163  F14D         	movff	snprintf@fmt,vsnprintf@fmt
  4039  0065D2  C164  F14E         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  4040  0065D6  0E6B               	movlw	low snprintf@ap
  4041  0065D8  6F4F               	movwf	vsnprintf@ap& (0+255),b
  4042  0065DA  0E01               	movlw	high snprintf@ap
  4043  0065DC  6F50               	movwf	(vsnprintf@ap+1)& (0+255),b
  4044  0065DE  ECF3  F027         	call	_vsnprintf	;wreg free
  4045  0065E2  0012               	return		;funcret
  4046  0065E4                     __end_of_snprintf:
  4047                           	opt callstack 0
  4048                           
  4049 ;; *************** function _vsnprintf *****************
  4050 ;; Defined at:
  4051 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_vsnprintf.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;  s               2   73[BANK1 ] PTR unsigned char 
  4054 ;;		 -> string(30), 
  4055 ;;  n               2   75[BANK1 ] unsigned int 
  4056 ;;  fmt             2   77[BANK1 ] PTR const unsigned char 
  4057 ;;		 -> STR_3(12), 
  4058 ;;  ap              2   79[BANK1 ] PTR PTR void 
  4059 ;;		 -> snprintf@ap(2), 
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;  f               6   89[BANK1 ] struct _IO_FILE
  4062 ;;  cnt             2   87[BANK1 ] int 
  4063 ;; Return value:  Size  Location     Type
  4064 ;;                  2   73[BANK1 ] int 
  4065 ;; Registers used:
  4066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4067 ;; Tracked objects:
  4068 ;;		On entry : 0/0
  4069 ;;		On exit  : 0/0
  4070 ;;		Unchanged: 0/0
  4071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4072 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4073 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4074 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4075 ;;      Totals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4076 ;;Total ram usage:       22 bytes
  4077 ;; Hardware stack levels used:    1
  4078 ;; Hardware stack levels required when called:   21
  4079 ;; This function calls:
  4080 ;;		_vfprintf
  4081 ;; This function is called by:
  4082 ;;		_snprintf
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           	psect	text2
  4087  004FE6                     __ptext2:
  4088                           	opt callstack 0
  4089  004FE6                     _vsnprintf:
  4090                           	opt callstack 8
  4091  004FE6  0E80               	movlw	128
  4092  004FE8  0101               	movlb	1	; () banked
  4093  004FEA  5D4C               	subwf	(vsnprintf@n+1)& (0+255),w,b
  4094  004FEC  A0D8               	btfss	status,0,c
  4095  004FEE  EFFB  F027         	goto	u11601
  4096  004FF2  EFFD  F027         	goto	u11600
  4097  004FF6                     u11601:
  4098  004FF6  EF05  F028         	goto	l8981
  4099  004FFA                     u11600:
  4100  004FFA                     
  4101                           ; BSR set to: 1
  4102  004FFA  0E00               	movlw	0
  4103  004FFC  6F73               	movwf	(_errno+1)& (0+255),b
  4104  004FFE  0E4B               	movlw	75
  4105  005000  6F72               	movwf	_errno& (0+255),b
  4106  005002                     
  4107                           ; BSR set to: 1
  4108  005002  6949               	setf	?_vsnprintf& (0+255),b
  4109  005004  694A               	setf	(?_vsnprintf+1)& (0+255),b
  4110  005006  EF7A  F028         	goto	l1656
  4111  00500A                     l8981:
  4112                           
  4113                           ; BSR set to: 1
  4114  00500A  C149  F159         	movff	vsnprintf@s,vsnprintf@f
  4115  00500E  C14A  F15A         	movff	vsnprintf@s+1,vsnprintf@f+1
  4116  005012  514C               	movf	(vsnprintf@n+1)& (0+255),w,b
  4117  005014  E109               	bnz	u11610
  4118  005016  0E02               	movlw	2
  4119  005018  5D4B               	subwf	vsnprintf@n& (0+255),w,b
  4120  00501A  A0D8               	btfss	status,0,c
  4121  00501C  EF12  F028         	goto	u11611
  4122  005020  EF14  F028         	goto	u11610
  4123  005024                     u11611:
  4124  005024  EF20  F028         	goto	l8987
  4125  005028                     u11610:
  4126  005028                     
  4127                           ; BSR set to: 1
  4128  005028  0EFF               	movlw	255
  4129  00502A  254B               	addwf	vsnprintf@n& (0+255),w,b
  4130  00502C  6F5D               	movwf	(vsnprintf@f+4)& (0+255),b
  4131  00502E  0EFF               	movlw	255
  4132  005030  214C               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  4133  005032  6F5E               	movwf	(vsnprintf@f+5)& (0+255),b
  4134  005034                     
  4135                           ; BSR set to: 1
  4136  005034  0E00               	movlw	0
  4137  005036  6F5C               	movwf	(vsnprintf@f+3)& (0+255),b
  4138  005038  0E00               	movlw	0
  4139  00503A  6F5B               	movwf	(vsnprintf@f+2)& (0+255),b
  4140  00503C  EF28  F028         	goto	l8989
  4141  005040                     l8987:
  4142                           
  4143                           ; BSR set to: 1
  4144  005040  0E00               	movlw	0
  4145  005042  6F5E               	movwf	(vsnprintf@f+5)& (0+255),b
  4146  005044  0E01               	movlw	1
  4147  005046  6F5D               	movwf	(vsnprintf@f+4)& (0+255),b
  4148  005048  0E00               	movlw	0
  4149  00504A  6F5C               	movwf	(vsnprintf@f+3)& (0+255),b
  4150  00504C  0E01               	movlw	1
  4151  00504E  6F5B               	movwf	(vsnprintf@f+2)& (0+255),b
  4152  005050                     l8989:
  4153                           
  4154                           ; BSR set to: 1
  4155  005050  0E59               	movlw	low vsnprintf@f
  4156  005052  6F41               	movwf	vfprintf@fp& (0+255),b
  4157  005054  0E01               	movlw	high vsnprintf@f
  4158  005056  6F42               	movwf	(vfprintf@fp+1)& (0+255),b
  4159  005058  C14D  F143         	movff	vsnprintf@fmt,vfprintf@fmt
  4160  00505C  C14E  F144         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  4161  005060  C14F  F145         	movff	vsnprintf@ap,vfprintf@ap
  4162  005064  C150  F146         	movff	vsnprintf@ap+1,vfprintf@ap+1
  4163  005068  ECA7  F02E         	call	_vfprintf	;wreg free
  4164  00506C  C141  F157         	movff	?_vfprintf,vsnprintf@cnt
  4165  005070  C142  F158         	movff	?_vfprintf+1,vsnprintf@cnt+1
  4166  005074  0101               	movlb	1	; () banked
  4167  005076  514B               	movf	vsnprintf@n& (0+255),w,b
  4168  005078  114C               	iorwf	(vsnprintf@n+1)& (0+255),w,b
  4169  00507A  B4D8               	btfsc	status,2,c
  4170  00507C  EF42  F028         	goto	u11621
  4171  005080  EF44  F028         	goto	u11620
  4172  005084                     u11621:
  4173  005084  EF76  F028         	goto	l9001
  4174  005088                     u11620:
  4175  005088                     
  4176                           ; BSR set to: 1
  4177  005088  BF58               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  4178  00508A  EF49  F028         	goto	u11631
  4179  00508E  EF4B  F028         	goto	u11630
  4180  005092                     u11631:
  4181  005092  EF76  F028         	goto	l9001
  4182  005096                     u11630:
  4183  005096                     
  4184                           ; BSR set to: 1
  4185  005096  0EFF               	movlw	255
  4186  005098  6F51               	movwf	??_vsnprintf& (0+255),b
  4187  00509A  0EFF               	movlw	255
  4188  00509C  6F52               	movwf	(??_vsnprintf+1)& (0+255),b
  4189  00509E  C14B  F153         	movff	vsnprintf@n,??_vsnprintf+2
  4190  0050A2  C14C  F154         	movff	vsnprintf@n+1,??_vsnprintf+3
  4191  0050A6  5151               	movf	??_vsnprintf& (0+255),w,b
  4192  0050A8  2753               	addwf	(??_vsnprintf+2)& (0+255),f,b
  4193  0050AA  5152               	movf	(??_vsnprintf+1)& (0+255),w,b
  4194  0050AC  2354               	addwfc	(??_vsnprintf+3)& (0+255),f,b
  4195  0050AE  5153               	movf	(??_vsnprintf+2)& (0+255),w,b
  4196  0050B0  5D57               	subwf	vsnprintf@cnt& (0+255),w,b
  4197  0050B2  5154               	movf	(??_vsnprintf+3)& (0+255),w,b
  4198  0050B4  5958               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  4199  0050B6  A0D8               	btfss	status,0,c
  4200  0050B8  EF60  F028         	goto	u11641
  4201  0050BC  EF62  F028         	goto	u11640
  4202  0050C0                     u11641:
  4203  0050C0  EF6A  F028         	goto	l1661
  4204  0050C4                     u11640:
  4205  0050C4                     
  4206                           ; BSR set to: 1
  4207  0050C4  0EFF               	movlw	255
  4208  0050C6  254B               	addwf	vsnprintf@n& (0+255),w,b
  4209  0050C8  6F55               	movwf	_vsnprintf$2428& (0+255),b
  4210  0050CA  0EFF               	movlw	255
  4211  0050CC  214C               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  4212  0050CE  6F56               	movwf	(_vsnprintf$2428+1)& (0+255),b
  4213  0050D0  EF6E  F028         	goto	l8999
  4214  0050D4                     l1661:
  4215                           
  4216                           ; BSR set to: 1
  4217  0050D4  C157  F155         	movff	vsnprintf@cnt,_vsnprintf$2428
  4218  0050D8  C158  F156         	movff	vsnprintf@cnt+1,_vsnprintf$2428+1
  4219  0050DC                     l8999:
  4220                           
  4221                           ; BSR set to: 1
  4222  0050DC  5155               	movf	_vsnprintf$2428& (0+255),w,b
  4223  0050DE  2549               	addwf	vsnprintf@s& (0+255),w,b
  4224  0050E0  6ED9               	movwf	fsr2l,c
  4225  0050E2  5156               	movf	(_vsnprintf$2428+1)& (0+255),w,b
  4226  0050E4  214A               	addwfc	(vsnprintf@s+1)& (0+255),w,b
  4227  0050E6  6EDA               	movwf	fsr2h,c
  4228  0050E8  0E00               	movlw	0
  4229  0050EA  6EDF               	movwf	indf2,c
  4230  0050EC                     l9001:
  4231                           
  4232                           ; BSR set to: 1
  4233  0050EC  C157  F149         	movff	vsnprintf@cnt,?_vsnprintf
  4234  0050F0  C158  F14A         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  4235  0050F4                     l1656:
  4236                           
  4237                           ; BSR set to: 1
  4238  0050F4  0012               	return		;funcret
  4239  0050F6                     __end_of_vsnprintf:
  4240                           	opt callstack 0
  4241                           
  4242 ;; *************** function _read_from_usart *****************
  4243 ;; Defined at:
  4244 ;;		line 23 in file "main.c"
  4245 ;; Parameters:    Size  Location     Type
  4246 ;;  length          2   67[BANK0 ] int 
  4247 ;; Auto vars:     Size  Location     Type
  4248 ;;  i               2   82[BANK0 ] int 
  4249 ;;  data           10   70[BANK0 ] unsigned char [10]
  4250 ;;  value           2   80[BANK0 ] int 
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  2   67[BANK0 ] int 
  4253 ;; Registers used:
  4254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4260 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4261 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4262 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4263 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4264 ;;Total ram usage:       17 bytes
  4265 ;; Hardware stack levels used:    1
  4266 ;; Hardware stack levels required when called:   15
  4267 ;; This function calls:
  4268 ;;		_EUSART1_Read
  4269 ;;		_EUSART1_Write
  4270 ;;		_EUSART1_is_rx_ready
  4271 ;;		_EUSART1_is_tx_ready
  4272 ;;		_TMR0_WriteTimer
  4273 ;;		_atoi
  4274 ;; This function is called by:
  4275 ;;		_main
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           	psect	text3
  4280  005A84                     __ptext3:
  4281                           	opt callstack 0
  4282  005A84                     _read_from_usart:
  4283                           	opt callstack 15
  4284  005A84                     
  4285                           ;main.c: 27:     for (int i = 0; i < length; i++) {
  4286  005A84  0E00               	movlw	0
  4287  005A86  0100               	movlb	0	; () banked
  4288  005A88  6FB3               	movwf	(read_from_usart@i+1)& (0+255),b
  4289  005A8A  0E00               	movlw	0
  4290  005A8C  6FB2               	movwf	read_from_usart@i& (0+255),b
  4291  005A8E  EF82  F02D         	goto	l9031
  4292  005A92                     l437:
  4293  005A92  AA9E               	btfss	158,5,c	;volatile
  4294  005A94  EF4E  F02D         	goto	u11661
  4295  005A98  EF50  F02D         	goto	u11660
  4296  005A9C                     u11661:
  4297  005A9C  EF49  F02D         	goto	l437
  4298  005AA0                     u11660:
  4299  005AA0                     
  4300                           ;main.c: 29:         if (EUSART1_is_rx_ready()) {
  4301  005AA0  EC24  F034         	call	_EUSART1_is_rx_ready	;wreg free
  4302  005AA4  0900               	iorlw	0
  4303  005AA6  B4D8               	btfsc	status,2,c
  4304  005AA8  EF58  F02D         	goto	u11671
  4305  005AAC  EF5A  F02D         	goto	u11670
  4306  005AB0                     u11671:
  4307  005AB0  EF7F  F02D         	goto	l9029
  4308  005AB4                     u11670:
  4309  005AB4                     
  4310                           ;main.c: 30:             data[i] = EUSART1_Read();
  4311  005AB4  0EA6               	movlw	low read_from_usart@data
  4312  005AB6  0100               	movlb	0	; () banked
  4313  005AB8  25B2               	addwf	read_from_usart@i& (0+255),w,b
  4314  005ABA  6ED9               	movwf	fsr2l,c
  4315  005ABC  0E00               	movlw	high read_from_usart@data
  4316  005ABE  21B3               	addwfc	(read_from_usart@i+1)& (0+255),w,b
  4317  005AC0  6EDA               	movwf	fsr2h,c
  4318  005AC2  EC34  F033         	call	_EUSART1_Read	;wreg free
  4319  005AC6  6EDF               	movwf	indf2,c
  4320  005AC8                     
  4321                           ;main.c: 31:             if (EUSART1_is_tx_ready()) {
  4322  005AC8  EC1F  F033         	call	_EUSART1_is_tx_ready	;wreg free
  4323  005ACC  0900               	iorlw	0
  4324  005ACE  B4D8               	btfsc	status,2,c
  4325  005AD0  EF6C  F02D         	goto	u11681
  4326  005AD4  EF6E  F02D         	goto	u11680
  4327  005AD8                     u11681:
  4328  005AD8  EF7F  F02D         	goto	l9029
  4329  005ADC                     u11680:
  4330  005ADC                     
  4331                           ;main.c: 32:                 EUSART1_Write(data[i]);
  4332  005ADC  0EA6               	movlw	low read_from_usart@data
  4333  005ADE  0100               	movlb	0	; () banked
  4334  005AE0  25B2               	addwf	read_from_usart@i& (0+255),w,b
  4335  005AE2  6ED9               	movwf	fsr2l,c
  4336  005AE4  0E00               	movlw	high read_from_usart@data
  4337  005AE6  21B3               	addwfc	(read_from_usart@i+1)& (0+255),w,b
  4338  005AE8  6EDA               	movwf	fsr2h,c
  4339  005AEA  50DF               	movf	indf2,w,c
  4340  005AEC  ECEA  F033         	call	_EUSART1_Write
  4341  005AF0                     
  4342                           ;main.c: 33:                 TMR0_WriteTimer(0x00);
  4343  005AF0  0E00               	movlw	0
  4344  005AF2  0100               	movlb	0	; () banked
  4345  005AF4  6F8E               	movwf	(TMR0_WriteTimer@timerVal+1)& (0+255),b
  4346  005AF6  0E00               	movlw	0
  4347  005AF8  6F8D               	movwf	TMR0_WriteTimer@timerVal& (0+255),b
  4348  005AFA  EC47  F034         	call	_TMR0_WriteTimer	;wreg free
  4349  005AFE                     l9029:
  4350                           
  4351                           ;main.c: 36:     }
  4352  005AFE  0100               	movlb	0	; () banked
  4353  005B00  4BB2               	infsnz	read_from_usart@i& (0+255),f,b
  4354  005B02  2BB3               	incf	(read_from_usart@i+1)& (0+255),f,b
  4355  005B04                     l9031:
  4356                           
  4357                           ; BSR set to: 0
  4358  005B04  51A3               	movf	read_from_usart@length& (0+255),w,b
  4359  005B06  5DB2               	subwf	read_from_usart@i& (0+255),w,b
  4360  005B08  51B3               	movf	(read_from_usart@i+1)& (0+255),w,b
  4361  005B0A  0A80               	xorlw	128
  4362  005B0C  6FA5               	movwf	??_read_from_usart& (0+255),b
  4363  005B0E  51A4               	movf	(read_from_usart@length+1)& (0+255),w,b
  4364  005B10  0A80               	xorlw	128
  4365  005B12  59A5               	subwfb	??_read_from_usart& (0+255),w,b
  4366  005B14  A0D8               	btfss	status,0,c
  4367  005B16  EF8F  F02D         	goto	u11691
  4368  005B1A  EF91  F02D         	goto	u11690
  4369  005B1E                     u11691:
  4370  005B1E  EF49  F02D         	goto	l437
  4371  005B22                     u11690:
  4372  005B22                     
  4373                           ; BSR set to: 0
  4374                           ;main.c: 37:     value = atoi(data);
  4375  005B22  0EA6               	movlw	low read_from_usart@data
  4376  005B24  6F94               	movwf	atoi@s& (0+255),b
  4377  005B26  0E00               	movlw	high read_from_usart@data
  4378  005B28  6F95               	movwf	(atoi@s+1)& (0+255),b
  4379  005B2A  EC1A  F01D         	call	_atoi	;wreg free
  4380  005B2E  C094  F0B0         	movff	?_atoi,read_from_usart@value
  4381  005B32  C095  F0B1         	movff	?_atoi+1,read_from_usart@value+1
  4382  005B36                     
  4383                           ;main.c: 38:     return value;
  4384  005B36  C0B0  F0A3         	movff	read_from_usart@value,?_read_from_usart
  4385  005B3A  C0B1  F0A4         	movff	read_from_usart@value+1,?_read_from_usart+1
  4386  005B3E  0012               	return		;funcret
  4387  005B40                     __end_of_read_from_usart:
  4388                           	opt callstack 0
  4389                           
  4390 ;; *************** function _TMR0_WriteTimer *****************
  4391 ;; Defined at:
  4392 ;;		line 115 in file "mcc_generated_files/tmr0.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;  timerVal        2   45[BANK0 ] unsigned short 
  4395 ;; Auto vars:     Size  Location     Type
  4396 ;;		None
  4397 ;; Return value:  Size  Location     Type
  4398 ;;                  1    wreg      void 
  4399 ;; Registers used:
  4400 ;;		wreg, status,2
  4401 ;; Tracked objects:
  4402 ;;		On entry : 0/0
  4403 ;;		On exit  : 0/0
  4404 ;;		Unchanged: 0/0
  4405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4406 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4409 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4410 ;;Total ram usage:        2 bytes
  4411 ;; Hardware stack levels used:    1
  4412 ;; Hardware stack levels required when called:   13
  4413 ;; This function calls:
  4414 ;;		Nothing
  4415 ;; This function is called by:
  4416 ;;		_read_from_usart
  4417 ;;		_main
  4418 ;; This function uses a non-reentrant model
  4419 ;;
  4420                           
  4421                           	psect	text4
  4422  00688E                     __ptext4:
  4423                           	opt callstack 0
  4424  00688E                     _TMR0_WriteTimer:
  4425                           	opt callstack 16
  4426  00688E                     
  4427                           ;mcc_generated_files/tmr0.c: 115: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 116: {;mcc_generated_files/tmr0.c: 118:     TMR0H = timerVal >> 8;
  4428  00688E  0100               	movlb	0	; () banked
  4429  006890  518E               	movf	(TMR0_WriteTimer@timerVal+1)& (0+255),w,b
  4430  006892  6ED7               	movwf	215,c	;volatile
  4431  006894                     
  4432                           ; BSR set to: 0
  4433                           ;mcc_generated_files/tmr0.c: 119:     TMR0L = (uint8_t) timerVal;
  4434  006894  C08D  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  4435  006898                     
  4436                           ; BSR set to: 0
  4437  006898  0012               	return		;funcret
  4438  00689A                     __end_of_TMR0_WriteTimer:
  4439                           	opt callstack 0
  4440                           
  4441 ;; *************** function _EUSART1_is_tx_ready *****************
  4442 ;; Defined at:
  4443 ;;		line 94 in file "mcc_generated_files/eusart1.c"
  4444 ;; Parameters:    Size  Location     Type
  4445 ;;		None
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;		None
  4448 ;; Return value:  Size  Location     Type
  4449 ;;                  1    wreg      _Bool 
  4450 ;; Registers used:
  4451 ;;		wreg, status,2
  4452 ;; Tracked objects:
  4453 ;;		On entry : 0/0
  4454 ;;		On exit  : 0/0
  4455 ;;		Unchanged: 0/0
  4456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4458 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4460 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4461 ;;Total ram usage:        1 bytes
  4462 ;; Hardware stack levels used:    1
  4463 ;; Hardware stack levels required when called:   13
  4464 ;; This function calls:
  4465 ;;		Nothing
  4466 ;; This function is called by:
  4467 ;;		_read_from_usart
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           
  4471                           	psect	text5
  4472  00663E                     __ptext5:
  4473                           	opt callstack 0
  4474  00663E                     _EUSART1_is_tx_ready:
  4475                           	opt callstack 16
  4476  00663E                     
  4477                           ;mcc_generated_files/eusart1.c: 96:     return (_Bool)(PIR1bits.TX1IF && TXSTA1bits.TXEN
      +                          );
  4478  00663E  0E00               	movlw	0
  4479  006640  0100               	movlb	0	; () banked
  4480  006642  6F8D               	movwf	_EUSART1_is_tx_ready$859& (0+255),b
  4481  006644                     
  4482                           ; BSR set to: 0
  4483  006644  A89E               	btfss	158,4,c	;volatile
  4484  006646  EF27  F033         	goto	u7571
  4485  00664A  EF29  F033         	goto	u7570
  4486  00664E                     u7571:
  4487  00664E  EF32  F033         	goto	l277
  4488  006652                     u7570:
  4489  006652                     
  4490                           ; BSR set to: 0
  4491  006652  AAAC               	btfss	172,5,c	;volatile
  4492  006654  EF2E  F033         	goto	u7581
  4493  006658  EF30  F033         	goto	u7580
  4494  00665C                     u7581:
  4495  00665C  EF32  F033         	goto	l277
  4496  006660                     u7580:
  4497  006660                     
  4498                           ; BSR set to: 0
  4499  006660  0E01               	movlw	1
  4500  006662  6F8D               	movwf	_EUSART1_is_tx_ready$859& (0+255),b
  4501  006664                     l277:
  4502                           
  4503                           ; BSR set to: 0
  4504  006664  518D               	movf	_EUSART1_is_tx_ready$859& (0+255),w,b
  4505  006666                     
  4506                           ; BSR set to: 0
  4507  006666  0012               	return		;funcret
  4508  006668                     __end_of_EUSART1_is_tx_ready:
  4509                           	opt callstack 0
  4510                           
  4511 ;; *************** function _EUSART1_is_rx_ready *****************
  4512 ;; Defined at:
  4513 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  4514 ;; Parameters:    Size  Location     Type
  4515 ;;		None
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;		None
  4518 ;; Return value:  Size  Location     Type
  4519 ;;                  1    wreg      _Bool 
  4520 ;; Registers used:
  4521 ;;		wreg
  4522 ;; Tracked objects:
  4523 ;;		On entry : 0/0
  4524 ;;		On exit  : 0/0
  4525 ;;		Unchanged: 0/0
  4526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4531 ;;Total ram usage:        0 bytes
  4532 ;; Hardware stack levels used:    1
  4533 ;; Hardware stack levels required when called:   13
  4534 ;; This function calls:
  4535 ;;		Nothing
  4536 ;; This function is called by:
  4537 ;;		_read_from_usart
  4538 ;; This function uses a non-reentrant model
  4539 ;;
  4540                           
  4541                           	psect	text6
  4542  006848                     __ptext6:
  4543                           	opt callstack 0
  4544  006848                     _EUSART1_is_rx_ready:
  4545                           	opt callstack 16
  4546  006848                     
  4547                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  4548  006848  BA9E               	btfsc	158,5,c	;volatile
  4549  00684A  EF29  F034         	goto	u7591
  4550  00684E  EF2C  F034         	goto	u7590
  4551  006852                     u7591:
  4552  006852  0E01               	movlw	1
  4553  006854  EF2D  F034         	goto	u7596
  4554  006858                     u7590:
  4555  006858  0E00               	movlw	0
  4556  00685A                     u7596:
  4557  00685A  0012               	return		;funcret
  4558  00685C                     __end_of_EUSART1_is_rx_ready:
  4559                           	opt callstack 0
  4560                           
  4561 ;; *************** function _EUSART1_Read *****************
  4562 ;; Defined at:
  4563 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  4564 ;; Parameters:    Size  Location     Type
  4565 ;;		None
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;		None
  4568 ;; Return value:  Size  Location     Type
  4569 ;;                  1    wreg      unsigned char 
  4570 ;; Registers used:
  4571 ;;		wreg, status,2
  4572 ;; Tracked objects:
  4573 ;;		On entry : 0/0
  4574 ;;		On exit  : 0/0
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4581 ;;Total ram usage:        0 bytes
  4582 ;; Hardware stack levels used:    1
  4583 ;; Hardware stack levels required when called:   13
  4584 ;; This function calls:
  4585 ;;		Nothing
  4586 ;; This function is called by:
  4587 ;;		_read_from_usart
  4588 ;;		_getch
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592                           	psect	text7
  4593  006668                     __ptext7:
  4594                           	opt callstack 0
  4595  006668                     _EUSART1_Read:
  4596                           	opt callstack 16
  4597  006668                     l290:
  4598                           
  4599                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  4600  006668  AA9E               	btfss	158,5,c	;volatile
  4601  00666A  EF39  F033         	goto	u7601
  4602  00666E  EF3B  F033         	goto	u7600
  4603  006672                     u7601:
  4604  006672  EF34  F033         	goto	l290
  4605  006676                     u7600:
  4606  006676                     
  4607                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  4608  006676  0E00               	movlw	0
  4609  006678  0100               	movlb	0	; () banked
  4610  00667A  6FC1               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  4611  00667C                     
  4612                           ; BSR set to: 0
  4613                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  4614  00667C  A2AB               	btfss	171,1,c	;volatile
  4615  00667E  EF43  F033         	goto	u7611
  4616  006682  EF45  F033         	goto	u7610
  4617  006686                     u7611:
  4618  006686  EF47  F033         	goto	l6405
  4619  00668A                     u7610:
  4620  00668A                     
  4621                           ; BSR set to: 0
  4622                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  4623  00668A  98AB               	bcf	171,4,c	;volatile
  4624                           
  4625                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  4626  00668C  88AB               	bsf	171,4,c	;volatile
  4627  00668E                     l6405:
  4628                           
  4629                           ; BSR set to: 0
  4630                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  4631  00668E  50AE               	movf	174,w,c	;volatile
  4632  006690                     
  4633                           ; BSR set to: 0
  4634  006690  0012               	return		;funcret
  4635  006692                     __end_of_EUSART1_Read:
  4636                           	opt callstack 0
  4637                           
  4638 ;; *************** function _printf *****************
  4639 ;; Defined at:
  4640 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;  fmt             2   73[BANK1 ] PTR const unsigned char 
  4643 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
  4644 ;;		 -> STR_4(22), STR_1(13), 
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;  ap              2   81[BANK1 ] PTR void [1]
  4647 ;;		 -> ?_snprintf(2), ?_printf(2), 
  4648 ;;  ret             2    0        int 
  4649 ;; Return value:  Size  Location     Type
  4650 ;;                  2   73[BANK1 ] int 
  4651 ;; Registers used:
  4652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4653 ;; Tracked objects:
  4654 ;;		On entry : 0/0
  4655 ;;		On exit  : 0/0
  4656 ;;		Unchanged: 0/0
  4657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4658 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4659 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4661 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4662 ;;Total ram usage:       10 bytes
  4663 ;; Hardware stack levels used:    1
  4664 ;; Hardware stack levels required when called:   21
  4665 ;; This function calls:
  4666 ;;		_vfprintf
  4667 ;; This function is called by:
  4668 ;;		_main
  4669 ;; This function uses a non-reentrant model
  4670 ;;
  4671                           
  4672                           	psect	text8
  4673  0066BC                     __ptext8:
  4674                           	opt callstack 0
  4675  0066BC                     _printf:
  4676                           	opt callstack 9
  4677  0066BC  0E4B               	movlw	low (?_printf+2)
  4678  0066BE  0101               	movlb	1	; () banked
  4679  0066C0  6F51               	movwf	printf@ap& (0+255),b
  4680  0066C2  0E01               	movlw	high (?_printf+2)
  4681  0066C4  6F52               	movwf	(printf@ap+1)& (0+255),b
  4682  0066C6                     
  4683                           ; BSR set to: 1
  4684  0066C6  0E00               	movlw	0
  4685  0066C8  6F41               	movwf	vfprintf@fp& (0+255),b
  4686  0066CA  0E00               	movlw	0
  4687  0066CC  6F42               	movwf	(vfprintf@fp+1)& (0+255),b
  4688  0066CE  C149  F143         	movff	printf@fmt,vfprintf@fmt
  4689  0066D2  C14A  F144         	movff	printf@fmt+1,vfprintf@fmt+1
  4690  0066D6  0E51               	movlw	low printf@ap
  4691  0066D8  6F45               	movwf	vfprintf@ap& (0+255),b
  4692  0066DA  0E01               	movlw	high printf@ap
  4693  0066DC  6F46               	movwf	(vfprintf@ap+1)& (0+255),b
  4694  0066DE  ECA7  F02E         	call	_vfprintf	;wreg free
  4695  0066E2  0012               	return		;funcret
  4696  0066E4                     __end_of_printf:
  4697                           	opt callstack 0
  4698                           
  4699 ;; *************** function _vfprintf *****************
  4700 ;; Defined at:
  4701 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4702 ;; Parameters:    Size  Location     Type
  4703 ;;  fp              2   65[BANK1 ] PTR struct _IO_FILE
  4704 ;;		 -> vsnprintf@f(6), NULL(0), 
  4705 ;;  fmt             2   67[BANK1 ] PTR const unsigned char 
  4706 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
  4707 ;;		 -> STR_4(22), STR_3(12), STR_1(13), 
  4708 ;;  ap              2   69[BANK1 ] PTR PTR void 
  4709 ;;		 -> snprintf@ap(2), printf@ap(2), 
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;  cfmt            2   71[BANK1 ] PTR unsigned char 
  4712 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
  4713 ;;		 -> STR_4(22), STR_3(12), STR_1(13), 
  4714 ;; Return value:  Size  Location     Type
  4715 ;;                  2   65[BANK1 ] int 
  4716 ;; Registers used:
  4717 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4718 ;; Tracked objects:
  4719 ;;		On entry : 0/0
  4720 ;;		On exit  : 0/0
  4721 ;;		Unchanged: 0/0
  4722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4723 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4724 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4726 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4727 ;;Total ram usage:        8 bytes
  4728 ;; Hardware stack levels used:    1
  4729 ;; Hardware stack levels required when called:   20
  4730 ;; This function calls:
  4731 ;;		_vfpfcnvrt
  4732 ;; This function is called by:
  4733 ;;		_printf
  4734 ;;		_vsnprintf
  4735 ;; This function uses a non-reentrant model
  4736 ;;
  4737                           
  4738                           	psect	text9
  4739  005D4E                     __ptext9:
  4740                           	opt callstack 0
  4741  005D4E                     _vfprintf:
  4742                           	opt callstack 8
  4743  005D4E                     
  4744                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4745  005D4E  C143  F147         	movff	vfprintf@fmt,vfprintf@cfmt
  4746  005D52  C144  F148         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4747  005D56                     
  4748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  4749  005D56  0E00               	movlw	0
  4750  005D58  0101               	movlb	1	; () banked
  4751  005D5A  6F75               	movwf	(_nout+1)& (0+255),b
  4752  005D5C  0E00               	movlw	0
  4753  005D5E  6F74               	movwf	_nout& (0+255),b
  4754                           
  4755                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4756  005D60  EFC5  F02E         	goto	l8967
  4757  005D64                     l8965:
  4758                           
  4759                           ; BSR set to: 1
  4760                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4761  005D64  C141  F11C         	movff	vfprintf@fp,vfpfcnvrt@fp
  4762  005D68  C142  F11D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4763  005D6C  0E47               	movlw	low vfprintf@cfmt
  4764  005D6E  6F1E               	movwf	vfpfcnvrt@fmt& (0+255),b
  4765  005D70  0E01               	movlw	high vfprintf@cfmt
  4766  005D72  6F1F               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  4767  005D74  C145  F120         	movff	vfprintf@ap,vfpfcnvrt@ap
  4768  005D78  C146  F121         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4769  005D7C  EC49  F000         	call	_vfpfcnvrt	;wreg free
  4770  005D80  0101               	movlb	1	; () banked
  4771  005D82  511C               	movf	?_vfpfcnvrt& (0+255),w,b
  4772  005D84  2774               	addwf	_nout& (0+255),f,b
  4773  005D86  511D               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  4774  005D88  2375               	addwfc	(_nout+1)& (0+255),f,b
  4775  005D8A                     l8967:
  4776                           
  4777                           ; BSR set to: 1
  4778                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4779  005D8A  C147  FFF6         	movff	vfprintf@cfmt,tblptrl
  4780  005D8E  C148  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4781  005D92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4782  005D92  6AF8               	clrf	tblptru,c
  4783  005D94                     	endif
  4784  005D94                     	if	0	;tblptru may be non-zero
  4785  005D94                     	endif
  4786  005D94  0008               	tblrd		*
  4787  005D96  50F5               	movf	tablat,w,c
  4788  005D98  0900               	iorlw	0
  4789  005D9A  A4D8               	btfss	status,2,c
  4790  005D9C  EFD2  F02E         	goto	u11571
  4791  005DA0  EFD4  F02E         	goto	u11570
  4792  005DA4                     u11571:
  4793  005DA4  EFB2  F02E         	goto	l8965
  4794  005DA8                     u11570:
  4795  005DA8                     
  4796                           ; BSR set to: 1
  4797                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4798  005DA8  C174  F141         	movff	_nout,?_vfprintf
  4799  005DAC  C175  F142         	movff	_nout+1,?_vfprintf+1
  4800  005DB0                     
  4801                           ; BSR set to: 1
  4802  005DB0  0012               	return		;funcret
  4803  005DB2                     __end_of_vfprintf:
  4804                           	opt callstack 0
  4805                           
  4806 ;; *************** function _vfpfcnvrt *****************
  4807 ;; Defined at:
  4808 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4809 ;; Parameters:    Size  Location     Type
  4810 ;;  fp              2   28[BANK1 ] PTR struct _IO_FILE
  4811 ;;		 -> vsnprintf@f(6), NULL(0), 
  4812 ;;  fmt             2   30[BANK1 ] PTR PTR unsigned char 
  4813 ;;		 -> vfprintf@cfmt(2), 
  4814 ;;  ap              2   32[BANK1 ] PTR PTR void 
  4815 ;;		 -> snprintf@ap(2), printf@ap(2), 
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;  llu             8   57[BANK1 ] unsigned long long 
  4818 ;;  ll              8   46[BANK1 ] long long 
  4819 ;;  f               4    0        long long 
  4820 ;;  ct              3    0        unsigned char [3]
  4821 ;;  vp              2   54[BANK1 ] PTR void 
  4822 ;;		 -> ?_snprintf(2), ?_printf(2), 
  4823 ;;  done            2   40[BANK1 ] int 
  4824 ;;  cp              2   38[BANK1 ] PTR unsigned char 
  4825 ;;		 -> ?_snprintf(2), ?_printf(2), 
  4826 ;;  i               2    0        int 
  4827 ;;  c               1   56[BANK1 ] unsigned char 
  4828 ;; Return value:  Size  Location     Type
  4829 ;;                  2   28[BANK1 ] int 
  4830 ;; Registers used:
  4831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4837 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4838 ;;      Locals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4839 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4840 ;;      Totals:         0       0      37       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4841 ;;Total ram usage:       37 bytes
  4842 ;; Hardware stack levels used:    1
  4843 ;; Hardware stack levels required when called:   19
  4844 ;; This function calls:
  4845 ;;		_atoi
  4846 ;;		_ctoa
  4847 ;;		_dtoa
  4848 ;;		_fputc
  4849 ;;		_isdigit
  4850 ;;		_otoa
  4851 ;;		_stoa
  4852 ;;		_strncmp
  4853 ;;		_utoa
  4854 ;;		_xtoa
  4855 ;; This function is called by:
  4856 ;;		_vfprintf
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860                           	psect	text10
  4861  000092                     __ptext10:
  4862                           	opt callstack 0
  4863  000092                     _vfpfcnvrt:
  4864                           	opt callstack 8
  4865  000092                     
  4866                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4867  000092  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4868  000096  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4869  00009A  CFDE FFF6          	movff	postinc2,tblptrl
  4870  00009E  CFDD FFF7          	movff	postdec2,tblptrh
  4871  0000A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4872  0000A2  6AF8               	clrf	tblptru,c
  4873  0000A4                     	endif
  4874  0000A4                     	if	0	;tblptru may be non-zero
  4875  0000A4                     	endif
  4876  0000A4  0008               	tblrd		*
  4877  0000A6  50F5               	movf	tablat,w,c
  4878  0000A8  0A25               	xorlw	37
  4879  0000AA  A4D8               	btfss	status,2,c
  4880  0000AC  EF5A  F000         	goto	u11101
  4881  0000B0  EF5C  F000         	goto	u11100
  4882  0000B4                     u11101:
  4883  0000B4  EF8B  F009         	goto	l8929
  4884  0000B8                     u11100:
  4885  0000B8                     
  4886                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4887  0000B8  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4888  0000BC  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4889  0000C0  2ADE               	incf	postinc2,f,c
  4890  0000C2  0E00               	movlw	0
  4891  0000C4  22DD               	addwfc	postdec2,f,c
  4892  0000C6                     
  4893                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4894  0000C6  0E00               	movlw	0
  4895  0000C8  0100               	movlb	0	; () banked
  4896  0000CA  6FBA               	movwf	(_width+1)& (0+255),b
  4897  0000CC  0E00               	movlw	0
  4898  0000CE  6FB9               	movwf	_width& (0+255),b
  4899  0000D0  C0B9  F0BD         	movff	_width,_flags
  4900  0000D4  C0BA  F0BE         	movff	_width+1,_flags+1
  4901  0000D8                     
  4902                           ; BSR set to: 0
  4903                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4904  0000D8  69BB               	setf	_prec& (0+255),b
  4905  0000DA  69BC               	setf	(_prec+1)& (0+255),b
  4906  0000DC                     
  4907                           ; BSR set to: 0
  4908                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  4909  0000DC  0E00               	movlw	0
  4910  0000DE  0101               	movlb	1	; () banked
  4911  0000E0  6F29               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4912  0000E2  0E00               	movlw	0
  4913  0000E4  6F28               	movwf	vfpfcnvrt@done& (0+255),b
  4914                           
  4915                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4916  0000E6  EFC1  F000         	goto	l8647
  4917  0000EA                     l8621:
  4918                           
  4919                           ; BSR set to: 1
  4920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  4921  0000EA  0100               	movlb	0	; () banked
  4922  0000EC  81BD               	bsf	_flags& (0+255),0,b
  4923  0000EE                     l8623:
  4924                           
  4925                           ; BSR set to: 0
  4926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  4927  0000EE  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4928  0000F2  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4929  0000F6  2ADE               	incf	postinc2,f,c
  4930  0000F8  0E00               	movlw	0
  4931  0000FA  22DD               	addwfc	postdec2,f,c
  4932                           
  4933                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  4934  0000FC  EFC1  F000         	goto	l8647
  4935  000100                     l8625:
  4936                           
  4937                           ; BSR set to: 1
  4938                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  4939  000100  0100               	movlb	0	; () banked
  4940  000102  83BD               	bsf	_flags& (0+255),1,b
  4941  000104  EF77  F000         	goto	l8623
  4942  000108                     l8629:
  4943                           
  4944                           ; BSR set to: 1
  4945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  4946  000108  0100               	movlb	0	; () banked
  4947  00010A  85BD               	bsf	_flags& (0+255),2,b
  4948  00010C  EF77  F000         	goto	l8623
  4949  000110                     l8633:
  4950                           
  4951                           ; BSR set to: 1
  4952                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  4953  000110  0100               	movlb	0	; () banked
  4954  000112  87BD               	bsf	_flags& (0+255),3,b
  4955  000114  EF77  F000         	goto	l8623
  4956  000118                     l8637:
  4957                           
  4958                           ; BSR set to: 1
  4959                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  4960  000118  0100               	movlb	0	; () banked
  4961  00011A  89BD               	bsf	_flags& (0+255),4,b
  4962  00011C  EF77  F000         	goto	l8623
  4963  000120                     l8641:
  4964                           
  4965                           ; BSR set to: 1
  4966                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  4967  000120  0E00               	movlw	0
  4968  000122  6F29               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4969  000124  0E01               	movlw	1
  4970  000126  6F28               	movwf	vfpfcnvrt@done& (0+255),b
  4971                           
  4972                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  4973  000128  EFC1  F000         	goto	l8647
  4974  00012C                     l8645:
  4975                           
  4976                           ; BSR set to: 1
  4977  00012C  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4978  000130  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4979  000134  CFDE FFF6          	movff	postinc2,tblptrl
  4980  000138  CFDD FFF7          	movff	postdec2,tblptrh
  4981  00013C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4982  00013C  6AF8               	clrf	tblptru,c
  4983  00013E                     	endif
  4984  00013E                     	if	0	;tblptru may be non-zero
  4985  00013E                     	endif
  4986  00013E  0008               	tblrd		*
  4987  000140  50F5               	movf	tablat,w,c
  4988  000142  6F22               	movwf	??_vfpfcnvrt& (0+255),b
  4989  000144  6B23               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  4990                           
  4991                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4992                           ; Switch size 1, requested type "simple"
  4993                           ; Number of cases is 1, Range of values is 0 to 0
  4994                           ; switch strategies available:
  4995                           ; Name         Instructions Cycles
  4996                           ; simple_byte            4     3 (average)
  4997                           ;	Chosen strategy is simple_byte
  4998  000146  5123               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4999  000148  0A00               	xorlw	0	; case 0
  5000  00014A  B4D8               	btfsc	status,2,c
  5001  00014C  EFAA  F000         	goto	l9199
  5002  000150  EF90  F000         	goto	l8641
  5003  000154                     l9199:
  5004                           
  5005                           ; BSR set to: 1
  5006                           ; Switch size 1, requested type "simple"
  5007                           ; Number of cases is 5, Range of values is 32 to 48
  5008                           ; switch strategies available:
  5009                           ; Name         Instructions Cycles
  5010                           ; simple_byte           16     9 (average)
  5011                           ;	Chosen strategy is simple_byte
  5012  000154  5122               	movf	??_vfpfcnvrt& (0+255),w,b
  5013  000156  0A20               	xorlw	32	; case 32
  5014  000158  B4D8               	btfsc	status,2,c
  5015  00015A  EF88  F000         	goto	l8633
  5016  00015E  0A03               	xorlw	3	; case 35
  5017  000160  B4D8               	btfsc	status,2,c
  5018  000162  EF8C  F000         	goto	l8637
  5019  000166  0A08               	xorlw	8	; case 43
  5020  000168  B4D8               	btfsc	status,2,c
  5021  00016A  EF84  F000         	goto	l8629
  5022  00016E  0A06               	xorlw	6	; case 45
  5023  000170  B4D8               	btfsc	status,2,c
  5024  000172  EF75  F000         	goto	l8621
  5025  000176  0A1D               	xorlw	29	; case 48
  5026  000178  B4D8               	btfsc	status,2,c
  5027  00017A  EF80  F000         	goto	l8625
  5028  00017E  EF90  F000         	goto	l8641
  5029  000182                     l8647:
  5030                           
  5031                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  5032  000182  0101               	movlb	1	; () banked
  5033  000184  5128               	movf	vfpfcnvrt@done& (0+255),w,b
  5034  000186  1129               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  5035  000188  B4D8               	btfsc	status,2,c
  5036  00018A  EFC9  F000         	goto	u11111
  5037  00018E  EFCB  F000         	goto	u11110
  5038  000192                     u11111:
  5039  000192  EF96  F000         	goto	l8645
  5040  000196                     u11110:
  5041  000196                     
  5042                           ; BSR set to: 1
  5043                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  5044  000196  0100               	movlb	0	; () banked
  5045  000198  A1BD               	btfss	_flags& (0+255),0,b
  5046  00019A  EFD1  F000         	goto	u11121
  5047  00019E  EFD3  F000         	goto	u11120
  5048  0001A2                     u11121:
  5049  0001A2  EFD4  F000         	goto	l8651
  5050  0001A6                     u11120:
  5051  0001A6                     
  5052                           ; BSR set to: 0
  5053                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  5054  0001A6  93BD               	bcf	_flags& (0+255),1,b
  5055  0001A8                     l8651:
  5056                           
  5057                           ; BSR set to: 0
  5058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  5059  0001A8  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5060  0001AC  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5061  0001B0  CFDE FFF6          	movff	postinc2,tblptrl
  5062  0001B4  CFDD FFF7          	movff	postdec2,tblptrh
  5063  0001B8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5064  0001B8  6AF8               	clrf	tblptru,c
  5065  0001BA                     	endif
  5066  0001BA                     	if	0	;tblptru may be non-zero
  5067  0001BA                     	endif
  5068  0001BA  0008               	tblrd		*
  5069  0001BC  50F5               	movf	tablat,w,c
  5070  0001BE  0A2A               	xorlw	42
  5071  0001C0  A4D8               	btfss	status,2,c
  5072  0001C2  EFE5  F000         	goto	u11131
  5073  0001C6  EFE7  F000         	goto	u11130
  5074  0001CA                     u11131:
  5075  0001CA  EF10  F001         	goto	l8659
  5076  0001CE                     u11130:
  5077  0001CE                     
  5078                           ; BSR set to: 0
  5079                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  5080  0001CE  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5081  0001D2  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5082  0001D6  2ADE               	incf	postinc2,f,c
  5083  0001D8  0E00               	movlw	0
  5084  0001DA  22DD               	addwfc	postdec2,f,c
  5085                           
  5086                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  5087  0001DC  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5088  0001E0  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5089  0001E4  CFDF F122          	movff	indf2,??_vfpfcnvrt
  5090  0001E8  0E02               	movlw	2
  5091  0001EA  26DE               	addwf	postinc2,f,c
  5092  0001EC  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  5093  0001F0  0E00               	movlw	0
  5094  0001F2  22DD               	addwfc	postdec2,f,c
  5095  0001F4  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5096  0001F8  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5097  0001FC  CFDE F0B9          	movff	postinc2,_width
  5098  000200  CFDD F0BA          	movff	postdec2,_width+1
  5099  000204                     
  5100                           ; BSR set to: 0
  5101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  5102  000204  BFBA               	btfsc	(_width+1)& (0+255),7,b
  5103  000206  EF09  F001         	goto	u11140
  5104  00020A  EF07  F001         	goto	u11141
  5105  00020E                     u11141:
  5106  00020E  EF55  F001         	goto	l8669
  5107  000212                     u11140:
  5108  000212                     
  5109                           ; BSR set to: 0
  5110                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  5111  000212  81BD               	bsf	_flags& (0+255),0,b
  5112                           
  5113                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  5114  000214  6DB9               	negf	_width& (0+255),b
  5115  000216  1FBA               	comf	(_width+1)& (0+255),f,b
  5116  000218  B0D8               	btfsc	status,0,c
  5117  00021A  2BBA               	incf	(_width+1)& (0+255),f,b
  5118  00021C  EF55  F001         	goto	l8669
  5119  000220                     l8659:
  5120                           
  5121                           ; BSR set to: 0
  5122                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  5123  000220  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5124  000224  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5125  000228  CFDE F094          	movff	postinc2,atoi@s
  5126  00022C  CFDD F095          	movff	postdec2,atoi@s+1
  5127  000230  EC1A  F01D         	call	_atoi	;wreg free
  5128  000234  C094  F0B9         	movff	?_atoi,_width
  5129  000238  C095  F0BA         	movff	?_atoi+1,_width+1
  5130                           
  5131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5132  00023C  EF27  F001         	goto	l8663
  5133  000240                     l8661:
  5134                           
  5135                           ; BSR set to: 1
  5136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  5137  000240  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5138  000244  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5139  000248  2ADE               	incf	postinc2,f,c
  5140  00024A  0E00               	movlw	0
  5141  00024C  22DD               	addwfc	postdec2,f,c
  5142  00024E                     l8663:
  5143  00024E  0ED0               	movlw	208
  5144  000250  0101               	movlb	1	; () banked
  5145  000252  6F22               	movwf	??_vfpfcnvrt& (0+255),b
  5146  000254  0EFF               	movlw	255
  5147  000256  6F23               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5148  000258  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5149  00025C  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5150  000260  CFDE FFF6          	movff	postinc2,tblptrl
  5151  000264  CFDD FFF7          	movff	postdec2,tblptrh
  5152  000268                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5153  000268  6AF8               	clrf	tblptru,c
  5154  00026A                     	endif
  5155  00026A                     	if	0	;tblptru may be non-zero
  5156  00026A                     	endif
  5157  00026A  0008               	tblrd		*
  5158  00026C  50F5               	movf	tablat,w,c
  5159  00026E  6F24               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5160  000270  6B25               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5161  000272  5122               	movf	??_vfpfcnvrt& (0+255),w,b
  5162  000274  2724               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5163  000276  5123               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5164  000278  2325               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5165  00027A  5125               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5166  00027C  E10A               	bnz	u11150
  5167  00027E  0E0A               	movlw	10
  5168  000280  5D24               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5169  000282  A0D8               	btfss	status,0,c
  5170  000284  EF46  F001         	goto	u11151
  5171  000288  EF49  F001         	goto	u11150
  5172  00028C                     u11151:
  5173  00028C  0E01               	movlw	1
  5174  00028E  EF4A  F001         	goto	u11160
  5175  000292                     u11150:
  5176  000292  0E00               	movlw	0
  5177  000294                     u11160:
  5178  000294  6F2A               	movwf	_vfpfcnvrt$1721& (0+255),b
  5179  000296  6B2B               	clrf	(_vfpfcnvrt$1721+1)& (0+255),b
  5180  000298                     
  5181                           ; BSR set to: 1
  5182  000298  512A               	movf	_vfpfcnvrt$1721& (0+255),w,b
  5183  00029A  112B               	iorwf	(_vfpfcnvrt$1721+1)& (0+255),w,b
  5184  00029C  A4D8               	btfss	status,2,c
  5185  00029E  EF53  F001         	goto	u11171
  5186  0002A2  EF55  F001         	goto	u11170
  5187  0002A6                     u11171:
  5188  0002A6  EF20  F001         	goto	l8661
  5189  0002AA                     u11170:
  5190  0002AA                     l8669:
  5191                           
  5192                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  5193  0002AA  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5194  0002AE  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5195  0002B2  CFDE FFF6          	movff	postinc2,tblptrl
  5196  0002B6  CFDD FFF7          	movff	postdec2,tblptrh
  5197  0002BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5198  0002BA  6AF8               	clrf	tblptru,c
  5199  0002BC                     	endif
  5200  0002BC                     	if	0	;tblptru may be non-zero
  5201  0002BC                     	endif
  5202  0002BC  0008               	tblrd		*
  5203  0002BE  50F5               	movf	tablat,w,c
  5204  0002C0  0A2E               	xorlw	46
  5205  0002C2  A4D8               	btfss	status,2,c
  5206  0002C4  EF66  F001         	goto	u11181
  5207  0002C8  EF68  F001         	goto	u11180
  5208  0002CC                     u11181:
  5209  0002CC  EFE9  F001         	goto	l8689
  5210  0002D0                     u11180:
  5211  0002D0                     
  5212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  5213  0002D0  0E00               	movlw	0
  5214  0002D2  0100               	movlb	0	; () banked
  5215  0002D4  6FBC               	movwf	(_prec+1)& (0+255),b
  5216  0002D6  0E00               	movlw	0
  5217  0002D8  6FBB               	movwf	_prec& (0+255),b
  5218  0002DA                     
  5219                           ; BSR set to: 0
  5220                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  5221  0002DA  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5222  0002DE  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5223  0002E2  2ADE               	incf	postinc2,f,c
  5224  0002E4  0E00               	movlw	0
  5225  0002E6  22DD               	addwfc	postdec2,f,c
  5226  0002E8                     
  5227                           ; BSR set to: 0
  5228                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  5229  0002E8  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5230  0002EC  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5231  0002F0  CFDE FFF6          	movff	postinc2,tblptrl
  5232  0002F4  CFDD FFF7          	movff	postdec2,tblptrh
  5233  0002F8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5234  0002F8  6AF8               	clrf	tblptru,c
  5235  0002FA                     	endif
  5236  0002FA                     	if	0	;tblptru may be non-zero
  5237  0002FA                     	endif
  5238  0002FA  0008               	tblrd		*
  5239  0002FC  50F5               	movf	tablat,w,c
  5240  0002FE  0A2A               	xorlw	42
  5241  000300  A4D8               	btfss	status,2,c
  5242  000302  EF85  F001         	goto	u11191
  5243  000306  EF87  F001         	goto	u11190
  5244  00030A                     u11191:
  5245  00030A  EFA4  F001         	goto	l8679
  5246  00030E                     u11190:
  5247  00030E                     
  5248                           ; BSR set to: 0
  5249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  5250  00030E  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5251  000312  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5252  000316  2ADE               	incf	postinc2,f,c
  5253  000318  0E00               	movlw	0
  5254  00031A  22DD               	addwfc	postdec2,f,c
  5255                           
  5256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  5257  00031C  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5258  000320  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5259  000324  CFDF F122          	movff	indf2,??_vfpfcnvrt
  5260  000328  0E02               	movlw	2
  5261  00032A  26DE               	addwf	postinc2,f,c
  5262  00032C  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  5263  000330  0E00               	movlw	0
  5264  000332  22DD               	addwfc	postdec2,f,c
  5265  000334  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5266  000338  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5267  00033C  CFDE F0BB          	movff	postinc2,_prec
  5268  000340  CFDD F0BC          	movff	postdec2,_prec+1
  5269                           
  5270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  5271  000344  EFE9  F001         	goto	l8689
  5272  000348                     l8679:
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  5276  000348  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5277  00034C  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5278  000350  CFDE F094          	movff	postinc2,atoi@s
  5279  000354  CFDD F095          	movff	postdec2,atoi@s+1
  5280  000358  EC1A  F01D         	call	_atoi	;wreg free
  5281  00035C  C094  F0BB         	movff	?_atoi,_prec
  5282  000360  C095  F0BC         	movff	?_atoi+1,_prec+1
  5283                           
  5284                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5285  000364  EFBB  F001         	goto	l8683
  5286  000368                     l8681:
  5287                           
  5288                           ; BSR set to: 1
  5289                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  5290  000368  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5291  00036C  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5292  000370  2ADE               	incf	postinc2,f,c
  5293  000372  0E00               	movlw	0
  5294  000374  22DD               	addwfc	postdec2,f,c
  5295  000376                     l8683:
  5296  000376  0ED0               	movlw	208
  5297  000378  0101               	movlb	1	; () banked
  5298  00037A  6F22               	movwf	??_vfpfcnvrt& (0+255),b
  5299  00037C  0EFF               	movlw	255
  5300  00037E  6F23               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5301  000380  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5302  000384  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5303  000388  CFDE FFF6          	movff	postinc2,tblptrl
  5304  00038C  CFDD FFF7          	movff	postdec2,tblptrh
  5305  000390                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5306  000390  6AF8               	clrf	tblptru,c
  5307  000392                     	endif
  5308  000392                     	if	0	;tblptru may be non-zero
  5309  000392                     	endif
  5310  000392  0008               	tblrd		*
  5311  000394  50F5               	movf	tablat,w,c
  5312  000396  6F24               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5313  000398  6B25               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5314  00039A  5122               	movf	??_vfpfcnvrt& (0+255),w,b
  5315  00039C  2724               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5316  00039E  5123               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5317  0003A0  2325               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5318  0003A2  5125               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5319  0003A4  E10A               	bnz	u11200
  5320  0003A6  0E0A               	movlw	10
  5321  0003A8  5D24               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5322  0003AA  A0D8               	btfss	status,0,c
  5323  0003AC  EFDA  F001         	goto	u11201
  5324  0003B0  EFDD  F001         	goto	u11200
  5325  0003B4                     u11201:
  5326  0003B4  0E01               	movlw	1
  5327  0003B6  EFDE  F001         	goto	u11210
  5328  0003BA                     u11200:
  5329  0003BA  0E00               	movlw	0
  5330  0003BC                     u11210:
  5331  0003BC  6F2C               	movwf	_vfpfcnvrt$1722& (0+255),b
  5332  0003BE  6B2D               	clrf	(_vfpfcnvrt$1722+1)& (0+255),b
  5333  0003C0                     
  5334                           ; BSR set to: 1
  5335  0003C0  512C               	movf	_vfpfcnvrt$1722& (0+255),w,b
  5336  0003C2  112D               	iorwf	(_vfpfcnvrt$1722+1)& (0+255),w,b
  5337  0003C4  A4D8               	btfss	status,2,c
  5338  0003C6  EFE7  F001         	goto	u11221
  5339  0003CA  EFE9  F001         	goto	u11220
  5340  0003CE                     u11221:
  5341  0003CE  EFB4  F001         	goto	l8681
  5342  0003D2                     u11220:
  5343  0003D2                     l8689:
  5344                           
  5345                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  5346  0003D2  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5347  0003D6  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5348  0003DA  CFDE FFF6          	movff	postinc2,tblptrl
  5349  0003DE  CFDD FFF7          	movff	postdec2,tblptrh
  5350  0003E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5351  0003E2  6AF8               	clrf	tblptru,c
  5352  0003E4                     	endif
  5353  0003E4                     	if	0	;tblptru may be non-zero
  5354  0003E4                     	endif
  5355  0003E4  0008               	tblrd		*
  5356  0003E6  50F5               	movf	tablat,w,c
  5357  0003E8  0A63               	xorlw	99
  5358  0003EA  A4D8               	btfss	status,2,c
  5359  0003EC  EFFA  F001         	goto	u11231
  5360  0003F0  EFFC  F001         	goto	u11230
  5361  0003F4                     u11231:
  5362  0003F4  EF24  F002         	goto	l8697
  5363  0003F8                     u11230:
  5364  0003F8                     
  5365                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  5366  0003F8  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5367  0003FC  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5368  000400  2ADE               	incf	postinc2,f,c
  5369  000402  0E00               	movlw	0
  5370  000404  22DD               	addwfc	postdec2,f,c
  5371                           
  5372                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5373  000406  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5374  00040A  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5375  00040E  CFDF F122          	movff	indf2,??_vfpfcnvrt
  5376  000412  0E02               	movlw	2
  5377  000414  26DE               	addwf	postinc2,f,c
  5378  000416  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  5379  00041A  0E00               	movlw	0
  5380  00041C  22DD               	addwfc	postdec2,f,c
  5381  00041E  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5382  000422  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5383  000426  50DF               	movf	indf2,w,c
  5384  000428  0101               	movlb	1	; () banked
  5385  00042A  6F38               	movwf	vfpfcnvrt@c& (0+255),b
  5386  00042C                     
  5387                           ; BSR set to: 1
  5388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  5389  00042C  C11C  F0AA         	movff	vfpfcnvrt@fp,ctoa@fp
  5390  000430  C11D  F0AB         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  5391  000434  C138  F0AC         	movff	vfpfcnvrt@c,ctoa@c
  5392  000438  EC3B  F02F         	call	_ctoa	;wreg free
  5393  00043C  C0AA  F11C         	movff	?_ctoa,?_vfpfcnvrt
  5394  000440  C0AB  F11D         	movff	?_ctoa+1,?_vfpfcnvrt+1
  5395  000444  EFA8  F009         	goto	l797
  5396  000448                     l8697:
  5397                           
  5398                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
  5399  000448  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5400  00044C  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5401  000450  CFDE F08D          	movff	postinc2,strncmp@_l
  5402  000454  CFDD F08E          	movff	postdec2,strncmp@_l+1
  5403  000458  0ED1               	movlw	low STR_9
  5404  00045A  0100               	movlb	0	; () banked
  5405  00045C  6F8F               	movwf	strncmp@_r& (0+255),b
  5406  00045E  0EFF               	movlw	high STR_9
  5407  000460  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  5408  000462  0E00               	movlw	0
  5409  000464  6F92               	movwf	(strncmp@n+1)& (0+255),b
  5410  000466  0E03               	movlw	3
  5411  000468  6F91               	movwf	strncmp@n& (0+255),b
  5412  00046A  ECF3  F029         	call	_strncmp	;wreg free
  5413  00046E  0100               	movlb	0	; () banked
  5414  000470  518D               	movf	?_strncmp& (0+255),w,b
  5415  000472  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  5416  000474  B4D8               	btfsc	status,2,c
  5417  000476  EF3F  F002         	goto	u11241
  5418  00047A  EF41  F002         	goto	u11240
  5419  00047E                     u11241:
  5420  00047E  EF5D  F002         	goto	l8701
  5421  000482                     u11240:
  5422  000482                     
  5423                           ; BSR set to: 0
  5424  000482  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5425  000486  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5426  00048A  CFDE F08D          	movff	postinc2,strncmp@_l
  5427  00048E  CFDD F08E          	movff	postdec2,strncmp@_l+1
  5428  000492  0ED5               	movlw	low STR_13
  5429  000494  6F8F               	movwf	strncmp@_r& (0+255),b
  5430  000496  0EFF               	movlw	high STR_13
  5431  000498  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  5432  00049A  0E00               	movlw	0
  5433  00049C  6F92               	movwf	(strncmp@n+1)& (0+255),b
  5434  00049E  0E03               	movlw	3
  5435  0004A0  6F91               	movwf	strncmp@n& (0+255),b
  5436  0004A2  ECF3  F029         	call	_strncmp	;wreg free
  5437  0004A6  0100               	movlb	0	; () banked
  5438  0004A8  518D               	movf	?_strncmp& (0+255),w,b
  5439  0004AA  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  5440  0004AC  A4D8               	btfss	status,2,c
  5441  0004AE  EF5B  F002         	goto	u11251
  5442  0004B2  EF5D  F002         	goto	u11250
  5443  0004B6                     u11251:
  5444  0004B6  EF9E  F002         	goto	l8707
  5445  0004BA                     u11250:
  5446  0004BA                     l8701:
  5447                           
  5448                           ; BSR set to: 0
  5449                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
  5450  0004BA  0E03               	movlw	3
  5451  0004BC  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5452  0004C0  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5453  0004C4  26DE               	addwf	postinc2,f,c
  5454  0004C6  0E00               	movlw	0
  5455  0004C8  22DD               	addwfc	postdec2,f,c
  5456                           
  5457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5458  0004CA  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5459  0004CE  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5460  0004D2  CFDF F122          	movff	indf2,??_vfpfcnvrt
  5461  0004D6  0E02               	movlw	2
  5462  0004D8  26DE               	addwf	postinc2,f,c
  5463  0004DA  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  5464  0004DE  0E00               	movlw	0
  5465  0004E0  22DD               	addwfc	postdec2,f,c
  5466  0004E2  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5467  0004E6  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5468  0004EA  50DF               	movf	indf2,w,c
  5469  0004EC  0101               	movlb	1	; () banked
  5470  0004EE  6F2E               	movwf	vfpfcnvrt@ll& (0+255),b
  5471  0004F0  0E00               	movlw	0
  5472  0004F2  BF2E               	btfsc	vfpfcnvrt@ll& (0+255),7,b
  5473  0004F4  0EFF               	movlw	-1
  5474  0004F6  6F2F               	movwf	(vfpfcnvrt@ll+1)& (0+255),b
  5475  0004F8  6F30               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  5476  0004FA  6F31               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  5477  0004FC  6F32               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  5478  0004FE  6F33               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  5479  000500  6F34               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  5480  000502  6F35               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  5481  000504                     l8703:
  5482                           
  5483                           ; BSR set to: 1
  5484                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
  5485  000504  C11C  F0AA         	movff	vfpfcnvrt@fp,dtoa@fp
  5486  000508  C11D  F0AB         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5487  00050C  C12E  F0AC         	movff	vfpfcnvrt@ll,dtoa@d
  5488  000510  C12F  F0AD         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5489  000514  C130  F0AE         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5490  000518  C131  F0AF         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5491  00051C  C132  F0B0         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5492  000520  C133  F0B1         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5493  000524  C134  F0B2         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5494  000528  C135  F0B3         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5495  00052C  EC00  F015         	call	_dtoa	;wreg free
  5496  000530  C0AA  F11C         	movff	?_dtoa,?_vfpfcnvrt
  5497  000534  C0AB  F11D         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5498  000538  EFA8  F009         	goto	l797
  5499  00053C                     l8707:
  5500                           
  5501                           ; BSR set to: 0
  5502                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
  5503  00053C  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5504  000540  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5505  000544  CFDE F08D          	movff	postinc2,strncmp@_l
  5506  000548  CFDD F08E          	movff	postdec2,strncmp@_l+1
  5507  00054C  0ED2               	movlw	low (STR_9+1)
  5508  00054E  6F8F               	movwf	strncmp@_r& (0+255),b
  5509  000550  0EFF               	movlw	high (STR_9+1)
  5510  000552  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  5511  000554  0E00               	movlw	0
  5512  000556  6F92               	movwf	(strncmp@n+1)& (0+255),b
  5513  000558  0E02               	movlw	2
  5514  00055A  6F91               	movwf	strncmp@n& (0+255),b
  5515  00055C  ECF3  F029         	call	_strncmp	;wreg free
  5516  000560  0100               	movlb	0	; () banked
  5517  000562  518D               	movf	?_strncmp& (0+255),w,b
  5518  000564  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  5519  000566  B4D8               	btfsc	status,2,c
  5520  000568  EFB8  F002         	goto	u11261
  5521  00056C  EFBA  F002         	goto	u11260
  5522  000570                     u11261:
  5523  000570  EFD6  F002         	goto	l8711
  5524  000574                     u11260:
  5525  000574                     
  5526                           ; BSR set to: 0
  5527  000574  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5528  000578  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5529  00057C  CFDE F08D          	movff	postinc2,strncmp@_l
  5530  000580  CFDD F08E          	movff	postdec2,strncmp@_l+1
  5531  000584  0ED6               	movlw	low (STR_13+1)
  5532  000586  6F8F               	movwf	strncmp@_r& (0+255),b
  5533  000588  0EFF               	movlw	high (STR_13+1)
  5534  00058A  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  5535  00058C  0E00               	movlw	0
  5536  00058E  6F92               	movwf	(strncmp@n+1)& (0+255),b
  5537  000590  0E02               	movlw	2
  5538  000592  6F91               	movwf	strncmp@n& (0+255),b
  5539  000594  ECF3  F029         	call	_strncmp	;wreg free
  5540  000598  0100               	movlb	0	; () banked
  5541  00059A  518D               	movf	?_strncmp& (0+255),w,b
  5542  00059C  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  5543  00059E  A4D8               	btfss	status,2,c
  5544  0005A0  EFD4  F002         	goto	u11271
  5545  0005A4  EFD6  F002         	goto	u11270
  5546  0005A8                     u11271:
  5547  0005A8  EFFE  F002         	goto	l8717
  5548  0005AC                     u11270:
  5549  0005AC                     l8711:
  5550                           
  5551                           ; BSR set to: 0
  5552                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
  5553  0005AC  0E02               	movlw	2
  5554  0005AE  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5555  0005B2  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5556  0005B6  26DE               	addwf	postinc2,f,c
  5557  0005B8  0E00               	movlw	0
  5558  0005BA  22DD               	addwfc	postdec2,f,c
  5559                           
  5560                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5561  0005BC  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5562  0005C0  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5563  0005C4  CFDF F122          	movff	indf2,??_vfpfcnvrt
  5564  0005C8  0E02               	movlw	2
  5565  0005CA  26DE               	addwf	postinc2,f,c
  5566  0005CC  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  5567  0005D0  0E00               	movlw	0
  5568  0005D2  22DD               	addwfc	postdec2,f,c
  5569  0005D4  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5570  0005D8  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5571  0005DC  CFDE F12E          	movff	postinc2,vfpfcnvrt@ll
  5572  0005E0  CFDD F12F          	movff	postdec2,vfpfcnvrt@ll+1
  5573  0005E4  0101               	movlb	1	; () banked
  5574  0005E6  0E00               	movlw	0
  5575  0005E8  BF2F               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  5576  0005EA  0EFF               	movlw	-1
  5577  0005EC  6F30               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  5578  0005EE  6F31               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  5579  0005F0  6F32               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  5580  0005F2  6F33               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  5581  0005F4  6F34               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  5582  0005F6  6F35               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  5583  0005F8  EF82  F002         	goto	l8703
  5584  0005FC                     l8717:
  5585                           
  5586                           ; BSR set to: 0
  5587                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5588  0005FC  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5589  000600  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5590  000604  CFDE FFF6          	movff	postinc2,tblptrl
  5591  000608  CFDD FFF7          	movff	postdec2,tblptrh
  5592  00060C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5593  00060C  6AF8               	clrf	tblptru,c
  5594  00060E                     	endif
  5595  00060E                     	if	0	;tblptru may be non-zero
  5596  00060E                     	endif
  5597  00060E  0008               	tblrd		*
  5598  000610  50F5               	movf	tablat,w,c
  5599  000612  0A64               	xorlw	100
  5600  000614  B4D8               	btfsc	status,2,c
  5601  000616  EF0F  F003         	goto	u11281
  5602  00061A  EF11  F003         	goto	u11280
  5603  00061E                     u11281:
  5604  00061E  EF24  F003         	goto	l8721
  5605  000622                     u11280:
  5606  000622                     
  5607                           ; BSR set to: 0
  5608  000622  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5609  000626  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5610  00062A  CFDE FFF6          	movff	postinc2,tblptrl
  5611  00062E  CFDD FFF7          	movff	postdec2,tblptrh
  5612  000632                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5613  000632  6AF8               	clrf	tblptru,c
  5614  000634                     	endif
  5615  000634                     	if	0	;tblptru may be non-zero
  5616  000634                     	endif
  5617  000634  0008               	tblrd		*
  5618  000636  50F5               	movf	tablat,w,c
  5619  000638  0A69               	xorlw	105
  5620  00063A  A4D8               	btfss	status,2,c
  5621  00063C  EF22  F003         	goto	u11291
  5622  000640  EF24  F003         	goto	u11290
  5623  000644                     u11291:
  5624  000644  EF4B  F003         	goto	l8727
  5625  000648                     u11290:
  5626  000648                     l8721:
  5627                           
  5628                           ; BSR set to: 0
  5629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  5630  000648  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5631  00064C  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5632  000650  2ADE               	incf	postinc2,f,c
  5633  000652  0E00               	movlw	0
  5634  000654  22DD               	addwfc	postdec2,f,c
  5635                           
  5636                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5637  000656  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5638  00065A  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5639  00065E  CFDF F122          	movff	indf2,??_vfpfcnvrt
  5640  000662  0E02               	movlw	2
  5641  000664  26DE               	addwf	postinc2,f,c
  5642  000666  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  5643  00066A  0E00               	movlw	0
  5644  00066C  22DD               	addwfc	postdec2,f,c
  5645  00066E  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5646  000672  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5647  000676  CFDE F12E          	movff	postinc2,vfpfcnvrt@ll
  5648  00067A  CFDD F12F          	movff	postdec2,vfpfcnvrt@ll+1
  5649  00067E  0101               	movlb	1	; () banked
  5650  000680  0E00               	movlw	0
  5651  000682  BF2F               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  5652  000684  0EFF               	movlw	-1
  5653  000686  6F30               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  5654  000688  6F31               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  5655  00068A  6F32               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  5656  00068C  6F33               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  5657  00068E  6F34               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  5658  000690  6F35               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  5659  000692  EF82  F002         	goto	l8703
  5660  000696                     l8727:
  5661                           
  5662                           ; BSR set to: 0
  5663                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
  5664  000696  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5665  00069A  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5666  00069E  CFDE F08D          	movff	postinc2,strncmp@_l
  5667  0006A2  CFDD F08E          	movff	postdec2,strncmp@_l+1
  5668  0006A6  0EEC               	movlw	low STR_27
  5669  0006A8  6F8F               	movwf	strncmp@_r& (0+255),b
  5670  0006AA  0EFF               	movlw	high STR_27
  5671  0006AC  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  5672  0006AE  0E00               	movlw	0
  5673  0006B0  6F92               	movwf	(strncmp@n+1)& (0+255),b
  5674  0006B2  0E02               	movlw	2
  5675  0006B4  6F91               	movwf	strncmp@n& (0+255),b
  5676  0006B6  ECF3  F029         	call	_strncmp	;wreg free
  5677  0006BA  0100               	movlb	0	; () banked
  5678  0006BC  518D               	movf	?_strncmp& (0+255),w,b
  5679  0006BE  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  5680  0006C0  B4D8               	btfsc	status,2,c
  5681  0006C2  EF65  F003         	goto	u11301
  5682  0006C6  EF67  F003         	goto	u11300
  5683  0006CA                     u11301:
  5684  0006CA  EF83  F003         	goto	l8731
  5685  0006CE                     u11300:
  5686  0006CE                     
  5687                           ; BSR set to: 0
  5688  0006CE  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5689  0006D2  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5690  0006D6  CFDE F08D          	movff	postinc2,strncmp@_l
  5691  0006DA  CFDD F08E          	movff	postdec2,strncmp@_l+1
  5692  0006DE  0EEF               	movlw	low STR_31
  5693  0006E0  6F8F               	movwf	strncmp@_r& (0+255),b
  5694  0006E2  0EFF               	movlw	high STR_31
  5695  0006E4  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  5696  0006E6  0E00               	movlw	0
  5697  0006E8  6F92               	movwf	(strncmp@n+1)& (0+255),b
  5698  0006EA  0E02               	movlw	2
  5699  0006EC  6F91               	movwf	strncmp@n& (0+255),b
  5700  0006EE  ECF3  F029         	call	_strncmp	;wreg free
  5701  0006F2  0100               	movlb	0	; () banked
  5702  0006F4  518D               	movf	?_strncmp& (0+255),w,b
  5703  0006F6  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  5704  0006F8  A4D8               	btfss	status,2,c
  5705  0006FA  EF81  F003         	goto	u11311
  5706  0006FE  EF83  F003         	goto	u11310
  5707  000702                     u11311:
  5708  000702  EFAC  F003         	goto	l8737
  5709  000706                     u11310:
  5710  000706                     l8731:
  5711                           
  5712                           ; BSR set to: 0
  5713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
  5714  000706  0E02               	movlw	2
  5715  000708  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5716  00070C  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5717  000710  26DE               	addwf	postinc2,f,c
  5718  000712  0E00               	movlw	0
  5719  000714  22DD               	addwfc	postdec2,f,c
  5720                           
  5721                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5722  000716  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5723  00071A  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5724  00071E  CFDF F122          	movff	indf2,??_vfpfcnvrt
  5725  000722  0E02               	movlw	2
  5726  000724  26DE               	addwf	postinc2,f,c
  5727  000726  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  5728  00072A  0E00               	movlw	0
  5729  00072C  22DD               	addwfc	postdec2,f,c
  5730  00072E  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5731  000732  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5732  000736  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  5733  00073A  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  5734  00073E  C124  F12E         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  5735  000742  C125  F12F         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  5736  000746  0101               	movlb	1	; () banked
  5737  000748  6B30               	clrf	(vfpfcnvrt@ll+2)& (0+255),b
  5738  00074A  6B31               	clrf	(vfpfcnvrt@ll+3)& (0+255),b
  5739  00074C  6B32               	clrf	(vfpfcnvrt@ll+4)& (0+255),b
  5740  00074E  6B33               	clrf	(vfpfcnvrt@ll+5)& (0+255),b
  5741  000750  6B34               	clrf	(vfpfcnvrt@ll+6)& (0+255),b
  5742  000752  6B35               	clrf	(vfpfcnvrt@ll+7)& (0+255),b
  5743  000754  EF82  F002         	goto	l8703
  5744  000758                     l8737:
  5745                           
  5746                           ; BSR set to: 0
  5747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  5748  000758  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5749  00075C  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5750  000760  CFDE F08D          	movff	postinc2,strncmp@_l
  5751  000764  CFDD F08E          	movff	postdec2,strncmp@_l+1
  5752  000768  0EDD               	movlw	low STR_36
  5753  00076A  6F8F               	movwf	strncmp@_r& (0+255),b
  5754  00076C  0EFF               	movlw	high STR_36
  5755  00076E  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  5756  000770  0E00               	movlw	0
  5757  000772  6F92               	movwf	(strncmp@n+1)& (0+255),b
  5758  000774  0E03               	movlw	3
  5759  000776  6F91               	movwf	strncmp@n& (0+255),b
  5760  000778  ECF3  F029         	call	_strncmp	;wreg free
  5761  00077C  0100               	movlb	0	; () banked
  5762  00077E  518D               	movf	?_strncmp& (0+255),w,b
  5763  000780  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  5764  000782  A4D8               	btfss	status,2,c
  5765  000784  EFC6  F003         	goto	u11321
  5766  000788  EFC8  F003         	goto	u11320
  5767  00078C                     u11321:
  5768  00078C  EF08  F004         	goto	l8745
  5769  000790                     u11320:
  5770  000790                     
  5771                           ; BSR set to: 0
  5772                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  5773  000790  0E03               	movlw	3
  5774  000792  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5775  000796  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5776  00079A  26DE               	addwf	postinc2,f,c
  5777  00079C  0E00               	movlw	0
  5778  00079E  22DD               	addwfc	postdec2,f,c
  5779                           
  5780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5781  0007A0  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5782  0007A4  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5783  0007A8  CFDF F122          	movff	indf2,??_vfpfcnvrt
  5784  0007AC  0E02               	movlw	2
  5785  0007AE  26DE               	addwf	postinc2,f,c
  5786  0007B0  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  5787  0007B4  0E00               	movlw	0
  5788  0007B6  22DD               	addwfc	postdec2,f,c
  5789  0007B8  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5790  0007BC  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5791  0007C0  50DF               	movf	indf2,w,c
  5792  0007C2  0101               	movlb	1	; () banked
  5793  0007C4  6F24               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5794  0007C6  5124               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  5795  0007C8  6F39               	movwf	vfpfcnvrt@llu& (0+255),b
  5796  0007CA  6B3A               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  5797  0007CC  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5798  0007CE  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5799  0007D0  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5800  0007D2  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5801  0007D4  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5802  0007D6  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5803  0007D8                     l8741:
  5804                           
  5805                           ; BSR set to: 1
  5806                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
  5807  0007D8  C11C  F0AA         	movff	vfpfcnvrt@fp,otoa@fp
  5808  0007DC  C11D  F0AB         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  5809  0007E0  C139  F0AC         	movff	vfpfcnvrt@llu,otoa@d
  5810  0007E4  C13A  F0AD         	movff	vfpfcnvrt@llu+1,otoa@d+1
  5811  0007E8  C13B  F0AE         	movff	vfpfcnvrt@llu+2,otoa@d+2
  5812  0007EC  C13C  F0AF         	movff	vfpfcnvrt@llu+3,otoa@d+3
  5813  0007F0  C13D  F0B0         	movff	vfpfcnvrt@llu+4,otoa@d+4
  5814  0007F4  C13E  F0B1         	movff	vfpfcnvrt@llu+5,otoa@d+5
  5815  0007F8  C13F  F0B2         	movff	vfpfcnvrt@llu+6,otoa@d+6
  5816  0007FC  C140  F0B3         	movff	vfpfcnvrt@llu+7,otoa@d+7
  5817  000800  EC25  F020         	call	_otoa	;wreg free
  5818  000804  C0AA  F11C         	movff	?_otoa,?_vfpfcnvrt
  5819  000808  C0AB  F11D         	movff	?_otoa+1,?_vfpfcnvrt+1
  5820  00080C  EFA8  F009         	goto	l797
  5821  000810                     l8745:
  5822                           
  5823                           ; BSR set to: 0
  5824                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  5825  000810  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5826  000814  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5827  000818  CFDE F08D          	movff	postinc2,strncmp@_l
  5828  00081C  CFDD F08E          	movff	postdec2,strncmp@_l+1
  5829  000820  0EDE               	movlw	low (STR_36+1)
  5830  000822  6F8F               	movwf	strncmp@_r& (0+255),b
  5831  000824  0EFF               	movlw	high (STR_36+1)
  5832  000826  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  5833  000828  0E00               	movlw	0
  5834  00082A  6F92               	movwf	(strncmp@n+1)& (0+255),b
  5835  00082C  0E02               	movlw	2
  5836  00082E  6F91               	movwf	strncmp@n& (0+255),b
  5837  000830  ECF3  F029         	call	_strncmp	;wreg free
  5838  000834  0100               	movlb	0	; () banked
  5839  000836  518D               	movf	?_strncmp& (0+255),w,b
  5840  000838  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  5841  00083A  A4D8               	btfss	status,2,c
  5842  00083C  EF22  F004         	goto	u11331
  5843  000840  EF24  F004         	goto	u11330
  5844  000844                     u11331:
  5845  000844  EF4D  F004         	goto	l8753
  5846  000848                     u11330:
  5847  000848                     
  5848                           ; BSR set to: 0
  5849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  5850  000848  0E02               	movlw	2
  5851  00084A  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5852  00084E  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5853  000852  26DE               	addwf	postinc2,f,c
  5854  000854  0E00               	movlw	0
  5855  000856  22DD               	addwfc	postdec2,f,c
  5856                           
  5857                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5858  000858  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5859  00085C  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5860  000860  CFDF F122          	movff	indf2,??_vfpfcnvrt
  5861  000864  0E02               	movlw	2
  5862  000866  26DE               	addwf	postinc2,f,c
  5863  000868  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  5864  00086C  0E00               	movlw	0
  5865  00086E  22DD               	addwfc	postdec2,f,c
  5866  000870  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5867  000874  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5868  000878  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  5869  00087C  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  5870  000880  C124  F139         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5871  000884  C125  F13A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5872  000888  0101               	movlb	1	; () banked
  5873  00088A  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5874  00088C  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5875  00088E  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5876  000890  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5877  000892  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5878  000894  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5879  000896  EFEC  F003         	goto	l8741
  5880  00089A                     l8753:
  5881                           
  5882                           ; BSR set to: 0
  5883                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
  5884  00089A  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5885  00089E  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5886  0008A2  CFDE FFF6          	movff	postinc2,tblptrl
  5887  0008A6  CFDD FFF7          	movff	postdec2,tblptrh
  5888  0008AA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5889  0008AA  6AF8               	clrf	tblptru,c
  5890  0008AC                     	endif
  5891  0008AC                     	if	0	;tblptru may be non-zero
  5892  0008AC                     	endif
  5893  0008AC  0008               	tblrd		*
  5894  0008AE  50F5               	movf	tablat,w,c
  5895  0008B0  0A6F               	xorlw	111
  5896  0008B2  A4D8               	btfss	status,2,c
  5897  0008B4  EF5E  F004         	goto	u11341
  5898  0008B8  EF60  F004         	goto	u11340
  5899  0008BC                     u11341:
  5900  0008BC  EF88  F004         	goto	l8761
  5901  0008C0                     u11340:
  5902  0008C0                     
  5903                           ; BSR set to: 0
  5904                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
  5905  0008C0  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5906  0008C4  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5907  0008C8  2ADE               	incf	postinc2,f,c
  5908  0008CA  0E00               	movlw	0
  5909  0008CC  22DD               	addwfc	postdec2,f,c
  5910                           
  5911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
  5912  0008CE  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5913  0008D2  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5914  0008D6  CFDF F122          	movff	indf2,??_vfpfcnvrt
  5915  0008DA  0E02               	movlw	2
  5916  0008DC  26DE               	addwf	postinc2,f,c
  5917  0008DE  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  5918  0008E2  0E00               	movlw	0
  5919  0008E4  22DD               	addwfc	postdec2,f,c
  5920  0008E6  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5921  0008EA  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5922  0008EE  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  5923  0008F2  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  5924  0008F6  C124  F139         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5925  0008FA  C125  F13A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5926  0008FE  0101               	movlb	1	; () banked
  5927  000900  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5928  000902  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5929  000904  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5930  000906  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5931  000908  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5932  00090A  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5933  00090C  EFEC  F003         	goto	l8741
  5934  000910                     l8761:
  5935                           
  5936                           ; BSR set to: 0
  5937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  5938  000910  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5939  000914  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5940  000918  CFDE F08D          	movff	postinc2,strncmp@_l
  5941  00091C  CFDD F08E          	movff	postdec2,strncmp@_l+1
  5942  000920  0EF5               	movlw	low STR_46
  5943  000922  6F8F               	movwf	strncmp@_r& (0+255),b
  5944  000924  0EFF               	movlw	high STR_46
  5945  000926  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  5946  000928  0E00               	movlw	0
  5947  00092A  6F92               	movwf	(strncmp@n+1)& (0+255),b
  5948  00092C  0E02               	movlw	2
  5949  00092E  6F91               	movwf	strncmp@n& (0+255),b
  5950  000930  ECF3  F029         	call	_strncmp	;wreg free
  5951  000934  0100               	movlb	0	; () banked
  5952  000936  518D               	movf	?_strncmp& (0+255),w,b
  5953  000938  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  5954  00093A  A4D8               	btfss	status,2,c
  5955  00093C  EFA2  F004         	goto	u11351
  5956  000940  EFA4  F004         	goto	u11350
  5957  000944                     u11351:
  5958  000944  EFCD  F004         	goto	l8769
  5959  000948                     u11350:
  5960  000948                     
  5961                           ; BSR set to: 0
  5962                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  5963  000948  0E02               	movlw	2
  5964  00094A  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5965  00094E  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5966  000952  26DE               	addwf	postinc2,f,c
  5967  000954  0E00               	movlw	0
  5968  000956  22DD               	addwfc	postdec2,f,c
  5969                           
  5970                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5971  000958  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5972  00095C  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5973  000960  CFDF F122          	movff	indf2,??_vfpfcnvrt
  5974  000964  0E02               	movlw	2
  5975  000966  26DE               	addwf	postinc2,f,c
  5976  000968  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  5977  00096C  0E00               	movlw	0
  5978  00096E  22DD               	addwfc	postdec2,f,c
  5979  000970  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5980  000974  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5981  000978  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  5982  00097C  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  5983  000980  C124  F139         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5984  000984  C125  F13A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5985  000988  0101               	movlb	1	; () banked
  5986  00098A  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5987  00098C  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5988  00098E  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5989  000990  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5990  000992  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5991  000994  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5992  000996  EFEC  F003         	goto	l8741
  5993  00099A                     l8769:
  5994                           
  5995                           ; BSR set to: 0
  5996                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  5997  00099A  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5998  00099E  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5999  0009A2  CFDE F08D          	movff	postinc2,strncmp@_l
  6000  0009A6  CFDD F08E          	movff	postdec2,strncmp@_l+1
  6001  0009AA  0ED9               	movlw	low STR_51
  6002  0009AC  6F8F               	movwf	strncmp@_r& (0+255),b
  6003  0009AE  0EFF               	movlw	high STR_51
  6004  0009B0  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  6005  0009B2  0E00               	movlw	0
  6006  0009B4  6F92               	movwf	(strncmp@n+1)& (0+255),b
  6007  0009B6  0E03               	movlw	3
  6008  0009B8  6F91               	movwf	strncmp@n& (0+255),b
  6009  0009BA  ECF3  F029         	call	_strncmp	;wreg free
  6010  0009BE  0100               	movlb	0	; () banked
  6011  0009C0  518D               	movf	?_strncmp& (0+255),w,b
  6012  0009C2  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  6013  0009C4  A4D8               	btfss	status,2,c
  6014  0009C6  EFE7  F004         	goto	u11361
  6015  0009CA  EFE9  F004         	goto	u11360
  6016  0009CE                     u11361:
  6017  0009CE  EF12  F005         	goto	l8779
  6018  0009D2                     u11360:
  6019  0009D2                     
  6020                           ; BSR set to: 0
  6021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  6022  0009D2  0E03               	movlw	3
  6023  0009D4  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6024  0009D8  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6025  0009DC  26DE               	addwf	postinc2,f,c
  6026  0009DE  0E00               	movlw	0
  6027  0009E0  22DD               	addwfc	postdec2,f,c
  6028                           
  6029                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  6030  0009E2  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6031  0009E6  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6032  0009EA  CFDF F122          	movff	indf2,??_vfpfcnvrt
  6033  0009EE  0E02               	movlw	2
  6034  0009F0  26DE               	addwf	postinc2,f,c
  6035  0009F2  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  6036  0009F6  0E00               	movlw	0
  6037  0009F8  22DD               	addwfc	postdec2,f,c
  6038  0009FA  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6039  0009FE  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6040  000A02  CFDE F136          	movff	postinc2,vfpfcnvrt@vp
  6041  000A06  CFDD F137          	movff	postdec2,vfpfcnvrt@vp+1
  6042  000A0A                     
  6043                           ; BSR set to: 0
  6044                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
  6045  000A0A  C136  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  6046  000A0E  C137  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  6047  000A12  C174  FFDF         	movff	_nout,indf2
  6048  000A16                     l8775:
  6049                           
  6050                           ; BSR set to: 0
  6051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
  6052  000A16  0E00               	movlw	0
  6053  000A18  0101               	movlb	1	; () banked
  6054  000A1A  6F1D               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  6055  000A1C  0E00               	movlw	0
  6056  000A1E  6F1C               	movwf	?_vfpfcnvrt& (0+255),b
  6057  000A20  EFA8  F009         	goto	l797
  6058  000A24                     l8779:
  6059                           
  6060                           ; BSR set to: 0
  6061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  6062  000A24  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6063  000A28  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6064  000A2C  CFDE F08D          	movff	postinc2,strncmp@_l
  6065  000A30  CFDD F08E          	movff	postdec2,strncmp@_l+1
  6066  000A34  0EDA               	movlw	low (STR_51+1)
  6067  000A36  6F8F               	movwf	strncmp@_r& (0+255),b
  6068  000A38  0EFF               	movlw	high (STR_51+1)
  6069  000A3A  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  6070  000A3C  0E00               	movlw	0
  6071  000A3E  6F92               	movwf	(strncmp@n+1)& (0+255),b
  6072  000A40  0E02               	movlw	2
  6073  000A42  6F91               	movwf	strncmp@n& (0+255),b
  6074  000A44  ECF3  F029         	call	_strncmp	;wreg free
  6075  000A48  0100               	movlb	0	; () banked
  6076  000A4A  518D               	movf	?_strncmp& (0+255),w,b
  6077  000A4C  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  6078  000A4E  A4D8               	btfss	status,2,c
  6079  000A50  EF2C  F005         	goto	u11371
  6080  000A54  EF2E  F005         	goto	u11370
  6081  000A58                     u11371:
  6082  000A58  EF54  F005         	goto	l8789
  6083  000A5C                     u11370:
  6084  000A5C                     
  6085                           ; BSR set to: 0
  6086                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  6087  000A5C  0E02               	movlw	2
  6088  000A5E  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6089  000A62  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6090  000A66  26DE               	addwf	postinc2,f,c
  6091  000A68  0E00               	movlw	0
  6092  000A6A  22DD               	addwfc	postdec2,f,c
  6093                           
  6094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  6095  000A6C  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6096  000A70  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6097  000A74  CFDF F122          	movff	indf2,??_vfpfcnvrt
  6098  000A78  0E02               	movlw	2
  6099  000A7A  26DE               	addwf	postinc2,f,c
  6100  000A7C  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  6101  000A80  0E00               	movlw	0
  6102  000A82  22DD               	addwfc	postdec2,f,c
  6103  000A84  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6104  000A88  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6105  000A8C  CFDE F136          	movff	postinc2,vfpfcnvrt@vp
  6106  000A90  CFDD F137          	movff	postdec2,vfpfcnvrt@vp+1
  6107  000A94                     
  6108                           ; BSR set to: 0
  6109                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
  6110  000A94  C136  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  6111  000A98  C137  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  6112  000A9C  C174  FFDE         	movff	_nout,postinc2
  6113  000AA0  C175  FFDD         	movff	_nout+1,postdec2
  6114  000AA4  EF0B  F005         	goto	l8775
  6115  000AA8                     l8789:
  6116                           
  6117                           ; BSR set to: 0
  6118                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  6119  000AA8  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6120  000AAC  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6121  000AB0  CFDE FFF6          	movff	postinc2,tblptrl
  6122  000AB4  CFDD FFF7          	movff	postdec2,tblptrh
  6123  000AB8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6124  000AB8  6AF8               	clrf	tblptru,c
  6125  000ABA                     	endif
  6126  000ABA                     	if	0	;tblptru may be non-zero
  6127  000ABA                     	endif
  6128  000ABA  0008               	tblrd		*
  6129  000ABC  50F5               	movf	tablat,w,c
  6130  000ABE  0A6E               	xorlw	110
  6131  000AC0  A4D8               	btfss	status,2,c
  6132  000AC2  EF65  F005         	goto	u11381
  6133  000AC6  EF67  F005         	goto	u11380
  6134  000ACA                     u11381:
  6135  000ACA  EF8C  F005         	goto	l8799
  6136  000ACE                     u11380:
  6137  000ACE                     
  6138                           ; BSR set to: 0
  6139                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  6140  000ACE  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6141  000AD2  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6142  000AD6  2ADE               	incf	postinc2,f,c
  6143  000AD8  0E00               	movlw	0
  6144  000ADA  22DD               	addwfc	postdec2,f,c
  6145                           
  6146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  6147  000ADC  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6148  000AE0  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6149  000AE4  CFDF F122          	movff	indf2,??_vfpfcnvrt
  6150  000AE8  0E02               	movlw	2
  6151  000AEA  26DE               	addwf	postinc2,f,c
  6152  000AEC  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  6153  000AF0  0E00               	movlw	0
  6154  000AF2  22DD               	addwfc	postdec2,f,c
  6155  000AF4  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6156  000AF8  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6157  000AFC  CFDE F136          	movff	postinc2,vfpfcnvrt@vp
  6158  000B00  CFDD F137          	movff	postdec2,vfpfcnvrt@vp+1
  6159  000B04                     
  6160                           ; BSR set to: 0
  6161                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  6162  000B04  C136  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  6163  000B08  C137  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  6164  000B0C  C174  FFDE         	movff	_nout,postinc2
  6165  000B10  C175  FFDD         	movff	_nout+1,postdec2
  6166  000B14  EF0B  F005         	goto	l8775
  6167  000B18                     l8799:
  6168                           
  6169                           ; BSR set to: 0
  6170                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  6171  000B18  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6172  000B1C  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6173  000B20  CFDE F08D          	movff	postinc2,strncmp@_l
  6174  000B24  CFDD F08E          	movff	postdec2,strncmp@_l+1
  6175  000B28  0EF2               	movlw	low STR_61
  6176  000B2A  6F8F               	movwf	strncmp@_r& (0+255),b
  6177  000B2C  0EFF               	movlw	high STR_61
  6178  000B2E  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  6179  000B30  0E00               	movlw	0
  6180  000B32  6F92               	movwf	(strncmp@n+1)& (0+255),b
  6181  000B34  0E02               	movlw	2
  6182  000B36  6F91               	movwf	strncmp@n& (0+255),b
  6183  000B38  ECF3  F029         	call	_strncmp	;wreg free
  6184  000B3C  0100               	movlb	0	; () banked
  6185  000B3E  518D               	movf	?_strncmp& (0+255),w,b
  6186  000B40  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  6187  000B42  A4D8               	btfss	status,2,c
  6188  000B44  EFA6  F005         	goto	u11391
  6189  000B48  EFA8  F005         	goto	u11390
  6190  000B4C                     u11391:
  6191  000B4C  EFCE  F005         	goto	l8809
  6192  000B50                     u11390:
  6193  000B50                     
  6194                           ; BSR set to: 0
  6195                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  6196  000B50  0E02               	movlw	2
  6197  000B52  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6198  000B56  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6199  000B5A  26DE               	addwf	postinc2,f,c
  6200  000B5C  0E00               	movlw	0
  6201  000B5E  22DD               	addwfc	postdec2,f,c
  6202                           
  6203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  6204  000B60  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6205  000B64  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6206  000B68  CFDF F122          	movff	indf2,??_vfpfcnvrt
  6207  000B6C  0E02               	movlw	2
  6208  000B6E  26DE               	addwf	postinc2,f,c
  6209  000B70  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  6210  000B74  0E00               	movlw	0
  6211  000B76  22DD               	addwfc	postdec2,f,c
  6212  000B78  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6213  000B7C  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6214  000B80  CFDE F136          	movff	postinc2,vfpfcnvrt@vp
  6215  000B84  CFDD F137          	movff	postdec2,vfpfcnvrt@vp+1
  6216  000B88                     
  6217                           ; BSR set to: 0
  6218                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
  6219  000B88  C136  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  6220  000B8C  C137  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  6221  000B90  C174  FFDE         	movff	_nout,postinc2
  6222  000B94  C175  FFDD         	movff	_nout+1,postdec2
  6223  000B98  EF0B  F005         	goto	l8775
  6224  000B9C                     l8809:
  6225                           
  6226                           ; BSR set to: 0
  6227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
  6228  000B9C  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6229  000BA0  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6230  000BA4  CFDE FFF6          	movff	postinc2,tblptrl
  6231  000BA8  CFDD FFF7          	movff	postdec2,tblptrh
  6232  000BAC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6233  000BAC  6AF8               	clrf	tblptru,c
  6234  000BAE                     	endif
  6235  000BAE                     	if	0	;tblptru may be non-zero
  6236  000BAE                     	endif
  6237  000BAE  0008               	tblrd		*
  6238  000BB0  50F5               	movf	tablat,w,c
  6239  000BB2  0A70               	xorlw	112
  6240  000BB4  A4D8               	btfss	status,2,c
  6241  000BB6  EFDF  F005         	goto	u11401
  6242  000BBA  EFE1  F005         	goto	u11400
  6243  000BBE                     u11401:
  6244  000BBE  EF26  F006         	goto	l8817
  6245  000BC2                     u11400:
  6246  000BC2                     
  6247                           ; BSR set to: 0
  6248                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
  6249  000BC2  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6250  000BC6  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6251  000BCA  2ADE               	incf	postinc2,f,c
  6252  000BCC  0E00               	movlw	0
  6253  000BCE  22DD               	addwfc	postdec2,f,c
  6254                           
  6255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
  6256  000BD0  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6257  000BD4  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6258  000BD8  CFDF F122          	movff	indf2,??_vfpfcnvrt
  6259  000BDC  0E02               	movlw	2
  6260  000BDE  26DE               	addwf	postinc2,f,c
  6261  000BE0  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  6262  000BE4  0E00               	movlw	0
  6263  000BE6  22DD               	addwfc	postdec2,f,c
  6264  000BE8  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6265  000BEC  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6266  000BF0  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  6267  000BF4  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  6268  000BF8  C124  F139         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6269  000BFC  C125  F13A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6270  000C00  0101               	movlb	1	; () banked
  6271  000C02  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6272  000C04  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6273  000C06  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6274  000C08  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6275  000C0A  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6276  000C0C  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6277  000C0E                     
  6278                           ; BSR set to: 1
  6279                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
  6280  000C0E  C11C  F0AA         	movff	vfpfcnvrt@fp,xtoa@fp
  6281  000C12  C11D  F0AB         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6282  000C16  C139  F0AC         	movff	vfpfcnvrt@llu,xtoa@d
  6283  000C1A  C13A  F0AD         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6284  000C1E  C13B  F0AE         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6285  000C22  C13C  F0AF         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6286  000C26  C13D  F0B0         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6287  000C2A  C13E  F0B1         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6288  000C2E  C13F  F0B2         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6289  000C32  C140  F0B3         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6290  000C36  0E78               	movlw	120
  6291  000C38  0100               	movlb	0	; () banked
  6292  000C3A  6FB4               	movwf	xtoa@x& (0+255),b
  6293  000C3C  EC83  F016         	call	_xtoa	;wreg free
  6294  000C40  C0AA  F11C         	movff	?_xtoa,?_vfpfcnvrt
  6295  000C44  C0AB  F11D         	movff	?_xtoa+1,?_vfpfcnvrt+1
  6296  000C48  EFA8  F009         	goto	l797
  6297  000C4C                     l8817:
  6298                           
  6299                           ; BSR set to: 0
  6300                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  6301  000C4C  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6302  000C50  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6303  000C54  CFDE FFF6          	movff	postinc2,tblptrl
  6304  000C58  CFDD FFF7          	movff	postdec2,tblptrh
  6305  000C5C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6306  000C5C  6AF8               	clrf	tblptru,c
  6307  000C5E                     	endif
  6308  000C5E                     	if	0	;tblptru may be non-zero
  6309  000C5E                     	endif
  6310  000C5E  0008               	tblrd		*
  6311  000C60  50F5               	movf	tablat,w,c
  6312  000C62  0A73               	xorlw	115
  6313  000C64  A4D8               	btfss	status,2,c
  6314  000C66  EF37  F006         	goto	u11411
  6315  000C6A  EF39  F006         	goto	u11410
  6316  000C6E                     u11411:
  6317  000C6E  EF64  F006         	goto	l8825
  6318  000C72                     u11410:
  6319  000C72                     
  6320                           ; BSR set to: 0
  6321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  6322  000C72  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6323  000C76  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6324  000C7A  2ADE               	incf	postinc2,f,c
  6325  000C7C  0E00               	movlw	0
  6326  000C7E  22DD               	addwfc	postdec2,f,c
  6327                           
  6328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  6329  000C80  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6330  000C84  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6331  000C88  CFDF F122          	movff	indf2,??_vfpfcnvrt
  6332  000C8C  0E02               	movlw	2
  6333  000C8E  26DE               	addwf	postinc2,f,c
  6334  000C90  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  6335  000C94  0E00               	movlw	0
  6336  000C96  22DD               	addwfc	postdec2,f,c
  6337  000C98  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6338  000C9C  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6339  000CA0  CFDE F126          	movff	postinc2,vfpfcnvrt@cp
  6340  000CA4  CFDD F127          	movff	postdec2,vfpfcnvrt@cp+1
  6341  000CA8                     
  6342                           ; BSR set to: 0
  6343                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  6344  000CA8  C11C  F098         	movff	vfpfcnvrt@fp,stoa@fp
  6345  000CAC  C11D  F099         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  6346  000CB0  C126  F09A         	movff	vfpfcnvrt@cp,stoa@s
  6347  000CB4  C127  F09B         	movff	vfpfcnvrt@cp+1,stoa@s+1
  6348  000CB8  EC1C  F022         	call	_stoa	;wreg free
  6349  000CBC  C098  F11C         	movff	?_stoa,?_vfpfcnvrt
  6350  000CC0  C099  F11D         	movff	?_stoa+1,?_vfpfcnvrt+1
  6351  000CC4  EFA8  F009         	goto	l797
  6352  000CC8                     l8825:
  6353                           
  6354                           ; BSR set to: 0
  6355                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  6356  000CC8  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6357  000CCC  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6358  000CD0  CFDE F08D          	movff	postinc2,strncmp@_l
  6359  000CD4  CFDD F08E          	movff	postdec2,strncmp@_l+1
  6360  000CD8  0EE1               	movlw	low STR_66
  6361  000CDA  6F8F               	movwf	strncmp@_r& (0+255),b
  6362  000CDC  0EFF               	movlw	high STR_66
  6363  000CDE  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  6364  000CE0  0E00               	movlw	0
  6365  000CE2  6F92               	movwf	(strncmp@n+1)& (0+255),b
  6366  000CE4  0E03               	movlw	3
  6367  000CE6  6F91               	movwf	strncmp@n& (0+255),b
  6368  000CE8  ECF3  F029         	call	_strncmp	;wreg free
  6369  000CEC  0100               	movlb	0	; () banked
  6370  000CEE  518D               	movf	?_strncmp& (0+255),w,b
  6371  000CF0  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  6372  000CF2  A4D8               	btfss	status,2,c
  6373  000CF4  EF7E  F006         	goto	u11421
  6374  000CF8  EF80  F006         	goto	u11420
  6375  000CFC                     u11421:
  6376  000CFC  EFC0  F006         	goto	l8833
  6377  000D00                     u11420:
  6378  000D00                     
  6379                           ; BSR set to: 0
  6380                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  6381  000D00  0E03               	movlw	3
  6382  000D02  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6383  000D06  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6384  000D0A  26DE               	addwf	postinc2,f,c
  6385  000D0C  0E00               	movlw	0
  6386  000D0E  22DD               	addwfc	postdec2,f,c
  6387                           
  6388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6389  000D10  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6390  000D14  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6391  000D18  CFDF F122          	movff	indf2,??_vfpfcnvrt
  6392  000D1C  0E02               	movlw	2
  6393  000D1E  26DE               	addwf	postinc2,f,c
  6394  000D20  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  6395  000D24  0E00               	movlw	0
  6396  000D26  22DD               	addwfc	postdec2,f,c
  6397  000D28  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6398  000D2C  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6399  000D30  50DF               	movf	indf2,w,c
  6400  000D32  0101               	movlb	1	; () banked
  6401  000D34  6F24               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6402  000D36  5124               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  6403  000D38  6F39               	movwf	vfpfcnvrt@llu& (0+255),b
  6404  000D3A  6B3A               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  6405  000D3C  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6406  000D3E  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6407  000D40  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6408  000D42  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6409  000D44  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6410  000D46  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6411  000D48                     l8829:
  6412                           
  6413                           ; BSR set to: 1
  6414                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
  6415  000D48  C11C  F0AA         	movff	vfpfcnvrt@fp,utoa@fp
  6416  000D4C  C11D  F0AB         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  6417  000D50  C139  F0AC         	movff	vfpfcnvrt@llu,utoa@d
  6418  000D54  C13A  F0AD         	movff	vfpfcnvrt@llu+1,utoa@d+1
  6419  000D58  C13B  F0AE         	movff	vfpfcnvrt@llu+2,utoa@d+2
  6420  000D5C  C13C  F0AF         	movff	vfpfcnvrt@llu+3,utoa@d+3
  6421  000D60  C13D  F0B0         	movff	vfpfcnvrt@llu+4,utoa@d+4
  6422  000D64  C13E  F0B1         	movff	vfpfcnvrt@llu+5,utoa@d+5
  6423  000D68  C13F  F0B2         	movff	vfpfcnvrt@llu+6,utoa@d+6
  6424  000D6C  C140  F0B3         	movff	vfpfcnvrt@llu+7,utoa@d+7
  6425  000D70  EC0E  F01C         	call	_utoa	;wreg free
  6426  000D74  C0AA  F11C         	movff	?_utoa,?_vfpfcnvrt
  6427  000D78  C0AB  F11D         	movff	?_utoa+1,?_vfpfcnvrt+1
  6428  000D7C  EFA8  F009         	goto	l797
  6429  000D80                     l8833:
  6430                           
  6431                           ; BSR set to: 0
  6432                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  6433  000D80  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6434  000D84  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6435  000D88  CFDE F08D          	movff	postinc2,strncmp@_l
  6436  000D8C  CFDD F08E          	movff	postdec2,strncmp@_l+1
  6437  000D90  0EE2               	movlw	low (STR_66+1)
  6438  000D92  6F8F               	movwf	strncmp@_r& (0+255),b
  6439  000D94  0EFF               	movlw	high (STR_66+1)
  6440  000D96  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  6441  000D98  0E00               	movlw	0
  6442  000D9A  6F92               	movwf	(strncmp@n+1)& (0+255),b
  6443  000D9C  0E02               	movlw	2
  6444  000D9E  6F91               	movwf	strncmp@n& (0+255),b
  6445  000DA0  ECF3  F029         	call	_strncmp	;wreg free
  6446  000DA4  0100               	movlb	0	; () banked
  6447  000DA6  518D               	movf	?_strncmp& (0+255),w,b
  6448  000DA8  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  6449  000DAA  A4D8               	btfss	status,2,c
  6450  000DAC  EFDA  F006         	goto	u11431
  6451  000DB0  EFDC  F006         	goto	u11430
  6452  000DB4                     u11431:
  6453  000DB4  EF05  F007         	goto	l8841
  6454  000DB8                     u11430:
  6455  000DB8                     
  6456                           ; BSR set to: 0
  6457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  6458  000DB8  0E02               	movlw	2
  6459  000DBA  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6460  000DBE  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6461  000DC2  26DE               	addwf	postinc2,f,c
  6462  000DC4  0E00               	movlw	0
  6463  000DC6  22DD               	addwfc	postdec2,f,c
  6464                           
  6465                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  6466  000DC8  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6467  000DCC  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6468  000DD0  CFDF F122          	movff	indf2,??_vfpfcnvrt
  6469  000DD4  0E02               	movlw	2
  6470  000DD6  26DE               	addwf	postinc2,f,c
  6471  000DD8  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  6472  000DDC  0E00               	movlw	0
  6473  000DDE  22DD               	addwfc	postdec2,f,c
  6474  000DE0  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6475  000DE4  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6476  000DE8  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  6477  000DEC  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  6478  000DF0  C124  F139         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6479  000DF4  C125  F13A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6480  000DF8  0101               	movlb	1	; () banked
  6481  000DFA  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6482  000DFC  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6483  000DFE  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6484  000E00  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6485  000E02  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6486  000E04  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6487  000E06  EFA4  F006         	goto	l8829
  6488  000E0A                     l8841:
  6489                           
  6490                           ; BSR set to: 0
  6491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  6492  000E0A  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6493  000E0E  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6494  000E12  CFDE FFF6          	movff	postinc2,tblptrl
  6495  000E16  CFDD FFF7          	movff	postdec2,tblptrh
  6496  000E1A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6497  000E1A  6AF8               	clrf	tblptru,c
  6498  000E1C                     	endif
  6499  000E1C                     	if	0	;tblptru may be non-zero
  6500  000E1C                     	endif
  6501  000E1C  0008               	tblrd		*
  6502  000E1E  50F5               	movf	tablat,w,c
  6503  000E20  0A75               	xorlw	117
  6504  000E22  A4D8               	btfss	status,2,c
  6505  000E24  EF16  F007         	goto	u11441
  6506  000E28  EF18  F007         	goto	u11440
  6507  000E2C                     u11441:
  6508  000E2C  EF40  F007         	goto	l8849
  6509  000E30                     u11440:
  6510  000E30                     
  6511                           ; BSR set to: 0
  6512                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  6513  000E30  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6514  000E34  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6515  000E38  2ADE               	incf	postinc2,f,c
  6516  000E3A  0E00               	movlw	0
  6517  000E3C  22DD               	addwfc	postdec2,f,c
  6518                           
  6519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  6520  000E3E  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6521  000E42  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6522  000E46  CFDF F122          	movff	indf2,??_vfpfcnvrt
  6523  000E4A  0E02               	movlw	2
  6524  000E4C  26DE               	addwf	postinc2,f,c
  6525  000E4E  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  6526  000E52  0E00               	movlw	0
  6527  000E54  22DD               	addwfc	postdec2,f,c
  6528  000E56  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6529  000E5A  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6530  000E5E  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  6531  000E62  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  6532  000E66  C124  F139         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6533  000E6A  C125  F13A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6534  000E6E  0101               	movlb	1	; () banked
  6535  000E70  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6536  000E72  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6537  000E74  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6538  000E76  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6539  000E78  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6540  000E7A  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6541  000E7C  EFA4  F006         	goto	l8829
  6542  000E80                     l8849:
  6543                           
  6544                           ; BSR set to: 0
  6545                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  6546  000E80  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6547  000E84  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6548  000E88  CFDE F08D          	movff	postinc2,strncmp@_l
  6549  000E8C  CFDD F08E          	movff	postdec2,strncmp@_l+1
  6550  000E90  0EF8               	movlw	low STR_76
  6551  000E92  6F8F               	movwf	strncmp@_r& (0+255),b
  6552  000E94  0EFF               	movlw	high STR_76
  6553  000E96  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  6554  000E98  0E00               	movlw	0
  6555  000E9A  6F92               	movwf	(strncmp@n+1)& (0+255),b
  6556  000E9C  0E02               	movlw	2
  6557  000E9E  6F91               	movwf	strncmp@n& (0+255),b
  6558  000EA0  ECF3  F029         	call	_strncmp	;wreg free
  6559  000EA4  0100               	movlb	0	; () banked
  6560  000EA6  518D               	movf	?_strncmp& (0+255),w,b
  6561  000EA8  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  6562  000EAA  A4D8               	btfss	status,2,c
  6563  000EAC  EF5A  F007         	goto	u11451
  6564  000EB0  EF5C  F007         	goto	u11450
  6565  000EB4                     u11451:
  6566  000EB4  EF85  F007         	goto	l8857
  6567  000EB8                     u11450:
  6568  000EB8                     
  6569                           ; BSR set to: 0
  6570                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  6571  000EB8  0E02               	movlw	2
  6572  000EBA  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6573  000EBE  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6574  000EC2  26DE               	addwf	postinc2,f,c
  6575  000EC4  0E00               	movlw	0
  6576  000EC6  22DD               	addwfc	postdec2,f,c
  6577                           
  6578                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6579  000EC8  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6580  000ECC  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6581  000ED0  CFDF F122          	movff	indf2,??_vfpfcnvrt
  6582  000ED4  0E02               	movlw	2
  6583  000ED6  26DE               	addwf	postinc2,f,c
  6584  000ED8  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  6585  000EDC  0E00               	movlw	0
  6586  000EDE  22DD               	addwfc	postdec2,f,c
  6587  000EE0  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6588  000EE4  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6589  000EE8  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  6590  000EEC  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  6591  000EF0  C124  F139         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6592  000EF4  C125  F13A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6593  000EF8  0101               	movlb	1	; () banked
  6594  000EFA  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6595  000EFC  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6596  000EFE  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6597  000F00  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6598  000F02  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6599  000F04  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6600  000F06  EFA4  F006         	goto	l8829
  6601  000F0A                     l8857:
  6602                           
  6603                           ; BSR set to: 0
  6604                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  6605  000F0A  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6606  000F0E  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6607  000F12  CFDE F08D          	movff	postinc2,strncmp@_l
  6608  000F16  CFDD F08E          	movff	postdec2,strncmp@_l+1
  6609  000F1A  0EE5               	movlw	low STR_81
  6610  000F1C  6F8F               	movwf	strncmp@_r& (0+255),b
  6611  000F1E  0EFF               	movlw	high STR_81
  6612  000F20  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  6613  000F22  0E00               	movlw	0
  6614  000F24  6F92               	movwf	(strncmp@n+1)& (0+255),b
  6615  000F26  0E03               	movlw	3
  6616  000F28  6F91               	movwf	strncmp@n& (0+255),b
  6617  000F2A  ECF3  F029         	call	_strncmp	;wreg free
  6618  000F2E  0100               	movlb	0	; () banked
  6619  000F30  518D               	movf	?_strncmp& (0+255),w,b
  6620  000F32  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  6621  000F34  B4D8               	btfsc	status,2,c
  6622  000F36  EF9F  F007         	goto	u11461
  6623  000F3A  EFA1  F007         	goto	u11460
  6624  000F3E                     u11461:
  6625  000F3E  EFBD  F007         	goto	l8861
  6626  000F42                     u11460:
  6627  000F42                     
  6628                           ; BSR set to: 0
  6629  000F42  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6630  000F46  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6631  000F4A  CFDE F08D          	movff	postinc2,strncmp@_l
  6632  000F4E  CFDD F08E          	movff	postdec2,strncmp@_l+1
  6633  000F52  0ECD               	movlw	low STR_85
  6634  000F54  6F8F               	movwf	strncmp@_r& (0+255),b
  6635  000F56  0EFF               	movlw	high STR_85
  6636  000F58  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  6637  000F5A  0E00               	movlw	0
  6638  000F5C  6F92               	movwf	(strncmp@n+1)& (0+255),b
  6639  000F5E  0E03               	movlw	3
  6640  000F60  6F91               	movwf	strncmp@n& (0+255),b
  6641  000F62  ECF3  F029         	call	_strncmp	;wreg free
  6642  000F66  0100               	movlb	0	; () banked
  6643  000F68  518D               	movf	?_strncmp& (0+255),w,b
  6644  000F6A  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  6645  000F6C  A4D8               	btfss	status,2,c
  6646  000F6E  EFBB  F007         	goto	u11471
  6647  000F72  EFBD  F007         	goto	u11470
  6648  000F76                     u11471:
  6649  000F76  EF13  F008         	goto	l8871
  6650  000F7A                     u11470:
  6651  000F7A                     l8861:
  6652                           
  6653                           ; BSR set to: 0
  6654                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
  6655  000F7A  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6656  000F7E  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6657  000F82  CFDE F122          	movff	postinc2,??_vfpfcnvrt
  6658  000F86  CFDD F123          	movff	postdec2,??_vfpfcnvrt+1
  6659  000F8A  0E02               	movlw	2
  6660  000F8C  0101               	movlb	1	; () banked
  6661  000F8E  2722               	addwf	??_vfpfcnvrt& (0+255),f,b
  6662  000F90  0E00               	movlw	0
  6663  000F92  2323               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6664  000F94  C122  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6665  000F98  C123  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6666  000F9C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6667  000F9C  6AF8               	clrf	tblptru,c
  6668  000F9E                     	endif
  6669  000F9E                     	if	0	;tblptru may be non-zero
  6670  000F9E                     	endif
  6671  000F9E  0008               	tblrd		*
  6672  000FA0  CFF5 F138          	movff	tablat,vfpfcnvrt@c
  6673  000FA4                     
  6674                           ; BSR set to: 1
  6675                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  6676  000FA4  0E03               	movlw	3
  6677  000FA6  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6678  000FAA  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6679  000FAE  26DE               	addwf	postinc2,f,c
  6680  000FB0  0E00               	movlw	0
  6681  000FB2  22DD               	addwfc	postdec2,f,c
  6682  000FB4                     
  6683                           ; BSR set to: 1
  6684                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6685  000FB4  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6686  000FB8  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6687  000FBC  CFDF F122          	movff	indf2,??_vfpfcnvrt
  6688  000FC0  0E02               	movlw	2
  6689  000FC2  26DE               	addwf	postinc2,f,c
  6690  000FC4  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  6691  000FC8  0E00               	movlw	0
  6692  000FCA  22DD               	addwfc	postdec2,f,c
  6693  000FCC  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6694  000FD0  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6695  000FD4  50DF               	movf	indf2,w,c
  6696  000FD6  6F24               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6697  000FD8  5124               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  6698  000FDA  6F39               	movwf	vfpfcnvrt@llu& (0+255),b
  6699  000FDC  6B3A               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  6700  000FDE  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6701  000FE0  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6702  000FE2  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6703  000FE4  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6704  000FE6  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6705  000FE8  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6706  000FEA                     l8867:
  6707                           
  6708                           ; BSR set to: 1
  6709                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
  6710  000FEA  C11C  F0AA         	movff	vfpfcnvrt@fp,xtoa@fp
  6711  000FEE  C11D  F0AB         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6712  000FF2  C139  F0AC         	movff	vfpfcnvrt@llu,xtoa@d
  6713  000FF6  C13A  F0AD         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6714  000FFA  C13B  F0AE         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6715  000FFE  C13C  F0AF         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6716  001002  C13D  F0B0         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6717  001006  C13E  F0B1         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6718  00100A  C13F  F0B2         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6719  00100E  C140  F0B3         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6720  001012  C138  F0B4         	movff	vfpfcnvrt@c,xtoa@x
  6721  001016  EC83  F016         	call	_xtoa	;wreg free
  6722  00101A  C0AA  F11C         	movff	?_xtoa,?_vfpfcnvrt
  6723  00101E  C0AB  F11D         	movff	?_xtoa+1,?_vfpfcnvrt+1
  6724  001022  EFA8  F009         	goto	l797
  6725  001026                     l8871:
  6726                           
  6727                           ; BSR set to: 0
  6728                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
  6729  001026  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6730  00102A  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6731  00102E  CFDE F08D          	movff	postinc2,strncmp@_l
  6732  001032  CFDD F08E          	movff	postdec2,strncmp@_l+1
  6733  001036  0EE6               	movlw	low (STR_81+1)
  6734  001038  6F8F               	movwf	strncmp@_r& (0+255),b
  6735  00103A  0EFF               	movlw	high (STR_81+1)
  6736  00103C  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  6737  00103E  0E00               	movlw	0
  6738  001040  6F92               	movwf	(strncmp@n+1)& (0+255),b
  6739  001042  0E02               	movlw	2
  6740  001044  6F91               	movwf	strncmp@n& (0+255),b
  6741  001046  ECF3  F029         	call	_strncmp	;wreg free
  6742  00104A  0100               	movlb	0	; () banked
  6743  00104C  518D               	movf	?_strncmp& (0+255),w,b
  6744  00104E  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  6745  001050  B4D8               	btfsc	status,2,c
  6746  001052  EF2D  F008         	goto	u11481
  6747  001056  EF2F  F008         	goto	u11480
  6748  00105A                     u11481:
  6749  00105A  EF4B  F008         	goto	l8875
  6750  00105E                     u11480:
  6751  00105E                     
  6752                           ; BSR set to: 0
  6753  00105E  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6754  001062  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6755  001066  CFDE F08D          	movff	postinc2,strncmp@_l
  6756  00106A  CFDD F08E          	movff	postdec2,strncmp@_l+1
  6757  00106E  0ECE               	movlw	low (STR_85+1)
  6758  001070  6F8F               	movwf	strncmp@_r& (0+255),b
  6759  001072  0EFF               	movlw	high (STR_85+1)
  6760  001074  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  6761  001076  0E00               	movlw	0
  6762  001078  6F92               	movwf	(strncmp@n+1)& (0+255),b
  6763  00107A  0E02               	movlw	2
  6764  00107C  6F91               	movwf	strncmp@n& (0+255),b
  6765  00107E  ECF3  F029         	call	_strncmp	;wreg free
  6766  001082  0100               	movlb	0	; () banked
  6767  001084  518D               	movf	?_strncmp& (0+255),w,b
  6768  001086  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  6769  001088  A4D8               	btfss	status,2,c
  6770  00108A  EF49  F008         	goto	u11491
  6771  00108E  EF4B  F008         	goto	u11490
  6772  001092                     u11491:
  6773  001092  EF88  F008         	goto	l8885
  6774  001096                     u11490:
  6775  001096                     l8875:
  6776                           
  6777                           ; BSR set to: 0
  6778                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
  6779  001096  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6780  00109A  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6781  00109E  CFDE F122          	movff	postinc2,??_vfpfcnvrt
  6782  0010A2  CFDD F123          	movff	postdec2,??_vfpfcnvrt+1
  6783  0010A6  0E01               	movlw	1
  6784  0010A8  0101               	movlb	1	; () banked
  6785  0010AA  2722               	addwf	??_vfpfcnvrt& (0+255),f,b
  6786  0010AC  0E00               	movlw	0
  6787  0010AE  2323               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6788  0010B0  C122  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6789  0010B4  C123  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6790  0010B8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6791  0010B8  6AF8               	clrf	tblptru,c
  6792  0010BA                     	endif
  6793  0010BA                     	if	0	;tblptru may be non-zero
  6794  0010BA                     	endif
  6795  0010BA  0008               	tblrd		*
  6796  0010BC  CFF5 F138          	movff	tablat,vfpfcnvrt@c
  6797  0010C0                     
  6798                           ; BSR set to: 1
  6799                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  6800  0010C0  0E02               	movlw	2
  6801  0010C2  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6802  0010C6  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6803  0010CA  26DE               	addwf	postinc2,f,c
  6804  0010CC  0E00               	movlw	0
  6805  0010CE  22DD               	addwfc	postdec2,f,c
  6806  0010D0                     
  6807                           ; BSR set to: 1
  6808                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  6809  0010D0  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6810  0010D4  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6811  0010D8  CFDF F122          	movff	indf2,??_vfpfcnvrt
  6812  0010DC  0E02               	movlw	2
  6813  0010DE  26DE               	addwf	postinc2,f,c
  6814  0010E0  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  6815  0010E4  0E00               	movlw	0
  6816  0010E6  22DD               	addwfc	postdec2,f,c
  6817  0010E8  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6818  0010EC  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6819  0010F0  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  6820  0010F4  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  6821  0010F8  C124  F139         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6822  0010FC  C125  F13A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6823  001100  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6824  001102  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6825  001104  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6826  001106  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6827  001108  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6828  00110A  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6829  00110C  EFF5  F007         	goto	l8867
  6830  001110                     l8885:
  6831                           
  6832                           ; BSR set to: 0
  6833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  6834  001110  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6835  001114  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6836  001118  CFDE FFF6          	movff	postinc2,tblptrl
  6837  00111C  CFDD FFF7          	movff	postdec2,tblptrh
  6838  001120                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6839  001120  6AF8               	clrf	tblptru,c
  6840  001122                     	endif
  6841  001122                     	if	0	;tblptru may be non-zero
  6842  001122                     	endif
  6843  001122  0008               	tblrd		*
  6844  001124  50F5               	movf	tablat,w,c
  6845  001126  0A78               	xorlw	120
  6846  001128  B4D8               	btfsc	status,2,c
  6847  00112A  EF99  F008         	goto	u11501
  6848  00112E  EF9B  F008         	goto	u11500
  6849  001132                     u11501:
  6850  001132  EFAE  F008         	goto	l8889
  6851  001136                     u11500:
  6852  001136                     
  6853                           ; BSR set to: 0
  6854  001136  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6855  00113A  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6856  00113E  CFDE FFF6          	movff	postinc2,tblptrl
  6857  001142  CFDD FFF7          	movff	postdec2,tblptrh
  6858  001146                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6859  001146  6AF8               	clrf	tblptru,c
  6860  001148                     	endif
  6861  001148                     	if	0	;tblptru may be non-zero
  6862  001148                     	endif
  6863  001148  0008               	tblrd		*
  6864  00114A  50F5               	movf	tablat,w,c
  6865  00114C  0A58               	xorlw	88
  6866  00114E  A4D8               	btfss	status,2,c
  6867  001150  EFAC  F008         	goto	u11511
  6868  001154  EFAE  F008         	goto	u11510
  6869  001158                     u11511:
  6870  001158  EFE2  F008         	goto	l8899
  6871  00115C                     u11510:
  6872  00115C                     l8889:
  6873                           
  6874                           ; BSR set to: 0
  6875                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  6876  00115C  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6877  001160  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6878  001164  CFDE FFF6          	movff	postinc2,tblptrl
  6879  001168  CFDD FFF7          	movff	postdec2,tblptrh
  6880  00116C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6881  00116C  6AF8               	clrf	tblptru,c
  6882  00116E                     	endif
  6883  00116E                     	if	0	;tblptru may be non-zero
  6884  00116E                     	endif
  6885  00116E  0008               	tblrd		*
  6886  001170  CFF5 F138          	movff	tablat,vfpfcnvrt@c
  6887  001174                     
  6888                           ; BSR set to: 0
  6889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  6890  001174  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6891  001178  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6892  00117C  2ADE               	incf	postinc2,f,c
  6893  00117E  0E00               	movlw	0
  6894  001180  22DD               	addwfc	postdec2,f,c
  6895  001182                     
  6896                           ; BSR set to: 0
  6897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  6898  001182  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6899  001186  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6900  00118A  CFDF F122          	movff	indf2,??_vfpfcnvrt
  6901  00118E  0E02               	movlw	2
  6902  001190  26DE               	addwf	postinc2,f,c
  6903  001192  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  6904  001196  0E00               	movlw	0
  6905  001198  22DD               	addwfc	postdec2,f,c
  6906  00119A  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6907  00119E  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6908  0011A2  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  6909  0011A6  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  6910  0011AA  C124  F139         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6911  0011AE  C125  F13A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6912  0011B2  0101               	movlb	1	; () banked
  6913  0011B4  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6914  0011B6  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6915  0011B8  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6916  0011BA  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6917  0011BC  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6918  0011BE  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6919  0011C0  EFF5  F007         	goto	l8867
  6920  0011C4                     l8899:
  6921                           
  6922                           ; BSR set to: 0
  6923                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
  6924  0011C4  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6925  0011C8  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6926  0011CC  CFDE F08D          	movff	postinc2,strncmp@_l
  6927  0011D0  CFDD F08E          	movff	postdec2,strncmp@_l+1
  6928  0011D4  0EFB               	movlw	low STR_99
  6929  0011D6  6F8F               	movwf	strncmp@_r& (0+255),b
  6930  0011D8  0EFF               	movlw	high STR_99
  6931  0011DA  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  6932  0011DC  0E00               	movlw	0
  6933  0011DE  6F92               	movwf	(strncmp@n+1)& (0+255),b
  6934  0011E0  0E02               	movlw	2
  6935  0011E2  6F91               	movwf	strncmp@n& (0+255),b
  6936  0011E4  ECF3  F029         	call	_strncmp	;wreg free
  6937  0011E8  0100               	movlb	0	; () banked
  6938  0011EA  518D               	movf	?_strncmp& (0+255),w,b
  6939  0011EC  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  6940  0011EE  B4D8               	btfsc	status,2,c
  6941  0011F0  EFFC  F008         	goto	u11521
  6942  0011F4  EFFE  F008         	goto	u11520
  6943  0011F8                     u11521:
  6944  0011F8  EF1A  F009         	goto	l8903
  6945  0011FC                     u11520:
  6946  0011FC                     
  6947                           ; BSR set to: 0
  6948  0011FC  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6949  001200  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6950  001204  CFDE F08D          	movff	postinc2,strncmp@_l
  6951  001208  CFDD F08E          	movff	postdec2,strncmp@_l+1
  6952  00120C  0EE9               	movlw	low STR_103
  6953  00120E  6F8F               	movwf	strncmp@_r& (0+255),b
  6954  001210  0EFF               	movlw	high STR_103
  6955  001212  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  6956  001214  0E00               	movlw	0
  6957  001216  6F92               	movwf	(strncmp@n+1)& (0+255),b
  6958  001218  0E02               	movlw	2
  6959  00121A  6F91               	movwf	strncmp@n& (0+255),b
  6960  00121C  ECF3  F029         	call	_strncmp	;wreg free
  6961  001220  0100               	movlb	0	; () banked
  6962  001222  518D               	movf	?_strncmp& (0+255),w,b
  6963  001224  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  6964  001226  A4D8               	btfss	status,2,c
  6965  001228  EF18  F009         	goto	u11531
  6966  00122C  EF1A  F009         	goto	u11530
  6967  001230                     u11531:
  6968  001230  EF57  F009         	goto	l8913
  6969  001234                     u11530:
  6970  001234                     l8903:
  6971                           
  6972                           ; BSR set to: 0
  6973                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
  6974  001234  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6975  001238  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6976  00123C  CFDE F122          	movff	postinc2,??_vfpfcnvrt
  6977  001240  CFDD F123          	movff	postdec2,??_vfpfcnvrt+1
  6978  001244  0E01               	movlw	1
  6979  001246  0101               	movlb	1	; () banked
  6980  001248  2722               	addwf	??_vfpfcnvrt& (0+255),f,b
  6981  00124A  0E00               	movlw	0
  6982  00124C  2323               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6983  00124E  C122  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6984  001252  C123  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6985  001256                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6986  001256  6AF8               	clrf	tblptru,c
  6987  001258                     	endif
  6988  001258                     	if	0	;tblptru may be non-zero
  6989  001258                     	endif
  6990  001258  0008               	tblrd		*
  6991  00125A  CFF5 F138          	movff	tablat,vfpfcnvrt@c
  6992  00125E                     
  6993                           ; BSR set to: 1
  6994                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  6995  00125E  0E02               	movlw	2
  6996  001260  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6997  001264  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6998  001268  26DE               	addwf	postinc2,f,c
  6999  00126A  0E00               	movlw	0
  7000  00126C  22DD               	addwfc	postdec2,f,c
  7001  00126E                     
  7002                           ; BSR set to: 1
  7003                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  7004  00126E  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7005  001272  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7006  001276  CFDF F122          	movff	indf2,??_vfpfcnvrt
  7007  00127A  0E02               	movlw	2
  7008  00127C  26DE               	addwf	postinc2,f,c
  7009  00127E  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  7010  001282  0E00               	movlw	0
  7011  001284  22DD               	addwfc	postdec2,f,c
  7012  001286  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7013  00128A  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7014  00128E  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  7015  001292  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  7016  001296  C124  F139         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  7017  00129A  C125  F13A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  7018  00129E  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  7019  0012A0  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  7020  0012A2  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  7021  0012A4  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  7022  0012A6  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  7023  0012A8  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  7024  0012AA  EFF5  F007         	goto	l8867
  7025  0012AE                     l8913:
  7026                           
  7027                           ; BSR set to: 0
  7028                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  7029  0012AE  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7030  0012B2  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7031  0012B6  CFDE FFF6          	movff	postinc2,tblptrl
  7032  0012BA  CFDD FFF7          	movff	postdec2,tblptrh
  7033  0012BE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7034  0012BE  6AF8               	clrf	tblptru,c
  7035  0012C0                     	endif
  7036  0012C0                     	if	0	;tblptru may be non-zero
  7037  0012C0                     	endif
  7038  0012C0  0008               	tblrd		*
  7039  0012C2  50F5               	movf	tablat,w,c
  7040  0012C4  0A25               	xorlw	37
  7041  0012C6  A4D8               	btfss	status,2,c
  7042  0012C8  EF68  F009         	goto	u11541
  7043  0012CC  EF6A  F009         	goto	u11540
  7044  0012D0                     u11541:
  7045  0012D0  EF82  F009         	goto	l8923
  7046  0012D4                     u11540:
  7047  0012D4                     
  7048                           ; BSR set to: 0
  7049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  7050  0012D4  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7051  0012D8  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7052  0012DC  2ADE               	incf	postinc2,f,c
  7053  0012DE  0E00               	movlw	0
  7054  0012E0  22DD               	addwfc	postdec2,f,c
  7055  0012E2                     
  7056                           ; BSR set to: 0
  7057                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  7058  0012E2  0E00               	movlw	0
  7059  0012E4  6F90               	movwf	(fputc@c+1)& (0+255),b
  7060  0012E6  0E25               	movlw	37
  7061  0012E8  6F8F               	movwf	fputc@c& (0+255),b
  7062  0012EA  C11C  F091         	movff	vfpfcnvrt@fp,fputc@fp
  7063  0012EE  C11D  F092         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7064  0012F2  ECAF  F02B         	call	_fputc	;wreg free
  7065  0012F6                     l8919:
  7066                           
  7067                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  7068  0012F6  0E00               	movlw	0
  7069  0012F8  0101               	movlb	1	; () banked
  7070  0012FA  6F1D               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7071  0012FC  0E01               	movlw	1
  7072  0012FE  6F1C               	movwf	?_vfpfcnvrt& (0+255),b
  7073  001300  EFA8  F009         	goto	l797
  7074  001304                     l8923:
  7075                           
  7076                           ; BSR set to: 0
  7077                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  7078  001304  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7079  001308  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7080  00130C  2ADE               	incf	postinc2,f,c
  7081  00130E  0E00               	movlw	0
  7082  001310  22DD               	addwfc	postdec2,f,c
  7083  001312  EF0B  F005         	goto	l8775
  7084  001316                     l8929:
  7085                           
  7086                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  7087  001316  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7088  00131A  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7089  00131E  CFDE FFF6          	movff	postinc2,tblptrl
  7090  001322  CFDD FFF7          	movff	postdec2,tblptrh
  7091  001326                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7092  001326  6AF8               	clrf	tblptru,c
  7093  001328                     	endif
  7094  001328                     	if	0	;tblptru may be non-zero
  7095  001328                     	endif
  7096  001328  0008               	tblrd		*
  7097  00132A  50F5               	movf	tablat,w,c
  7098  00132C  0100               	movlb	0	; () banked
  7099  00132E  6F8F               	movwf	fputc@c& (0+255),b
  7100  001330  6B90               	clrf	(fputc@c+1)& (0+255),b
  7101  001332  C11C  F091         	movff	vfpfcnvrt@fp,fputc@fp
  7102  001336  C11D  F092         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7103  00133A  ECAF  F02B         	call	_fputc	;wreg free
  7104  00133E                     
  7105                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  7106  00133E  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7107  001342  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7108  001346  2ADE               	incf	postinc2,f,c
  7109  001348  0E00               	movlw	0
  7110  00134A  22DD               	addwfc	postdec2,f,c
  7111  00134C  EF7B  F009         	goto	l8919
  7112  001350                     l797:
  7113  001350  0012               	return		;funcret
  7114  001352                     __end_of_vfpfcnvrt:
  7115                           	opt callstack 0
  7116                           
  7117 ;; *************** function _xtoa *****************
  7118 ;; Defined at:
  7119 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7120 ;; Parameters:    Size  Location     Type
  7121 ;;  fp              2   74[BANK0 ] PTR struct _IO_FILE
  7122 ;;		 -> vsnprintf@f(6), NULL(0), 
  7123 ;;  d               8   76[BANK0 ] unsigned long long 
  7124 ;;  x               1   84[BANK0 ] unsigned char 
  7125 ;; Auto vars:     Size  Location     Type
  7126 ;;  n               8   16[BANK1 ] unsigned long long 
  7127 ;;  c               2   26[BANK1 ] int 
  7128 ;;  i               2   24[BANK1 ] int 
  7129 ;;  w               2   14[BANK1 ] int 
  7130 ;;  p               2   12[BANK1 ] int 
  7131 ;; Return value:  Size  Location     Type
  7132 ;;                  2   74[BANK0 ] int 
  7133 ;; Registers used:
  7134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7135 ;; Tracked objects:
  7136 ;;		On entry : 0/0
  7137 ;;		On exit  : 0/0
  7138 ;;		Unchanged: 0/0
  7139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7140 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7141 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7142 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7143 ;;      Totals:         0      11      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7144 ;;Total ram usage:       39 bytes
  7145 ;; Hardware stack levels used:    1
  7146 ;; Hardware stack levels required when called:   18
  7147 ;; This function calls:
  7148 ;;		_isalpha
  7149 ;;		_isupper
  7150 ;;		_pad
  7151 ;;		_toupper
  7152 ;; This function is called by:
  7153 ;;		_vfpfcnvrt
  7154 ;; This function uses a non-reentrant model
  7155 ;;
  7156                           
  7157                           	psect	text11
  7158  002D06                     __ptext11:
  7159                           	opt callstack 0
  7160  002D06                     _xtoa:
  7161                           	opt callstack 8
  7162  002D06                     
  7163                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  7164  002D06  0100               	movlb	0	; () banked
  7165  002D08  BFBC               	btfsc	(_prec+1)& (0+255),7,b
  7166  002D0A  EF89  F016         	goto	u10871
  7167  002D0E  EF8B  F016         	goto	u10870
  7168  002D12                     u10871:
  7169  002D12  EF8C  F016         	goto	l8521
  7170  002D16                     u10870:
  7171  002D16                     
  7172                           ; BSR set to: 0
  7173                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  7174  002D16  93BD               	bcf	_flags& (0+255),1,b
  7175  002D18                     l8521:
  7176                           
  7177                           ; BSR set to: 0
  7178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  7179  002D18  BFBC               	btfsc	(_prec+1)& (0+255),7,b
  7180  002D1A  EF99  F016         	goto	u10880
  7181  002D1E  51BC               	movf	(_prec+1)& (0+255),w,b
  7182  002D20  E106               	bnz	u10881
  7183  002D22  05BB               	decf	_prec& (0+255),w,b
  7184  002D24  B0D8               	btfsc	status,0,c
  7185  002D26  EF97  F016         	goto	u10881
  7186  002D2A  EF99  F016         	goto	u10880
  7187  002D2E                     u10881:
  7188  002D2E  EFA0  F016         	goto	l735
  7189  002D32                     u10880:
  7190  002D32                     
  7191                           ; BSR set to: 0
  7192  002D32  0E00               	movlw	0
  7193  002D34  0101               	movlb	1	; () banked
  7194  002D36  6F0D               	movwf	(xtoa@p+1)& (0+255),b
  7195  002D38  0E01               	movlw	1
  7196  002D3A  6F0C               	movwf	xtoa@p& (0+255),b
  7197  002D3C  EFA4  F016         	goto	l737
  7198  002D40                     l735:
  7199                           
  7200                           ; BSR set to: 0
  7201  002D40  C0BB  F10C         	movff	_prec,xtoa@p
  7202  002D44  C0BC  F10D         	movff	_prec+1,xtoa@p+1
  7203  002D48                     l737:
  7204                           
  7205                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  7206  002D48  C0B9  F10E         	movff	_width,xtoa@w
  7207  002D4C  C0BA  F10F         	movff	_width+1,xtoa@w+1
  7208                           
  7209                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  7210  002D50  0100               	movlb	0	; () banked
  7211  002D52  A9BD               	btfss	_flags& (0+255),4,b
  7212  002D54  EFAE  F016         	goto	u10891
  7213  002D58  EFB0  F016         	goto	u10890
  7214  002D5C                     u10891:
  7215  002D5C  EFB5  F016         	goto	l8527
  7216  002D60                     u10890:
  7217  002D60                     
  7218                           ; BSR set to: 0
  7219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  7220  002D60  0101               	movlb	1	; () banked
  7221  002D62  0EFE               	movlw	254
  7222  002D64  270E               	addwf	xtoa@w& (0+255),f,b
  7223  002D66  0EFF               	movlw	255
  7224  002D68  230F               	addwfc	(xtoa@w+1)& (0+255),f,b
  7225  002D6A                     l8527:
  7226                           
  7227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  7228  002D6A  C0AC  F110         	movff	xtoa@d,xtoa@n
  7229  002D6E  C0AD  F111         	movff	xtoa@d+1,xtoa@n+1
  7230  002D72  C0AE  F112         	movff	xtoa@d+2,xtoa@n+2
  7231  002D76  C0AF  F113         	movff	xtoa@d+3,xtoa@n+3
  7232  002D7A  C0B0  F114         	movff	xtoa@d+4,xtoa@n+4
  7233  002D7E  C0B1  F115         	movff	xtoa@d+5,xtoa@n+5
  7234  002D82  C0B2  F116         	movff	xtoa@d+6,xtoa@n+6
  7235  002D86  C0B3  F117         	movff	xtoa@d+7,xtoa@n+7
  7236  002D8A                     
  7237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  7238  002D8A  0E00               	movlw	0
  7239  002D8C  0101               	movlb	1	; () banked
  7240  002D8E  6F19               	movwf	(xtoa@i+1)& (0+255),b
  7241  002D90  0E1F               	movlw	31
  7242  002D92  6F18               	movwf	xtoa@i& (0+255),b
  7243  002D94                     
  7244                           ; BSR set to: 1
  7245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  7246  002D94  0E00               	movlw	0
  7247  002D96  6F97               	movwf	(_dbuf+31)& (0+255),b
  7248                           
  7249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7250  002D98  EF85  F017         	goto	l8563
  7251  002D9C                     l8533:
  7252                           
  7253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  7254  002D9C  0101               	movlb	1	; () banked
  7255  002D9E  0718               	decf	xtoa@i& (0+255),f,b
  7256  002DA0  A0D8               	btfss	status,0,c
  7257  002DA2  0719               	decf	(xtoa@i+1)& (0+255),f,b
  7258  002DA4                     
  7259                           ; BSR set to: 1
  7260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  7261  002DA4  0E0F               	movlw	15
  7262  002DA6  1510               	andwf	xtoa@n& (0+255),w,b
  7263  002DA8  6F1A               	movwf	xtoa@c& (0+255),b
  7264  002DAA  6B1B               	clrf	(xtoa@c+1)& (0+255),b
  7265  002DAC                     
  7266                           ; BSR set to: 1
  7267                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  7268  002DAC  BF1B               	btfsc	(xtoa@c+1)& (0+255),7,b
  7269  002DAE  EFE2  F016         	goto	u10901
  7270  002DB2  511B               	movf	(xtoa@c+1)& (0+255),w,b
  7271  002DB4  E109               	bnz	u10900
  7272  002DB6  0E0A               	movlw	10
  7273  002DB8  5D1A               	subwf	xtoa@c& (0+255),w,b
  7274  002DBA  A0D8               	btfss	status,0,c
  7275  002DBC  EFE2  F016         	goto	u10901
  7276  002DC0  EFE4  F016         	goto	u10900
  7277  002DC4                     u10901:
  7278  002DC4  EFEC  F016         	goto	l8541
  7279  002DC8                     u10900:
  7280  002DC8                     
  7281                           ; BSR set to: 1
  7282  002DC8  0E57               	movlw	87
  7283  002DCA  251A               	addwf	xtoa@c& (0+255),w,b
  7284  002DCC  6F1A               	movwf	xtoa@c& (0+255),b
  7285  002DCE  0E00               	movlw	0
  7286  002DD0  211B               	addwfc	(xtoa@c+1)& (0+255),w,b
  7287  002DD2  6F1B               	movwf	(xtoa@c+1)& (0+255),b
  7288  002DD4  EFF2  F016         	goto	l744
  7289  002DD8                     l8541:
  7290                           
  7291                           ; BSR set to: 1
  7292  002DD8  0E30               	movlw	48
  7293  002DDA  251A               	addwf	xtoa@c& (0+255),w,b
  7294  002DDC  6F1A               	movwf	xtoa@c& (0+255),b
  7295  002DDE  0E00               	movlw	0
  7296  002DE0  211B               	addwfc	(xtoa@c+1)& (0+255),w,b
  7297  002DE2  6F1B               	movwf	(xtoa@c+1)& (0+255),b
  7298  002DE4                     l744:
  7299                           
  7300                           ; BSR set to: 1
  7301  002DE4  0EBF               	movlw	191
  7302  002DE6  6F00               	movwf	??_xtoa& (0+255),b
  7303  002DE8  0EFF               	movlw	255
  7304  002DEA  6F01               	movwf	(??_xtoa+1)& (0+255),b
  7305  002DEC  0100               	movlb	0	; () banked
  7306  002DEE  51B4               	movf	xtoa@x& (0+255),w,b
  7307  002DF0  0101               	movlb	1	; () banked
  7308  002DF2  6F02               	movwf	(??_xtoa+2)& (0+255),b
  7309  002DF4  6B03               	clrf	(??_xtoa+3)& (0+255),b
  7310  002DF6  5100               	movf	??_xtoa& (0+255),w,b
  7311  002DF8  2702               	addwf	(??_xtoa+2)& (0+255),f,b
  7312  002DFA  5101               	movf	(??_xtoa+1)& (0+255),w,b
  7313  002DFC  2303               	addwfc	(??_xtoa+3)& (0+255),f,b
  7314  002DFE  5103               	movf	(??_xtoa+3)& (0+255),w,b
  7315  002E00  E10A               	bnz	u10910
  7316  002E02  0E1A               	movlw	26
  7317  002E04  5D02               	subwf	(??_xtoa+2)& (0+255),w,b
  7318  002E06  A0D8               	btfss	status,0,c
  7319  002E08  EF08  F017         	goto	u10911
  7320  002E0C  EF0B  F017         	goto	u10910
  7321  002E10                     u10911:
  7322  002E10  0E01               	movlw	1
  7323  002E12  EF0C  F017         	goto	u10920
  7324  002E16                     u10910:
  7325  002E16  0E00               	movlw	0
  7326  002E18                     u10920:
  7327  002E18  6F08               	movwf	_xtoa$1706& (0+255),b
  7328  002E1A  6B09               	clrf	(_xtoa$1706+1)& (0+255),b
  7329  002E1C                     
  7330                           ; BSR set to: 1
  7331  002E1C  5108               	movf	_xtoa$1706& (0+255),w,b
  7332  002E1E  1109               	iorwf	(_xtoa$1706+1)& (0+255),w,b
  7333  002E20  B4D8               	btfsc	status,2,c
  7334  002E22  EF15  F017         	goto	u10931
  7335  002E26  EF17  F017         	goto	u10930
  7336  002E2A                     u10931:
  7337  002E2A  EF47  F017         	goto	l8555
  7338  002E2E                     u10930:
  7339  002E2E                     
  7340                           ; BSR set to: 1
  7341  002E2E  0E9F               	movlw	159
  7342  002E30  6F00               	movwf	??_xtoa& (0+255),b
  7343  002E32  0EFF               	movlw	255
  7344  002E34  6F01               	movwf	(??_xtoa+1)& (0+255),b
  7345  002E36  0E20               	movlw	32
  7346  002E38  111A               	iorwf	xtoa@c& (0+255),w,b
  7347  002E3A  6F02               	movwf	(??_xtoa+2)& (0+255),b
  7348  002E3C  0E00               	movlw	0
  7349  002E3E  111B               	iorwf	(xtoa@c+1)& (0+255),w,b
  7350  002E40  6F03               	movwf	(??_xtoa+3)& (0+255),b
  7351  002E42  5100               	movf	??_xtoa& (0+255),w,b
  7352  002E44  2702               	addwf	(??_xtoa+2)& (0+255),f,b
  7353  002E46  5101               	movf	(??_xtoa+1)& (0+255),w,b
  7354  002E48  2303               	addwfc	(??_xtoa+3)& (0+255),f,b
  7355  002E4A  5103               	movf	(??_xtoa+3)& (0+255),w,b
  7356  002E4C  E10A               	bnz	u10940
  7357  002E4E  0E1A               	movlw	26
  7358  002E50  5D02               	subwf	(??_xtoa+2)& (0+255),w,b
  7359  002E52  A0D8               	btfss	status,0,c
  7360  002E54  EF2E  F017         	goto	u10941
  7361  002E58  EF31  F017         	goto	u10940
  7362  002E5C                     u10941:
  7363  002E5C  0E01               	movlw	1
  7364  002E5E  EF32  F017         	goto	u10950
  7365  002E62                     u10940:
  7366  002E62  0E00               	movlw	0
  7367  002E64                     u10950:
  7368  002E64  6F0A               	movwf	_xtoa$1707& (0+255),b
  7369  002E66  6B0B               	clrf	(_xtoa$1707+1)& (0+255),b
  7370  002E68                     
  7371                           ; BSR set to: 1
  7372  002E68  510A               	movf	_xtoa$1707& (0+255),w,b
  7373  002E6A  110B               	iorwf	(_xtoa$1707+1)& (0+255),w,b
  7374  002E6C  B4D8               	btfsc	status,2,c
  7375  002E6E  EF3B  F017         	goto	u10961
  7376  002E72  EF3D  F017         	goto	u10960
  7377  002E76                     u10961:
  7378  002E76  EF47  F017         	goto	l8555
  7379  002E7A                     u10960:
  7380  002E7A                     
  7381                           ; BSR set to: 1
  7382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  7383  002E7A  C11A  F093         	movff	xtoa@c,toupper@c
  7384  002E7E  C11B  F094         	movff	xtoa@c+1,toupper@c+1
  7385  002E82  EC0B  F02F         	call	_toupper	;wreg free
  7386  002E86  C093  F11A         	movff	?_toupper,xtoa@c
  7387  002E8A  C094  F11B         	movff	?_toupper+1,xtoa@c+1
  7388  002E8E                     l8555:
  7389                           
  7390                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  7391  002E8E  0E78               	movlw	low _dbuf
  7392  002E90  0101               	movlb	1	; () banked
  7393  002E92  2518               	addwf	xtoa@i& (0+255),w,b
  7394  002E94  6ED9               	movwf	fsr2l,c
  7395  002E96  0E01               	movlw	high _dbuf
  7396  002E98  2119               	addwfc	(xtoa@i+1)& (0+255),w,b
  7397  002E9A  6EDA               	movwf	fsr2h,c
  7398  002E9C  C11A  FFDF         	movff	xtoa@c,indf2
  7399  002EA0                     
  7400                           ; BSR set to: 1
  7401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  7402  002EA0  070C               	decf	xtoa@p& (0+255),f,b
  7403  002EA2  A0D8               	btfss	status,0,c
  7404  002EA4  070D               	decf	(xtoa@p+1)& (0+255),f,b
  7405  002EA6                     
  7406                           ; BSR set to: 1
  7407                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  7408  002EA6  070E               	decf	xtoa@w& (0+255),f,b
  7409  002EA8  A0D8               	btfss	status,0,c
  7410  002EAA  070F               	decf	(xtoa@w+1)& (0+255),f,b
  7411  002EAC                     
  7412                           ; BSR set to: 1
  7413                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  7414  002EAC  C110  F100         	movff	xtoa@n,??_xtoa
  7415  002EB0  C111  F101         	movff	xtoa@n+1,??_xtoa+1
  7416  002EB4  C112  F102         	movff	xtoa@n+2,??_xtoa+2
  7417  002EB8  C113  F103         	movff	xtoa@n+3,??_xtoa+3
  7418  002EBC  C114  F104         	movff	xtoa@n+4,??_xtoa+4
  7419  002EC0  C115  F105         	movff	xtoa@n+5,??_xtoa+5
  7420  002EC4  C116  F106         	movff	xtoa@n+6,??_xtoa+6
  7421  002EC8  C117  F107         	movff	xtoa@n+7,??_xtoa+7
  7422  002ECC  0E05               	movlw	5
  7423  002ECE  EF72  F017         	goto	u10970
  7424  002ED2                     u10975:
  7425  002ED2  90D8               	bcf	status,0,c
  7426  002ED4  3307               	rrcf	(??_xtoa+7)& (0+255),f,b
  7427  002ED6  3306               	rrcf	(??_xtoa+6)& (0+255),f,b
  7428  002ED8  3305               	rrcf	(??_xtoa+5)& (0+255),f,b
  7429  002EDA  3304               	rrcf	(??_xtoa+4)& (0+255),f,b
  7430  002EDC  3303               	rrcf	(??_xtoa+3)& (0+255),f,b
  7431  002EDE  3302               	rrcf	(??_xtoa+2)& (0+255),f,b
  7432  002EE0  3301               	rrcf	(??_xtoa+1)& (0+255),f,b
  7433  002EE2  3300               	rrcf	??_xtoa& (0+255),f,b
  7434  002EE4                     u10970:
  7435  002EE4  2EE8               	decfsz	wreg,f,c
  7436  002EE6  EF69  F017         	goto	u10975
  7437  002EEA  C100  F110         	movff	??_xtoa,xtoa@n
  7438  002EEE  C101  F111         	movff	??_xtoa+1,xtoa@n+1
  7439  002EF2  C102  F112         	movff	??_xtoa+2,xtoa@n+2
  7440  002EF6  C103  F113         	movff	??_xtoa+3,xtoa@n+3
  7441  002EFA  C104  F114         	movff	??_xtoa+4,xtoa@n+4
  7442  002EFE  C105  F115         	movff	??_xtoa+5,xtoa@n+5
  7443  002F02  C106  F116         	movff	??_xtoa+6,xtoa@n+6
  7444  002F06  C107  F117         	movff	??_xtoa+7,xtoa@n+7
  7445  002F0A                     l8563:
  7446                           
  7447                           ; BSR set to: 1
  7448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7449  002F0A  BF19               	btfsc	(xtoa@i+1)& (0+255),7,b
  7450  002F0C  EF91  F017         	goto	u10981
  7451  002F10  5119               	movf	(xtoa@i+1)& (0+255),w,b
  7452  002F12  E109               	bnz	u10980
  7453  002F14  0E02               	movlw	2
  7454  002F16  5D18               	subwf	xtoa@i& (0+255),w,b
  7455  002F18  A0D8               	btfss	status,0,c
  7456  002F1A  EF91  F017         	goto	u10981
  7457  002F1E  EF93  F017         	goto	u10980
  7458  002F22                     u10981:
  7459  002F22  EFC4  F017         	goto	l758
  7460  002F26                     u10980:
  7461  002F26                     
  7462                           ; BSR set to: 1
  7463  002F26  5110               	movf	xtoa@n& (0+255),w,b
  7464  002F28  1111               	iorwf	(xtoa@n+1)& (0+255),w,b
  7465  002F2A  1112               	iorwf	(xtoa@n+2)& (0+255),w,b
  7466  002F2C  1113               	iorwf	(xtoa@n+3)& (0+255),w,b
  7467  002F2E  1114               	iorwf	(xtoa@n+4)& (0+255),w,b
  7468  002F30  1115               	iorwf	(xtoa@n+5)& (0+255),w,b
  7469  002F32  1116               	iorwf	(xtoa@n+6)& (0+255),w,b
  7470  002F34  1117               	iorwf	(xtoa@n+7)& (0+255),w,b
  7471  002F36  A4D8               	btfss	status,2,c
  7472  002F38  EFA0  F017         	goto	u10991
  7473  002F3C  EFA2  F017         	goto	u10990
  7474  002F40                     u10991:
  7475  002F40  EFCE  F016         	goto	l8533
  7476  002F44                     u10990:
  7477  002F44                     
  7478                           ; BSR set to: 1
  7479  002F44  BF0D               	btfsc	(xtoa@p+1)& (0+255),7,b
  7480  002F46  EFAF  F017         	goto	u11000
  7481  002F4A  510D               	movf	(xtoa@p+1)& (0+255),w,b
  7482  002F4C  E106               	bnz	u11001
  7483  002F4E  050C               	decf	xtoa@p& (0+255),w,b
  7484  002F50  B0D8               	btfsc	status,0,c
  7485  002F52  EFAD  F017         	goto	u11001
  7486  002F56  EFAF  F017         	goto	u11000
  7487  002F5A                     u11001:
  7488  002F5A  EFCE  F016         	goto	l8533
  7489  002F5E                     u11000:
  7490  002F5E                     
  7491                           ; BSR set to: 1
  7492  002F5E  BF0F               	btfsc	(xtoa@w+1)& (0+255),7,b
  7493  002F60  EFBA  F017         	goto	u11011
  7494  002F64  510F               	movf	(xtoa@w+1)& (0+255),w,b
  7495  002F66  E108               	bnz	u11010
  7496  002F68  050E               	decf	xtoa@w& (0+255),w,b
  7497  002F6A  A0D8               	btfss	status,0,c
  7498  002F6C  EFBA  F017         	goto	u11011
  7499  002F70  EFBC  F017         	goto	u11010
  7500  002F74                     u11011:
  7501  002F74  EFC4  F017         	goto	l758
  7502  002F78                     u11010:
  7503  002F78                     
  7504                           ; BSR set to: 1
  7505  002F78  0100               	movlb	0	; () banked
  7506  002F7A  B3BD               	btfsc	_flags& (0+255),1,b
  7507  002F7C  EFC2  F017         	goto	u11021
  7508  002F80  EFC4  F017         	goto	u11020
  7509  002F84                     u11021:
  7510  002F84  EFCE  F016         	goto	l8533
  7511  002F88                     u11020:
  7512  002F88                     l758:
  7513                           
  7514                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  7515  002F88  0100               	movlb	0	; () banked
  7516  002F8A  A9BD               	btfss	_flags& (0+255),4,b
  7517  002F8C  EFCA  F017         	goto	u11031
  7518  002F90  EFCC  F017         	goto	u11030
  7519  002F94                     u11031:
  7520  002F94  EFE3  F017         	goto	l8579
  7521  002F98                     u11030:
  7522  002F98                     
  7523                           ; BSR set to: 0
  7524                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  7525  002F98  0101               	movlb	1	; () banked
  7526  002F9A  0718               	decf	xtoa@i& (0+255),f,b
  7527  002F9C  A0D8               	btfss	status,0,c
  7528  002F9E  0719               	decf	(xtoa@i+1)& (0+255),f,b
  7529  002FA0                     
  7530                           ; BSR set to: 1
  7531                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  7532  002FA0  0E78               	movlw	low _dbuf
  7533  002FA2  2518               	addwf	xtoa@i& (0+255),w,b
  7534  002FA4  6ED9               	movwf	fsr2l,c
  7535  002FA6  0E01               	movlw	high _dbuf
  7536  002FA8  2119               	addwfc	(xtoa@i+1)& (0+255),w,b
  7537  002FAA  6EDA               	movwf	fsr2h,c
  7538  002FAC  C0B4  FFDF         	movff	xtoa@x,indf2
  7539  002FB0                     
  7540                           ; BSR set to: 1
  7541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  7542  002FB0  0718               	decf	xtoa@i& (0+255),f,b
  7543  002FB2  A0D8               	btfss	status,0,c
  7544  002FB4  0719               	decf	(xtoa@i+1)& (0+255),f,b
  7545                           
  7546                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  7547  002FB6  0E78               	movlw	low _dbuf
  7548  002FB8  2518               	addwf	xtoa@i& (0+255),w,b
  7549  002FBA  6ED9               	movwf	fsr2l,c
  7550  002FBC  0E01               	movlw	high _dbuf
  7551  002FBE  2119               	addwfc	(xtoa@i+1)& (0+255),w,b
  7552  002FC0  6EDA               	movwf	fsr2h,c
  7553  002FC2  0E30               	movlw	48
  7554  002FC4  6EDF               	movwf	indf2,c
  7555  002FC6                     l8579:
  7556                           
  7557                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  7558  002FC6  C0AA  F09F         	movff	xtoa@fp,pad@fp
  7559  002FCA  C0AB  F0A0         	movff	xtoa@fp+1,pad@fp+1
  7560  002FCE  0E78               	movlw	low _dbuf
  7561  002FD0  0101               	movlb	1	; () banked
  7562  002FD2  2518               	addwf	xtoa@i& (0+255),w,b
  7563  002FD4  0100               	movlb	0	; () banked
  7564  002FD6  6FA1               	movwf	pad@buf& (0+255),b
  7565  002FD8  0E01               	movlw	high _dbuf
  7566  002FDA  0101               	movlb	1	; () banked
  7567  002FDC  2119               	addwfc	(xtoa@i+1)& (0+255),w,b
  7568  002FDE  0100               	movlb	0	; () banked
  7569  002FE0  6FA2               	movwf	(pad@buf+1)& (0+255),b
  7570  002FE2  C10E  F0A3         	movff	xtoa@w,pad@p
  7571  002FE6  C10F  F0A4         	movff	xtoa@w+1,pad@p+1
  7572  002FEA  EC15  F02C         	call	_pad	;wreg free
  7573  002FEE  C09F  F0AA         	movff	?_pad,?_xtoa
  7574  002FF2  C0A0  F0AB         	movff	?_pad+1,?_xtoa+1
  7575  002FF6  0012               	return		;funcret
  7576  002FF8                     __end_of_xtoa:
  7577                           	opt callstack 0
  7578                           
  7579 ;; *************** function _toupper *****************
  7580 ;; Defined at:
  7581 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  7582 ;; Parameters:    Size  Location     Type
  7583 ;;  c               2   51[BANK0 ] int 
  7584 ;; Auto vars:     Size  Location     Type
  7585 ;;		None
  7586 ;; Return value:  Size  Location     Type
  7587 ;;                  2   51[BANK0 ] int 
  7588 ;; Registers used:
  7589 ;;		wreg, status,2, status,0
  7590 ;; Tracked objects:
  7591 ;;		On entry : 0/0
  7592 ;;		On exit  : 0/0
  7593 ;;		Unchanged: 0/0
  7594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7595 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7596 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7597 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7598 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7599 ;;Total ram usage:        8 bytes
  7600 ;; Hardware stack levels used:    1
  7601 ;; Hardware stack levels required when called:   14
  7602 ;; This function calls:
  7603 ;;		_islower
  7604 ;; This function is called by:
  7605 ;;		_xtoa
  7606 ;; This function uses a non-reentrant model
  7607 ;;
  7608                           
  7609                           	psect	text12
  7610  005E16                     __ptext12:
  7611                           	opt callstack 0
  7612  005E16                     _toupper:
  7613                           	opt callstack 11
  7614  005E16  0E9F               	movlw	159
  7615  005E18  0100               	movlb	0	; () banked
  7616  005E1A  6F95               	movwf	??_toupper& (0+255),b
  7617  005E1C  0EFF               	movlw	255
  7618  005E1E  6F96               	movwf	(??_toupper+1)& (0+255),b
  7619  005E20  C093  F097         	movff	toupper@c,??_toupper+2
  7620  005E24  C094  F098         	movff	toupper@c+1,??_toupper+3
  7621  005E28  5195               	movf	??_toupper& (0+255),w,b
  7622  005E2A  2797               	addwf	(??_toupper+2)& (0+255),f,b
  7623  005E2C  5196               	movf	(??_toupper+1)& (0+255),w,b
  7624  005E2E  2398               	addwfc	(??_toupper+3)& (0+255),f,b
  7625  005E30  5198               	movf	(??_toupper+3)& (0+255),w,b
  7626  005E32  E10A               	bnz	u9610
  7627  005E34  0E1A               	movlw	26
  7628  005E36  5D97               	subwf	(??_toupper+2)& (0+255),w,b
  7629  005E38  A0D8               	btfss	status,0,c
  7630  005E3A  EF21  F02F         	goto	u9611
  7631  005E3E  EF24  F02F         	goto	u9610
  7632  005E42                     u9611:
  7633  005E42  0E01               	movlw	1
  7634  005E44  EF25  F02F         	goto	u9620
  7635  005E48                     u9610:
  7636  005E48  0E00               	movlw	0
  7637  005E4A                     u9620:
  7638  005E4A  6F99               	movwf	_toupper$2397& (0+255),b
  7639  005E4C  6B9A               	clrf	(_toupper$2397+1)& (0+255),b
  7640  005E4E                     
  7641                           ; BSR set to: 0
  7642  005E4E  5199               	movf	_toupper$2397& (0+255),w,b
  7643  005E50  119A               	iorwf	(_toupper$2397+1)& (0+255),w,b
  7644  005E52  B4D8               	btfsc	status,2,c
  7645  005E54  EF2E  F02F         	goto	u9631
  7646  005E58  EF30  F02F         	goto	u9630
  7647  005E5C                     u9631:
  7648  005E5C  EF36  F02F         	goto	l1634
  7649  005E60                     u9630:
  7650  005E60                     
  7651                           ; BSR set to: 0
  7652  005E60  0E5F               	movlw	95
  7653  005E62  1593               	andwf	toupper@c& (0+255),w,b
  7654  005E64  6F93               	movwf	?_toupper& (0+255),b
  7655  005E66  6B94               	clrf	(?_toupper+1)& (0+255),b
  7656  005E68  EF3A  F02F         	goto	l1639
  7657  005E6C                     l1634:
  7658                           
  7659                           ; BSR set to: 0
  7660  005E6C  C093  F093         	movff	toupper@c,?_toupper
  7661  005E70  C094  F094         	movff	toupper@c+1,?_toupper+1
  7662  005E74                     l1639:
  7663                           
  7664                           ; BSR set to: 0
  7665  005E74  0012               	return		;funcret
  7666  005E76                     __end_of_toupper:
  7667                           	opt callstack 0
  7668                           
  7669 ;; *************** function _islower *****************
  7670 ;; Defined at:
  7671 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  7672 ;; Parameters:    Size  Location     Type
  7673 ;;  c               2   45[BANK0 ] int 
  7674 ;; Auto vars:     Size  Location     Type
  7675 ;;		None
  7676 ;; Return value:  Size  Location     Type
  7677 ;;                  2   45[BANK0 ] int 
  7678 ;; Registers used:
  7679 ;;		wreg, status,2, status,0
  7680 ;; Tracked objects:
  7681 ;;		On entry : 0/0
  7682 ;;		On exit  : 0/0
  7683 ;;		Unchanged: 0/0
  7684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7685 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7687 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7688 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7689 ;;Total ram usage:        6 bytes
  7690 ;; Hardware stack levels used:    1
  7691 ;; Hardware stack levels required when called:   13
  7692 ;; This function calls:
  7693 ;;		Nothing
  7694 ;; This function is called by:
  7695 ;;		_toupper
  7696 ;; This function uses a non-reentrant model
  7697 ;;
  7698                           
  7699                           	psect	text13
  7700  0063B6                     __ptext13:
  7701                           	opt callstack 0
  7702  0063B6                     _islower:
  7703                           	opt callstack 11
  7704  0063B6  0E9F               	movlw	159
  7705  0063B8  0100               	movlb	0	; () banked
  7706  0063BA  6F8F               	movwf	??_islower& (0+255),b
  7707  0063BC  0EFF               	movlw	255
  7708  0063BE  6F90               	movwf	(??_islower+1)& (0+255),b
  7709  0063C0  C08D  F091         	movff	islower@c,??_islower+2
  7710  0063C4  C08E  F092         	movff	islower@c+1,??_islower+3
  7711  0063C8  518F               	movf	??_islower& (0+255),w,b
  7712  0063CA  2791               	addwf	(??_islower+2)& (0+255),f,b
  7713  0063CC  5190               	movf	(??_islower+1)& (0+255),w,b
  7714  0063CE  2392               	addwfc	(??_islower+3)& (0+255),f,b
  7715  0063D0  5192               	movf	(??_islower+3)& (0+255),w,b
  7716  0063D2  E10A               	bnz	u8740
  7717  0063D4  0E1A               	movlw	26
  7718  0063D6  5D91               	subwf	(??_islower+2)& (0+255),w,b
  7719  0063D8  A0D8               	btfss	status,0,c
  7720  0063DA  EFF1  F031         	goto	u8741
  7721  0063DE  EFF4  F031         	goto	u8740
  7722  0063E2                     u8741:
  7723  0063E2  0E01               	movlw	1
  7724  0063E4  EFF5  F031         	goto	u8750
  7725  0063E8                     u8740:
  7726  0063E8  0E00               	movlw	0
  7727  0063EA                     u8750:
  7728  0063EA  6F8D               	movwf	?_islower& (0+255),b
  7729  0063EC  6B8E               	clrf	(?_islower+1)& (0+255),b
  7730  0063EE                     
  7731                           ; BSR set to: 0
  7732  0063EE  0012               	return		;funcret
  7733  0063F0                     __end_of_islower:
  7734                           	opt callstack 0
  7735                           
  7736 ;; *************** function _isupper *****************
  7737 ;; Defined at:
  7738 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  7739 ;; Parameters:    Size  Location     Type
  7740 ;;  c               2   45[BANK0 ] int 
  7741 ;; Auto vars:     Size  Location     Type
  7742 ;;		None
  7743 ;; Return value:  Size  Location     Type
  7744 ;;                  2   45[BANK0 ] int 
  7745 ;; Registers used:
  7746 ;;		wreg, status,2, status,0
  7747 ;; Tracked objects:
  7748 ;;		On entry : 0/0
  7749 ;;		On exit  : 0/0
  7750 ;;		Unchanged: 0/0
  7751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7752 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7754 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7755 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7756 ;;Total ram usage:        6 bytes
  7757 ;; Hardware stack levels used:    1
  7758 ;; Hardware stack levels required when called:   13
  7759 ;; This function calls:
  7760 ;;		Nothing
  7761 ;; This function is called by:
  7762 ;;		_xtoa
  7763 ;; This function uses a non-reentrant model
  7764 ;;
  7765                           
  7766                           	psect	text14
  7767  0063F0                     __ptext14:
  7768                           	opt callstack 0
  7769  0063F0                     _isupper:
  7770                           	opt callstack 12
  7771  0063F0  0EBF               	movlw	191
  7772  0063F2  0100               	movlb	0	; () banked
  7773  0063F4  6F8F               	movwf	??_isupper& (0+255),b
  7774  0063F6  0EFF               	movlw	255
  7775  0063F8  6F90               	movwf	(??_isupper+1)& (0+255),b
  7776  0063FA  C08D  F091         	movff	isupper@c,??_isupper+2
  7777  0063FE  C08E  F092         	movff	isupper@c+1,??_isupper+3
  7778  006402  518F               	movf	??_isupper& (0+255),w,b
  7779  006404  2791               	addwf	(??_isupper+2)& (0+255),f,b
  7780  006406  5190               	movf	(??_isupper+1)& (0+255),w,b
  7781  006408  2392               	addwfc	(??_isupper+3)& (0+255),f,b
  7782  00640A  5192               	movf	(??_isupper+3)& (0+255),w,b
  7783  00640C  E10A               	bnz	u9570
  7784  00640E  0E1A               	movlw	26
  7785  006410  5D91               	subwf	(??_isupper+2)& (0+255),w,b
  7786  006412  A0D8               	btfss	status,0,c
  7787  006414  EF0E  F032         	goto	u9571
  7788  006418  EF11  F032         	goto	u9570
  7789  00641C                     u9571:
  7790  00641C  0E01               	movlw	1
  7791  00641E  EF12  F032         	goto	u9580
  7792  006422                     u9570:
  7793  006422  0E00               	movlw	0
  7794  006424                     u9580:
  7795  006424  6F8D               	movwf	?_isupper& (0+255),b
  7796  006426  6B8E               	clrf	(?_isupper+1)& (0+255),b
  7797  006428                     
  7798                           ; BSR set to: 0
  7799  006428  0012               	return		;funcret
  7800  00642A                     __end_of_isupper:
  7801                           	opt callstack 0
  7802                           
  7803 ;; *************** function _isalpha *****************
  7804 ;; Defined at:
  7805 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  7806 ;; Parameters:    Size  Location     Type
  7807 ;;  c               2   45[BANK0 ] int 
  7808 ;; Auto vars:     Size  Location     Type
  7809 ;;		None
  7810 ;; Return value:  Size  Location     Type
  7811 ;;                  2   45[BANK0 ] int 
  7812 ;; Registers used:
  7813 ;;		wreg, status,2, status,0
  7814 ;; Tracked objects:
  7815 ;;		On entry : 0/0
  7816 ;;		On exit  : 0/0
  7817 ;;		Unchanged: 0/0
  7818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7819 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7821 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7822 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7823 ;;Total ram usage:        6 bytes
  7824 ;; Hardware stack levels used:    1
  7825 ;; Hardware stack levels required when called:   13
  7826 ;; This function calls:
  7827 ;;		Nothing
  7828 ;; This function is called by:
  7829 ;;		_xtoa
  7830 ;; This function uses a non-reentrant model
  7831 ;;
  7832                           
  7833                           	psect	text15
  7834  00633C                     __ptext15:
  7835                           	opt callstack 0
  7836  00633C                     _isalpha:
  7837                           	opt callstack 12
  7838  00633C  0E9F               	movlw	159
  7839  00633E  0100               	movlb	0	; () banked
  7840  006340  6F8F               	movwf	??_isalpha& (0+255),b
  7841  006342  0EFF               	movlw	255
  7842  006344  6F90               	movwf	(??_isalpha+1)& (0+255),b
  7843  006346  0E20               	movlw	32
  7844  006348  118D               	iorwf	isalpha@c& (0+255),w,b
  7845  00634A  6F91               	movwf	(??_isalpha+2)& (0+255),b
  7846  00634C  0E00               	movlw	0
  7847  00634E  118E               	iorwf	(isalpha@c+1)& (0+255),w,b
  7848  006350  6F92               	movwf	(??_isalpha+3)& (0+255),b
  7849  006352  518F               	movf	??_isalpha& (0+255),w,b
  7850  006354  2791               	addwf	(??_isalpha+2)& (0+255),f,b
  7851  006356  5190               	movf	(??_isalpha+1)& (0+255),w,b
  7852  006358  2392               	addwfc	(??_isalpha+3)& (0+255),f,b
  7853  00635A  5192               	movf	(??_isalpha+3)& (0+255),w,b
  7854  00635C  E10A               	bnz	u9590
  7855  00635E  0E1A               	movlw	26
  7856  006360  5D91               	subwf	(??_isalpha+2)& (0+255),w,b
  7857  006362  A0D8               	btfss	status,0,c
  7858  006364  EFB6  F031         	goto	u9591
  7859  006368  EFB9  F031         	goto	u9590
  7860  00636C                     u9591:
  7861  00636C  0E01               	movlw	1
  7862  00636E  EFBA  F031         	goto	u9600
  7863  006372                     u9590:
  7864  006372  0E00               	movlw	0
  7865  006374                     u9600:
  7866  006374  6F8D               	movwf	?_isalpha& (0+255),b
  7867  006376  6B8E               	clrf	(?_isalpha+1)& (0+255),b
  7868  006378                     
  7869                           ; BSR set to: 0
  7870  006378  0012               	return		;funcret
  7871  00637A                     __end_of_isalpha:
  7872                           	opt callstack 0
  7873                           
  7874 ;; *************** function _utoa *****************
  7875 ;; Defined at:
  7876 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7877 ;; Parameters:    Size  Location     Type
  7878 ;;  fp              2   74[BANK0 ] PTR struct _IO_FILE
  7879 ;;		 -> vsnprintf@f(6), NULL(0), 
  7880 ;;  d               8   76[BANK0 ] unsigned long long 
  7881 ;; Auto vars:     Size  Location     Type
  7882 ;;  n               8   12[BANK1 ] unsigned long long 
  7883 ;;  i               2   20[BANK1 ] int 
  7884 ;;  w               2   10[BANK1 ] int 
  7885 ;;  p               2    8[BANK1 ] int 
  7886 ;; Return value:  Size  Location     Type
  7887 ;;                  2   74[BANK0 ] int 
  7888 ;; Registers used:
  7889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7890 ;; Tracked objects:
  7891 ;;		On entry : 0/0
  7892 ;;		On exit  : 0/0
  7893 ;;		Unchanged: 0/0
  7894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7895 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7896 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7897 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7898 ;;      Totals:         0      10      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7899 ;;Total ram usage:       32 bytes
  7900 ;; Hardware stack levels used:    1
  7901 ;; Hardware stack levels required when called:   18
  7902 ;; This function calls:
  7903 ;;		___lodiv
  7904 ;;		___lomod
  7905 ;;		_pad
  7906 ;; This function is called by:
  7907 ;;		_vfpfcnvrt
  7908 ;; This function uses a non-reentrant model
  7909 ;;
  7910                           
  7911                           	psect	text16
  7912  00381C                     __ptext16:
  7913                           	opt callstack 0
  7914  00381C                     _utoa:
  7915                           	opt callstack 8
  7916  00381C                     
  7917                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  7918  00381C  0100               	movlb	0	; () banked
  7919  00381E  BFBC               	btfsc	(_prec+1)& (0+255),7,b
  7920  003820  EF14  F01C         	goto	u10801
  7921  003824  EF16  F01C         	goto	u10800
  7922  003828                     u10801:
  7923  003828  EF17  F01C         	goto	l8485
  7924  00382C                     u10800:
  7925  00382C                     
  7926                           ; BSR set to: 0
  7927                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  7928  00382C  93BD               	bcf	_flags& (0+255),1,b
  7929  00382E                     l8485:
  7930                           
  7931                           ; BSR set to: 0
  7932                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  7933  00382E  BFBC               	btfsc	(_prec+1)& (0+255),7,b
  7934  003830  EF24  F01C         	goto	u10810
  7935  003834  51BC               	movf	(_prec+1)& (0+255),w,b
  7936  003836  E106               	bnz	u10811
  7937  003838  05BB               	decf	_prec& (0+255),w,b
  7938  00383A  B0D8               	btfsc	status,0,c
  7939  00383C  EF22  F01C         	goto	u10811
  7940  003840  EF24  F01C         	goto	u10810
  7941  003844                     u10811:
  7942  003844  EF2B  F01C         	goto	l720
  7943  003848                     u10810:
  7944  003848                     
  7945                           ; BSR set to: 0
  7946  003848  0E00               	movlw	0
  7947  00384A  0101               	movlb	1	; () banked
  7948  00384C  6F09               	movwf	(utoa@p+1)& (0+255),b
  7949  00384E  0E01               	movlw	1
  7950  003850  6F08               	movwf	utoa@p& (0+255),b
  7951  003852  EF2F  F01C         	goto	l722
  7952  003856                     l720:
  7953                           
  7954                           ; BSR set to: 0
  7955  003856  C0BB  F108         	movff	_prec,utoa@p
  7956  00385A  C0BC  F109         	movff	_prec+1,utoa@p+1
  7957  00385E                     l722:
  7958                           
  7959                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  7960  00385E  C0B9  F10A         	movff	_width,utoa@w
  7961  003862  C0BA  F10B         	movff	_width+1,utoa@w+1
  7962                           
  7963                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  7964  003866  C0AC  F10C         	movff	utoa@d,utoa@n
  7965  00386A  C0AD  F10D         	movff	utoa@d+1,utoa@n+1
  7966  00386E  C0AE  F10E         	movff	utoa@d+2,utoa@n+2
  7967  003872  C0AF  F10F         	movff	utoa@d+3,utoa@n+3
  7968  003876  C0B0  F110         	movff	utoa@d+4,utoa@n+4
  7969  00387A  C0B1  F111         	movff	utoa@d+5,utoa@n+5
  7970  00387E  C0B2  F112         	movff	utoa@d+6,utoa@n+6
  7971  003882  C0B3  F113         	movff	utoa@d+7,utoa@n+7
  7972  003886                     
  7973                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  7974  003886  0E00               	movlw	0
  7975  003888  0101               	movlb	1	; () banked
  7976  00388A  6F15               	movwf	(utoa@i+1)& (0+255),b
  7977  00388C  0E1F               	movlw	31
  7978  00388E  6F14               	movwf	utoa@i& (0+255),b
  7979  003890                     
  7980                           ; BSR set to: 1
  7981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  7982  003890  0E00               	movlw	0
  7983  003892  6F97               	movwf	(_dbuf+31)& (0+255),b
  7984                           
  7985                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7986  003894  EFC6  F01C         	goto	l8503
  7987  003898                     l8493:
  7988                           
  7989                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  7990  003898  0101               	movlb	1	; () banked
  7991  00389A  0714               	decf	utoa@i& (0+255),f,b
  7992  00389C  A0D8               	btfss	status,0,c
  7993  00389E  0715               	decf	(utoa@i+1)& (0+255),f,b
  7994  0038A0                     
  7995                           ; BSR set to: 1
  7996                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  7997  0038A0  0E78               	movlw	low _dbuf
  7998  0038A2  2514               	addwf	utoa@i& (0+255),w,b
  7999  0038A4  6ED9               	movwf	fsr2l,c
  8000  0038A6  0E01               	movlw	high _dbuf
  8001  0038A8  2115               	addwfc	(utoa@i+1)& (0+255),w,b
  8002  0038AA  6EDA               	movwf	fsr2h,c
  8003  0038AC  C10C  F08D         	movff	utoa@n,___lomod@dividend
  8004  0038B0  C10D  F08E         	movff	utoa@n+1,___lomod@dividend+1
  8005  0038B4  C10E  F08F         	movff	utoa@n+2,___lomod@dividend+2
  8006  0038B8  C10F  F090         	movff	utoa@n+3,___lomod@dividend+3
  8007  0038BC  C110  F091         	movff	utoa@n+4,___lomod@dividend+4
  8008  0038C0  C111  F092         	movff	utoa@n+5,___lomod@dividend+5
  8009  0038C4  C112  F093         	movff	utoa@n+6,___lomod@dividend+6
  8010  0038C8  C113  F094         	movff	utoa@n+7,___lomod@dividend+7
  8011  0038CC  0E0A               	movlw	10
  8012  0038CE  0100               	movlb	0	; () banked
  8013  0038D0  6F95               	movwf	___lomod@divisor& (0+255),b
  8014  0038D2  0E00               	movlw	0
  8015  0038D4  6F96               	movwf	(___lomod@divisor+1)& (0+255),b
  8016  0038D6  0E00               	movlw	0
  8017  0038D8  6F97               	movwf	(___lomod@divisor+2)& (0+255),b
  8018  0038DA  0E00               	movlw	0
  8019  0038DC  6F98               	movwf	(___lomod@divisor+3)& (0+255),b
  8020  0038DE  0E00               	movlw	0
  8021  0038E0  6F99               	movwf	(___lomod@divisor+4)& (0+255),b
  8022  0038E2  0E00               	movlw	0
  8023  0038E4  6F9A               	movwf	(___lomod@divisor+5)& (0+255),b
  8024  0038E6  0E00               	movlw	0
  8025  0038E8  6F9B               	movwf	(___lomod@divisor+6)& (0+255),b
  8026  0038EA  0E00               	movlw	0
  8027  0038EC  6F9C               	movwf	(___lomod@divisor+7)& (0+255),b
  8028  0038EE  ECDE  F02A         	call	___lomod	;wreg free
  8029  0038F2  C08D  F100         	movff	?___lomod,??_utoa
  8030  0038F6  C08E  F101         	movff	?___lomod+1,??_utoa+1
  8031  0038FA  C08F  F102         	movff	?___lomod+2,??_utoa+2
  8032  0038FE  C090  F103         	movff	?___lomod+3,??_utoa+3
  8033  003902  C091  F104         	movff	?___lomod+4,??_utoa+4
  8034  003906  C092  F105         	movff	?___lomod+5,??_utoa+5
  8035  00390A  C093  F106         	movff	?___lomod+6,??_utoa+6
  8036  00390E  C094  F107         	movff	?___lomod+7,??_utoa+7
  8037  003912  0101               	movlb	1	; () banked
  8038  003914  5100               	movf	??_utoa& (0+255),w,b
  8039  003916  0F30               	addlw	48
  8040  003918  6EDF               	movwf	indf2,c
  8041  00391A                     
  8042                           ; BSR set to: 1
  8043                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  8044  00391A  0708               	decf	utoa@p& (0+255),f,b
  8045  00391C  A0D8               	btfss	status,0,c
  8046  00391E  0709               	decf	(utoa@p+1)& (0+255),f,b
  8047  003920                     
  8048                           ; BSR set to: 1
  8049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  8050  003920  070A               	decf	utoa@w& (0+255),f,b
  8051  003922  A0D8               	btfss	status,0,c
  8052  003924  070B               	decf	(utoa@w+1)& (0+255),f,b
  8053  003926                     
  8054                           ; BSR set to: 1
  8055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  8056  003926  C10C  F08D         	movff	utoa@n,___lodiv@dividend
  8057  00392A  C10D  F08E         	movff	utoa@n+1,___lodiv@dividend+1
  8058  00392E  C10E  F08F         	movff	utoa@n+2,___lodiv@dividend+2
  8059  003932  C10F  F090         	movff	utoa@n+3,___lodiv@dividend+3
  8060  003936  C110  F091         	movff	utoa@n+4,___lodiv@dividend+4
  8061  00393A  C111  F092         	movff	utoa@n+5,___lodiv@dividend+5
  8062  00393E  C112  F093         	movff	utoa@n+6,___lodiv@dividend+6
  8063  003942  C113  F094         	movff	utoa@n+7,___lodiv@dividend+7
  8064  003946  0E0A               	movlw	10
  8065  003948  0100               	movlb	0	; () banked
  8066  00394A  6F95               	movwf	___lodiv@divisor& (0+255),b
  8067  00394C  0E00               	movlw	0
  8068  00394E  6F96               	movwf	(___lodiv@divisor+1)& (0+255),b
  8069  003950  0E00               	movlw	0
  8070  003952  6F97               	movwf	(___lodiv@divisor+2)& (0+255),b
  8071  003954  0E00               	movlw	0
  8072  003956  6F98               	movwf	(___lodiv@divisor+3)& (0+255),b
  8073  003958  0E00               	movlw	0
  8074  00395A  6F99               	movwf	(___lodiv@divisor+4)& (0+255),b
  8075  00395C  0E00               	movlw	0
  8076  00395E  6F9A               	movwf	(___lodiv@divisor+5)& (0+255),b
  8077  003960  0E00               	movlw	0
  8078  003962  6F9B               	movwf	(___lodiv@divisor+6)& (0+255),b
  8079  003964  0E00               	movlw	0
  8080  003966  6F9C               	movwf	(___lodiv@divisor+7)& (0+255),b
  8081  003968  EC02  F029         	call	___lodiv	;wreg free
  8082  00396C  C08D  F10C         	movff	?___lodiv,utoa@n
  8083  003970  C08E  F10D         	movff	?___lodiv+1,utoa@n+1
  8084  003974  C08F  F10E         	movff	?___lodiv+2,utoa@n+2
  8085  003978  C090  F10F         	movff	?___lodiv+3,utoa@n+3
  8086  00397C  C091  F110         	movff	?___lodiv+4,utoa@n+4
  8087  003980  C092  F111         	movff	?___lodiv+5,utoa@n+5
  8088  003984  C093  F112         	movff	?___lodiv+6,utoa@n+6
  8089  003988  C094  F113         	movff	?___lodiv+7,utoa@n+7
  8090  00398C                     l8503:
  8091                           
  8092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8093  00398C  0101               	movlb	1	; () banked
  8094  00398E  5114               	movf	utoa@i& (0+255),w,b
  8095  003990  1115               	iorwf	(utoa@i+1)& (0+255),w,b
  8096  003992  B4D8               	btfsc	status,2,c
  8097  003994  EFCE  F01C         	goto	u10821
  8098  003998  EFD0  F01C         	goto	u10820
  8099  00399C                     u10821:
  8100  00399C  EF01  F01D         	goto	l8513
  8101  0039A0                     u10820:
  8102  0039A0                     
  8103                           ; BSR set to: 1
  8104  0039A0  510C               	movf	utoa@n& (0+255),w,b
  8105  0039A2  110D               	iorwf	(utoa@n+1)& (0+255),w,b
  8106  0039A4  110E               	iorwf	(utoa@n+2)& (0+255),w,b
  8107  0039A6  110F               	iorwf	(utoa@n+3)& (0+255),w,b
  8108  0039A8  1110               	iorwf	(utoa@n+4)& (0+255),w,b
  8109  0039AA  1111               	iorwf	(utoa@n+5)& (0+255),w,b
  8110  0039AC  1112               	iorwf	(utoa@n+6)& (0+255),w,b
  8111  0039AE  1113               	iorwf	(utoa@n+7)& (0+255),w,b
  8112  0039B0  A4D8               	btfss	status,2,c
  8113  0039B2  EFDD  F01C         	goto	u10831
  8114  0039B6  EFDF  F01C         	goto	u10830
  8115  0039BA                     u10831:
  8116  0039BA  EF4C  F01C         	goto	l8493
  8117  0039BE                     u10830:
  8118  0039BE                     
  8119                           ; BSR set to: 1
  8120  0039BE  BF09               	btfsc	(utoa@p+1)& (0+255),7,b
  8121  0039C0  EFEC  F01C         	goto	u10840
  8122  0039C4  5109               	movf	(utoa@p+1)& (0+255),w,b
  8123  0039C6  E106               	bnz	u10841
  8124  0039C8  0508               	decf	utoa@p& (0+255),w,b
  8125  0039CA  B0D8               	btfsc	status,0,c
  8126  0039CC  EFEA  F01C         	goto	u10841
  8127  0039D0  EFEC  F01C         	goto	u10840
  8128  0039D4                     u10841:
  8129  0039D4  EF4C  F01C         	goto	l8493
  8130  0039D8                     u10840:
  8131  0039D8                     
  8132                           ; BSR set to: 1
  8133  0039D8  BF0B               	btfsc	(utoa@w+1)& (0+255),7,b
  8134  0039DA  EFF7  F01C         	goto	u10851
  8135  0039DE  510B               	movf	(utoa@w+1)& (0+255),w,b
  8136  0039E0  E108               	bnz	u10850
  8137  0039E2  050A               	decf	utoa@w& (0+255),w,b
  8138  0039E4  A0D8               	btfss	status,0,c
  8139  0039E6  EFF7  F01C         	goto	u10851
  8140  0039EA  EFF9  F01C         	goto	u10850
  8141  0039EE                     u10851:
  8142  0039EE  EF01  F01D         	goto	l8513
  8143  0039F2                     u10850:
  8144  0039F2                     
  8145                           ; BSR set to: 1
  8146  0039F2  0100               	movlb	0	; () banked
  8147  0039F4  B3BD               	btfsc	_flags& (0+255),1,b
  8148  0039F6  EFFF  F01C         	goto	u10861
  8149  0039FA  EF01  F01D         	goto	u10860
  8150  0039FE                     u10861:
  8151  0039FE  EF4C  F01C         	goto	l8493
  8152  003A02                     u10860:
  8153  003A02                     l8513:
  8154                           
  8155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  8156  003A02  C0AA  F09F         	movff	utoa@fp,pad@fp
  8157  003A06  C0AB  F0A0         	movff	utoa@fp+1,pad@fp+1
  8158  003A0A  0E78               	movlw	low _dbuf
  8159  003A0C  0101               	movlb	1	; () banked
  8160  003A0E  2514               	addwf	utoa@i& (0+255),w,b
  8161  003A10  0100               	movlb	0	; () banked
  8162  003A12  6FA1               	movwf	pad@buf& (0+255),b
  8163  003A14  0E01               	movlw	high _dbuf
  8164  003A16  0101               	movlb	1	; () banked
  8165  003A18  2115               	addwfc	(utoa@i+1)& (0+255),w,b
  8166  003A1A  0100               	movlb	0	; () banked
  8167  003A1C  6FA2               	movwf	(pad@buf+1)& (0+255),b
  8168  003A1E  C10A  F0A3         	movff	utoa@w,pad@p
  8169  003A22  C10B  F0A4         	movff	utoa@w+1,pad@p+1
  8170  003A26  EC15  F02C         	call	_pad	;wreg free
  8171  003A2A  C09F  F0AA         	movff	?_pad,?_utoa
  8172  003A2E  C0A0  F0AB         	movff	?_pad+1,?_utoa+1
  8173  003A32  0012               	return		;funcret
  8174  003A34                     __end_of_utoa:
  8175                           	opt callstack 0
  8176                           
  8177 ;; *************** function ___lomod *****************
  8178 ;; Defined at:
  8179 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  8180 ;; Parameters:    Size  Location     Type
  8181 ;;  dividend        8   45[BANK0 ] unsigned long long 
  8182 ;;  divisor         8   53[BANK0 ] unsigned long long 
  8183 ;; Auto vars:     Size  Location     Type
  8184 ;;  counter         1   61[BANK0 ] unsigned char 
  8185 ;; Return value:  Size  Location     Type
  8186 ;;                  8   45[BANK0 ] unsigned long long 
  8187 ;; Registers used:
  8188 ;;		wreg, status,2, status,0
  8189 ;; Tracked objects:
  8190 ;;		On entry : 0/0
  8191 ;;		On exit  : 0/0
  8192 ;;		Unchanged: 0/0
  8193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8194 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8195 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8197 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8198 ;;Total ram usage:       17 bytes
  8199 ;; Hardware stack levels used:    1
  8200 ;; Hardware stack levels required when called:   13
  8201 ;; This function calls:
  8202 ;;		Nothing
  8203 ;; This function is called by:
  8204 ;;		_utoa
  8205 ;; This function uses a non-reentrant model
  8206 ;;
  8207                           
  8208                           	psect	text17
  8209  0055BC                     __ptext17:
  8210                           	opt callstack 0
  8211  0055BC                     ___lomod:
  8212                           	opt callstack 12
  8213  0055BC  0100               	movlb	0	; () banked
  8214  0055BE  5195               	movf	___lomod@divisor& (0+255),w,b
  8215  0055C0  1196               	iorwf	(___lomod@divisor+1)& (0+255),w,b
  8216  0055C2  1197               	iorwf	(___lomod@divisor+2)& (0+255),w,b
  8217  0055C4  1198               	iorwf	(___lomod@divisor+3)& (0+255),w,b
  8218  0055C6  1199               	iorwf	(___lomod@divisor+4)& (0+255),w,b
  8219  0055C8  119A               	iorwf	(___lomod@divisor+5)& (0+255),w,b
  8220  0055CA  119B               	iorwf	(___lomod@divisor+6)& (0+255),w,b
  8221  0055CC  119C               	iorwf	(___lomod@divisor+7)& (0+255),w,b
  8222  0055CE  B4D8               	btfsc	status,2,c
  8223  0055D0  EFEC  F02A         	goto	u9831
  8224  0055D4  EFEE  F02A         	goto	u9830
  8225  0055D8                     u9831:
  8226  0055D8  EF36  F02B         	goto	l1293
  8227  0055DC                     u9830:
  8228  0055DC                     
  8229                           ; BSR set to: 0
  8230  0055DC  0E01               	movlw	1
  8231  0055DE  6F9D               	movwf	___lomod@counter& (0+255),b
  8232  0055E0  EFFC  F02A         	goto	l7919
  8233  0055E4                     l7917:
  8234                           
  8235                           ; BSR set to: 0
  8236  0055E4  90D8               	bcf	status,0,c
  8237  0055E6  3795               	rlcf	___lomod@divisor& (0+255),f,b
  8238  0055E8  3796               	rlcf	(___lomod@divisor+1)& (0+255),f,b
  8239  0055EA  3797               	rlcf	(___lomod@divisor+2)& (0+255),f,b
  8240  0055EC  3798               	rlcf	(___lomod@divisor+3)& (0+255),f,b
  8241  0055EE  3799               	rlcf	(___lomod@divisor+4)& (0+255),f,b
  8242  0055F0  379A               	rlcf	(___lomod@divisor+5)& (0+255),f,b
  8243  0055F2  379B               	rlcf	(___lomod@divisor+6)& (0+255),f,b
  8244  0055F4  379C               	rlcf	(___lomod@divisor+7)& (0+255),f,b
  8245  0055F6  2B9D               	incf	___lomod@counter& (0+255),f,b
  8246  0055F8                     l7919:
  8247                           
  8248                           ; BSR set to: 0
  8249  0055F8  AF9C               	btfss	(___lomod@divisor+7)& (0+255),7,b
  8250  0055FA  EF01  F02B         	goto	u9841
  8251  0055FE  EF03  F02B         	goto	u9840
  8252  005602                     u9841:
  8253  005602  EFF2  F02A         	goto	l7917
  8254  005606                     u9840:
  8255  005606                     l7921:
  8256                           
  8257                           ; BSR set to: 0
  8258  005606  5195               	movf	___lomod@divisor& (0+255),w,b
  8259  005608  5D8D               	subwf	___lomod@dividend& (0+255),w,b
  8260  00560A  5196               	movf	(___lomod@divisor+1)& (0+255),w,b
  8261  00560C  598E               	subwfb	(___lomod@dividend+1)& (0+255),w,b
  8262  00560E  5197               	movf	(___lomod@divisor+2)& (0+255),w,b
  8263  005610  598F               	subwfb	(___lomod@dividend+2)& (0+255),w,b
  8264  005612  5198               	movf	(___lomod@divisor+3)& (0+255),w,b
  8265  005614  5990               	subwfb	(___lomod@dividend+3)& (0+255),w,b
  8266  005616  5199               	movf	(___lomod@divisor+4)& (0+255),w,b
  8267  005618  5991               	subwfb	(___lomod@dividend+4)& (0+255),w,b
  8268  00561A  519A               	movf	(___lomod@divisor+5)& (0+255),w,b
  8269  00561C  5992               	subwfb	(___lomod@dividend+5)& (0+255),w,b
  8270  00561E  519B               	movf	(___lomod@divisor+6)& (0+255),w,b
  8271  005620  5993               	subwfb	(___lomod@dividend+6)& (0+255),w,b
  8272  005622  519C               	movf	(___lomod@divisor+7)& (0+255),w,b
  8273  005624  5994               	subwfb	(___lomod@dividend+7)& (0+255),w,b
  8274  005626  A0D8               	btfss	status,0,c
  8275  005628  EF18  F02B         	goto	u9851
  8276  00562C  EF1A  F02B         	goto	u9850
  8277  005630                     u9851:
  8278  005630  EF2A  F02B         	goto	l7925
  8279  005634                     u9850:
  8280  005634                     
  8281                           ; BSR set to: 0
  8282  005634  5195               	movf	___lomod@divisor& (0+255),w,b
  8283  005636  5F8D               	subwf	___lomod@dividend& (0+255),f,b
  8284  005638  5196               	movf	(___lomod@divisor+1)& (0+255),w,b
  8285  00563A  5B8E               	subwfb	(___lomod@dividend+1)& (0+255),f,b
  8286  00563C  5197               	movf	(___lomod@divisor+2)& (0+255),w,b
  8287  00563E  5B8F               	subwfb	(___lomod@dividend+2)& (0+255),f,b
  8288  005640  5198               	movf	(___lomod@divisor+3)& (0+255),w,b
  8289  005642  5B90               	subwfb	(___lomod@dividend+3)& (0+255),f,b
  8290  005644  5199               	movf	(___lomod@divisor+4)& (0+255),w,b
  8291  005646  5B91               	subwfb	(___lomod@dividend+4)& (0+255),f,b
  8292  005648  519A               	movf	(___lomod@divisor+5)& (0+255),w,b
  8293  00564A  5B92               	subwfb	(___lomod@dividend+5)& (0+255),f,b
  8294  00564C  519B               	movf	(___lomod@divisor+6)& (0+255),w,b
  8295  00564E  5B93               	subwfb	(___lomod@dividend+6)& (0+255),f,b
  8296  005650  519C               	movf	(___lomod@divisor+7)& (0+255),w,b
  8297  005652  5B94               	subwfb	(___lomod@dividend+7)& (0+255),f,b
  8298  005654                     l7925:
  8299                           
  8300                           ; BSR set to: 0
  8301  005654  90D8               	bcf	status,0,c
  8302  005656  339C               	rrcf	(___lomod@divisor+7)& (0+255),f,b
  8303  005658  339B               	rrcf	(___lomod@divisor+6)& (0+255),f,b
  8304  00565A  339A               	rrcf	(___lomod@divisor+5)& (0+255),f,b
  8305  00565C  3399               	rrcf	(___lomod@divisor+4)& (0+255),f,b
  8306  00565E  3398               	rrcf	(___lomod@divisor+3)& (0+255),f,b
  8307  005660  3397               	rrcf	(___lomod@divisor+2)& (0+255),f,b
  8308  005662  3396               	rrcf	(___lomod@divisor+1)& (0+255),f,b
  8309  005664  3395               	rrcf	___lomod@divisor& (0+255),f,b
  8310  005666                     
  8311                           ; BSR set to: 0
  8312  005666  2F9D               	decfsz	___lomod@counter& (0+255),f,b
  8313  005668  EF03  F02B         	goto	l7921
  8314  00566C                     l1293:
  8315                           
  8316                           ; BSR set to: 0
  8317  00566C  C08D  F08D         	movff	___lomod@dividend,?___lomod
  8318  005670  C08E  F08E         	movff	___lomod@dividend+1,?___lomod+1
  8319  005674  C08F  F08F         	movff	___lomod@dividend+2,?___lomod+2
  8320  005678  C090  F090         	movff	___lomod@dividend+3,?___lomod+3
  8321  00567C  C091  F091         	movff	___lomod@dividend+4,?___lomod+4
  8322  005680  C092  F092         	movff	___lomod@dividend+5,?___lomod+5
  8323  005684  C093  F093         	movff	___lomod@dividend+6,?___lomod+6
  8324  005688  C094  F094         	movff	___lomod@dividend+7,?___lomod+7
  8325  00568C                     
  8326                           ; BSR set to: 0
  8327  00568C  0012               	return		;funcret
  8328  00568E                     __end_of___lomod:
  8329                           	opt callstack 0
  8330                           
  8331 ;; *************** function ___lodiv *****************
  8332 ;; Defined at:
  8333 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  8334 ;; Parameters:    Size  Location     Type
  8335 ;;  dividend        8   45[BANK0 ] unsigned long long 
  8336 ;;  divisor         8   53[BANK0 ] unsigned long long 
  8337 ;; Auto vars:     Size  Location     Type
  8338 ;;  quotient        8   61[BANK0 ] unsigned long long 
  8339 ;;  counter         1   69[BANK0 ] unsigned char 
  8340 ;; Return value:  Size  Location     Type
  8341 ;;                  8   45[BANK0 ] unsigned long long 
  8342 ;; Registers used:
  8343 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8344 ;; Tracked objects:
  8345 ;;		On entry : 0/0
  8346 ;;		On exit  : 0/0
  8347 ;;		Unchanged: 0/0
  8348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8349 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8350 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8352 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8353 ;;Total ram usage:       25 bytes
  8354 ;; Hardware stack levels used:    1
  8355 ;; Hardware stack levels required when called:   13
  8356 ;; This function calls:
  8357 ;;		Nothing
  8358 ;; This function is called by:
  8359 ;;		_utoa
  8360 ;; This function uses a non-reentrant model
  8361 ;;
  8362                           
  8363                           	psect	text18
  8364  005204                     __ptext18:
  8365                           	opt callstack 0
  8366  005204                     ___lodiv:
  8367                           	opt callstack 12
  8368  005204  EE20  F09D         	lfsr	2,___lodiv@quotient
  8369  005208  0E07               	movlw	7
  8370  00520A                     u9791:
  8371  00520A  6ADE               	clrf	postinc2,c
  8372  00520C  06E8               	decf	wreg,f,c
  8373  00520E  E2FD               	bc	u9791
  8374  005210  0100               	movlb	0	; () banked
  8375  005212  5195               	movf	___lodiv@divisor& (0+255),w,b
  8376  005214  1196               	iorwf	(___lodiv@divisor+1)& (0+255),w,b
  8377  005216  1197               	iorwf	(___lodiv@divisor+2)& (0+255),w,b
  8378  005218  1198               	iorwf	(___lodiv@divisor+3)& (0+255),w,b
  8379  00521A  1199               	iorwf	(___lodiv@divisor+4)& (0+255),w,b
  8380  00521C  119A               	iorwf	(___lodiv@divisor+5)& (0+255),w,b
  8381  00521E  119B               	iorwf	(___lodiv@divisor+6)& (0+255),w,b
  8382  005220  119C               	iorwf	(___lodiv@divisor+7)& (0+255),w,b
  8383  005222  B4D8               	btfsc	status,2,c
  8384  005224  EF16  F029         	goto	u9801
  8385  005228  EF18  F029         	goto	u9800
  8386  00522C                     u9801:
  8387  00522C  EF6A  F029         	goto	l1283
  8388  005230                     u9800:
  8389  005230                     
  8390                           ; BSR set to: 0
  8391  005230  0E01               	movlw	1
  8392  005232  6FA5               	movwf	___lodiv@counter& (0+255),b
  8393  005234  EF26  F029         	goto	l7899
  8394  005238                     l7897:
  8395                           
  8396                           ; BSR set to: 0
  8397  005238  90D8               	bcf	status,0,c
  8398  00523A  3795               	rlcf	___lodiv@divisor& (0+255),f,b
  8399  00523C  3796               	rlcf	(___lodiv@divisor+1)& (0+255),f,b
  8400  00523E  3797               	rlcf	(___lodiv@divisor+2)& (0+255),f,b
  8401  005240  3798               	rlcf	(___lodiv@divisor+3)& (0+255),f,b
  8402  005242  3799               	rlcf	(___lodiv@divisor+4)& (0+255),f,b
  8403  005244  379A               	rlcf	(___lodiv@divisor+5)& (0+255),f,b
  8404  005246  379B               	rlcf	(___lodiv@divisor+6)& (0+255),f,b
  8405  005248  379C               	rlcf	(___lodiv@divisor+7)& (0+255),f,b
  8406  00524A  2BA5               	incf	___lodiv@counter& (0+255),f,b
  8407  00524C                     l7899:
  8408                           
  8409                           ; BSR set to: 0
  8410  00524C  AF9C               	btfss	(___lodiv@divisor+7)& (0+255),7,b
  8411  00524E  EF2B  F029         	goto	u9811
  8412  005252  EF2D  F029         	goto	u9810
  8413  005256                     u9811:
  8414  005256  EF1C  F029         	goto	l7897
  8415  00525A                     u9810:
  8416  00525A                     l7901:
  8417                           
  8418                           ; BSR set to: 0
  8419  00525A  90D8               	bcf	status,0,c
  8420  00525C  379D               	rlcf	___lodiv@quotient& (0+255),f,b
  8421  00525E  379E               	rlcf	(___lodiv@quotient+1)& (0+255),f,b
  8422  005260  379F               	rlcf	(___lodiv@quotient+2)& (0+255),f,b
  8423  005262  37A0               	rlcf	(___lodiv@quotient+3)& (0+255),f,b
  8424  005264  37A1               	rlcf	(___lodiv@quotient+4)& (0+255),f,b
  8425  005266  37A2               	rlcf	(___lodiv@quotient+5)& (0+255),f,b
  8426  005268  37A3               	rlcf	(___lodiv@quotient+6)& (0+255),f,b
  8427  00526A  37A4               	rlcf	(___lodiv@quotient+7)& (0+255),f,b
  8428  00526C                     
  8429                           ; BSR set to: 0
  8430  00526C  5195               	movf	___lodiv@divisor& (0+255),w,b
  8431  00526E  5D8D               	subwf	___lodiv@dividend& (0+255),w,b
  8432  005270  5196               	movf	(___lodiv@divisor+1)& (0+255),w,b
  8433  005272  598E               	subwfb	(___lodiv@dividend+1)& (0+255),w,b
  8434  005274  5197               	movf	(___lodiv@divisor+2)& (0+255),w,b
  8435  005276  598F               	subwfb	(___lodiv@dividend+2)& (0+255),w,b
  8436  005278  5198               	movf	(___lodiv@divisor+3)& (0+255),w,b
  8437  00527A  5990               	subwfb	(___lodiv@dividend+3)& (0+255),w,b
  8438  00527C  5199               	movf	(___lodiv@divisor+4)& (0+255),w,b
  8439  00527E  5991               	subwfb	(___lodiv@dividend+4)& (0+255),w,b
  8440  005280  519A               	movf	(___lodiv@divisor+5)& (0+255),w,b
  8441  005282  5992               	subwfb	(___lodiv@dividend+5)& (0+255),w,b
  8442  005284  519B               	movf	(___lodiv@divisor+6)& (0+255),w,b
  8443  005286  5993               	subwfb	(___lodiv@dividend+6)& (0+255),w,b
  8444  005288  519C               	movf	(___lodiv@divisor+7)& (0+255),w,b
  8445  00528A  5994               	subwfb	(___lodiv@dividend+7)& (0+255),w,b
  8446  00528C  A0D8               	btfss	status,0,c
  8447  00528E  EF4B  F029         	goto	u9821
  8448  005292  EF4D  F029         	goto	u9820
  8449  005296                     u9821:
  8450  005296  EF5E  F029         	goto	l7909
  8451  00529A                     u9820:
  8452  00529A                     
  8453                           ; BSR set to: 0
  8454  00529A  5195               	movf	___lodiv@divisor& (0+255),w,b
  8455  00529C  5F8D               	subwf	___lodiv@dividend& (0+255),f,b
  8456  00529E  5196               	movf	(___lodiv@divisor+1)& (0+255),w,b
  8457  0052A0  5B8E               	subwfb	(___lodiv@dividend+1)& (0+255),f,b
  8458  0052A2  5197               	movf	(___lodiv@divisor+2)& (0+255),w,b
  8459  0052A4  5B8F               	subwfb	(___lodiv@dividend+2)& (0+255),f,b
  8460  0052A6  5198               	movf	(___lodiv@divisor+3)& (0+255),w,b
  8461  0052A8  5B90               	subwfb	(___lodiv@dividend+3)& (0+255),f,b
  8462  0052AA  5199               	movf	(___lodiv@divisor+4)& (0+255),w,b
  8463  0052AC  5B91               	subwfb	(___lodiv@dividend+4)& (0+255),f,b
  8464  0052AE  519A               	movf	(___lodiv@divisor+5)& (0+255),w,b
  8465  0052B0  5B92               	subwfb	(___lodiv@dividend+5)& (0+255),f,b
  8466  0052B2  519B               	movf	(___lodiv@divisor+6)& (0+255),w,b
  8467  0052B4  5B93               	subwfb	(___lodiv@dividend+6)& (0+255),f,b
  8468  0052B6  519C               	movf	(___lodiv@divisor+7)& (0+255),w,b
  8469  0052B8  5B94               	subwfb	(___lodiv@dividend+7)& (0+255),f,b
  8470  0052BA                     
  8471                           ; BSR set to: 0
  8472  0052BA  819D               	bsf	___lodiv@quotient& (0+255),0,b
  8473  0052BC                     l7909:
  8474                           
  8475                           ; BSR set to: 0
  8476  0052BC  90D8               	bcf	status,0,c
  8477  0052BE  339C               	rrcf	(___lodiv@divisor+7)& (0+255),f,b
  8478  0052C0  339B               	rrcf	(___lodiv@divisor+6)& (0+255),f,b
  8479  0052C2  339A               	rrcf	(___lodiv@divisor+5)& (0+255),f,b
  8480  0052C4  3399               	rrcf	(___lodiv@divisor+4)& (0+255),f,b
  8481  0052C6  3398               	rrcf	(___lodiv@divisor+3)& (0+255),f,b
  8482  0052C8  3397               	rrcf	(___lodiv@divisor+2)& (0+255),f,b
  8483  0052CA  3396               	rrcf	(___lodiv@divisor+1)& (0+255),f,b
  8484  0052CC  3395               	rrcf	___lodiv@divisor& (0+255),f,b
  8485  0052CE                     
  8486                           ; BSR set to: 0
  8487  0052CE  2FA5               	decfsz	___lodiv@counter& (0+255),f,b
  8488  0052D0  EF2D  F029         	goto	l7901
  8489  0052D4                     l1283:
  8490                           
  8491                           ; BSR set to: 0
  8492  0052D4  C09D  F08D         	movff	___lodiv@quotient,?___lodiv
  8493  0052D8  C09E  F08E         	movff	___lodiv@quotient+1,?___lodiv+1
  8494  0052DC  C09F  F08F         	movff	___lodiv@quotient+2,?___lodiv+2
  8495  0052E0  C0A0  F090         	movff	___lodiv@quotient+3,?___lodiv+3
  8496  0052E4  C0A1  F091         	movff	___lodiv@quotient+4,?___lodiv+4
  8497  0052E8  C0A2  F092         	movff	___lodiv@quotient+5,?___lodiv+5
  8498  0052EC  C0A3  F093         	movff	___lodiv@quotient+6,?___lodiv+6
  8499  0052F0  C0A4  F094         	movff	___lodiv@quotient+7,?___lodiv+7
  8500  0052F4                     
  8501                           ; BSR set to: 0
  8502  0052F4  0012               	return		;funcret
  8503  0052F6                     __end_of___lodiv:
  8504                           	opt callstack 0
  8505                           
  8506 ;; *************** function _strncmp *****************
  8507 ;; Defined at:
  8508 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  8509 ;; Parameters:    Size  Location     Type
  8510 ;;  _l              2   45[BANK0 ] PTR const unsigned char 
  8511 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
  8512 ;;		 -> STR_4(22), STR_3(12), STR_1(13), 
  8513 ;;  _r              2   47[BANK0 ] PTR const unsigned char 
  8514 ;;		 -> STR_105(3), STR_101(3), STR_96(3), STR_92(3), 
  8515 ;;		 -> STR_87(4), STR_83(4), STR_78(3), STR_73(3), 
  8516 ;;		 -> STR_68(4), STR_63(3), STR_58(3), STR_53(4), 
  8517 ;;		 -> STR_48(3), STR_43(3), STR_38(4), STR_33(3), 
  8518 ;;		 -> STR_29(3), STR_24(3), STR_20(3), STR_15(4), 
  8519 ;;		 -> STR_11(4), 
  8520 ;;  n               2   49[BANK0 ] unsigned int 
  8521 ;; Auto vars:     Size  Location     Type
  8522 ;;  r               2   54[BANK0 ] PTR const unsigned char 
  8523 ;;		 -> STR_105(3), STR_101(3), STR_96(3), STR_92(3), 
  8524 ;;		 -> STR_87(4), STR_83(4), STR_78(3), STR_73(3), 
  8525 ;;		 -> STR_68(4), STR_63(3), STR_58(3), STR_53(4), 
  8526 ;;		 -> STR_48(3), STR_43(3), STR_38(4), STR_33(3), 
  8527 ;;		 -> STR_29(3), STR_24(3), STR_20(3), STR_15(4), 
  8528 ;;		 -> STR_11(4), 
  8529 ;;  l               2   52[BANK0 ] PTR const unsigned char 
  8530 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
  8531 ;;		 -> STR_4(22), STR_3(12), STR_1(13), 
  8532 ;; Return value:  Size  Location     Type
  8533 ;;                  2   45[BANK0 ] int 
  8534 ;; Registers used:
  8535 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  8536 ;; Tracked objects:
  8537 ;;		On entry : 0/0
  8538 ;;		On exit  : 0/0
  8539 ;;		Unchanged: 0/0
  8540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8541 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8542 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8543 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8544 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8545 ;;Total ram usage:       11 bytes
  8546 ;; Hardware stack levels used:    1
  8547 ;; Hardware stack levels required when called:   13
  8548 ;; This function calls:
  8549 ;;		Nothing
  8550 ;; This function is called by:
  8551 ;;		_vfpfcnvrt
  8552 ;; This function uses a non-reentrant model
  8553 ;;
  8554                           
  8555                           	psect	text19
  8556  0053E6                     __ptext19:
  8557                           	opt callstack 0
  8558  0053E6                     _strncmp:
  8559                           	opt callstack 13
  8560  0053E6  C08D  F094         	movff	strncmp@_l,strncmp@l
  8561  0053EA  C08E  F095         	movff	strncmp@_l+1,strncmp@l+1
  8562  0053EE  C08F  F096         	movff	strncmp@_r,strncmp@r
  8563  0053F2  C090  F097         	movff	strncmp@_r+1,strncmp@r+1
  8564  0053F6  0100               	movlb	0	; () banked
  8565  0053F8  0791               	decf	strncmp@n& (0+255),f,b
  8566  0053FA  A0D8               	btfss	status,0,c
  8567  0053FC  0792               	decf	(strncmp@n+1)& (0+255),f,b
  8568  0053FE  2991               	incf	strncmp@n& (0+255),w,b
  8569  005400  E106               	bnz	u11041
  8570  005402  2992               	incf	(strncmp@n+1)& (0+255),w,b
  8571  005404  A4D8               	btfss	status,2,c
  8572  005406  EF07  F02A         	goto	u11041
  8573  00540A  EF09  F02A         	goto	u11040
  8574  00540E                     u11041:
  8575  00540E  EF16  F02A         	goto	l8591
  8576  005412                     u11040:
  8577  005412                     
  8578                           ; BSR set to: 0
  8579  005412  0E00               	movlw	0
  8580  005414  6F8E               	movwf	(?_strncmp+1)& (0+255),b
  8581  005416  0E00               	movlw	0
  8582  005418  6F8D               	movwf	?_strncmp& (0+255),b
  8583  00541A  EF68  F02A         	goto	l1624
  8584  00541E                     l8589:
  8585                           
  8586                           ; BSR set to: 0
  8587  00541E  4B94               	infsnz	strncmp@l& (0+255),f,b
  8588  005420  2B95               	incf	(strncmp@l+1)& (0+255),f,b
  8589  005422  4B96               	infsnz	strncmp@r& (0+255),f,b
  8590  005424  2B97               	incf	(strncmp@r+1)& (0+255),f,b
  8591  005426  0791               	decf	strncmp@n& (0+255),f,b
  8592  005428  A0D8               	btfss	status,0,c
  8593  00542A  0792               	decf	(strncmp@n+1)& (0+255),f,b
  8594  00542C                     l8591:
  8595                           
  8596                           ; BSR set to: 0
  8597  00542C  C094  FFF6         	movff	strncmp@l,tblptrl
  8598  005430  C095  FFF7         	movff	strncmp@l+1,tblptrh
  8599  005434                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8600  005434  6AF8               	clrf	tblptru,c
  8601  005436                     	endif
  8602  005436                     	if	0	;tblptru may be non-zero
  8603  005436                     	endif
  8604  005436  0008               	tblrd		*
  8605  005438  50F5               	movf	tablat,w,c
  8606  00543A  0900               	iorlw	0
  8607  00543C  B4D8               	btfsc	status,2,c
  8608  00543E  EF23  F02A         	goto	u11051
  8609  005442  EF25  F02A         	goto	u11050
  8610  005446                     u11051:
  8611  005446  EF54  F02A         	goto	l8599
  8612  00544A                     u11050:
  8613  00544A                     
  8614                           ; BSR set to: 0
  8615  00544A  C096  FFF6         	movff	strncmp@r,tblptrl
  8616  00544E  C097  FFF7         	movff	strncmp@r+1,tblptrh
  8617  005452                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8618  005452  6AF8               	clrf	tblptru,c
  8619  005454                     	endif
  8620  005454                     	if	0	;tblptru may be non-zero
  8621  005454                     	endif
  8622  005454  0008               	tblrd		*
  8623  005456  50F5               	movf	tablat,w,c
  8624  005458  0900               	iorlw	0
  8625  00545A  B4D8               	btfsc	status,2,c
  8626  00545C  EF32  F02A         	goto	u11061
  8627  005460  EF34  F02A         	goto	u11060
  8628  005464                     u11061:
  8629  005464  EF54  F02A         	goto	l8599
  8630  005468                     u11060:
  8631  005468                     
  8632                           ; BSR set to: 0
  8633  005468  5191               	movf	strncmp@n& (0+255),w,b
  8634  00546A  1192               	iorwf	(strncmp@n+1)& (0+255),w,b
  8635  00546C  B4D8               	btfsc	status,2,c
  8636  00546E  EF3B  F02A         	goto	u11071
  8637  005472  EF3D  F02A         	goto	u11070
  8638  005476                     u11071:
  8639  005476  EF54  F02A         	goto	l8599
  8640  00547A                     u11070:
  8641  00547A                     
  8642                           ; BSR set to: 0
  8643  00547A  C094  FFF6         	movff	strncmp@l,tblptrl
  8644  00547E  C095  FFF7         	movff	strncmp@l+1,tblptrh
  8645  005482                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8646  005482  6AF8               	clrf	tblptru,c
  8647  005484                     	endif
  8648  005484                     	if	0	;tblptru may be non-zero
  8649  005484                     	endif
  8650  005484  0008               	tblrd		*
  8651  005486  CFF5 F093          	movff	tablat,??_strncmp
  8652  00548A  C096  FFF6         	movff	strncmp@r,tblptrl
  8653  00548E  C097  FFF7         	movff	strncmp@r+1,tblptrh
  8654  005492                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8655  005492  6AF8               	clrf	tblptru,c
  8656  005494                     	endif
  8657  005494                     	if	0	;tblptru may be non-zero
  8658  005494                     	endif
  8659  005494  0008               	tblrd		*
  8660  005496  50F5               	movf	tablat,w,c
  8661  005498  1993               	xorwf	??_strncmp& (0+255),w,b
  8662  00549A  B4D8               	btfsc	status,2,c
  8663  00549C  EF52  F02A         	goto	u11081
  8664  0054A0  EF54  F02A         	goto	u11080
  8665  0054A4                     u11081:
  8666  0054A4  EF0F  F02A         	goto	l8589
  8667  0054A8                     u11080:
  8668  0054A8                     l8599:
  8669                           
  8670                           ; BSR set to: 0
  8671  0054A8  C094  FFF6         	movff	strncmp@l,tblptrl
  8672  0054AC  C095  FFF7         	movff	strncmp@l+1,tblptrh
  8673  0054B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8674  0054B0  6AF8               	clrf	tblptru,c
  8675  0054B2                     	endif
  8676  0054B2                     	if	0	;tblptru may be non-zero
  8677  0054B2                     	endif
  8678  0054B2  0008               	tblrd		*
  8679  0054B4  CFF5 F093          	movff	tablat,??_strncmp
  8680  0054B8  C096  FFF6         	movff	strncmp@r,tblptrl
  8681  0054BC  C097  FFF7         	movff	strncmp@r+1,tblptrh
  8682  0054C0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8683  0054C0  6AF8               	clrf	tblptru,c
  8684  0054C2                     	endif
  8685  0054C2                     	if	0	;tblptru may be non-zero
  8686  0054C2                     	endif
  8687  0054C2  0008               	tblrd		*
  8688  0054C4  50F5               	movf	tablat,w,c
  8689  0054C6  5D93               	subwf	??_strncmp& (0+255),w,b
  8690  0054C8  6F8D               	movwf	?_strncmp& (0+255),b
  8691  0054CA  6B8E               	clrf	(?_strncmp+1)& (0+255),b
  8692  0054CC  A0D8               	btfss	status,0,c
  8693  0054CE  078E               	decf	(?_strncmp+1)& (0+255),f,b
  8694  0054D0                     l1624:
  8695                           
  8696                           ; BSR set to: 0
  8697  0054D0  0012               	return		;funcret
  8698  0054D2                     __end_of_strncmp:
  8699                           	opt callstack 0
  8700                           
  8701 ;; *************** function _stoa *****************
  8702 ;; Defined at:
  8703 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8704 ;; Parameters:    Size  Location     Type
  8705 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  8706 ;;		 -> vsnprintf@f(6), NULL(0), 
  8707 ;;  s               2   58[BANK0 ] PTR unsigned char 
  8708 ;;		 -> ?_snprintf(2), ?_printf(2), 
  8709 ;; Auto vars:     Size  Location     Type
  8710 ;;  nuls            7   61[BANK0 ] unsigned char [7]
  8711 ;;  l               2   76[BANK0 ] int 
  8712 ;;  p               2   74[BANK0 ] int 
  8713 ;;  cp              2   72[BANK0 ] PTR unsigned char 
  8714 ;;		 -> ?_snprintf(2), ?_printf(2), stoa@nuls(7), 
  8715 ;;  w               2   70[BANK0 ] int 
  8716 ;;  i               2   68[BANK0 ] int 
  8717 ;; Return value:  Size  Location     Type
  8718 ;;                  2   56[BANK0 ] int 
  8719 ;; Registers used:
  8720 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8721 ;; Tracked objects:
  8722 ;;		On entry : 0/0
  8723 ;;		On exit  : 0/0
  8724 ;;		Unchanged: 0/0
  8725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8726 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8727 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8728 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8729 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8730 ;;Total ram usage:       22 bytes
  8731 ;; Hardware stack levels used:    1
  8732 ;; Hardware stack levels required when called:   16
  8733 ;; This function calls:
  8734 ;;		_fputc
  8735 ;;		_strlen
  8736 ;; This function is called by:
  8737 ;;		_vfpfcnvrt
  8738 ;; This function uses a non-reentrant model
  8739 ;;
  8740                           
  8741                           	psect	text20
  8742  004438                     __ptext20:
  8743                           	opt callstack 0
  8744  004438                     _stoa:
  8745                           	opt callstack 10
  8746  004438                     
  8747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8748  004438  EE20  F0CC         	lfsr	2,stoa@F1152
  8749  00443C  EE10  F09D         	lfsr	1,stoa@nuls
  8750  004440  0E06               	movlw	6
  8751  004442                     u10711:
  8752  004442  CFDB FFE3          	movff	plusw2,plusw1
  8753  004446  06E8               	decf	wreg,f,c
  8754  004448  E2FC               	bc	u10711
  8755  00444A                     
  8756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  8757  00444A  C09A  F0A8         	movff	stoa@s,stoa@cp
  8758  00444E  C09B  F0A9         	movff	stoa@s+1,stoa@cp+1
  8759  004452                     
  8760                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  8761  004452  0100               	movlb	0	; () banked
  8762  004454  51A8               	movf	stoa@cp& (0+255),w,b
  8763  004456  11A9               	iorwf	(stoa@cp+1)& (0+255),w,b
  8764  004458  A4D8               	btfss	status,2,c
  8765  00445A  EF31  F022         	goto	u10721
  8766  00445E  EF33  F022         	goto	u10720
  8767  004462                     u10721:
  8768  004462  EF37  F022         	goto	l8447
  8769  004466                     u10720:
  8770  004466                     
  8771                           ; BSR set to: 0
  8772                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  8773  004466  0E9D               	movlw	low stoa@nuls
  8774  004468  6FA8               	movwf	stoa@cp& (0+255),b
  8775  00446A  0E00               	movlw	high stoa@nuls
  8776  00446C  6FA9               	movwf	(stoa@cp+1)& (0+255),b
  8777  00446E                     l8447:
  8778                           
  8779                           ; BSR set to: 0
  8780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  8781  00446E  C0A8  F08D         	movff	stoa@cp,strlen@s
  8782  004472  C0A9  F08E         	movff	stoa@cp+1,strlen@s+1
  8783  004476  EC15  F032         	call	_strlen	;wreg free
  8784  00447A  C08D  F0AC         	movff	?_strlen,stoa@l
  8785  00447E  C08E  F0AD         	movff	?_strlen+1,stoa@l+1
  8786  004482                     
  8787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8788  004482  C0BB  F0AA         	movff	_prec,stoa@p
  8789  004486  C0BC  F0AB         	movff	_prec+1,stoa@p+1
  8790  00448A                     
  8791                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8792  00448A  0100               	movlb	0	; () banked
  8793  00448C  BFAB               	btfsc	(stoa@p+1)& (0+255),7,b
  8794  00448E  EF4B  F022         	goto	u10731
  8795  004492  EF4D  F022         	goto	u10730
  8796  004496                     u10731:
  8797  004496  EF62  F022         	goto	l701
  8798  00449A                     u10730:
  8799  00449A                     
  8800                           ; BSR set to: 0
  8801  00449A  51AC               	movf	stoa@l& (0+255),w,b
  8802  00449C  5DAA               	subwf	stoa@p& (0+255),w,b
  8803  00449E  51AB               	movf	(stoa@p+1)& (0+255),w,b
  8804  0044A0  0A80               	xorlw	128
  8805  0044A2  6F9C               	movwf	??_stoa& (0+255),b
  8806  0044A4  51AD               	movf	(stoa@l+1)& (0+255),w,b
  8807  0044A6  0A80               	xorlw	128
  8808  0044A8  599C               	subwfb	??_stoa& (0+255),w,b
  8809  0044AA  A0D8               	btfss	status,0,c
  8810  0044AC  EF5A  F022         	goto	u10741
  8811  0044B0  EF5C  F022         	goto	u10740
  8812  0044B4                     u10741:
  8813  0044B4  EF5E  F022         	goto	l699
  8814  0044B8                     u10740:
  8815  0044B8  EF62  F022         	goto	l701
  8816  0044BC                     l699:
  8817                           
  8818                           ; BSR set to: 0
  8819  0044BC  C0AA  F0AC         	movff	stoa@p,stoa@l
  8820  0044C0  C0AB  F0AD         	movff	stoa@p+1,stoa@l+1
  8821  0044C4                     l701:
  8822                           
  8823                           ; BSR set to: 0
  8824                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8825  0044C4  C0AC  F0AA         	movff	stoa@l,stoa@p
  8826  0044C8  C0AD  F0AB         	movff	stoa@l+1,stoa@p+1
  8827                           
  8828                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8829  0044CC  C0B9  F0A6         	movff	_width,stoa@w
  8830  0044D0  C0BA  F0A7         	movff	_width+1,stoa@w+1
  8831                           
  8832                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8833  0044D4  B1BD               	btfsc	_flags& (0+255),0,b
  8834  0044D6  EF6F  F022         	goto	u10751
  8835  0044DA  EF71  F022         	goto	u10750
  8836  0044DE                     u10751:
  8837  0044DE  EF8F  F022         	goto	l8463
  8838  0044E2                     u10750:
  8839  0044E2  EF80  F022         	goto	l8461
  8840  0044E6                     l8457:
  8841                           
  8842                           ; BSR set to: 0
  8843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8844  0044E6  0E00               	movlw	0
  8845  0044E8  6F90               	movwf	(fputc@c+1)& (0+255),b
  8846  0044EA  0E20               	movlw	32
  8847  0044EC  6F8F               	movwf	fputc@c& (0+255),b
  8848  0044EE  C098  F091         	movff	stoa@fp,fputc@fp
  8849  0044F2  C099  F092         	movff	stoa@fp+1,fputc@fp+1
  8850  0044F6  ECAF  F02B         	call	_fputc	;wreg free
  8851  0044FA                     
  8852                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8853  0044FA  0100               	movlb	0	; () banked
  8854  0044FC  4BAC               	infsnz	stoa@l& (0+255),f,b
  8855  0044FE  2BAD               	incf	(stoa@l+1)& (0+255),f,b
  8856  004500                     l8461:
  8857                           
  8858                           ; BSR set to: 0
  8859                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8860  004500  51A6               	movf	stoa@w& (0+255),w,b
  8861  004502  5DAC               	subwf	stoa@l& (0+255),w,b
  8862  004504  51AD               	movf	(stoa@l+1)& (0+255),w,b
  8863  004506  0A80               	xorlw	128
  8864  004508  6F9C               	movwf	??_stoa& (0+255),b
  8865  00450A  51A7               	movf	(stoa@w+1)& (0+255),w,b
  8866  00450C  0A80               	xorlw	128
  8867  00450E  599C               	subwfb	??_stoa& (0+255),w,b
  8868  004510  A0D8               	btfss	status,0,c
  8869  004512  EF8D  F022         	goto	u10761
  8870  004516  EF8F  F022         	goto	u10760
  8871  00451A                     u10761:
  8872  00451A  EF73  F022         	goto	l8457
  8873  00451E                     u10760:
  8874  00451E                     l8463:
  8875                           
  8876                           ; BSR set to: 0
  8877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  8878  00451E  0E00               	movlw	0
  8879  004520  6FA5               	movwf	(stoa@i+1)& (0+255),b
  8880  004522  0E00               	movlw	0
  8881  004524  6FA4               	movwf	stoa@i& (0+255),b
  8882                           
  8883                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8884  004526  EFA9  F022         	goto	l8471
  8885  00452A                     l8465:
  8886                           
  8887                           ; BSR set to: 0
  8888                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  8889  00452A  C0A8  FFD9         	movff	stoa@cp,fsr2l
  8890  00452E  C0A9  FFDA         	movff	stoa@cp+1,fsr2h
  8891  004532  50DF               	movf	indf2,w,c
  8892  004534  6F9C               	movwf	??_stoa& (0+255),b
  8893  004536  519C               	movf	??_stoa& (0+255),w,b
  8894  004538  6F8F               	movwf	fputc@c& (0+255),b
  8895  00453A  6B90               	clrf	(fputc@c+1)& (0+255),b
  8896  00453C  C098  F091         	movff	stoa@fp,fputc@fp
  8897  004540  C099  F092         	movff	stoa@fp+1,fputc@fp+1
  8898  004544  ECAF  F02B         	call	_fputc	;wreg free
  8899  004548                     
  8900                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  8901  004548  0100               	movlb	0	; () banked
  8902  00454A  4BA8               	infsnz	stoa@cp& (0+255),f,b
  8903  00454C  2BA9               	incf	(stoa@cp+1)& (0+255),f,b
  8904  00454E                     
  8905                           ; BSR set to: 0
  8906                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  8907  00454E  4BA4               	infsnz	stoa@i& (0+255),f,b
  8908  004550  2BA5               	incf	(stoa@i+1)& (0+255),f,b
  8909  004552                     l8471:
  8910                           
  8911                           ; BSR set to: 0
  8912                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8913  004552  51AA               	movf	stoa@p& (0+255),w,b
  8914  004554  5DA4               	subwf	stoa@i& (0+255),w,b
  8915  004556  51A5               	movf	(stoa@i+1)& (0+255),w,b
  8916  004558  0A80               	xorlw	128
  8917  00455A  6F9C               	movwf	??_stoa& (0+255),b
  8918  00455C  51AB               	movf	(stoa@p+1)& (0+255),w,b
  8919  00455E  0A80               	xorlw	128
  8920  004560  599C               	subwfb	??_stoa& (0+255),w,b
  8921  004562  A0D8               	btfss	status,0,c
  8922  004564  EFB6  F022         	goto	u10771
  8923  004568  EFB8  F022         	goto	u10770
  8924  00456C                     u10771:
  8925  00456C  EF95  F022         	goto	l8465
  8926  004570                     u10770:
  8927  004570                     
  8928                           ; BSR set to: 0
  8929                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  8930  004570  A1BD               	btfss	_flags& (0+255),0,b
  8931  004572  EFBD  F022         	goto	u10781
  8932  004576  EFBF  F022         	goto	u10780
  8933  00457A                     u10781:
  8934  00457A  EFDD  F022         	goto	l711
  8935  00457E                     u10780:
  8936  00457E  EFCE  F022         	goto	l8479
  8937  004582                     l8475:
  8938                           
  8939                           ; BSR set to: 0
  8940                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  8941  004582  0E00               	movlw	0
  8942  004584  6F90               	movwf	(fputc@c+1)& (0+255),b
  8943  004586  0E20               	movlw	32
  8944  004588  6F8F               	movwf	fputc@c& (0+255),b
  8945  00458A  C098  F091         	movff	stoa@fp,fputc@fp
  8946  00458E  C099  F092         	movff	stoa@fp+1,fputc@fp+1
  8947  004592  ECAF  F02B         	call	_fputc	;wreg free
  8948  004596                     
  8949                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  8950  004596  0100               	movlb	0	; () banked
  8951  004598  4BAC               	infsnz	stoa@l& (0+255),f,b
  8952  00459A  2BAD               	incf	(stoa@l+1)& (0+255),f,b
  8953  00459C                     l8479:
  8954                           
  8955                           ; BSR set to: 0
  8956                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  8957  00459C  51A6               	movf	stoa@w& (0+255),w,b
  8958  00459E  5DAC               	subwf	stoa@l& (0+255),w,b
  8959  0045A0  51AD               	movf	(stoa@l+1)& (0+255),w,b
  8960  0045A2  0A80               	xorlw	128
  8961  0045A4  6F9C               	movwf	??_stoa& (0+255),b
  8962  0045A6  51A7               	movf	(stoa@w+1)& (0+255),w,b
  8963  0045A8  0A80               	xorlw	128
  8964  0045AA  599C               	subwfb	??_stoa& (0+255),w,b
  8965  0045AC  A0D8               	btfss	status,0,c
  8966  0045AE  EFDB  F022         	goto	u10791
  8967  0045B2  EFDD  F022         	goto	u10790
  8968  0045B6                     u10791:
  8969  0045B6  EFC1  F022         	goto	l8475
  8970  0045BA                     u10790:
  8971  0045BA                     l711:
  8972                           
  8973                           ; BSR set to: 0
  8974                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  8975  0045BA  C0AC  F098         	movff	stoa@l,?_stoa
  8976  0045BE  C0AD  F099         	movff	stoa@l+1,?_stoa+1
  8977  0045C2                     
  8978                           ; BSR set to: 0
  8979  0045C2  0012               	return		;funcret
  8980  0045C4                     __end_of_stoa:
  8981                           	opt callstack 0
  8982                           
  8983 ;; *************** function _otoa *****************
  8984 ;; Defined at:
  8985 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8986 ;; Parameters:    Size  Location     Type
  8987 ;;  fp              2   74[BANK0 ] PTR struct _IO_FILE
  8988 ;;		 -> vsnprintf@f(6), NULL(0), 
  8989 ;;  d               8   76[BANK0 ] unsigned long long 
  8990 ;; Auto vars:     Size  Location     Type
  8991 ;;  n               8   14[BANK1 ] unsigned long long 
  8992 ;;  i               2   22[BANK1 ] int 
  8993 ;;  w               2   12[BANK1 ] int 
  8994 ;;  t               2   10[BANK1 ] int 
  8995 ;;  p               2    8[BANK1 ] int 
  8996 ;; Return value:  Size  Location     Type
  8997 ;;                  2   74[BANK0 ] int 
  8998 ;; Registers used:
  8999 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9000 ;; Tracked objects:
  9001 ;;		On entry : 0/0
  9002 ;;		On exit  : 0/0
  9003 ;;		Unchanged: 0/0
  9004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9005 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9006 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9007 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9008 ;;      Totals:         0      10      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9009 ;;Total ram usage:       34 bytes
  9010 ;; Hardware stack levels used:    1
  9011 ;; Hardware stack levels required when called:   18
  9012 ;; This function calls:
  9013 ;;		_pad
  9014 ;; This function is called by:
  9015 ;;		_vfpfcnvrt
  9016 ;; This function uses a non-reentrant model
  9017 ;;
  9018                           
  9019                           	psect	text21
  9020  00404A                     __ptext21:
  9021                           	opt callstack 0
  9022  00404A                     _otoa:
  9023                           	opt callstack 8
  9024  00404A                     
  9025                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  9026  00404A  0100               	movlb	0	; () banked
  9027  00404C  BFBC               	btfsc	(_prec+1)& (0+255),7,b
  9028  00404E  EF2B  F020         	goto	u10611
  9029  004052  EF2D  F020         	goto	u10610
  9030  004056                     u10611:
  9031  004056  EF2E  F020         	goto	l8395
  9032  00405A                     u10610:
  9033  00405A                     
  9034                           ; BSR set to: 0
  9035                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  9036  00405A  93BD               	bcf	_flags& (0+255),1,b
  9037  00405C                     l8395:
  9038                           
  9039                           ; BSR set to: 0
  9040                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  9041  00405C  BFBC               	btfsc	(_prec+1)& (0+255),7,b
  9042  00405E  EF3B  F020         	goto	u10620
  9043  004062  51BC               	movf	(_prec+1)& (0+255),w,b
  9044  004064  E106               	bnz	u10621
  9045  004066  05BB               	decf	_prec& (0+255),w,b
  9046  004068  B0D8               	btfsc	status,0,c
  9047  00406A  EF39  F020         	goto	u10621
  9048  00406E  EF3B  F020         	goto	u10620
  9049  004072                     u10621:
  9050  004072  EF42  F020         	goto	l681
  9051  004076                     u10620:
  9052  004076                     
  9053                           ; BSR set to: 0
  9054  004076  0E00               	movlw	0
  9055  004078  0101               	movlb	1	; () banked
  9056  00407A  6F09               	movwf	(otoa@p+1)& (0+255),b
  9057  00407C  0E01               	movlw	1
  9058  00407E  6F08               	movwf	otoa@p& (0+255),b
  9059  004080  EF46  F020         	goto	l683
  9060  004084                     l681:
  9061                           
  9062                           ; BSR set to: 0
  9063  004084  C0BB  F108         	movff	_prec,otoa@p
  9064  004088  C0BC  F109         	movff	_prec+1,otoa@p+1
  9065  00408C                     l683:
  9066                           
  9067                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  9068  00408C  C0B9  F10C         	movff	_width,otoa@w
  9069  004090  C0BA  F10D         	movff	_width+1,otoa@w+1
  9070                           
  9071                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  9072  004094  C0AC  F10E         	movff	otoa@d,otoa@n
  9073  004098  C0AD  F10F         	movff	otoa@d+1,otoa@n+1
  9074  00409C  C0AE  F110         	movff	otoa@d+2,otoa@n+2
  9075  0040A0  C0AF  F111         	movff	otoa@d+3,otoa@n+3
  9076  0040A4  C0B0  F112         	movff	otoa@d+4,otoa@n+4
  9077  0040A8  C0B1  F113         	movff	otoa@d+5,otoa@n+5
  9078  0040AC  C0B2  F114         	movff	otoa@d+6,otoa@n+6
  9079  0040B0  C0B3  F115         	movff	otoa@d+7,otoa@n+7
  9080  0040B4                     
  9081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  9082  0040B4  0E00               	movlw	0
  9083  0040B6  0101               	movlb	1	; () banked
  9084  0040B8  6F17               	movwf	(otoa@i+1)& (0+255),b
  9085  0040BA  0E1F               	movlw	31
  9086  0040BC  6F16               	movwf	otoa@i& (0+255),b
  9087  0040BE                     
  9088                           ; BSR set to: 1
  9089                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  9090  0040BE  0E00               	movlw	0
  9091  0040C0  6F97               	movwf	(_dbuf+31)& (0+255),b
  9092  0040C2                     
  9093                           ; BSR set to: 1
  9094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  9095  0040C2  0E00               	movlw	0
  9096  0040C4  6F0B               	movwf	(otoa@t+1)& (0+255),b
  9097  0040C6  0E00               	movlw	0
  9098  0040C8  6F0A               	movwf	otoa@t& (0+255),b
  9099                           
  9100                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9101  0040CA  EFAD  F020         	goto	l8417
  9102  0040CE                     l8405:
  9103                           
  9104                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  9105  0040CE  0101               	movlb	1	; () banked
  9106  0040D0  0716               	decf	otoa@i& (0+255),f,b
  9107  0040D2  A0D8               	btfss	status,0,c
  9108  0040D4  0717               	decf	(otoa@i+1)& (0+255),f,b
  9109  0040D6                     
  9110                           ; BSR set to: 1
  9111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  9112  0040D6  0E07               	movlw	7
  9113  0040D8  150E               	andwf	otoa@n& (0+255),w,b
  9114  0040DA  6F0A               	movwf	otoa@t& (0+255),b
  9115  0040DC  6B0B               	clrf	(otoa@t+1)& (0+255),b
  9116  0040DE                     
  9117                           ; BSR set to: 1
  9118                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  9119  0040DE  0E78               	movlw	low _dbuf
  9120  0040E0  2516               	addwf	otoa@i& (0+255),w,b
  9121  0040E2  6ED9               	movwf	fsr2l,c
  9122  0040E4  0E01               	movlw	high _dbuf
  9123  0040E6  2117               	addwfc	(otoa@i+1)& (0+255),w,b
  9124  0040E8  6EDA               	movwf	fsr2h,c
  9125  0040EA  510A               	movf	otoa@t& (0+255),w,b
  9126  0040EC  0F30               	addlw	48
  9127  0040EE  6EDF               	movwf	indf2,c
  9128  0040F0                     
  9129                           ; BSR set to: 1
  9130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  9131  0040F0  0708               	decf	otoa@p& (0+255),f,b
  9132  0040F2  A0D8               	btfss	status,0,c
  9133  0040F4  0709               	decf	(otoa@p+1)& (0+255),f,b
  9134  0040F6                     
  9135                           ; BSR set to: 1
  9136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  9137  0040F6  070C               	decf	otoa@w& (0+255),f,b
  9138  0040F8  A0D8               	btfss	status,0,c
  9139  0040FA  070D               	decf	(otoa@w+1)& (0+255),f,b
  9140  0040FC                     
  9141                           ; BSR set to: 1
  9142                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  9143  0040FC  C10E  F100         	movff	otoa@n,??_otoa
  9144  004100  C10F  F101         	movff	otoa@n+1,??_otoa+1
  9145  004104  C110  F102         	movff	otoa@n+2,??_otoa+2
  9146  004108  C111  F103         	movff	otoa@n+3,??_otoa+3
  9147  00410C  C112  F104         	movff	otoa@n+4,??_otoa+4
  9148  004110  C113  F105         	movff	otoa@n+5,??_otoa+5
  9149  004114  C114  F106         	movff	otoa@n+6,??_otoa+6
  9150  004118  C115  F107         	movff	otoa@n+7,??_otoa+7
  9151  00411C  0E04               	movlw	4
  9152  00411E  EF9A  F020         	goto	u10630
  9153  004122                     u10635:
  9154  004122  90D8               	bcf	status,0,c
  9155  004124  3307               	rrcf	(??_otoa+7)& (0+255),f,b
  9156  004126  3306               	rrcf	(??_otoa+6)& (0+255),f,b
  9157  004128  3305               	rrcf	(??_otoa+5)& (0+255),f,b
  9158  00412A  3304               	rrcf	(??_otoa+4)& (0+255),f,b
  9159  00412C  3303               	rrcf	(??_otoa+3)& (0+255),f,b
  9160  00412E  3302               	rrcf	(??_otoa+2)& (0+255),f,b
  9161  004130  3301               	rrcf	(??_otoa+1)& (0+255),f,b
  9162  004132  3300               	rrcf	??_otoa& (0+255),f,b
  9163  004134                     u10630:
  9164  004134  2EE8               	decfsz	wreg,f,c
  9165  004136  EF91  F020         	goto	u10635
  9166  00413A  C100  F10E         	movff	??_otoa,otoa@n
  9167  00413E  C101  F10F         	movff	??_otoa+1,otoa@n+1
  9168  004142  C102  F110         	movff	??_otoa+2,otoa@n+2
  9169  004146  C103  F111         	movff	??_otoa+3,otoa@n+3
  9170  00414A  C104  F112         	movff	??_otoa+4,otoa@n+4
  9171  00414E  C105  F113         	movff	??_otoa+5,otoa@n+5
  9172  004152  C106  F114         	movff	??_otoa+6,otoa@n+6
  9173  004156  C107  F115         	movff	??_otoa+7,otoa@n+7
  9174  00415A                     l8417:
  9175                           
  9176                           ; BSR set to: 1
  9177                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9178  00415A  BF17               	btfsc	(otoa@i+1)& (0+255),7,b
  9179  00415C  EFB8  F020         	goto	u10641
  9180  004160  5117               	movf	(otoa@i+1)& (0+255),w,b
  9181  004162  E108               	bnz	u10640
  9182  004164  0516               	decf	otoa@i& (0+255),w,b
  9183  004166  A0D8               	btfss	status,0,c
  9184  004168  EFB8  F020         	goto	u10641
  9185  00416C  EFBA  F020         	goto	u10640
  9186  004170                     u10641:
  9187  004170  EFEB  F020         	goto	l690
  9188  004174                     u10640:
  9189  004174                     
  9190                           ; BSR set to: 1
  9191  004174  510E               	movf	otoa@n& (0+255),w,b
  9192  004176  110F               	iorwf	(otoa@n+1)& (0+255),w,b
  9193  004178  1110               	iorwf	(otoa@n+2)& (0+255),w,b
  9194  00417A  1111               	iorwf	(otoa@n+3)& (0+255),w,b
  9195  00417C  1112               	iorwf	(otoa@n+4)& (0+255),w,b
  9196  00417E  1113               	iorwf	(otoa@n+5)& (0+255),w,b
  9197  004180  1114               	iorwf	(otoa@n+6)& (0+255),w,b
  9198  004182  1115               	iorwf	(otoa@n+7)& (0+255),w,b
  9199  004184  A4D8               	btfss	status,2,c
  9200  004186  EFC7  F020         	goto	u10651
  9201  00418A  EFC9  F020         	goto	u10650
  9202  00418E                     u10651:
  9203  00418E  EF67  F020         	goto	l8405
  9204  004192                     u10650:
  9205  004192                     
  9206                           ; BSR set to: 1
  9207  004192  BF09               	btfsc	(otoa@p+1)& (0+255),7,b
  9208  004194  EFD6  F020         	goto	u10660
  9209  004198  5109               	movf	(otoa@p+1)& (0+255),w,b
  9210  00419A  E106               	bnz	u10661
  9211  00419C  0508               	decf	otoa@p& (0+255),w,b
  9212  00419E  B0D8               	btfsc	status,0,c
  9213  0041A0  EFD4  F020         	goto	u10661
  9214  0041A4  EFD6  F020         	goto	u10660
  9215  0041A8                     u10661:
  9216  0041A8  EF67  F020         	goto	l8405
  9217  0041AC                     u10660:
  9218  0041AC                     
  9219                           ; BSR set to: 1
  9220  0041AC  BF0D               	btfsc	(otoa@w+1)& (0+255),7,b
  9221  0041AE  EFE1  F020         	goto	u10671
  9222  0041B2  510D               	movf	(otoa@w+1)& (0+255),w,b
  9223  0041B4  E108               	bnz	u10670
  9224  0041B6  050C               	decf	otoa@w& (0+255),w,b
  9225  0041B8  A0D8               	btfss	status,0,c
  9226  0041BA  EFE1  F020         	goto	u10671
  9227  0041BE  EFE3  F020         	goto	u10670
  9228  0041C2                     u10671:
  9229  0041C2  EFEB  F020         	goto	l690
  9230  0041C6                     u10670:
  9231  0041C6                     
  9232                           ; BSR set to: 1
  9233  0041C6  0100               	movlb	0	; () banked
  9234  0041C8  B3BD               	btfsc	_flags& (0+255),1,b
  9235  0041CA  EFE9  F020         	goto	u10681
  9236  0041CE  EFEB  F020         	goto	u10680
  9237  0041D2                     u10681:
  9238  0041D2  EF67  F020         	goto	l8405
  9239  0041D6                     u10680:
  9240  0041D6                     l690:
  9241                           
  9242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  9243  0041D6  0100               	movlb	0	; () banked
  9244  0041D8  A9BD               	btfss	_flags& (0+255),4,b
  9245  0041DA  EFF1  F020         	goto	u10691
  9246  0041DE  EFF3  F020         	goto	u10690
  9247  0041E2                     u10691:
  9248  0041E2  EF0B  F021         	goto	l8435
  9249  0041E6                     u10690:
  9250  0041E6                     
  9251                           ; BSR set to: 0
  9252  0041E6  0101               	movlb	1	; () banked
  9253  0041E8  510A               	movf	otoa@t& (0+255),w,b
  9254  0041EA  110B               	iorwf	(otoa@t+1)& (0+255),w,b
  9255  0041EC  B4D8               	btfsc	status,2,c
  9256  0041EE  EFFB  F020         	goto	u10701
  9257  0041F2  EFFD  F020         	goto	u10700
  9258  0041F6                     u10701:
  9259  0041F6  EF0B  F021         	goto	l8435
  9260  0041FA                     u10700:
  9261  0041FA                     
  9262                           ; BSR set to: 1
  9263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  9264  0041FA  0716               	decf	otoa@i& (0+255),f,b
  9265  0041FC  A0D8               	btfss	status,0,c
  9266  0041FE  0717               	decf	(otoa@i+1)& (0+255),f,b
  9267  004200                     
  9268                           ; BSR set to: 1
  9269                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  9270  004200  0E78               	movlw	low _dbuf
  9271  004202  2516               	addwf	otoa@i& (0+255),w,b
  9272  004204  6ED9               	movwf	fsr2l,c
  9273  004206  0E01               	movlw	high _dbuf
  9274  004208  2117               	addwfc	(otoa@i+1)& (0+255),w,b
  9275  00420A  6EDA               	movwf	fsr2h,c
  9276  00420C  0E30               	movlw	48
  9277  00420E  6EDF               	movwf	indf2,c
  9278  004210                     
  9279                           ; BSR set to: 1
  9280                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  9281  004210  070C               	decf	otoa@w& (0+255),f,b
  9282  004212  A0D8               	btfss	status,0,c
  9283  004214  070D               	decf	(otoa@w+1)& (0+255),f,b
  9284  004216                     l8435:
  9285                           
  9286                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  9287  004216  C0AA  F09F         	movff	otoa@fp,pad@fp
  9288  00421A  C0AB  F0A0         	movff	otoa@fp+1,pad@fp+1
  9289  00421E  0E78               	movlw	low _dbuf
  9290  004220  0101               	movlb	1	; () banked
  9291  004222  2516               	addwf	otoa@i& (0+255),w,b
  9292  004224  0100               	movlb	0	; () banked
  9293  004226  6FA1               	movwf	pad@buf& (0+255),b
  9294  004228  0E01               	movlw	high _dbuf
  9295  00422A  0101               	movlb	1	; () banked
  9296  00422C  2117               	addwfc	(otoa@i+1)& (0+255),w,b
  9297  00422E  0100               	movlb	0	; () banked
  9298  004230  6FA2               	movwf	(pad@buf+1)& (0+255),b
  9299  004232  C10C  F0A3         	movff	otoa@w,pad@p
  9300  004236  C10D  F0A4         	movff	otoa@w+1,pad@p+1
  9301  00423A  EC15  F02C         	call	_pad	;wreg free
  9302  00423E  C09F  F0AA         	movff	?_pad,?_otoa
  9303  004242  C0A0  F0AB         	movff	?_pad+1,?_otoa+1
  9304  004246  0012               	return		;funcret
  9305  004248                     __end_of_otoa:
  9306                           	opt callstack 0
  9307                           
  9308 ;; *************** function _dtoa *****************
  9309 ;; Defined at:
  9310 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9311 ;; Parameters:    Size  Location     Type
  9312 ;;  fp              2   74[BANK0 ] PTR struct _IO_FILE
  9313 ;;		 -> vsnprintf@f(6), NULL(0), 
  9314 ;;  d               8   76[BANK0 ] long long 
  9315 ;; Auto vars:     Size  Location     Type
  9316 ;;  n               8   16[BANK1 ] long long 
  9317 ;;  i               2   24[BANK1 ] int 
  9318 ;;  s               2   14[BANK1 ] int 
  9319 ;;  w               2   12[BANK1 ] int 
  9320 ;;  p               2   10[BANK1 ] int 
  9321 ;; Return value:  Size  Location     Type
  9322 ;;                  2   74[BANK0 ] int 
  9323 ;; Registers used:
  9324 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9325 ;; Tracked objects:
  9326 ;;		On entry : 0/0
  9327 ;;		On exit  : 0/0
  9328 ;;		Unchanged: 0/0
  9329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9330 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9331 ;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9332 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9333 ;;      Totals:         0      10      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9334 ;;Total ram usage:       36 bytes
  9335 ;; Hardware stack levels used:    1
  9336 ;; Hardware stack levels required when called:   18
  9337 ;; This function calls:
  9338 ;;		___aodiv
  9339 ;;		___aomod
  9340 ;;		_abs
  9341 ;;		_pad
  9342 ;; This function is called by:
  9343 ;;		_vfpfcnvrt
  9344 ;; This function uses a non-reentrant model
  9345 ;;
  9346                           
  9347                           	psect	text22
  9348  002A00                     __ptext22:
  9349                           	opt callstack 0
  9350  002A00                     _dtoa:
  9351                           	opt callstack 8
  9352  002A00                     
  9353                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  9354  002A00  C0AC  F110         	movff	dtoa@d,dtoa@n
  9355  002A04  C0AD  F111         	movff	dtoa@d+1,dtoa@n+1
  9356  002A08  C0AE  F112         	movff	dtoa@d+2,dtoa@n+2
  9357  002A0C  C0AF  F113         	movff	dtoa@d+3,dtoa@n+3
  9358  002A10  C0B0  F114         	movff	dtoa@d+4,dtoa@n+4
  9359  002A14  C0B1  F115         	movff	dtoa@d+5,dtoa@n+5
  9360  002A18  C0B2  F116         	movff	dtoa@d+6,dtoa@n+6
  9361  002A1C  C0B3  F117         	movff	dtoa@d+7,dtoa@n+7
  9362  002A20                     
  9363                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  9364  002A20  0101               	movlb	1	; () banked
  9365  002A22  BF17               	btfsc	(dtoa@n+7)& (0+255),7,b
  9366  002A24  EF16  F015         	goto	u10461
  9367  002A28  EF19  F015         	goto	u10460
  9368  002A2C                     u10461:
  9369  002A2C  0E01               	movlw	1
  9370  002A2E  EF1A  F015         	goto	u10470
  9371  002A32                     u10460:
  9372  002A32  0E00               	movlw	0
  9373  002A34                     u10470:
  9374  002A34  6F0E               	movwf	dtoa@s& (0+255),b
  9375  002A36  6B0F               	clrf	(dtoa@s+1)& (0+255),b
  9376                           
  9377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  9378  002A38  510E               	movf	dtoa@s& (0+255),w,b
  9379  002A3A  110F               	iorwf	(dtoa@s+1)& (0+255),w,b
  9380  002A3C  B4D8               	btfsc	status,2,c
  9381  002A3E  EF23  F015         	goto	u10481
  9382  002A42  EF25  F015         	goto	u10480
  9383  002A46                     u10481:
  9384  002A46  EF35  F015         	goto	l8335
  9385  002A4A                     u10480:
  9386  002A4A                     
  9387                           ; BSR set to: 1
  9388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  9389  002A4A  1F17               	comf	(dtoa@n+7)& (0+255),f,b
  9390  002A4C  1F16               	comf	(dtoa@n+6)& (0+255),f,b
  9391  002A4E  1F15               	comf	(dtoa@n+5)& (0+255),f,b
  9392  002A50  1F14               	comf	(dtoa@n+4)& (0+255),f,b
  9393  002A52  1F13               	comf	(dtoa@n+3)& (0+255),f,b
  9394  002A54  1F12               	comf	(dtoa@n+2)& (0+255),f,b
  9395  002A56  1F11               	comf	(dtoa@n+1)& (0+255),f,b
  9396  002A58  6D10               	negf	dtoa@n& (0+255),b
  9397  002A5A  0E00               	movlw	0
  9398  002A5C  2311               	addwfc	(dtoa@n+1)& (0+255),f,b
  9399  002A5E  2312               	addwfc	(dtoa@n+2)& (0+255),f,b
  9400  002A60  2313               	addwfc	(dtoa@n+3)& (0+255),f,b
  9401  002A62  2314               	addwfc	(dtoa@n+4)& (0+255),f,b
  9402  002A64  2315               	addwfc	(dtoa@n+5)& (0+255),f,b
  9403  002A66  2316               	addwfc	(dtoa@n+6)& (0+255),f,b
  9404  002A68  2317               	addwfc	(dtoa@n+7)& (0+255),f,b
  9405  002A6A                     l8335:
  9406                           
  9407                           ; BSR set to: 1
  9408                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  9409  002A6A  0100               	movlb	0	; () banked
  9410  002A6C  BFBC               	btfsc	(_prec+1)& (0+255),7,b
  9411  002A6E  EF3B  F015         	goto	u10491
  9412  002A72  EF3D  F015         	goto	u10490
  9413  002A76                     u10491:
  9414  002A76  EF3E  F015         	goto	l8339
  9415  002A7A                     u10490:
  9416  002A7A                     
  9417                           ; BSR set to: 0
  9418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  9419  002A7A  93BD               	bcf	_flags& (0+255),1,b
  9420  002A7C                     l8339:
  9421                           
  9422                           ; BSR set to: 0
  9423                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  9424  002A7C  BFBC               	btfsc	(_prec+1)& (0+255),7,b
  9425  002A7E  EF4B  F015         	goto	u10500
  9426  002A82  51BC               	movf	(_prec+1)& (0+255),w,b
  9427  002A84  E106               	bnz	u10501
  9428  002A86  05BB               	decf	_prec& (0+255),w,b
  9429  002A88  B0D8               	btfsc	status,0,c
  9430  002A8A  EF49  F015         	goto	u10501
  9431  002A8E  EF4B  F015         	goto	u10500
  9432  002A92                     u10501:
  9433  002A92  EF52  F015         	goto	l656
  9434  002A96                     u10500:
  9435  002A96                     
  9436                           ; BSR set to: 0
  9437  002A96  0E00               	movlw	0
  9438  002A98  0101               	movlb	1	; () banked
  9439  002A9A  6F0B               	movwf	(dtoa@p+1)& (0+255),b
  9440  002A9C  0E01               	movlw	1
  9441  002A9E  6F0A               	movwf	dtoa@p& (0+255),b
  9442  002AA0  EF56  F015         	goto	l658
  9443  002AA4                     l656:
  9444                           
  9445                           ; BSR set to: 0
  9446  002AA4  C0BB  F10A         	movff	_prec,dtoa@p
  9447  002AA8  C0BC  F10B         	movff	_prec+1,dtoa@p+1
  9448  002AAC                     l658:
  9449                           
  9450                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  9451  002AAC  C0B9  F10C         	movff	_width,dtoa@w
  9452  002AB0  C0BA  F10D         	movff	_width+1,dtoa@w+1
  9453  002AB4                     
  9454                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  9455  002AB4  0101               	movlb	1	; () banked
  9456  002AB6  510E               	movf	dtoa@s& (0+255),w,b
  9457  002AB8  110F               	iorwf	(dtoa@s+1)& (0+255),w,b
  9458  002ABA  A4D8               	btfss	status,2,c
  9459  002ABC  EF62  F015         	goto	u10511
  9460  002AC0  EF64  F015         	goto	u10510
  9461  002AC4                     u10511:
  9462  002AC4  EF6C  F015         	goto	l8347
  9463  002AC8                     u10510:
  9464  002AC8                     
  9465                           ; BSR set to: 1
  9466  002AC8  0100               	movlb	0	; () banked
  9467  002ACA  A5BD               	btfss	_flags& (0+255),2,b
  9468  002ACC  EF6A  F015         	goto	u10521
  9469  002AD0  EF6C  F015         	goto	u10520
  9470  002AD4                     u10521:
  9471  002AD4  EF70  F015         	goto	l8349
  9472  002AD8                     u10520:
  9473  002AD8                     l8347:
  9474                           
  9475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  9476  002AD8  0101               	movlb	1	; () banked
  9477  002ADA  070C               	decf	dtoa@w& (0+255),f,b
  9478  002ADC  A0D8               	btfss	status,0,c
  9479  002ADE  070D               	decf	(dtoa@w+1)& (0+255),f,b
  9480  002AE0                     l8349:
  9481                           
  9482                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  9483  002AE0  0E00               	movlw	0
  9484  002AE2  0101               	movlb	1	; () banked
  9485  002AE4  6F19               	movwf	(dtoa@i+1)& (0+255),b
  9486  002AE6  0E1F               	movlw	31
  9487  002AE8  6F18               	movwf	dtoa@i& (0+255),b
  9488  002AEA                     
  9489                           ; BSR set to: 1
  9490                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  9491  002AEA  0E00               	movlw	0
  9492  002AEC  6F97               	movwf	(_dbuf+31)& (0+255),b
  9493                           
  9494                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9495  002AEE  EFFA  F015         	goto	l8363
  9496  002AF2                     l8353:
  9497                           
  9498                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  9499  002AF2  0101               	movlb	1	; () banked
  9500  002AF4  0718               	decf	dtoa@i& (0+255),f,b
  9501  002AF6  A0D8               	btfss	status,0,c
  9502  002AF8  0719               	decf	(dtoa@i+1)& (0+255),f,b
  9503  002AFA                     
  9504                           ; BSR set to: 1
  9505                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  9506  002AFA  0E78               	movlw	low _dbuf
  9507  002AFC  2518               	addwf	dtoa@i& (0+255),w,b
  9508  002AFE  6ED9               	movwf	fsr2l,c
  9509  002B00  0E01               	movlw	high _dbuf
  9510  002B02  2119               	addwfc	(dtoa@i+1)& (0+255),w,b
  9511  002B04  6EDA               	movwf	fsr2h,c
  9512  002B06  C110  F08D         	movff	dtoa@n,___aomod@dividend
  9513  002B0A  C111  F08E         	movff	dtoa@n+1,___aomod@dividend+1
  9514  002B0E  C112  F08F         	movff	dtoa@n+2,___aomod@dividend+2
  9515  002B12  C113  F090         	movff	dtoa@n+3,___aomod@dividend+3
  9516  002B16  C114  F091         	movff	dtoa@n+4,___aomod@dividend+4
  9517  002B1A  C115  F092         	movff	dtoa@n+5,___aomod@dividend+5
  9518  002B1E  C116  F093         	movff	dtoa@n+6,___aomod@dividend+6
  9519  002B22  C117  F094         	movff	dtoa@n+7,___aomod@dividend+7
  9520  002B26  0E0A               	movlw	10
  9521  002B28  0100               	movlb	0	; () banked
  9522  002B2A  6F95               	movwf	___aomod@divisor& (0+255),b
  9523  002B2C  0E00               	movlw	0
  9524  002B2E  6F96               	movwf	(___aomod@divisor+1)& (0+255),b
  9525  002B30  0E00               	movlw	0
  9526  002B32  6F97               	movwf	(___aomod@divisor+2)& (0+255),b
  9527  002B34  0E00               	movlw	0
  9528  002B36  6F98               	movwf	(___aomod@divisor+3)& (0+255),b
  9529  002B38  0E00               	movlw	0
  9530  002B3A  6F99               	movwf	(___aomod@divisor+4)& (0+255),b
  9531  002B3C  0E00               	movlw	0
  9532  002B3E  6F9A               	movwf	(___aomod@divisor+5)& (0+255),b
  9533  002B40  0E00               	movlw	0
  9534  002B42  6F9B               	movwf	(___aomod@divisor+6)& (0+255),b
  9535  002B44  0E00               	movlw	0
  9536  002B46  6F9C               	movwf	(___aomod@divisor+7)& (0+255),b
  9537  002B48  ECEF  F025         	call	___aomod	;wreg free
  9538  002B4C  C08D  F100         	movff	?___aomod,??_dtoa
  9539  002B50  C08E  F101         	movff	?___aomod+1,??_dtoa+1
  9540  002B54  C08F  F102         	movff	?___aomod+2,??_dtoa+2
  9541  002B58  C090  F103         	movff	?___aomod+3,??_dtoa+3
  9542  002B5C  C091  F104         	movff	?___aomod+4,??_dtoa+4
  9543  002B60  C092  F105         	movff	?___aomod+5,??_dtoa+5
  9544  002B64  C093  F106         	movff	?___aomod+6,??_dtoa+6
  9545  002B68  C094  F107         	movff	?___aomod+7,??_dtoa+7
  9546  002B6C  C100  F09F         	movff	??_dtoa,abs@a
  9547  002B70  C102  F0A0         	movff	??_dtoa+2,abs@a+1
  9548  002B74  EC1C  F031         	call	_abs	;wreg free
  9549  002B78  0100               	movlb	0	; () banked
  9550  002B7A  519F               	movf	?_abs& (0+255),w,b
  9551  002B7C  0F30               	addlw	48
  9552  002B7E  6EDF               	movwf	indf2,c
  9553  002B80                     
  9554                           ; BSR set to: 0
  9555                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  9556  002B80  0101               	movlb	1	; () banked
  9557  002B82  070A               	decf	dtoa@p& (0+255),f,b
  9558  002B84  A0D8               	btfss	status,0,c
  9559  002B86  070B               	decf	(dtoa@p+1)& (0+255),f,b
  9560  002B88                     
  9561                           ; BSR set to: 1
  9562                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  9563  002B88  070C               	decf	dtoa@w& (0+255),f,b
  9564  002B8A  A0D8               	btfss	status,0,c
  9565  002B8C  070D               	decf	(dtoa@w+1)& (0+255),f,b
  9566  002B8E                     
  9567                           ; BSR set to: 1
  9568                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  9569  002B8E  C110  F08D         	movff	dtoa@n,___aodiv@dividend
  9570  002B92  C111  F08E         	movff	dtoa@n+1,___aodiv@dividend+1
  9571  002B96  C112  F08F         	movff	dtoa@n+2,___aodiv@dividend+2
  9572  002B9A  C113  F090         	movff	dtoa@n+3,___aodiv@dividend+3
  9573  002B9E  C114  F091         	movff	dtoa@n+4,___aodiv@dividend+4
  9574  002BA2  C115  F092         	movff	dtoa@n+5,___aodiv@dividend+5
  9575  002BA6  C116  F093         	movff	dtoa@n+6,___aodiv@dividend+6
  9576  002BAA  C117  F094         	movff	dtoa@n+7,___aodiv@dividend+7
  9577  002BAE  0E0A               	movlw	10
  9578  002BB0  0100               	movlb	0	; () banked
  9579  002BB2  6F95               	movwf	___aodiv@divisor& (0+255),b
  9580  002BB4  0E00               	movlw	0
  9581  002BB6  6F96               	movwf	(___aodiv@divisor+1)& (0+255),b
  9582  002BB8  0E00               	movlw	0
  9583  002BBA  6F97               	movwf	(___aodiv@divisor+2)& (0+255),b
  9584  002BBC  0E00               	movlw	0
  9585  002BBE  6F98               	movwf	(___aodiv@divisor+3)& (0+255),b
  9586  002BC0  0E00               	movlw	0
  9587  002BC2  6F99               	movwf	(___aodiv@divisor+4)& (0+255),b
  9588  002BC4  0E00               	movlw	0
  9589  002BC6  6F9A               	movwf	(___aodiv@divisor+5)& (0+255),b
  9590  002BC8  0E00               	movlw	0
  9591  002BCA  6F9B               	movwf	(___aodiv@divisor+6)& (0+255),b
  9592  002BCC  0E00               	movlw	0
  9593  002BCE  6F9C               	movwf	(___aodiv@divisor+7)& (0+255),b
  9594  002BD0  ECE2  F022         	call	___aodiv	;wreg free
  9595  002BD4  C08D  F110         	movff	?___aodiv,dtoa@n
  9596  002BD8  C08E  F111         	movff	?___aodiv+1,dtoa@n+1
  9597  002BDC  C08F  F112         	movff	?___aodiv+2,dtoa@n+2
  9598  002BE0  C090  F113         	movff	?___aodiv+3,dtoa@n+3
  9599  002BE4  C091  F114         	movff	?___aodiv+4,dtoa@n+4
  9600  002BE8  C092  F115         	movff	?___aodiv+5,dtoa@n+5
  9601  002BEC  C093  F116         	movff	?___aodiv+6,dtoa@n+6
  9602  002BF0  C094  F117         	movff	?___aodiv+7,dtoa@n+7
  9603  002BF4                     l8363:
  9604                           
  9605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9606  002BF4  0101               	movlb	1	; () banked
  9607  002BF6  BF19               	btfsc	(dtoa@i+1)& (0+255),7,b
  9608  002BF8  EF06  F016         	goto	u10531
  9609  002BFC  5119               	movf	(dtoa@i+1)& (0+255),w,b
  9610  002BFE  E108               	bnz	u10530
  9611  002C00  0518               	decf	dtoa@i& (0+255),w,b
  9612  002C02  A0D8               	btfss	status,0,c
  9613  002C04  EF06  F016         	goto	u10531
  9614  002C08  EF08  F016         	goto	u10530
  9615  002C0C                     u10531:
  9616  002C0C  EF39  F016         	goto	l8373
  9617  002C10                     u10530:
  9618  002C10                     
  9619                           ; BSR set to: 1
  9620  002C10  5110               	movf	dtoa@n& (0+255),w,b
  9621  002C12  1111               	iorwf	(dtoa@n+1)& (0+255),w,b
  9622  002C14  1112               	iorwf	(dtoa@n+2)& (0+255),w,b
  9623  002C16  1113               	iorwf	(dtoa@n+3)& (0+255),w,b
  9624  002C18  1114               	iorwf	(dtoa@n+4)& (0+255),w,b
  9625  002C1A  1115               	iorwf	(dtoa@n+5)& (0+255),w,b
  9626  002C1C  1116               	iorwf	(dtoa@n+6)& (0+255),w,b
  9627  002C1E  1117               	iorwf	(dtoa@n+7)& (0+255),w,b
  9628  002C20  A4D8               	btfss	status,2,c
  9629  002C22  EF15  F016         	goto	u10541
  9630  002C26  EF17  F016         	goto	u10540
  9631  002C2A                     u10541:
  9632  002C2A  EF79  F015         	goto	l8353
  9633  002C2E                     u10540:
  9634  002C2E                     
  9635                           ; BSR set to: 1
  9636  002C2E  BF0B               	btfsc	(dtoa@p+1)& (0+255),7,b
  9637  002C30  EF24  F016         	goto	u10550
  9638  002C34  510B               	movf	(dtoa@p+1)& (0+255),w,b
  9639  002C36  E106               	bnz	u10551
  9640  002C38  050A               	decf	dtoa@p& (0+255),w,b
  9641  002C3A  B0D8               	btfsc	status,0,c
  9642  002C3C  EF22  F016         	goto	u10551
  9643  002C40  EF24  F016         	goto	u10550
  9644  002C44                     u10551:
  9645  002C44  EF79  F015         	goto	l8353
  9646  002C48                     u10550:
  9647  002C48                     
  9648                           ; BSR set to: 1
  9649  002C48  BF0D               	btfsc	(dtoa@w+1)& (0+255),7,b
  9650  002C4A  EF2F  F016         	goto	u10561
  9651  002C4E  510D               	movf	(dtoa@w+1)& (0+255),w,b
  9652  002C50  E108               	bnz	u10560
  9653  002C52  050C               	decf	dtoa@w& (0+255),w,b
  9654  002C54  A0D8               	btfss	status,0,c
  9655  002C56  EF2F  F016         	goto	u10561
  9656  002C5A  EF31  F016         	goto	u10560
  9657  002C5E                     u10561:
  9658  002C5E  EF39  F016         	goto	l8373
  9659  002C62                     u10560:
  9660  002C62                     
  9661                           ; BSR set to: 1
  9662  002C62  0100               	movlb	0	; () banked
  9663  002C64  B3BD               	btfsc	_flags& (0+255),1,b
  9664  002C66  EF37  F016         	goto	u10571
  9665  002C6A  EF39  F016         	goto	u10570
  9666  002C6E                     u10571:
  9667  002C6E  EF79  F015         	goto	l8353
  9668  002C72                     u10570:
  9669  002C72                     l8373:
  9670                           
  9671                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  9672  002C72  0101               	movlb	1	; () banked
  9673  002C74  510E               	movf	dtoa@s& (0+255),w,b
  9674  002C76  110F               	iorwf	(dtoa@s+1)& (0+255),w,b
  9675  002C78  A4D8               	btfss	status,2,c
  9676  002C7A  EF41  F016         	goto	u10581
  9677  002C7E  EF43  F016         	goto	u10580
  9678  002C82                     u10581:
  9679  002C82  EF4B  F016         	goto	l8377
  9680  002C86                     u10580:
  9681  002C86                     
  9682                           ; BSR set to: 1
  9683  002C86  0100               	movlb	0	; () banked
  9684  002C88  A5BD               	btfss	_flags& (0+255),2,b
  9685  002C8A  EF49  F016         	goto	u10591
  9686  002C8E  EF4B  F016         	goto	u10590
  9687  002C92                     u10591:
  9688  002C92  EF6A  F016         	goto	l8387
  9689  002C96                     u10590:
  9690  002C96                     l8377:
  9691                           
  9692                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  9693  002C96  0101               	movlb	1	; () banked
  9694  002C98  0718               	decf	dtoa@i& (0+255),f,b
  9695  002C9A  A0D8               	btfss	status,0,c
  9696  002C9C  0719               	decf	(dtoa@i+1)& (0+255),f,b
  9697  002C9E                     
  9698                           ; BSR set to: 1
  9699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  9700  002C9E  510E               	movf	dtoa@s& (0+255),w,b
  9701  002CA0  110F               	iorwf	(dtoa@s+1)& (0+255),w,b
  9702  002CA2  A4D8               	btfss	status,2,c
  9703  002CA4  EF56  F016         	goto	u10601
  9704  002CA8  EF58  F016         	goto	u10600
  9705  002CAC                     u10601:
  9706  002CAC  EF5E  F016         	goto	l8383
  9707  002CB0                     u10600:
  9708  002CB0                     
  9709                           ; BSR set to: 1
  9710  002CB0  0E00               	movlw	0
  9711  002CB2  6F09               	movwf	(_dtoa$1670+1)& (0+255),b
  9712  002CB4  0E2B               	movlw	43
  9713  002CB6  6F08               	movwf	_dtoa$1670& (0+255),b
  9714  002CB8  EF62  F016         	goto	l8385
  9715  002CBC                     l8383:
  9716                           
  9717                           ; BSR set to: 1
  9718  002CBC  0E00               	movlw	0
  9719  002CBE  6F09               	movwf	(_dtoa$1670+1)& (0+255),b
  9720  002CC0  0E2D               	movlw	45
  9721  002CC2  6F08               	movwf	_dtoa$1670& (0+255),b
  9722  002CC4                     l8385:
  9723                           
  9724                           ; BSR set to: 1
  9725  002CC4  0E78               	movlw	low _dbuf
  9726  002CC6  2518               	addwf	dtoa@i& (0+255),w,b
  9727  002CC8  6ED9               	movwf	fsr2l,c
  9728  002CCA  0E01               	movlw	high _dbuf
  9729  002CCC  2119               	addwfc	(dtoa@i+1)& (0+255),w,b
  9730  002CCE  6EDA               	movwf	fsr2h,c
  9731  002CD0  C108  FFDF         	movff	_dtoa$1670,indf2
  9732  002CD4                     l8387:
  9733                           
  9734                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  9735  002CD4  C0AA  F09F         	movff	dtoa@fp,pad@fp
  9736  002CD8  C0AB  F0A0         	movff	dtoa@fp+1,pad@fp+1
  9737  002CDC  0E78               	movlw	low _dbuf
  9738  002CDE  0101               	movlb	1	; () banked
  9739  002CE0  2518               	addwf	dtoa@i& (0+255),w,b
  9740  002CE2  0100               	movlb	0	; () banked
  9741  002CE4  6FA1               	movwf	pad@buf& (0+255),b
  9742  002CE6  0E01               	movlw	high _dbuf
  9743  002CE8  0101               	movlb	1	; () banked
  9744  002CEA  2119               	addwfc	(dtoa@i+1)& (0+255),w,b
  9745  002CEC  0100               	movlb	0	; () banked
  9746  002CEE  6FA2               	movwf	(pad@buf+1)& (0+255),b
  9747  002CF0  C10C  F0A3         	movff	dtoa@w,pad@p
  9748  002CF4  C10D  F0A4         	movff	dtoa@w+1,pad@p+1
  9749  002CF8  EC15  F02C         	call	_pad	;wreg free
  9750  002CFC  C09F  F0AA         	movff	?_pad,?_dtoa
  9751  002D00  C0A0  F0AB         	movff	?_pad+1,?_dtoa+1
  9752  002D04  0012               	return		;funcret
  9753  002D06                     __end_of_dtoa:
  9754                           	opt callstack 0
  9755                           
  9756 ;; *************** function _abs *****************
  9757 ;; Defined at:
  9758 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  9759 ;; Parameters:    Size  Location     Type
  9760 ;;  a               2   63[BANK0 ] int 
  9761 ;; Auto vars:     Size  Location     Type
  9762 ;;		None
  9763 ;; Return value:  Size  Location     Type
  9764 ;;                  2   63[BANK0 ] int 
  9765 ;; Registers used:
  9766 ;;		wreg, status,2, status,0
  9767 ;; Tracked objects:
  9768 ;;		On entry : 0/0
  9769 ;;		On exit  : 0/0
  9770 ;;		Unchanged: 0/0
  9771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9772 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9774 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9775 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9776 ;;Total ram usage:        4 bytes
  9777 ;; Hardware stack levels used:    1
  9778 ;; Hardware stack levels required when called:   13
  9779 ;; This function calls:
  9780 ;;		Nothing
  9781 ;; This function is called by:
  9782 ;;		_dtoa
  9783 ;; This function uses a non-reentrant model
  9784 ;;
  9785                           
  9786                           	psect	text23
  9787  006238                     __ptext23:
  9788                           	opt callstack 0
  9789  006238                     _abs:
  9790                           	opt callstack 12
  9791  006238  0100               	movlb	0	; () banked
  9792  00623A  BFA0               	btfsc	(abs@a+1)& (0+255),7,b
  9793  00623C  EF2A  F031         	goto	u9560
  9794  006240  51A0               	movf	(abs@a+1)& (0+255),w,b
  9795  006242  E106               	bnz	u9561
  9796  006244  059F               	decf	abs@a& (0+255),w,b
  9797  006246  B0D8               	btfsc	status,0,c
  9798  006248  EF28  F031         	goto	u9561
  9799  00624C  EF2A  F031         	goto	u9560
  9800  006250                     u9561:
  9801  006250  EF38  F031         	goto	l1520
  9802  006254                     u9560:
  9803  006254                     
  9804                           ; BSR set to: 0
  9805  006254  C09F  F0A1         	movff	abs@a,??_abs
  9806  006258  C0A0  F0A2         	movff	abs@a+1,??_abs+1
  9807  00625C  1FA1               	comf	??_abs& (0+255),f,b
  9808  00625E  1FA2               	comf	(??_abs+1)& (0+255),f,b
  9809  006260  4BA1               	infsnz	??_abs& (0+255),f,b
  9810  006262  2BA2               	incf	(??_abs+1)& (0+255),f,b
  9811  006264  C0A1  F09F         	movff	??_abs,?_abs
  9812  006268  C0A2  F0A0         	movff	??_abs+1,?_abs+1
  9813  00626C  EF3C  F031         	goto	l1523
  9814  006270                     l1520:
  9815                           
  9816                           ; BSR set to: 0
  9817  006270  C09F  F09F         	movff	abs@a,?_abs
  9818  006274  C0A0  F0A0         	movff	abs@a+1,?_abs+1
  9819  006278                     l1523:
  9820                           
  9821                           ; BSR set to: 0
  9822  006278  0012               	return		;funcret
  9823  00627A                     __end_of_abs:
  9824                           	opt callstack 0
  9825                           
  9826 ;; *************** function ___aomod *****************
  9827 ;; Defined at:
  9828 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  9829 ;; Parameters:    Size  Location     Type
  9830 ;;  dividend        8   45[BANK0 ] long long 
  9831 ;;  divisor         8   53[BANK0 ] long long 
  9832 ;; Auto vars:     Size  Location     Type
  9833 ;;  sign            1   62[BANK0 ] unsigned char 
  9834 ;;  counter         1   61[BANK0 ] unsigned char 
  9835 ;; Return value:  Size  Location     Type
  9836 ;;                  8   45[BANK0 ] long long 
  9837 ;; Registers used:
  9838 ;;		wreg, status,2, status,0
  9839 ;; Tracked objects:
  9840 ;;		On entry : 0/0
  9841 ;;		On exit  : 0/0
  9842 ;;		Unchanged: 0/0
  9843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9844 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9845 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9847 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9848 ;;Total ram usage:       18 bytes
  9849 ;; Hardware stack levels used:    1
  9850 ;; Hardware stack levels required when called:   13
  9851 ;; This function calls:
  9852 ;;		Nothing
  9853 ;; This function is called by:
  9854 ;;		_dtoa
  9855 ;; This function uses a non-reentrant model
  9856 ;;
  9857                           
  9858                           	psect	text24
  9859  004BDE                     __ptext24:
  9860                           	opt callstack 0
  9861  004BDE                     ___aomod:
  9862                           	opt callstack 12
  9863  004BDE  0E00               	movlw	0
  9864  004BE0  0100               	movlb	0	; () banked
  9865  004BE2  6F9E               	movwf	___aomod@sign& (0+255),b
  9866  004BE4                     
  9867                           ; BSR set to: 0
  9868  004BE4  BF94               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  9869  004BE6  EFF9  F025         	goto	u9730
  9870  004BEA  EFF7  F025         	goto	u9731
  9871  004BEE                     u9731:
  9872  004BEE  EF0B  F026         	goto	l7863
  9873  004BF2                     u9730:
  9874  004BF2                     
  9875                           ; BSR set to: 0
  9876  004BF2  1F94               	comf	(___aomod@dividend+7)& (0+255),f,b
  9877  004BF4  1F93               	comf	(___aomod@dividend+6)& (0+255),f,b
  9878  004BF6  1F92               	comf	(___aomod@dividend+5)& (0+255),f,b
  9879  004BF8  1F91               	comf	(___aomod@dividend+4)& (0+255),f,b
  9880  004BFA  1F90               	comf	(___aomod@dividend+3)& (0+255),f,b
  9881  004BFC  1F8F               	comf	(___aomod@dividend+2)& (0+255),f,b
  9882  004BFE  1F8E               	comf	(___aomod@dividend+1)& (0+255),f,b
  9883  004C00  6D8D               	negf	___aomod@dividend& (0+255),b
  9884  004C02  0E00               	movlw	0
  9885  004C04  238E               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  9886  004C06  238F               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  9887  004C08  2390               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  9888  004C0A  2391               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  9889  004C0C  2392               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  9890  004C0E  2393               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  9891  004C10  2394               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  9892  004C12                     
  9893                           ; BSR set to: 0
  9894  004C12  0E01               	movlw	1
  9895  004C14  6F9E               	movwf	___aomod@sign& (0+255),b
  9896  004C16                     l7863:
  9897                           
  9898                           ; BSR set to: 0
  9899  004C16  BF9C               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  9900  004C18  EF12  F026         	goto	u9740
  9901  004C1C  EF10  F026         	goto	u9741
  9902  004C20                     u9741:
  9903  004C20  EF22  F026         	goto	l7867
  9904  004C24                     u9740:
  9905  004C24                     
  9906                           ; BSR set to: 0
  9907  004C24  1F9C               	comf	(___aomod@divisor+7)& (0+255),f,b
  9908  004C26  1F9B               	comf	(___aomod@divisor+6)& (0+255),f,b
  9909  004C28  1F9A               	comf	(___aomod@divisor+5)& (0+255),f,b
  9910  004C2A  1F99               	comf	(___aomod@divisor+4)& (0+255),f,b
  9911  004C2C  1F98               	comf	(___aomod@divisor+3)& (0+255),f,b
  9912  004C2E  1F97               	comf	(___aomod@divisor+2)& (0+255),f,b
  9913  004C30  1F96               	comf	(___aomod@divisor+1)& (0+255),f,b
  9914  004C32  6D95               	negf	___aomod@divisor& (0+255),b
  9915  004C34  0E00               	movlw	0
  9916  004C36  2396               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  9917  004C38  2397               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  9918  004C3A  2398               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  9919  004C3C  2399               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  9920  004C3E  239A               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  9921  004C40  239B               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  9922  004C42  239C               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  9923  004C44                     l7867:
  9924                           
  9925                           ; BSR set to: 0
  9926  004C44  5195               	movf	___aomod@divisor& (0+255),w,b
  9927  004C46  1196               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  9928  004C48  1197               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  9929  004C4A  1198               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  9930  004C4C  1199               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  9931  004C4E  119A               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  9932  004C50  119B               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  9933  004C52  119C               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  9934  004C54  B4D8               	btfsc	status,2,c
  9935  004C56  EF2F  F026         	goto	u9751
  9936  004C5A  EF31  F026         	goto	u9750
  9937  004C5E                     u9751:
  9938  004C5E  EF79  F026         	goto	l7883
  9939  004C62                     u9750:
  9940  004C62                     
  9941                           ; BSR set to: 0
  9942  004C62  0E01               	movlw	1
  9943  004C64  6F9D               	movwf	___aomod@counter& (0+255),b
  9944  004C66  EF3F  F026         	goto	l7873
  9945  004C6A                     l7871:
  9946                           
  9947                           ; BSR set to: 0
  9948  004C6A  90D8               	bcf	status,0,c
  9949  004C6C  3795               	rlcf	___aomod@divisor& (0+255),f,b
  9950  004C6E  3796               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  9951  004C70  3797               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  9952  004C72  3798               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  9953  004C74  3799               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  9954  004C76  379A               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  9955  004C78  379B               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  9956  004C7A  379C               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  9957  004C7C  2B9D               	incf	___aomod@counter& (0+255),f,b
  9958  004C7E                     l7873:
  9959                           
  9960                           ; BSR set to: 0
  9961  004C7E  AF9C               	btfss	(___aomod@divisor+7)& (0+255),7,b
  9962  004C80  EF44  F026         	goto	u9761
  9963  004C84  EF46  F026         	goto	u9760
  9964  004C88                     u9761:
  9965  004C88  EF35  F026         	goto	l7871
  9966  004C8C                     u9760:
  9967  004C8C                     l7875:
  9968                           
  9969                           ; BSR set to: 0
  9970  004C8C  5195               	movf	___aomod@divisor& (0+255),w,b
  9971  004C8E  5D8D               	subwf	___aomod@dividend& (0+255),w,b
  9972  004C90  5196               	movf	(___aomod@divisor+1)& (0+255),w,b
  9973  004C92  598E               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  9974  004C94  5197               	movf	(___aomod@divisor+2)& (0+255),w,b
  9975  004C96  598F               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  9976  004C98  5198               	movf	(___aomod@divisor+3)& (0+255),w,b
  9977  004C9A  5990               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  9978  004C9C  5199               	movf	(___aomod@divisor+4)& (0+255),w,b
  9979  004C9E  5991               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  9980  004CA0  519A               	movf	(___aomod@divisor+5)& (0+255),w,b
  9981  004CA2  5992               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  9982  004CA4  519B               	movf	(___aomod@divisor+6)& (0+255),w,b
  9983  004CA6  5993               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  9984  004CA8  519C               	movf	(___aomod@divisor+7)& (0+255),w,b
  9985  004CAA  5994               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  9986  004CAC  A0D8               	btfss	status,0,c
  9987  004CAE  EF5B  F026         	goto	u9771
  9988  004CB2  EF5D  F026         	goto	u9770
  9989  004CB6                     u9771:
  9990  004CB6  EF6D  F026         	goto	l7879
  9991  004CBA                     u9770:
  9992  004CBA                     
  9993                           ; BSR set to: 0
  9994  004CBA  5195               	movf	___aomod@divisor& (0+255),w,b
  9995  004CBC  5F8D               	subwf	___aomod@dividend& (0+255),f,b
  9996  004CBE  5196               	movf	(___aomod@divisor+1)& (0+255),w,b
  9997  004CC0  5B8E               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  9998  004CC2  5197               	movf	(___aomod@divisor+2)& (0+255),w,b
  9999  004CC4  5B8F               	subwfb	(___aomod@dividend+2)& (0+255),f,b
 10000  004CC6  5198               	movf	(___aomod@divisor+3)& (0+255),w,b
 10001  004CC8  5B90               	subwfb	(___aomod@dividend+3)& (0+255),f,b
 10002  004CCA  5199               	movf	(___aomod@divisor+4)& (0+255),w,b
 10003  004CCC  5B91               	subwfb	(___aomod@dividend+4)& (0+255),f,b
 10004  004CCE  519A               	movf	(___aomod@divisor+5)& (0+255),w,b
 10005  004CD0  5B92               	subwfb	(___aomod@dividend+5)& (0+255),f,b
 10006  004CD2  519B               	movf	(___aomod@divisor+6)& (0+255),w,b
 10007  004CD4  5B93               	subwfb	(___aomod@dividend+6)& (0+255),f,b
 10008  004CD6  519C               	movf	(___aomod@divisor+7)& (0+255),w,b
 10009  004CD8  5B94               	subwfb	(___aomod@dividend+7)& (0+255),f,b
 10010  004CDA                     l7879:
 10011                           
 10012                           ; BSR set to: 0
 10013  004CDA  90D8               	bcf	status,0,c
 10014  004CDC  339C               	rrcf	(___aomod@divisor+7)& (0+255),f,b
 10015  004CDE  339B               	rrcf	(___aomod@divisor+6)& (0+255),f,b
 10016  004CE0  339A               	rrcf	(___aomod@divisor+5)& (0+255),f,b
 10017  004CE2  3399               	rrcf	(___aomod@divisor+4)& (0+255),f,b
 10018  004CE4  3398               	rrcf	(___aomod@divisor+3)& (0+255),f,b
 10019  004CE6  3397               	rrcf	(___aomod@divisor+2)& (0+255),f,b
 10020  004CE8  3396               	rrcf	(___aomod@divisor+1)& (0+255),f,b
 10021  004CEA  3395               	rrcf	___aomod@divisor& (0+255),f,b
 10022  004CEC                     
 10023                           ; BSR set to: 0
 10024  004CEC  2F9D               	decfsz	___aomod@counter& (0+255),f,b
 10025  004CEE  EF46  F026         	goto	l7875
 10026  004CF2                     l7883:
 10027                           
 10028                           ; BSR set to: 0
 10029  004CF2  519E               	movf	___aomod@sign& (0+255),w,b
 10030  004CF4  B4D8               	btfsc	status,2,c
 10031  004CF6  EF7F  F026         	goto	u9781
 10032  004CFA  EF81  F026         	goto	u9780
 10033  004CFE                     u9781:
 10034  004CFE  EF91  F026         	goto	l7887
 10035  004D02                     u9780:
 10036  004D02                     
 10037                           ; BSR set to: 0
 10038  004D02  1F94               	comf	(___aomod@dividend+7)& (0+255),f,b
 10039  004D04  1F93               	comf	(___aomod@dividend+6)& (0+255),f,b
 10040  004D06  1F92               	comf	(___aomod@dividend+5)& (0+255),f,b
 10041  004D08  1F91               	comf	(___aomod@dividend+4)& (0+255),f,b
 10042  004D0A  1F90               	comf	(___aomod@dividend+3)& (0+255),f,b
 10043  004D0C  1F8F               	comf	(___aomod@dividend+2)& (0+255),f,b
 10044  004D0E  1F8E               	comf	(___aomod@dividend+1)& (0+255),f,b
 10045  004D10  6D8D               	negf	___aomod@dividend& (0+255),b
 10046  004D12  0E00               	movlw	0
 10047  004D14  238E               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 10048  004D16  238F               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 10049  004D18  2390               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 10050  004D1A  2391               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 10051  004D1C  2392               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 10052  004D1E  2393               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 10053  004D20  2394               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 10054  004D22                     l7887:
 10055                           
 10056                           ; BSR set to: 0
 10057  004D22  C08D  F08D         	movff	___aomod@dividend,?___aomod
 10058  004D26  C08E  F08E         	movff	___aomod@dividend+1,?___aomod+1
 10059  004D2A  C08F  F08F         	movff	___aomod@dividend+2,?___aomod+2
 10060  004D2E  C090  F090         	movff	___aomod@dividend+3,?___aomod+3
 10061  004D32  C091  F091         	movff	___aomod@dividend+4,?___aomod+4
 10062  004D36  C092  F092         	movff	___aomod@dividend+5,?___aomod+5
 10063  004D3A  C093  F093         	movff	___aomod@dividend+6,?___aomod+6
 10064  004D3E  C094  F094         	movff	___aomod@dividend+7,?___aomod+7
 10065  004D42                     
 10066                           ; BSR set to: 0
 10067  004D42  0012               	return		;funcret
 10068  004D44                     __end_of___aomod:
 10069                           	opt callstack 0
 10070                           
 10071 ;; *************** function ___aodiv *****************
 10072 ;; Defined at:
 10073 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 10074 ;; Parameters:    Size  Location     Type
 10075 ;;  dividend        8   45[BANK0 ] long long 
 10076 ;;  divisor         8   53[BANK0 ] long long 
 10077 ;; Auto vars:     Size  Location     Type
 10078 ;;  quotient        8   63[BANK0 ] long long 
 10079 ;;  sign            1   62[BANK0 ] unsigned char 
 10080 ;;  counter         1   61[BANK0 ] unsigned char 
 10081 ;; Return value:  Size  Location     Type
 10082 ;;                  8   45[BANK0 ] long long 
 10083 ;; Registers used:
 10084 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10085 ;; Tracked objects:
 10086 ;;		On entry : 0/0
 10087 ;;		On exit  : 0/0
 10088 ;;		Unchanged: 0/0
 10089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10090 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10091 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10093 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10094 ;;Total ram usage:       26 bytes
 10095 ;; Hardware stack levels used:    1
 10096 ;; Hardware stack levels required when called:   13
 10097 ;; This function calls:
 10098 ;;		Nothing
 10099 ;; This function is called by:
 10100 ;;		_dtoa
 10101 ;; This function uses a non-reentrant model
 10102 ;;
 10103                           
 10104                           	psect	text25
 10105  0045C4                     __ptext25:
 10106                           	opt callstack 0
 10107  0045C4                     ___aodiv:
 10108                           	opt callstack 12
 10109  0045C4  0E00               	movlw	0
 10110  0045C6  0100               	movlb	0	; () banked
 10111  0045C8  6F9E               	movwf	___aodiv@sign& (0+255),b
 10112  0045CA                     
 10113                           ; BSR set to: 0
 10114  0045CA  BF9C               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
 10115  0045CC  EFEC  F022         	goto	u9660
 10116  0045D0  EFEA  F022         	goto	u9661
 10117  0045D4                     u9661:
 10118  0045D4  EFFE  F022         	goto	l7819
 10119  0045D8                     u9660:
 10120  0045D8                     
 10121                           ; BSR set to: 0
 10122  0045D8  1F9C               	comf	(___aodiv@divisor+7)& (0+255),f,b
 10123  0045DA  1F9B               	comf	(___aodiv@divisor+6)& (0+255),f,b
 10124  0045DC  1F9A               	comf	(___aodiv@divisor+5)& (0+255),f,b
 10125  0045DE  1F99               	comf	(___aodiv@divisor+4)& (0+255),f,b
 10126  0045E0  1F98               	comf	(___aodiv@divisor+3)& (0+255),f,b
 10127  0045E2  1F97               	comf	(___aodiv@divisor+2)& (0+255),f,b
 10128  0045E4  1F96               	comf	(___aodiv@divisor+1)& (0+255),f,b
 10129  0045E6  6D95               	negf	___aodiv@divisor& (0+255),b
 10130  0045E8  0E00               	movlw	0
 10131  0045EA  2396               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 10132  0045EC  2397               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 10133  0045EE  2398               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 10134  0045F0  2399               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 10135  0045F2  239A               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 10136  0045F4  239B               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 10137  0045F6  239C               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 10138  0045F8                     
 10139                           ; BSR set to: 0
 10140  0045F8  0E01               	movlw	1
 10141  0045FA  6F9E               	movwf	___aodiv@sign& (0+255),b
 10142  0045FC                     l7819:
 10143                           
 10144                           ; BSR set to: 0
 10145  0045FC  BF94               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
 10146  0045FE  EF05  F023         	goto	u9670
 10147  004602  EF03  F023         	goto	u9671
 10148  004606                     u9671:
 10149  004606  EF17  F023         	goto	l7825
 10150  00460A                     u9670:
 10151  00460A                     
 10152                           ; BSR set to: 0
 10153  00460A  1F94               	comf	(___aodiv@dividend+7)& (0+255),f,b
 10154  00460C  1F93               	comf	(___aodiv@dividend+6)& (0+255),f,b
 10155  00460E  1F92               	comf	(___aodiv@dividend+5)& (0+255),f,b
 10156  004610  1F91               	comf	(___aodiv@dividend+4)& (0+255),f,b
 10157  004612  1F90               	comf	(___aodiv@dividend+3)& (0+255),f,b
 10158  004614  1F8F               	comf	(___aodiv@dividend+2)& (0+255),f,b
 10159  004616  1F8E               	comf	(___aodiv@dividend+1)& (0+255),f,b
 10160  004618  6D8D               	negf	___aodiv@dividend& (0+255),b
 10161  00461A  0E00               	movlw	0
 10162  00461C  238E               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 10163  00461E  238F               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 10164  004620  2390               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 10165  004622  2391               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 10166  004624  2392               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 10167  004626  2393               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 10168  004628  2394               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 10169  00462A                     
 10170                           ; BSR set to: 0
 10171  00462A  0E01               	movlw	1
 10172  00462C  1B9E               	xorwf	___aodiv@sign& (0+255),f,b
 10173  00462E                     l7825:
 10174                           
 10175                           ; BSR set to: 0
 10176  00462E  EE20  F09F         	lfsr	2,___aodiv@quotient
 10177  004632  0E07               	movlw	7
 10178  004634                     u9681:
 10179  004634  6ADE               	clrf	postinc2,c
 10180  004636  06E8               	decf	wreg,f,c
 10181  004638  E2FD               	bc	u9681
 10182  00463A                     
 10183                           ; BSR set to: 0
 10184  00463A  5195               	movf	___aodiv@divisor& (0+255),w,b
 10185  00463C  1196               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 10186  00463E  1197               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 10187  004640  1198               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 10188  004642  1199               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 10189  004644  119A               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 10190  004646  119B               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 10191  004648  119C               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 10192  00464A  B4D8               	btfsc	status,2,c
 10193  00464C  EF2A  F023         	goto	u9691
 10194  004650  EF2C  F023         	goto	u9690
 10195  004654                     u9691:
 10196  004654  EF7E  F023         	goto	l7847
 10197  004658                     u9690:
 10198  004658                     
 10199                           ; BSR set to: 0
 10200  004658  0E01               	movlw	1
 10201  00465A  6F9D               	movwf	___aodiv@counter& (0+255),b
 10202  00465C  EF3A  F023         	goto	l7833
 10203  004660                     l7831:
 10204                           
 10205                           ; BSR set to: 0
 10206  004660  90D8               	bcf	status,0,c
 10207  004662  3795               	rlcf	___aodiv@divisor& (0+255),f,b
 10208  004664  3796               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 10209  004666  3797               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 10210  004668  3798               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 10211  00466A  3799               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 10212  00466C  379A               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 10213  00466E  379B               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 10214  004670  379C               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 10215  004672  2B9D               	incf	___aodiv@counter& (0+255),f,b
 10216  004674                     l7833:
 10217                           
 10218                           ; BSR set to: 0
 10219  004674  AF9C               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 10220  004676  EF3F  F023         	goto	u9701
 10221  00467A  EF41  F023         	goto	u9700
 10222  00467E                     u9701:
 10223  00467E  EF30  F023         	goto	l7831
 10224  004682                     u9700:
 10225  004682                     l7835:
 10226                           
 10227                           ; BSR set to: 0
 10228  004682  90D8               	bcf	status,0,c
 10229  004684  379F               	rlcf	___aodiv@quotient& (0+255),f,b
 10230  004686  37A0               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 10231  004688  37A1               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 10232  00468A  37A2               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 10233  00468C  37A3               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 10234  00468E  37A4               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 10235  004690  37A5               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 10236  004692  37A6               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 10237  004694                     
 10238                           ; BSR set to: 0
 10239  004694  5195               	movf	___aodiv@divisor& (0+255),w,b
 10240  004696  5D8D               	subwf	___aodiv@dividend& (0+255),w,b
 10241  004698  5196               	movf	(___aodiv@divisor+1)& (0+255),w,b
 10242  00469A  598E               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 10243  00469C  5197               	movf	(___aodiv@divisor+2)& (0+255),w,b
 10244  00469E  598F               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 10245  0046A0  5198               	movf	(___aodiv@divisor+3)& (0+255),w,b
 10246  0046A2  5990               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 10247  0046A4  5199               	movf	(___aodiv@divisor+4)& (0+255),w,b
 10248  0046A6  5991               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 10249  0046A8  519A               	movf	(___aodiv@divisor+5)& (0+255),w,b
 10250  0046AA  5992               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 10251  0046AC  519B               	movf	(___aodiv@divisor+6)& (0+255),w,b
 10252  0046AE  5993               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 10253  0046B0  519C               	movf	(___aodiv@divisor+7)& (0+255),w,b
 10254  0046B2  5994               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 10255  0046B4  A0D8               	btfss	status,0,c
 10256  0046B6  EF5F  F023         	goto	u9711
 10257  0046BA  EF61  F023         	goto	u9710
 10258  0046BE                     u9711:
 10259  0046BE  EF72  F023         	goto	l7843
 10260  0046C2                     u9710:
 10261  0046C2                     
 10262                           ; BSR set to: 0
 10263  0046C2  5195               	movf	___aodiv@divisor& (0+255),w,b
 10264  0046C4  5F8D               	subwf	___aodiv@dividend& (0+255),f,b
 10265  0046C6  5196               	movf	(___aodiv@divisor+1)& (0+255),w,b
 10266  0046C8  5B8E               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 10267  0046CA  5197               	movf	(___aodiv@divisor+2)& (0+255),w,b
 10268  0046CC  5B8F               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 10269  0046CE  5198               	movf	(___aodiv@divisor+3)& (0+255),w,b
 10270  0046D0  5B90               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 10271  0046D2  5199               	movf	(___aodiv@divisor+4)& (0+255),w,b
 10272  0046D4  5B91               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 10273  0046D6  519A               	movf	(___aodiv@divisor+5)& (0+255),w,b
 10274  0046D8  5B92               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 10275  0046DA  519B               	movf	(___aodiv@divisor+6)& (0+255),w,b
 10276  0046DC  5B93               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 10277  0046DE  519C               	movf	(___aodiv@divisor+7)& (0+255),w,b
 10278  0046E0  5B94               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 10279  0046E2                     
 10280                           ; BSR set to: 0
 10281  0046E2  819F               	bsf	___aodiv@quotient& (0+255),0,b
 10282  0046E4                     l7843:
 10283                           
 10284                           ; BSR set to: 0
 10285  0046E4  90D8               	bcf	status,0,c
 10286  0046E6  339C               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 10287  0046E8  339B               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 10288  0046EA  339A               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 10289  0046EC  3399               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 10290  0046EE  3398               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 10291  0046F0  3397               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 10292  0046F2  3396               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 10293  0046F4  3395               	rrcf	___aodiv@divisor& (0+255),f,b
 10294  0046F6                     
 10295                           ; BSR set to: 0
 10296  0046F6  2F9D               	decfsz	___aodiv@counter& (0+255),f,b
 10297  0046F8  EF41  F023         	goto	l7835
 10298  0046FC                     l7847:
 10299                           
 10300                           ; BSR set to: 0
 10301  0046FC  519E               	movf	___aodiv@sign& (0+255),w,b
 10302  0046FE  B4D8               	btfsc	status,2,c
 10303  004700  EF84  F023         	goto	u9721
 10304  004704  EF86  F023         	goto	u9720
 10305  004708                     u9721:
 10306  004708  EF96  F023         	goto	l7851
 10307  00470C                     u9720:
 10308  00470C                     
 10309                           ; BSR set to: 0
 10310  00470C  1FA6               	comf	(___aodiv@quotient+7)& (0+255),f,b
 10311  00470E  1FA5               	comf	(___aodiv@quotient+6)& (0+255),f,b
 10312  004710  1FA4               	comf	(___aodiv@quotient+5)& (0+255),f,b
 10313  004712  1FA3               	comf	(___aodiv@quotient+4)& (0+255),f,b
 10314  004714  1FA2               	comf	(___aodiv@quotient+3)& (0+255),f,b
 10315  004716  1FA1               	comf	(___aodiv@quotient+2)& (0+255),f,b
 10316  004718  1FA0               	comf	(___aodiv@quotient+1)& (0+255),f,b
 10317  00471A  6D9F               	negf	___aodiv@quotient& (0+255),b
 10318  00471C  0E00               	movlw	0
 10319  00471E  23A0               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 10320  004720  23A1               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 10321  004722  23A2               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 10322  004724  23A3               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 10323  004726  23A4               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 10324  004728  23A5               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 10325  00472A  23A6               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 10326  00472C                     l7851:
 10327                           
 10328                           ; BSR set to: 0
 10329  00472C  C09F  F08D         	movff	___aodiv@quotient,?___aodiv
 10330  004730  C0A0  F08E         	movff	___aodiv@quotient+1,?___aodiv+1
 10331  004734  C0A1  F08F         	movff	___aodiv@quotient+2,?___aodiv+2
 10332  004738  C0A2  F090         	movff	___aodiv@quotient+3,?___aodiv+3
 10333  00473C  C0A3  F091         	movff	___aodiv@quotient+4,?___aodiv+4
 10334  004740  C0A4  F092         	movff	___aodiv@quotient+5,?___aodiv+5
 10335  004744  C0A5  F093         	movff	___aodiv@quotient+6,?___aodiv+6
 10336  004748  C0A6  F094         	movff	___aodiv@quotient+7,?___aodiv+7
 10337  00474C                     
 10338                           ; BSR set to: 0
 10339  00474C  0012               	return		;funcret
 10340  00474E                     __end_of___aodiv:
 10341                           	opt callstack 0
 10342                           
 10343 ;; *************** function _ctoa *****************
 10344 ;; Defined at:
 10345 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 10346 ;; Parameters:    Size  Location     Type
 10347 ;;  fp              2   74[BANK0 ] PTR struct _IO_FILE
 10348 ;;		 -> vsnprintf@f(6), NULL(0), 
 10349 ;;  c               1   76[BANK0 ] unsigned char 
 10350 ;; Auto vars:     Size  Location     Type
 10351 ;;  w               2   77[BANK0 ] int 
 10352 ;;  l               2    0        int 
 10353 ;; Return value:  Size  Location     Type
 10354 ;;                  2   74[BANK0 ] int 
 10355 ;; Registers used:
 10356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10357 ;; Tracked objects:
 10358 ;;		On entry : 0/0
 10359 ;;		On exit  : 0/0
 10360 ;;		Unchanged: 0/0
 10361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10362 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10363 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10365 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10366 ;;Total ram usage:        5 bytes
 10367 ;; Hardware stack levels used:    1
 10368 ;; Hardware stack levels required when called:   18
 10369 ;; This function calls:
 10370 ;;		_pad
 10371 ;; This function is called by:
 10372 ;;		_vfpfcnvrt
 10373 ;; This function uses a non-reentrant model
 10374 ;;
 10375                           
 10376                           	psect	text26
 10377  005E76                     __ptext26:
 10378                           	opt callstack 0
 10379  005E76                     _ctoa:
 10380                           	opt callstack 8
 10381  005E76                     
 10382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 10383  005E76  0100               	movlb	0	; () banked
 10384  005E78  51B9               	movf	_width& (0+255),w,b
 10385  005E7A  11BA               	iorwf	(_width+1)& (0+255),w,b
 10386  005E7C  A4D8               	btfss	status,2,c
 10387  005E7E  EF43  F02F         	goto	u10451
 10388  005E82  EF45  F02F         	goto	u10450
 10389  005E86                     u10451:
 10390  005E86  EF4B  F02F         	goto	l8319
 10391  005E8A                     u10450:
 10392  005E8A                     
 10393                           ; BSR set to: 0
 10394  005E8A  C0B9  F0AD         	movff	_width,ctoa@w
 10395  005E8E  C0BA  F0AE         	movff	_width+1,ctoa@w+1
 10396  005E92  EF51  F02F         	goto	l8321
 10397  005E96                     l8319:
 10398                           
 10399                           ; BSR set to: 0
 10400  005E96  0EFF               	movlw	255
 10401  005E98  25B9               	addwf	_width& (0+255),w,b
 10402  005E9A  6FAD               	movwf	ctoa@w& (0+255),b
 10403  005E9C  0EFF               	movlw	255
 10404  005E9E  21BA               	addwfc	(_width+1)& (0+255),w,b
 10405  005EA0  6FAE               	movwf	(ctoa@w+1)& (0+255),b
 10406  005EA2                     l8321:
 10407                           
 10408                           ; BSR set to: 0
 10409                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 10410  005EA2  C0AC  F178         	movff	ctoa@c,_dbuf
 10411  005EA6                     
 10412                           ; BSR set to: 0
 10413                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 10414  005EA6  0E00               	movlw	0
 10415  005EA8  0101               	movlb	1	; () banked
 10416  005EAA  6F79               	movwf	(_dbuf+1)& (0+255),b
 10417  005EAC                     
 10418                           ; BSR set to: 1
 10419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 10420  005EAC  C0AA  F09F         	movff	ctoa@fp,pad@fp
 10421  005EB0  C0AB  F0A0         	movff	ctoa@fp+1,pad@fp+1
 10422  005EB4  0E78               	movlw	low _dbuf
 10423  005EB6  0100               	movlb	0	; () banked
 10424  005EB8  6FA1               	movwf	pad@buf& (0+255),b
 10425  005EBA  0E01               	movlw	high _dbuf
 10426  005EBC  6FA2               	movwf	(pad@buf+1)& (0+255),b
 10427  005EBE  C0AD  F0A3         	movff	ctoa@w,pad@p
 10428  005EC2  C0AE  F0A4         	movff	ctoa@w+1,pad@p+1
 10429  005EC6  EC15  F02C         	call	_pad	;wreg free
 10430  005ECA  C09F  F0AA         	movff	?_pad,?_ctoa
 10431  005ECE  C0A0  F0AB         	movff	?_pad+1,?_ctoa+1
 10432  005ED2  0012               	return		;funcret
 10433  005ED4                     __end_of_ctoa:
 10434                           	opt callstack 0
 10435                           
 10436 ;; *************** function _pad *****************
 10437 ;; Defined at:
 10438 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 10439 ;; Parameters:    Size  Location     Type
 10440 ;;  fp              2   63[BANK0 ] PTR struct _IO_FILE
 10441 ;;		 -> vsnprintf@f(6), NULL(0), 
 10442 ;;  buf             2   65[BANK0 ] PTR unsigned char 
 10443 ;;		 -> dbuf(32), 
 10444 ;;  p               2   67[BANK0 ] int 
 10445 ;; Auto vars:     Size  Location     Type
 10446 ;;  w               2   72[BANK0 ] int 
 10447 ;;  i               2   70[BANK0 ] int 
 10448 ;; Return value:  Size  Location     Type
 10449 ;;                  2   63[BANK0 ] int 
 10450 ;; Registers used:
 10451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10452 ;; Tracked objects:
 10453 ;;		On entry : 0/0
 10454 ;;		On exit  : 0/0
 10455 ;;		Unchanged: 0/0
 10456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10457 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10458 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10459 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10460 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10461 ;;Total ram usage:       11 bytes
 10462 ;; Hardware stack levels used:    1
 10463 ;; Hardware stack levels required when called:   17
 10464 ;; This function calls:
 10465 ;;		_fputc
 10466 ;;		_fputs
 10467 ;;		_strlen
 10468 ;; This function is called by:
 10469 ;;		_ctoa
 10470 ;;		_dtoa
 10471 ;;		_otoa
 10472 ;;		_utoa
 10473 ;;		_xtoa
 10474 ;; This function uses a non-reentrant model
 10475 ;;
 10476                           
 10477                           	psect	text27
 10478  00582A                     __ptext27:
 10479                           	opt callstack 0
 10480  00582A                     _pad:
 10481                           	opt callstack 8
 10482  00582A                     
 10483                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 10484  00582A  0100               	movlb	0	; () banked
 10485  00582C  A1BD               	btfss	_flags& (0+255),0,b
 10486  00582E  EF1B  F02C         	goto	u9521
 10487  005832  EF1D  F02C         	goto	u9520
 10488  005836                     u9521:
 10489  005836  EF27  F02C         	goto	l7761
 10490  00583A                     u9520:
 10491  00583A                     
 10492                           ; BSR set to: 0
 10493                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 10494  00583A  C0A1  F098         	movff	pad@buf,fputs@s
 10495  00583E  C0A2  F099         	movff	pad@buf+1,fputs@s+1
 10496  005842  C09F  F09A         	movff	pad@fp,fputs@fp
 10497  005846  C0A0  F09B         	movff	pad@fp+1,fputs@fp+1
 10498  00584A  EC90  F030         	call	_fputs	;wreg free
 10499  00584E                     l7761:
 10500                           
 10501                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 10502  00584E  0100               	movlb	0	; () banked
 10503  005850  BFA4               	btfsc	(pad@p+1)& (0+255),7,b
 10504  005852  EF2D  F02C         	goto	u9531
 10505  005856  EF2F  F02C         	goto	u9530
 10506  00585A                     u9531:
 10507  00585A  EF35  F02C         	goto	l7765
 10508  00585E                     u9530:
 10509  00585E                     
 10510                           ; BSR set to: 0
 10511  00585E  C0A3  F0A8         	movff	pad@p,pad@w
 10512  005862  C0A4  F0A9         	movff	pad@p+1,pad@w+1
 10513  005866  EF39  F02C         	goto	l638
 10514  00586A                     l7765:
 10515                           
 10516                           ; BSR set to: 0
 10517  00586A  0E00               	movlw	0
 10518  00586C  6FA9               	movwf	(pad@w+1)& (0+255),b
 10519  00586E  0E00               	movlw	0
 10520  005870  6FA8               	movwf	pad@w& (0+255),b
 10521  005872                     l638:
 10522                           
 10523                           ; BSR set to: 0
 10524                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 10525  005872  0E00               	movlw	0
 10526  005874  6FA7               	movwf	(pad@i+1)& (0+255),b
 10527  005876  0E00               	movlw	0
 10528  005878  6FA6               	movwf	pad@i& (0+255),b
 10529                           
 10530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10531  00587A  EF4C  F02C         	goto	l7771
 10532  00587E                     l7767:
 10533                           
 10534                           ; BSR set to: 0
 10535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 10536  00587E  0E00               	movlw	0
 10537  005880  6F90               	movwf	(fputc@c+1)& (0+255),b
 10538  005882  0E20               	movlw	32
 10539  005884  6F8F               	movwf	fputc@c& (0+255),b
 10540  005886  C09F  F091         	movff	pad@fp,fputc@fp
 10541  00588A  C0A0  F092         	movff	pad@fp+1,fputc@fp+1
 10542  00588E  ECAF  F02B         	call	_fputc	;wreg free
 10543  005892                     
 10544                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 10545  005892  0100               	movlb	0	; () banked
 10546  005894  4BA6               	infsnz	pad@i& (0+255),f,b
 10547  005896  2BA7               	incf	(pad@i+1)& (0+255),f,b
 10548  005898                     l7771:
 10549                           
 10550                           ; BSR set to: 0
 10551                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10552  005898  51A8               	movf	pad@w& (0+255),w,b
 10553  00589A  5DA6               	subwf	pad@i& (0+255),w,b
 10554  00589C  51A7               	movf	(pad@i+1)& (0+255),w,b
 10555  00589E  0A80               	xorlw	128
 10556  0058A0  6FA5               	movwf	??_pad& (0+255),b
 10557  0058A2  51A9               	movf	(pad@w+1)& (0+255),w,b
 10558  0058A4  0A80               	xorlw	128
 10559  0058A6  59A5               	subwfb	??_pad& (0+255),w,b
 10560  0058A8  A0D8               	btfss	status,0,c
 10561  0058AA  EF59  F02C         	goto	u9541
 10562  0058AE  EF5B  F02C         	goto	u9540
 10563  0058B2                     u9541:
 10564  0058B2  EF3F  F02C         	goto	l7767
 10565  0058B6                     u9540:
 10566  0058B6                     
 10567                           ; BSR set to: 0
 10568                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 10569  0058B6  B1BD               	btfsc	_flags& (0+255),0,b
 10570  0058B8  EF60  F02C         	goto	u9551
 10571  0058BC  EF62  F02C         	goto	u9550
 10572  0058C0                     u9551:
 10573  0058C0  EF6C  F02C         	goto	l7775
 10574  0058C4                     u9550:
 10575  0058C4                     
 10576                           ; BSR set to: 0
 10577                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 10578  0058C4  C0A1  F098         	movff	pad@buf,fputs@s
 10579  0058C8  C0A2  F099         	movff	pad@buf+1,fputs@s+1
 10580  0058CC  C09F  F09A         	movff	pad@fp,fputs@fp
 10581  0058D0  C0A0  F09B         	movff	pad@fp+1,fputs@fp+1
 10582  0058D4  EC90  F030         	call	_fputs	;wreg free
 10583  0058D8                     l7775:
 10584                           
 10585                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 10586  0058D8  C0A1  F08D         	movff	pad@buf,strlen@s
 10587  0058DC  C0A2  F08E         	movff	pad@buf+1,strlen@s+1
 10588  0058E0  EC15  F032         	call	_strlen	;wreg free
 10589  0058E4  0100               	movlb	0	; () banked
 10590  0058E6  51A8               	movf	pad@w& (0+255),w,b
 10591  0058E8  258D               	addwf	?_strlen& (0+255),w,b
 10592  0058EA  6F9F               	movwf	?_pad& (0+255),b
 10593  0058EC  51A9               	movf	(pad@w+1)& (0+255),w,b
 10594  0058EE  218E               	addwfc	(?_strlen+1)& (0+255),w,b
 10595  0058F0  6FA0               	movwf	(?_pad+1)& (0+255),b
 10596  0058F2                     
 10597                           ; BSR set to: 0
 10598  0058F2  0012               	return		;funcret
 10599  0058F4                     __end_of_pad:
 10600                           	opt callstack 0
 10601                           
 10602 ;; *************** function _strlen *****************
 10603 ;; Defined at:
 10604 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 10605 ;; Parameters:    Size  Location     Type
 10606 ;;  s               2   45[BANK0 ] PTR const unsigned char 
 10607 ;;		 -> ?_snprintf(2), ?_printf(2), stoa@nuls(7), dbuf(32), 
 10608 ;; Auto vars:     Size  Location     Type
 10609 ;;  a               2   47[BANK0 ] PTR const unsigned char 
 10610 ;;		 -> ?_snprintf(2), ?_printf(2), stoa@nuls(7), dbuf(32), 
 10611 ;; Return value:  Size  Location     Type
 10612 ;;                  2   45[BANK0 ] unsigned int 
 10613 ;; Registers used:
 10614 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10615 ;; Tracked objects:
 10616 ;;		On entry : 0/0
 10617 ;;		On exit  : 0/0
 10618 ;;		Unchanged: 0/0
 10619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10620 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10621 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10623 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10624 ;;Total ram usage:        4 bytes
 10625 ;; Hardware stack levels used:    1
 10626 ;; Hardware stack levels required when called:   13
 10627 ;; This function calls:
 10628 ;;		Nothing
 10629 ;; This function is called by:
 10630 ;;		_pad
 10631 ;;		_stoa
 10632 ;; This function uses a non-reentrant model
 10633 ;;
 10634                           
 10635                           	psect	text28
 10636  00642A                     __ptext28:
 10637                           	opt callstack 0
 10638  00642A                     _strlen:
 10639                           	opt callstack 11
 10640  00642A  C08D  F08F         	movff	strlen@s,strlen@a
 10641  00642E  C08E  F090         	movff	strlen@s+1,strlen@a+1
 10642  006432  EF1E  F032         	goto	l7417
 10643  006436                     l7415:
 10644  006436  0100               	movlb	0	; () banked
 10645  006438  4B8D               	infsnz	strlen@s& (0+255),f,b
 10646  00643A  2B8E               	incf	(strlen@s+1)& (0+255),f,b
 10647  00643C                     l7417:
 10648  00643C  C08D  FFD9         	movff	strlen@s,fsr2l
 10649  006440  C08E  FFDA         	movff	strlen@s+1,fsr2h
 10650  006444  50DF               	movf	indf2,w,c
 10651  006446  A4D8               	btfss	status,2,c
 10652  006448  EF28  F032         	goto	u8731
 10653  00644C  EF2A  F032         	goto	u8730
 10654  006450                     u8731:
 10655  006450  EF1B  F032         	goto	l7415
 10656  006454                     u8730:
 10657  006454  0100               	movlb	0	; () banked
 10658  006456  518F               	movf	strlen@a& (0+255),w,b
 10659  006458  5D8D               	subwf	strlen@s& (0+255),w,b
 10660  00645A  6F8D               	movwf	?_strlen& (0+255),b
 10661  00645C  5190               	movf	(strlen@a+1)& (0+255),w,b
 10662  00645E  598E               	subwfb	(strlen@s+1)& (0+255),w,b
 10663  006460  6F8E               	movwf	(?_strlen+1)& (0+255),b
 10664  006462                     
 10665                           ; BSR set to: 0
 10666  006462  0012               	return		;funcret
 10667  006464                     __end_of_strlen:
 10668                           	opt callstack 0
 10669                           
 10670 ;; *************** function _fputs *****************
 10671 ;; Defined at:
 10672 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 10673 ;; Parameters:    Size  Location     Type
 10674 ;;  s               2   56[BANK0 ] PTR const unsigned char 
 10675 ;;		 -> dbuf(32), 
 10676 ;;  fp              2   58[BANK0 ] PTR struct _IO_FILE
 10677 ;;		 -> vsnprintf@f(6), NULL(0), 
 10678 ;; Auto vars:     Size  Location     Type
 10679 ;;  i               2   61[BANK0 ] int 
 10680 ;;  c               1   60[BANK0 ] unsigned char 
 10681 ;; Return value:  Size  Location     Type
 10682 ;;                  2   56[BANK0 ] int 
 10683 ;; Registers used:
 10684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10685 ;; Tracked objects:
 10686 ;;		On entry : 0/0
 10687 ;;		On exit  : 0/0
 10688 ;;		Unchanged: 0/0
 10689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10690 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10691 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10693 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10694 ;;Total ram usage:        7 bytes
 10695 ;; Hardware stack levels used:    1
 10696 ;; Hardware stack levels required when called:   16
 10697 ;; This function calls:
 10698 ;;		_fputc
 10699 ;; This function is called by:
 10700 ;;		_pad
 10701 ;; This function uses a non-reentrant model
 10702 ;;
 10703                           
 10704                           	psect	text29
 10705  006120                     __ptext29:
 10706                           	opt callstack 0
 10707  006120                     _fputs:
 10708                           	opt callstack 8
 10709  006120  0E00               	movlw	0
 10710  006122  0100               	movlb	0	; () banked
 10711  006124  6F9E               	movwf	(fputs@i+1)& (0+255),b
 10712  006126  0E00               	movlw	0
 10713  006128  6F9D               	movwf	fputs@i& (0+255),b
 10714  00612A  EFA3  F030         	goto	l7411
 10715  00612E                     l7407:
 10716                           
 10717                           ; BSR set to: 0
 10718  00612E  C09C  F08F         	movff	fputs@c,fputc@c
 10719  006132  6B90               	clrf	(fputc@c+1)& (0+255),b
 10720  006134  C09A  F091         	movff	fputs@fp,fputc@fp
 10721  006138  C09B  F092         	movff	fputs@fp+1,fputc@fp+1
 10722  00613C  ECAF  F02B         	call	_fputc	;wreg free
 10723  006140  0100               	movlb	0	; () banked
 10724  006142  4B9D               	infsnz	fputs@i& (0+255),f,b
 10725  006144  2B9E               	incf	(fputs@i+1)& (0+255),f,b
 10726  006146                     l7411:
 10727                           
 10728                           ; BSR set to: 0
 10729  006146  519D               	movf	fputs@i& (0+255),w,b
 10730  006148  2598               	addwf	fputs@s& (0+255),w,b
 10731  00614A  6ED9               	movwf	fsr2l,c
 10732  00614C  519E               	movf	(fputs@i+1)& (0+255),w,b
 10733  00614E  2199               	addwfc	(fputs@s+1)& (0+255),w,b
 10734  006150  6EDA               	movwf	fsr2h,c
 10735  006152  50DF               	movf	indf2,w,c
 10736  006154  6F9C               	movwf	fputs@c& (0+255),b
 10737  006156  519C               	movf	fputs@c& (0+255),w,b
 10738  006158  A4D8               	btfss	status,2,c
 10739  00615A  EFB1  F030         	goto	u8721
 10740  00615E  EFB3  F030         	goto	u8720
 10741  006162                     u8721:
 10742  006162  EF97  F030         	goto	l7407
 10743  006166                     u8720:
 10744  006166                     
 10745                           ; BSR set to: 0
 10746  006166  0012               	return		;funcret
 10747  006168                     __end_of_fputs:
 10748                           	opt callstack 0
 10749                           
 10750 ;; *************** function _fputc *****************
 10751 ;; Defined at:
 10752 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 10753 ;; Parameters:    Size  Location     Type
 10754 ;;  c               2   47[BANK0 ] int 
 10755 ;;  fp              2   49[BANK0 ] PTR struct _IO_FILE
 10756 ;;		 -> vsnprintf@f(6), NULL(0), 
 10757 ;; Auto vars:     Size  Location     Type
 10758 ;;		None
 10759 ;; Return value:  Size  Location     Type
 10760 ;;                  2   47[BANK0 ] int 
 10761 ;; Registers used:
 10762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10763 ;; Tracked objects:
 10764 ;;		On entry : 0/0
 10765 ;;		On exit  : 0/0
 10766 ;;		Unchanged: 0/0
 10767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10768 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10770 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10771 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10772 ;;Total ram usage:        9 bytes
 10773 ;; Hardware stack levels used:    1
 10774 ;; Hardware stack levels required when called:   15
 10775 ;; This function calls:
 10776 ;;		_putch
 10777 ;; This function is called by:
 10778 ;;		_pad
 10779 ;;		_stoa
 10780 ;;		_vfpfcnvrt
 10781 ;;		_fputs
 10782 ;; This function uses a non-reentrant model
 10783 ;;
 10784                           
 10785                           	psect	text30
 10786  00575E                     __ptext30:
 10787                           	opt callstack 0
 10788  00575E                     _fputc:
 10789                           	opt callstack 8
 10790  00575E  0100               	movlb	0	; () banked
 10791  005760  5191               	movf	fputc@fp& (0+255),w,b
 10792  005762  1192               	iorwf	(fputc@fp+1)& (0+255),w,b
 10793  005764  B4D8               	btfsc	status,2,c
 10794  005766  EFB7  F02B         	goto	u8321
 10795  00576A  EFB9  F02B         	goto	u8320
 10796  00576E                     u8321:
 10797  00576E  EFC2  F02B         	goto	l7211
 10798  005772                     u8320:
 10799  005772                     
 10800                           ; BSR set to: 0
 10801  005772  5191               	movf	fputc@fp& (0+255),w,b
 10802  005774  1192               	iorwf	(fputc@fp+1)& (0+255),w,b
 10803  005776  A4D8               	btfss	status,2,c
 10804  005778  EFC0  F02B         	goto	u8331
 10805  00577C  EFC2  F02B         	goto	u8330
 10806  005780                     u8331:
 10807  005780  EFC7  F02B         	goto	l7213
 10808  005784                     u8330:
 10809  005784                     l7211:
 10810                           
 10811                           ; BSR set to: 0
 10812  005784  518F               	movf	fputc@c& (0+255),w,b
 10813  005786  EC40  F034         	call	_putch
 10814  00578A  EF14  F02C         	goto	l1592
 10815  00578E                     l7213:
 10816                           
 10817                           ; BSR set to: 0
 10818  00578E  EE20 F004          	lfsr	2,4
 10819  005792  5191               	movf	fputc@fp& (0+255),w,b
 10820  005794  26D9               	addwf	fsr2l,f,c
 10821  005796  5192               	movf	(fputc@fp+1)& (0+255),w,b
 10822  005798  22DA               	addwfc	fsr2h,f,c
 10823  00579A  50DE               	movf	postinc2,w,c
 10824  00579C  10DE               	iorwf	postinc2,w,c
 10825  00579E  B4D8               	btfsc	status,2,c
 10826  0057A0  EFD4  F02B         	goto	u8341
 10827  0057A4  EFD6  F02B         	goto	u8340
 10828  0057A8                     u8341:
 10829  0057A8  EFF1  F02B         	goto	l7217
 10830  0057AC                     u8340:
 10831  0057AC                     
 10832                           ; BSR set to: 0
 10833  0057AC  EE20 F004          	lfsr	2,4
 10834  0057B0  5191               	movf	fputc@fp& (0+255),w,b
 10835  0057B2  26D9               	addwf	fsr2l,f,c
 10836  0057B4  5192               	movf	(fputc@fp+1)& (0+255),w,b
 10837  0057B6  22DA               	addwfc	fsr2h,f,c
 10838  0057B8  EE10 F002          	lfsr	1,2
 10839  0057BC  5191               	movf	fputc@fp& (0+255),w,b
 10840  0057BE  26E1               	addwf	fsr1l,f,c
 10841  0057C0  5192               	movf	(fputc@fp+1)& (0+255),w,b
 10842  0057C2  22E2               	addwfc	fsr1h,f,c
 10843  0057C4  50DE               	movf	postinc2,w,c
 10844  0057C6  5CE6               	subwf	postinc1,w,c
 10845  0057C8  50E6               	movf	postinc1,w,c
 10846  0057CA  0A80               	xorlw	128
 10847  0057CC  6F97               	movwf	(??_fputc+4)& (0+255),b
 10848  0057CE  50DE               	movf	postinc2,w,c
 10849  0057D0  0A80               	xorlw	128
 10850  0057D2  5997               	subwfb	(??_fputc+4)& (0+255),w,b
 10851  0057D4  B0D8               	btfsc	status,0,c
 10852  0057D6  EFEF  F02B         	goto	u8351
 10853  0057DA  EFF1  F02B         	goto	u8350
 10854  0057DE                     u8351:
 10855  0057DE  EF14  F02C         	goto	l1592
 10856  0057E2                     u8350:
 10857  0057E2                     l7217:
 10858                           
 10859                           ; BSR set to: 0
 10860  0057E2  EE20 F002          	lfsr	2,2
 10861  0057E6  5191               	movf	fputc@fp& (0+255),w,b
 10862  0057E8  26D9               	addwf	fsr2l,f,c
 10863  0057EA  5192               	movf	(fputc@fp+1)& (0+255),w,b
 10864  0057EC  22DA               	addwfc	fsr2h,f,c
 10865  0057EE  CFDE F093          	movff	postinc2,??_fputc
 10866  0057F2  CFDD F094          	movff	postdec2,??_fputc+1
 10867  0057F6  C091  FFD9         	movff	fputc@fp,fsr2l
 10868  0057FA  C092  FFDA         	movff	fputc@fp+1,fsr2h
 10869  0057FE  CFDE F095          	movff	postinc2,??_fputc+2
 10870  005802  CFDD F096          	movff	postdec2,??_fputc+3
 10871  005806  5193               	movf	??_fputc& (0+255),w,b
 10872  005808  2595               	addwf	(??_fputc+2)& (0+255),w,b
 10873  00580A  6ED9               	movwf	fsr2l,c
 10874  00580C  5194               	movf	(??_fputc+1)& (0+255),w,b
 10875  00580E  2196               	addwfc	(??_fputc+3)& (0+255),w,b
 10876  005810  6EDA               	movwf	fsr2h,c
 10877  005812  C08F  FFDF         	movff	fputc@c,indf2
 10878  005816  EE20 F002          	lfsr	2,2
 10879  00581A  5191               	movf	fputc@fp& (0+255),w,b
 10880  00581C  26D9               	addwf	fsr2l,f,c
 10881  00581E  5192               	movf	(fputc@fp+1)& (0+255),w,b
 10882  005820  22DA               	addwfc	fsr2h,f,c
 10883  005822  2ADE               	incf	postinc2,f,c
 10884  005824  0E00               	movlw	0
 10885  005826  22DD               	addwfc	postdec2,f,c
 10886  005828                     l1592:
 10887  005828  0012               	return		;funcret
 10888  00582A                     __end_of_fputc:
 10889                           	opt callstack 0
 10890                           
 10891 ;; *************** function _putch *****************
 10892 ;; Defined at:
 10893 ;;		line 146 in file "mcc_generated_files/eusart1.c"
 10894 ;; Parameters:    Size  Location     Type
 10895 ;;  txData          1    wreg     unsigned char 
 10896 ;; Auto vars:     Size  Location     Type
 10897 ;;  txData          1   46[BANK0 ] unsigned char 
 10898 ;; Return value:  Size  Location     Type
 10899 ;;                  1    wreg      void 
 10900 ;; Registers used:
 10901 ;;		wreg, status,2, cstack
 10902 ;; Tracked objects:
 10903 ;;		On entry : 0/0
 10904 ;;		On exit  : 0/0
 10905 ;;		Unchanged: 0/0
 10906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10908 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10910 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10911 ;;Total ram usage:        1 bytes
 10912 ;; Hardware stack levels used:    1
 10913 ;; Hardware stack levels required when called:   14
 10914 ;; This function calls:
 10915 ;;		_EUSART1_Write
 10916 ;; This function is called by:
 10917 ;;		_fputc
 10918 ;; This function uses a non-reentrant model
 10919 ;;
 10920                           
 10921                           	psect	text31
 10922  006880                     __ptext31:
 10923                           	opt callstack 0
 10924  006880                     _putch:
 10925                           	opt callstack 8
 10926                           
 10927                           ;incstack = 0
 10928                           ;putch@txData stored from wreg
 10929  006880  0100               	movlb	0	; () banked
 10930  006882  6F8E               	movwf	putch@txData& (0+255),b
 10931  006884                     
 10932                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
 10933  006884  0100               	movlb	0	; () banked
 10934  006886  518E               	movf	putch@txData& (0+255),w,b
 10935  006888  ECEA  F033         	call	_EUSART1_Write
 10936  00688C  0012               	return		;funcret
 10937  00688E                     __end_of_putch:
 10938                           	opt callstack 0
 10939                           
 10940 ;; *************** function _EUSART1_Write *****************
 10941 ;; Defined at:
 10942 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 10943 ;; Parameters:    Size  Location     Type
 10944 ;;  txData          1    wreg     unsigned char 
 10945 ;; Auto vars:     Size  Location     Type
 10946 ;;  txData          1   45[BANK0 ] unsigned char 
 10947 ;; Return value:  Size  Location     Type
 10948 ;;                  1    wreg      void 
 10949 ;; Registers used:
 10950 ;;		wreg
 10951 ;; Tracked objects:
 10952 ;;		On entry : 0/0
 10953 ;;		On exit  : 0/0
 10954 ;;		Unchanged: 0/0
 10955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10957 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10959 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10960 ;;Total ram usage:        1 bytes
 10961 ;; Hardware stack levels used:    1
 10962 ;; Hardware stack levels required when called:   13
 10963 ;; This function calls:
 10964 ;;		Nothing
 10965 ;; This function is called by:
 10966 ;;		_putch
 10967 ;;		_read_from_usart
 10968 ;; This function uses a non-reentrant model
 10969 ;;
 10970                           
 10971                           	psect	text32
 10972  0067D4                     __ptext32:
 10973                           	opt callstack 0
 10974  0067D4                     _EUSART1_Write:
 10975                           	opt callstack 8
 10976                           
 10977                           ;incstack = 0
 10978                           ;EUSART1_Write@txData stored from wreg
 10979  0067D4  0100               	movlb	0	; () banked
 10980  0067D6  6F8D               	movwf	EUSART1_Write@txData& (0+255),b
 10981  0067D8                     l297:
 10982                           
 10983                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
 10984  0067D8  A89E               	btfss	158,4,c	;volatile
 10985  0067DA  EFF1  F033         	goto	u8231
 10986  0067DE  EFF3  F033         	goto	u8230
 10987  0067E2                     u8231:
 10988  0067E2  EFEC  F033         	goto	l297
 10989  0067E6                     u8230:
 10990  0067E6                     
 10991                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
 10992  0067E6  C08D  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
 10993  0067EA  0012               	return		;funcret
 10994  0067EC                     __end_of_EUSART1_Write:
 10995                           	opt callstack 0
 10996                           
 10997 ;; *************** function _atoi *****************
 10998 ;; Defined at:
 10999 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 11000 ;; Parameters:    Size  Location     Type
 11001 ;;  s               2   52[BANK0 ] PTR const unsigned char 
 11002 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
 11003 ;;		 -> STR_4(22), STR_3(12), read_from_usart@data(10), STR_1(13), 
 11004 ;; Auto vars:     Size  Location     Type
 11005 ;;  n               2   65[BANK0 ] int 
 11006 ;;  neg             2   58[BANK0 ] int 
 11007 ;; Return value:  Size  Location     Type
 11008 ;;                  2   52[BANK0 ] int 
 11009 ;; Registers used:
 11010 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11011 ;; Tracked objects:
 11012 ;;		On entry : 0/0
 11013 ;;		On exit  : 0/0
 11014 ;;		Unchanged: 0/0
 11015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11016 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11017 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11018 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11019 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11020 ;;Total ram usage:       15 bytes
 11021 ;; Hardware stack levels used:    1
 11022 ;; Hardware stack levels required when called:   14
 11023 ;; This function calls:
 11024 ;;		___wmul
 11025 ;;		_isdigit
 11026 ;;		_isspace
 11027 ;; This function is called by:
 11028 ;;		_read_from_usart
 11029 ;;		_vfpfcnvrt
 11030 ;; This function uses a non-reentrant model
 11031 ;;
 11032                           
 11033                           	psect	text33
 11034  003A34                     __ptext33:
 11035                           	opt callstack 0
 11036  003A34                     _atoi:
 11037                           	opt callstack 12
 11038  003A34  0E00               	movlw	0
 11039  003A36  0100               	movlb	0	; () banked
 11040  003A38  6FA2               	movwf	(atoi@n+1)& (0+255),b
 11041  003A3A  0E00               	movlw	0
 11042  003A3C  6FA1               	movwf	atoi@n& (0+255),b
 11043  003A3E  0E00               	movlw	0
 11044  003A40  6F9B               	movwf	(atoi@neg+1)& (0+255),b
 11045  003A42  0E00               	movlw	0
 11046  003A44  6F9A               	movwf	atoi@neg& (0+255),b
 11047  003A46  EF27  F01D         	goto	l8277
 11048  003A4A                     l8275:
 11049                           
 11050                           ; BSR set to: 0
 11051  003A4A  4B94               	infsnz	atoi@s& (0+255),f,b
 11052  003A4C  2B95               	incf	(atoi@s+1)& (0+255),f,b
 11053  003A4E                     l8277:
 11054                           
 11055                           ; BSR set to: 0
 11056  003A4E  0E01               	movlw	1
 11057  003A50  6FA0               	movwf	_atoi$2284& (0+255),b
 11058  003A52                     
 11059                           ; BSR set to: 0
 11060  003A52  C094  FFF6         	movff	atoi@s,tblptrl
 11061  003A56  C095  FFF7         	movff	atoi@s+1,tblptrh
 11062  003A5A  0E00               	movlw	low (__mediumconst shr (0+16))
 11063  003A5C  6EF8               	movwf	tblptru,c
 11064  003A5E  0E0E               	movlw	(high __ramtop+-1)
 11065  003A60  64F7               	cpfsgt	tblptrh,c
 11066  003A62  D003               	bra	u10337
 11067  003A64  0008               	tblrd		*
 11068  003A66  50F5               	movf	tablat,w,c
 11069  003A68  D005               	bra	u10330
 11070  003A6A                     u10337:
 11071  003A6A  CFF6 FFE1          	movff	tblptrl,fsr1l
 11072  003A6E  CFF7 FFE2          	movff	tblptrh,fsr1h
 11073  003A72  50E7               	movf	indf1,w,c
 11074  003A74                     u10330:
 11075  003A74  0A20               	xorlw	32
 11076  003A76  B4D8               	btfsc	status,2,c
 11077  003A78  EF40  F01D         	goto	u10341
 11078  003A7C  EF42  F01D         	goto	u10340
 11079  003A80                     u10341:
 11080  003A80  EF6C  F01D         	goto	l8285
 11081  003A84                     u10340:
 11082  003A84  0EF7               	movlw	247
 11083  003A86  0100               	movlb	0	; () banked
 11084  003A88  6F96               	movwf	??_atoi& (0+255),b
 11085  003A8A  0EFF               	movlw	255
 11086  003A8C  6F97               	movwf	(??_atoi+1)& (0+255),b
 11087  003A8E  C094  FFF6         	movff	atoi@s,tblptrl
 11088  003A92  C095  FFF7         	movff	atoi@s+1,tblptrh
 11089  003A96  0E00               	movlw	low (__mediumconst shr (0+16))
 11090  003A98  6EF8               	movwf	tblptru,c
 11091  003A9A  0E0E               	movlw	(high __ramtop+-1)
 11092  003A9C  64F7               	cpfsgt	tblptrh,c
 11093  003A9E  D003               	bra	u10357
 11094  003AA0  0008               	tblrd		*
 11095  003AA2  50F5               	movf	tablat,w,c
 11096  003AA4  D005               	bra	u10350
 11097  003AA6                     u10357:
 11098  003AA6  CFF6 FFE1          	movff	tblptrl,fsr1l
 11099  003AAA  CFF7 FFE2          	movff	tblptrh,fsr1h
 11100  003AAE  50E7               	movf	indf1,w,c
 11101  003AB0                     u10350:
 11102  003AB0  0100               	movlb	0	; () banked
 11103  003AB2  6F98               	movwf	(??_atoi+2)& (0+255),b
 11104  003AB4  6B99               	clrf	(??_atoi+3)& (0+255),b
 11105  003AB6  5196               	movf	??_atoi& (0+255),w,b
 11106  003AB8  2798               	addwf	(??_atoi+2)& (0+255),f,b
 11107  003ABA  5197               	movf	(??_atoi+1)& (0+255),w,b
 11108  003ABC  2399               	addwfc	(??_atoi+3)& (0+255),f,b
 11109  003ABE  5199               	movf	(??_atoi+3)& (0+255),w,b
 11110  003AC0  E109               	bnz	u10360
 11111  003AC2  0E05               	movlw	5
 11112  003AC4  5D98               	subwf	(??_atoi+2)& (0+255),w,b
 11113  003AC6  A0D8               	btfss	status,0,c
 11114  003AC8  EF68  F01D         	goto	u10361
 11115  003ACC  EF6A  F01D         	goto	u10360
 11116  003AD0                     u10361:
 11117  003AD0  EF6C  F01D         	goto	l8285
 11118  003AD4                     u10360:
 11119  003AD4                     
 11120                           ; BSR set to: 0
 11121  003AD4  0E00               	movlw	0
 11122  003AD6  6FA0               	movwf	_atoi$2284& (0+255),b
 11123  003AD8                     l8285:
 11124  003AD8  C0A0  F09C         	movff	_atoi$2284,_atoi$2283
 11125  003ADC  0100               	movlb	0	; () banked
 11126  003ADE  6B9D               	clrf	(_atoi$2283+1)& (0+255),b
 11127  003AE0                     
 11128                           ; BSR set to: 0
 11129  003AE0  519C               	movf	_atoi$2283& (0+255),w,b
 11130  003AE2  119D               	iorwf	(_atoi$2283+1)& (0+255),w,b
 11131  003AE4  A4D8               	btfss	status,2,c
 11132  003AE6  EF77  F01D         	goto	u10371
 11133  003AEA  EF79  F01D         	goto	u10370
 11134  003AEE                     u10371:
 11135  003AEE  EF25  F01D         	goto	l8275
 11136  003AF2                     u10370:
 11137  003AF2  EF83  F01D         	goto	l8295
 11138  003AF6                     l8291:
 11139                           
 11140                           ; BSR set to: 0
 11141  003AF6  0E00               	movlw	0
 11142  003AF8  6F9B               	movwf	(atoi@neg+1)& (0+255),b
 11143  003AFA  0E01               	movlw	1
 11144  003AFC  6F9A               	movwf	atoi@neg& (0+255),b
 11145  003AFE                     l8293:
 11146                           
 11147                           ; BSR set to: 0
 11148  003AFE  4B94               	infsnz	atoi@s& (0+255),f,b
 11149  003B00  2B95               	incf	(atoi@s+1)& (0+255),f,b
 11150  003B02  EFD2  F01D         	goto	l8301
 11151  003B06                     l8295:
 11152                           
 11153                           ; BSR set to: 0
 11154  003B06  C094  FFF6         	movff	atoi@s,tblptrl
 11155  003B0A  C095  FFF7         	movff	atoi@s+1,tblptrh
 11156  003B0E  0E00               	movlw	low (__mediumconst shr (0+16))
 11157  003B10  6EF8               	movwf	tblptru,c
 11158  003B12  0E0E               	movlw	(high __ramtop+-1)
 11159  003B14  64F7               	cpfsgt	tblptrh,c
 11160  003B16  D003               	bra	u10387
 11161  003B18  0008               	tblrd		*
 11162  003B1A  50F5               	movf	tablat,w,c
 11163  003B1C  D005               	bra	u10380
 11164  003B1E                     u10387:
 11165  003B1E  CFF6 FFE1          	movff	tblptrl,fsr1l
 11166  003B22  CFF7 FFE2          	movff	tblptrh,fsr1h
 11167  003B26  50E7               	movf	indf1,w,c
 11168  003B28                     u10380:
 11169  003B28  0100               	movlb	0	; () banked
 11170  003B2A  6F96               	movwf	??_atoi& (0+255),b
 11171  003B2C  6B97               	clrf	(??_atoi+1)& (0+255),b
 11172                           
 11173                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11174                           ; Switch size 1, requested type "simple"
 11175                           ; Number of cases is 1, Range of values is 0 to 0
 11176                           ; switch strategies available:
 11177                           ; Name         Instructions Cycles
 11178                           ; simple_byte            4     3 (average)
 11179                           ;	Chosen strategy is simple_byte
 11180  003B2E  5197               	movf	(??_atoi+1)& (0+255),w,b
 11181  003B30  0A00               	xorlw	0	; case 0
 11182  003B32  B4D8               	btfsc	status,2,c
 11183  003B34  EF9E  F01D         	goto	l9201
 11184  003B38  EFD2  F01D         	goto	l8301
 11185  003B3C                     l9201:
 11186                           
 11187                           ; BSR set to: 0
 11188                           ; Switch size 1, requested type "simple"
 11189                           ; Number of cases is 2, Range of values is 43 to 45
 11190                           ; switch strategies available:
 11191                           ; Name         Instructions Cycles
 11192                           ; simple_byte            7     4 (average)
 11193                           ;	Chosen strategy is simple_byte
 11194  003B3C  5196               	movf	??_atoi& (0+255),w,b
 11195  003B3E  0A2B               	xorlw	43	; case 43
 11196  003B40  B4D8               	btfsc	status,2,c
 11197  003B42  EF7F  F01D         	goto	l8293
 11198  003B46  0A06               	xorlw	6	; case 45
 11199  003B48  B4D8               	btfsc	status,2,c
 11200  003B4A  EF7B  F01D         	goto	l8291
 11201  003B4E  EFD2  F01D         	goto	l8301
 11202  003B52                     l8297:
 11203                           
 11204                           ; BSR set to: 0
 11205  003B52  C0A1  F08D         	movff	atoi@n,___wmul@multiplier
 11206  003B56  C0A2  F08E         	movff	atoi@n+1,___wmul@multiplier+1
 11207  003B5A  0E00               	movlw	0
 11208  003B5C  6F90               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11209  003B5E  0E0A               	movlw	10
 11210  003B60  6F8F               	movwf	___wmul@multiplicand& (0+255),b
 11211  003B62  EC72  F033         	call	___wmul	;wreg free
 11212  003B66  C094  FFF6         	movff	atoi@s,tblptrl
 11213  003B6A  C095  FFF7         	movff	atoi@s+1,tblptrh
 11214  003B6E  0E00               	movlw	low (__mediumconst shr (0+16))
 11215  003B70  6EF8               	movwf	tblptru,c
 11216  003B72  0E0E               	movlw	(high __ramtop+-1)
 11217  003B74  64F7               	cpfsgt	tblptrh,c
 11218  003B76  D003               	bra	u10397
 11219  003B78  0008               	tblrd		*
 11220  003B7A  50F5               	movf	tablat,w,c
 11221  003B7C  D005               	bra	u10390
 11222  003B7E                     u10397:
 11223  003B7E  CFF6 FFE1          	movff	tblptrl,fsr1l
 11224  003B82  CFF7 FFE2          	movff	tblptrh,fsr1h
 11225  003B86  50E7               	movf	indf1,w,c
 11226  003B88                     u10390:
 11227  003B88  0100               	movlb	0	; () banked
 11228  003B8A  6F96               	movwf	??_atoi& (0+255),b
 11229  003B8C  5196               	movf	??_atoi& (0+255),w,b
 11230  003B8E  5F8D               	subwf	?___wmul& (0+255),f,b
 11231  003B90  0E00               	movlw	0
 11232  003B92  5B8E               	subwfb	(?___wmul+1)& (0+255),f,b
 11233  003B94  0E30               	movlw	48
 11234  003B96  258D               	addwf	?___wmul& (0+255),w,b
 11235  003B98  6FA1               	movwf	atoi@n& (0+255),b
 11236  003B9A  0E00               	movlw	0
 11237  003B9C  218E               	addwfc	(?___wmul+1)& (0+255),w,b
 11238  003B9E  6FA2               	movwf	(atoi@n+1)& (0+255),b
 11239  003BA0  EF7F  F01D         	goto	l8293
 11240  003BA4                     l8301:
 11241                           
 11242                           ; BSR set to: 0
 11243  003BA4  0ED0               	movlw	208
 11244  003BA6  6F96               	movwf	??_atoi& (0+255),b
 11245  003BA8  0EFF               	movlw	255
 11246  003BAA  6F97               	movwf	(??_atoi+1)& (0+255),b
 11247  003BAC  C094  FFF6         	movff	atoi@s,tblptrl
 11248  003BB0  C095  FFF7         	movff	atoi@s+1,tblptrh
 11249  003BB4  0E00               	movlw	low (__mediumconst shr (0+16))
 11250  003BB6  6EF8               	movwf	tblptru,c
 11251  003BB8  0E0E               	movlw	(high __ramtop+-1)
 11252  003BBA  64F7               	cpfsgt	tblptrh,c
 11253  003BBC  D003               	bra	u10407
 11254  003BBE  0008               	tblrd		*
 11255  003BC0  50F5               	movf	tablat,w,c
 11256  003BC2  D005               	bra	u10400
 11257  003BC4                     u10407:
 11258  003BC4  CFF6 FFE1          	movff	tblptrl,fsr1l
 11259  003BC8  CFF7 FFE2          	movff	tblptrh,fsr1h
 11260  003BCC  50E7               	movf	indf1,w,c
 11261  003BCE                     u10400:
 11262  003BCE  0100               	movlb	0	; () banked
 11263  003BD0  6F98               	movwf	(??_atoi+2)& (0+255),b
 11264  003BD2  6B99               	clrf	(??_atoi+3)& (0+255),b
 11265  003BD4  5196               	movf	??_atoi& (0+255),w,b
 11266  003BD6  2798               	addwf	(??_atoi+2)& (0+255),f,b
 11267  003BD8  5197               	movf	(??_atoi+1)& (0+255),w,b
 11268  003BDA  2399               	addwfc	(??_atoi+3)& (0+255),f,b
 11269  003BDC  5199               	movf	(??_atoi+3)& (0+255),w,b
 11270  003BDE  E10A               	bnz	u10410
 11271  003BE0  0E0A               	movlw	10
 11272  003BE2  5D98               	subwf	(??_atoi+2)& (0+255),w,b
 11273  003BE4  A0D8               	btfss	status,0,c
 11274  003BE6  EFF7  F01D         	goto	u10411
 11275  003BEA  EFFA  F01D         	goto	u10410
 11276  003BEE                     u10411:
 11277  003BEE  0E01               	movlw	1
 11278  003BF0  EFFB  F01D         	goto	u10420
 11279  003BF4                     u10410:
 11280  003BF4  0E00               	movlw	0
 11281  003BF6                     u10420:
 11282  003BF6  6F9E               	movwf	_atoi$2285& (0+255),b
 11283  003BF8  6B9F               	clrf	(_atoi$2285+1)& (0+255),b
 11284  003BFA                     
 11285                           ; BSR set to: 0
 11286  003BFA  519E               	movf	_atoi$2285& (0+255),w,b
 11287  003BFC  119F               	iorwf	(_atoi$2285+1)& (0+255),w,b
 11288  003BFE  A4D8               	btfss	status,2,c
 11289  003C00  EF04  F01E         	goto	u10431
 11290  003C04  EF06  F01E         	goto	u10430
 11291  003C08                     u10431:
 11292  003C08  EFA9  F01D         	goto	l8297
 11293  003C0C                     u10430:
 11294  003C0C                     
 11295                           ; BSR set to: 0
 11296  003C0C  519A               	movf	atoi@neg& (0+255),w,b
 11297  003C0E  119B               	iorwf	(atoi@neg+1)& (0+255),w,b
 11298  003C10  A4D8               	btfss	status,2,c
 11299  003C12  EF0D  F01E         	goto	u10441
 11300  003C16  EF0F  F01E         	goto	u10440
 11301  003C1A                     u10441:
 11302  003C1A  EF1D  F01E         	goto	l1551
 11303  003C1E                     u10440:
 11304  003C1E                     
 11305                           ; BSR set to: 0
 11306  003C1E  C0A1  F096         	movff	atoi@n,??_atoi
 11307  003C22  C0A2  F097         	movff	atoi@n+1,??_atoi+1
 11308  003C26  1F96               	comf	??_atoi& (0+255),f,b
 11309  003C28  1F97               	comf	(??_atoi+1)& (0+255),f,b
 11310  003C2A  4B96               	infsnz	??_atoi& (0+255),f,b
 11311  003C2C  2B97               	incf	(??_atoi+1)& (0+255),f,b
 11312  003C2E  C096  F094         	movff	??_atoi,?_atoi
 11313  003C32  C097  F095         	movff	??_atoi+1,?_atoi+1
 11314  003C36  EF21  F01E         	goto	l1554
 11315  003C3A                     l1551:
 11316                           
 11317                           ; BSR set to: 0
 11318  003C3A  C0A1  F094         	movff	atoi@n,?_atoi
 11319  003C3E  C0A2  F095         	movff	atoi@n+1,?_atoi+1
 11320  003C42                     l1554:
 11321                           
 11322                           ; BSR set to: 0
 11323  003C42  0012               	return		;funcret
 11324  003C44                     __end_of_atoi:
 11325                           	opt callstack 0
 11326                           
 11327 ;; *************** function _isspace *****************
 11328 ;; Defined at:
 11329 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 11330 ;; Parameters:    Size  Location     Type
 11331 ;;  c               2   45[BANK0 ] int 
 11332 ;; Auto vars:     Size  Location     Type
 11333 ;;		None
 11334 ;; Return value:  Size  Location     Type
 11335 ;;                  2   45[BANK0 ] int 
 11336 ;; Registers used:
 11337 ;;		wreg, status,2, status,0
 11338 ;; Tracked objects:
 11339 ;;		On entry : 0/0
 11340 ;;		On exit  : 0/0
 11341 ;;		Unchanged: 0/0
 11342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11343 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11344 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11345 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11346 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11347 ;;Total ram usage:        7 bytes
 11348 ;; Hardware stack levels used:    1
 11349 ;; Hardware stack levels required when called:   13
 11350 ;; This function calls:
 11351 ;;		Nothing
 11352 ;; This function is called by:
 11353 ;;		_atoi
 11354 ;; This function uses a non-reentrant model
 11355 ;;
 11356                           
 11357                           	psect	text34
 11358  005F8E                     __ptext34:
 11359                           	opt callstack 0
 11360  005F8E                     _isspace:
 11361                           	opt callstack 12
 11362  005F8E  0E01               	movlw	1
 11363  005F90  0100               	movlb	0	; () banked
 11364  005F92  6F93               	movwf	_isspace$2310& (0+255),b
 11365  005F94                     
 11366                           ; BSR set to: 0
 11367  005F94  0E20               	movlw	32
 11368  005F96  198D               	xorwf	isspace@c& (0+255),w,b
 11369  005F98  118E               	iorwf	(isspace@c+1)& (0+255),w,b
 11370  005F9A  B4D8               	btfsc	status,2,c
 11371  005F9C  EFD2  F02F         	goto	u9861
 11372  005FA0  EFD4  F02F         	goto	u9860
 11373  005FA4                     u9861:
 11374  005FA4  EFED  F02F         	goto	l7937
 11375  005FA8                     u9860:
 11376  005FA8                     
 11377                           ; BSR set to: 0
 11378  005FA8  0EF7               	movlw	247
 11379  005FAA  6F8F               	movwf	??_isspace& (0+255),b
 11380  005FAC  0EFF               	movlw	255
 11381  005FAE  6F90               	movwf	(??_isspace+1)& (0+255),b
 11382  005FB0  C08D  F091         	movff	isspace@c,??_isspace+2
 11383  005FB4  C08E  F092         	movff	isspace@c+1,??_isspace+3
 11384  005FB8  518F               	movf	??_isspace& (0+255),w,b
 11385  005FBA  2791               	addwf	(??_isspace+2)& (0+255),f,b
 11386  005FBC  5190               	movf	(??_isspace+1)& (0+255),w,b
 11387  005FBE  2392               	addwfc	(??_isspace+3)& (0+255),f,b
 11388  005FC0  5192               	movf	(??_isspace+3)& (0+255),w,b
 11389  005FC2  E109               	bnz	u9870
 11390  005FC4  0E05               	movlw	5
 11391  005FC6  5D91               	subwf	(??_isspace+2)& (0+255),w,b
 11392  005FC8  A0D8               	btfss	status,0,c
 11393  005FCA  EFE9  F02F         	goto	u9871
 11394  005FCE  EFEB  F02F         	goto	u9870
 11395  005FD2                     u9871:
 11396  005FD2  EFED  F02F         	goto	l7937
 11397  005FD6                     u9870:
 11398  005FD6                     
 11399                           ; BSR set to: 0
 11400  005FD6  0E00               	movlw	0
 11401  005FD8  6F93               	movwf	_isspace$2310& (0+255),b
 11402  005FDA                     l7937:
 11403                           
 11404                           ; BSR set to: 0
 11405  005FDA  C093  F08D         	movff	_isspace$2310,?_isspace
 11406  005FDE  6B8E               	clrf	(?_isspace+1)& (0+255),b
 11407  005FE0                     
 11408                           ; BSR set to: 0
 11409  005FE0  0012               	return		;funcret
 11410  005FE2                     __end_of_isspace:
 11411                           	opt callstack 0
 11412                           
 11413 ;; *************** function _isdigit *****************
 11414 ;; Defined at:
 11415 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 11416 ;; Parameters:    Size  Location     Type
 11417 ;;  c               2   45[BANK0 ] int 
 11418 ;; Auto vars:     Size  Location     Type
 11419 ;;		None
 11420 ;; Return value:  Size  Location     Type
 11421 ;;                  2   45[BANK0 ] int 
 11422 ;; Registers used:
 11423 ;;		wreg, status,2, status,0
 11424 ;; Tracked objects:
 11425 ;;		On entry : 0/0
 11426 ;;		On exit  : 0/0
 11427 ;;		Unchanged: 0/0
 11428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11429 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11431 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11432 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11433 ;;Total ram usage:        6 bytes
 11434 ;; Hardware stack levels used:    1
 11435 ;; Hardware stack levels required when called:   13
 11436 ;; This function calls:
 11437 ;;		Nothing
 11438 ;; This function is called by:
 11439 ;;		_vfpfcnvrt
 11440 ;;		_atoi
 11441 ;; This function uses a non-reentrant model
 11442 ;;
 11443                           
 11444                           	psect	text35
 11445  006464                     __ptext35:
 11446                           	opt callstack 0
 11447  006464                     _isdigit:
 11448                           	opt callstack 13
 11449  006464  0ED0               	movlw	208
 11450  006466  0100               	movlb	0	; () banked
 11451  006468  6F8F               	movwf	??_isdigit& (0+255),b
 11452  00646A  0EFF               	movlw	255
 11453  00646C  6F90               	movwf	(??_isdigit+1)& (0+255),b
 11454  00646E  C08D  F091         	movff	isdigit@c,??_isdigit+2
 11455  006472  C08E  F092         	movff	isdigit@c+1,??_isdigit+3
 11456  006476  518F               	movf	??_isdigit& (0+255),w,b
 11457  006478  2791               	addwf	(??_isdigit+2)& (0+255),f,b
 11458  00647A  5190               	movf	(??_isdigit+1)& (0+255),w,b
 11459  00647C  2392               	addwfc	(??_isdigit+3)& (0+255),f,b
 11460  00647E  5192               	movf	(??_isdigit+3)& (0+255),w,b
 11461  006480  E10A               	bnz	u9640
 11462  006482  0E0A               	movlw	10
 11463  006484  5D91               	subwf	(??_isdigit+2)& (0+255),w,b
 11464  006486  A0D8               	btfss	status,0,c
 11465  006488  EF48  F032         	goto	u9641
 11466  00648C  EF4B  F032         	goto	u9640
 11467  006490                     u9641:
 11468  006490  0E01               	movlw	1
 11469  006492  EF4C  F032         	goto	u9650
 11470  006496                     u9640:
 11471  006496  0E00               	movlw	0
 11472  006498                     u9650:
 11473  006498  6F8D               	movwf	?_isdigit& (0+255),b
 11474  00649A  6B8E               	clrf	(?_isdigit+1)& (0+255),b
 11475  00649C                     
 11476                           ; BSR set to: 0
 11477  00649C  0012               	return		;funcret
 11478  00649E                     __end_of_isdigit:
 11479                           	opt callstack 0
 11480                           
 11481 ;; *************** function ___wmul *****************
 11482 ;; Defined at:
 11483 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 11484 ;; Parameters:    Size  Location     Type
 11485 ;;  multiplier      2   45[BANK0 ] unsigned int 
 11486 ;;  multiplicand    2   47[BANK0 ] unsigned int 
 11487 ;; Auto vars:     Size  Location     Type
 11488 ;;  product         2   49[BANK0 ] unsigned int 
 11489 ;; Return value:  Size  Location     Type
 11490 ;;                  2   45[BANK0 ] unsigned int 
 11491 ;; Registers used:
 11492 ;;		wreg, status,2, status,0, prodl, prodh
 11493 ;; Tracked objects:
 11494 ;;		On entry : 0/0
 11495 ;;		On exit  : 0/0
 11496 ;;		Unchanged: 0/0
 11497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11498 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11499 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11501 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11502 ;;Total ram usage:        6 bytes
 11503 ;; Hardware stack levels used:    1
 11504 ;; Hardware stack levels required when called:   13
 11505 ;; This function calls:
 11506 ;;		Nothing
 11507 ;; This function is called by:
 11508 ;;		_atoi
 11509 ;; This function uses a non-reentrant model
 11510 ;;
 11511                           
 11512                           	psect	text36
 11513  0066E4                     __ptext36:
 11514                           	opt callstack 0
 11515  0066E4                     ___wmul:
 11516                           	opt callstack 12
 11517  0066E4  0100               	movlb	0	; () banked
 11518  0066E6  518D               	movf	___wmul@multiplier& (0+255),w,b
 11519  0066E8  038F               	mulwf	___wmul@multiplicand& (0+255),b
 11520  0066EA  CFF3 F091          	movff	prodl,___wmul@product
 11521  0066EE  CFF4 F092          	movff	prodh,___wmul@product+1
 11522  0066F2  518D               	movf	___wmul@multiplier& (0+255),w,b
 11523  0066F4  0390               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11524  0066F6  50F3               	movf	243,w,c
 11525  0066F8  2792               	addwf	(___wmul@product+1)& (0+255),f,b
 11526  0066FA  518E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11527  0066FC  038F               	mulwf	___wmul@multiplicand& (0+255),b
 11528  0066FE  50F3               	movf	243,w,c
 11529  006700  2792               	addwf	(___wmul@product+1)& (0+255),f,b
 11530  006702                     
 11531                           ; BSR set to: 0
 11532  006702  C091  F08D         	movff	___wmul@product,?___wmul
 11533  006706  C092  F08E         	movff	___wmul@product+1,?___wmul+1
 11534  00670A                     
 11535                           ; BSR set to: 0
 11536  00670A  0012               	return		;funcret
 11537  00670C                     __end_of___wmul:
 11538                           	opt callstack 0
 11539                           
 11540 ;; *************** function _lcd_init *****************
 11541 ;; Defined at:
 11542 ;;		line 34 in file "lib_ili9341.c"
 11543 ;; Parameters:    Size  Location     Type
 11544 ;;		None
 11545 ;; Auto vars:     Size  Location     Type
 11546 ;;		None
 11547 ;; Return value:  Size  Location     Type
 11548 ;;                  1    wreg      void 
 11549 ;; Registers used:
 11550 ;;		wreg, status,2, status,0, cstack
 11551 ;; Tracked objects:
 11552 ;;		On entry : 0/0
 11553 ;;		On exit  : 0/0
 11554 ;;		Unchanged: 0/0
 11555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11560 ;;Total ram usage:        0 bytes
 11561 ;; Hardware stack levels used:    1
 11562 ;; Hardware stack levels required when called:   18
 11563 ;; This function calls:
 11564 ;;		_lcd_fill
 11565 ;;		_lcd_send
 11566 ;;		_msDelay
 11567 ;; This function is called by:
 11568 ;;		_main
 11569 ;; This function uses a non-reentrant model
 11570 ;;
 11571                           
 11572                           	psect	text37
 11573  0025CA                     __ptext37:
 11574                           	opt callstack 0
 11575  0025CA                     _lcd_init:
 11576                           	opt callstack 12
 11577  0025CA                     
 11578                           ;lib_ili9341.c: 37:     lcd_send(0, 0x01);
 11579  0025CA  0E01               	movlw	1
 11580  0025CC  0100               	movlb	0	; () banked
 11581  0025CE  6F8E               	movwf	lcd_send@value& (0+255),b
 11582  0025D0  0E00               	movlw	0
 11583  0025D2  ECCD  F033         	call	_lcd_send
 11584  0025D6                     
 11585                           ;lib_ili9341.c: 38:     msDelay(150);
 11586  0025D6  0E96               	movlw	150
 11587  0025D8  EC4F  F032         	call	_msDelay
 11588  0025DC                     
 11589                           ;lib_ili9341.c: 40:     lcd_send(0,0xEF);
 11590  0025DC  0EEF               	movlw	239
 11591  0025DE  0100               	movlb	0	; () banked
 11592  0025E0  6F8E               	movwf	lcd_send@value& (0+255),b
 11593  0025E2  0E00               	movlw	0
 11594  0025E4  ECCD  F033         	call	_lcd_send
 11595  0025E8                     
 11596                           ;lib_ili9341.c: 41:     lcd_send(1,0x03);
 11597  0025E8  0E03               	movlw	3
 11598  0025EA  0100               	movlb	0	; () banked
 11599  0025EC  6F8E               	movwf	lcd_send@value& (0+255),b
 11600  0025EE  0E01               	movlw	1
 11601  0025F0  ECCD  F033         	call	_lcd_send
 11602  0025F4                     
 11603                           ;lib_ili9341.c: 42:     lcd_send(1,0x80);
 11604  0025F4  0E80               	movlw	128
 11605  0025F6  0100               	movlb	0	; () banked
 11606  0025F8  6F8E               	movwf	lcd_send@value& (0+255),b
 11607  0025FA  0E01               	movlw	1
 11608  0025FC  ECCD  F033         	call	_lcd_send
 11609  002600                     
 11610                           ;lib_ili9341.c: 43:     lcd_send(1,0x02);
 11611  002600  0E02               	movlw	2
 11612  002602  0100               	movlb	0	; () banked
 11613  002604  6F8E               	movwf	lcd_send@value& (0+255),b
 11614  002606  0E01               	movlw	1
 11615  002608  ECCD  F033         	call	_lcd_send
 11616  00260C                     
 11617                           ;lib_ili9341.c: 44:     lcd_send(0,0xCF);
 11618  00260C  0ECF               	movlw	207
 11619  00260E  0100               	movlb	0	; () banked
 11620  002610  6F8E               	movwf	lcd_send@value& (0+255),b
 11621  002612  0E00               	movlw	0
 11622  002614  ECCD  F033         	call	_lcd_send
 11623  002618                     
 11624                           ;lib_ili9341.c: 45:     lcd_send(1,0x00);
 11625  002618  0E00               	movlw	0
 11626  00261A  0100               	movlb	0	; () banked
 11627  00261C  6F8E               	movwf	lcd_send@value& (0+255),b
 11628  00261E  0E01               	movlw	1
 11629  002620  ECCD  F033         	call	_lcd_send
 11630  002624                     
 11631                           ;lib_ili9341.c: 46:     lcd_send(1,0XC1);
 11632  002624  0EC1               	movlw	193
 11633  002626  0100               	movlb	0	; () banked
 11634  002628  6F8E               	movwf	lcd_send@value& (0+255),b
 11635  00262A  0E01               	movlw	1
 11636  00262C  ECCD  F033         	call	_lcd_send
 11637  002630                     
 11638                           ;lib_ili9341.c: 47:     lcd_send(1,0X30);
 11639  002630  0E30               	movlw	48
 11640  002632  0100               	movlb	0	; () banked
 11641  002634  6F8E               	movwf	lcd_send@value& (0+255),b
 11642  002636  0E01               	movlw	1
 11643  002638  ECCD  F033         	call	_lcd_send
 11644  00263C                     
 11645                           ;lib_ili9341.c: 48:     lcd_send(0,0xED);
 11646  00263C  0EED               	movlw	237
 11647  00263E  0100               	movlb	0	; () banked
 11648  002640  6F8E               	movwf	lcd_send@value& (0+255),b
 11649  002642  0E00               	movlw	0
 11650  002644  ECCD  F033         	call	_lcd_send
 11651  002648                     
 11652                           ;lib_ili9341.c: 49:     lcd_send(1,0x64);
 11653  002648  0E64               	movlw	100
 11654  00264A  0100               	movlb	0	; () banked
 11655  00264C  6F8E               	movwf	lcd_send@value& (0+255),b
 11656  00264E  0E01               	movlw	1
 11657  002650  ECCD  F033         	call	_lcd_send
 11658  002654                     
 11659                           ;lib_ili9341.c: 50:     lcd_send(1,0x03);
 11660  002654  0E03               	movlw	3
 11661  002656  0100               	movlb	0	; () banked
 11662  002658  6F8E               	movwf	lcd_send@value& (0+255),b
 11663  00265A  0E01               	movlw	1
 11664  00265C  ECCD  F033         	call	_lcd_send
 11665  002660                     
 11666                           ;lib_ili9341.c: 51:     lcd_send(1,0X12);
 11667  002660  0E12               	movlw	18
 11668  002662  0100               	movlb	0	; () banked
 11669  002664  6F8E               	movwf	lcd_send@value& (0+255),b
 11670  002666  0E01               	movlw	1
 11671  002668  ECCD  F033         	call	_lcd_send
 11672  00266C                     
 11673                           ;lib_ili9341.c: 52:     lcd_send(1,0X81);
 11674  00266C  0E81               	movlw	129
 11675  00266E  0100               	movlb	0	; () banked
 11676  002670  6F8E               	movwf	lcd_send@value& (0+255),b
 11677  002672  0E01               	movlw	1
 11678  002674  ECCD  F033         	call	_lcd_send
 11679  002678                     
 11680                           ;lib_ili9341.c: 53:     lcd_send(0,0xE8);
 11681  002678  0EE8               	movlw	232
 11682  00267A  0100               	movlb	0	; () banked
 11683  00267C  6F8E               	movwf	lcd_send@value& (0+255),b
 11684  00267E  0E00               	movlw	0
 11685  002680  ECCD  F033         	call	_lcd_send
 11686  002684                     
 11687                           ;lib_ili9341.c: 54:     lcd_send(1,0x85);
 11688  002684  0E85               	movlw	133
 11689  002686  0100               	movlb	0	; () banked
 11690  002688  6F8E               	movwf	lcd_send@value& (0+255),b
 11691  00268A  0E01               	movlw	1
 11692  00268C  ECCD  F033         	call	_lcd_send
 11693  002690                     
 11694                           ;lib_ili9341.c: 55:     lcd_send(1,0x00);
 11695  002690  0E00               	movlw	0
 11696  002692  0100               	movlb	0	; () banked
 11697  002694  6F8E               	movwf	lcd_send@value& (0+255),b
 11698  002696  0E01               	movlw	1
 11699  002698  ECCD  F033         	call	_lcd_send
 11700  00269C                     
 11701                           ;lib_ili9341.c: 56:     lcd_send(1,0x78);
 11702  00269C  0E78               	movlw	120
 11703  00269E  0100               	movlb	0	; () banked
 11704  0026A0  6F8E               	movwf	lcd_send@value& (0+255),b
 11705  0026A2  0E01               	movlw	1
 11706  0026A4  ECCD  F033         	call	_lcd_send
 11707  0026A8                     
 11708                           ;lib_ili9341.c: 57:     lcd_send(0,0xCB);
 11709  0026A8  0ECB               	movlw	203
 11710  0026AA  0100               	movlb	0	; () banked
 11711  0026AC  6F8E               	movwf	lcd_send@value& (0+255),b
 11712  0026AE  0E00               	movlw	0
 11713  0026B0  ECCD  F033         	call	_lcd_send
 11714  0026B4                     
 11715                           ;lib_ili9341.c: 58:     lcd_send(1,0x39);
 11716  0026B4  0E39               	movlw	57
 11717  0026B6  0100               	movlb	0	; () banked
 11718  0026B8  6F8E               	movwf	lcd_send@value& (0+255),b
 11719  0026BA  0E01               	movlw	1
 11720  0026BC  ECCD  F033         	call	_lcd_send
 11721  0026C0                     
 11722                           ;lib_ili9341.c: 59:     lcd_send(1,0x2C);
 11723  0026C0  0E2C               	movlw	44
 11724  0026C2  0100               	movlb	0	; () banked
 11725  0026C4  6F8E               	movwf	lcd_send@value& (0+255),b
 11726  0026C6  0E01               	movlw	1
 11727  0026C8  ECCD  F033         	call	_lcd_send
 11728  0026CC                     
 11729                           ;lib_ili9341.c: 60:     lcd_send(1,0x00);
 11730  0026CC  0E00               	movlw	0
 11731  0026CE  0100               	movlb	0	; () banked
 11732  0026D0  6F8E               	movwf	lcd_send@value& (0+255),b
 11733  0026D2  0E01               	movlw	1
 11734  0026D4  ECCD  F033         	call	_lcd_send
 11735  0026D8                     
 11736                           ;lib_ili9341.c: 61:     lcd_send(1,0x34);
 11737  0026D8  0E34               	movlw	52
 11738  0026DA  0100               	movlb	0	; () banked
 11739  0026DC  6F8E               	movwf	lcd_send@value& (0+255),b
 11740  0026DE  0E01               	movlw	1
 11741  0026E0  ECCD  F033         	call	_lcd_send
 11742  0026E4                     
 11743                           ;lib_ili9341.c: 62:     lcd_send(1,0x02);
 11744  0026E4  0E02               	movlw	2
 11745  0026E6  0100               	movlb	0	; () banked
 11746  0026E8  6F8E               	movwf	lcd_send@value& (0+255),b
 11747  0026EA  0E01               	movlw	1
 11748  0026EC  ECCD  F033         	call	_lcd_send
 11749  0026F0                     
 11750                           ;lib_ili9341.c: 63:     lcd_send(0,0xF7);
 11751  0026F0  0EF7               	movlw	247
 11752  0026F2  0100               	movlb	0	; () banked
 11753  0026F4  6F8E               	movwf	lcd_send@value& (0+255),b
 11754  0026F6  0E00               	movlw	0
 11755  0026F8  ECCD  F033         	call	_lcd_send
 11756  0026FC                     
 11757                           ;lib_ili9341.c: 64:     lcd_send(1,0x20);
 11758  0026FC  0E20               	movlw	32
 11759  0026FE  0100               	movlb	0	; () banked
 11760  002700  6F8E               	movwf	lcd_send@value& (0+255),b
 11761  002702  0E01               	movlw	1
 11762  002704  ECCD  F033         	call	_lcd_send
 11763  002708                     
 11764                           ;lib_ili9341.c: 65:     lcd_send(0,0xEA);
 11765  002708  0EEA               	movlw	234
 11766  00270A  0100               	movlb	0	; () banked
 11767  00270C  6F8E               	movwf	lcd_send@value& (0+255),b
 11768  00270E  0E00               	movlw	0
 11769  002710  ECCD  F033         	call	_lcd_send
 11770  002714                     
 11771                           ;lib_ili9341.c: 66:     lcd_send(1,0x00);
 11772  002714  0E00               	movlw	0
 11773  002716  0100               	movlb	0	; () banked
 11774  002718  6F8E               	movwf	lcd_send@value& (0+255),b
 11775  00271A  0E01               	movlw	1
 11776  00271C  ECCD  F033         	call	_lcd_send
 11777  002720                     
 11778                           ;lib_ili9341.c: 67:     lcd_send(1,0x00);
 11779  002720  0E00               	movlw	0
 11780  002722  0100               	movlb	0	; () banked
 11781  002724  6F8E               	movwf	lcd_send@value& (0+255),b
 11782  002726  0E01               	movlw	1
 11783  002728  ECCD  F033         	call	_lcd_send
 11784  00272C                     
 11785                           ;lib_ili9341.c: 68:     lcd_send(0,0xC0);
 11786  00272C  0EC0               	movlw	192
 11787  00272E  0100               	movlb	0	; () banked
 11788  002730  6F8E               	movwf	lcd_send@value& (0+255),b
 11789  002732  0E00               	movlw	0
 11790  002734  ECCD  F033         	call	_lcd_send
 11791  002738                     
 11792                           ;lib_ili9341.c: 69:     lcd_send(1,0x23);
 11793  002738  0E23               	movlw	35
 11794  00273A  0100               	movlb	0	; () banked
 11795  00273C  6F8E               	movwf	lcd_send@value& (0+255),b
 11796  00273E  0E01               	movlw	1
 11797  002740  ECCD  F033         	call	_lcd_send
 11798  002744                     
 11799                           ;lib_ili9341.c: 70:     lcd_send(0,0xC1);
 11800  002744  0EC1               	movlw	193
 11801  002746  0100               	movlb	0	; () banked
 11802  002748  6F8E               	movwf	lcd_send@value& (0+255),b
 11803  00274A  0E00               	movlw	0
 11804  00274C  ECCD  F033         	call	_lcd_send
 11805  002750                     
 11806                           ;lib_ili9341.c: 71:     lcd_send(1,0x10);
 11807  002750  0E10               	movlw	16
 11808  002752  0100               	movlb	0	; () banked
 11809  002754  6F8E               	movwf	lcd_send@value& (0+255),b
 11810  002756  0E01               	movlw	1
 11811  002758  ECCD  F033         	call	_lcd_send
 11812  00275C                     
 11813                           ;lib_ili9341.c: 72:     lcd_send(0,0xC5);
 11814  00275C  0EC5               	movlw	197
 11815  00275E  0100               	movlb	0	; () banked
 11816  002760  6F8E               	movwf	lcd_send@value& (0+255),b
 11817  002762  0E00               	movlw	0
 11818  002764  ECCD  F033         	call	_lcd_send
 11819  002768                     
 11820                           ;lib_ili9341.c: 73:     lcd_send(1,0x3e);
 11821  002768  0E3E               	movlw	62
 11822  00276A  0100               	movlb	0	; () banked
 11823  00276C  6F8E               	movwf	lcd_send@value& (0+255),b
 11824  00276E  0E01               	movlw	1
 11825  002770  ECCD  F033         	call	_lcd_send
 11826  002774                     
 11827                           ;lib_ili9341.c: 74:     lcd_send(1,0x28);
 11828  002774  0E28               	movlw	40
 11829  002776  0100               	movlb	0	; () banked
 11830  002778  6F8E               	movwf	lcd_send@value& (0+255),b
 11831  00277A  0E01               	movlw	1
 11832  00277C  ECCD  F033         	call	_lcd_send
 11833  002780                     
 11834                           ;lib_ili9341.c: 75:     lcd_send(0,0xC7);
 11835  002780  0EC7               	movlw	199
 11836  002782  0100               	movlb	0	; () banked
 11837  002784  6F8E               	movwf	lcd_send@value& (0+255),b
 11838  002786  0E00               	movlw	0
 11839  002788  ECCD  F033         	call	_lcd_send
 11840  00278C                     
 11841                           ;lib_ili9341.c: 76:     lcd_send(1,0x86);
 11842  00278C  0E86               	movlw	134
 11843  00278E  0100               	movlb	0	; () banked
 11844  002790  6F8E               	movwf	lcd_send@value& (0+255),b
 11845  002792  0E01               	movlw	1
 11846  002794  ECCD  F033         	call	_lcd_send
 11847  002798                     
 11848                           ;lib_ili9341.c: 77:     lcd_send(0,0x36);
 11849  002798  0E36               	movlw	54
 11850  00279A  0100               	movlb	0	; () banked
 11851  00279C  6F8E               	movwf	lcd_send@value& (0+255),b
 11852  00279E  0E00               	movlw	0
 11853  0027A0  ECCD  F033         	call	_lcd_send
 11854  0027A4                     
 11855                           ;lib_ili9341.c: 78:     lcd_send(1,0x48);
 11856  0027A4  0E48               	movlw	72
 11857  0027A6  0100               	movlb	0	; () banked
 11858  0027A8  6F8E               	movwf	lcd_send@value& (0+255),b
 11859  0027AA  0E01               	movlw	1
 11860  0027AC  ECCD  F033         	call	_lcd_send
 11861  0027B0                     
 11862                           ;lib_ili9341.c: 79:     lcd_send(0,0x3A);
 11863  0027B0  0E3A               	movlw	58
 11864  0027B2  0100               	movlb	0	; () banked
 11865  0027B4  6F8E               	movwf	lcd_send@value& (0+255),b
 11866  0027B6  0E00               	movlw	0
 11867  0027B8  ECCD  F033         	call	_lcd_send
 11868  0027BC                     
 11869                           ;lib_ili9341.c: 80:     lcd_send(1,0x55);
 11870  0027BC  0E55               	movlw	85
 11871  0027BE  0100               	movlb	0	; () banked
 11872  0027C0  6F8E               	movwf	lcd_send@value& (0+255),b
 11873  0027C2  0E01               	movlw	1
 11874  0027C4  ECCD  F033         	call	_lcd_send
 11875  0027C8                     
 11876                           ;lib_ili9341.c: 81:     lcd_send(0,0xB1);
 11877  0027C8  0EB1               	movlw	177
 11878  0027CA  0100               	movlb	0	; () banked
 11879  0027CC  6F8E               	movwf	lcd_send@value& (0+255),b
 11880  0027CE  0E00               	movlw	0
 11881  0027D0  ECCD  F033         	call	_lcd_send
 11882  0027D4                     
 11883                           ;lib_ili9341.c: 82:     lcd_send(1,0x00);
 11884  0027D4  0E00               	movlw	0
 11885  0027D6  0100               	movlb	0	; () banked
 11886  0027D8  6F8E               	movwf	lcd_send@value& (0+255),b
 11887  0027DA  0E01               	movlw	1
 11888  0027DC  ECCD  F033         	call	_lcd_send
 11889  0027E0                     
 11890                           ;lib_ili9341.c: 83:     lcd_send(1,0x18);
 11891  0027E0  0E18               	movlw	24
 11892  0027E2  0100               	movlb	0	; () banked
 11893  0027E4  6F8E               	movwf	lcd_send@value& (0+255),b
 11894  0027E6  0E01               	movlw	1
 11895  0027E8  ECCD  F033         	call	_lcd_send
 11896  0027EC                     
 11897                           ;lib_ili9341.c: 84:     lcd_send(0,0xB6);
 11898  0027EC  0EB6               	movlw	182
 11899  0027EE  0100               	movlb	0	; () banked
 11900  0027F0  6F8E               	movwf	lcd_send@value& (0+255),b
 11901  0027F2  0E00               	movlw	0
 11902  0027F4  ECCD  F033         	call	_lcd_send
 11903  0027F8                     
 11904                           ;lib_ili9341.c: 85:     lcd_send(1,0x08);
 11905  0027F8  0E08               	movlw	8
 11906  0027FA  0100               	movlb	0	; () banked
 11907  0027FC  6F8E               	movwf	lcd_send@value& (0+255),b
 11908  0027FE  0E01               	movlw	1
 11909  002800  ECCD  F033         	call	_lcd_send
 11910  002804                     
 11911                           ;lib_ili9341.c: 86:     lcd_send(1,0x82);
 11912  002804  0E82               	movlw	130
 11913  002806  0100               	movlb	0	; () banked
 11914  002808  6F8E               	movwf	lcd_send@value& (0+255),b
 11915  00280A  0E01               	movlw	1
 11916  00280C  ECCD  F033         	call	_lcd_send
 11917  002810                     
 11918                           ;lib_ili9341.c: 87:     lcd_send(1,0x27);
 11919  002810  0E27               	movlw	39
 11920  002812  0100               	movlb	0	; () banked
 11921  002814  6F8E               	movwf	lcd_send@value& (0+255),b
 11922  002816  0E01               	movlw	1
 11923  002818  ECCD  F033         	call	_lcd_send
 11924  00281C                     
 11925                           ;lib_ili9341.c: 88:     lcd_send(0,0xF2);
 11926  00281C  0EF2               	movlw	242
 11927  00281E  0100               	movlb	0	; () banked
 11928  002820  6F8E               	movwf	lcd_send@value& (0+255),b
 11929  002822  0E00               	movlw	0
 11930  002824  ECCD  F033         	call	_lcd_send
 11931  002828                     
 11932                           ;lib_ili9341.c: 89:     lcd_send(1,0x00);
 11933  002828  0E00               	movlw	0
 11934  00282A  0100               	movlb	0	; () banked
 11935  00282C  6F8E               	movwf	lcd_send@value& (0+255),b
 11936  00282E  0E01               	movlw	1
 11937  002830  ECCD  F033         	call	_lcd_send
 11938  002834                     
 11939                           ;lib_ili9341.c: 90:     lcd_send(0,0x26);
 11940  002834  0E26               	movlw	38
 11941  002836  0100               	movlb	0	; () banked
 11942  002838  6F8E               	movwf	lcd_send@value& (0+255),b
 11943  00283A  0E00               	movlw	0
 11944  00283C  ECCD  F033         	call	_lcd_send
 11945  002840                     
 11946                           ;lib_ili9341.c: 91:     lcd_send(1,0x01);
 11947  002840  0E01               	movlw	1
 11948  002842  0100               	movlb	0	; () banked
 11949  002844  6F8E               	movwf	lcd_send@value& (0+255),b
 11950  002846  0E01               	movlw	1
 11951  002848  ECCD  F033         	call	_lcd_send
 11952  00284C                     
 11953                           ;lib_ili9341.c: 92:     lcd_send(0,0xE0);
 11954  00284C  0EE0               	movlw	224
 11955  00284E  0100               	movlb	0	; () banked
 11956  002850  6F8E               	movwf	lcd_send@value& (0+255),b
 11957  002852  0E00               	movlw	0
 11958  002854  ECCD  F033         	call	_lcd_send
 11959  002858                     
 11960                           ;lib_ili9341.c: 93:     lcd_send(1,0x0F);
 11961  002858  0E0F               	movlw	15
 11962  00285A  0100               	movlb	0	; () banked
 11963  00285C  6F8E               	movwf	lcd_send@value& (0+255),b
 11964  00285E  0E01               	movlw	1
 11965  002860  ECCD  F033         	call	_lcd_send
 11966  002864                     
 11967                           ;lib_ili9341.c: 94:     lcd_send(1,0x31);
 11968  002864  0E31               	movlw	49
 11969  002866  0100               	movlb	0	; () banked
 11970  002868  6F8E               	movwf	lcd_send@value& (0+255),b
 11971  00286A  0E01               	movlw	1
 11972  00286C  ECCD  F033         	call	_lcd_send
 11973  002870                     
 11974                           ;lib_ili9341.c: 95:     lcd_send(1,0x2B);
 11975  002870  0E2B               	movlw	43
 11976  002872  0100               	movlb	0	; () banked
 11977  002874  6F8E               	movwf	lcd_send@value& (0+255),b
 11978  002876  0E01               	movlw	1
 11979  002878  ECCD  F033         	call	_lcd_send
 11980  00287C                     
 11981                           ;lib_ili9341.c: 96:     lcd_send(1,0x0C);
 11982  00287C  0E0C               	movlw	12
 11983  00287E  0100               	movlb	0	; () banked
 11984  002880  6F8E               	movwf	lcd_send@value& (0+255),b
 11985  002882  0E01               	movlw	1
 11986  002884  ECCD  F033         	call	_lcd_send
 11987  002888                     
 11988                           ;lib_ili9341.c: 97:     lcd_send(1,0x0E);
 11989  002888  0E0E               	movlw	14
 11990  00288A  0100               	movlb	0	; () banked
 11991  00288C  6F8E               	movwf	lcd_send@value& (0+255),b
 11992  00288E  0E01               	movlw	1
 11993  002890  ECCD  F033         	call	_lcd_send
 11994  002894                     
 11995                           ;lib_ili9341.c: 98:     lcd_send(1,0x08);
 11996  002894  0E08               	movlw	8
 11997  002896  0100               	movlb	0	; () banked
 11998  002898  6F8E               	movwf	lcd_send@value& (0+255),b
 11999  00289A  0E01               	movlw	1
 12000  00289C  ECCD  F033         	call	_lcd_send
 12001  0028A0                     
 12002                           ;lib_ili9341.c: 99:     lcd_send(1,0x4E);
 12003  0028A0  0E4E               	movlw	78
 12004  0028A2  0100               	movlb	0	; () banked
 12005  0028A4  6F8E               	movwf	lcd_send@value& (0+255),b
 12006  0028A6  0E01               	movlw	1
 12007  0028A8  ECCD  F033         	call	_lcd_send
 12008  0028AC                     
 12009                           ;lib_ili9341.c: 100:     lcd_send(1,0xF1);
 12010  0028AC  0EF1               	movlw	241
 12011  0028AE  0100               	movlb	0	; () banked
 12012  0028B0  6F8E               	movwf	lcd_send@value& (0+255),b
 12013  0028B2  0E01               	movlw	1
 12014  0028B4  ECCD  F033         	call	_lcd_send
 12015  0028B8                     
 12016                           ;lib_ili9341.c: 101:     lcd_send(1,0x37);
 12017  0028B8  0E37               	movlw	55
 12018  0028BA  0100               	movlb	0	; () banked
 12019  0028BC  6F8E               	movwf	lcd_send@value& (0+255),b
 12020  0028BE  0E01               	movlw	1
 12021  0028C0  ECCD  F033         	call	_lcd_send
 12022  0028C4                     
 12023                           ;lib_ili9341.c: 102:     lcd_send(1,0x07);
 12024  0028C4  0E07               	movlw	7
 12025  0028C6  0100               	movlb	0	; () banked
 12026  0028C8  6F8E               	movwf	lcd_send@value& (0+255),b
 12027  0028CA  0E01               	movlw	1
 12028  0028CC  ECCD  F033         	call	_lcd_send
 12029  0028D0                     
 12030                           ;lib_ili9341.c: 103:     lcd_send(1,0x10);
 12031  0028D0  0E10               	movlw	16
 12032  0028D2  0100               	movlb	0	; () banked
 12033  0028D4  6F8E               	movwf	lcd_send@value& (0+255),b
 12034  0028D6  0E01               	movlw	1
 12035  0028D8  ECCD  F033         	call	_lcd_send
 12036  0028DC                     
 12037                           ;lib_ili9341.c: 104:     lcd_send(1,0x03);
 12038  0028DC  0E03               	movlw	3
 12039  0028DE  0100               	movlb	0	; () banked
 12040  0028E0  6F8E               	movwf	lcd_send@value& (0+255),b
 12041  0028E2  0E01               	movlw	1
 12042  0028E4  ECCD  F033         	call	_lcd_send
 12043  0028E8                     
 12044                           ;lib_ili9341.c: 105:     lcd_send(1,0x0E);
 12045  0028E8  0E0E               	movlw	14
 12046  0028EA  0100               	movlb	0	; () banked
 12047  0028EC  6F8E               	movwf	lcd_send@value& (0+255),b
 12048  0028EE  0E01               	movlw	1
 12049  0028F0  ECCD  F033         	call	_lcd_send
 12050  0028F4                     
 12051                           ;lib_ili9341.c: 106:     lcd_send(1,0x09);
 12052  0028F4  0E09               	movlw	9
 12053  0028F6  0100               	movlb	0	; () banked
 12054  0028F8  6F8E               	movwf	lcd_send@value& (0+255),b
 12055  0028FA  0E01               	movlw	1
 12056  0028FC  ECCD  F033         	call	_lcd_send
 12057  002900                     
 12058                           ;lib_ili9341.c: 107:     lcd_send(1,0x00);
 12059  002900  0E00               	movlw	0
 12060  002902  0100               	movlb	0	; () banked
 12061  002904  6F8E               	movwf	lcd_send@value& (0+255),b
 12062  002906  0E01               	movlw	1
 12063  002908  ECCD  F033         	call	_lcd_send
 12064  00290C                     
 12065                           ;lib_ili9341.c: 108:     lcd_send(0,0xE1);
 12066  00290C  0EE1               	movlw	225
 12067  00290E  0100               	movlb	0	; () banked
 12068  002910  6F8E               	movwf	lcd_send@value& (0+255),b
 12069  002912  0E00               	movlw	0
 12070  002914  ECCD  F033         	call	_lcd_send
 12071  002918                     
 12072                           ;lib_ili9341.c: 109:     lcd_send(1,0x00);
 12073  002918  0E00               	movlw	0
 12074  00291A  0100               	movlb	0	; () banked
 12075  00291C  6F8E               	movwf	lcd_send@value& (0+255),b
 12076  00291E  0E01               	movlw	1
 12077  002920  ECCD  F033         	call	_lcd_send
 12078  002924                     
 12079                           ;lib_ili9341.c: 110:     lcd_send(1,0x0E);
 12080  002924  0E0E               	movlw	14
 12081  002926  0100               	movlb	0	; () banked
 12082  002928  6F8E               	movwf	lcd_send@value& (0+255),b
 12083  00292A  0E01               	movlw	1
 12084  00292C  ECCD  F033         	call	_lcd_send
 12085  002930                     
 12086                           ;lib_ili9341.c: 111:     lcd_send(1,0x14);
 12087  002930  0E14               	movlw	20
 12088  002932  0100               	movlb	0	; () banked
 12089  002934  6F8E               	movwf	lcd_send@value& (0+255),b
 12090  002936  0E01               	movlw	1
 12091  002938  ECCD  F033         	call	_lcd_send
 12092  00293C                     
 12093                           ;lib_ili9341.c: 112:     lcd_send(1,0x03);
 12094  00293C  0E03               	movlw	3
 12095  00293E  0100               	movlb	0	; () banked
 12096  002940  6F8E               	movwf	lcd_send@value& (0+255),b
 12097  002942  0E01               	movlw	1
 12098  002944  ECCD  F033         	call	_lcd_send
 12099  002948                     
 12100                           ;lib_ili9341.c: 113:     lcd_send(1,0x11);
 12101  002948  0E11               	movlw	17
 12102  00294A  0100               	movlb	0	; () banked
 12103  00294C  6F8E               	movwf	lcd_send@value& (0+255),b
 12104  00294E  0E01               	movlw	1
 12105  002950  ECCD  F033         	call	_lcd_send
 12106  002954                     
 12107                           ;lib_ili9341.c: 114:     lcd_send(1,0x07);
 12108  002954  0E07               	movlw	7
 12109  002956  0100               	movlb	0	; () banked
 12110  002958  6F8E               	movwf	lcd_send@value& (0+255),b
 12111  00295A  0E01               	movlw	1
 12112  00295C  ECCD  F033         	call	_lcd_send
 12113  002960                     
 12114                           ;lib_ili9341.c: 115:     lcd_send(1,0x31);
 12115  002960  0E31               	movlw	49
 12116  002962  0100               	movlb	0	; () banked
 12117  002964  6F8E               	movwf	lcd_send@value& (0+255),b
 12118  002966  0E01               	movlw	1
 12119  002968  ECCD  F033         	call	_lcd_send
 12120  00296C                     
 12121                           ;lib_ili9341.c: 116:     lcd_send(1,0xC1);
 12122  00296C  0EC1               	movlw	193
 12123  00296E  0100               	movlb	0	; () banked
 12124  002970  6F8E               	movwf	lcd_send@value& (0+255),b
 12125  002972  0E01               	movlw	1
 12126  002974  ECCD  F033         	call	_lcd_send
 12127  002978                     
 12128                           ;lib_ili9341.c: 117:     lcd_send(1,0x48);
 12129  002978  0E48               	movlw	72
 12130  00297A  0100               	movlb	0	; () banked
 12131  00297C  6F8E               	movwf	lcd_send@value& (0+255),b
 12132  00297E  0E01               	movlw	1
 12133  002980  ECCD  F033         	call	_lcd_send
 12134  002984                     
 12135                           ;lib_ili9341.c: 118:     lcd_send(1,0x08);
 12136  002984  0E08               	movlw	8
 12137  002986  0100               	movlb	0	; () banked
 12138  002988  6F8E               	movwf	lcd_send@value& (0+255),b
 12139  00298A  0E01               	movlw	1
 12140  00298C  ECCD  F033         	call	_lcd_send
 12141  002990                     
 12142                           ;lib_ili9341.c: 119:     lcd_send(1,0x0F);
 12143  002990  0E0F               	movlw	15
 12144  002992  0100               	movlb	0	; () banked
 12145  002994  6F8E               	movwf	lcd_send@value& (0+255),b
 12146  002996  0E01               	movlw	1
 12147  002998  ECCD  F033         	call	_lcd_send
 12148  00299C                     
 12149                           ;lib_ili9341.c: 120:     lcd_send(1,0x0C);
 12150  00299C  0E0C               	movlw	12
 12151  00299E  0100               	movlb	0	; () banked
 12152  0029A0  6F8E               	movwf	lcd_send@value& (0+255),b
 12153  0029A2  0E01               	movlw	1
 12154  0029A4  ECCD  F033         	call	_lcd_send
 12155  0029A8                     
 12156                           ;lib_ili9341.c: 121:     lcd_send(1,0x31);
 12157  0029A8  0E31               	movlw	49
 12158  0029AA  0100               	movlb	0	; () banked
 12159  0029AC  6F8E               	movwf	lcd_send@value& (0+255),b
 12160  0029AE  0E01               	movlw	1
 12161  0029B0  ECCD  F033         	call	_lcd_send
 12162  0029B4                     
 12163                           ;lib_ili9341.c: 122:     lcd_send(1,0x36);
 12164  0029B4  0E36               	movlw	54
 12165  0029B6  0100               	movlb	0	; () banked
 12166  0029B8  6F8E               	movwf	lcd_send@value& (0+255),b
 12167  0029BA  0E01               	movlw	1
 12168  0029BC  ECCD  F033         	call	_lcd_send
 12169  0029C0                     
 12170                           ;lib_ili9341.c: 123:     lcd_send(1,0x0F);
 12171  0029C0  0E0F               	movlw	15
 12172  0029C2  0100               	movlb	0	; () banked
 12173  0029C4  6F8E               	movwf	lcd_send@value& (0+255),b
 12174  0029C6  0E01               	movlw	1
 12175  0029C8  ECCD  F033         	call	_lcd_send
 12176  0029CC                     
 12177                           ;lib_ili9341.c: 124:     lcd_send(0,0x11);
 12178  0029CC  0E11               	movlw	17
 12179  0029CE  0100               	movlb	0	; () banked
 12180  0029D0  6F8E               	movwf	lcd_send@value& (0+255),b
 12181  0029D2  0E00               	movlw	0
 12182  0029D4  ECCD  F033         	call	_lcd_send
 12183                           
 12184                           ;lib_ili9341.c: 125:     msDelay(120);
 12185  0029D8  0E78               	movlw	120
 12186  0029DA  EC4F  F032         	call	_msDelay
 12187  0029DE                     
 12188                           ;lib_ili9341.c: 126:     lcd_send(0,0x29);
 12189  0029DE  0E29               	movlw	41
 12190  0029E0  0100               	movlb	0	; () banked
 12191  0029E2  6F8E               	movwf	lcd_send@value& (0+255),b
 12192  0029E4  0E00               	movlw	0
 12193  0029E6  ECCD  F033         	call	_lcd_send
 12194  0029EA                     
 12195                           ;lib_ili9341.c: 127:     msDelay(120);
 12196  0029EA  0E78               	movlw	120
 12197  0029EC  EC4F  F032         	call	_msDelay
 12198  0029F0                     
 12199                           ;lib_ili9341.c: 130:     lcd_fill(global_bg_color);
 12200  0029F0  0E00               	movlw	0
 12201  0029F2  0100               	movlb	0	; () banked
 12202  0029F4  6F97               	movwf	(lcd_fill@bg_color+1)& (0+255),b
 12203  0029F6  0E00               	movlw	0
 12204  0029F8  6F96               	movwf	lcd_fill@bg_color& (0+255),b
 12205  0029FA  ECFA  F02D         	call	_lcd_fill	;wreg free
 12206  0029FE  0012               	return		;funcret
 12207  002A00                     __end_of_lcd_init:
 12208                           	opt callstack 0
 12209                           
 12210 ;; *************** function _msDelay *****************
 12211 ;; Defined at:
 12212 ;;		line 16 in file "lib_ili9341.c"
 12213 ;; Parameters:    Size  Location     Type
 12214 ;;  ms              1    wreg     unsigned char 
 12215 ;; Auto vars:     Size  Location     Type
 12216 ;;  ms              1   46[BANK0 ] unsigned char 
 12217 ;;  k               1   47[BANK0 ] unsigned char 
 12218 ;; Return value:  Size  Location     Type
 12219 ;;                  1    wreg      void 
 12220 ;; Registers used:
 12221 ;;		wreg, status,2, status,0
 12222 ;; Tracked objects:
 12223 ;;		On entry : 0/0
 12224 ;;		On exit  : 0/0
 12225 ;;		Unchanged: 0/0
 12226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12228 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12229 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12230 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12231 ;;Total ram usage:        3 bytes
 12232 ;; Hardware stack levels used:    1
 12233 ;; Hardware stack levels required when called:   13
 12234 ;; This function calls:
 12235 ;;		Nothing
 12236 ;; This function is called by:
 12237 ;;		_lcd_init
 12238 ;; This function uses a non-reentrant model
 12239 ;;
 12240                           
 12241                           	psect	text38
 12242  00649E                     __ptext38:
 12243                           	opt callstack 0
 12244  00649E                     _msDelay:
 12245                           	opt callstack 16
 12246                           
 12247                           ;incstack = 0
 12248                           ;msDelay@ms stored from wreg
 12249  00649E  0100               	movlb	0	; () banked
 12250  0064A0  6F8E               	movwf	msDelay@ms& (0+255),b
 12251  0064A2                     
 12252                           ;lib_ili9341.c: 16: void msDelay (uint8_t ms);lib_ili9341.c: 17: {;lib_ili9341.c: 18:   
      +                            uint8_t k;;lib_ili9341.c: 20:     for(k=0; k<ms; k++)
 12253  0064A2  0E00               	movlw	0
 12254  0064A4  0100               	movlb	0	; () banked
 12255  0064A6  6F8F               	movwf	msDelay@k& (0+255),b
 12256  0064A8  EF61  F032         	goto	l6419
 12257  0064AC                     l6415:
 12258                           
 12259                           ; BSR set to: 0
 12260                           ;lib_ili9341.c: 21:     {;lib_ili9341.c: 22:         _delay((unsigned long)((1)*(8000000
      +                          /4000.0)));
 12261  0064AC  0E03               	movlw	3
 12262  0064AE  0100               	movlb	0	; () banked
 12263  0064B0  6F8D               	movwf	??_msDelay& (0+255),b
 12264  0064B2  0E97               	movlw	151
 12265  0064B4                     u11797:
 12266  0064B4  2EE8               	decfsz	wreg,f,c
 12267  0064B6  D7FE               	bra	u11797
 12268  0064B8  2F8D               	decfsz	??_msDelay& (0+255),f,b
 12269  0064BA  D7FC               	bra	u11797
 12270  0064BC  D000               	nop2	
 12271  0064BE                     
 12272                           ;lib_ili9341.c: 23:     }
 12273  0064BE  0100               	movlb	0	; () banked
 12274  0064C0  2B8F               	incf	msDelay@k& (0+255),f,b
 12275  0064C2                     l6419:
 12276                           
 12277                           ; BSR set to: 0
 12278  0064C2  518E               	movf	msDelay@ms& (0+255),w,b
 12279  0064C4  5D8F               	subwf	msDelay@k& (0+255),w,b
 12280  0064C6  A0D8               	btfss	status,0,c
 12281  0064C8  EF68  F032         	goto	u7621
 12282  0064CC  EF6A  F032         	goto	u7620
 12283  0064D0                     u7621:
 12284  0064D0  EF56  F032         	goto	l6415
 12285  0064D4                     u7620:
 12286  0064D4                     
 12287                           ; BSR set to: 0
 12288  0064D4  0012               	return		;funcret
 12289  0064D6                     __end_of_msDelay:
 12290                           	opt callstack 0
 12291                           
 12292 ;; *************** function _lcd_fill *****************
 12293 ;; Defined at:
 12294 ;;		line 193 in file "lib_ili9341.c"
 12295 ;; Parameters:    Size  Location     Type
 12296 ;;  bg_color        2   54[BANK0 ] unsigned short 
 12297 ;; Auto vars:     Size  Location     Type
 12298 ;;  width           2   58[BANK0 ] unsigned short 
 12299 ;;  height          2   56[BANK0 ] unsigned short 
 12300 ;; Return value:  Size  Location     Type
 12301 ;;                  1    wreg      void 
 12302 ;; Registers used:
 12303 ;;		wreg, status,2, status,0, cstack
 12304 ;; Tracked objects:
 12305 ;;		On entry : 0/0
 12306 ;;		On exit  : 0/0
 12307 ;;		Unchanged: 0/0
 12308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12309 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12310 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12312 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12313 ;;Total ram usage:        6 bytes
 12314 ;; Hardware stack levels used:    1
 12315 ;; Hardware stack levels required when called:   17
 12316 ;; This function calls:
 12317 ;;		_lcd_draw_pixel
 12318 ;;		_lcd_set_cursor
 12319 ;; This function is called by:
 12320 ;;		_lcd_init
 12321 ;; This function uses a non-reentrant model
 12322 ;;
 12323                           
 12324                           	psect	text39
 12325  005BF4                     __ptext39:
 12326                           	opt callstack 0
 12327  005BF4                     _lcd_fill:
 12328                           	opt callstack 12
 12329  005BF4                     
 12330                           ;lib_ili9341.c: 193: void lcd_fill(uint16_t bg_color);lib_ili9341.c: 194: {;lib_ili9341.
      +                          c: 195:     uint16_t width = 320, height = 240;
 12331  005BF4  0E01               	movlw	1
 12332  005BF6  0100               	movlb	0	; () banked
 12333  005BF8  6F9B               	movwf	(lcd_fill@width+1)& (0+255),b
 12334  005BFA  0E40               	movlw	64
 12335  005BFC  6F9A               	movwf	lcd_fill@width& (0+255),b
 12336  005BFE  0E00               	movlw	0
 12337  005C00  6F99               	movwf	(lcd_fill@height+1)& (0+255),b
 12338  005C02  0EF0               	movlw	240
 12339  005C04  6F98               	movwf	lcd_fill@height& (0+255),b
 12340  005C06                     
 12341                           ; BSR set to: 0
 12342                           ;lib_ili9341.c: 197:     if( lcd_set_cursor(0,0) )
 12343  005C06  0E00               	movlw	0
 12344  005C08  6F93               	movwf	(lcd_set_cursor@x+1)& (0+255),b
 12345  005C0A  0E00               	movlw	0
 12346  005C0C  6F92               	movwf	lcd_set_cursor@x& (0+255),b
 12347  005C0E  0E00               	movlw	0
 12348  005C10  6F95               	movwf	(lcd_set_cursor@y+1)& (0+255),b
 12349  005C12  0E00               	movlw	0
 12350  005C14  6F94               	movwf	lcd_set_cursor@y& (0+255),b
 12351  005C16  EC3D  F031         	call	_lcd_set_cursor	;wreg free
 12352  005C1A  0900               	iorlw	0
 12353  005C1C  B4D8               	btfsc	status,2,c
 12354  005C1E  EF13  F02E         	goto	u7631
 12355  005C22  EF15  F02E         	goto	u7630
 12356  005C26                     u7631:
 12357  005C26  EF2F  F02E         	goto	l6433
 12358  005C2A                     u7630:
 12359  005C2A  EF3D  F02E         	goto	l521
 12360  005C2E                     l6427:
 12361                           
 12362                           ; BSR set to: 0
 12363                           ;lib_ili9341.c: 205:         {;lib_ili9341.c: 206:             lcd_draw_pixel(bg_color);
 12364  005C2E  C096  F090         	movff	lcd_fill@bg_color,lcd_draw_pixel@color
 12365  005C32  C097  F091         	movff	lcd_fill@bg_color+1,lcd_draw_pixel@color+1
 12366  005C36  ECF6  F033         	call	_lcd_draw_pixel	;wreg free
 12367  005C3A                     l6429:
 12368                           
 12369                           ;lib_ili9341.c: 204:         while(width--)
 12370  005C3A  0100               	movlb	0	; () banked
 12371  005C3C  079A               	decf	lcd_fill@width& (0+255),f,b
 12372  005C3E  A0D8               	btfss	status,0,c
 12373  005C40  079B               	decf	(lcd_fill@width+1)& (0+255),f,b
 12374  005C42  299A               	incf	lcd_fill@width& (0+255),w,b
 12375  005C44  E106               	bnz	u7641
 12376  005C46  299B               	incf	(lcd_fill@width+1)& (0+255),w,b
 12377  005C48  A4D8               	btfss	status,2,c
 12378  005C4A  EF29  F02E         	goto	u7641
 12379  005C4E  EF2B  F02E         	goto	u7640
 12380  005C52                     u7641:
 12381  005C52  EF17  F02E         	goto	l6427
 12382  005C56                     u7640:
 12383  005C56                     
 12384                           ; BSR set to: 0
 12385                           ;lib_ili9341.c: 208:         width = 320;
 12386  005C56  0E01               	movlw	1
 12387  005C58  6F9B               	movwf	(lcd_fill@width+1)& (0+255),b
 12388  005C5A  0E40               	movlw	64
 12389  005C5C  6F9A               	movwf	lcd_fill@width& (0+255),b
 12390  005C5E                     l6433:
 12391                           
 12392                           ;lib_ili9341.c: 202:     while(height--)
 12393  005C5E  0100               	movlb	0	; () banked
 12394  005C60  0798               	decf	lcd_fill@height& (0+255),f,b
 12395  005C62  A0D8               	btfss	status,0,c
 12396  005C64  0799               	decf	(lcd_fill@height+1)& (0+255),f,b
 12397  005C66  2998               	incf	lcd_fill@height& (0+255),w,b
 12398  005C68  E106               	bnz	u7651
 12399  005C6A  2999               	incf	(lcd_fill@height+1)& (0+255),w,b
 12400  005C6C  A4D8               	btfss	status,2,c
 12401  005C6E  EF3B  F02E         	goto	u7651
 12402  005C72  EF3D  F02E         	goto	u7650
 12403  005C76                     u7651:
 12404  005C76  EF1D  F02E         	goto	l6429
 12405  005C7A                     u7650:
 12406  005C7A                     l521:
 12407  005C7A  0012               	return		;funcret
 12408  005C7C                     __end_of_lcd_fill:
 12409                           	opt callstack 0
 12410                           
 12411 ;; *************** function _lcd_draw_string *****************
 12412 ;; Defined at:
 12413 ;;		line 380 in file "lib_ili9341.c"
 12414 ;; Parameters:    Size  Location     Type
 12415 ;;  x               2    0[BANK1 ] unsigned short 
 12416 ;;  y               2    2[BANK1 ] unsigned short 
 12417 ;;  pS              2    4[BANK1 ] PTR const unsigned char 
 12418 ;;		 -> string(30), STR_2(33), 
 12419 ;;  fg_color        2    6[BANK1 ] unsigned short 
 12420 ;;  bg_color        2    8[BANK1 ] unsigned short 
 12421 ;; Auto vars:     Size  Location     Type
 12422 ;;  lIndex          2   82[BANK0 ] unsigned short 
 12423 ;;  k               2   80[BANK0 ] unsigned short 
 12424 ;; Return value:  Size  Location     Type
 12425 ;;                  1    wreg      void 
 12426 ;; Registers used:
 12427 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12428 ;; Tracked objects:
 12429 ;;		On entry : 0/0
 12430 ;;		On exit  : 0/0
 12431 ;;		Unchanged: 0/0
 12432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12433 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12434 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12435 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12436 ;;      Totals:         0       8      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12437 ;;Total ram usage:       18 bytes
 12438 ;; Hardware stack levels used:    1
 12439 ;; Hardware stack levels required when called:   18
 12440 ;; This function calls:
 12441 ;;		_lcd_draw_char
 12442 ;; This function is called by:
 12443 ;;		_main
 12444 ;; This function uses a non-reentrant model
 12445 ;;
 12446                           
 12447                           	psect	text40
 12448  004EA8                     __ptext40:
 12449                           	opt callstack 0
 12450  004EA8                     _lcd_draw_string:
 12451                           	opt callstack 12
 12452  004EA8                     
 12453                           ;lib_ili9341.c: 380: void lcd_draw_string (uint16_t x, uint16_t y, const char *pS, uint1
      +                          6_t fg_color, uint16_t bg_color);lib_ili9341.c: 381: {;lib_ili9341.c: 382:     uint16_t 
      +                          lIndex, k;;lib_ili9341.c: 384:     while(*pS)
 12454  004EA8  EFD9  F027         	goto	l9055
 12455  004EAC                     l9041:
 12456                           
 12457                           ;lib_ili9341.c: 385:     {;lib_ili9341.c: 386:         lIndex = 0;
 12458  004EAC  0E00               	movlw	0
 12459  004EAE  0100               	movlb	0	; () banked
 12460  004EB0  6FB3               	movwf	(lcd_draw_string@lIndex+1)& (0+255),b
 12461  004EB2  0E00               	movlw	0
 12462  004EB4  6FB2               	movwf	lcd_draw_string@lIndex& (0+255),b
 12463                           
 12464                           ;lib_ili9341.c: 387:         for(k=0; k<(*pS - ' '); k++)
 12465  004EB6  0E00               	movlw	0
 12466  004EB8  6FB1               	movwf	(lcd_draw_string@k+1)& (0+255),b
 12467  004EBA  0E00               	movlw	0
 12468  004EBC  6FB0               	movwf	lcd_draw_string@k& (0+255),b
 12469  004EBE  EF80  F027         	goto	l9047
 12470  004EC2                     l9043:
 12471                           
 12472                           ; BSR set to: 0
 12473                           ;lib_ili9341.c: 388:         {;lib_ili9341.c: 389:             lIndex += ((font[lIndex])
      +                           << 1) + 1;
 12474  004EC2  90D8               	bcf	status,0,c
 12475  004EC4  35B2               	rlcf	lcd_draw_string@lIndex& (0+255),w,b
 12476  004EC6  6EF6               	movwf	tblptrl,c
 12477  004EC8  35B3               	rlcf	(lcd_draw_string@lIndex+1)& (0+255),w,b
 12478  004ECA  6EF7               	movwf	tblptrh,c
 12479  004ECC  0E35               	movlw	low _font
 12480  004ECE  26F6               	addwf	tblptrl,f,c
 12481  004ED0  0EF1               	movlw	high _font
 12482  004ED2  22F7               	addwfc	tblptrh,f,c
 12483  004ED4                     	if	1	;There are 3 active tblptr bytes
 12484  004ED4  6AF8               	clrf	tblptru,c
 12485  004ED6  0E00               	movlw	low (__mediumconst shr (0+16))
 12486  004ED8  22F8               	addwfc	tblptru,f,c
 12487  004EDA                     	endif
 12488  004EDA  0009               	tblrd		*+
 12489  004EDC  CFF5 F0AC          	movff	tablat,??_lcd_draw_string
 12490  004EE0  0009               	tblrd		*+
 12491  004EE2  CFF5 F0AD          	movff	tablat,??_lcd_draw_string+1
 12492  004EE6  90D8               	bcf	status,0,c
 12493  004EE8  37AC               	rlcf	??_lcd_draw_string& (0+255),f,b
 12494  004EEA  37AD               	rlcf	(??_lcd_draw_string+1)& (0+255),f,b
 12495  004EEC  0E01               	movlw	1
 12496  004EEE  27AC               	addwf	??_lcd_draw_string& (0+255),f,b
 12497  004EF0  0E00               	movlw	0
 12498  004EF2  23AD               	addwfc	(??_lcd_draw_string+1)& (0+255),f,b
 12499  004EF4  51AC               	movf	??_lcd_draw_string& (0+255),w,b
 12500  004EF6  27B2               	addwf	lcd_draw_string@lIndex& (0+255),f,b
 12501  004EF8  51AD               	movf	(??_lcd_draw_string+1)& (0+255),w,b
 12502  004EFA  23B3               	addwfc	(lcd_draw_string@lIndex+1)& (0+255),f,b
 12503  004EFC                     
 12504                           ; BSR set to: 0
 12505                           ;lib_ili9341.c: 390:         }
 12506  004EFC  4BB0               	infsnz	lcd_draw_string@k& (0+255),f,b
 12507  004EFE  2BB1               	incf	(lcd_draw_string@k+1)& (0+255),f,b
 12508  004F00                     l9047:
 12509                           
 12510                           ; BSR set to: 0
 12511  004F00  0EE0               	movlw	224
 12512  004F02  6FAC               	movwf	??_lcd_draw_string& (0+255),b
 12513  004F04  0EFF               	movlw	255
 12514  004F06  6FAD               	movwf	(??_lcd_draw_string+1)& (0+255),b
 12515  004F08  C104  FFF6         	movff	lcd_draw_string@pS,tblptrl
 12516  004F0C  C105  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 12517  004F10  0E00               	movlw	low (__mediumconst shr (0+16))
 12518  004F12  6EF8               	movwf	tblptru,c
 12519  004F14  0E0E               	movlw	(high __ramtop+-1)
 12520  004F16  64F7               	cpfsgt	tblptrh,c
 12521  004F18  D003               	bra	u11707
 12522  004F1A  0008               	tblrd		*
 12523  004F1C  50F5               	movf	tablat,w,c
 12524  004F1E  D005               	bra	u11700
 12525  004F20                     u11707:
 12526  004F20  CFF6 FFE1          	movff	tblptrl,fsr1l
 12527  004F24  CFF7 FFE2          	movff	tblptrh,fsr1h
 12528  004F28  50E7               	movf	indf1,w,c
 12529  004F2A                     u11700:
 12530  004F2A  0100               	movlb	0	; () banked
 12531  004F2C  6FAE               	movwf	(??_lcd_draw_string+2)& (0+255),b
 12532  004F2E  6BAF               	clrf	(??_lcd_draw_string+3)& (0+255),b
 12533  004F30  51AC               	movf	??_lcd_draw_string& (0+255),w,b
 12534  004F32  27AE               	addwf	(??_lcd_draw_string+2)& (0+255),f,b
 12535  004F34  51AD               	movf	(??_lcd_draw_string+1)& (0+255),w,b
 12536  004F36  23AF               	addwfc	(??_lcd_draw_string+3)& (0+255),f,b
 12537  004F38  51AE               	movf	(??_lcd_draw_string+2)& (0+255),w,b
 12538  004F3A  5DB0               	subwf	lcd_draw_string@k& (0+255),w,b
 12539  004F3C  51AF               	movf	(??_lcd_draw_string+3)& (0+255),w,b
 12540  004F3E  59B1               	subwfb	(lcd_draw_string@k+1)& (0+255),w,b
 12541  004F40  A0D8               	btfss	status,0,c
 12542  004F42  EFA5  F027         	goto	u11711
 12543  004F46  EFA7  F027         	goto	u11710
 12544  004F4A                     u11711:
 12545  004F4A  EF61  F027         	goto	l9043
 12546  004F4E                     u11710:
 12547  004F4E                     
 12548                           ; BSR set to: 0
 12549                           ;lib_ili9341.c: 392:         lcd_draw_char(x, y, lIndex, fg_color, bg_color);
 12550  004F4E  C100  F096         	movff	lcd_draw_string@x,lcd_draw_char@x
 12551  004F52  C101  F097         	movff	lcd_draw_string@x+1,lcd_draw_char@x+1
 12552  004F56  C102  F098         	movff	lcd_draw_string@y,lcd_draw_char@y
 12553  004F5A  C103  F099         	movff	lcd_draw_string@y+1,lcd_draw_char@y+1
 12554  004F5E  C0B2  F09A         	movff	lcd_draw_string@lIndex,lcd_draw_char@fIndex
 12555  004F62  C0B3  F09B         	movff	lcd_draw_string@lIndex+1,lcd_draw_char@fIndex+1
 12556  004F66  C106  F09C         	movff	lcd_draw_string@fg_color,lcd_draw_char@fg_color
 12557  004F6A  C107  F09D         	movff	lcd_draw_string@fg_color+1,lcd_draw_char@fg_color+1
 12558  004F6E  C108  F09E         	movff	lcd_draw_string@bg_color,lcd_draw_char@bg_color
 12559  004F72  C109  F09F         	movff	lcd_draw_string@bg_color+1,lcd_draw_char@bg_color+1
 12560  004F76  EC2E  F025         	call	_lcd_draw_char	;wreg free
 12561  004F7A                     
 12562                           ;lib_ili9341.c: 394:         x += font[lIndex];
 12563  004F7A  90D8               	bcf	status,0,c
 12564  004F7C  0100               	movlb	0	; () banked
 12565  004F7E  35B2               	rlcf	lcd_draw_string@lIndex& (0+255),w,b
 12566  004F80  6EF6               	movwf	tblptrl,c
 12567  004F82  35B3               	rlcf	(lcd_draw_string@lIndex+1)& (0+255),w,b
 12568  004F84  6EF7               	movwf	tblptrh,c
 12569  004F86  0E35               	movlw	low _font
 12570  004F88  26F6               	addwf	tblptrl,f,c
 12571  004F8A  0EF1               	movlw	high _font
 12572  004F8C  22F7               	addwfc	tblptrh,f,c
 12573  004F8E                     	if	1	;There are 3 active tblptr bytes
 12574  004F8E  6AF8               	clrf	tblptru,c
 12575  004F90  0E00               	movlw	low (__mediumconst shr (0+16))
 12576  004F92  22F8               	addwfc	tblptru,f,c
 12577  004F94                     	endif
 12578  004F94  0009               	tblrd		*+
 12579  004F96  CFF5 F0AC          	movff	tablat,??_lcd_draw_string
 12580  004F9A  0009               	tblrd		*+
 12581  004F9C  CFF5 F0AD          	movff	tablat,??_lcd_draw_string+1
 12582  004FA0  51AC               	movf	??_lcd_draw_string& (0+255),w,b
 12583  004FA2  0101               	movlb	1	; () banked
 12584  004FA4  2700               	addwf	lcd_draw_string@x& (0+255),f,b
 12585  004FA6  0100               	movlb	0	; () banked
 12586  004FA8  51AD               	movf	(??_lcd_draw_string+1)& (0+255),w,b
 12587  004FAA  0101               	movlb	1	; () banked
 12588  004FAC  2301               	addwfc	(lcd_draw_string@x+1)& (0+255),f,b
 12589  004FAE                     
 12590                           ; BSR set to: 1
 12591                           ;lib_ili9341.c: 396:         pS++;
 12592  004FAE  4B04               	infsnz	lcd_draw_string@pS& (0+255),f,b
 12593  004FB0  2B05               	incf	(lcd_draw_string@pS+1)& (0+255),f,b
 12594  004FB2                     l9055:
 12595                           
 12596                           ;lib_ili9341.c: 384:     while(*pS)
 12597  004FB2  C104  FFF6         	movff	lcd_draw_string@pS,tblptrl
 12598  004FB6  C105  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 12599  004FBA  0E00               	movlw	low (__mediumconst shr (0+16))
 12600  004FBC  6EF8               	movwf	tblptru,c
 12601  004FBE  0E0E               	movlw	(high __ramtop+-1)
 12602  004FC0  64F7               	cpfsgt	tblptrh,c
 12603  004FC2  D003               	bra	u11727
 12604  004FC4  0008               	tblrd		*
 12605  004FC6  50F5               	movf	tablat,w,c
 12606  004FC8  D005               	bra	u11720
 12607  004FCA                     u11727:
 12608  004FCA  CFF6 FFE1          	movff	tblptrl,fsr1l
 12609  004FCE  CFF7 FFE2          	movff	tblptrh,fsr1h
 12610  004FD2  50E7               	movf	indf1,w,c
 12611  004FD4                     u11720:
 12612  004FD4  0900               	iorlw	0
 12613  004FD6  A4D8               	btfss	status,2,c
 12614  004FD8  EFF0  F027         	goto	u11731
 12615  004FDC  EFF2  F027         	goto	u11730
 12616  004FE0                     u11731:
 12617  004FE0  EF56  F027         	goto	l9041
 12618  004FE4                     u11730:
 12619  004FE4  0012               	return		;funcret
 12620  004FE6                     __end_of_lcd_draw_string:
 12621                           	opt callstack 0
 12622                           
 12623 ;; *************** function _lcd_draw_char *****************
 12624 ;; Defined at:
 12625 ;;		line 355 in file "lib_ili9341.c"
 12626 ;; Parameters:    Size  Location     Type
 12627 ;;  x               2   54[BANK0 ] unsigned short 
 12628 ;;  y               2   56[BANK0 ] unsigned short 
 12629 ;;  fIndex          2   58[BANK0 ] unsigned short 
 12630 ;;  fg_color        2   60[BANK0 ] unsigned short 
 12631 ;;  bg_color        2   62[BANK0 ] unsigned short 
 12632 ;; Auto vars:     Size  Location     Type
 12633 ;;  i               1   75[BANK0 ] unsigned char 
 12634 ;;  k               1   74[BANK0 ] unsigned char 
 12635 ;;  j               1   73[BANK0 ] unsigned char 
 12636 ;; Return value:  Size  Location     Type
 12637 ;;                  1    wreg      void 
 12638 ;; Registers used:
 12639 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12640 ;; Tracked objects:
 12641 ;;		On entry : 0/0
 12642 ;;		On exit  : 0/0
 12643 ;;		Unchanged: 0/0
 12644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12645 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12646 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12647 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12648 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12649 ;;Total ram usage:       22 bytes
 12650 ;; Hardware stack levels used:    1
 12651 ;; Hardware stack levels required when called:   17
 12652 ;; This function calls:
 12653 ;;		_lcd_draw_pixel
 12654 ;;		_lcd_set_cursor
 12655 ;; This function is called by:
 12656 ;;		_lcd_draw_string
 12657 ;; This function uses a non-reentrant model
 12658 ;;
 12659                           
 12660                           	psect	text41
 12661  004A5C                     __ptext41:
 12662                           	opt callstack 0
 12663  004A5C                     _lcd_draw_char:
 12664                           	opt callstack 12
 12665  004A5C                     
 12666                           ;lib_ili9341.c: 355: void lcd_draw_char (uint16_t x, uint16_t y, uint16_t fIndex, uint16
      +                          _t fg_color, uint16_t bg_color);lib_ili9341.c: 356: {;lib_ili9341.c: 357:     uint8_t j,
      +                           k, i;;lib_ili9341.c: 359:     for(j=0; j < font[fIndex]; j++)
 12667  004A5C  0E00               	movlw	0
 12668  004A5E  0100               	movlb	0	; () banked
 12669  004A60  6FA9               	movwf	lcd_draw_char@j& (0+255),b
 12670  004A62  EFD2  F025         	goto	l6471
 12671  004A66                     l6441:
 12672                           
 12673                           ; BSR set to: 0
 12674                           ;lib_ili9341.c: 360:     {;lib_ili9341.c: 361:         lcd_set_cursor(x + font[fIndex] -
      +                           j, y);
 12675  004A66  90D8               	bcf	status,0,c
 12676  004A68  359A               	rlcf	lcd_draw_char@fIndex& (0+255),w,b
 12677  004A6A  6EF6               	movwf	tblptrl,c
 12678  004A6C  359B               	rlcf	(lcd_draw_char@fIndex+1)& (0+255),w,b
 12679  004A6E  6EF7               	movwf	tblptrh,c
 12680  004A70  0E35               	movlw	low _font
 12681  004A72  26F6               	addwf	tblptrl,f,c
 12682  004A74  0EF1               	movlw	high _font
 12683  004A76  22F7               	addwfc	tblptrh,f,c
 12684  004A78                     	if	1	;There are 3 active tblptr bytes
 12685  004A78  6AF8               	clrf	tblptru,c
 12686  004A7A  0E00               	movlw	low (__mediumconst shr (0+16))
 12687  004A7C  22F8               	addwfc	tblptru,f,c
 12688  004A7E                     	endif
 12689  004A7E  0009               	tblrd		*+
 12690  004A80  CFF5 F0A0          	movff	tablat,??_lcd_draw_char
 12691  004A84  0009               	tblrd		*+
 12692  004A86  CFF5 F0A1          	movff	tablat,??_lcd_draw_char+1
 12693  004A8A  51A9               	movf	lcd_draw_char@j& (0+255),w,b
 12694  004A8C  5FA0               	subwf	??_lcd_draw_char& (0+255),f,b
 12695  004A8E  0E00               	movlw	0
 12696  004A90  5BA1               	subwfb	(??_lcd_draw_char+1)& (0+255),f,b
 12697  004A92  5196               	movf	lcd_draw_char@x& (0+255),w,b
 12698  004A94  25A0               	addwf	??_lcd_draw_char& (0+255),w,b
 12699  004A96  6F92               	movwf	lcd_set_cursor@x& (0+255),b
 12700  004A98  5197               	movf	(lcd_draw_char@x+1)& (0+255),w,b
 12701  004A9A  21A1               	addwfc	(??_lcd_draw_char+1)& (0+255),w,b
 12702  004A9C  6F93               	movwf	(lcd_set_cursor@x+1)& (0+255),b
 12703  004A9E  C098  F094         	movff	lcd_draw_char@y,lcd_set_cursor@y
 12704  004AA2  C099  F095         	movff	lcd_draw_char@y+1,lcd_set_cursor@y+1
 12705  004AA6  EC3D  F031         	call	_lcd_set_cursor	;wreg free
 12706  004AAA                     
 12707                           ;lib_ili9341.c: 363:         for(k=0; k<2; k++)
 12708  004AAA  0E00               	movlw	0
 12709  004AAC  0100               	movlb	0	; () banked
 12710  004AAE  6FAA               	movwf	lcd_draw_char@k& (0+255),b
 12711  004AB0                     l6449:
 12712                           
 12713                           ; BSR set to: 0
 12714                           ;lib_ili9341.c: 364:         {;lib_ili9341.c: 365:             for(i=0; i<8; i++)
 12715  004AB0  0E00               	movlw	0
 12716  004AB2  6FAB               	movwf	lcd_draw_char@i& (0+255),b
 12717  004AB4                     l6455:
 12718                           
 12719                           ; BSR set to: 0
 12720                           ;lib_ili9341.c: 366:             {;lib_ili9341.c: 367:                 if( font[ (fIndex
      +                           + ((font[fIndex]) << 1)) - (j<<1) - k ] & (0x80 >> i) )
 12721  004AB4  51A9               	movf	lcd_draw_char@j& (0+255),w,b
 12722  004AB6  6FA0               	movwf	??_lcd_draw_char& (0+255),b
 12723  004AB8  6BA1               	clrf	(??_lcd_draw_char+1)& (0+255),b
 12724  004ABA  90D8               	bcf	status,0,c
 12725  004ABC  37A0               	rlcf	??_lcd_draw_char& (0+255),f,b
 12726  004ABE  37A1               	rlcf	(??_lcd_draw_char+1)& (0+255),f,b
 12727  004AC0  90D8               	bcf	status,0,c
 12728  004AC2  359A               	rlcf	lcd_draw_char@fIndex& (0+255),w,b
 12729  004AC4  6EF6               	movwf	tblptrl,c
 12730  004AC6  359B               	rlcf	(lcd_draw_char@fIndex+1)& (0+255),w,b
 12731  004AC8  6EF7               	movwf	tblptrh,c
 12732  004ACA  0E35               	movlw	low _font
 12733  004ACC  26F6               	addwf	tblptrl,f,c
 12734  004ACE  0EF1               	movlw	high _font
 12735  004AD0  22F7               	addwfc	tblptrh,f,c
 12736  004AD2                     	if	1	;There are 3 active tblptr bytes
 12737  004AD2  6AF8               	clrf	tblptru,c
 12738  004AD4  0E00               	movlw	low (__mediumconst shr (0+16))
 12739  004AD6  22F8               	addwfc	tblptru,f,c
 12740  004AD8                     	endif
 12741  004AD8  0009               	tblrd		*+
 12742  004ADA  CFF5 F0A2          	movff	tablat,??_lcd_draw_char+2
 12743  004ADE  0009               	tblrd		*+
 12744  004AE0  CFF5 F0A3          	movff	tablat,??_lcd_draw_char+3
 12745  004AE4  90D8               	bcf	status,0,c
 12746  004AE6  37A2               	rlcf	(??_lcd_draw_char+2)& (0+255),f,b
 12747  004AE8  37A3               	rlcf	(??_lcd_draw_char+3)& (0+255),f,b
 12748  004AEA  51A0               	movf	??_lcd_draw_char& (0+255),w,b
 12749  004AEC  5FA2               	subwf	(??_lcd_draw_char+2)& (0+255),f,b
 12750  004AEE  51A1               	movf	(??_lcd_draw_char+1)& (0+255),w,b
 12751  004AF0  5BA3               	subwfb	(??_lcd_draw_char+3)& (0+255),f,b
 12752  004AF2  51AA               	movf	lcd_draw_char@k& (0+255),w,b
 12753  004AF4  5FA2               	subwf	(??_lcd_draw_char+2)& (0+255),f,b
 12754  004AF6  0E00               	movlw	0
 12755  004AF8  5BA3               	subwfb	(??_lcd_draw_char+3)& (0+255),f,b
 12756  004AFA  519A               	movf	lcd_draw_char@fIndex& (0+255),w,b
 12757  004AFC  27A2               	addwf	(??_lcd_draw_char+2)& (0+255),f,b
 12758  004AFE  519B               	movf	(lcd_draw_char@fIndex+1)& (0+255),w,b
 12759  004B00  23A3               	addwfc	(??_lcd_draw_char+3)& (0+255),f,b
 12760  004B02  90D8               	bcf	status,0,c
 12761  004B04  37A2               	rlcf	(??_lcd_draw_char+2)& (0+255),f,b
 12762  004B06  37A3               	rlcf	(??_lcd_draw_char+3)& (0+255),f,b
 12763  004B08  0E35               	movlw	low _font
 12764  004B0A  25A2               	addwf	(??_lcd_draw_char+2)& (0+255),w,b
 12765  004B0C  6EF6               	movwf	tblptrl,c
 12766  004B0E  0EF1               	movlw	high _font
 12767  004B10  21A3               	addwfc	(??_lcd_draw_char+3)& (0+255),w,b
 12768  004B12  6EF7               	movwf	tblptrh,c
 12769  004B14                     	if	1	;There are 3 active tblptr bytes
 12770  004B14  6AF8               	clrf	tblptru,c
 12771  004B16  0E00               	movlw	low (__mediumconst shr (0+16))
 12772  004B18  22F8               	addwfc	tblptru,f,c
 12773  004B1A                     	endif
 12774  004B1A  0009               	tblrd		*+
 12775  004B1C  CFF5 F0A4          	movff	tablat,??_lcd_draw_char+4
 12776  004B20  0009               	tblrd		*+
 12777  004B22  CFF5 F0A5          	movff	tablat,??_lcd_draw_char+5
 12778  004B26  C0AB  F0A6         	movff	lcd_draw_char@i,??_lcd_draw_char+6
 12779  004B2A  0E80               	movlw	128
 12780  004B2C  6FA7               	movwf	(??_lcd_draw_char+7)& (0+255),b
 12781  004B2E  0E00               	movlw	0
 12782  004B30  6FA8               	movwf	(??_lcd_draw_char+8)& (0+255),b
 12783  004B32  2BA6               	incf	(??_lcd_draw_char+6)& (0+255),f,b
 12784  004B34  EF9F  F025         	goto	u7674
 12785  004B38                     u7675:
 12786  004B38  35A8               	rlcf	(??_lcd_draw_char+8)& (0+255),w,b
 12787  004B3A  33A8               	rrcf	(??_lcd_draw_char+8)& (0+255),f,b
 12788  004B3C  33A7               	rrcf	(??_lcd_draw_char+7)& (0+255),f,b
 12789  004B3E                     u7674:
 12790  004B3E  2FA6               	decfsz	(??_lcd_draw_char+6)& (0+255),f,b
 12791  004B40  EF9C  F025         	goto	u7675
 12792  004B44  0100               	movlb	0	; () banked
 12793  004B46  51A4               	movf	(??_lcd_draw_char+4)& (0+255),w,b
 12794  004B48  17A7               	andwf	(??_lcd_draw_char+7)& (0+255),f,b
 12795  004B4A  51A5               	movf	(??_lcd_draw_char+5)& (0+255),w,b
 12796  004B4C  17A8               	andwf	(??_lcd_draw_char+8)& (0+255),f,b
 12797  004B4E  51A7               	movf	(??_lcd_draw_char+7)& (0+255),w,b
 12798  004B50  11A8               	iorwf	(??_lcd_draw_char+8)& (0+255),w,b
 12799  004B52  B4D8               	btfsc	status,2,c
 12800  004B54  EFAE  F025         	goto	u7681
 12801  004B58  EFB0  F025         	goto	u7680
 12802  004B5C                     u7681:
 12803  004B5C  EFB8  F025         	goto	l6459
 12804  004B60                     u7680:
 12805  004B60                     
 12806                           ; BSR set to: 0
 12807                           ;lib_ili9341.c: 368:                 {;lib_ili9341.c: 369:                     lcd_draw_
      +                          pixel(fg_color);
 12808  004B60  C09C  F090         	movff	lcd_draw_char@fg_color,lcd_draw_pixel@color
 12809  004B64  C09D  F091         	movff	lcd_draw_char@fg_color+1,lcd_draw_pixel@color+1
 12810  004B68  ECF6  F033         	call	_lcd_draw_pixel	;wreg free
 12811                           
 12812                           ;lib_ili9341.c: 370:                 }
 12813  004B6C  EFBE  F025         	goto	l6461
 12814  004B70                     l6459:
 12815                           
 12816                           ; BSR set to: 0
 12817                           ;lib_ili9341.c: 372:                 {;lib_ili9341.c: 373:                     lcd_draw_
      +                          pixel(bg_color);
 12818  004B70  C09E  F090         	movff	lcd_draw_char@bg_color,lcd_draw_pixel@color
 12819  004B74  C09F  F091         	movff	lcd_draw_char@bg_color+1,lcd_draw_pixel@color+1
 12820  004B78  ECF6  F033         	call	_lcd_draw_pixel	;wreg free
 12821  004B7C                     l6461:
 12822                           
 12823                           ;lib_ili9341.c: 375:             }
 12824  004B7C  0100               	movlb	0	; () banked
 12825  004B7E  2BAB               	incf	lcd_draw_char@i& (0+255),f,b
 12826  004B80                     
 12827                           ; BSR set to: 0
 12828  004B80  0E07               	movlw	7
 12829  004B82  65AB               	cpfsgt	lcd_draw_char@i& (0+255),b
 12830  004B84  EFC6  F025         	goto	u7691
 12831  004B88  EFC8  F025         	goto	u7690
 12832  004B8C                     u7691:
 12833  004B8C  EF5A  F025         	goto	l6455
 12834  004B90                     u7690:
 12835  004B90                     
 12836                           ; BSR set to: 0
 12837                           ;lib_ili9341.c: 376:         }
 12838  004B90  2BAA               	incf	lcd_draw_char@k& (0+255),f,b
 12839  004B92                     
 12840                           ; BSR set to: 0
 12841  004B92  0E01               	movlw	1
 12842  004B94  65AA               	cpfsgt	lcd_draw_char@k& (0+255),b
 12843  004B96  EFCF  F025         	goto	u7701
 12844  004B9A  EFD1  F025         	goto	u7700
 12845  004B9E                     u7701:
 12846  004B9E  EF58  F025         	goto	l6449
 12847  004BA2                     u7700:
 12848  004BA2                     
 12849                           ; BSR set to: 0
 12850                           ;lib_ili9341.c: 377:     }
 12851  004BA2  2BA9               	incf	lcd_draw_char@j& (0+255),f,b
 12852  004BA4                     l6471:
 12853                           
 12854                           ; BSR set to: 0
 12855  004BA4  90D8               	bcf	status,0,c
 12856  004BA6  359A               	rlcf	lcd_draw_char@fIndex& (0+255),w,b
 12857  004BA8  6EF6               	movwf	tblptrl,c
 12858  004BAA  359B               	rlcf	(lcd_draw_char@fIndex+1)& (0+255),w,b
 12859  004BAC  6EF7               	movwf	tblptrh,c
 12860  004BAE  0E35               	movlw	low _font
 12861  004BB0  26F6               	addwf	tblptrl,f,c
 12862  004BB2  0EF1               	movlw	high _font
 12863  004BB4  22F7               	addwfc	tblptrh,f,c
 12864  004BB6                     	if	1	;There are 3 active tblptr bytes
 12865  004BB6  6AF8               	clrf	tblptru,c
 12866  004BB8  0E00               	movlw	low (__mediumconst shr (0+16))
 12867  004BBA  22F8               	addwfc	tblptru,f,c
 12868  004BBC                     	endif
 12869  004BBC  51A9               	movf	lcd_draw_char@j& (0+255),w,b
 12870  004BBE  6FA0               	movwf	??_lcd_draw_char& (0+255),b
 12871  004BC0  6BA1               	clrf	(??_lcd_draw_char+1)& (0+255),b
 12872  004BC2  0009               	tblrd		*+
 12873  004BC4  50F5               	movf	tablat,w,c
 12874  004BC6  5DA0               	subwf	??_lcd_draw_char& (0+255),w,b
 12875  004BC8  0009               	tblrd		*+
 12876  004BCA  50F5               	movf	tablat,w,c
 12877  004BCC  59A1               	subwfb	(??_lcd_draw_char+1)& (0+255),w,b
 12878  004BCE  A0D8               	btfss	status,0,c
 12879  004BD0  EFEC  F025         	goto	u7711
 12880  004BD4  EFEE  F025         	goto	u7710
 12881  004BD8                     u7711:
 12882  004BD8  EF33  F025         	goto	l6441
 12883  004BDC                     u7710:
 12884  004BDC                     
 12885                           ; BSR set to: 0
 12886  004BDC  0012               	return		;funcret
 12887  004BDE                     __end_of_lcd_draw_char:
 12888                           	opt callstack 0
 12889                           
 12890 ;; *************** function _lcd_set_cursor *****************
 12891 ;; Defined at:
 12892 ;;		line 144 in file "lib_ili9341.c"
 12893 ;; Parameters:    Size  Location     Type
 12894 ;;  x               2   50[BANK0 ] unsigned short 
 12895 ;;  y               2   52[BANK0 ] unsigned short 
 12896 ;; Auto vars:     Size  Location     Type
 12897 ;;		None
 12898 ;; Return value:  Size  Location     Type
 12899 ;;                  1    wreg      unsigned char 
 12900 ;; Registers used:
 12901 ;;		wreg, status,2, status,0, cstack
 12902 ;; Tracked objects:
 12903 ;;		On entry : 0/0
 12904 ;;		On exit  : 0/0
 12905 ;;		Unchanged: 0/0
 12906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12907 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12910 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12911 ;;Total ram usage:        4 bytes
 12912 ;; Hardware stack levels used:    1
 12913 ;; Hardware stack levels required when called:   16
 12914 ;; This function calls:
 12915 ;;		_lcd_set_cursor_x
 12916 ;;		_lcd_set_cursor_y
 12917 ;; This function is called by:
 12918 ;;		_lcd_fill
 12919 ;;		_lcd_draw_char
 12920 ;;		_lcd_draw_pixel_at
 12921 ;;		_lcd_fill_rect
 12922 ;; This function uses a non-reentrant model
 12923 ;;
 12924                           
 12925                           	psect	text42
 12926  00627A                     __ptext42:
 12927                           	opt callstack 0
 12928  00627A                     _lcd_set_cursor:
 12929                           	opt callstack 12
 12930  00627A                     
 12931                           ;lib_ili9341.c: 144: uint8_t lcd_set_cursor(uint16_t x, uint16_t y);lib_ili9341.c: 145: 
      +                          {;lib_ili9341.c: 146:     if( lcd_set_cursor_x(x) || lcd_set_cursor_y(y) )
 12932  00627A  C092  F090         	movff	lcd_set_cursor@x,lcd_set_cursor_x@x
 12933  00627E  C093  F091         	movff	lcd_set_cursor@x+1,lcd_set_cursor_x@x+1
 12934  006282  EC69  F030         	call	_lcd_set_cursor_x	;wreg free
 12935  006286  0900               	iorlw	0
 12936  006288  A4D8               	btfss	status,2,c
 12937  00628A  EF49  F031         	goto	u7521
 12938  00628E  EF4B  F031         	goto	u7520
 12939  006292                     u7521:
 12940  006292  EF59  F031         	goto	l6303
 12941  006296                     u7520:
 12942  006296  C094  F090         	movff	lcd_set_cursor@y,lcd_set_cursor_y@y
 12943  00629A  C095  F091         	movff	lcd_set_cursor@y+1,lcd_set_cursor_y@y+1
 12944  00629E  EC42  F030         	call	_lcd_set_cursor_y	;wreg free
 12945  0062A2  0900               	iorlw	0
 12946  0062A4  B4D8               	btfsc	status,2,c
 12947  0062A6  EF57  F031         	goto	u7531
 12948  0062AA  EF59  F031         	goto	u7530
 12949  0062AE                     u7531:
 12950  0062AE  EF5C  F031         	goto	l6307
 12951  0062B2                     u7530:
 12952  0062B2                     l6303:
 12953                           
 12954                           ;lib_ili9341.c: 147:     {;lib_ili9341.c: 148:         return 1;
 12955  0062B2  0E01               	movlw	1
 12956  0062B4  EF5D  F031         	goto	l506
 12957  0062B8                     l6307:
 12958                           
 12959                           ;lib_ili9341.c: 151:     return 0;
 12960  0062B8  0E00               	movlw	0
 12961  0062BA                     l506:
 12962  0062BA  0012               	return		;funcret
 12963  0062BC                     __end_of_lcd_set_cursor:
 12964                           	opt callstack 0
 12965                           
 12966 ;; *************** function _lcd_set_cursor_y *****************
 12967 ;; Defined at:
 12968 ;;		line 170 in file "lib_ili9341.c"
 12969 ;; Parameters:    Size  Location     Type
 12970 ;;  y               2   48[BANK0 ] unsigned short 
 12971 ;; Auto vars:     Size  Location     Type
 12972 ;;		None
 12973 ;; Return value:  Size  Location     Type
 12974 ;;                  1    wreg      unsigned char 
 12975 ;; Registers used:
 12976 ;;		wreg, status,2, status,0, cstack
 12977 ;; Tracked objects:
 12978 ;;		On entry : 0/0
 12979 ;;		On exit  : 0/0
 12980 ;;		Unchanged: 0/0
 12981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12982 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12985 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12986 ;;Total ram usage:        2 bytes
 12987 ;; Hardware stack levels used:    1
 12988 ;; Hardware stack levels required when called:   15
 12989 ;; This function calls:
 12990 ;;		_lcd_send
 12991 ;; This function is called by:
 12992 ;;		_lcd_set_cursor
 12993 ;; This function uses a non-reentrant model
 12994 ;;
 12995                           
 12996                           	psect	text43
 12997  006084                     __ptext43:
 12998                           	opt callstack 0
 12999  006084                     _lcd_set_cursor_y:
 13000                           	opt callstack 12
 13001  006084                     
 13002                           ;lib_ili9341.c: 170: uint8_t lcd_set_cursor_y(uint16_t y);lib_ili9341.c: 171: {;lib_ili9
      +                          341.c: 172:     if( y >= 240 )
 13003  006084  0100               	movlb	0	; () banked
 13004  006086  5191               	movf	(lcd_set_cursor_y@y+1)& (0+255),w,b
 13005  006088  E109               	bnz	u7040
 13006  00608A  0EF0               	movlw	240
 13007  00608C  5D90               	subwf	lcd_set_cursor_y@y& (0+255),w,b
 13008  00608E  A0D8               	btfss	status,0,c
 13009  006090  EF4C  F030         	goto	u7041
 13010  006094  EF4E  F030         	goto	u7040
 13011  006098                     u7041:
 13012  006098  EF51  F030         	goto	l5931
 13013  00609C                     u7040:
 13014  00609C                     
 13015                           ; BSR set to: 0
 13016                           ;lib_ili9341.c: 173:     {;lib_ili9341.c: 174:         return 1;
 13017  00609C  0E01               	movlw	1
 13018  00609E  EF68  F030         	goto	l514
 13019  0060A2                     l5931:
 13020                           
 13021                           ; BSR set to: 0
 13022                           ;lib_ili9341.c: 177:     lcd_send(0, 0x2A);
 13023  0060A2  0E2A               	movlw	42
 13024  0060A4  6F8E               	movwf	lcd_send@value& (0+255),b
 13025  0060A6  0E00               	movlw	0
 13026  0060A8  ECCD  F033         	call	_lcd_send
 13027                           
 13028                           ;lib_ili9341.c: 178:     lcd_send(1, y >> 8);
 13029  0060AC  0100               	movlb	0	; () banked
 13030  0060AE  5191               	movf	(lcd_set_cursor_y@y+1)& (0+255),w,b
 13031  0060B0  6F8E               	movwf	lcd_send@value& (0+255),b
 13032  0060B2  0E01               	movlw	1
 13033  0060B4  ECCD  F033         	call	_lcd_send
 13034                           
 13035                           ;lib_ili9341.c: 179:     lcd_send(1, y & 0xFF);
 13036  0060B8  C090  F08E         	movff	lcd_set_cursor_y@y,lcd_send@value
 13037  0060BC  0E01               	movlw	1
 13038  0060BE  ECCD  F033         	call	_lcd_send
 13039                           
 13040                           ;lib_ili9341.c: 180:     lcd_send(0, 0x2c);
 13041  0060C2  0E2C               	movlw	44
 13042  0060C4  0100               	movlb	0	; () banked
 13043  0060C6  6F8E               	movwf	lcd_send@value& (0+255),b
 13044  0060C8  0E00               	movlw	0
 13045  0060CA  ECCD  F033         	call	_lcd_send
 13046  0060CE                     
 13047                           ;lib_ili9341.c: 182:     return 0;
 13048  0060CE  0E00               	movlw	0
 13049  0060D0                     l514:
 13050  0060D0  0012               	return		;funcret
 13051  0060D2                     __end_of_lcd_set_cursor_y:
 13052                           	opt callstack 0
 13053                           
 13054 ;; *************** function _lcd_set_cursor_x *****************
 13055 ;; Defined at:
 13056 ;;		line 155 in file "lib_ili9341.c"
 13057 ;; Parameters:    Size  Location     Type
 13058 ;;  x               2   48[BANK0 ] unsigned short 
 13059 ;; Auto vars:     Size  Location     Type
 13060 ;;		None
 13061 ;; Return value:  Size  Location     Type
 13062 ;;                  1    wreg      unsigned char 
 13063 ;; Registers used:
 13064 ;;		wreg, status,2, status,0, cstack
 13065 ;; Tracked objects:
 13066 ;;		On entry : 0/0
 13067 ;;		On exit  : 0/0
 13068 ;;		Unchanged: 0/0
 13069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13070 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13073 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13074 ;;Total ram usage:        2 bytes
 13075 ;; Hardware stack levels used:    1
 13076 ;; Hardware stack levels required when called:   15
 13077 ;; This function calls:
 13078 ;;		_lcd_send
 13079 ;; This function is called by:
 13080 ;;		_lcd_set_cursor
 13081 ;; This function uses a non-reentrant model
 13082 ;;
 13083                           
 13084                           	psect	text44
 13085  0060D2                     __ptext44:
 13086                           	opt callstack 0
 13087  0060D2                     _lcd_set_cursor_x:
 13088                           	opt callstack 12
 13089  0060D2                     
 13090                           ;lib_ili9341.c: 155: uint8_t lcd_set_cursor_x(uint16_t x);lib_ili9341.c: 156: {;lib_ili9
      +                          341.c: 157:     if( x >= 320 )
 13091  0060D2  0E40               	movlw	64
 13092  0060D4  0100               	movlb	0	; () banked
 13093  0060D6  5D90               	subwf	lcd_set_cursor_x@x& (0+255),w,b
 13094  0060D8  0E01               	movlw	1
 13095  0060DA  5991               	subwfb	(lcd_set_cursor_x@x+1)& (0+255),w,b
 13096  0060DC  A0D8               	btfss	status,0,c
 13097  0060DE  EF73  F030         	goto	u7031
 13098  0060E2  EF75  F030         	goto	u7030
 13099  0060E6                     u7031:
 13100  0060E6  EF78  F030         	goto	l5919
 13101  0060EA                     u7030:
 13102  0060EA                     
 13103                           ; BSR set to: 0
 13104                           ;lib_ili9341.c: 158:     {;lib_ili9341.c: 159:         return 1;
 13105  0060EA  0E01               	movlw	1
 13106  0060EC  EF8F  F030         	goto	l510
 13107  0060F0                     l5919:
 13108                           
 13109                           ; BSR set to: 0
 13110                           ;lib_ili9341.c: 162:     lcd_send(0, 0x2B);
 13111  0060F0  0E2B               	movlw	43
 13112  0060F2  6F8E               	movwf	lcd_send@value& (0+255),b
 13113  0060F4  0E00               	movlw	0
 13114  0060F6  ECCD  F033         	call	_lcd_send
 13115                           
 13116                           ;lib_ili9341.c: 163:     lcd_send(1, x >> 8);
 13117  0060FA  0100               	movlb	0	; () banked
 13118  0060FC  5191               	movf	(lcd_set_cursor_x@x+1)& (0+255),w,b
 13119  0060FE  6F8E               	movwf	lcd_send@value& (0+255),b
 13120  006100  0E01               	movlw	1
 13121  006102  ECCD  F033         	call	_lcd_send
 13122                           
 13123                           ;lib_ili9341.c: 164:     lcd_send(1, x & 0xFF);
 13124  006106  C090  F08E         	movff	lcd_set_cursor_x@x,lcd_send@value
 13125  00610A  0E01               	movlw	1
 13126  00610C  ECCD  F033         	call	_lcd_send
 13127                           
 13128                           ;lib_ili9341.c: 165:     lcd_send(0, 0x2c);
 13129  006110  0E2C               	movlw	44
 13130  006112  0100               	movlb	0	; () banked
 13131  006114  6F8E               	movwf	lcd_send@value& (0+255),b
 13132  006116  0E00               	movlw	0
 13133  006118  ECCD  F033         	call	_lcd_send
 13134  00611C                     
 13135                           ;lib_ili9341.c: 167:     return 0;
 13136  00611C  0E00               	movlw	0
 13137  00611E                     l510:
 13138  00611E  0012               	return		;funcret
 13139  006120                     __end_of_lcd_set_cursor_x:
 13140                           	opt callstack 0
 13141                           
 13142 ;; *************** function _lcd_draw_pixel *****************
 13143 ;; Defined at:
 13144 ;;		line 185 in file "lib_ili9341.c"
 13145 ;; Parameters:    Size  Location     Type
 13146 ;;  color           2   48[BANK0 ] unsigned short 
 13147 ;; Auto vars:     Size  Location     Type
 13148 ;;		None
 13149 ;; Return value:  Size  Location     Type
 13150 ;;                  1    wreg      unsigned char 
 13151 ;; Registers used:
 13152 ;;		wreg, status,2, cstack
 13153 ;; Tracked objects:
 13154 ;;		On entry : 0/0
 13155 ;;		On exit  : 0/0
 13156 ;;		Unchanged: 0/0
 13157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13158 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13161 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13162 ;;Total ram usage:        2 bytes
 13163 ;; Hardware stack levels used:    1
 13164 ;; Hardware stack levels required when called:   15
 13165 ;; This function calls:
 13166 ;;		_lcd_send
 13167 ;; This function is called by:
 13168 ;;		_lcd_fill
 13169 ;;		_lcd_draw_char
 13170 ;;		_lcd_draw_pixel_at
 13171 ;;		_lcd_fill_rect
 13172 ;; This function uses a non-reentrant model
 13173 ;;
 13174                           
 13175                           	psect	text45
 13176  0067EC                     __ptext45:
 13177                           	opt callstack 0
 13178  0067EC                     _lcd_draw_pixel:
 13179                           	opt callstack 13
 13180  0067EC                     
 13181                           ;lib_ili9341.c: 185: uint8_t lcd_draw_pixel(uint16_t color);lib_ili9341.c: 186: {;lib_il
      +                          i9341.c: 187:     lcd_send(1, color >> 8);
 13182  0067EC  0100               	movlb	0	; () banked
 13183  0067EE  5191               	movf	(lcd_draw_pixel@color+1)& (0+255),w,b
 13184  0067F0  6F8E               	movwf	lcd_send@value& (0+255),b
 13185  0067F2  0E01               	movlw	1
 13186  0067F4  ECCD  F033         	call	_lcd_send
 13187                           
 13188                           ;lib_ili9341.c: 188:     lcd_send(1, color & 0xFF);
 13189  0067F8  C090  F08E         	movff	lcd_draw_pixel@color,lcd_send@value
 13190  0067FC  0E01               	movlw	1
 13191  0067FE  ECCD  F033         	call	_lcd_send
 13192  006802  0012               	return		;funcret
 13193  006804                     __end_of_lcd_draw_pixel:
 13194                           	opt callstack 0
 13195                           
 13196 ;; *************** function _lcd_send *****************
 13197 ;; Defined at:
 13198 ;;		line 134 in file "lib_ili9341.c"
 13199 ;; Parameters:    Size  Location     Type
 13200 ;;  dc              1    wreg     _Bool 
 13201 ;;  value           1   46[BANK0 ] unsigned char 
 13202 ;; Auto vars:     Size  Location     Type
 13203 ;;  dc              1   47[BANK0 ] _Bool 
 13204 ;; Return value:  Size  Location     Type
 13205 ;;                  1    wreg      void 
 13206 ;; Registers used:
 13207 ;;		wreg, status,2, cstack
 13208 ;; Tracked objects:
 13209 ;;		On entry : 0/0
 13210 ;;		On exit  : 0/0
 13211 ;;		Unchanged: 0/0
 13212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13213 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13214 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13216 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13217 ;;Total ram usage:        2 bytes
 13218 ;; Hardware stack levels used:    1
 13219 ;; Hardware stack levels required when called:   14
 13220 ;; This function calls:
 13221 ;;		_SPI_ExchangeByte
 13222 ;; This function is called by:
 13223 ;;		_lcd_init
 13224 ;;		_lcd_set_cursor_x
 13225 ;;		_lcd_set_cursor_y
 13226 ;;		_lcd_draw_pixel
 13227 ;; This function uses a non-reentrant model
 13228 ;;
 13229                           
 13230                           	psect	text46
 13231  00679A                     __ptext46:
 13232                           	opt callstack 0
 13233  00679A                     _lcd_send:
 13234                           	opt callstack 15
 13235                           
 13236                           ;incstack = 0
 13237                           ;lcd_send@dc stored from wreg
 13238  00679A  0100               	movlb	0	; () banked
 13239  00679C  6F8F               	movwf	lcd_send@dc& (0+255),b
 13240  00679E                     
 13241                           ;lib_ili9341.c: 134: void lcd_send(_Bool dc, uint8_t value);lib_ili9341.c: 135: {;lib_il
      +                          i9341.c: 136:     LATEbits.LE0 = dc;
 13242  00679E  0100               	movlb	0	; () banked
 13243  0067A0  B18F               	btfsc	lcd_send@dc& (0+255),0,b
 13244  0067A2  D002               	bra	u6375
 13245  0067A4  908D               	bcf	141,0,c	;volatile
 13246  0067A6  D001               	bra	u6376
 13247  0067A8                     u6375:
 13248  0067A8  808D               	bsf	141,0,c	;volatile
 13249  0067AA                     u6376:
 13250  0067AA                     
 13251                           ;lib_ili9341.c: 138:     LATEbits.LE1 = 0;
 13252  0067AA  928D               	bcf	141,1,c	;volatile
 13253  0067AC                     
 13254                           ;lib_ili9341.c: 140:     SPI_ExchangeByte(value);
 13255  0067AC  0100               	movlb	0	; () banked
 13256  0067AE  518E               	movf	lcd_send@value& (0+255),w,b
 13257  0067B0  ECDC  F033         	call	_SPI_ExchangeByte
 13258  0067B4                     
 13259                           ;lib_ili9341.c: 141:     LATEbits.LE1 = 1;
 13260  0067B4  828D               	bsf	141,1,c	;volatile
 13261  0067B6  0012               	return		;funcret
 13262  0067B8                     __end_of_lcd_send:
 13263                           	opt callstack 0
 13264                           
 13265 ;; *************** function _SPI_ExchangeByte *****************
 13266 ;; Defined at:
 13267 ;;		line 92 in file "mcc_generated_files/spi.c"
 13268 ;; Parameters:    Size  Location     Type
 13269 ;;  data            1    wreg     unsigned char 
 13270 ;; Auto vars:     Size  Location     Type
 13271 ;;  data            1   45[BANK0 ] unsigned char 
 13272 ;; Return value:  Size  Location     Type
 13273 ;;                  1    wreg      unsigned char 
 13274 ;; Registers used:
 13275 ;;		wreg, status,2
 13276 ;; Tracked objects:
 13277 ;;		On entry : 0/0
 13278 ;;		On exit  : 0/0
 13279 ;;		Unchanged: 0/0
 13280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13282 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13284 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13285 ;;Total ram usage:        1 bytes
 13286 ;; Hardware stack levels used:    1
 13287 ;; Hardware stack levels required when called:   13
 13288 ;; This function calls:
 13289 ;;		Nothing
 13290 ;; This function is called by:
 13291 ;;		_lcd_send
 13292 ;;		_SPI_WriteBlock
 13293 ;;		_SPI_ReadBlock
 13294 ;; This function uses a non-reentrant model
 13295 ;;
 13296                           
 13297                           	psect	text47
 13298  0067B8                     __ptext47:
 13299                           	opt callstack 0
 13300  0067B8                     _SPI_ExchangeByte:
 13301                           	opt callstack 15
 13302                           
 13303                           ;incstack = 0
 13304                           ;SPI_ExchangeByte@data stored from wreg
 13305  0067B8  0100               	movlb	0	; () banked
 13306  0067BA  6F8D               	movwf	SPI_ExchangeByte@data& (0+255),b
 13307  0067BC                     
 13308                           ;mcc_generated_files/spi.c: 92: uint8_t SPI_ExchangeByte(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 93: {;mcc_generated_files/spi.c: 94:     SSPBUF = data;
 13309  0067BC  C08D  FFC9         	movff	SPI_ExchangeByte@data,4041	;volatile
 13310  0067C0                     l61:
 13311  0067C0  A69E               	btfss	158,3,c	;volatile
 13312  0067C2  EFE5  F033         	goto	u5431
 13313  0067C6  EFE7  F033         	goto	u5430
 13314  0067CA                     u5431:
 13315  0067CA  EFE0  F033         	goto	l61
 13316  0067CE                     u5430:
 13317  0067CE                     
 13318                           ;mcc_generated_files/spi.c: 96:     PIR1bits.SSPIF = 0;
 13319  0067CE  969E               	bcf	158,3,c	;volatile
 13320                           
 13321                           ;mcc_generated_files/spi.c: 97:     return SSPBUF;
 13322  0067D0  50C9               	movf	201,w,c	;volatile
 13323  0067D2  0012               	return		;funcret
 13324  0067D4                     __end_of_SPI_ExchangeByte:
 13325                           	opt callstack 0
 13326                           
 13327 ;; *************** function ___lmul *****************
 13328 ;; Defined at:
 13329 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
 13330 ;; Parameters:    Size  Location     Type
 13331 ;;  multiplier      4   45[BANK0 ] unsigned long 
 13332 ;;  multiplicand    4   49[BANK0 ] unsigned long 
 13333 ;; Auto vars:     Size  Location     Type
 13334 ;;  product         4   53[BANK0 ] unsigned long 
 13335 ;; Return value:  Size  Location     Type
 13336 ;;                  4   45[BANK0 ] unsigned long 
 13337 ;; Registers used:
 13338 ;;		wreg, status,2, status,0
 13339 ;; Tracked objects:
 13340 ;;		On entry : 0/0
 13341 ;;		On exit  : 0/0
 13342 ;;		Unchanged: 0/0
 13343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13344 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13345 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13347 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13348 ;;Total ram usage:       12 bytes
 13349 ;; Hardware stack levels used:    1
 13350 ;; Hardware stack levels required when called:   13
 13351 ;; This function calls:
 13352 ;;		Nothing
 13353 ;; This function is called by:
 13354 ;;		_main
 13355 ;; This function uses a non-reentrant model
 13356 ;;
 13357                           
 13358                           	psect	text48
 13359  005C7C                     __ptext48:
 13360                           	opt callstack 0
 13361  005C7C                     ___lmul:
 13362                           	opt callstack 17
 13363  005C7C  0E00               	movlw	0
 13364  005C7E  0100               	movlb	0	; () banked
 13365  005C80  6F95               	movwf	___lmul@product& (0+255),b
 13366  005C82  0E00               	movlw	0
 13367  005C84  6F96               	movwf	(___lmul@product+1)& (0+255),b
 13368  005C86  0E00               	movlw	0
 13369  005C88  6F97               	movwf	(___lmul@product+2)& (0+255),b
 13370  005C8A  0E00               	movlw	0
 13371  005C8C  6F98               	movwf	(___lmul@product+3)& (0+255),b
 13372  005C8E                     l6845:
 13373                           
 13374                           ; BSR set to: 0
 13375  005C8E  A18D               	btfss	___lmul@multiplier& (0+255),0,b
 13376  005C90  EF4C  F02E         	goto	u7971
 13377  005C94  EF4E  F02E         	goto	u7970
 13378  005C98                     u7971:
 13379  005C98  EF56  F02E         	goto	l6849
 13380  005C9C                     u7970:
 13381  005C9C                     
 13382                           ; BSR set to: 0
 13383  005C9C  5191               	movf	___lmul@multiplicand& (0+255),w,b
 13384  005C9E  2795               	addwf	___lmul@product& (0+255),f,b
 13385  005CA0  5192               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 13386  005CA2  2396               	addwfc	(___lmul@product+1)& (0+255),f,b
 13387  005CA4  5193               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 13388  005CA6  2397               	addwfc	(___lmul@product+2)& (0+255),f,b
 13389  005CA8  5194               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 13390  005CAA  2398               	addwfc	(___lmul@product+3)& (0+255),f,b
 13391  005CAC                     l6849:
 13392                           
 13393                           ; BSR set to: 0
 13394  005CAC  90D8               	bcf	status,0,c
 13395  005CAE  3791               	rlcf	___lmul@multiplicand& (0+255),f,b
 13396  005CB0  3792               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 13397  005CB2  3793               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 13398  005CB4  3794               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 13399  005CB6                     
 13400                           ; BSR set to: 0
 13401  005CB6  90D8               	bcf	status,0,c
 13402  005CB8  3390               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 13403  005CBA  338F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 13404  005CBC  338E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 13405  005CBE  338D               	rrcf	___lmul@multiplier& (0+255),f,b
 13406  005CC0  518D               	movf	___lmul@multiplier& (0+255),w,b
 13407  005CC2  118E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 13408  005CC4  118F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 13409  005CC6  1190               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 13410  005CC8  A4D8               	btfss	status,2,c
 13411  005CCA  EF69  F02E         	goto	u7981
 13412  005CCE  EF6B  F02E         	goto	u7980
 13413  005CD2                     u7981:
 13414  005CD2  EF47  F02E         	goto	l6845
 13415  005CD6                     u7980:
 13416  005CD6                     
 13417                           ; BSR set to: 0
 13418  005CD6  C095  F08D         	movff	___lmul@product,?___lmul
 13419  005CDA  C096  F08E         	movff	___lmul@product+1,?___lmul+1
 13420  005CDE  C097  F08F         	movff	___lmul@product+2,?___lmul+2
 13421  005CE2  C098  F090         	movff	___lmul@product+3,?___lmul+3
 13422  005CE6                     
 13423                           ; BSR set to: 0
 13424  005CE6  0012               	return		;funcret
 13425  005CE8                     __end_of___lmul:
 13426                           	opt callstack 0
 13427                           
 13428 ;; *************** function ___aldiv *****************
 13429 ;; Defined at:
 13430 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 13431 ;; Parameters:    Size  Location     Type
 13432 ;;  dividend        4   57[BANK0 ] long 
 13433 ;;  divisor         4   61[BANK0 ] long 
 13434 ;; Auto vars:     Size  Location     Type
 13435 ;;  quotient        4   67[BANK0 ] long 
 13436 ;;  sign            1   66[BANK0 ] unsigned char 
 13437 ;;  counter         1   65[BANK0 ] unsigned char 
 13438 ;; Return value:  Size  Location     Type
 13439 ;;                  4   57[BANK0 ] long 
 13440 ;; Registers used:
 13441 ;;		wreg, status,2, status,0
 13442 ;; Tracked objects:
 13443 ;;		On entry : 0/0
 13444 ;;		On exit  : 0/0
 13445 ;;		Unchanged: 0/0
 13446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13447 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13448 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13450 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13451 ;;Total ram usage:       14 bytes
 13452 ;; Hardware stack levels used:    1
 13453 ;; Hardware stack levels required when called:   13
 13454 ;; This function calls:
 13455 ;;		Nothing
 13456 ;; This function is called by:
 13457 ;;		_main
 13458 ;; This function uses a non-reentrant model
 13459 ;;
 13460                           
 13461                           	psect	text49
 13462  0050F6                     __ptext49:
 13463                           	opt callstack 0
 13464  0050F6                     ___aldiv:
 13465                           	opt callstack 17
 13466  0050F6  0E00               	movlw	0
 13467  0050F8  0100               	movlb	0	; () banked
 13468  0050FA  6FA2               	movwf	___aldiv@sign& (0+255),b
 13469  0050FC                     
 13470                           ; BSR set to: 0
 13471  0050FC  BFA0               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
 13472  0050FE  EF85  F028         	goto	u7990
 13473  005102  EF83  F028         	goto	u7991
 13474  005106                     u7991:
 13475  005106  EF8F  F028         	goto	l6861
 13476  00510A                     u7990:
 13477  00510A                     
 13478                           ; BSR set to: 0
 13479  00510A  1FA0               	comf	(___aldiv@divisor+3)& (0+255),f,b
 13480  00510C  1F9F               	comf	(___aldiv@divisor+2)& (0+255),f,b
 13481  00510E  1F9E               	comf	(___aldiv@divisor+1)& (0+255),f,b
 13482  005110  6D9D               	negf	___aldiv@divisor& (0+255),b
 13483  005112  0E00               	movlw	0
 13484  005114  239E               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 13485  005116  239F               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 13486  005118  23A0               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 13487  00511A                     
 13488                           ; BSR set to: 0
 13489  00511A  0E01               	movlw	1
 13490  00511C  6FA2               	movwf	___aldiv@sign& (0+255),b
 13491  00511E                     l6861:
 13492                           
 13493                           ; BSR set to: 0
 13494  00511E  BF9C               	btfsc	(___aldiv@dividend+3)& (0+255),7,b
 13495  005120  EF96  F028         	goto	u8000
 13496  005124  EF94  F028         	goto	u8001
 13497  005128                     u8001:
 13498  005128  EFA0  F028         	goto	l6867
 13499  00512C                     u8000:
 13500  00512C                     
 13501                           ; BSR set to: 0
 13502  00512C  1F9C               	comf	(___aldiv@dividend+3)& (0+255),f,b
 13503  00512E  1F9B               	comf	(___aldiv@dividend+2)& (0+255),f,b
 13504  005130  1F9A               	comf	(___aldiv@dividend+1)& (0+255),f,b
 13505  005132  6D99               	negf	___aldiv@dividend& (0+255),b
 13506  005134  0E00               	movlw	0
 13507  005136  239A               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 13508  005138  239B               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 13509  00513A  239C               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 13510  00513C                     
 13511                           ; BSR set to: 0
 13512  00513C  0E01               	movlw	1
 13513  00513E  1BA2               	xorwf	___aldiv@sign& (0+255),f,b
 13514  005140                     l6867:
 13515                           
 13516                           ; BSR set to: 0
 13517  005140  0E00               	movlw	0
 13518  005142  6FA3               	movwf	___aldiv@quotient& (0+255),b
 13519  005144  0E00               	movlw	0
 13520  005146  6FA4               	movwf	(___aldiv@quotient+1)& (0+255),b
 13521  005148  0E00               	movlw	0
 13522  00514A  6FA5               	movwf	(___aldiv@quotient+2)& (0+255),b
 13523  00514C  0E00               	movlw	0
 13524  00514E  6FA6               	movwf	(___aldiv@quotient+3)& (0+255),b
 13525  005150                     
 13526                           ; BSR set to: 0
 13527  005150  519D               	movf	___aldiv@divisor& (0+255),w,b
 13528  005152  119E               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 13529  005154  119F               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 13530  005156  11A0               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 13531  005158  B4D8               	btfsc	status,2,c
 13532  00515A  EFB1  F028         	goto	u8011
 13533  00515E  EFB3  F028         	goto	u8010
 13534  005162                     u8011:
 13535  005162  EFE9  F028         	goto	l6889
 13536  005166                     u8010:
 13537  005166                     
 13538                           ; BSR set to: 0
 13539  005166  0E01               	movlw	1
 13540  005168  6FA1               	movwf	___aldiv@counter& (0+255),b
 13541  00516A  EFBD  F028         	goto	l6875
 13542  00516E                     l6873:
 13543                           
 13544                           ; BSR set to: 0
 13545  00516E  90D8               	bcf	status,0,c
 13546  005170  379D               	rlcf	___aldiv@divisor& (0+255),f,b
 13547  005172  379E               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 13548  005174  379F               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 13549  005176  37A0               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 13550  005178  2BA1               	incf	___aldiv@counter& (0+255),f,b
 13551  00517A                     l6875:
 13552                           
 13553                           ; BSR set to: 0
 13554  00517A  AFA0               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 13555  00517C  EFC2  F028         	goto	u8021
 13556  005180  EFC4  F028         	goto	u8020
 13557  005184                     u8021:
 13558  005184  EFB7  F028         	goto	l6873
 13559  005188                     u8020:
 13560  005188                     l6877:
 13561                           
 13562                           ; BSR set to: 0
 13563  005188  90D8               	bcf	status,0,c
 13564  00518A  37A3               	rlcf	___aldiv@quotient& (0+255),f,b
 13565  00518C  37A4               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 13566  00518E  37A5               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 13567  005190  37A6               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 13568  005192                     
 13569                           ; BSR set to: 0
 13570  005192  519D               	movf	___aldiv@divisor& (0+255),w,b
 13571  005194  5D99               	subwf	___aldiv@dividend& (0+255),w,b
 13572  005196  519E               	movf	(___aldiv@divisor+1)& (0+255),w,b
 13573  005198  599A               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 13574  00519A  519F               	movf	(___aldiv@divisor+2)& (0+255),w,b
 13575  00519C  599B               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 13576  00519E  51A0               	movf	(___aldiv@divisor+3)& (0+255),w,b
 13577  0051A0  599C               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 13578  0051A2  A0D8               	btfss	status,0,c
 13579  0051A4  EFD6  F028         	goto	u8031
 13580  0051A8  EFD8  F028         	goto	u8030
 13581  0051AC                     u8031:
 13582  0051AC  EFE1  F028         	goto	l6885
 13583  0051B0                     u8030:
 13584  0051B0                     
 13585                           ; BSR set to: 0
 13586  0051B0  519D               	movf	___aldiv@divisor& (0+255),w,b
 13587  0051B2  5F99               	subwf	___aldiv@dividend& (0+255),f,b
 13588  0051B4  519E               	movf	(___aldiv@divisor+1)& (0+255),w,b
 13589  0051B6  5B9A               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 13590  0051B8  519F               	movf	(___aldiv@divisor+2)& (0+255),w,b
 13591  0051BA  5B9B               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 13592  0051BC  51A0               	movf	(___aldiv@divisor+3)& (0+255),w,b
 13593  0051BE  5B9C               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 13594  0051C0                     
 13595                           ; BSR set to: 0
 13596  0051C0  81A3               	bsf	___aldiv@quotient& (0+255),0,b
 13597  0051C2                     l6885:
 13598                           
 13599                           ; BSR set to: 0
 13600  0051C2  90D8               	bcf	status,0,c
 13601  0051C4  33A0               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 13602  0051C6  339F               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 13603  0051C8  339E               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 13604  0051CA  339D               	rrcf	___aldiv@divisor& (0+255),f,b
 13605  0051CC                     
 13606                           ; BSR set to: 0
 13607  0051CC  2FA1               	decfsz	___aldiv@counter& (0+255),f,b
 13608  0051CE  EFC4  F028         	goto	l6877
 13609  0051D2                     l6889:
 13610                           
 13611                           ; BSR set to: 0
 13612  0051D2  51A2               	movf	___aldiv@sign& (0+255),w,b
 13613  0051D4  B4D8               	btfsc	status,2,c
 13614  0051D6  EFEF  F028         	goto	u8041
 13615  0051DA  EFF1  F028         	goto	u8040
 13616  0051DE                     u8041:
 13617  0051DE  EFF9  F028         	goto	l6893
 13618  0051E2                     u8040:
 13619  0051E2                     
 13620                           ; BSR set to: 0
 13621  0051E2  1FA6               	comf	(___aldiv@quotient+3)& (0+255),f,b
 13622  0051E4  1FA5               	comf	(___aldiv@quotient+2)& (0+255),f,b
 13623  0051E6  1FA4               	comf	(___aldiv@quotient+1)& (0+255),f,b
 13624  0051E8  6DA3               	negf	___aldiv@quotient& (0+255),b
 13625  0051EA  0E00               	movlw	0
 13626  0051EC  23A4               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 13627  0051EE  23A5               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 13628  0051F0  23A6               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 13629  0051F2                     l6893:
 13630                           
 13631                           ; BSR set to: 0
 13632  0051F2  C0A3  F099         	movff	___aldiv@quotient,?___aldiv
 13633  0051F6  C0A4  F09A         	movff	___aldiv@quotient+1,?___aldiv+1
 13634  0051FA  C0A5  F09B         	movff	___aldiv@quotient+2,?___aldiv+2
 13635  0051FE  C0A6  F09C         	movff	___aldiv@quotient+3,?___aldiv+3
 13636  005202                     
 13637                           ; BSR set to: 0
 13638  005202  0012               	return		;funcret
 13639  005204                     __end_of___aldiv:
 13640                           	opt callstack 0
 13641                           
 13642 ;; *************** function _TMR0_ReadTimer *****************
 13643 ;; Defined at:
 13644 ;;		line 102 in file "mcc_generated_files/tmr0.c"
 13645 ;; Parameters:    Size  Location     Type
 13646 ;;		None
 13647 ;; Auto vars:     Size  Location     Type
 13648 ;;  readVal         2   49[BANK0 ] unsigned short 
 13649 ;;  readValHigh     1   52[BANK0 ] unsigned char 
 13650 ;;  readValLow      1   51[BANK0 ] unsigned char 
 13651 ;; Return value:  Size  Location     Type
 13652 ;;                  2   45[BANK0 ] unsigned short 
 13653 ;; Registers used:
 13654 ;;		wreg, status,2
 13655 ;; Tracked objects:
 13656 ;;		On entry : 0/0
 13657 ;;		On exit  : 0/0
 13658 ;;		Unchanged: 0/0
 13659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13660 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13661 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13662 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13663 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13664 ;;Total ram usage:        8 bytes
 13665 ;; Hardware stack levels used:    1
 13666 ;; Hardware stack levels required when called:   13
 13667 ;; This function calls:
 13668 ;;		Nothing
 13669 ;; This function is called by:
 13670 ;;		_main
 13671 ;; This function uses a non-reentrant model
 13672 ;;
 13673                           
 13674                           	psect	text50
 13675  00677A                     __ptext50:
 13676                           	opt callstack 0
 13677  00677A                     _TMR0_ReadTimer:
 13678                           	opt callstack 17
 13679  00677A                     
 13680                           ;mcc_generated_files/tmr0.c: 104:     uint16_t readVal;;mcc_generated_files/tmr0.c: 105:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 106:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 108:     readValLow = TMR0L;
 13681  00677A  CFD6 F093          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
 13682                           
 13683                           ;mcc_generated_files/tmr0.c: 109:     readValHigh = TMR0H;
 13684  00677E  CFD7 F094          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
 13685  006782                     
 13686                           ;mcc_generated_files/tmr0.c: 110:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
 13687  006782  0100               	movlb	0	; () banked
 13688  006784  5194               	movf	TMR0_ReadTimer@readValHigh& (0+255),w,b
 13689  006786  6F8F               	movwf	??_TMR0_ReadTimer& (0+255),b
 13690  006788  5193               	movf	TMR0_ReadTimer@readValLow& (0+255),w,b
 13691  00678A  6F91               	movwf	TMR0_ReadTimer@readVal& (0+255),b
 13692  00678C  C08F  F092         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
 13693  006790                     
 13694                           ; BSR set to: 0
 13695                           ;mcc_generated_files/tmr0.c: 112:     return readVal;
 13696  006790  C091  F08D         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
 13697  006794  C092  F08E         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
 13698  006798                     
 13699                           ; BSR set to: 0
 13700  006798  0012               	return		;funcret
 13701  00679A                     __end_of_TMR0_ReadTimer:
 13702                           	opt callstack 0
 13703                           
 13704 ;; *************** function _SYSTEM_Initialize *****************
 13705 ;; Defined at:
 13706 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13707 ;; Parameters:    Size  Location     Type
 13708 ;;		None
 13709 ;; Auto vars:     Size  Location     Type
 13710 ;;		None
 13711 ;; Return value:  Size  Location     Type
 13712 ;;                  1    wreg      void 
 13713 ;; Registers used:
 13714 ;;		wreg, status,2, status,0, cstack
 13715 ;; Tracked objects:
 13716 ;;		On entry : 0/0
 13717 ;;		On exit  : 0/0
 13718 ;;		Unchanged: 0/0
 13719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13724 ;;Total ram usage:        0 bytes
 13725 ;; Hardware stack levels used:    1
 13726 ;; Hardware stack levels required when called:   15
 13727 ;; This function calls:
 13728 ;;		_ADC_Initialize
 13729 ;;		_EUSART1_Initialize
 13730 ;;		_INTERRUPT_Initialize
 13731 ;;		_OSCILLATOR_Initialize
 13732 ;;		_PIN_MANAGER_Initialize
 13733 ;;		_SPI_Initialize
 13734 ;;		_TMR0_Initialize
 13735 ;;		_TMR1_Initialize
 13736 ;; This function is called by:
 13737 ;;		_main
 13738 ;; This function uses a non-reentrant model
 13739 ;;
 13740                           
 13741                           	psect	text51
 13742  006758                     __ptext51:
 13743                           	opt callstack 0
 13744  006758                     _SYSTEM_Initialize:
 13745                           	opt callstack 15
 13746  006758                     
 13747                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
 13748  006758  EC71  F034         	call	_INTERRUPT_Initialize	;wreg free
 13749  00675C                     
 13750                           ;mcc_generated_files/mcc.c: 54:     SPI_Initialize();
 13751  00675C  EC2E  F034         	call	_SPI_Initialize	;wreg free
 13752  006760                     
 13753                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 13754  006760  ECB4  F030         	call	_PIN_MANAGER_Initialize	;wreg free
 13755  006764                     
 13756                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 13757  006764  EC37  F034         	call	_OSCILLATOR_Initialize	;wreg free
 13758  006768                     
 13759                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
 13760  006768  EC0E  F034         	call	_ADC_Initialize	;wreg free
 13761  00676C                     
 13762                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
 13763  00676C  EC09  F033         	call	_TMR1_Initialize	;wreg free
 13764  006770                     
 13765                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
 13766  006770  EC49  F033         	call	_TMR0_Initialize	;wreg free
 13767  006774                     
 13768                           ;mcc_generated_files/mcc.c: 60:     EUSART1_Initialize();
 13769  006774  ECD7  F030         	call	_EUSART1_Initialize	;wreg free
 13770  006778  0012               	return		;funcret
 13771  00677A                     __end_of_SYSTEM_Initialize:
 13772                           	opt callstack 0
 13773                           
 13774 ;; *************** function _TMR1_Initialize *****************
 13775 ;; Defined at:
 13776 ;;		line 63 in file "mcc_generated_files/tmr1.c"
 13777 ;; Parameters:    Size  Location     Type
 13778 ;;		None
 13779 ;; Auto vars:     Size  Location     Type
 13780 ;;		None
 13781 ;; Return value:  Size  Location     Type
 13782 ;;                  1    wreg      void 
 13783 ;; Registers used:
 13784 ;;		wreg, status,2, status,0
 13785 ;; Tracked objects:
 13786 ;;		On entry : 0/0
 13787 ;;		On exit  : 0/0
 13788 ;;		Unchanged: 0/0
 13789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13792 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13793 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13794 ;;Total ram usage:        2 bytes
 13795 ;; Hardware stack levels used:    1
 13796 ;; Hardware stack levels required when called:   13
 13797 ;; This function calls:
 13798 ;;		Nothing
 13799 ;; This function is called by:
 13800 ;;		_SYSTEM_Initialize
 13801 ;; This function uses a non-reentrant model
 13802 ;;
 13803                           
 13804                           	psect	text52
 13805  006612                     __ptext52:
 13806                           	opt callstack 0
 13807  006612                     _TMR1_Initialize:
 13808                           	opt callstack 16
 13809  006612                     
 13810                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
 13811  006612  0E00               	movlw	0
 13812  006614  6EAA               	movwf	170,c	;volatile
 13813                           
 13814                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x0B;
 13815  006616  0E0B               	movlw	11
 13816  006618  6ECF               	movwf	207,c	;volatile
 13817                           
 13818                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0xDC;
 13819  00661A  0EDC               	movlw	220
 13820  00661C  6ECE               	movwf	206,c	;volatile
 13821  00661E                     
 13822                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
 13823  00661E  909E               	bcf	158,0,c	;volatile
 13824  006620                     
 13825                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 13826  006620  50CE               	movf	206,w,c	;volatile
 13827  006622  CFCF F08D          	movff	4047,??_TMR1_Initialize	;volatile
 13828  006626  0100               	movlb	0	; () banked
 13829  006628  6B8E               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 13830  00662A  C08D  F08E         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 13831  00662E  6B8D               	clrf	??_TMR1_Initialize& (0+255),b
 13832  006630  118D               	iorwf	??_TMR1_Initialize& (0+255),w,b
 13833  006632  6FC8               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 13834  006634  518E               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 13835  006636  6FC9               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 13836  006638                     
 13837                           ; BSR set to: 0
 13838                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x31;
 13839  006638  0E31               	movlw	49
 13840  00663A  6ECD               	movwf	205,c	;volatile
 13841  00663C                     
 13842                           ; BSR set to: 0
 13843  00663C  0012               	return		;funcret
 13844  00663E                     __end_of_TMR1_Initialize:
 13845                           	opt callstack 0
 13846                           
 13847 ;; *************** function _TMR0_Initialize *****************
 13848 ;; Defined at:
 13849 ;;		line 66 in file "mcc_generated_files/tmr0.c"
 13850 ;; Parameters:    Size  Location     Type
 13851 ;;		None
 13852 ;; Auto vars:     Size  Location     Type
 13853 ;;		None
 13854 ;; Return value:  Size  Location     Type
 13855 ;;                  1    wreg      void 
 13856 ;; Registers used:
 13857 ;;		wreg, status,2, status,0
 13858 ;; Tracked objects:
 13859 ;;		On entry : 0/0
 13860 ;;		On exit  : 0/0
 13861 ;;		Unchanged: 0/0
 13862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13865 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13866 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13867 ;;Total ram usage:        2 bytes
 13868 ;; Hardware stack levels used:    1
 13869 ;; Hardware stack levels required when called:   13
 13870 ;; This function calls:
 13871 ;;		Nothing
 13872 ;; This function is called by:
 13873 ;;		_SYSTEM_Initialize
 13874 ;; This function uses a non-reentrant model
 13875 ;;
 13876                           
 13877                           	psect	text53
 13878  006692                     __ptext53:
 13879                           	opt callstack 0
 13880  006692                     _TMR0_Initialize:
 13881                           	opt callstack 16
 13882  006692                     
 13883                           ;mcc_generated_files/tmr0.c: 71:     T0CONbits.T08BIT = 0;
 13884  006692  9CD5               	bcf	213,6,c	;volatile
 13885  006694                     
 13886                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0x67;
 13887  006694  0E67               	movlw	103
 13888  006696  6ED7               	movwf	215,c	;volatile
 13889                           
 13890                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0x69;
 13891  006698  0E69               	movlw	105
 13892  00669A  6ED6               	movwf	214,c	;volatile
 13893  00669C                     
 13894                           ;mcc_generated_files/tmr0.c: 81:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
 13895  00669C  50D6               	movf	214,w,c	;volatile
 13896  00669E  CFD7 F08D          	movff	4055,??_TMR0_Initialize	;volatile
 13897  0066A2  0100               	movlb	0	; () banked
 13898  0066A4  6B8E               	clrf	(??_TMR0_Initialize+1)& (0+255),b
 13899  0066A6  C08D  F08E         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 13900  0066AA  6B8D               	clrf	??_TMR0_Initialize& (0+255),b
 13901  0066AC  118D               	iorwf	??_TMR0_Initialize& (0+255),w,b
 13902  0066AE  6E5B               	movwf	_timer0ReloadVal^0,c	;volatile
 13903  0066B0  518E               	movf	(??_TMR0_Initialize+1)& (0+255),w,b
 13904  0066B2  6E5C               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
 13905  0066B4                     
 13906                           ; BSR set to: 0
 13907                           ;mcc_generated_files/tmr0.c: 84:     INTCONbits.TMR0IF = 0;
 13908  0066B4  94F2               	bcf	242,2,c	;volatile
 13909  0066B6                     
 13910                           ; BSR set to: 0
 13911                           ;mcc_generated_files/tmr0.c: 87:     T0CON = 0x17;
 13912  0066B6  0E17               	movlw	23
 13913  0066B8  6ED5               	movwf	213,c	;volatile
 13914  0066BA                     
 13915                           ; BSR set to: 0
 13916  0066BA  0012               	return		;funcret
 13917  0066BC                     __end_of_TMR0_Initialize:
 13918                           	opt callstack 0
 13919                           
 13920 ;; *************** function _SPI_Initialize *****************
 13921 ;; Defined at:
 13922 ;;		line 62 in file "mcc_generated_files/spi.c"
 13923 ;; Parameters:    Size  Location     Type
 13924 ;;		None
 13925 ;; Auto vars:     Size  Location     Type
 13926 ;;		None
 13927 ;; Return value:  Size  Location     Type
 13928 ;;                  1    wreg      void 
 13929 ;; Registers used:
 13930 ;;		wreg, status,2
 13931 ;; Tracked objects:
 13932 ;;		On entry : 0/0
 13933 ;;		On exit  : 0/0
 13934 ;;		Unchanged: 0/0
 13935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13940 ;;Total ram usage:        0 bytes
 13941 ;; Hardware stack levels used:    1
 13942 ;; Hardware stack levels required when called:   13
 13943 ;; This function calls:
 13944 ;;		Nothing
 13945 ;; This function is called by:
 13946 ;;		_SYSTEM_Initialize
 13947 ;; This function uses a non-reentrant model
 13948 ;;
 13949                           
 13950                           	psect	text54
 13951  00685C                     __ptext54:
 13952                           	opt callstack 0
 13953  00685C                     _SPI_Initialize:
 13954                           	opt callstack 16
 13955  00685C                     
 13956                           ;mcc_generated_files/spi.c: 65:     SSPSTAT = 0x40;
 13957  00685C  0E40               	movlw	64
 13958  00685E  6EC7               	movwf	199,c	;volatile
 13959                           
 13960                           ;mcc_generated_files/spi.c: 66:     SSPCON1 = 0x00;
 13961  006860  0E00               	movlw	0
 13962  006862  6EC6               	movwf	198,c	;volatile
 13963                           
 13964                           ;mcc_generated_files/spi.c: 67:     SSPADD = 0x01;
 13965  006864  0E01               	movlw	1
 13966  006866  6EC8               	movwf	200,c	;volatile
 13967  006868                     
 13968                           ;mcc_generated_files/spi.c: 68:     TRISCbits.TRISC3 = 0;
 13969  006868  9694               	bcf	148,3,c	;volatile
 13970  00686A                     
 13971                           ;mcc_generated_files/spi.c: 69:     SSPCON1bits.SSPEN = 0;
 13972  00686A  9AC6               	bcf	198,5,c	;volatile
 13973  00686C  0012               	return		;funcret
 13974  00686E                     __end_of_SPI_Initialize:
 13975                           	opt callstack 0
 13976                           
 13977 ;; *************** function _PIN_MANAGER_Initialize *****************
 13978 ;; Defined at:
 13979 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 13980 ;; Parameters:    Size  Location     Type
 13981 ;;		None
 13982 ;; Auto vars:     Size  Location     Type
 13983 ;;		None
 13984 ;; Return value:  Size  Location     Type
 13985 ;;                  1    wreg      void 
 13986 ;; Registers used:
 13987 ;;		wreg, status,2, status,0, cstack
 13988 ;; Tracked objects:
 13989 ;;		On entry : 0/0
 13990 ;;		On exit  : 0/0
 13991 ;;		Unchanged: 0/0
 13992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13997 ;;Total ram usage:        0 bytes
 13998 ;; Hardware stack levels used:    1
 13999 ;; Hardware stack levels required when called:   14
 14000 ;; This function calls:
 14001 ;;		_IOCB4_SetInterruptHandler
 14002 ;; This function is called by:
 14003 ;;		_SYSTEM_Initialize
 14004 ;; This function uses a non-reentrant model
 14005 ;;
 14006                           
 14007                           	psect	text55
 14008  006168                     __ptext55:
 14009                           	opt callstack 0
 14010  006168                     _PIN_MANAGER_Initialize:
 14011                           	opt callstack 15
 14012  006168                     
 14013                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
 14014  006168  0E00               	movlw	0
 14015  00616A  6E8D               	movwf	141,c	;volatile
 14016                           
 14017                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 14018  00616C  0E00               	movlw	0
 14019  00616E  6E8C               	movwf	140,c	;volatile
 14020                           
 14021                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 14022  006170  0E00               	movlw	0
 14023  006172  6E89               	movwf	137,c	;volatile
 14024                           
 14025                           ;mcc_generated_files/pin_manager.c: 65:     LATB = 0x00;
 14026  006174  0E00               	movlw	0
 14027  006176  6E8A               	movwf	138,c	;volatile
 14028                           
 14029                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x00;
 14030  006178  0E00               	movlw	0
 14031  00617A  6E8B               	movwf	139,c	;volatile
 14032                           
 14033                           ;mcc_generated_files/pin_manager.c: 71:     TRISE = 0x04;
 14034  00617C  0E04               	movlw	4
 14035  00617E  6E96               	movwf	150,c	;volatile
 14036                           
 14037                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0x0F;
 14038  006180  0E0F               	movlw	15
 14039  006182  6E92               	movwf	146,c	;volatile
 14040  006184                     
 14041                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
 14042  006184  6893               	setf	147,c	;volatile
 14043                           
 14044                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0x97;
 14045  006186  0E97               	movlw	151
 14046  006188  6E94               	movwf	148,c	;volatile
 14047  00618A                     
 14048                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xFF;
 14049  00618A  6895               	setf	149,c	;volatile
 14050  00618C                     
 14051                           ;mcc_generated_files/pin_manager.c: 80:     ANCON0 = 0xFF;
 14052  00618C  010F               	movlb	15	; () banked
 14053  00618E  695D               	setf	93,b	;volatile
 14054                           
 14055                           ;mcc_generated_files/pin_manager.c: 81:     ANCON1 = 0x7D;
 14056  006190  0E7D               	movlw	125
 14057  006192  6F5C               	movwf	92,b	;volatile
 14058                           
 14059                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
 14060  006194  0E00               	movlw	0
 14061  006196  6F5B               	movwf	91,b	;volatile
 14062  006198                     
 14063                           ; BSR set to: 15
 14064                           ;mcc_generated_files/pin_manager.c: 87:     INTCON2bits.nRBPU = 1;
 14065  006198  8EF1               	bsf	241,7,c	;volatile
 14066  00619A                     
 14067                           ; BSR set to: 15
 14068                           ;mcc_generated_files/pin_manager.c: 95:     IOCBbits.IOCB4 = 1;
 14069  00619A  895A               	bsf	90,4,b	;volatile
 14070  00619C                     
 14071                           ; BSR set to: 15
 14072                           ;mcc_generated_files/pin_manager.c: 100:     IOCB4_SetInterruptHandler(IOCB4_DefaultInte
      +                          rruptHandler);
 14073  00619C  0EEE               	movlw	low _IOCB4_DefaultInterruptHandler
 14074  00619E  0100               	movlb	0	; () banked
 14075  0061A0  6F8D               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
 14076  0061A2  0E68               	movlw	high _IOCB4_DefaultInterruptHandler
 14077  0061A4  6F8E               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 14078  0061A6  EC4D  F034         	call	_IOCB4_SetInterruptHandler	;wreg free
 14079  0061AA                     
 14080                           ;mcc_generated_files/pin_manager.c: 103:     INTCONbits.RBIE = 1;
 14081  0061AA  86F2               	bsf	242,3,c	;volatile
 14082  0061AC  0012               	return		;funcret
 14083  0061AE                     __end_of_PIN_MANAGER_Initialize:
 14084                           	opt callstack 0
 14085                           
 14086 ;; *************** function _IOCB4_SetInterruptHandler *****************
 14087 ;; Defined at:
 14088 ;;		line 135 in file "mcc_generated_files/pin_manager.c"
 14089 ;; Parameters:    Size  Location     Type
 14090 ;;  InterruptHan    2   45[BANK0 ] PTR FTN()void 
 14091 ;;		 -> INTERRUPT_S1_CALLBACK(1), IOCB4_DefaultInterruptHandler(1), 
 14092 ;; Auto vars:     Size  Location     Type
 14093 ;;		None
 14094 ;; Return value:  Size  Location     Type
 14095 ;;                  1    wreg      void 
 14096 ;; Registers used:
 14097 ;;		wreg, status,2, status,0
 14098 ;; Tracked objects:
 14099 ;;		On entry : 0/0
 14100 ;;		On exit  : 0/0
 14101 ;;		Unchanged: 0/0
 14102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14103 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14106 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14107 ;;Total ram usage:        2 bytes
 14108 ;; Hardware stack levels used:    1
 14109 ;; Hardware stack levels required when called:   13
 14110 ;; This function calls:
 14111 ;;		Nothing
 14112 ;; This function is called by:
 14113 ;;		_PIN_MANAGER_Initialize
 14114 ;;		_main
 14115 ;; This function uses a non-reentrant model
 14116 ;;
 14117                           
 14118                           	psect	text56
 14119  00689A                     __ptext56:
 14120                           	opt callstack 0
 14121  00689A                     _IOCB4_SetInterruptHandler:
 14122                           	opt callstack 15
 14123  00689A                     
 14124                           ;mcc_generated_files/pin_manager.c: 136:     IOCB4_InterruptHandler = InterruptHandler;
 14125  00689A  C08D  F0CA         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
 14126  00689E  C08E  F0CB         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
 14127  0068A2  0012               	return		;funcret
 14128  0068A4                     __end_of_IOCB4_SetInterruptHandler:
 14129                           	opt callstack 0
 14130                           
 14131 ;; *************** function _OSCILLATOR_Initialize *****************
 14132 ;; Defined at:
 14133 ;;		line 63 in file "mcc_generated_files/mcc.c"
 14134 ;; Parameters:    Size  Location     Type
 14135 ;;		None
 14136 ;; Auto vars:     Size  Location     Type
 14137 ;;		None
 14138 ;; Return value:  Size  Location     Type
 14139 ;;                  1    wreg      void 
 14140 ;; Registers used:
 14141 ;;		wreg, status,2
 14142 ;; Tracked objects:
 14143 ;;		On entry : 0/0
 14144 ;;		On exit  : 0/0
 14145 ;;		Unchanged: 0/0
 14146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14151 ;;Total ram usage:        0 bytes
 14152 ;; Hardware stack levels used:    1
 14153 ;; Hardware stack levels required when called:   13
 14154 ;; This function calls:
 14155 ;;		Nothing
 14156 ;; This function is called by:
 14157 ;;		_SYSTEM_Initialize
 14158 ;; This function uses a non-reentrant model
 14159 ;;
 14160                           
 14161                           	psect	text57
 14162  00686E                     __ptext57:
 14163                           	opt callstack 0
 14164  00686E                     _OSCILLATOR_Initialize:
 14165                           	opt callstack 16
 14166  00686E                     
 14167                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x60;
 14168  00686E  0E60               	movlw	96
 14169  006870  6ED3               	movwf	211,c	;volatile
 14170                           
 14171                           ;mcc_generated_files/mcc.c: 68:     OSCCON2 = 0x00;
 14172  006872  0E00               	movlw	0
 14173  006874  6ED2               	movwf	210,c	;volatile
 14174                           
 14175                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x00;
 14176  006876  0E00               	movlw	0
 14177  006878  6E9B               	movwf	155,c	;volatile
 14178                           
 14179                           ;mcc_generated_files/mcc.c: 72:     REFOCON = 0x00;
 14180  00687A  0E00               	movlw	0
 14181  00687C  6E9A               	movwf	154,c	;volatile
 14182  00687E  0012               	return		;funcret
 14183  006880                     __end_of_OSCILLATOR_Initialize:
 14184                           	opt callstack 0
 14185                           
 14186 ;; *************** function _INTERRUPT_Initialize *****************
 14187 ;; Defined at:
 14188 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14189 ;; Parameters:    Size  Location     Type
 14190 ;;		None
 14191 ;; Auto vars:     Size  Location     Type
 14192 ;;		None
 14193 ;; Return value:  Size  Location     Type
 14194 ;;                  1    wreg      void 
 14195 ;; Registers used:
 14196 ;;		None
 14197 ;; Tracked objects:
 14198 ;;		On entry : 0/0
 14199 ;;		On exit  : 0/0
 14200 ;;		Unchanged: 0/0
 14201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14206 ;;Total ram usage:        0 bytes
 14207 ;; Hardware stack levels used:    1
 14208 ;; Hardware stack levels required when called:   13
 14209 ;; This function calls:
 14210 ;;		Nothing
 14211 ;; This function is called by:
 14212 ;;		_SYSTEM_Initialize
 14213 ;; This function uses a non-reentrant model
 14214 ;;
 14215                           
 14216                           	psect	text58
 14217  0068E2                     __ptext58:
 14218                           	opt callstack 0
 14219  0068E2                     _INTERRUPT_Initialize:
 14220                           	opt callstack 16
 14221  0068E2                     
 14222                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
 14223  0068E2  9ED0               	bcf	208,7,c	;volatile
 14224  0068E4  0012               	return		;funcret
 14225  0068E6                     __end_of_INTERRUPT_Initialize:
 14226                           	opt callstack 0
 14227                           
 14228 ;; *************** function _EUSART1_Initialize *****************
 14229 ;; Defined at:
 14230 ;;		line 66 in file "mcc_generated_files/eusart1.c"
 14231 ;; Parameters:    Size  Location     Type
 14232 ;;		None
 14233 ;; Auto vars:     Size  Location     Type
 14234 ;;		None
 14235 ;; Return value:  Size  Location     Type
 14236 ;;                  1    wreg      void 
 14237 ;; Registers used:
 14238 ;;		wreg, status,2, status,0, cstack
 14239 ;; Tracked objects:
 14240 ;;		On entry : 0/0
 14241 ;;		On exit  : 0/0
 14242 ;;		Unchanged: 0/0
 14243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14248 ;;Total ram usage:        0 bytes
 14249 ;; Hardware stack levels used:    1
 14250 ;; Hardware stack levels required when called:   14
 14251 ;; This function calls:
 14252 ;;		_EUSART1_SetErrorHandler
 14253 ;;		_EUSART1_SetFramingErrorHandler
 14254 ;;		_EUSART1_SetOverrunErrorHandler
 14255 ;; This function is called by:
 14256 ;;		_SYSTEM_Initialize
 14257 ;; This function uses a non-reentrant model
 14258 ;;
 14259                           
 14260                           	psect	text59
 14261  0061AE                     __ptext59:
 14262                           	opt callstack 0
 14263  0061AE                     _EUSART1_Initialize:
 14264                           	opt callstack 15
 14265  0061AE                     
 14266                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
 14267  0061AE  0E08               	movlw	8
 14268  0061B0  6EA7               	movwf	167,c	;volatile
 14269                           
 14270                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
 14271  0061B2  0E90               	movlw	144
 14272  0061B4  6EAB               	movwf	171,c	;volatile
 14273                           
 14274                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
 14275  0061B6  0E24               	movlw	36
 14276  0061B8  6EAC               	movwf	172,c	;volatile
 14277                           
 14278                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0xCF;
 14279  0061BA  0ECF               	movlw	207
 14280  0061BC  6EAF               	movwf	175,c	;volatile
 14281                           
 14282                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x00;
 14283  0061BE  0E00               	movlw	0
 14284  0061C0  6E7D               	movwf	125,c	;volatile
 14285  0061C2                     
 14286                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
 14287  0061C2  0E00               	movlw	0
 14288  0061C4  0100               	movlb	0	; () banked
 14289  0061C6  6F8D               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
 14290  0061C8  0E00               	movlw	0
 14291  0061CA  6F8E               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
 14292  0061CC  EC57  F034         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 14293  0061D0                     
 14294                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
 14295  0061D0  0E00               	movlw	0
 14296  0061D2  0100               	movlb	0	; () banked
 14297  0061D4  6F8D               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
 14298  0061D6  0E00               	movlw	0
 14299  0061D8  6F8E               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
 14300  0061DA  EC52  F034         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 14301  0061DE                     
 14302                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
 14303  0061DE  0E00               	movlw	0
 14304  0061E0  0100               	movlb	0	; () banked
 14305  0061E2  6F8D               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
 14306  0061E4  0E00               	movlw	0
 14307  0061E6  6F8E               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
 14308  0061E8  EC5C  F034         	call	_EUSART1_SetErrorHandler	;wreg free
 14309  0061EC                     
 14310                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
 14311  0061EC  0E00               	movlw	0
 14312  0061EE  0100               	movlb	0	; () banked
 14313  0061F0  6FC1               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 14314  0061F2                     
 14315                           ; BSR set to: 0
 14316  0061F2  0012               	return		;funcret
 14317  0061F4                     __end_of_EUSART1_Initialize:
 14318                           	opt callstack 0
 14319                           
 14320 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 14321 ;; Defined at:
 14322 ;;		line 170 in file "mcc_generated_files/eusart1.c"
 14323 ;; Parameters:    Size  Location     Type
 14324 ;;  interruptHan    2   45[BANK0 ] PTR FTN()void 
 14325 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 14326 ;; Auto vars:     Size  Location     Type
 14327 ;;		None
 14328 ;; Return value:  Size  Location     Type
 14329 ;;                  1    wreg      void 
 14330 ;; Registers used:
 14331 ;;		wreg, status,2, status,0
 14332 ;; Tracked objects:
 14333 ;;		On entry : 0/0
 14334 ;;		On exit  : 0/0
 14335 ;;		Unchanged: 0/0
 14336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14337 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14340 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14341 ;;Total ram usage:        2 bytes
 14342 ;; Hardware stack levels used:    1
 14343 ;; Hardware stack levels required when called:   13
 14344 ;; This function calls:
 14345 ;;		Nothing
 14346 ;; This function is called by:
 14347 ;;		_EUSART1_Initialize
 14348 ;; This function uses a non-reentrant model
 14349 ;;
 14350                           
 14351                           	psect	text60
 14352  0068A4                     __ptext60:
 14353                           	opt callstack 0
 14354  0068A4                     _EUSART1_SetOverrunErrorHandler:
 14355                           	opt callstack 15
 14356  0068A4                     
 14357                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
 14358  0068A4  C08D  F0C4         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 14359  0068A8  C08E  F0C5         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 14360  0068AC  0012               	return		;funcret
 14361  0068AE                     __end_of_EUSART1_SetOverrunErrorHandler:
 14362                           	opt callstack 0
 14363                           
 14364 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 14365 ;; Defined at:
 14366 ;;		line 166 in file "mcc_generated_files/eusart1.c"
 14367 ;; Parameters:    Size  Location     Type
 14368 ;;  interruptHan    2   45[BANK0 ] PTR FTN()void 
 14369 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 14370 ;; Auto vars:     Size  Location     Type
 14371 ;;		None
 14372 ;; Return value:  Size  Location     Type
 14373 ;;                  1    wreg      void 
 14374 ;; Registers used:
 14375 ;;		wreg, status,2, status,0
 14376 ;; Tracked objects:
 14377 ;;		On entry : 0/0
 14378 ;;		On exit  : 0/0
 14379 ;;		Unchanged: 0/0
 14380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14381 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14384 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14385 ;;Total ram usage:        2 bytes
 14386 ;; Hardware stack levels used:    1
 14387 ;; Hardware stack levels required when called:   13
 14388 ;; This function calls:
 14389 ;;		Nothing
 14390 ;; This function is called by:
 14391 ;;		_EUSART1_Initialize
 14392 ;; This function uses a non-reentrant model
 14393 ;;
 14394                           
 14395                           	psect	text61
 14396  0068AE                     __ptext61:
 14397                           	opt callstack 0
 14398  0068AE                     _EUSART1_SetFramingErrorHandler:
 14399                           	opt callstack 15
 14400  0068AE                     
 14401                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
 14402  0068AE  C08D  F0C6         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 14403  0068B2  C08E  F0C7         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 14404  0068B6  0012               	return		;funcret
 14405  0068B8                     __end_of_EUSART1_SetFramingErrorHandler:
 14406                           	opt callstack 0
 14407                           
 14408 ;; *************** function _EUSART1_SetErrorHandler *****************
 14409 ;; Defined at:
 14410 ;;		line 174 in file "mcc_generated_files/eusart1.c"
 14411 ;; Parameters:    Size  Location     Type
 14412 ;;  interruptHan    2   45[BANK0 ] PTR FTN()void 
 14413 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 14414 ;; Auto vars:     Size  Location     Type
 14415 ;;		None
 14416 ;; Return value:  Size  Location     Type
 14417 ;;                  1    wreg      void 
 14418 ;; Registers used:
 14419 ;;		wreg, status,2, status,0
 14420 ;; Tracked objects:
 14421 ;;		On entry : 0/0
 14422 ;;		On exit  : 0/0
 14423 ;;		Unchanged: 0/0
 14424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14425 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14428 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14429 ;;Total ram usage:        2 bytes
 14430 ;; Hardware stack levels used:    1
 14431 ;; Hardware stack levels required when called:   13
 14432 ;; This function calls:
 14433 ;;		Nothing
 14434 ;; This function is called by:
 14435 ;;		_EUSART1_Initialize
 14436 ;; This function uses a non-reentrant model
 14437 ;;
 14438                           
 14439                           	psect	text62
 14440  0068B8                     __ptext62:
 14441                           	opt callstack 0
 14442  0068B8                     _EUSART1_SetErrorHandler:
 14443                           	opt callstack 15
 14444  0068B8                     
 14445                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
 14446  0068B8  C08D  F0C2         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 14447  0068BC  C08E  F0C3         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 14448  0068C0  0012               	return		;funcret
 14449  0068C2                     __end_of_EUSART1_SetErrorHandler:
 14450                           	opt callstack 0
 14451                           
 14452 ;; *************** function _ADC_Initialize *****************
 14453 ;; Defined at:
 14454 ;;		line 62 in file "mcc_generated_files/adc.c"
 14455 ;; Parameters:    Size  Location     Type
 14456 ;;		None
 14457 ;; Auto vars:     Size  Location     Type
 14458 ;;		None
 14459 ;; Return value:  Size  Location     Type
 14460 ;;                  1    wreg      void 
 14461 ;; Registers used:
 14462 ;;		wreg, status,2
 14463 ;; Tracked objects:
 14464 ;;		On entry : 0/0
 14465 ;;		On exit  : 0/0
 14466 ;;		Unchanged: 0/0
 14467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14472 ;;Total ram usage:        0 bytes
 14473 ;; Hardware stack levels used:    1
 14474 ;; Hardware stack levels required when called:   13
 14475 ;; This function calls:
 14476 ;;		Nothing
 14477 ;; This function is called by:
 14478 ;;		_SYSTEM_Initialize
 14479 ;; This function uses a non-reentrant model
 14480 ;;
 14481                           
 14482                           	psect	text63
 14483  00681C                     __ptext63:
 14484                           	opt callstack 0
 14485  00681C                     _ADC_Initialize:
 14486                           	opt callstack 16
 14487  00681C                     
 14488                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x01;
 14489  00681C  0E01               	movlw	1
 14490  00681E  6EC2               	movwf	194,c	;volatile
 14491                           
 14492                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x80;
 14493  006820  0E80               	movlw	128
 14494  006822  6EC1               	movwf	193,c	;volatile
 14495                           
 14496                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0xB5;
 14497  006824  0EB5               	movlw	181
 14498  006826  6EC0               	movwf	192,c	;volatile
 14499                           
 14500                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
 14501  006828  0E00               	movlw	0
 14502  00682A  6EC4               	movwf	196,c	;volatile
 14503                           
 14504                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
 14505  00682C  0E00               	movlw	0
 14506  00682E  6EC3               	movwf	195,c	;volatile
 14507  006830  0012               	return		;funcret
 14508  006832                     __end_of_ADC_Initialize:
 14509                           	opt callstack 0
 14510                           
 14511 ;; *************** function _SPI_Open *****************
 14512 ;; Defined at:
 14513 ;;		line 72 in file "mcc_generated_files/spi.c"
 14514 ;; Parameters:    Size  Location     Type
 14515 ;;  spiUniqueCon    1    wreg     enum E353
 14516 ;; Auto vars:     Size  Location     Type
 14517 ;;  spiUniqueCon    1   46[BANK0 ] enum E353
 14518 ;; Return value:  Size  Location     Type
 14519 ;;                  1    wreg      _Bool 
 14520 ;; Registers used:
 14521 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 14522 ;; Tracked objects:
 14523 ;;		On entry : 0/0
 14524 ;;		On exit  : 0/0
 14525 ;;		Unchanged: 0/0
 14526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14528 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14529 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14530 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14531 ;;Total ram usage:        2 bytes
 14532 ;; Hardware stack levels used:    1
 14533 ;; Hardware stack levels required when called:   13
 14534 ;; This function calls:
 14535 ;;		Nothing
 14536 ;; This function is called by:
 14537 ;;		_main
 14538 ;; This function uses a non-reentrant model
 14539 ;;
 14540                           
 14541                           	psect	text64
 14542  005B40                     __ptext64:
 14543                           	opt callstack 0
 14544  005B40                     _SPI_Open:
 14545                           	opt callstack 17
 14546                           
 14547                           ;incstack = 0
 14548                           ;SPI_Open@spiUniqueConfiguration stored from wreg
 14549  005B40  0100               	movlb	0	; () banked
 14550  005B42  6F8E               	movwf	SPI_Open@spiUniqueConfiguration& (0+255),b
 14551  005B44                     
 14552                           ;mcc_generated_files/spi.c: 72: _Bool SPI_Open(spi_modes_t spiUniqueConfiguration);mcc_g
      +                          enerated_files/spi.c: 73: {;mcc_generated_files/spi.c: 74:     if(!SSPCON1bits.SSPEN)
 14553  005B44  BAC6               	btfsc	198,5,c	;volatile
 14554  005B46  EFA7  F02D         	goto	u7771
 14555  005B4A  EFA9  F02D         	goto	u7770
 14556  005B4E                     u7771:
 14557  005B4E  EFF9  F02D         	goto	l55
 14558  005B52                     u7770:
 14559  005B52                     
 14560                           ;mcc_generated_files/spi.c: 75:     {;mcc_generated_files/spi.c: 76:         SSPSTAT = s
      +                          pi_configuration[spiUniqueConfiguration].stat;
 14561  005B52  0100               	movlb	0	; () banked
 14562  005B54  518E               	movf	SPI_Open@spiUniqueConfiguration& (0+255),w,b
 14563  005B56  0D04               	mullw	4
 14564  005B58  0E01               	movlw	1
 14565  005B5A  26F3               	addwf	243,f,c
 14566  005B5C  0E00               	movlw	0
 14567  005B5E  22F4               	addwfc	244,f,c
 14568  005B60  0E01               	movlw	low _spi_configuration
 14569  005B62  24F3               	addwf	243,w,c
 14570  005B64  6EF6               	movwf	tblptrl,c
 14571  005B66  0EFF               	movlw	high _spi_configuration
 14572  005B68  20F4               	addwfc	244,w,c
 14573  005B6A  6EF7               	movwf	tblptrh,c
 14574  005B6C                     	if	1	;There are 3 active tblptr bytes
 14575  005B6C  6AF8               	clrf	tblptru,c
 14576  005B6E  0E00               	movlw	low (__mediumconst shr (0+16))
 14577  005B70  22F8               	addwfc	tblptru,f,c
 14578  005B72                     	endif
 14579  005B72  0008               	tblrd		*
 14580  005B74  CFF5 FFC7          	movff	tablat,4039	;volatile
 14581                           
 14582                           ;mcc_generated_files/spi.c: 77:         SSPCON1 = spi_configuration[spiUniqueConfigurati
      +                          on].con1;
 14583  005B78  518E               	movf	SPI_Open@spiUniqueConfiguration& (0+255),w,b
 14584  005B7A  0D04               	mullw	4
 14585  005B7C  0E01               	movlw	low _spi_configuration
 14586  005B7E  24F3               	addwf	243,w,c
 14587  005B80  6EF6               	movwf	tblptrl,c
 14588  005B82  0EFF               	movlw	high _spi_configuration
 14589  005B84  20F4               	addwfc	244,w,c
 14590  005B86  6EF7               	movwf	tblptrh,c
 14591  005B88                     	if	1	;There are 3 active tblptr bytes
 14592  005B88  6AF8               	clrf	tblptru,c
 14593  005B8A  0E00               	movlw	low (__mediumconst shr (0+16))
 14594  005B8C  22F8               	addwfc	tblptru,f,c
 14595  005B8E                     	endif
 14596  005B8E  0008               	tblrd		*
 14597  005B90  CFF5 FFC6          	movff	tablat,4038	;volatile
 14598  005B94                     
 14599                           ; BSR set to: 0
 14600                           ;mcc_generated_files/spi.c: 78:         SSPCON2 = 0x00;
 14601  005B94  0E00               	movlw	0
 14602  005B96  6EC5               	movwf	197,c	;volatile
 14603  005B98                     
 14604                           ; BSR set to: 0
 14605                           ;mcc_generated_files/spi.c: 79:         SSPADD = spi_configuration[spiUniqueConfiguratio
      +                          n].add;
 14606  005B98  518E               	movf	SPI_Open@spiUniqueConfiguration& (0+255),w,b
 14607  005B9A  0D04               	mullw	4
 14608  005B9C  0E02               	movlw	2
 14609  005B9E  26F3               	addwf	243,f,c
 14610  005BA0  0E00               	movlw	0
 14611  005BA2  22F4               	addwfc	244,f,c
 14612  005BA4  0E01               	movlw	low _spi_configuration
 14613  005BA6  24F3               	addwf	243,w,c
 14614  005BA8  6EF6               	movwf	tblptrl,c
 14615  005BAA  0EFF               	movlw	high _spi_configuration
 14616  005BAC  20F4               	addwfc	244,w,c
 14617  005BAE  6EF7               	movwf	tblptrh,c
 14618  005BB0                     	if	1	;There are 3 active tblptr bytes
 14619  005BB0  6AF8               	clrf	tblptru,c
 14620  005BB2  0E00               	movlw	low (__mediumconst shr (0+16))
 14621  005BB4  22F8               	addwfc	tblptru,f,c
 14622  005BB6                     	endif
 14623  005BB6  0008               	tblrd		*
 14624  005BB8  CFF5 FFC8          	movff	tablat,4040	;volatile
 14625  005BBC                     
 14626                           ; BSR set to: 0
 14627                           ;mcc_generated_files/spi.c: 80:         TRISCbits.TRISC3 = spi_configuration[spiUniqueCo
      +                          nfiguration].operation;
 14628  005BBC  518E               	movf	SPI_Open@spiUniqueConfiguration& (0+255),w,b
 14629  005BBE  0D04               	mullw	4
 14630  005BC0  0E03               	movlw	3
 14631  005BC2  26F3               	addwf	243,f,c
 14632  005BC4  0E00               	movlw	0
 14633  005BC6  22F4               	addwfc	244,f,c
 14634  005BC8  0E01               	movlw	low _spi_configuration
 14635  005BCA  24F3               	addwf	243,w,c
 14636  005BCC  6EF6               	movwf	tblptrl,c
 14637  005BCE  0EFF               	movlw	high _spi_configuration
 14638  005BD0  20F4               	addwfc	244,w,c
 14639  005BD2  6EF7               	movwf	tblptrh,c
 14640  005BD4                     	if	1	;There are 3 active tblptr bytes
 14641  005BD4  6AF8               	clrf	tblptru,c
 14642  005BD6  0E00               	movlw	low (__mediumconst shr (0+16))
 14643  005BD8  22F8               	addwfc	tblptru,f,c
 14644  005BDA                     	endif
 14645  005BDA  0008               	tblrd		*
 14646  005BDC  CFF5 F08D          	movff	tablat,??_SPI_Open
 14647  005BE0  478D               	rlncf	??_SPI_Open& (0+255),f,b
 14648  005BE2  478D               	rlncf	??_SPI_Open& (0+255),f,b
 14649  005BE4  478D               	rlncf	??_SPI_Open& (0+255),f,b
 14650  005BE6  5094               	movf	148,w,c	;volatile
 14651  005BE8  198D               	xorwf	??_SPI_Open& (0+255),w,b
 14652  005BEA  0BF7               	andlw	-9
 14653  005BEC  198D               	xorwf	??_SPI_Open& (0+255),w,b
 14654  005BEE  6E94               	movwf	148,c	;volatile
 14655  005BF0                     
 14656                           ; BSR set to: 0
 14657                           ;mcc_generated_files/spi.c: 81:         SSPCON1bits.SSPEN = 1;
 14658  005BF0  8AC6               	bsf	198,5,c	;volatile
 14659  005BF2                     l55:
 14660  005BF2  0012               	return		;funcret
 14661  005BF4                     __end_of_SPI_Open:
 14662                           	opt callstack 0
 14663                           
 14664 ;; *************** function _ADC_GetConversion *****************
 14665 ;; Defined at:
 14666 ;;		line 108 in file "mcc_generated_files/adc.c"
 14667 ;; Parameters:    Size  Location     Type
 14668 ;;  channel         1    wreg     enum E12385
 14669 ;; Auto vars:     Size  Location     Type
 14670 ;;  channel         1   49[BANK0 ] enum E12385
 14671 ;; Return value:  Size  Location     Type
 14672 ;;                  2   45[BANK0 ] unsigned short 
 14673 ;; Registers used:
 14674 ;;		wreg, status,2, status,0
 14675 ;; Tracked objects:
 14676 ;;		On entry : 0/0
 14677 ;;		On exit  : 0/0
 14678 ;;		Unchanged: 0/0
 14679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14680 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14681 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14682 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14683 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14684 ;;Total ram usage:        5 bytes
 14685 ;; Hardware stack levels used:    1
 14686 ;; Hardware stack levels required when called:   13
 14687 ;; This function calls:
 14688 ;;		Nothing
 14689 ;; This function is called by:
 14690 ;;		_main
 14691 ;; This function uses a non-reentrant model
 14692 ;;
 14693                           
 14694                           	psect	text65
 14695  0062BC                     __ptext65:
 14696                           	opt callstack 0
 14697  0062BC                     _ADC_GetConversion:
 14698                           	opt callstack 17
 14699                           
 14700                           ;incstack = 0
 14701                           ;ADC_GetConversion@channel stored from wreg
 14702  0062BC  0100               	movlb	0	; () banked
 14703  0062BE  6F91               	movwf	ADC_GetConversion@channel& (0+255),b
 14704  0062C0                     
 14705                           ;mcc_generated_files/adc.c: 108: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 109: {;mcc_generated_files/adc.c: 111:     ADCON0bits.CHS = ch
      +                          annel;
 14706  0062C0  C091  F08F         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 14707  0062C4  0100               	movlb	0	; () banked
 14708  0062C6  478F               	rlncf	??_ADC_GetConversion& (0+255),f,b
 14709  0062C8  478F               	rlncf	??_ADC_GetConversion& (0+255),f,b
 14710  0062CA  50C2               	movf	194,w,c	;volatile
 14711  0062CC  198F               	xorwf	??_ADC_GetConversion& (0+255),w,b
 14712  0062CE  0B83               	andlw	-125
 14713  0062D0  198F               	xorwf	??_ADC_GetConversion& (0+255),w,b
 14714  0062D2  6EC2               	movwf	194,c	;volatile
 14715  0062D4                     
 14716                           ; BSR set to: 0
 14717                           ;mcc_generated_files/adc.c: 114:     ADCON0bits.ADON = 1;
 14718  0062D4  80C2               	bsf	194,0,c	;volatile
 14719  0062D6                     
 14720                           ; BSR set to: 0
 14721                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.GO_nDONE = 1;
 14722  0062D6  82C2               	bsf	194,1,c	;volatile
 14723  0062D8                     l179:
 14724                           
 14725                           ;mcc_generated_files/adc.c: 121:     while (ADCON0bits.GO_nDONE)
 14726  0062D8  B2C2               	btfsc	194,1,c	;volatile
 14727  0062DA  EF71  F031         	goto	u7791
 14728  0062DE  EF73  F031         	goto	u7790
 14729  0062E2                     u7791:
 14730  0062E2  EF6C  F031         	goto	l179
 14731  0062E6                     u7790:
 14732  0062E6                     
 14733                           ;mcc_generated_files/adc.c: 126:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 14734  0062E6  50C4               	movf	196,w,c	;volatile
 14735  0062E8  0100               	movlb	0	; () banked
 14736  0062EA  6F90               	movwf	(??_ADC_GetConversion+1)& (0+255),b
 14737  0062EC  6B8F               	clrf	??_ADC_GetConversion& (0+255),b
 14738  0062EE  50C3               	movf	195,w,c	;volatile
 14739  0062F0  258F               	addwf	??_ADC_GetConversion& (0+255),w,b
 14740  0062F2  6F8D               	movwf	?_ADC_GetConversion& (0+255),b
 14741  0062F4  0E00               	movlw	0
 14742  0062F6  2190               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
 14743  0062F8  6F8E               	movwf	(?_ADC_GetConversion+1)& (0+255),b
 14744  0062FA                     
 14745                           ; BSR set to: 0
 14746  0062FA  0012               	return		;funcret
 14747  0062FC                     __end_of_ADC_GetConversion:
 14748                           	opt callstack 0
 14749                           
 14750 ;; *************** function _INTERRUPT_InterruptManager *****************
 14751 ;; Defined at:
 14752 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 14753 ;; Parameters:    Size  Location     Type
 14754 ;;		None
 14755 ;; Auto vars:     Size  Location     Type
 14756 ;;		None
 14757 ;; Return value:  Size  Location     Type
 14758 ;;                  1    wreg      void 
 14759 ;; Registers used:
 14760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14761 ;; Tracked objects:
 14762 ;;		On entry : 0/0
 14763 ;;		On exit  : 0/0
 14764 ;;		Unchanged: 0/0
 14765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14768 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14769 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14770 ;;Total ram usage:       12 bytes
 14771 ;; Hardware stack levels used:    1
 14772 ;; Hardware stack levels required when called:   12
 14773 ;; This function calls:
 14774 ;;		_PIN_MANAGER_IOC
 14775 ;; This function is called by:
 14776 ;;		Interrupt level 2
 14777 ;; This function uses a non-reentrant model
 14778 ;;
 14779                           
 14780                           	psect	intcode
 14781  000008                     __pintcode:
 14782                           	opt callstack 0
 14783  000008                     _INTERRUPT_InterruptManager:
 14784                           	opt callstack 8
 14785                           
 14786                           ; BSR set to: 0
 14787                           ;incstack = 0
 14788  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14789  00000A  CFFA F081          	movff	pclath,??_INTERRUPT_InterruptManager
 14790  00000E  CFFB F082          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 14791  000012  CFE1 F083          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 14792  000016  CFE2 F084          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 14793  00001A  CFD9 F085          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 14794  00001E  CFDA F086          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 14795  000022  CFF3 F087          	movff	prodl,??_INTERRUPT_InterruptManager+6
 14796  000026  CFF4 F088          	movff	prodh,??_INTERRUPT_InterruptManager+7
 14797  00002A  CFF6 F089          	movff	tblptrl,??_INTERRUPT_InterruptManager+8
 14798  00002E  CFF7 F08A          	movff	tblptrh,??_INTERRUPT_InterruptManager+9
 14799  000032  CFF8 F08B          	movff	tblptru,??_INTERRUPT_InterruptManager+10
 14800  000036  CFF5 F08C          	movff	tablat,??_INTERRUPT_InterruptManager+11
 14801  00003A                     
 14802                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.RBIE == 1 && INTCONbits.
      +                          RBIF == 1)
 14803  00003A  A6F2               	btfss	242,3,c	;volatile
 14804  00003C  EF22  F000         	goto	i2u1174_41
 14805  000040  EF24  F000         	goto	i2u1174_40
 14806  000044                     i2u1174_41:
 14807  000044  EF2D  F000         	goto	i2l340
 14808  000048                     i2u1174_40:
 14809  000048  A0F2               	btfss	242,0,c	;volatile
 14810  00004A  EF29  F000         	goto	i2u1175_41
 14811  00004E  EF2B  F000         	goto	i2u1175_40
 14812  000052                     i2u1175_41:
 14813  000052  EF2D  F000         	goto	i2l340
 14814  000056                     i2u1175_40:
 14815  000056                     
 14816                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         PIN_MANAGER_IOC();
 14817  000056  EC02  F034         	call	_PIN_MANAGER_IOC	;wreg free
 14818  00005A                     i2l340:
 14819  00005A  C08C  FFF5         	movff	??_INTERRUPT_InterruptManager+11,tablat
 14820  00005E  C08B  FFF8         	movff	??_INTERRUPT_InterruptManager+10,tblptru
 14821  000062  C08A  FFF7         	movff	??_INTERRUPT_InterruptManager+9,tblptrh
 14822  000066  C089  FFF6         	movff	??_INTERRUPT_InterruptManager+8,tblptrl
 14823  00006A  C088  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 14824  00006E  C087  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 14825  000072  C086  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 14826  000076  C085  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 14827  00007A  C084  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 14828  00007E  C083  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 14829  000082  C082  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 14830  000086  C081  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 14831  00008A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14832  00008C  0011               	retfie		f
 14833  00008E                     __end_of_INTERRUPT_InterruptManager:
 14834                           	opt callstack 0
 14835                           
 14836 ;; *************** function _PIN_MANAGER_IOC *****************
 14837 ;; Defined at:
 14838 ;;		line 107 in file "mcc_generated_files/pin_manager.c"
 14839 ;; Parameters:    Size  Location     Type
 14840 ;;		None
 14841 ;; Auto vars:     Size  Location     Type
 14842 ;;		None
 14843 ;; Return value:  Size  Location     Type
 14844 ;;                  1    wreg      void 
 14845 ;; Registers used:
 14846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14847 ;; Tracked objects:
 14848 ;;		On entry : 0/0
 14849 ;;		On exit  : 0/0
 14850 ;;		Unchanged: 0/0
 14851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14856 ;;Total ram usage:        0 bytes
 14857 ;; Hardware stack levels used:    1
 14858 ;; Hardware stack levels required when called:   11
 14859 ;; This function calls:
 14860 ;;		_IOCB4_ISR
 14861 ;; This function is called by:
 14862 ;;		_INTERRUPT_InterruptManager
 14863 ;; This function uses a non-reentrant model
 14864 ;;
 14865                           
 14866                           	psect	text67
 14867  006804                     __ptext67:
 14868                           	opt callstack 0
 14869  006804                     _PIN_MANAGER_IOC:
 14870                           	opt callstack 8
 14871  006804                     
 14872                           ;mcc_generated_files/pin_manager.c: 110:     if(IOCBbits.IOCB4 == 1)
 14873  006804  010F               	movlb	15	; () banked
 14874  006806  A95A               	btfss	90,4,b	;volatile
 14875  006808  EF08  F034         	goto	i2u1165_41
 14876  00680C  EF0A  F034         	goto	i2u1165_40
 14877  006810                     i2u1165_41:
 14878  006810  EF0C  F034         	goto	i2l9009
 14879  006814                     i2u1165_40:
 14880  006814                     
 14881                           ; BSR set to: 15
 14882                           ;mcc_generated_files/pin_manager.c: 111:     {;mcc_generated_files/pin_manager.c: 112:  
      +                                 IOCB4_ISR();
 14883  006814  ECF2  F032         	call	_IOCB4_ISR	;wreg free
 14884  006818                     i2l9009:
 14885                           
 14886                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.RBIF = 0;
 14887  006818  90F2               	bcf	242,0,c	;volatile
 14888  00681A  0012               	return		;funcret
 14889  00681C                     __end_of_PIN_MANAGER_IOC:
 14890                           	opt callstack 0
 14891                           
 14892 ;; *************** function _IOCB4_ISR *****************
 14893 ;; Defined at:
 14894 ;;		line 121 in file "mcc_generated_files/pin_manager.c"
 14895 ;; Parameters:    Size  Location     Type
 14896 ;;		None
 14897 ;; Auto vars:     Size  Location     Type
 14898 ;;		None
 14899 ;; Return value:  Size  Location     Type
 14900 ;;                  1    wreg      void 
 14901 ;; Registers used:
 14902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14903 ;; Tracked objects:
 14904 ;;		On entry : 0/0
 14905 ;;		On exit  : 0/0
 14906 ;;		Unchanged: 0/0
 14907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14912 ;;Total ram usage:        0 bytes
 14913 ;; Hardware stack levels used:    1
 14914 ;; Hardware stack levels required when called:   10
 14915 ;; This function calls:
 14916 ;;		Absolute function
 14917 ;;		_INTERRUPT_S1_CALLBACK
 14918 ;;		_IOCB4_DefaultInterruptHandler
 14919 ;; This function is called by:
 14920 ;;		_PIN_MANAGER_IOC
 14921 ;; This function uses a non-reentrant model
 14922 ;;
 14923                           
 14924                           	psect	text68
 14925  0065E4                     __ptext68:
 14926                           	opt callstack 0
 14927  0065E4                     _IOCB4_ISR:
 14928                           	opt callstack 8
 14929  0065E4                     
 14930                           ;mcc_generated_files/pin_manager.c: 126:     if(IOCB4_InterruptHandler)
 14931  0065E4  0100               	movlb	0	; () banked
 14932  0065E6  51CA               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 14933  0065E8  11CB               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 14934  0065EA  B4D8               	btfsc	status,2,c
 14935  0065EC  EFFA  F032         	goto	i2u1158_41
 14936  0065F0  EFFC  F032         	goto	i2u1158_40
 14937  0065F4                     i2u1158_41:
 14938  0065F4  EF08  F033         	goto	i2l142
 14939  0065F8                     i2u1158_40:
 14940  0065F8                     
 14941                           ; BSR set to: 0
 14942                           ;mcc_generated_files/pin_manager.c: 127:     {;mcc_generated_files/pin_manager.c: 128:  
      +                                 IOCB4_InterruptHandler();
 14943  0065F8  D802               	call	i2u1159_48
 14944  0065FA  EF08  F033         	goto	i2u1159_49
 14945  0065FE                     i2u1159_48:
 14946  0065FE  0005               	push	
 14947  006600  6EFA               	movwf	pclath,c
 14948  006602  51CA               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 14949  006604  6EFD               	movwf	tosl,c
 14950  006606  51CB               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 14951  006608  6EFE               	movwf	tosh,c
 14952  00660A  6AFF               	clrf	tosu,c
 14953  00660C  50FA               	movf	pclath,w,c
 14954  00660E  0012               	return		;indir
 14955  006610                     i2u1159_49:
 14956  006610                     i2l142:
 14957  006610  0012               	return		;funcret
 14958  006612                     __end_of_IOCB4_ISR:
 14959                           	opt callstack 0
 14960                           
 14961 ;; *************** function _INTERRUPT_S1_CALLBACK *****************
 14962 ;; Defined at:
 14963 ;;		line 11 in file "main.c"
 14964 ;; Parameters:    Size  Location     Type
 14965 ;;		None
 14966 ;; Auto vars:     Size  Location     Type
 14967 ;;		None
 14968 ;; Return value:  Size  Location     Type
 14969 ;;                  1    wreg      void 
 14970 ;; Registers used:
 14971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14972 ;; Tracked objects:
 14973 ;;		On entry : 0/0
 14974 ;;		On exit  : 0/0
 14975 ;;		Unchanged: 0/0
 14976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14981 ;;Total ram usage:        0 bytes
 14982 ;; Hardware stack levels used:    1
 14983 ;; Hardware stack levels required when called:    9
 14984 ;; This function calls:
 14985 ;;		_TMR0_StartTimer
 14986 ;;		_TMR0_StopTimer
 14987 ;;		i2_TMR0_WriteTimer
 14988 ;;		i2_printf
 14989 ;; This function is called by:
 14990 ;;		_main
 14991 ;;		_IOCB4_ISR
 14992 ;; This function uses a non-reentrant model
 14993 ;;
 14994                           
 14995                           	psect	text69
 14996  006034                     __ptext69:
 14997                           	opt callstack 0
 14998  006034                     _INTERRUPT_S1_CALLBACK:
 14999                           	opt callstack 8
 15000  006034                     
 15001                           ;main.c: 12:     if (PORTBbits.RB4 == 0) {
 15002  006034  B881               	btfsc	129,4,c	;volatile
 15003  006036  EF1F  F030         	goto	i2u1155_41
 15004  00603A  EF21  F030         	goto	i2u1155_40
 15005  00603E                     i2u1155_41:
 15006  00603E  EF38  F030         	goto	i2l8957
 15007  006042                     i2u1155_40:
 15008  006042                     
 15009                           ;main.c: 13:         printf("\f\rPOT: %3d \r", adc_perc);
 15010  006042  0EB4               	movlw	low STR_1
 15011  006044  0100               	movlb	0	; () banked
 15012  006046  6F7B               	movwf	i2printf@fmt& (0+255),b
 15013  006048  0EFF               	movlw	high STR_1
 15014  00604A  6F7C               	movwf	(i2printf@fmt+1)& (0+255),b
 15015  00604C  C0B5  F07D         	movff	_adc_perc,?i2_printf+2
 15016  006050  C0B6  F07E         	movff	_adc_perc+1,?i2_printf+3
 15017  006054  C0B7  F07F         	movff	_adc_perc+2,?i2_printf+4
 15018  006058  C0B8  F080         	movff	_adc_perc+3,?i2_printf+5
 15019  00605C  EC86  F033         	call	i2_printf	;wreg free
 15020  006060                     
 15021                           ;main.c: 15:         TMR0_WriteTimer(0x00);
 15022  006060  0E00               	movlw	0
 15023  006062  6E02               	movwf	(i2TMR0_WriteTimer@timerVal+1)^0,c
 15024  006064  0E00               	movlw	0
 15025  006066  6E01               	movwf	i2TMR0_WriteTimer@timerVal^0,c
 15026  006068  EC66  F034         	call	i2_TMR0_WriteTimer	;wreg free
 15027  00606C                     
 15028                           ;main.c: 16:         TMR0_StartTimer();
 15029  00606C  EC75  F034         	call	_TMR0_StartTimer	;wreg free
 15030  006070                     i2l8957:
 15031                           
 15032                           ;main.c: 18:     if (PORTBbits.RB4 == 1) {
 15033  006070  A881               	btfss	129,4,c	;volatile
 15034  006072  EF3D  F030         	goto	i2u1156_41
 15035  006076  EF3F  F030         	goto	i2u1156_40
 15036  00607A                     i2u1156_41:
 15037  00607A  EF41  F030         	goto	i2l432
 15038  00607E                     i2u1156_40:
 15039  00607E                     
 15040                           ;main.c: 19:         TMR0_StopTimer();
 15041  00607E  EC73  F034         	call	_TMR0_StopTimer	;wreg free
 15042  006082                     i2l432:
 15043  006082  0012               	return		;funcret
 15044  006084                     __end_of_INTERRUPT_S1_CALLBACK:
 15045                           	opt callstack 0
 15046                           
 15047 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 15048 ;; Defined at:
 15049 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 15050 ;; Parameters:    Size  Location     Type
 15051 ;;		None
 15052 ;; Auto vars:     Size  Location     Type
 15053 ;;		None
 15054 ;; Return value:  Size  Location     Type
 15055 ;;                  1    wreg      void 
 15056 ;; Registers used:
 15057 ;;		None
 15058 ;; Tracked objects:
 15059 ;;		On entry : 0/0
 15060 ;;		On exit  : 0/0
 15061 ;;		Unchanged: 0/0
 15062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15067 ;;Total ram usage:        0 bytes
 15068 ;; Hardware stack levels used:    1
 15069 ;; This function calls:
 15070 ;;		Nothing
 15071 ;; This function is called by:
 15072 ;;		_PIN_MANAGER_Initialize
 15073 ;;		_IOCB4_ISR
 15074 ;; This function uses a non-reentrant model
 15075 ;;
 15076                           
 15077                           	psect	text70
 15078  0068EE                     __ptext70:
 15079                           	opt callstack 0
 15080  0068EE                     _IOCB4_DefaultInterruptHandler:
 15081                           	opt callstack 17
 15082  0068EE  0012               	return		;funcret
 15083  0068F0                     __end_of_IOCB4_DefaultInterruptHandler:
 15084                           	opt callstack 0
 15085                           
 15086 ;; *************** function i2_printf *****************
 15087 ;; Defined at:
 15088 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
 15089 ;; Parameters:    Size  Location     Type
 15090 ;;  fmt             2   27[BANK0 ] PTR const unsigned char 
 15091 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
 15092 ;;		 -> STR_4(22), STR_1(13), 
 15093 ;; Auto vars:     Size  Location     Type
 15094 ;;  printf          2   88[COMRAM] PTR void [1]
 15095 ;;		 -> ?i2_printf(2), ?_snprintf(2), ?_printf(2), 
 15096 ;;  printf          2    0        int 
 15097 ;; Return value:  Size  Location     Type
 15098 ;;                  2   27[BANK0 ] int 
 15099 ;; Registers used:
 15100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15101 ;; Tracked objects:
 15102 ;;		On entry : 0/0
 15103 ;;		On exit  : 0/0
 15104 ;;		Unchanged: 0/0
 15105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15106 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15107 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15109 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15110 ;;Total ram usage:       10 bytes
 15111 ;; Hardware stack levels used:    1
 15112 ;; Hardware stack levels required when called:    8
 15113 ;; This function calls:
 15114 ;;		i2_vfprintf
 15115 ;; This function is called by:
 15116 ;;		_INTERRUPT_S1_CALLBACK
 15117 ;; This function uses a non-reentrant model
 15118 ;;
 15119                           
 15120                           	psect	text71
 15121  00670C                     __ptext71:
 15122                           	opt callstack 0
 15123  00670C                     i2_printf:
 15124                           	opt callstack 8
 15125  00670C  0E7D               	movlw	low (?i2_printf+2)
 15126  00670E  6E59               	movwf	i2printf@ap^0,c
 15127  006710  0E00               	movlw	high (?i2_printf+2)
 15128  006712  6E5A               	movwf	(i2printf@ap+1)^0,c
 15129  006714  0E00               	movlw	0
 15130  006716  6E4F               	movwf	i2vfprintf@fp^0,c
 15131  006718  0E00               	movlw	0
 15132  00671A  6E50               	movwf	(i2vfprintf@fp+1)^0,c
 15133  00671C  C07B  F051         	movff	i2printf@fmt,i2vfprintf@fmt
 15134  006720  C07C  F052         	movff	i2printf@fmt+1,i2vfprintf@fmt+1
 15135  006724  0E59               	movlw	low i2printf@ap
 15136  006726  6E53               	movwf	i2vfprintf@ap^0,c
 15137  006728  0E00               	movlw	high i2printf@ap
 15138  00672A  6E54               	movwf	(i2vfprintf@ap+1)^0,c
 15139  00672C  ECD9  F02E         	call	i2_vfprintf	;wreg free
 15140  006730  0012               	return		;funcret
 15141  006732                     __end_ofi2_printf:
 15142                           	opt callstack 0
 15143                           
 15144 ;; *************** function i2_vfprintf *****************
 15145 ;; Defined at:
 15146 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 15147 ;; Parameters:    Size  Location     Type
 15148 ;;  fp              2   78[COMRAM] PTR struct _IO_FILE
 15149 ;;		 -> vsnprintf@f(6), NULL(0), 
 15150 ;;  fmt             2   80[COMRAM] PTR const unsigned char 
 15151 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
 15152 ;;		 -> STR_4(22), STR_3(12), STR_1(13), 
 15153 ;;  ap              2   82[COMRAM] PTR PTR void 
 15154 ;;		 -> i2printf@ap(2), snprintf@ap(2), printf@ap(2), 
 15155 ;; Auto vars:     Size  Location     Type
 15156 ;;  vfprintf        2   84[COMRAM] PTR unsigned char 
 15157 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
 15158 ;;		 -> STR_4(22), STR_3(12), STR_1(13), 
 15159 ;; Return value:  Size  Location     Type
 15160 ;;                  2   78[COMRAM] int 
 15161 ;; Registers used:
 15162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15163 ;; Tracked objects:
 15164 ;;		On entry : 0/0
 15165 ;;		On exit  : 0/0
 15166 ;;		Unchanged: 0/0
 15167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15168 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15169 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15171 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15172 ;;Total ram usage:        8 bytes
 15173 ;; Hardware stack levels used:    1
 15174 ;; Hardware stack levels required when called:    7
 15175 ;; This function calls:
 15176 ;;		i2_vfpfcnvrt
 15177 ;; This function is called by:
 15178 ;;		i2_printf
 15179 ;; This function uses a non-reentrant model
 15180 ;;
 15181                           
 15182                           	psect	text72
 15183  005DB2                     __ptext72:
 15184                           	opt callstack 0
 15185  005DB2                     i2_vfprintf:
 15186                           	opt callstack 8
 15187  005DB2                     
 15188                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 15189  005DB2  C051  F055         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
 15190  005DB6  C052  F056         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
 15191  005DBA                     
 15192                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 15193  005DBA  0E00               	movlw	0
 15194  005DBC  0101               	movlb	1	; () banked
 15195  005DBE  6F75               	movwf	(_nout+1)& (0+255),b
 15196  005DC0  0E00               	movlw	0
 15197  005DC2  6F74               	movwf	_nout& (0+255),b
 15198                           
 15199                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 15200  005DC4  EFF7  F02E         	goto	i2l8609
 15201  005DC8                     i2l8607:
 15202                           
 15203                           ; BSR set to: 1
 15204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 15205  005DC8  C04F  F045         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
 15206  005DCC  C050  F046         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
 15207  005DD0  0E55               	movlw	low i2vfprintf@cfmt
 15208  005DD2  6E47               	movwf	i2vfpfcnvrt@fmt^0,c
 15209  005DD4  0E00               	movlw	high i2vfprintf@cfmt
 15210  005DD6  6E48               	movwf	(i2vfpfcnvrt@fmt+1)^0,c
 15211  005DD8  C053  F049         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
 15212  005DDC  C054  F04A         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
 15213  005DE0  ECA9  F009         	call	i2_vfpfcnvrt	;wreg free
 15214  005DE4  5045               	movf	?i2_vfpfcnvrt^0,w,c
 15215  005DE6  0101               	movlb	1	; () banked
 15216  005DE8  2774               	addwf	_nout& (0+255),f,b
 15217  005DEA  5046               	movf	(?i2_vfpfcnvrt+1)^0,w,c
 15218  005DEC  2375               	addwfc	(_nout+1)& (0+255),f,b
 15219  005DEE                     i2l8609:
 15220                           
 15221                           ; BSR set to: 1
 15222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 15223  005DEE  C055  FFF6         	movff	i2vfprintf@cfmt,tblptrl
 15224  005DF2  C056  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
 15225  005DF6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15226  005DF6  6AF8               	clrf	tblptru,c
 15227  005DF8                     	endif
 15228  005DF8                     	if	0	;tblptru may be non-zero
 15229  005DF8                     	endif
 15230  005DF8  0008               	tblrd		*
 15231  005DFA  50F5               	movf	tablat,w,c
 15232  005DFC  0900               	iorlw	0
 15233  005DFE  A4D8               	btfss	status,2,c
 15234  005E00  EF04  F02F         	goto	i2u1109_41
 15235  005E04  EF06  F02F         	goto	i2u1109_40
 15236  005E08                     i2u1109_41:
 15237  005E08  EFE4  F02E         	goto	i2l8607
 15238  005E0C                     i2u1109_40:
 15239  005E0C                     
 15240                           ; BSR set to: 1
 15241                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 15242  005E0C  C174  F04F         	movff	_nout,?i2_vfprintf
 15243  005E10  C175  F050         	movff	_nout+1,?i2_vfprintf+1
 15244  005E14                     
 15245                           ; BSR set to: 1
 15246  005E14  0012               	return		;funcret
 15247  005E16                     __end_ofi2_vfprintf:
 15248                           	opt callstack 0
 15249                           
 15250 ;; *************** function i2_vfpfcnvrt *****************
 15251 ;; Defined at:
 15252 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 15253 ;; Parameters:    Size  Location     Type
 15254 ;;  fp              2   68[COMRAM] PTR struct _IO_FILE
 15255 ;;		 -> vsnprintf@f(6), NULL(0), 
 15256 ;;  fmt             2   70[COMRAM] PTR PTR unsigned char 
 15257 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
 15258 ;;  ap              2   72[COMRAM] PTR PTR void 
 15259 ;;		 -> i2printf@ap(2), snprintf@ap(2), printf@ap(2), 
 15260 ;; Auto vars:     Size  Location     Type
 15261 ;;  vfpfcnvrt       8   19[BANK0 ] unsigned long long 
 15262 ;;  vfpfcnvrt       8    8[BANK0 ] long long 
 15263 ;;  vfpfcnvrt       4    0        long long 
 15264 ;;  vfpfcnvrt       3    0        unsigned char [3]
 15265 ;;  vfpfcnvrt       2   16[BANK0 ] PTR void 
 15266 ;;		 -> ?_snprintf(2), ?_printf(2), 
 15267 ;;  vfpfcnvrt       2    2[BANK0 ] int 
 15268 ;;  vfpfcnvrt       2    0[BANK0 ] PTR unsigned char 
 15269 ;;		 -> ?_snprintf(2), ?_printf(2), 
 15270 ;;  vfpfcnvrt       2    0        int 
 15271 ;;  vfpfcnvrt       1   18[BANK0 ] unsigned char 
 15272 ;; Return value:  Size  Location     Type
 15273 ;;                  2   68[COMRAM] int 
 15274 ;; Registers used:
 15275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15276 ;; Tracked objects:
 15277 ;;		On entry : 0/0
 15278 ;;		On exit  : 0/0
 15279 ;;		Unchanged: 0/0
 15280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15281 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15282 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15283 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15284 ;;      Totals:        10      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15285 ;;Total ram usage:       37 bytes
 15286 ;; Hardware stack levels used:    1
 15287 ;; Hardware stack levels required when called:    6
 15288 ;; This function calls:
 15289 ;;		i2_atoi
 15290 ;;		i2_ctoa
 15291 ;;		i2_dtoa
 15292 ;;		i2_fputc
 15293 ;;		i2_isdigit
 15294 ;;		i2_otoa
 15295 ;;		i2_stoa
 15296 ;;		i2_strncmp
 15297 ;;		i2_utoa
 15298 ;;		i2_xtoa
 15299 ;; This function is called by:
 15300 ;;		i2_vfprintf
 15301 ;; This function uses a non-reentrant model
 15302 ;;
 15303                           
 15304                           	psect	text73
 15305  001352                     __ptext73:
 15306                           	opt callstack 0
 15307  001352                     i2_vfpfcnvrt:
 15308                           	opt callstack 8
 15309  001352                     
 15310                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 15311  001352  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15312  001356  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15313  00135A  CFDE FFF6          	movff	postinc2,tblptrl
 15314  00135E  CFDD FFF7          	movff	postdec2,tblptrh
 15315  001362                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15316  001362  6AF8               	clrf	tblptru,c
 15317  001364                     	endif
 15318  001364                     	if	0	;tblptru may be non-zero
 15319  001364                     	endif
 15320  001364  0008               	tblrd		*
 15321  001366  50F5               	movf	tablat,w,c
 15322  001368  0A25               	xorlw	37
 15323  00136A  A4D8               	btfss	status,2,c
 15324  00136C  EFBA  F009         	goto	i2u988_41
 15325  001370  EFBC  F009         	goto	i2u988_40
 15326  001374                     i2u988_41:
 15327  001374  EFC8  F012         	goto	i2l8259
 15328  001378                     i2u988_40:
 15329  001378                     
 15330                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 15331  001378  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15332  00137C  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15333  001380  2ADE               	incf	postinc2,f,c
 15334  001382  0E00               	movlw	0
 15335  001384  22DD               	addwfc	postdec2,f,c
 15336  001386                     
 15337                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 15338  001386  0E00               	movlw	0
 15339  001388  0100               	movlb	0	; () banked
 15340  00138A  6FBA               	movwf	(_width+1)& (0+255),b
 15341  00138C  0E00               	movlw	0
 15342  00138E  6FB9               	movwf	_width& (0+255),b
 15343  001390  C0B9  F0BD         	movff	_width,_flags
 15344  001394  C0BA  F0BE         	movff	_width+1,_flags+1
 15345  001398                     
 15346                           ; BSR set to: 0
 15347                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 15348  001398  69BB               	setf	_prec& (0+255),b
 15349  00139A  69BC               	setf	(_prec+1)& (0+255),b
 15350  00139C                     
 15351                           ; BSR set to: 0
 15352                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
 15353  00139C  0E00               	movlw	0
 15354  00139E  6F63               	movwf	(i2vfpfcnvrt@done+1)& (0+255),b
 15355  0013A0  0E00               	movlw	0
 15356  0013A2  6F62               	movwf	i2vfpfcnvrt@done& (0+255),b
 15357                           
 15358                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 15359  0013A4  EF1B  F00A         	goto	i2l7977
 15360  0013A8                     i2l7951:
 15361                           
 15362                           ; BSR set to: 0
 15363                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
 15364  0013A8  81BD               	bsf	_flags& (0+255),0,b
 15365  0013AA                     i2l7953:
 15366                           
 15367                           ; BSR set to: 0
 15368                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
 15369  0013AA  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15370  0013AE  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15371  0013B2  2ADE               	incf	postinc2,f,c
 15372  0013B4  0E00               	movlw	0
 15373  0013B6  22DD               	addwfc	postdec2,f,c
 15374                           
 15375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
 15376  0013B8  EF1B  F00A         	goto	i2l7977
 15377  0013BC                     i2l7955:
 15378                           
 15379                           ; BSR set to: 0
 15380                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
 15381  0013BC  83BD               	bsf	_flags& (0+255),1,b
 15382  0013BE  EFD5  F009         	goto	i2l7953
 15383  0013C2                     i2l7959:
 15384                           
 15385                           ; BSR set to: 0
 15386                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
 15387  0013C2  85BD               	bsf	_flags& (0+255),2,b
 15388  0013C4  EFD5  F009         	goto	i2l7953
 15389  0013C8                     i2l7963:
 15390                           
 15391                           ; BSR set to: 0
 15392                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
 15393  0013C8  87BD               	bsf	_flags& (0+255),3,b
 15394  0013CA  EFD5  F009         	goto	i2l7953
 15395  0013CE                     i2l7967:
 15396                           
 15397                           ; BSR set to: 0
 15398                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
 15399  0013CE  89BD               	bsf	_flags& (0+255),4,b
 15400  0013D0  EFD5  F009         	goto	i2l7953
 15401  0013D4                     i2l7971:
 15402                           
 15403                           ; BSR set to: 0
 15404                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
 15405  0013D4  0E00               	movlw	0
 15406  0013D6  6F63               	movwf	(i2vfpfcnvrt@done+1)& (0+255),b
 15407  0013D8  0E01               	movlw	1
 15408  0013DA  6F62               	movwf	i2vfpfcnvrt@done& (0+255),b
 15409                           
 15410                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
 15411  0013DC  EF1B  F00A         	goto	i2l7977
 15412  0013E0                     i2l7975:
 15413                           
 15414                           ; BSR set to: 0
 15415  0013E0  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15416  0013E4  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15417  0013E8  CFDE FFF6          	movff	postinc2,tblptrl
 15418  0013EC  CFDD FFF7          	movff	postdec2,tblptrh
 15419  0013F0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15420  0013F0  6AF8               	clrf	tblptru,c
 15421  0013F2                     	endif
 15422  0013F2                     	if	0	;tblptru may be non-zero
 15423  0013F2                     	endif
 15424  0013F2  0008               	tblrd		*
 15425  0013F4  50F5               	movf	tablat,w,c
 15426  0013F6  6E4B               	movwf	??i2_vfpfcnvrt^0,c
 15427  0013F8  6A4C               	clrf	(??i2_vfpfcnvrt+1)^0,c
 15428                           
 15429                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15430                           ; Switch size 1, requested type "simple"
 15431                           ; Number of cases is 1, Range of values is 0 to 0
 15432                           ; switch strategies available:
 15433                           ; Name         Instructions Cycles
 15434                           ; simple_byte            4     3 (average)
 15435                           ;	Chosen strategy is simple_byte
 15436  0013FA  504C               	movf	(??i2_vfpfcnvrt+1)^0,w,c
 15437  0013FC  0A00               	xorlw	0	; case 0
 15438  0013FE  B4D8               	btfsc	status,2,c
 15439  001400  EF04  F00A         	goto	i2l9203
 15440  001404  EFEA  F009         	goto	i2l7971
 15441  001408                     i2l9203:
 15442                           
 15443                           ; BSR set to: 0
 15444                           ; Switch size 1, requested type "simple"
 15445                           ; Number of cases is 5, Range of values is 32 to 48
 15446                           ; switch strategies available:
 15447                           ; Name         Instructions Cycles
 15448                           ; simple_byte           16     9 (average)
 15449                           ;	Chosen strategy is simple_byte
 15450  001408  504B               	movf	??i2_vfpfcnvrt^0,w,c
 15451  00140A  0A20               	xorlw	32	; case 32
 15452  00140C  B4D8               	btfsc	status,2,c
 15453  00140E  EFE4  F009         	goto	i2l7963
 15454  001412  0A03               	xorlw	3	; case 35
 15455  001414  B4D8               	btfsc	status,2,c
 15456  001416  EFE7  F009         	goto	i2l7967
 15457  00141A  0A08               	xorlw	8	; case 43
 15458  00141C  B4D8               	btfsc	status,2,c
 15459  00141E  EFE1  F009         	goto	i2l7959
 15460  001422  0A06               	xorlw	6	; case 45
 15461  001424  B4D8               	btfsc	status,2,c
 15462  001426  EFD4  F009         	goto	i2l7951
 15463  00142A  0A1D               	xorlw	29	; case 48
 15464  00142C  B4D8               	btfsc	status,2,c
 15465  00142E  EFDE  F009         	goto	i2l7955
 15466  001432  EFEA  F009         	goto	i2l7971
 15467  001436                     i2l7977:
 15468                           
 15469                           ; BSR set to: 0
 15470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 15471  001436  5162               	movf	i2vfpfcnvrt@done& (0+255),w,b
 15472  001438  1163               	iorwf	(i2vfpfcnvrt@done+1)& (0+255),w,b
 15473  00143A  B4D8               	btfsc	status,2,c
 15474  00143C  EF22  F00A         	goto	i2u989_41
 15475  001440  EF24  F00A         	goto	i2u989_40
 15476  001444                     i2u989_41:
 15477  001444  EFF0  F009         	goto	i2l7975
 15478  001448                     i2u989_40:
 15479  001448                     
 15480                           ; BSR set to: 0
 15481                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
 15482  001448  A1BD               	btfss	_flags& (0+255),0,b
 15483  00144A  EF29  F00A         	goto	i2u990_41
 15484  00144E  EF2B  F00A         	goto	i2u990_40
 15485  001452                     i2u990_41:
 15486  001452  EF2C  F00A         	goto	i2l7981
 15487  001456                     i2u990_40:
 15488  001456                     
 15489                           ; BSR set to: 0
 15490                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
 15491  001456  93BD               	bcf	_flags& (0+255),1,b
 15492  001458                     i2l7981:
 15493                           
 15494                           ; BSR set to: 0
 15495                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
 15496  001458  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15497  00145C  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15498  001460  CFDE FFF6          	movff	postinc2,tblptrl
 15499  001464  CFDD FFF7          	movff	postdec2,tblptrh
 15500  001468                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15501  001468  6AF8               	clrf	tblptru,c
 15502  00146A                     	endif
 15503  00146A                     	if	0	;tblptru may be non-zero
 15504  00146A                     	endif
 15505  00146A  0008               	tblrd		*
 15506  00146C  50F5               	movf	tablat,w,c
 15507  00146E  0A2A               	xorlw	42
 15508  001470  A4D8               	btfss	status,2,c
 15509  001472  EF3D  F00A         	goto	i2u991_41
 15510  001476  EF3F  F00A         	goto	i2u991_40
 15511  00147A                     i2u991_41:
 15512  00147A  EF68  F00A         	goto	i2l7989
 15513  00147E                     i2u991_40:
 15514  00147E                     
 15515                           ; BSR set to: 0
 15516                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
 15517  00147E  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15518  001482  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15519  001486  2ADE               	incf	postinc2,f,c
 15520  001488  0E00               	movlw	0
 15521  00148A  22DD               	addwfc	postdec2,f,c
 15522                           
 15523                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
 15524  00148C  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 15525  001490  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 15526  001494  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 15527  001498  0E02               	movlw	2
 15528  00149A  26DE               	addwf	postinc2,f,c
 15529  00149C  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 15530  0014A0  0E00               	movlw	0
 15531  0014A2  22DD               	addwfc	postdec2,f,c
 15532  0014A4  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 15533  0014A8  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 15534  0014AC  CFDE F0B9          	movff	postinc2,_width
 15535  0014B0  CFDD F0BA          	movff	postdec2,_width+1
 15536  0014B4                     
 15537                           ; BSR set to: 0
 15538                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
 15539  0014B4  BFBA               	btfsc	(_width+1)& (0+255),7,b
 15540  0014B6  EF61  F00A         	goto	i2u992_40
 15541  0014BA  EF5F  F00A         	goto	i2u992_41
 15542  0014BE                     i2u992_41:
 15543  0014BE  EFAD  F00A         	goto	i2l7999
 15544  0014C2                     i2u992_40:
 15545  0014C2                     
 15546                           ; BSR set to: 0
 15547                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
 15548  0014C2  81BD               	bsf	_flags& (0+255),0,b
 15549                           
 15550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
 15551  0014C4  6DB9               	negf	_width& (0+255),b
 15552  0014C6  1FBA               	comf	(_width+1)& (0+255),f,b
 15553  0014C8  B0D8               	btfsc	status,0,c
 15554  0014CA  2BBA               	incf	(_width+1)& (0+255),f,b
 15555  0014CC  EFAD  F00A         	goto	i2l7999
 15556  0014D0                     i2l7989:
 15557                           
 15558                           ; BSR set to: 0
 15559                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
 15560  0014D0  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15561  0014D4  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15562  0014D8  CFDE F008          	movff	postinc2,i2atoi@s
 15563  0014DC  CFDD F009          	movff	postdec2,i2atoi@s+1
 15564  0014E0  EC24  F01F         	call	i2_atoi	;wreg free
 15565  0014E4  C008  F0B9         	movff	?i2_atoi,_width
 15566  0014E8  C009  F0BA         	movff	?i2_atoi+1,_width+1
 15567                           
 15568                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 15569  0014EC  EF7F  F00A         	goto	i2l7993
 15570  0014F0                     i2l7991:
 15571                           
 15572                           ; BSR set to: 0
 15573                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
 15574  0014F0  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15575  0014F4  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15576  0014F8  2ADE               	incf	postinc2,f,c
 15577  0014FA  0E00               	movlw	0
 15578  0014FC  22DD               	addwfc	postdec2,f,c
 15579  0014FE                     i2l7993:
 15580  0014FE  0ED0               	movlw	208
 15581  001500  6E4B               	movwf	??i2_vfpfcnvrt^0,c
 15582  001502  0EFF               	movlw	255
 15583  001504  6E4C               	movwf	(??i2_vfpfcnvrt+1)^0,c
 15584  001506  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15585  00150A  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15586  00150E  CFDE FFF6          	movff	postinc2,tblptrl
 15587  001512  CFDD FFF7          	movff	postdec2,tblptrh
 15588  001516                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15589  001516  6AF8               	clrf	tblptru,c
 15590  001518                     	endif
 15591  001518                     	if	0	;tblptru may be non-zero
 15592  001518                     	endif
 15593  001518  0008               	tblrd		*
 15594  00151A  50F5               	movf	tablat,w,c
 15595  00151C  6E4D               	movwf	(??i2_vfpfcnvrt+2)^0,c
 15596  00151E  6A4E               	clrf	(??i2_vfpfcnvrt+3)^0,c
 15597  001520  504B               	movf	??i2_vfpfcnvrt^0,w,c
 15598  001522  264D               	addwf	(??i2_vfpfcnvrt+2)^0,f,c
 15599  001524  504C               	movf	(??i2_vfpfcnvrt+1)^0,w,c
 15600  001526  224E               	addwfc	(??i2_vfpfcnvrt+3)^0,f,c
 15601  001528  504E               	movf	(??i2_vfpfcnvrt+3)^0,w,c
 15602  00152A  E10A               	bnz	i2u993_40
 15603  00152C  0E0A               	movlw	10
 15604  00152E  5C4D               	subwf	(??i2_vfpfcnvrt+2)^0,w,c
 15605  001530  A0D8               	btfss	status,0,c
 15606  001532  EF9D  F00A         	goto	i2u993_41
 15607  001536  EFA0  F00A         	goto	i2u993_40
 15608  00153A                     i2u993_41:
 15609  00153A  0E01               	movlw	1
 15610  00153C  EFA1  F00A         	goto	i2u994_40
 15611  001540                     i2u993_40:
 15612  001540  0E00               	movlw	0
 15613  001542                     i2u994_40:
 15614  001542  0100               	movlb	0	; () banked
 15615  001544  6F64               	movwf	i2_vfpfcnvrt$1721& (0+255),b
 15616  001546  6B65               	clrf	(i2_vfpfcnvrt$1721+1)& (0+255),b
 15617  001548                     
 15618                           ; BSR set to: 0
 15619  001548  5164               	movf	i2_vfpfcnvrt$1721& (0+255),w,b
 15620  00154A  1165               	iorwf	(i2_vfpfcnvrt$1721+1)& (0+255),w,b
 15621  00154C  A4D8               	btfss	status,2,c
 15622  00154E  EFAB  F00A         	goto	i2u995_41
 15623  001552  EFAD  F00A         	goto	i2u995_40
 15624  001556                     i2u995_41:
 15625  001556  EF78  F00A         	goto	i2l7991
 15626  00155A                     i2u995_40:
 15627  00155A                     i2l7999:
 15628                           
 15629                           ; BSR set to: 0
 15630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
 15631  00155A  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15632  00155E  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15633  001562  CFDE FFF6          	movff	postinc2,tblptrl
 15634  001566  CFDD FFF7          	movff	postdec2,tblptrh
 15635  00156A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15636  00156A  6AF8               	clrf	tblptru,c
 15637  00156C                     	endif
 15638  00156C                     	if	0	;tblptru may be non-zero
 15639  00156C                     	endif
 15640  00156C  0008               	tblrd		*
 15641  00156E  50F5               	movf	tablat,w,c
 15642  001570  0A2E               	xorlw	46
 15643  001572  A4D8               	btfss	status,2,c
 15644  001574  EFBE  F00A         	goto	i2u996_41
 15645  001578  EFC0  F00A         	goto	i2u996_40
 15646  00157C                     i2u996_41:
 15647  00157C  EF40  F00B         	goto	i2l8019
 15648  001580                     i2u996_40:
 15649  001580                     
 15650                           ; BSR set to: 0
 15651                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
 15652  001580  0E00               	movlw	0
 15653  001582  6FBC               	movwf	(_prec+1)& (0+255),b
 15654  001584  0E00               	movlw	0
 15655  001586  6FBB               	movwf	_prec& (0+255),b
 15656  001588                     
 15657                           ; BSR set to: 0
 15658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
 15659  001588  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15660  00158C  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15661  001590  2ADE               	incf	postinc2,f,c
 15662  001592  0E00               	movlw	0
 15663  001594  22DD               	addwfc	postdec2,f,c
 15664  001596                     
 15665                           ; BSR set to: 0
 15666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
 15667  001596  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15668  00159A  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15669  00159E  CFDE FFF6          	movff	postinc2,tblptrl
 15670  0015A2  CFDD FFF7          	movff	postdec2,tblptrh
 15671  0015A6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15672  0015A6  6AF8               	clrf	tblptru,c
 15673  0015A8                     	endif
 15674  0015A8                     	if	0	;tblptru may be non-zero
 15675  0015A8                     	endif
 15676  0015A8  0008               	tblrd		*
 15677  0015AA  50F5               	movf	tablat,w,c
 15678  0015AC  0A2A               	xorlw	42
 15679  0015AE  A4D8               	btfss	status,2,c
 15680  0015B0  EFDC  F00A         	goto	i2u997_41
 15681  0015B4  EFDE  F00A         	goto	i2u997_40
 15682  0015B8                     i2u997_41:
 15683  0015B8  EFFB  F00A         	goto	i2l8009
 15684  0015BC                     i2u997_40:
 15685  0015BC                     
 15686                           ; BSR set to: 0
 15687                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
 15688  0015BC  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15689  0015C0  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15690  0015C4  2ADE               	incf	postinc2,f,c
 15691  0015C6  0E00               	movlw	0
 15692  0015C8  22DD               	addwfc	postdec2,f,c
 15693                           
 15694                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
 15695  0015CA  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 15696  0015CE  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 15697  0015D2  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 15698  0015D6  0E02               	movlw	2
 15699  0015D8  26DE               	addwf	postinc2,f,c
 15700  0015DA  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 15701  0015DE  0E00               	movlw	0
 15702  0015E0  22DD               	addwfc	postdec2,f,c
 15703  0015E2  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 15704  0015E6  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 15705  0015EA  CFDE F0BB          	movff	postinc2,_prec
 15706  0015EE  CFDD F0BC          	movff	postdec2,_prec+1
 15707                           
 15708                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
 15709  0015F2  EF40  F00B         	goto	i2l8019
 15710  0015F6                     i2l8009:
 15711                           
 15712                           ; BSR set to: 0
 15713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
 15714  0015F6  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15715  0015FA  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15716  0015FE  CFDE F008          	movff	postinc2,i2atoi@s
 15717  001602  CFDD F009          	movff	postdec2,i2atoi@s+1
 15718  001606  EC24  F01F         	call	i2_atoi	;wreg free
 15719  00160A  C008  F0BB         	movff	?i2_atoi,_prec
 15720  00160E  C009  F0BC         	movff	?i2_atoi+1,_prec+1
 15721                           
 15722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 15723  001612  EF12  F00B         	goto	i2l8013
 15724  001616                     i2l8011:
 15725                           
 15726                           ; BSR set to: 0
 15727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
 15728  001616  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15729  00161A  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15730  00161E  2ADE               	incf	postinc2,f,c
 15731  001620  0E00               	movlw	0
 15732  001622  22DD               	addwfc	postdec2,f,c
 15733  001624                     i2l8013:
 15734  001624  0ED0               	movlw	208
 15735  001626  6E4B               	movwf	??i2_vfpfcnvrt^0,c
 15736  001628  0EFF               	movlw	255
 15737  00162A  6E4C               	movwf	(??i2_vfpfcnvrt+1)^0,c
 15738  00162C  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15739  001630  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15740  001634  CFDE FFF6          	movff	postinc2,tblptrl
 15741  001638  CFDD FFF7          	movff	postdec2,tblptrh
 15742  00163C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15743  00163C  6AF8               	clrf	tblptru,c
 15744  00163E                     	endif
 15745  00163E                     	if	0	;tblptru may be non-zero
 15746  00163E                     	endif
 15747  00163E  0008               	tblrd		*
 15748  001640  50F5               	movf	tablat,w,c
 15749  001642  6E4D               	movwf	(??i2_vfpfcnvrt+2)^0,c
 15750  001644  6A4E               	clrf	(??i2_vfpfcnvrt+3)^0,c
 15751  001646  504B               	movf	??i2_vfpfcnvrt^0,w,c
 15752  001648  264D               	addwf	(??i2_vfpfcnvrt+2)^0,f,c
 15753  00164A  504C               	movf	(??i2_vfpfcnvrt+1)^0,w,c
 15754  00164C  224E               	addwfc	(??i2_vfpfcnvrt+3)^0,f,c
 15755  00164E  504E               	movf	(??i2_vfpfcnvrt+3)^0,w,c
 15756  001650  E10A               	bnz	i2u998_40
 15757  001652  0E0A               	movlw	10
 15758  001654  5C4D               	subwf	(??i2_vfpfcnvrt+2)^0,w,c
 15759  001656  A0D8               	btfss	status,0,c
 15760  001658  EF30  F00B         	goto	i2u998_41
 15761  00165C  EF33  F00B         	goto	i2u998_40
 15762  001660                     i2u998_41:
 15763  001660  0E01               	movlw	1
 15764  001662  EF34  F00B         	goto	i2u999_40
 15765  001666                     i2u998_40:
 15766  001666  0E00               	movlw	0
 15767  001668                     i2u999_40:
 15768  001668  0100               	movlb	0	; () banked
 15769  00166A  6F66               	movwf	i2_vfpfcnvrt$1722& (0+255),b
 15770  00166C  6B67               	clrf	(i2_vfpfcnvrt$1722+1)& (0+255),b
 15771  00166E                     
 15772                           ; BSR set to: 0
 15773  00166E  5166               	movf	i2_vfpfcnvrt$1722& (0+255),w,b
 15774  001670  1167               	iorwf	(i2_vfpfcnvrt$1722+1)& (0+255),w,b
 15775  001672  A4D8               	btfss	status,2,c
 15776  001674  EF3E  F00B         	goto	i2u1000_41
 15777  001678  EF40  F00B         	goto	i2u1000_40
 15778  00167C                     i2u1000_41:
 15779  00167C  EF0B  F00B         	goto	i2l8011
 15780  001680                     i2u1000_40:
 15781  001680                     i2l8019:
 15782                           
 15783                           ; BSR set to: 0
 15784                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
 15785  001680  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15786  001684  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15787  001688  CFDE FFF6          	movff	postinc2,tblptrl
 15788  00168C  CFDD FFF7          	movff	postdec2,tblptrh
 15789  001690                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15790  001690  6AF8               	clrf	tblptru,c
 15791  001692                     	endif
 15792  001692                     	if	0	;tblptru may be non-zero
 15793  001692                     	endif
 15794  001692  0008               	tblrd		*
 15795  001694  50F5               	movf	tablat,w,c
 15796  001696  0A63               	xorlw	99
 15797  001698  A4D8               	btfss	status,2,c
 15798  00169A  EF51  F00B         	goto	i2u1001_41
 15799  00169E  EF53  F00B         	goto	i2u1001_40
 15800  0016A2                     i2u1001_41:
 15801  0016A2  EF7A  F00B         	goto	i2l8027
 15802  0016A6                     i2u1001_40:
 15803  0016A6                     
 15804                           ; BSR set to: 0
 15805                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
 15806  0016A6  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15807  0016AA  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15808  0016AE  2ADE               	incf	postinc2,f,c
 15809  0016B0  0E00               	movlw	0
 15810  0016B2  22DD               	addwfc	postdec2,f,c
 15811                           
 15812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 15813  0016B4  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 15814  0016B8  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 15815  0016BC  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 15816  0016C0  0E02               	movlw	2
 15817  0016C2  26DE               	addwf	postinc2,f,c
 15818  0016C4  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 15819  0016C8  0E00               	movlw	0
 15820  0016CA  22DD               	addwfc	postdec2,f,c
 15821  0016CC  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 15822  0016D0  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 15823  0016D4  50DF               	movf	indf2,w,c
 15824  0016D6  6F72               	movwf	i2vfpfcnvrt@c& (0+255),b
 15825  0016D8                     
 15826                           ; BSR set to: 0
 15827                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
 15828  0016D8  C045  F01E         	movff	i2vfpfcnvrt@fp,i2ctoa@fp
 15829  0016DC  C046  F01F         	movff	i2vfpfcnvrt@fp+1,i2ctoa@fp+1
 15830  0016E0  C072  F020         	movff	i2vfpfcnvrt@c,i2ctoa@c
 15831  0016E4  EC99  F02F         	call	i2_ctoa	;wreg free
 15832  0016E8  C01E  F045         	movff	?i2_ctoa,?i2_vfpfcnvrt
 15833  0016EC  C01F  F046         	movff	?i2_ctoa+1,?i2_vfpfcnvrt+1
 15834  0016F0  EFE4  F012         	goto	i2l797
 15835  0016F4                     i2l8027:
 15836                           
 15837                           ; BSR set to: 0
 15838                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
 15839  0016F4  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15840  0016F8  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15841  0016FC  CFDE F001          	movff	postinc2,i2strncmp@_l
 15842  001700  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 15843  001704  0ED1               	movlw	low STR_9
 15844  001706  6E03               	movwf	i2strncmp@_r^0,c
 15845  001708  0EFF               	movlw	high STR_9
 15846  00170A  6E04               	movwf	(i2strncmp@_r+1)^0,c
 15847  00170C  0E00               	movlw	0
 15848  00170E  6E06               	movwf	(i2strncmp@n+1)^0,c
 15849  001710  0E03               	movlw	3
 15850  001712  6E05               	movwf	i2strncmp@n^0,c
 15851  001714  EC69  F02A         	call	i2_strncmp	;wreg free
 15852  001718  5001               	movf	?i2_strncmp^0,w,c
 15853  00171A  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 15854  00171C  B4D8               	btfsc	status,2,c
 15855  00171E  EF93  F00B         	goto	i2u1002_41
 15856  001722  EF95  F00B         	goto	i2u1002_40
 15857  001726                     i2u1002_41:
 15858  001726  EFB0  F00B         	goto	i2l8031
 15859  00172A                     i2u1002_40:
 15860  00172A  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15861  00172E  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15862  001732  CFDE F001          	movff	postinc2,i2strncmp@_l
 15863  001736  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 15864  00173A  0ED5               	movlw	low STR_13
 15865  00173C  6E03               	movwf	i2strncmp@_r^0,c
 15866  00173E  0EFF               	movlw	high STR_13
 15867  001740  6E04               	movwf	(i2strncmp@_r+1)^0,c
 15868  001742  0E00               	movlw	0
 15869  001744  6E06               	movwf	(i2strncmp@n+1)^0,c
 15870  001746  0E03               	movlw	3
 15871  001748  6E05               	movwf	i2strncmp@n^0,c
 15872  00174A  EC69  F02A         	call	i2_strncmp	;wreg free
 15873  00174E  5001               	movf	?i2_strncmp^0,w,c
 15874  001750  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 15875  001752  A4D8               	btfss	status,2,c
 15876  001754  EFAE  F00B         	goto	i2u1003_41
 15877  001758  EFB0  F00B         	goto	i2u1003_40
 15878  00175C                     i2u1003_41:
 15879  00175C  EFF1  F00B         	goto	i2l8037
 15880  001760                     i2u1003_40:
 15881  001760                     i2l8031:
 15882                           
 15883                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
 15884  001760  0E03               	movlw	3
 15885  001762  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15886  001766  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15887  00176A  26DE               	addwf	postinc2,f,c
 15888  00176C  0E00               	movlw	0
 15889  00176E  22DD               	addwfc	postdec2,f,c
 15890                           
 15891                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 15892  001770  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 15893  001774  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 15894  001778  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 15895  00177C  0E02               	movlw	2
 15896  00177E  26DE               	addwf	postinc2,f,c
 15897  001780  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 15898  001784  0E00               	movlw	0
 15899  001786  22DD               	addwfc	postdec2,f,c
 15900  001788  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 15901  00178C  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 15902  001790  50DF               	movf	indf2,w,c
 15903  001792  0100               	movlb	0	; () banked
 15904  001794  6F68               	movwf	i2vfpfcnvrt@ll& (0+255),b
 15905  001796  0E00               	movlw	0
 15906  001798  BF68               	btfsc	i2vfpfcnvrt@ll& (0+255),7,b
 15907  00179A  0EFF               	movlw	-1
 15908  00179C  6F69               	movwf	(i2vfpfcnvrt@ll+1)& (0+255),b
 15909  00179E  6F6A               	movwf	(i2vfpfcnvrt@ll+2)& (0+255),b
 15910  0017A0  6F6B               	movwf	(i2vfpfcnvrt@ll+3)& (0+255),b
 15911  0017A2  6F6C               	movwf	(i2vfpfcnvrt@ll+4)& (0+255),b
 15912  0017A4  6F6D               	movwf	(i2vfpfcnvrt@ll+5)& (0+255),b
 15913  0017A6  6F6E               	movwf	(i2vfpfcnvrt@ll+6)& (0+255),b
 15914  0017A8  6F6F               	movwf	(i2vfpfcnvrt@ll+7)& (0+255),b
 15915  0017AA                     i2l8033:
 15916                           
 15917                           ; BSR set to: 0
 15918                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
 15919  0017AA  C045  F01E         	movff	i2vfpfcnvrt@fp,i2dtoa@fp
 15920  0017AE  C046  F01F         	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
 15921  0017B2  C068  F020         	movff	i2vfpfcnvrt@ll,i2dtoa@d
 15922  0017B6  C069  F021         	movff	i2vfpfcnvrt@ll+1,i2dtoa@d+1
 15923  0017BA  C06A  F022         	movff	i2vfpfcnvrt@ll+2,i2dtoa@d+2
 15924  0017BE  C06B  F023         	movff	i2vfpfcnvrt@ll+3,i2dtoa@d+3
 15925  0017C2  C06C  F024         	movff	i2vfpfcnvrt@ll+4,i2dtoa@d+4
 15926  0017C6  C06D  F025         	movff	i2vfpfcnvrt@ll+5,i2dtoa@d+5
 15927  0017CA  C06E  F026         	movff	i2vfpfcnvrt@ll+6,i2dtoa@d+6
 15928  0017CE  C06F  F027         	movff	i2vfpfcnvrt@ll+7,i2dtoa@d+7
 15929  0017D2  ECFC  F017         	call	i2_dtoa	;wreg free
 15930  0017D6  C01E  F045         	movff	?i2_dtoa,?i2_vfpfcnvrt
 15931  0017DA  C01F  F046         	movff	?i2_dtoa+1,?i2_vfpfcnvrt+1
 15932  0017DE  EFE4  F012         	goto	i2l797
 15933  0017E2                     i2l8037:
 15934                           
 15935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
 15936  0017E2  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15937  0017E6  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15938  0017EA  CFDE F001          	movff	postinc2,i2strncmp@_l
 15939  0017EE  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 15940  0017F2  0ED2               	movlw	low (STR_9+1)
 15941  0017F4  6E03               	movwf	i2strncmp@_r^0,c
 15942  0017F6  0EFF               	movlw	high (STR_9+1)
 15943  0017F8  6E04               	movwf	(i2strncmp@_r+1)^0,c
 15944  0017FA  0E00               	movlw	0
 15945  0017FC  6E06               	movwf	(i2strncmp@n+1)^0,c
 15946  0017FE  0E02               	movlw	2
 15947  001800  6E05               	movwf	i2strncmp@n^0,c
 15948  001802  EC69  F02A         	call	i2_strncmp	;wreg free
 15949  001806  5001               	movf	?i2_strncmp^0,w,c
 15950  001808  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 15951  00180A  B4D8               	btfsc	status,2,c
 15952  00180C  EF0A  F00C         	goto	i2u1004_41
 15953  001810  EF0C  F00C         	goto	i2u1004_40
 15954  001814                     i2u1004_41:
 15955  001814  EF27  F00C         	goto	i2l8041
 15956  001818                     i2u1004_40:
 15957  001818  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15958  00181C  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15959  001820  CFDE F001          	movff	postinc2,i2strncmp@_l
 15960  001824  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 15961  001828  0ED6               	movlw	low (STR_13+1)
 15962  00182A  6E03               	movwf	i2strncmp@_r^0,c
 15963  00182C  0EFF               	movlw	high (STR_13+1)
 15964  00182E  6E04               	movwf	(i2strncmp@_r+1)^0,c
 15965  001830  0E00               	movlw	0
 15966  001832  6E06               	movwf	(i2strncmp@n+1)^0,c
 15967  001834  0E02               	movlw	2
 15968  001836  6E05               	movwf	i2strncmp@n^0,c
 15969  001838  EC69  F02A         	call	i2_strncmp	;wreg free
 15970  00183C  5001               	movf	?i2_strncmp^0,w,c
 15971  00183E  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 15972  001840  A4D8               	btfss	status,2,c
 15973  001842  EF25  F00C         	goto	i2u1005_41
 15974  001846  EF27  F00C         	goto	i2u1005_40
 15975  00184A                     i2u1005_41:
 15976  00184A  EF4F  F00C         	goto	i2l8047
 15977  00184E                     i2u1005_40:
 15978  00184E                     i2l8041:
 15979                           
 15980                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
 15981  00184E  0E02               	movlw	2
 15982  001850  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15983  001854  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15984  001858  26DE               	addwf	postinc2,f,c
 15985  00185A  0E00               	movlw	0
 15986  00185C  22DD               	addwfc	postdec2,f,c
 15987                           
 15988                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
 15989  00185E  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 15990  001862  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 15991  001866  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 15992  00186A  0E02               	movlw	2
 15993  00186C  26DE               	addwf	postinc2,f,c
 15994  00186E  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 15995  001872  0E00               	movlw	0
 15996  001874  22DD               	addwfc	postdec2,f,c
 15997  001876  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 15998  00187A  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 15999  00187E  CFDE F068          	movff	postinc2,i2vfpfcnvrt@ll
 16000  001882  CFDD F069          	movff	postdec2,i2vfpfcnvrt@ll+1
 16001  001886  0100               	movlb	0	; () banked
 16002  001888  0E00               	movlw	0
 16003  00188A  BF69               	btfsc	(i2vfpfcnvrt@ll+1)& (0+255),7,b
 16004  00188C  0EFF               	movlw	-1
 16005  00188E  6F6A               	movwf	(i2vfpfcnvrt@ll+2)& (0+255),b
 16006  001890  6F6B               	movwf	(i2vfpfcnvrt@ll+3)& (0+255),b
 16007  001892  6F6C               	movwf	(i2vfpfcnvrt@ll+4)& (0+255),b
 16008  001894  6F6D               	movwf	(i2vfpfcnvrt@ll+5)& (0+255),b
 16009  001896  6F6E               	movwf	(i2vfpfcnvrt@ll+6)& (0+255),b
 16010  001898  6F6F               	movwf	(i2vfpfcnvrt@ll+7)& (0+255),b
 16011  00189A  EFD5  F00B         	goto	i2l8033
 16012  00189E                     i2l8047:
 16013                           
 16014                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 16015  00189E  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16016  0018A2  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16017  0018A6  CFDE FFF6          	movff	postinc2,tblptrl
 16018  0018AA  CFDD FFF7          	movff	postdec2,tblptrh
 16019  0018AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16020  0018AE  6AF8               	clrf	tblptru,c
 16021  0018B0                     	endif
 16022  0018B0                     	if	0	;tblptru may be non-zero
 16023  0018B0                     	endif
 16024  0018B0  0008               	tblrd		*
 16025  0018B2  50F5               	movf	tablat,w,c
 16026  0018B4  0A64               	xorlw	100
 16027  0018B6  B4D8               	btfsc	status,2,c
 16028  0018B8  EF60  F00C         	goto	i2u1006_41
 16029  0018BC  EF62  F00C         	goto	i2u1006_40
 16030  0018C0                     i2u1006_41:
 16031  0018C0  EF75  F00C         	goto	i2l8051
 16032  0018C4                     i2u1006_40:
 16033  0018C4  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16034  0018C8  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16035  0018CC  CFDE FFF6          	movff	postinc2,tblptrl
 16036  0018D0  CFDD FFF7          	movff	postdec2,tblptrh
 16037  0018D4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16038  0018D4  6AF8               	clrf	tblptru,c
 16039  0018D6                     	endif
 16040  0018D6                     	if	0	;tblptru may be non-zero
 16041  0018D6                     	endif
 16042  0018D6  0008               	tblrd		*
 16043  0018D8  50F5               	movf	tablat,w,c
 16044  0018DA  0A69               	xorlw	105
 16045  0018DC  A4D8               	btfss	status,2,c
 16046  0018DE  EF73  F00C         	goto	i2u1007_41
 16047  0018E2  EF75  F00C         	goto	i2u1007_40
 16048  0018E6                     i2u1007_41:
 16049  0018E6  EF9C  F00C         	goto	i2l8057
 16050  0018EA                     i2u1007_40:
 16051  0018EA                     i2l8051:
 16052                           
 16053                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 16054  0018EA  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16055  0018EE  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16056  0018F2  2ADE               	incf	postinc2,f,c
 16057  0018F4  0E00               	movlw	0
 16058  0018F6  22DD               	addwfc	postdec2,f,c
 16059                           
 16060                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 16061  0018F8  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16062  0018FC  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16063  001900  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16064  001904  0E02               	movlw	2
 16065  001906  26DE               	addwf	postinc2,f,c
 16066  001908  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16067  00190C  0E00               	movlw	0
 16068  00190E  22DD               	addwfc	postdec2,f,c
 16069  001910  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16070  001914  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16071  001918  CFDE F068          	movff	postinc2,i2vfpfcnvrt@ll
 16072  00191C  CFDD F069          	movff	postdec2,i2vfpfcnvrt@ll+1
 16073  001920  0100               	movlb	0	; () banked
 16074  001922  0E00               	movlw	0
 16075  001924  BF69               	btfsc	(i2vfpfcnvrt@ll+1)& (0+255),7,b
 16076  001926  0EFF               	movlw	-1
 16077  001928  6F6A               	movwf	(i2vfpfcnvrt@ll+2)& (0+255),b
 16078  00192A  6F6B               	movwf	(i2vfpfcnvrt@ll+3)& (0+255),b
 16079  00192C  6F6C               	movwf	(i2vfpfcnvrt@ll+4)& (0+255),b
 16080  00192E  6F6D               	movwf	(i2vfpfcnvrt@ll+5)& (0+255),b
 16081  001930  6F6E               	movwf	(i2vfpfcnvrt@ll+6)& (0+255),b
 16082  001932  6F6F               	movwf	(i2vfpfcnvrt@ll+7)& (0+255),b
 16083  001934  EFD5  F00B         	goto	i2l8033
 16084  001938                     i2l8057:
 16085                           
 16086                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
 16087  001938  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16088  00193C  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16089  001940  CFDE F001          	movff	postinc2,i2strncmp@_l
 16090  001944  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16091  001948  0EEC               	movlw	low STR_27
 16092  00194A  6E03               	movwf	i2strncmp@_r^0,c
 16093  00194C  0EFF               	movlw	high STR_27
 16094  00194E  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16095  001950  0E00               	movlw	0
 16096  001952  6E06               	movwf	(i2strncmp@n+1)^0,c
 16097  001954  0E02               	movlw	2
 16098  001956  6E05               	movwf	i2strncmp@n^0,c
 16099  001958  EC69  F02A         	call	i2_strncmp	;wreg free
 16100  00195C  5001               	movf	?i2_strncmp^0,w,c
 16101  00195E  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16102  001960  B4D8               	btfsc	status,2,c
 16103  001962  EFB5  F00C         	goto	i2u1008_41
 16104  001966  EFB7  F00C         	goto	i2u1008_40
 16105  00196A                     i2u1008_41:
 16106  00196A  EFD2  F00C         	goto	i2l8061
 16107  00196E                     i2u1008_40:
 16108  00196E  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16109  001972  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16110  001976  CFDE F001          	movff	postinc2,i2strncmp@_l
 16111  00197A  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16112  00197E  0EEF               	movlw	low STR_31
 16113  001980  6E03               	movwf	i2strncmp@_r^0,c
 16114  001982  0EFF               	movlw	high STR_31
 16115  001984  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16116  001986  0E00               	movlw	0
 16117  001988  6E06               	movwf	(i2strncmp@n+1)^0,c
 16118  00198A  0E02               	movlw	2
 16119  00198C  6E05               	movwf	i2strncmp@n^0,c
 16120  00198E  EC69  F02A         	call	i2_strncmp	;wreg free
 16121  001992  5001               	movf	?i2_strncmp^0,w,c
 16122  001994  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16123  001996  A4D8               	btfss	status,2,c
 16124  001998  EFD0  F00C         	goto	i2u1009_41
 16125  00199C  EFD2  F00C         	goto	i2u1009_40
 16126  0019A0                     i2u1009_41:
 16127  0019A0  EFFB  F00C         	goto	i2l8067
 16128  0019A4                     i2u1009_40:
 16129  0019A4                     i2l8061:
 16130                           
 16131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
 16132  0019A4  0E02               	movlw	2
 16133  0019A6  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16134  0019AA  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16135  0019AE  26DE               	addwf	postinc2,f,c
 16136  0019B0  0E00               	movlw	0
 16137  0019B2  22DD               	addwfc	postdec2,f,c
 16138                           
 16139                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 16140  0019B4  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16141  0019B8  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16142  0019BC  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16143  0019C0  0E02               	movlw	2
 16144  0019C2  26DE               	addwf	postinc2,f,c
 16145  0019C4  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16146  0019C8  0E00               	movlw	0
 16147  0019CA  22DD               	addwfc	postdec2,f,c
 16148  0019CC  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16149  0019D0  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16150  0019D4  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 16151  0019D8  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 16152  0019DC  C04D  F068         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@ll
 16153  0019E0  C04E  F069         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@ll+1
 16154  0019E4  0100               	movlb	0	; () banked
 16155  0019E6  6B6A               	clrf	(i2vfpfcnvrt@ll+2)& (0+255),b
 16156  0019E8  6B6B               	clrf	(i2vfpfcnvrt@ll+3)& (0+255),b
 16157  0019EA  6B6C               	clrf	(i2vfpfcnvrt@ll+4)& (0+255),b
 16158  0019EC  6B6D               	clrf	(i2vfpfcnvrt@ll+5)& (0+255),b
 16159  0019EE  6B6E               	clrf	(i2vfpfcnvrt@ll+6)& (0+255),b
 16160  0019F0  6B6F               	clrf	(i2vfpfcnvrt@ll+7)& (0+255),b
 16161  0019F2  EFD5  F00B         	goto	i2l8033
 16162  0019F6                     i2l8067:
 16163                           
 16164                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
 16165  0019F6  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16166  0019FA  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16167  0019FE  CFDE F001          	movff	postinc2,i2strncmp@_l
 16168  001A02  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16169  001A06  0EDD               	movlw	low STR_36
 16170  001A08  6E03               	movwf	i2strncmp@_r^0,c
 16171  001A0A  0EFF               	movlw	high STR_36
 16172  001A0C  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16173  001A0E  0E00               	movlw	0
 16174  001A10  6E06               	movwf	(i2strncmp@n+1)^0,c
 16175  001A12  0E03               	movlw	3
 16176  001A14  6E05               	movwf	i2strncmp@n^0,c
 16177  001A16  EC69  F02A         	call	i2_strncmp	;wreg free
 16178  001A1A  5001               	movf	?i2_strncmp^0,w,c
 16179  001A1C  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16180  001A1E  A4D8               	btfss	status,2,c
 16181  001A20  EF14  F00D         	goto	i2u1010_41
 16182  001A24  EF16  F00D         	goto	i2u1010_40
 16183  001A28                     i2u1010_41:
 16184  001A28  EF56  F00D         	goto	i2l8075
 16185  001A2C                     i2u1010_40:
 16186  001A2C                     
 16187                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
 16188  001A2C  0E03               	movlw	3
 16189  001A2E  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16190  001A32  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16191  001A36  26DE               	addwf	postinc2,f,c
 16192  001A38  0E00               	movlw	0
 16193  001A3A  22DD               	addwfc	postdec2,f,c
 16194                           
 16195                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 16196  001A3C  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16197  001A40  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16198  001A44  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16199  001A48  0E02               	movlw	2
 16200  001A4A  26DE               	addwf	postinc2,f,c
 16201  001A4C  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16202  001A50  0E00               	movlw	0
 16203  001A52  22DD               	addwfc	postdec2,f,c
 16204  001A54  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16205  001A58  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16206  001A5C  50DF               	movf	indf2,w,c
 16207  001A5E  6E4D               	movwf	(??i2_vfpfcnvrt+2)^0,c
 16208  001A60  504D               	movf	(??i2_vfpfcnvrt+2)^0,w,c
 16209  001A62  0100               	movlb	0	; () banked
 16210  001A64  6F73               	movwf	i2vfpfcnvrt@llu& (0+255),b
 16211  001A66  6B74               	clrf	(i2vfpfcnvrt@llu+1)& (0+255),b
 16212  001A68  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 16213  001A6A  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 16214  001A6C  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 16215  001A6E  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 16216  001A70  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 16217  001A72  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 16218  001A74                     i2l8071:
 16219                           
 16220                           ; BSR set to: 0
 16221                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
 16222  001A74  C045  F01E         	movff	i2vfpfcnvrt@fp,i2otoa@fp
 16223  001A78  C046  F01F         	movff	i2vfpfcnvrt@fp+1,i2otoa@fp+1
 16224  001A7C  C073  F020         	movff	i2vfpfcnvrt@llu,i2otoa@d
 16225  001A80  C074  F021         	movff	i2vfpfcnvrt@llu+1,i2otoa@d+1
 16226  001A84  C075  F022         	movff	i2vfpfcnvrt@llu+2,i2otoa@d+2
 16227  001A88  C076  F023         	movff	i2vfpfcnvrt@llu+3,i2otoa@d+3
 16228  001A8C  C077  F024         	movff	i2vfpfcnvrt@llu+4,i2otoa@d+4
 16229  001A90  C078  F025         	movff	i2vfpfcnvrt@llu+5,i2otoa@d+5
 16230  001A94  C079  F026         	movff	i2vfpfcnvrt@llu+6,i2otoa@d+6
 16231  001A98  C07A  F027         	movff	i2vfpfcnvrt@llu+7,i2otoa@d+7
 16232  001A9C  EC24  F021         	call	i2_otoa	;wreg free
 16233  001AA0  C01E  F045         	movff	?i2_otoa,?i2_vfpfcnvrt
 16234  001AA4  C01F  F046         	movff	?i2_otoa+1,?i2_vfpfcnvrt+1
 16235  001AA8  EFE4  F012         	goto	i2l797
 16236  001AAC                     i2l8075:
 16237                           
 16238                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
 16239  001AAC  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16240  001AB0  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16241  001AB4  CFDE F001          	movff	postinc2,i2strncmp@_l
 16242  001AB8  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16243  001ABC  0EDE               	movlw	low (STR_36+1)
 16244  001ABE  6E03               	movwf	i2strncmp@_r^0,c
 16245  001AC0  0EFF               	movlw	high (STR_36+1)
 16246  001AC2  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16247  001AC4  0E00               	movlw	0
 16248  001AC6  6E06               	movwf	(i2strncmp@n+1)^0,c
 16249  001AC8  0E02               	movlw	2
 16250  001ACA  6E05               	movwf	i2strncmp@n^0,c
 16251  001ACC  EC69  F02A         	call	i2_strncmp	;wreg free
 16252  001AD0  5001               	movf	?i2_strncmp^0,w,c
 16253  001AD2  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16254  001AD4  A4D8               	btfss	status,2,c
 16255  001AD6  EF6F  F00D         	goto	i2u1011_41
 16256  001ADA  EF71  F00D         	goto	i2u1011_40
 16257  001ADE                     i2u1011_41:
 16258  001ADE  EF9A  F00D         	goto	i2l8083
 16259  001AE2                     i2u1011_40:
 16260  001AE2                     
 16261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
 16262  001AE2  0E02               	movlw	2
 16263  001AE4  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16264  001AE8  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16265  001AEC  26DE               	addwf	postinc2,f,c
 16266  001AEE  0E00               	movlw	0
 16267  001AF0  22DD               	addwfc	postdec2,f,c
 16268                           
 16269                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 16270  001AF2  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16271  001AF6  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16272  001AFA  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16273  001AFE  0E02               	movlw	2
 16274  001B00  26DE               	addwf	postinc2,f,c
 16275  001B02  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16276  001B06  0E00               	movlw	0
 16277  001B08  22DD               	addwfc	postdec2,f,c
 16278  001B0A  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16279  001B0E  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16280  001B12  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 16281  001B16  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 16282  001B1A  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 16283  001B1E  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 16284  001B22  0100               	movlb	0	; () banked
 16285  001B24  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 16286  001B26  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 16287  001B28  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 16288  001B2A  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 16289  001B2C  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 16290  001B2E  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 16291  001B30  EF3A  F00D         	goto	i2l8071
 16292  001B34                     i2l8083:
 16293                           
 16294                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
 16295  001B34  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16296  001B38  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16297  001B3C  CFDE FFF6          	movff	postinc2,tblptrl
 16298  001B40  CFDD FFF7          	movff	postdec2,tblptrh
 16299  001B44                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16300  001B44  6AF8               	clrf	tblptru,c
 16301  001B46                     	endif
 16302  001B46                     	if	0	;tblptru may be non-zero
 16303  001B46                     	endif
 16304  001B46  0008               	tblrd		*
 16305  001B48  50F5               	movf	tablat,w,c
 16306  001B4A  0A6F               	xorlw	111
 16307  001B4C  A4D8               	btfss	status,2,c
 16308  001B4E  EFAB  F00D         	goto	i2u1012_41
 16309  001B52  EFAD  F00D         	goto	i2u1012_40
 16310  001B56                     i2u1012_41:
 16311  001B56  EFD5  F00D         	goto	i2l8091
 16312  001B5A                     i2u1012_40:
 16313  001B5A                     
 16314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
 16315  001B5A  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16316  001B5E  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16317  001B62  2ADE               	incf	postinc2,f,c
 16318  001B64  0E00               	movlw	0
 16319  001B66  22DD               	addwfc	postdec2,f,c
 16320                           
 16321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
 16322  001B68  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16323  001B6C  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16324  001B70  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16325  001B74  0E02               	movlw	2
 16326  001B76  26DE               	addwf	postinc2,f,c
 16327  001B78  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16328  001B7C  0E00               	movlw	0
 16329  001B7E  22DD               	addwfc	postdec2,f,c
 16330  001B80  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16331  001B84  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16332  001B88  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 16333  001B8C  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 16334  001B90  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 16335  001B94  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 16336  001B98  0100               	movlb	0	; () banked
 16337  001B9A  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 16338  001B9C  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 16339  001B9E  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 16340  001BA0  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 16341  001BA2  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 16342  001BA4  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 16343  001BA6  EF3A  F00D         	goto	i2l8071
 16344  001BAA                     i2l8091:
 16345                           
 16346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
 16347  001BAA  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16348  001BAE  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16349  001BB2  CFDE F001          	movff	postinc2,i2strncmp@_l
 16350  001BB6  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16351  001BBA  0EF5               	movlw	low STR_46
 16352  001BBC  6E03               	movwf	i2strncmp@_r^0,c
 16353  001BBE  0EFF               	movlw	high STR_46
 16354  001BC0  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16355  001BC2  0E00               	movlw	0
 16356  001BC4  6E06               	movwf	(i2strncmp@n+1)^0,c
 16357  001BC6  0E02               	movlw	2
 16358  001BC8  6E05               	movwf	i2strncmp@n^0,c
 16359  001BCA  EC69  F02A         	call	i2_strncmp	;wreg free
 16360  001BCE  5001               	movf	?i2_strncmp^0,w,c
 16361  001BD0  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16362  001BD2  A4D8               	btfss	status,2,c
 16363  001BD4  EFEE  F00D         	goto	i2u1013_41
 16364  001BD8  EFF0  F00D         	goto	i2u1013_40
 16365  001BDC                     i2u1013_41:
 16366  001BDC  EF19  F00E         	goto	i2l8099
 16367  001BE0                     i2u1013_40:
 16368  001BE0                     
 16369                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
 16370  001BE0  0E02               	movlw	2
 16371  001BE2  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16372  001BE6  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16373  001BEA  26DE               	addwf	postinc2,f,c
 16374  001BEC  0E00               	movlw	0
 16375  001BEE  22DD               	addwfc	postdec2,f,c
 16376                           
 16377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 16378  001BF0  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16379  001BF4  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16380  001BF8  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16381  001BFC  0E02               	movlw	2
 16382  001BFE  26DE               	addwf	postinc2,f,c
 16383  001C00  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16384  001C04  0E00               	movlw	0
 16385  001C06  22DD               	addwfc	postdec2,f,c
 16386  001C08  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16387  001C0C  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16388  001C10  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 16389  001C14  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 16390  001C18  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 16391  001C1C  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 16392  001C20  0100               	movlb	0	; () banked
 16393  001C22  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 16394  001C24  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 16395  001C26  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 16396  001C28  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 16397  001C2A  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 16398  001C2C  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 16399  001C2E  EF3A  F00D         	goto	i2l8071
 16400  001C32                     i2l8099:
 16401                           
 16402                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
 16403  001C32  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16404  001C36  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16405  001C3A  CFDE F001          	movff	postinc2,i2strncmp@_l
 16406  001C3E  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16407  001C42  0ED9               	movlw	low STR_51
 16408  001C44  6E03               	movwf	i2strncmp@_r^0,c
 16409  001C46  0EFF               	movlw	high STR_51
 16410  001C48  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16411  001C4A  0E00               	movlw	0
 16412  001C4C  6E06               	movwf	(i2strncmp@n+1)^0,c
 16413  001C4E  0E03               	movlw	3
 16414  001C50  6E05               	movwf	i2strncmp@n^0,c
 16415  001C52  EC69  F02A         	call	i2_strncmp	;wreg free
 16416  001C56  5001               	movf	?i2_strncmp^0,w,c
 16417  001C58  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16418  001C5A  A4D8               	btfss	status,2,c
 16419  001C5C  EF32  F00E         	goto	i2u1014_41
 16420  001C60  EF34  F00E         	goto	i2u1014_40
 16421  001C64                     i2u1014_41:
 16422  001C64  EF5C  F00E         	goto	i2l8109
 16423  001C68                     i2u1014_40:
 16424  001C68                     
 16425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
 16426  001C68  0E03               	movlw	3
 16427  001C6A  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16428  001C6E  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16429  001C72  26DE               	addwf	postinc2,f,c
 16430  001C74  0E00               	movlw	0
 16431  001C76  22DD               	addwfc	postdec2,f,c
 16432                           
 16433                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
 16434  001C78  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16435  001C7C  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16436  001C80  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16437  001C84  0E02               	movlw	2
 16438  001C86  26DE               	addwf	postinc2,f,c
 16439  001C88  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16440  001C8C  0E00               	movlw	0
 16441  001C8E  22DD               	addwfc	postdec2,f,c
 16442  001C90  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16443  001C94  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16444  001C98  CFDE F070          	movff	postinc2,i2vfpfcnvrt@vp
 16445  001C9C  CFDD F071          	movff	postdec2,i2vfpfcnvrt@vp+1
 16446  001CA0                     
 16447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
 16448  001CA0  C070  FFD9         	movff	i2vfpfcnvrt@vp,fsr2l
 16449  001CA4  C071  FFDA         	movff	i2vfpfcnvrt@vp+1,fsr2h
 16450  001CA8  C174  FFDF         	movff	_nout,indf2
 16451  001CAC                     i2l8105:
 16452                           
 16453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
 16454  001CAC  0E00               	movlw	0
 16455  001CAE  6E46               	movwf	(?i2_vfpfcnvrt+1)^0,c
 16456  001CB0  0E00               	movlw	0
 16457  001CB2  6E45               	movwf	?i2_vfpfcnvrt^0,c
 16458  001CB4  EFE4  F012         	goto	i2l797
 16459  001CB8                     i2l8109:
 16460                           
 16461                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
 16462  001CB8  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16463  001CBC  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16464  001CC0  CFDE F001          	movff	postinc2,i2strncmp@_l
 16465  001CC4  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16466  001CC8  0EDA               	movlw	low (STR_51+1)
 16467  001CCA  6E03               	movwf	i2strncmp@_r^0,c
 16468  001CCC  0EFF               	movlw	high (STR_51+1)
 16469  001CCE  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16470  001CD0  0E00               	movlw	0
 16471  001CD2  6E06               	movwf	(i2strncmp@n+1)^0,c
 16472  001CD4  0E02               	movlw	2
 16473  001CD6  6E05               	movwf	i2strncmp@n^0,c
 16474  001CD8  EC69  F02A         	call	i2_strncmp	;wreg free
 16475  001CDC  5001               	movf	?i2_strncmp^0,w,c
 16476  001CDE  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16477  001CE0  A4D8               	btfss	status,2,c
 16478  001CE2  EF75  F00E         	goto	i2u1015_41
 16479  001CE6  EF77  F00E         	goto	i2u1015_40
 16480  001CEA                     i2u1015_41:
 16481  001CEA  EF9D  F00E         	goto	i2l8119
 16482  001CEE                     i2u1015_40:
 16483  001CEE                     
 16484                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
 16485  001CEE  0E02               	movlw	2
 16486  001CF0  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16487  001CF4  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16488  001CF8  26DE               	addwf	postinc2,f,c
 16489  001CFA  0E00               	movlw	0
 16490  001CFC  22DD               	addwfc	postdec2,f,c
 16491                           
 16492                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
 16493  001CFE  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16494  001D02  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16495  001D06  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16496  001D0A  0E02               	movlw	2
 16497  001D0C  26DE               	addwf	postinc2,f,c
 16498  001D0E  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16499  001D12  0E00               	movlw	0
 16500  001D14  22DD               	addwfc	postdec2,f,c
 16501  001D16  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16502  001D1A  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16503  001D1E  CFDE F070          	movff	postinc2,i2vfpfcnvrt@vp
 16504  001D22  CFDD F071          	movff	postdec2,i2vfpfcnvrt@vp+1
 16505  001D26                     
 16506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
 16507  001D26  C070  FFD9         	movff	i2vfpfcnvrt@vp,fsr2l
 16508  001D2A  C071  FFDA         	movff	i2vfpfcnvrt@vp+1,fsr2h
 16509  001D2E  C174  FFDE         	movff	_nout,postinc2
 16510  001D32  C175  FFDD         	movff	_nout+1,postdec2
 16511  001D36  EF56  F00E         	goto	i2l8105
 16512  001D3A                     i2l8119:
 16513                           
 16514                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
 16515  001D3A  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16516  001D3E  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16517  001D42  CFDE FFF6          	movff	postinc2,tblptrl
 16518  001D46  CFDD FFF7          	movff	postdec2,tblptrh
 16519  001D4A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16520  001D4A  6AF8               	clrf	tblptru,c
 16521  001D4C                     	endif
 16522  001D4C                     	if	0	;tblptru may be non-zero
 16523  001D4C                     	endif
 16524  001D4C  0008               	tblrd		*
 16525  001D4E  50F5               	movf	tablat,w,c
 16526  001D50  0A6E               	xorlw	110
 16527  001D52  A4D8               	btfss	status,2,c
 16528  001D54  EFAE  F00E         	goto	i2u1016_41
 16529  001D58  EFB0  F00E         	goto	i2u1016_40
 16530  001D5C                     i2u1016_41:
 16531  001D5C  EFD5  F00E         	goto	i2l8129
 16532  001D60                     i2u1016_40:
 16533  001D60                     
 16534                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
 16535  001D60  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16536  001D64  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16537  001D68  2ADE               	incf	postinc2,f,c
 16538  001D6A  0E00               	movlw	0
 16539  001D6C  22DD               	addwfc	postdec2,f,c
 16540                           
 16541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 16542  001D6E  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16543  001D72  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16544  001D76  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16545  001D7A  0E02               	movlw	2
 16546  001D7C  26DE               	addwf	postinc2,f,c
 16547  001D7E  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16548  001D82  0E00               	movlw	0
 16549  001D84  22DD               	addwfc	postdec2,f,c
 16550  001D86  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16551  001D8A  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16552  001D8E  CFDE F070          	movff	postinc2,i2vfpfcnvrt@vp
 16553  001D92  CFDD F071          	movff	postdec2,i2vfpfcnvrt@vp+1
 16554  001D96                     
 16555                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
 16556  001D96  C070  FFD9         	movff	i2vfpfcnvrt@vp,fsr2l
 16557  001D9A  C071  FFDA         	movff	i2vfpfcnvrt@vp+1,fsr2h
 16558  001D9E  C174  FFDE         	movff	_nout,postinc2
 16559  001DA2  C175  FFDD         	movff	_nout+1,postdec2
 16560  001DA6  EF56  F00E         	goto	i2l8105
 16561  001DAA                     i2l8129:
 16562                           
 16563                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
 16564  001DAA  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16565  001DAE  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16566  001DB2  CFDE F001          	movff	postinc2,i2strncmp@_l
 16567  001DB6  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16568  001DBA  0EF2               	movlw	low STR_61
 16569  001DBC  6E03               	movwf	i2strncmp@_r^0,c
 16570  001DBE  0EFF               	movlw	high STR_61
 16571  001DC0  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16572  001DC2  0E00               	movlw	0
 16573  001DC4  6E06               	movwf	(i2strncmp@n+1)^0,c
 16574  001DC6  0E02               	movlw	2
 16575  001DC8  6E05               	movwf	i2strncmp@n^0,c
 16576  001DCA  EC69  F02A         	call	i2_strncmp	;wreg free
 16577  001DCE  5001               	movf	?i2_strncmp^0,w,c
 16578  001DD0  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16579  001DD2  A4D8               	btfss	status,2,c
 16580  001DD4  EFEE  F00E         	goto	i2u1017_41
 16581  001DD8  EFF0  F00E         	goto	i2u1017_40
 16582  001DDC                     i2u1017_41:
 16583  001DDC  EF16  F00F         	goto	i2l8139
 16584  001DE0                     i2u1017_40:
 16585  001DE0                     
 16586                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
 16587  001DE0  0E02               	movlw	2
 16588  001DE2  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16589  001DE6  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16590  001DEA  26DE               	addwf	postinc2,f,c
 16591  001DEC  0E00               	movlw	0
 16592  001DEE  22DD               	addwfc	postdec2,f,c
 16593                           
 16594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
 16595  001DF0  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16596  001DF4  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16597  001DF8  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16598  001DFC  0E02               	movlw	2
 16599  001DFE  26DE               	addwf	postinc2,f,c
 16600  001E00  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16601  001E04  0E00               	movlw	0
 16602  001E06  22DD               	addwfc	postdec2,f,c
 16603  001E08  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16604  001E0C  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16605  001E10  CFDE F070          	movff	postinc2,i2vfpfcnvrt@vp
 16606  001E14  CFDD F071          	movff	postdec2,i2vfpfcnvrt@vp+1
 16607  001E18                     
 16608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
 16609  001E18  C070  FFD9         	movff	i2vfpfcnvrt@vp,fsr2l
 16610  001E1C  C071  FFDA         	movff	i2vfpfcnvrt@vp+1,fsr2h
 16611  001E20  C174  FFDE         	movff	_nout,postinc2
 16612  001E24  C175  FFDD         	movff	_nout+1,postdec2
 16613  001E28  EF56  F00E         	goto	i2l8105
 16614  001E2C                     i2l8139:
 16615                           
 16616                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
 16617  001E2C  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16618  001E30  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16619  001E34  CFDE FFF6          	movff	postinc2,tblptrl
 16620  001E38  CFDD FFF7          	movff	postdec2,tblptrh
 16621  001E3C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16622  001E3C  6AF8               	clrf	tblptru,c
 16623  001E3E                     	endif
 16624  001E3E                     	if	0	;tblptru may be non-zero
 16625  001E3E                     	endif
 16626  001E3E  0008               	tblrd		*
 16627  001E40  50F5               	movf	tablat,w,c
 16628  001E42  0A70               	xorlw	112
 16629  001E44  A4D8               	btfss	status,2,c
 16630  001E46  EF27  F00F         	goto	i2u1018_41
 16631  001E4A  EF29  F00F         	goto	i2u1018_40
 16632  001E4E                     i2u1018_41:
 16633  001E4E  EF6D  F00F         	goto	i2l8147
 16634  001E52                     i2u1018_40:
 16635  001E52                     
 16636                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
 16637  001E52  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16638  001E56  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16639  001E5A  2ADE               	incf	postinc2,f,c
 16640  001E5C  0E00               	movlw	0
 16641  001E5E  22DD               	addwfc	postdec2,f,c
 16642                           
 16643                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
 16644  001E60  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16645  001E64  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16646  001E68  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16647  001E6C  0E02               	movlw	2
 16648  001E6E  26DE               	addwf	postinc2,f,c
 16649  001E70  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16650  001E74  0E00               	movlw	0
 16651  001E76  22DD               	addwfc	postdec2,f,c
 16652  001E78  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16653  001E7C  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16654  001E80  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 16655  001E84  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 16656  001E88  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 16657  001E8C  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 16658  001E90  0100               	movlb	0	; () banked
 16659  001E92  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 16660  001E94  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 16661  001E96  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 16662  001E98  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 16663  001E9A  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 16664  001E9C  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 16665  001E9E                     
 16666                           ; BSR set to: 0
 16667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
 16668  001E9E  C045  F01E         	movff	i2vfpfcnvrt@fp,i2xtoa@fp
 16669  001EA2  C046  F01F         	movff	i2vfpfcnvrt@fp+1,i2xtoa@fp+1
 16670  001EA6  C073  F020         	movff	i2vfpfcnvrt@llu,i2xtoa@d
 16671  001EAA  C074  F021         	movff	i2vfpfcnvrt@llu+1,i2xtoa@d+1
 16672  001EAE  C075  F022         	movff	i2vfpfcnvrt@llu+2,i2xtoa@d+2
 16673  001EB2  C076  F023         	movff	i2vfpfcnvrt@llu+3,i2xtoa@d+3
 16674  001EB6  C077  F024         	movff	i2vfpfcnvrt@llu+4,i2xtoa@d+4
 16675  001EBA  C078  F025         	movff	i2vfpfcnvrt@llu+5,i2xtoa@d+5
 16676  001EBE  C079  F026         	movff	i2vfpfcnvrt@llu+6,i2xtoa@d+6
 16677  001EC2  C07A  F027         	movff	i2vfpfcnvrt@llu+7,i2xtoa@d+7
 16678  001EC6  0E78               	movlw	120
 16679  001EC8  6E28               	movwf	i2xtoa@x^0,c
 16680  001ECA  EC6E  F019         	call	i2_xtoa	;wreg free
 16681  001ECE  C01E  F045         	movff	?i2_xtoa,?i2_vfpfcnvrt
 16682  001ED2  C01F  F046         	movff	?i2_xtoa+1,?i2_vfpfcnvrt+1
 16683  001ED6  EFE4  F012         	goto	i2l797
 16684  001EDA                     i2l8147:
 16685                           
 16686                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 16687  001EDA  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16688  001EDE  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16689  001EE2  CFDE FFF6          	movff	postinc2,tblptrl
 16690  001EE6  CFDD FFF7          	movff	postdec2,tblptrh
 16691  001EEA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16692  001EEA  6AF8               	clrf	tblptru,c
 16693  001EEC                     	endif
 16694  001EEC                     	if	0	;tblptru may be non-zero
 16695  001EEC                     	endif
 16696  001EEC  0008               	tblrd		*
 16697  001EEE  50F5               	movf	tablat,w,c
 16698  001EF0  0A73               	xorlw	115
 16699  001EF2  A4D8               	btfss	status,2,c
 16700  001EF4  EF7E  F00F         	goto	i2u1019_41
 16701  001EF8  EF80  F00F         	goto	i2u1019_40
 16702  001EFC                     i2u1019_41:
 16703  001EFC  EFAB  F00F         	goto	i2l8155
 16704  001F00                     i2u1019_40:
 16705  001F00                     
 16706                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 16707  001F00  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16708  001F04  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16709  001F08  2ADE               	incf	postinc2,f,c
 16710  001F0A  0E00               	movlw	0
 16711  001F0C  22DD               	addwfc	postdec2,f,c
 16712                           
 16713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 16714  001F0E  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16715  001F12  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16716  001F16  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16717  001F1A  0E02               	movlw	2
 16718  001F1C  26DE               	addwf	postinc2,f,c
 16719  001F1E  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16720  001F22  0E00               	movlw	0
 16721  001F24  22DD               	addwfc	postdec2,f,c
 16722  001F26  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16723  001F2A  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16724  001F2E  CFDE F060          	movff	postinc2,i2vfpfcnvrt@cp
 16725  001F32  CFDD F061          	movff	postdec2,i2vfpfcnvrt@cp+1
 16726  001F36                     
 16727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 16728  001F36  C045  F00C         	movff	i2vfpfcnvrt@fp,i2stoa@fp
 16729  001F3A  C046  F00D         	movff	i2vfpfcnvrt@fp+1,i2stoa@fp+1
 16730  001F3E  C060  F00E         	movff	i2vfpfcnvrt@cp,i2stoa@s
 16731  001F42  C061  F00F         	movff	i2vfpfcnvrt@cp+1,i2stoa@s+1
 16732  001F46  EC6B  F024         	call	i2_stoa	;wreg free
 16733  001F4A  C00C  F045         	movff	?i2_stoa,?i2_vfpfcnvrt
 16734  001F4E  C00D  F046         	movff	?i2_stoa+1,?i2_vfpfcnvrt+1
 16735  001F52  EFE4  F012         	goto	i2l797
 16736  001F56                     i2l8155:
 16737                           
 16738                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
 16739  001F56  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16740  001F5A  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16741  001F5E  CFDE F001          	movff	postinc2,i2strncmp@_l
 16742  001F62  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16743  001F66  0EE1               	movlw	low STR_66
 16744  001F68  6E03               	movwf	i2strncmp@_r^0,c
 16745  001F6A  0EFF               	movlw	high STR_66
 16746  001F6C  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16747  001F6E  0E00               	movlw	0
 16748  001F70  6E06               	movwf	(i2strncmp@n+1)^0,c
 16749  001F72  0E03               	movlw	3
 16750  001F74  6E05               	movwf	i2strncmp@n^0,c
 16751  001F76  EC69  F02A         	call	i2_strncmp	;wreg free
 16752  001F7A  5001               	movf	?i2_strncmp^0,w,c
 16753  001F7C  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16754  001F7E  A4D8               	btfss	status,2,c
 16755  001F80  EFC4  F00F         	goto	i2u1020_41
 16756  001F84  EFC6  F00F         	goto	i2u1020_40
 16757  001F88                     i2u1020_41:
 16758  001F88  EF06  F010         	goto	i2l8163
 16759  001F8C                     i2u1020_40:
 16760  001F8C                     
 16761                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
 16762  001F8C  0E03               	movlw	3
 16763  001F8E  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16764  001F92  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16765  001F96  26DE               	addwf	postinc2,f,c
 16766  001F98  0E00               	movlw	0
 16767  001F9A  22DD               	addwfc	postdec2,f,c
 16768                           
 16769                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 16770  001F9C  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16771  001FA0  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16772  001FA4  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16773  001FA8  0E02               	movlw	2
 16774  001FAA  26DE               	addwf	postinc2,f,c
 16775  001FAC  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16776  001FB0  0E00               	movlw	0
 16777  001FB2  22DD               	addwfc	postdec2,f,c
 16778  001FB4  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16779  001FB8  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16780  001FBC  50DF               	movf	indf2,w,c
 16781  001FBE  6E4D               	movwf	(??i2_vfpfcnvrt+2)^0,c
 16782  001FC0  504D               	movf	(??i2_vfpfcnvrt+2)^0,w,c
 16783  001FC2  0100               	movlb	0	; () banked
 16784  001FC4  6F73               	movwf	i2vfpfcnvrt@llu& (0+255),b
 16785  001FC6  6B74               	clrf	(i2vfpfcnvrt@llu+1)& (0+255),b
 16786  001FC8  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 16787  001FCA  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 16788  001FCC  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 16789  001FCE  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 16790  001FD0  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 16791  001FD2  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 16792  001FD4                     i2l8159:
 16793                           
 16794                           ; BSR set to: 0
 16795                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
 16796  001FD4  C045  F01E         	movff	i2vfpfcnvrt@fp,i2utoa@fp
 16797  001FD8  C046  F01F         	movff	i2vfpfcnvrt@fp+1,i2utoa@fp+1
 16798  001FDC  C073  F020         	movff	i2vfpfcnvrt@llu,i2utoa@d
 16799  001FE0  C074  F021         	movff	i2vfpfcnvrt@llu+1,i2utoa@d+1
 16800  001FE4  C075  F022         	movff	i2vfpfcnvrt@llu+2,i2utoa@d+2
 16801  001FE8  C076  F023         	movff	i2vfpfcnvrt@llu+3,i2utoa@d+3
 16802  001FEC  C077  F024         	movff	i2vfpfcnvrt@llu+4,i2utoa@d+4
 16803  001FF0  C078  F025         	movff	i2vfpfcnvrt@llu+5,i2utoa@d+5
 16804  001FF4  C079  F026         	movff	i2vfpfcnvrt@llu+6,i2utoa@d+6
 16805  001FF8  C07A  F027         	movff	i2vfpfcnvrt@llu+7,i2utoa@d+7
 16806  001FFC  EC22  F01E         	call	i2_utoa	;wreg free
 16807  002000  C01E  F045         	movff	?i2_utoa,?i2_vfpfcnvrt
 16808  002004  C01F  F046         	movff	?i2_utoa+1,?i2_vfpfcnvrt+1
 16809  002008  EFE4  F012         	goto	i2l797
 16810  00200C                     i2l8163:
 16811                           
 16812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
 16813  00200C  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16814  002010  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16815  002014  CFDE F001          	movff	postinc2,i2strncmp@_l
 16816  002018  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16817  00201C  0EE2               	movlw	low (STR_66+1)
 16818  00201E  6E03               	movwf	i2strncmp@_r^0,c
 16819  002020  0EFF               	movlw	high (STR_66+1)
 16820  002022  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16821  002024  0E00               	movlw	0
 16822  002026  6E06               	movwf	(i2strncmp@n+1)^0,c
 16823  002028  0E02               	movlw	2
 16824  00202A  6E05               	movwf	i2strncmp@n^0,c
 16825  00202C  EC69  F02A         	call	i2_strncmp	;wreg free
 16826  002030  5001               	movf	?i2_strncmp^0,w,c
 16827  002032  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16828  002034  A4D8               	btfss	status,2,c
 16829  002036  EF1F  F010         	goto	i2u1021_41
 16830  00203A  EF21  F010         	goto	i2u1021_40
 16831  00203E                     i2u1021_41:
 16832  00203E  EF4A  F010         	goto	i2l8171
 16833  002042                     i2u1021_40:
 16834  002042                     
 16835                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
 16836  002042  0E02               	movlw	2
 16837  002044  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16838  002048  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16839  00204C  26DE               	addwf	postinc2,f,c
 16840  00204E  0E00               	movlw	0
 16841  002050  22DD               	addwfc	postdec2,f,c
 16842                           
 16843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 16844  002052  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16845  002056  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16846  00205A  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16847  00205E  0E02               	movlw	2
 16848  002060  26DE               	addwf	postinc2,f,c
 16849  002062  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16850  002066  0E00               	movlw	0
 16851  002068  22DD               	addwfc	postdec2,f,c
 16852  00206A  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16853  00206E  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16854  002072  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 16855  002076  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 16856  00207A  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 16857  00207E  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 16858  002082  0100               	movlb	0	; () banked
 16859  002084  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 16860  002086  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 16861  002088  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 16862  00208A  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 16863  00208C  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 16864  00208E  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 16865  002090  EFEA  F00F         	goto	i2l8159
 16866  002094                     i2l8171:
 16867                           
 16868                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 16869  002094  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16870  002098  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16871  00209C  CFDE FFF6          	movff	postinc2,tblptrl
 16872  0020A0  CFDD FFF7          	movff	postdec2,tblptrh
 16873  0020A4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16874  0020A4  6AF8               	clrf	tblptru,c
 16875  0020A6                     	endif
 16876  0020A6                     	if	0	;tblptru may be non-zero
 16877  0020A6                     	endif
 16878  0020A6  0008               	tblrd		*
 16879  0020A8  50F5               	movf	tablat,w,c
 16880  0020AA  0A75               	xorlw	117
 16881  0020AC  A4D8               	btfss	status,2,c
 16882  0020AE  EF5B  F010         	goto	i2u1022_41
 16883  0020B2  EF5D  F010         	goto	i2u1022_40
 16884  0020B6                     i2u1022_41:
 16885  0020B6  EF85  F010         	goto	i2l8179
 16886  0020BA                     i2u1022_40:
 16887  0020BA                     
 16888                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 16889  0020BA  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16890  0020BE  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16891  0020C2  2ADE               	incf	postinc2,f,c
 16892  0020C4  0E00               	movlw	0
 16893  0020C6  22DD               	addwfc	postdec2,f,c
 16894                           
 16895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 16896  0020C8  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16897  0020CC  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16898  0020D0  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16899  0020D4  0E02               	movlw	2
 16900  0020D6  26DE               	addwf	postinc2,f,c
 16901  0020D8  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16902  0020DC  0E00               	movlw	0
 16903  0020DE  22DD               	addwfc	postdec2,f,c
 16904  0020E0  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16905  0020E4  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16906  0020E8  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 16907  0020EC  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 16908  0020F0  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 16909  0020F4  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 16910  0020F8  0100               	movlb	0	; () banked
 16911  0020FA  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 16912  0020FC  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 16913  0020FE  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 16914  002100  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 16915  002102  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 16916  002104  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 16917  002106  EFEA  F00F         	goto	i2l8159
 16918  00210A                     i2l8179:
 16919                           
 16920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
 16921  00210A  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16922  00210E  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16923  002112  CFDE F001          	movff	postinc2,i2strncmp@_l
 16924  002116  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16925  00211A  0EF8               	movlw	low STR_76
 16926  00211C  6E03               	movwf	i2strncmp@_r^0,c
 16927  00211E  0EFF               	movlw	high STR_76
 16928  002120  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16929  002122  0E00               	movlw	0
 16930  002124  6E06               	movwf	(i2strncmp@n+1)^0,c
 16931  002126  0E02               	movlw	2
 16932  002128  6E05               	movwf	i2strncmp@n^0,c
 16933  00212A  EC69  F02A         	call	i2_strncmp	;wreg free
 16934  00212E  5001               	movf	?i2_strncmp^0,w,c
 16935  002130  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16936  002132  A4D8               	btfss	status,2,c
 16937  002134  EF9E  F010         	goto	i2u1023_41
 16938  002138  EFA0  F010         	goto	i2u1023_40
 16939  00213C                     i2u1023_41:
 16940  00213C  EFC9  F010         	goto	i2l8187
 16941  002140                     i2u1023_40:
 16942  002140                     
 16943                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
 16944  002140  0E02               	movlw	2
 16945  002142  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16946  002146  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16947  00214A  26DE               	addwf	postinc2,f,c
 16948  00214C  0E00               	movlw	0
 16949  00214E  22DD               	addwfc	postdec2,f,c
 16950                           
 16951                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 16952  002150  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16953  002154  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16954  002158  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16955  00215C  0E02               	movlw	2
 16956  00215E  26DE               	addwf	postinc2,f,c
 16957  002160  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16958  002164  0E00               	movlw	0
 16959  002166  22DD               	addwfc	postdec2,f,c
 16960  002168  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16961  00216C  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16962  002170  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 16963  002174  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 16964  002178  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 16965  00217C  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 16966  002180  0100               	movlb	0	; () banked
 16967  002182  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 16968  002184  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 16969  002186  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 16970  002188  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 16971  00218A  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 16972  00218C  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 16973  00218E  EFEA  F00F         	goto	i2l8159
 16974  002192                     i2l8187:
 16975                           
 16976                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
 16977  002192  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16978  002196  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16979  00219A  CFDE F001          	movff	postinc2,i2strncmp@_l
 16980  00219E  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16981  0021A2  0EE5               	movlw	low STR_81
 16982  0021A4  6E03               	movwf	i2strncmp@_r^0,c
 16983  0021A6  0EFF               	movlw	high STR_81
 16984  0021A8  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16985  0021AA  0E00               	movlw	0
 16986  0021AC  6E06               	movwf	(i2strncmp@n+1)^0,c
 16987  0021AE  0E03               	movlw	3
 16988  0021B0  6E05               	movwf	i2strncmp@n^0,c
 16989  0021B2  EC69  F02A         	call	i2_strncmp	;wreg free
 16990  0021B6  5001               	movf	?i2_strncmp^0,w,c
 16991  0021B8  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16992  0021BA  B4D8               	btfsc	status,2,c
 16993  0021BC  EFE2  F010         	goto	i2u1024_41
 16994  0021C0  EFE4  F010         	goto	i2u1024_40
 16995  0021C4                     i2u1024_41:
 16996  0021C4  EFFF  F010         	goto	i2l8191
 16997  0021C8                     i2u1024_40:
 16998  0021C8  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16999  0021CC  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17000  0021D0  CFDE F001          	movff	postinc2,i2strncmp@_l
 17001  0021D4  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 17002  0021D8  0ECD               	movlw	low STR_85
 17003  0021DA  6E03               	movwf	i2strncmp@_r^0,c
 17004  0021DC  0EFF               	movlw	high STR_85
 17005  0021DE  6E04               	movwf	(i2strncmp@_r+1)^0,c
 17006  0021E0  0E00               	movlw	0
 17007  0021E2  6E06               	movwf	(i2strncmp@n+1)^0,c
 17008  0021E4  0E03               	movlw	3
 17009  0021E6  6E05               	movwf	i2strncmp@n^0,c
 17010  0021E8  EC69  F02A         	call	i2_strncmp	;wreg free
 17011  0021EC  5001               	movf	?i2_strncmp^0,w,c
 17012  0021EE  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 17013  0021F0  A4D8               	btfss	status,2,c
 17014  0021F2  EFFD  F010         	goto	i2u1025_41
 17015  0021F6  EFFF  F010         	goto	i2u1025_40
 17016  0021FA                     i2u1025_41:
 17017  0021FA  EF55  F011         	goto	i2l8201
 17018  0021FE                     i2u1025_40:
 17019  0021FE                     i2l8191:
 17020                           
 17021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
 17022  0021FE  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17023  002202  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17024  002206  CFDE F04B          	movff	postinc2,??i2_vfpfcnvrt
 17025  00220A  CFDD F04C          	movff	postdec2,??i2_vfpfcnvrt+1
 17026  00220E  0E02               	movlw	2
 17027  002210  264B               	addwf	??i2_vfpfcnvrt^0,f,c
 17028  002212  0E00               	movlw	0
 17029  002214  224C               	addwfc	(??i2_vfpfcnvrt+1)^0,f,c
 17030  002216  C04B  FFF6         	movff	??i2_vfpfcnvrt,tblptrl
 17031  00221A  C04C  FFF7         	movff	??i2_vfpfcnvrt+1,tblptrh
 17032  00221E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17033  00221E  6AF8               	clrf	tblptru,c
 17034  002220                     	endif
 17035  002220                     	if	0	;tblptru may be non-zero
 17036  002220                     	endif
 17037  002220  0008               	tblrd		*
 17038  002222  CFF5 F072          	movff	tablat,i2vfpfcnvrt@c
 17039  002226                     
 17040                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
 17041  002226  0E03               	movlw	3
 17042  002228  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17043  00222C  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17044  002230  26DE               	addwf	postinc2,f,c
 17045  002232  0E00               	movlw	0
 17046  002234  22DD               	addwfc	postdec2,f,c
 17047  002236                     
 17048                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 17049  002236  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 17050  00223A  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 17051  00223E  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 17052  002242  0E02               	movlw	2
 17053  002244  26DE               	addwf	postinc2,f,c
 17054  002246  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 17055  00224A  0E00               	movlw	0
 17056  00224C  22DD               	addwfc	postdec2,f,c
 17057  00224E  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 17058  002252  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 17059  002256  50DF               	movf	indf2,w,c
 17060  002258  6E4D               	movwf	(??i2_vfpfcnvrt+2)^0,c
 17061  00225A  504D               	movf	(??i2_vfpfcnvrt+2)^0,w,c
 17062  00225C  0100               	movlb	0	; () banked
 17063  00225E  6F73               	movwf	i2vfpfcnvrt@llu& (0+255),b
 17064  002260  6B74               	clrf	(i2vfpfcnvrt@llu+1)& (0+255),b
 17065  002262  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 17066  002264  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 17067  002266  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 17068  002268  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 17069  00226A  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 17070  00226C  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 17071  00226E                     i2l8197:
 17072                           
 17073                           ; BSR set to: 0
 17074                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
 17075  00226E  C045  F01E         	movff	i2vfpfcnvrt@fp,i2xtoa@fp
 17076  002272  C046  F01F         	movff	i2vfpfcnvrt@fp+1,i2xtoa@fp+1
 17077  002276  C073  F020         	movff	i2vfpfcnvrt@llu,i2xtoa@d
 17078  00227A  C074  F021         	movff	i2vfpfcnvrt@llu+1,i2xtoa@d+1
 17079  00227E  C075  F022         	movff	i2vfpfcnvrt@llu+2,i2xtoa@d+2
 17080  002282  C076  F023         	movff	i2vfpfcnvrt@llu+3,i2xtoa@d+3
 17081  002286  C077  F024         	movff	i2vfpfcnvrt@llu+4,i2xtoa@d+4
 17082  00228A  C078  F025         	movff	i2vfpfcnvrt@llu+5,i2xtoa@d+5
 17083  00228E  C079  F026         	movff	i2vfpfcnvrt@llu+6,i2xtoa@d+6
 17084  002292  C07A  F027         	movff	i2vfpfcnvrt@llu+7,i2xtoa@d+7
 17085  002296  C072  F028         	movff	i2vfpfcnvrt@c,i2xtoa@x
 17086  00229A  EC6E  F019         	call	i2_xtoa	;wreg free
 17087  00229E  C01E  F045         	movff	?i2_xtoa,?i2_vfpfcnvrt
 17088  0022A2  C01F  F046         	movff	?i2_xtoa+1,?i2_vfpfcnvrt+1
 17089  0022A6  EFE4  F012         	goto	i2l797
 17090  0022AA                     i2l8201:
 17091                           
 17092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
 17093  0022AA  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17094  0022AE  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17095  0022B2  CFDE F001          	movff	postinc2,i2strncmp@_l
 17096  0022B6  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 17097  0022BA  0EE6               	movlw	low (STR_81+1)
 17098  0022BC  6E03               	movwf	i2strncmp@_r^0,c
 17099  0022BE  0EFF               	movlw	high (STR_81+1)
 17100  0022C0  6E04               	movwf	(i2strncmp@_r+1)^0,c
 17101  0022C2  0E00               	movlw	0
 17102  0022C4  6E06               	movwf	(i2strncmp@n+1)^0,c
 17103  0022C6  0E02               	movlw	2
 17104  0022C8  6E05               	movwf	i2strncmp@n^0,c
 17105  0022CA  EC69  F02A         	call	i2_strncmp	;wreg free
 17106  0022CE  5001               	movf	?i2_strncmp^0,w,c
 17107  0022D0  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 17108  0022D2  B4D8               	btfsc	status,2,c
 17109  0022D4  EF6E  F011         	goto	i2u1026_41
 17110  0022D8  EF70  F011         	goto	i2u1026_40
 17111  0022DC                     i2u1026_41:
 17112  0022DC  EF8B  F011         	goto	i2l8205
 17113  0022E0                     i2u1026_40:
 17114  0022E0  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17115  0022E4  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17116  0022E8  CFDE F001          	movff	postinc2,i2strncmp@_l
 17117  0022EC  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 17118  0022F0  0ECE               	movlw	low (STR_85+1)
 17119  0022F2  6E03               	movwf	i2strncmp@_r^0,c
 17120  0022F4  0EFF               	movlw	high (STR_85+1)
 17121  0022F6  6E04               	movwf	(i2strncmp@_r+1)^0,c
 17122  0022F8  0E00               	movlw	0
 17123  0022FA  6E06               	movwf	(i2strncmp@n+1)^0,c
 17124  0022FC  0E02               	movlw	2
 17125  0022FE  6E05               	movwf	i2strncmp@n^0,c
 17126  002300  EC69  F02A         	call	i2_strncmp	;wreg free
 17127  002304  5001               	movf	?i2_strncmp^0,w,c
 17128  002306  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 17129  002308  A4D8               	btfss	status,2,c
 17130  00230A  EF89  F011         	goto	i2u1027_41
 17131  00230E  EF8B  F011         	goto	i2u1027_40
 17132  002312                     i2u1027_41:
 17133  002312  EFC8  F011         	goto	i2l8215
 17134  002316                     i2u1027_40:
 17135  002316                     i2l8205:
 17136                           
 17137                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
 17138  002316  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17139  00231A  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17140  00231E  CFDE F04B          	movff	postinc2,??i2_vfpfcnvrt
 17141  002322  CFDD F04C          	movff	postdec2,??i2_vfpfcnvrt+1
 17142  002326  0E01               	movlw	1
 17143  002328  264B               	addwf	??i2_vfpfcnvrt^0,f,c
 17144  00232A  0E00               	movlw	0
 17145  00232C  224C               	addwfc	(??i2_vfpfcnvrt+1)^0,f,c
 17146  00232E  C04B  FFF6         	movff	??i2_vfpfcnvrt,tblptrl
 17147  002332  C04C  FFF7         	movff	??i2_vfpfcnvrt+1,tblptrh
 17148  002336                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17149  002336  6AF8               	clrf	tblptru,c
 17150  002338                     	endif
 17151  002338                     	if	0	;tblptru may be non-zero
 17152  002338                     	endif
 17153  002338  0008               	tblrd		*
 17154  00233A  CFF5 F072          	movff	tablat,i2vfpfcnvrt@c
 17155  00233E                     
 17156                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
 17157  00233E  0E02               	movlw	2
 17158  002340  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17159  002344  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17160  002348  26DE               	addwf	postinc2,f,c
 17161  00234A  0E00               	movlw	0
 17162  00234C  22DD               	addwfc	postdec2,f,c
 17163  00234E                     
 17164                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 17165  00234E  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 17166  002352  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 17167  002356  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 17168  00235A  0E02               	movlw	2
 17169  00235C  26DE               	addwf	postinc2,f,c
 17170  00235E  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 17171  002362  0E00               	movlw	0
 17172  002364  22DD               	addwfc	postdec2,f,c
 17173  002366  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 17174  00236A  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 17175  00236E  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 17176  002372  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 17177  002376  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 17178  00237A  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 17179  00237E  0100               	movlb	0	; () banked
 17180  002380  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 17181  002382  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 17182  002384  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 17183  002386  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 17184  002388  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 17185  00238A  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 17186  00238C  EF37  F011         	goto	i2l8197
 17187  002390                     i2l8215:
 17188                           
 17189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 17190  002390  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17191  002394  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17192  002398  CFDE FFF6          	movff	postinc2,tblptrl
 17193  00239C  CFDD FFF7          	movff	postdec2,tblptrh
 17194  0023A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17195  0023A0  6AF8               	clrf	tblptru,c
 17196  0023A2                     	endif
 17197  0023A2                     	if	0	;tblptru may be non-zero
 17198  0023A2                     	endif
 17199  0023A2  0008               	tblrd		*
 17200  0023A4  50F5               	movf	tablat,w,c
 17201  0023A6  0A78               	xorlw	120
 17202  0023A8  B4D8               	btfsc	status,2,c
 17203  0023AA  EFD9  F011         	goto	i2u1028_41
 17204  0023AE  EFDB  F011         	goto	i2u1028_40
 17205  0023B2                     i2u1028_41:
 17206  0023B2  EFEE  F011         	goto	i2l8219
 17207  0023B6                     i2u1028_40:
 17208  0023B6  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17209  0023BA  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17210  0023BE  CFDE FFF6          	movff	postinc2,tblptrl
 17211  0023C2  CFDD FFF7          	movff	postdec2,tblptrh
 17212  0023C6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17213  0023C6  6AF8               	clrf	tblptru,c
 17214  0023C8                     	endif
 17215  0023C8                     	if	0	;tblptru may be non-zero
 17216  0023C8                     	endif
 17217  0023C8  0008               	tblrd		*
 17218  0023CA  50F5               	movf	tablat,w,c
 17219  0023CC  0A58               	xorlw	88
 17220  0023CE  A4D8               	btfss	status,2,c
 17221  0023D0  EFEC  F011         	goto	i2u1029_41
 17222  0023D4  EFEE  F011         	goto	i2u1029_40
 17223  0023D8                     i2u1029_41:
 17224  0023D8  EF22  F012         	goto	i2l8229
 17225  0023DC                     i2u1029_40:
 17226  0023DC                     i2l8219:
 17227                           
 17228                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 17229  0023DC  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17230  0023E0  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17231  0023E4  CFDE FFF6          	movff	postinc2,tblptrl
 17232  0023E8  CFDD FFF7          	movff	postdec2,tblptrh
 17233  0023EC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17234  0023EC  6AF8               	clrf	tblptru,c
 17235  0023EE                     	endif
 17236  0023EE                     	if	0	;tblptru may be non-zero
 17237  0023EE                     	endif
 17238  0023EE  0008               	tblrd		*
 17239  0023F0  CFF5 F072          	movff	tablat,i2vfpfcnvrt@c
 17240  0023F4                     
 17241                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 17242  0023F4  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17243  0023F8  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17244  0023FC  2ADE               	incf	postinc2,f,c
 17245  0023FE  0E00               	movlw	0
 17246  002400  22DD               	addwfc	postdec2,f,c
 17247  002402                     
 17248                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 17249  002402  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 17250  002406  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 17251  00240A  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 17252  00240E  0E02               	movlw	2
 17253  002410  26DE               	addwf	postinc2,f,c
 17254  002412  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 17255  002416  0E00               	movlw	0
 17256  002418  22DD               	addwfc	postdec2,f,c
 17257  00241A  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 17258  00241E  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 17259  002422  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 17260  002426  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 17261  00242A  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 17262  00242E  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 17263  002432  0100               	movlb	0	; () banked
 17264  002434  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 17265  002436  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 17266  002438  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 17267  00243A  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 17268  00243C  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 17269  00243E  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 17270  002440  EF37  F011         	goto	i2l8197
 17271  002444                     i2l8229:
 17272                           
 17273                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
 17274  002444  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17275  002448  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17276  00244C  CFDE F001          	movff	postinc2,i2strncmp@_l
 17277  002450  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 17278  002454  0EFB               	movlw	low STR_99
 17279  002456  6E03               	movwf	i2strncmp@_r^0,c
 17280  002458  0EFF               	movlw	high STR_99
 17281  00245A  6E04               	movwf	(i2strncmp@_r+1)^0,c
 17282  00245C  0E00               	movlw	0
 17283  00245E  6E06               	movwf	(i2strncmp@n+1)^0,c
 17284  002460  0E02               	movlw	2
 17285  002462  6E05               	movwf	i2strncmp@n^0,c
 17286  002464  EC69  F02A         	call	i2_strncmp	;wreg free
 17287  002468  5001               	movf	?i2_strncmp^0,w,c
 17288  00246A  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 17289  00246C  B4D8               	btfsc	status,2,c
 17290  00246E  EF3B  F012         	goto	i2u1030_41
 17291  002472  EF3D  F012         	goto	i2u1030_40
 17292  002476                     i2u1030_41:
 17293  002476  EF58  F012         	goto	i2l8233
 17294  00247A                     i2u1030_40:
 17295  00247A  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17296  00247E  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17297  002482  CFDE F001          	movff	postinc2,i2strncmp@_l
 17298  002486  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 17299  00248A  0EE9               	movlw	low STR_103
 17300  00248C  6E03               	movwf	i2strncmp@_r^0,c
 17301  00248E  0EFF               	movlw	high STR_103
 17302  002490  6E04               	movwf	(i2strncmp@_r+1)^0,c
 17303  002492  0E00               	movlw	0
 17304  002494  6E06               	movwf	(i2strncmp@n+1)^0,c
 17305  002496  0E02               	movlw	2
 17306  002498  6E05               	movwf	i2strncmp@n^0,c
 17307  00249A  EC69  F02A         	call	i2_strncmp	;wreg free
 17308  00249E  5001               	movf	?i2_strncmp^0,w,c
 17309  0024A0  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 17310  0024A2  A4D8               	btfss	status,2,c
 17311  0024A4  EF56  F012         	goto	i2u1031_41
 17312  0024A8  EF58  F012         	goto	i2u1031_40
 17313  0024AC                     i2u1031_41:
 17314  0024AC  EF95  F012         	goto	i2l8243
 17315  0024B0                     i2u1031_40:
 17316  0024B0                     i2l8233:
 17317                           
 17318                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
 17319  0024B0  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17320  0024B4  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17321  0024B8  CFDE F04B          	movff	postinc2,??i2_vfpfcnvrt
 17322  0024BC  CFDD F04C          	movff	postdec2,??i2_vfpfcnvrt+1
 17323  0024C0  0E01               	movlw	1
 17324  0024C2  264B               	addwf	??i2_vfpfcnvrt^0,f,c
 17325  0024C4  0E00               	movlw	0
 17326  0024C6  224C               	addwfc	(??i2_vfpfcnvrt+1)^0,f,c
 17327  0024C8  C04B  FFF6         	movff	??i2_vfpfcnvrt,tblptrl
 17328  0024CC  C04C  FFF7         	movff	??i2_vfpfcnvrt+1,tblptrh
 17329  0024D0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17330  0024D0  6AF8               	clrf	tblptru,c
 17331  0024D2                     	endif
 17332  0024D2                     	if	0	;tblptru may be non-zero
 17333  0024D2                     	endif
 17334  0024D2  0008               	tblrd		*
 17335  0024D4  CFF5 F072          	movff	tablat,i2vfpfcnvrt@c
 17336  0024D8                     
 17337                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
 17338  0024D8  0E02               	movlw	2
 17339  0024DA  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17340  0024DE  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17341  0024E2  26DE               	addwf	postinc2,f,c
 17342  0024E4  0E00               	movlw	0
 17343  0024E6  22DD               	addwfc	postdec2,f,c
 17344  0024E8                     
 17345                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 17346  0024E8  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 17347  0024EC  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 17348  0024F0  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 17349  0024F4  0E02               	movlw	2
 17350  0024F6  26DE               	addwf	postinc2,f,c
 17351  0024F8  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 17352  0024FC  0E00               	movlw	0
 17353  0024FE  22DD               	addwfc	postdec2,f,c
 17354  002500  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 17355  002504  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 17356  002508  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 17357  00250C  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 17358  002510  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 17359  002514  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 17360  002518  0100               	movlb	0	; () banked
 17361  00251A  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 17362  00251C  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 17363  00251E  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 17364  002520  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 17365  002522  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 17366  002524  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 17367  002526  EF37  F011         	goto	i2l8197
 17368  00252A                     i2l8243:
 17369                           
 17370                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 17371  00252A  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17372  00252E  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17373  002532  CFDE FFF6          	movff	postinc2,tblptrl
 17374  002536  CFDD FFF7          	movff	postdec2,tblptrh
 17375  00253A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17376  00253A  6AF8               	clrf	tblptru,c
 17377  00253C                     	endif
 17378  00253C                     	if	0	;tblptru may be non-zero
 17379  00253C                     	endif
 17380  00253C  0008               	tblrd		*
 17381  00253E  50F5               	movf	tablat,w,c
 17382  002540  0A25               	xorlw	37
 17383  002542  A4D8               	btfss	status,2,c
 17384  002544  EFA6  F012         	goto	i2u1032_41
 17385  002548  EFA8  F012         	goto	i2u1032_40
 17386  00254C                     i2u1032_41:
 17387  00254C  EFBF  F012         	goto	i2l8253
 17388  002550                     i2u1032_40:
 17389  002550                     
 17390                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 17391  002550  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17392  002554  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17393  002558  2ADE               	incf	postinc2,f,c
 17394  00255A  0E00               	movlw	0
 17395  00255C  22DD               	addwfc	postdec2,f,c
 17396  00255E                     
 17397                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 17398  00255E  0E00               	movlw	0
 17399  002560  6E04               	movwf	(i2fputc@c+1)^0,c
 17400  002562  0E25               	movlw	37
 17401  002564  6E03               	movwf	i2fputc@c^0,c
 17402  002566  C045  F005         	movff	i2vfpfcnvrt@fp,i2fputc@fp
 17403  00256A  C046  F006         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
 17404  00256E  EC7A  F02C         	call	i2_fputc	;wreg free
 17405  002572                     i2l8249:
 17406                           
 17407                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 17408  002572  0E00               	movlw	0
 17409  002574  6E46               	movwf	(?i2_vfpfcnvrt+1)^0,c
 17410  002576  0E01               	movlw	1
 17411  002578  6E45               	movwf	?i2_vfpfcnvrt^0,c
 17412  00257A  EFE4  F012         	goto	i2l797
 17413  00257E                     i2l8253:
 17414                           
 17415                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 17416  00257E  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17417  002582  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17418  002586  2ADE               	incf	postinc2,f,c
 17419  002588  0E00               	movlw	0
 17420  00258A  22DD               	addwfc	postdec2,f,c
 17421  00258C  EF56  F00E         	goto	i2l8105
 17422  002590                     i2l8259:
 17423                           
 17424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 17425  002590  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17426  002594  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17427  002598  CFDE FFF6          	movff	postinc2,tblptrl
 17428  00259C  CFDD FFF7          	movff	postdec2,tblptrh
 17429  0025A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17430  0025A0  6AF8               	clrf	tblptru,c
 17431  0025A2                     	endif
 17432  0025A2                     	if	0	;tblptru may be non-zero
 17433  0025A2                     	endif
 17434  0025A2  0008               	tblrd		*
 17435  0025A4  50F5               	movf	tablat,w,c
 17436  0025A6  6E03               	movwf	i2fputc@c^0,c
 17437  0025A8  6A04               	clrf	(i2fputc@c+1)^0,c
 17438  0025AA  C045  F005         	movff	i2vfpfcnvrt@fp,i2fputc@fp
 17439  0025AE  C046  F006         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
 17440  0025B2  EC7A  F02C         	call	i2_fputc	;wreg free
 17441  0025B6                     
 17442                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 17443  0025B6  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17444  0025BA  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17445  0025BE  2ADE               	incf	postinc2,f,c
 17446  0025C0  0E00               	movlw	0
 17447  0025C2  22DD               	addwfc	postdec2,f,c
 17448  0025C4  EFB9  F012         	goto	i2l8249
 17449  0025C8                     i2l797:
 17450  0025C8  0012               	return		;funcret
 17451  0025CA                     __end_ofi2_vfpfcnvrt:
 17452                           	opt callstack 0
 17453                           
 17454 ;; *************** function i2_xtoa *****************
 17455 ;; Defined at:
 17456 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 17457 ;; Parameters:    Size  Location     Type
 17458 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 17459 ;;		 -> vsnprintf@f(6), NULL(0), 
 17460 ;;  d               8   31[COMRAM] unsigned long long 
 17461 ;;  x               1   39[COMRAM] unsigned char 
 17462 ;; Auto vars:     Size  Location     Type
 17463 ;;  xtoa            8   56[COMRAM] unsigned long long 
 17464 ;;  xtoa            2   66[COMRAM] int 
 17465 ;;  xtoa            2   64[COMRAM] int 
 17466 ;;  xtoa            2   54[COMRAM] int 
 17467 ;;  xtoa            2   52[COMRAM] int 
 17468 ;; Return value:  Size  Location     Type
 17469 ;;                  2   29[COMRAM] int 
 17470 ;; Registers used:
 17471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17472 ;; Tracked objects:
 17473 ;;		On entry : 0/0
 17474 ;;		On exit  : 0/0
 17475 ;;		Unchanged: 0/0
 17476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17477 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17478 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17479 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17480 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17481 ;;Total ram usage:       39 bytes
 17482 ;; Hardware stack levels used:    1
 17483 ;; Hardware stack levels required when called:    5
 17484 ;; This function calls:
 17485 ;;		i2_isalpha
 17486 ;;		i2_isupper
 17487 ;;		i2_pad
 17488 ;;		i2_toupper
 17489 ;; This function is called by:
 17490 ;;		i2_vfpfcnvrt
 17491 ;; This function uses a non-reentrant model
 17492 ;;
 17493                           
 17494                           	psect	text74
 17495  0032DC                     __ptext74:
 17496                           	opt callstack 0
 17497  0032DC                     i2_xtoa:
 17498                           	opt callstack 8
 17499  0032DC                     
 17500                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 17501  0032DC  0100               	movlb	0	; () banked
 17502  0032DE  BFBC               	btfsc	(_prec+1)& (0+255),7,b
 17503  0032E0  EF74  F019         	goto	i2u918_41
 17504  0032E4  EF76  F019         	goto	i2u918_40
 17505  0032E8                     i2u918_41:
 17506  0032E8  EF77  F019         	goto	i2l7633
 17507  0032EC                     i2u918_40:
 17508  0032EC                     
 17509                           ; BSR set to: 0
 17510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 17511  0032EC  93BD               	bcf	_flags& (0+255),1,b
 17512  0032EE                     i2l7633:
 17513                           
 17514                           ; BSR set to: 0
 17515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 17516  0032EE  BFBC               	btfsc	(_prec+1)& (0+255),7,b
 17517  0032F0  EF84  F019         	goto	i2u919_40
 17518  0032F4  51BC               	movf	(_prec+1)& (0+255),w,b
 17519  0032F6  E106               	bnz	i2u919_41
 17520  0032F8  05BB               	decf	_prec& (0+255),w,b
 17521  0032FA  B0D8               	btfsc	status,0,c
 17522  0032FC  EF82  F019         	goto	i2u919_41
 17523  003300  EF84  F019         	goto	i2u919_40
 17524  003304                     i2u919_41:
 17525  003304  EF8A  F019         	goto	i2l735
 17526  003308                     i2u919_40:
 17527  003308                     
 17528                           ; BSR set to: 0
 17529  003308  0E00               	movlw	0
 17530  00330A  6E36               	movwf	(i2xtoa@p+1)^0,c
 17531  00330C  0E01               	movlw	1
 17532  00330E  6E35               	movwf	i2xtoa@p^0,c
 17533  003310  EF8E  F019         	goto	i2l737
 17534  003314                     i2l735:
 17535                           
 17536                           ; BSR set to: 0
 17537  003314  C0BB  F035         	movff	_prec,i2xtoa@p
 17538  003318  C0BC  F036         	movff	_prec+1,i2xtoa@p+1
 17539  00331C                     i2l737:
 17540                           
 17541                           ; BSR set to: 0
 17542                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 17543  00331C  C0B9  F037         	movff	_width,i2xtoa@w
 17544  003320  C0BA  F038         	movff	_width+1,i2xtoa@w+1
 17545                           
 17546                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 17547  003324  A9BD               	btfss	_flags& (0+255),4,b
 17548  003326  EF97  F019         	goto	i2u920_41
 17549  00332A  EF99  F019         	goto	i2u920_40
 17550  00332E                     i2u920_41:
 17551  00332E  EF9D  F019         	goto	i2l7639
 17552  003332                     i2u920_40:
 17553  003332                     
 17554                           ; BSR set to: 0
 17555                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 17556  003332  0EFE               	movlw	254
 17557  003334  2637               	addwf	i2xtoa@w^0,f,c
 17558  003336  0EFF               	movlw	255
 17559  003338  2238               	addwfc	(i2xtoa@w+1)^0,f,c
 17560  00333A                     i2l7639:
 17561                           
 17562                           ; BSR set to: 0
 17563                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 17564  00333A  C020  F039         	movff	i2xtoa@d,i2xtoa@n
 17565  00333E  C021  F03A         	movff	i2xtoa@d+1,i2xtoa@n+1
 17566  003342  C022  F03B         	movff	i2xtoa@d+2,i2xtoa@n+2
 17567  003346  C023  F03C         	movff	i2xtoa@d+3,i2xtoa@n+3
 17568  00334A  C024  F03D         	movff	i2xtoa@d+4,i2xtoa@n+4
 17569  00334E  C025  F03E         	movff	i2xtoa@d+5,i2xtoa@n+5
 17570  003352  C026  F03F         	movff	i2xtoa@d+6,i2xtoa@n+6
 17571  003356  C027  F040         	movff	i2xtoa@d+7,i2xtoa@n+7
 17572  00335A                     
 17573                           ; BSR set to: 0
 17574                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 17575  00335A  0E00               	movlw	0
 17576  00335C  6E42               	movwf	(i2xtoa@i+1)^0,c
 17577  00335E  0E1F               	movlw	31
 17578  003360  6E41               	movwf	i2xtoa@i^0,c
 17579  003362                     
 17580                           ; BSR set to: 0
 17581                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 17582  003362  0E00               	movlw	0
 17583  003364  0101               	movlb	1	; () banked
 17584  003366  6F97               	movwf	(_dbuf+31)& (0+255),b
 17585                           
 17586                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17587  003368  EF69  F01A         	goto	i2l7675
 17588  00336C                     i2l7645:
 17589                           
 17590                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 17591  00336C  0641               	decf	i2xtoa@i^0,f,c
 17592  00336E  A0D8               	btfss	status,0,c
 17593  003370  0642               	decf	(i2xtoa@i+1)^0,f,c
 17594  003372                     
 17595                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 17596  003372  0E0F               	movlw	15
 17597  003374  1439               	andwf	i2xtoa@n^0,w,c
 17598  003376  6E43               	movwf	i2xtoa@c^0,c
 17599  003378  6A44               	clrf	(i2xtoa@c+1)^0,c
 17600  00337A                     
 17601                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 17602  00337A  BE44               	btfsc	(i2xtoa@c+1)^0,7,c
 17603  00337C  EFC9  F019         	goto	i2u921_41
 17604  003380  5044               	movf	(i2xtoa@c+1)^0,w,c
 17605  003382  E109               	bnz	i2u921_40
 17606  003384  0E0A               	movlw	10
 17607  003386  5C43               	subwf	i2xtoa@c^0,w,c
 17608  003388  A0D8               	btfss	status,0,c
 17609  00338A  EFC9  F019         	goto	i2u921_41
 17610  00338E  EFCB  F019         	goto	i2u921_40
 17611  003392                     i2u921_41:
 17612  003392  EFD3  F019         	goto	i2l7653
 17613  003396                     i2u921_40:
 17614  003396  0E57               	movlw	87
 17615  003398  2443               	addwf	i2xtoa@c^0,w,c
 17616  00339A  6E43               	movwf	i2xtoa@c^0,c
 17617  00339C  0E00               	movlw	0
 17618  00339E  2044               	addwfc	(i2xtoa@c+1)^0,w,c
 17619  0033A0  6E44               	movwf	(i2xtoa@c+1)^0,c
 17620  0033A2  EFD9  F019         	goto	i2l744
 17621  0033A6                     i2l7653:
 17622  0033A6  0E30               	movlw	48
 17623  0033A8  2443               	addwf	i2xtoa@c^0,w,c
 17624  0033AA  6E43               	movwf	i2xtoa@c^0,c
 17625  0033AC  0E00               	movlw	0
 17626  0033AE  2044               	addwfc	(i2xtoa@c+1)^0,w,c
 17627  0033B0  6E44               	movwf	(i2xtoa@c+1)^0,c
 17628  0033B2                     i2l744:
 17629  0033B2  0EBF               	movlw	191
 17630  0033B4  6E29               	movwf	??i2_xtoa^0,c
 17631  0033B6  0EFF               	movlw	255
 17632  0033B8  6E2A               	movwf	(??i2_xtoa+1)^0,c
 17633  0033BA  5028               	movf	i2xtoa@x^0,w,c
 17634  0033BC  6E2B               	movwf	(??i2_xtoa+2)^0,c
 17635  0033BE  6A2C               	clrf	(??i2_xtoa+3)^0,c
 17636  0033C0  5029               	movf	??i2_xtoa^0,w,c
 17637  0033C2  262B               	addwf	(??i2_xtoa+2)^0,f,c
 17638  0033C4  502A               	movf	(??i2_xtoa+1)^0,w,c
 17639  0033C6  222C               	addwfc	(??i2_xtoa+3)^0,f,c
 17640  0033C8  502C               	movf	(??i2_xtoa+3)^0,w,c
 17641  0033CA  E10A               	bnz	i2u922_40
 17642  0033CC  0E1A               	movlw	26
 17643  0033CE  5C2B               	subwf	(??i2_xtoa+2)^0,w,c
 17644  0033D0  A0D8               	btfss	status,0,c
 17645  0033D2  EFED  F019         	goto	i2u922_41
 17646  0033D6  EFF0  F019         	goto	i2u922_40
 17647  0033DA                     i2u922_41:
 17648  0033DA  0E01               	movlw	1
 17649  0033DC  EFF1  F019         	goto	i2u923_40
 17650  0033E0                     i2u922_40:
 17651  0033E0  0E00               	movlw	0
 17652  0033E2                     i2u923_40:
 17653  0033E2  6E31               	movwf	i2_xtoa$1706^0,c
 17654  0033E4  6A32               	clrf	(i2_xtoa$1706+1)^0,c
 17655  0033E6  5031               	movf	i2_xtoa$1706^0,w,c
 17656  0033E8  1032               	iorwf	(i2_xtoa$1706+1)^0,w,c
 17657  0033EA  B4D8               	btfsc	status,2,c
 17658  0033EC  EFFA  F019         	goto	i2u924_41
 17659  0033F0  EFFC  F019         	goto	i2u924_40
 17660  0033F4                     i2u924_41:
 17661  0033F4  EF2C  F01A         	goto	i2l7667
 17662  0033F8                     i2u924_40:
 17663  0033F8  0E9F               	movlw	159
 17664  0033FA  6E29               	movwf	??i2_xtoa^0,c
 17665  0033FC  0EFF               	movlw	255
 17666  0033FE  6E2A               	movwf	(??i2_xtoa+1)^0,c
 17667  003400  0E20               	movlw	32
 17668  003402  1043               	iorwf	i2xtoa@c^0,w,c
 17669  003404  6E2B               	movwf	(??i2_xtoa+2)^0,c
 17670  003406  0E00               	movlw	0
 17671  003408  1044               	iorwf	(i2xtoa@c+1)^0,w,c
 17672  00340A  6E2C               	movwf	(??i2_xtoa+3)^0,c
 17673  00340C  5029               	movf	??i2_xtoa^0,w,c
 17674  00340E  262B               	addwf	(??i2_xtoa+2)^0,f,c
 17675  003410  502A               	movf	(??i2_xtoa+1)^0,w,c
 17676  003412  222C               	addwfc	(??i2_xtoa+3)^0,f,c
 17677  003414  502C               	movf	(??i2_xtoa+3)^0,w,c
 17678  003416  E10A               	bnz	i2u925_40
 17679  003418  0E1A               	movlw	26
 17680  00341A  5C2B               	subwf	(??i2_xtoa+2)^0,w,c
 17681  00341C  A0D8               	btfss	status,0,c
 17682  00341E  EF13  F01A         	goto	i2u925_41
 17683  003422  EF16  F01A         	goto	i2u925_40
 17684  003426                     i2u925_41:
 17685  003426  0E01               	movlw	1
 17686  003428  EF17  F01A         	goto	i2u926_40
 17687  00342C                     i2u925_40:
 17688  00342C  0E00               	movlw	0
 17689  00342E                     i2u926_40:
 17690  00342E  6E33               	movwf	i2_xtoa$1707^0,c
 17691  003430  6A34               	clrf	(i2_xtoa$1707+1)^0,c
 17692  003432  5033               	movf	i2_xtoa$1707^0,w,c
 17693  003434  1034               	iorwf	(i2_xtoa$1707+1)^0,w,c
 17694  003436  B4D8               	btfsc	status,2,c
 17695  003438  EF20  F01A         	goto	i2u927_41
 17696  00343C  EF22  F01A         	goto	i2u927_40
 17697  003440                     i2u927_41:
 17698  003440  EF2C  F01A         	goto	i2l7667
 17699  003444                     i2u927_40:
 17700  003444                     
 17701                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 17702  003444  C043  F007         	movff	i2xtoa@c,i2toupper@c
 17703  003448  C044  F008         	movff	i2xtoa@c+1,i2toupper@c+1
 17704  00344C  EC6A  F02F         	call	i2_toupper	;wreg free
 17705  003450  C007  F043         	movff	?i2_toupper,i2xtoa@c
 17706  003454  C008  F044         	movff	?i2_toupper+1,i2xtoa@c+1
 17707  003458                     i2l7667:
 17708                           
 17709                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 17710  003458  0E78               	movlw	low _dbuf
 17711  00345A  2441               	addwf	i2xtoa@i^0,w,c
 17712  00345C  6ED9               	movwf	fsr2l,c
 17713  00345E  0E01               	movlw	high _dbuf
 17714  003460  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 17715  003462  6EDA               	movwf	fsr2h,c
 17716  003464  C043  FFDF         	movff	i2xtoa@c,indf2
 17717  003468                     
 17718                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 17719  003468  0635               	decf	i2xtoa@p^0,f,c
 17720  00346A  A0D8               	btfss	status,0,c
 17721  00346C  0636               	decf	(i2xtoa@p+1)^0,f,c
 17722  00346E                     
 17723                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 17724  00346E  0637               	decf	i2xtoa@w^0,f,c
 17725  003470  A0D8               	btfss	status,0,c
 17726  003472  0638               	decf	(i2xtoa@w+1)^0,f,c
 17727  003474                     
 17728                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 17729  003474  C039  F029         	movff	i2xtoa@n,??i2_xtoa
 17730  003478  C03A  F02A         	movff	i2xtoa@n+1,??i2_xtoa+1
 17731  00347C  C03B  F02B         	movff	i2xtoa@n+2,??i2_xtoa+2
 17732  003480  C03C  F02C         	movff	i2xtoa@n+3,??i2_xtoa+3
 17733  003484  C03D  F02D         	movff	i2xtoa@n+4,??i2_xtoa+4
 17734  003488  C03E  F02E         	movff	i2xtoa@n+5,??i2_xtoa+5
 17735  00348C  C03F  F02F         	movff	i2xtoa@n+6,??i2_xtoa+6
 17736  003490  C040  F030         	movff	i2xtoa@n+7,??i2_xtoa+7
 17737  003494  0E05               	movlw	5
 17738  003496  EF56  F01A         	goto	i2u928_40
 17739  00349A                     i2u928_45:
 17740  00349A  90D8               	bcf	status,0,c
 17741  00349C  3230               	rrcf	(??i2_xtoa+7)^0,f,c
 17742  00349E  322F               	rrcf	(??i2_xtoa+6)^0,f,c
 17743  0034A0  322E               	rrcf	(??i2_xtoa+5)^0,f,c
 17744  0034A2  322D               	rrcf	(??i2_xtoa+4)^0,f,c
 17745  0034A4  322C               	rrcf	(??i2_xtoa+3)^0,f,c
 17746  0034A6  322B               	rrcf	(??i2_xtoa+2)^0,f,c
 17747  0034A8  322A               	rrcf	(??i2_xtoa+1)^0,f,c
 17748  0034AA  3229               	rrcf	??i2_xtoa^0,f,c
 17749  0034AC                     i2u928_40:
 17750  0034AC  2EE8               	decfsz	wreg,f,c
 17751  0034AE  EF4D  F01A         	goto	i2u928_45
 17752  0034B2  C029  F039         	movff	??i2_xtoa,i2xtoa@n
 17753  0034B6  C02A  F03A         	movff	??i2_xtoa+1,i2xtoa@n+1
 17754  0034BA  C02B  F03B         	movff	??i2_xtoa+2,i2xtoa@n+2
 17755  0034BE  C02C  F03C         	movff	??i2_xtoa+3,i2xtoa@n+3
 17756  0034C2  C02D  F03D         	movff	??i2_xtoa+4,i2xtoa@n+4
 17757  0034C6  C02E  F03E         	movff	??i2_xtoa+5,i2xtoa@n+5
 17758  0034CA  C02F  F03F         	movff	??i2_xtoa+6,i2xtoa@n+6
 17759  0034CE  C030  F040         	movff	??i2_xtoa+7,i2xtoa@n+7
 17760  0034D2                     i2l7675:
 17761                           
 17762                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17763  0034D2  BE42               	btfsc	(i2xtoa@i+1)^0,7,c
 17764  0034D4  EF75  F01A         	goto	i2u929_41
 17765  0034D8  5042               	movf	(i2xtoa@i+1)^0,w,c
 17766  0034DA  E109               	bnz	i2u929_40
 17767  0034DC  0E02               	movlw	2
 17768  0034DE  5C41               	subwf	i2xtoa@i^0,w,c
 17769  0034E0  A0D8               	btfss	status,0,c
 17770  0034E2  EF75  F01A         	goto	i2u929_41
 17771  0034E6  EF77  F01A         	goto	i2u929_40
 17772  0034EA                     i2u929_41:
 17773  0034EA  EFA8  F01A         	goto	i2l758
 17774  0034EE                     i2u929_40:
 17775  0034EE  5039               	movf	i2xtoa@n^0,w,c
 17776  0034F0  103A               	iorwf	(i2xtoa@n+1)^0,w,c
 17777  0034F2  103B               	iorwf	(i2xtoa@n+2)^0,w,c
 17778  0034F4  103C               	iorwf	(i2xtoa@n+3)^0,w,c
 17779  0034F6  103D               	iorwf	(i2xtoa@n+4)^0,w,c
 17780  0034F8  103E               	iorwf	(i2xtoa@n+5)^0,w,c
 17781  0034FA  103F               	iorwf	(i2xtoa@n+6)^0,w,c
 17782  0034FC  1040               	iorwf	(i2xtoa@n+7)^0,w,c
 17783  0034FE  A4D8               	btfss	status,2,c
 17784  003500  EF84  F01A         	goto	i2u930_41
 17785  003504  EF86  F01A         	goto	i2u930_40
 17786  003508                     i2u930_41:
 17787  003508  EFB6  F019         	goto	i2l7645
 17788  00350C                     i2u930_40:
 17789  00350C  BE36               	btfsc	(i2xtoa@p+1)^0,7,c
 17790  00350E  EF93  F01A         	goto	i2u931_40
 17791  003512  5036               	movf	(i2xtoa@p+1)^0,w,c
 17792  003514  E106               	bnz	i2u931_41
 17793  003516  0435               	decf	i2xtoa@p^0,w,c
 17794  003518  B0D8               	btfsc	status,0,c
 17795  00351A  EF91  F01A         	goto	i2u931_41
 17796  00351E  EF93  F01A         	goto	i2u931_40
 17797  003522                     i2u931_41:
 17798  003522  EFB6  F019         	goto	i2l7645
 17799  003526                     i2u931_40:
 17800  003526  BE38               	btfsc	(i2xtoa@w+1)^0,7,c
 17801  003528  EF9E  F01A         	goto	i2u932_41
 17802  00352C  5038               	movf	(i2xtoa@w+1)^0,w,c
 17803  00352E  E108               	bnz	i2u932_40
 17804  003530  0437               	decf	i2xtoa@w^0,w,c
 17805  003532  A0D8               	btfss	status,0,c
 17806  003534  EF9E  F01A         	goto	i2u932_41
 17807  003538  EFA0  F01A         	goto	i2u932_40
 17808  00353C                     i2u932_41:
 17809  00353C  EFA8  F01A         	goto	i2l758
 17810  003540                     i2u932_40:
 17811  003540  0100               	movlb	0	; () banked
 17812  003542  B3BD               	btfsc	_flags& (0+255),1,b
 17813  003544  EFA6  F01A         	goto	i2u933_41
 17814  003548  EFA8  F01A         	goto	i2u933_40
 17815  00354C                     i2u933_41:
 17816  00354C  EFB6  F019         	goto	i2l7645
 17817  003550                     i2u933_40:
 17818  003550                     i2l758:
 17819                           
 17820                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 17821  003550  0100               	movlb	0	; () banked
 17822  003552  A9BD               	btfss	_flags& (0+255),4,b
 17823  003554  EFAE  F01A         	goto	i2u934_41
 17824  003558  EFB0  F01A         	goto	i2u934_40
 17825  00355C                     i2u934_41:
 17826  00355C  EFC6  F01A         	goto	i2l7691
 17827  003560                     i2u934_40:
 17828  003560                     
 17829                           ; BSR set to: 0
 17830                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 17831  003560  0641               	decf	i2xtoa@i^0,f,c
 17832  003562  A0D8               	btfss	status,0,c
 17833  003564  0642               	decf	(i2xtoa@i+1)^0,f,c
 17834  003566                     
 17835                           ; BSR set to: 0
 17836                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 17837  003566  0E78               	movlw	low _dbuf
 17838  003568  2441               	addwf	i2xtoa@i^0,w,c
 17839  00356A  6ED9               	movwf	fsr2l,c
 17840  00356C  0E01               	movlw	high _dbuf
 17841  00356E  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 17842  003570  6EDA               	movwf	fsr2h,c
 17843  003572  C028  FFDF         	movff	i2xtoa@x,indf2
 17844  003576                     
 17845                           ; BSR set to: 0
 17846                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 17847  003576  0641               	decf	i2xtoa@i^0,f,c
 17848  003578  A0D8               	btfss	status,0,c
 17849  00357A  0642               	decf	(i2xtoa@i+1)^0,f,c
 17850                           
 17851                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 17852  00357C  0E78               	movlw	low _dbuf
 17853  00357E  2441               	addwf	i2xtoa@i^0,w,c
 17854  003580  6ED9               	movwf	fsr2l,c
 17855  003582  0E01               	movlw	high _dbuf
 17856  003584  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 17857  003586  6EDA               	movwf	fsr2h,c
 17858  003588  0E30               	movlw	48
 17859  00358A  6EDF               	movwf	indf2,c
 17860  00358C                     i2l7691:
 17861                           
 17862                           ; BSR set to: 0
 17863                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 17864  00358C  C01E  F013         	movff	i2xtoa@fp,i2pad@fp
 17865  003590  C01F  F014         	movff	i2xtoa@fp+1,i2pad@fp+1
 17866  003594  0E78               	movlw	low _dbuf
 17867  003596  2441               	addwf	i2xtoa@i^0,w,c
 17868  003598  6E15               	movwf	i2pad@buf^0,c
 17869  00359A  0E01               	movlw	high _dbuf
 17870  00359C  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 17871  00359E  6E16               	movwf	(i2pad@buf+1)^0,c
 17872  0035A0  C037  F017         	movff	i2xtoa@w,i2pad@p
 17873  0035A4  C038  F018         	movff	i2xtoa@w+1,i2pad@p+1
 17874  0035A8  ECDF  F02C         	call	i2_pad	;wreg free
 17875  0035AC  C013  F01E         	movff	?i2_pad,?i2_xtoa
 17876  0035B0  C014  F01F         	movff	?i2_pad+1,?i2_xtoa+1
 17877  0035B4  0012               	return		;funcret
 17878  0035B6                     __end_ofi2_xtoa:
 17879                           	opt callstack 0
 17880                           
 17881 ;; *************** function i2_toupper *****************
 17882 ;; Defined at:
 17883 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
 17884 ;; Parameters:    Size  Location     Type
 17885 ;;  c               2    6[COMRAM] int 
 17886 ;; Auto vars:     Size  Location     Type
 17887 ;;		None
 17888 ;; Return value:  Size  Location     Type
 17889 ;;                  2    6[COMRAM] int 
 17890 ;; Registers used:
 17891 ;;		wreg, status,2, status,0
 17892 ;; Tracked objects:
 17893 ;;		On entry : 0/0
 17894 ;;		On exit  : 0/0
 17895 ;;		Unchanged: 0/0
 17896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17897 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17898 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17899 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17900 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17901 ;;Total ram usage:        8 bytes
 17902 ;; Hardware stack levels used:    1
 17903 ;; Hardware stack levels required when called:    1
 17904 ;; This function calls:
 17905 ;;		i2_islower
 17906 ;; This function is called by:
 17907 ;;		i2_xtoa
 17908 ;; This function uses a non-reentrant model
 17909 ;;
 17910                           
 17911                           	psect	text75
 17912  005ED4                     __ptext75:
 17913                           	opt callstack 0
 17914  005ED4                     i2_toupper:
 17915                           	opt callstack 11
 17916  005ED4  0E9F               	movlw	159
 17917  005ED6  6E09               	movwf	??i2_toupper^0,c
 17918  005ED8  0EFF               	movlw	255
 17919  005EDA  6E0A               	movwf	(??i2_toupper+1)^0,c
 17920  005EDC  C007  F00B         	movff	i2toupper@c,??i2_toupper+2
 17921  005EE0  C008  F00C         	movff	i2toupper@c+1,??i2_toupper+3
 17922  005EE4  5009               	movf	??i2_toupper^0,w,c
 17923  005EE6  260B               	addwf	(??i2_toupper+2)^0,f,c
 17924  005EE8  500A               	movf	(??i2_toupper+1)^0,w,c
 17925  005EEA  220C               	addwfc	(??i2_toupper+3)^0,f,c
 17926  005EEC  500C               	movf	(??i2_toupper+3)^0,w,c
 17927  005EEE  E10A               	bnz	i2u869_40
 17928  005EF0  0E1A               	movlw	26
 17929  005EF2  5C0B               	subwf	(??i2_toupper+2)^0,w,c
 17930  005EF4  A0D8               	btfss	status,0,c
 17931  005EF6  EF7F  F02F         	goto	i2u869_41
 17932  005EFA  EF82  F02F         	goto	i2u869_40
 17933  005EFE                     i2u869_41:
 17934  005EFE  0E01               	movlw	1
 17935  005F00  EF83  F02F         	goto	i2u870_40
 17936  005F04                     i2u869_40:
 17937  005F04  0E00               	movlw	0
 17938  005F06                     i2u870_40:
 17939  005F06  6E0D               	movwf	i2_toupper$2397^0,c
 17940  005F08  6A0E               	clrf	(i2_toupper$2397+1)^0,c
 17941  005F0A  500D               	movf	i2_toupper$2397^0,w,c
 17942  005F0C  100E               	iorwf	(i2_toupper$2397+1)^0,w,c
 17943  005F0E  B4D8               	btfsc	status,2,c
 17944  005F10  EF8C  F02F         	goto	i2u871_41
 17945  005F14  EF8E  F02F         	goto	i2u871_40
 17946  005F18                     i2u871_41:
 17947  005F18  EF94  F02F         	goto	i2l1634
 17948  005F1C                     i2u871_40:
 17949  005F1C  0E5F               	movlw	95
 17950  005F1E  1407               	andwf	i2toupper@c^0,w,c
 17951  005F20  6E07               	movwf	?i2_toupper^0,c
 17952  005F22  6A08               	clrf	(?i2_toupper+1)^0,c
 17953  005F24  EF98  F02F         	goto	i2l1639
 17954  005F28                     i2l1634:
 17955  005F28  C007  F007         	movff	i2toupper@c,?i2_toupper
 17956  005F2C  C008  F008         	movff	i2toupper@c+1,?i2_toupper+1
 17957  005F30                     i2l1639:
 17958  005F30  0012               	return		;funcret
 17959  005F32                     __end_ofi2_toupper:
 17960                           	opt callstack 0
 17961                           
 17962 ;; *************** function i2_islower *****************
 17963 ;; Defined at:
 17964 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
 17965 ;; Parameters:    Size  Location     Type
 17966 ;;  c               2    0[COMRAM] int 
 17967 ;; Auto vars:     Size  Location     Type
 17968 ;;		None
 17969 ;; Return value:  Size  Location     Type
 17970 ;;                  2    0[COMRAM] int 
 17971 ;; Registers used:
 17972 ;;		wreg, status,2, status,0
 17973 ;; Tracked objects:
 17974 ;;		On entry : 0/0
 17975 ;;		On exit  : 0/0
 17976 ;;		Unchanged: 0/0
 17977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17978 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17980 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17981 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17982 ;;Total ram usage:        6 bytes
 17983 ;; Hardware stack levels used:    1
 17984 ;; This function calls:
 17985 ;;		Nothing
 17986 ;; This function is called by:
 17987 ;;		i2_toupper
 17988 ;; This function uses a non-reentrant model
 17989 ;;
 17990                           
 17991                           	psect	text76
 17992  0064D6                     __ptext76:
 17993                           	opt callstack 0
 17994  0064D6                     i2_islower:
 17995                           	opt callstack 11
 17996  0064D6  0E9F               	movlw	159
 17997  0064D8  6E03               	movwf	??i2_islower^0,c
 17998  0064DA  0EFF               	movlw	255
 17999  0064DC  6E04               	movwf	(??i2_islower+1)^0,c
 18000  0064DE  C001  F005         	movff	i2islower@c,??i2_islower+2
 18001  0064E2  C002  F006         	movff	i2islower@c+1,??i2_islower+3
 18002  0064E6  5003               	movf	??i2_islower^0,w,c
 18003  0064E8  2605               	addwf	(??i2_islower+2)^0,f,c
 18004  0064EA  5004               	movf	(??i2_islower+1)^0,w,c
 18005  0064EC  2206               	addwfc	(??i2_islower+3)^0,f,c
 18006  0064EE  5006               	movf	(??i2_islower+3)^0,w,c
 18007  0064F0  E10A               	bnz	i2u830_40
 18008  0064F2  0E1A               	movlw	26
 18009  0064F4  5C05               	subwf	(??i2_islower+2)^0,w,c
 18010  0064F6  A0D8               	btfss	status,0,c
 18011  0064F8  EF80  F032         	goto	i2u830_41
 18012  0064FC  EF83  F032         	goto	i2u830_40
 18013  006500                     i2u830_41:
 18014  006500  0E01               	movlw	1
 18015  006502  EF84  F032         	goto	i2u831_40
 18016  006506                     i2u830_40:
 18017  006506  0E00               	movlw	0
 18018  006508                     i2u831_40:
 18019  006508  6E01               	movwf	?i2_islower^0,c
 18020  00650A  6A02               	clrf	(?i2_islower+1)^0,c
 18021  00650C  0012               	return		;funcret
 18022  00650E                     __end_ofi2_islower:
 18023                           	opt callstack 0
 18024                           
 18025 ;; *************** function i2_isupper *****************
 18026 ;; Defined at:
 18027 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 18028 ;; Parameters:    Size  Location     Type
 18029 ;;  c               2    0[COMRAM] int 
 18030 ;; Auto vars:     Size  Location     Type
 18031 ;;		None
 18032 ;; Return value:  Size  Location     Type
 18033 ;;                  2    0[COMRAM] int 
 18034 ;; Registers used:
 18035 ;;		wreg, status,2, status,0
 18036 ;; Tracked objects:
 18037 ;;		On entry : 0/0
 18038 ;;		On exit  : 0/0
 18039 ;;		Unchanged: 0/0
 18040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18041 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18043 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18044 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18045 ;;Total ram usage:        6 bytes
 18046 ;; Hardware stack levels used:    1
 18047 ;; This function calls:
 18048 ;;		Nothing
 18049 ;; This function is called by:
 18050 ;;		i2_xtoa
 18051 ;; This function uses a non-reentrant model
 18052 ;;
 18053                           
 18054                           	psect	text77
 18055  00650E                     __ptext77:
 18056                           	opt callstack 0
 18057  00650E                     i2_isupper:
 18058                           	opt callstack 12
 18059  00650E  0EBF               	movlw	191
 18060  006510  6E03               	movwf	??i2_isupper^0,c
 18061  006512  0EFF               	movlw	255
 18062  006514  6E04               	movwf	(??i2_isupper+1)^0,c
 18063  006516  C001  F005         	movff	i2isupper@c,??i2_isupper+2
 18064  00651A  C002  F006         	movff	i2isupper@c+1,??i2_isupper+3
 18065  00651E  5003               	movf	??i2_isupper^0,w,c
 18066  006520  2605               	addwf	(??i2_isupper+2)^0,f,c
 18067  006522  5004               	movf	(??i2_isupper+1)^0,w,c
 18068  006524  2206               	addwfc	(??i2_isupper+3)^0,f,c
 18069  006526  5006               	movf	(??i2_isupper+3)^0,w,c
 18070  006528  E10A               	bnz	i2u867_40
 18071  00652A  0E1A               	movlw	26
 18072  00652C  5C05               	subwf	(??i2_isupper+2)^0,w,c
 18073  00652E  A0D8               	btfss	status,0,c
 18074  006530  EF9C  F032         	goto	i2u867_41
 18075  006534  EF9F  F032         	goto	i2u867_40
 18076  006538                     i2u867_41:
 18077  006538  0E01               	movlw	1
 18078  00653A  EFA0  F032         	goto	i2u868_40
 18079  00653E                     i2u867_40:
 18080  00653E  0E00               	movlw	0
 18081  006540                     i2u868_40:
 18082  006540  6E01               	movwf	?i2_isupper^0,c
 18083  006542  6A02               	clrf	(?i2_isupper+1)^0,c
 18084  006544  0012               	return		;funcret
 18085  006546                     __end_ofi2_isupper:
 18086                           	opt callstack 0
 18087                           
 18088 ;; *************** function i2_isalpha *****************
 18089 ;; Defined at:
 18090 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
 18091 ;; Parameters:    Size  Location     Type
 18092 ;;  c               2    0[COMRAM] int 
 18093 ;; Auto vars:     Size  Location     Type
 18094 ;;		None
 18095 ;; Return value:  Size  Location     Type
 18096 ;;                  2    0[COMRAM] int 
 18097 ;; Registers used:
 18098 ;;		wreg, status,2, status,0
 18099 ;; Tracked objects:
 18100 ;;		On entry : 0/0
 18101 ;;		On exit  : 0/0
 18102 ;;		Unchanged: 0/0
 18103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18104 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18106 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18107 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18108 ;;Total ram usage:        6 bytes
 18109 ;; Hardware stack levels used:    1
 18110 ;; This function calls:
 18111 ;;		Nothing
 18112 ;; This function is called by:
 18113 ;;		i2_xtoa
 18114 ;; This function uses a non-reentrant model
 18115 ;;
 18116                           
 18117                           	psect	text78
 18118  00637A                     __ptext78:
 18119                           	opt callstack 0
 18120  00637A                     i2_isalpha:
 18121                           	opt callstack 12
 18122  00637A  0E9F               	movlw	159
 18123  00637C  6E03               	movwf	??i2_isalpha^0,c
 18124  00637E  0EFF               	movlw	255
 18125  006380  6E04               	movwf	(??i2_isalpha+1)^0,c
 18126  006382  0E20               	movlw	32
 18127  006384  1001               	iorwf	i2isalpha@c^0,w,c
 18128  006386  6E05               	movwf	(??i2_isalpha+2)^0,c
 18129  006388  0E00               	movlw	0
 18130  00638A  1002               	iorwf	(i2isalpha@c+1)^0,w,c
 18131  00638C  6E06               	movwf	(??i2_isalpha+3)^0,c
 18132  00638E  5003               	movf	??i2_isalpha^0,w,c
 18133  006390  2605               	addwf	(??i2_isalpha+2)^0,f,c
 18134  006392  5004               	movf	(??i2_isalpha+1)^0,w,c
 18135  006394  2206               	addwfc	(??i2_isalpha+3)^0,f,c
 18136  006396  5006               	movf	(??i2_isalpha+3)^0,w,c
 18137  006398  E10A               	bnz	i2u861_40
 18138  00639A  0E1A               	movlw	26
 18139  00639C  5C05               	subwf	(??i2_isalpha+2)^0,w,c
 18140  00639E  A0D8               	btfss	status,0,c
 18141  0063A0  EFD4  F031         	goto	i2u861_41
 18142  0063A4  EFD7  F031         	goto	i2u861_40
 18143  0063A8                     i2u861_41:
 18144  0063A8  0E01               	movlw	1
 18145  0063AA  EFD8  F031         	goto	i2u862_40
 18146  0063AE                     i2u861_40:
 18147  0063AE  0E00               	movlw	0
 18148  0063B0                     i2u862_40:
 18149  0063B0  6E01               	movwf	?i2_isalpha^0,c
 18150  0063B2  6A02               	clrf	(?i2_isalpha+1)^0,c
 18151  0063B4  0012               	return		;funcret
 18152  0063B6                     __end_ofi2_isalpha:
 18153                           	opt callstack 0
 18154                           
 18155 ;; *************** function i2_utoa *****************
 18156 ;; Defined at:
 18157 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 18158 ;; Parameters:    Size  Location     Type
 18159 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 18160 ;;		 -> vsnprintf@f(6), NULL(0), 
 18161 ;;  d               8   31[COMRAM] unsigned long long 
 18162 ;; Auto vars:     Size  Location     Type
 18163 ;;  utoa            8   51[COMRAM] unsigned long long 
 18164 ;;  utoa            2   59[COMRAM] int 
 18165 ;;  utoa            2   49[COMRAM] int 
 18166 ;;  utoa            2   47[COMRAM] int 
 18167 ;; Return value:  Size  Location     Type
 18168 ;;                  2   29[COMRAM] int 
 18169 ;; Registers used:
 18170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18171 ;; Tracked objects:
 18172 ;;		On entry : 0/0
 18173 ;;		On exit  : 0/0
 18174 ;;		Unchanged: 0/0
 18175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18176 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18177 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18178 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18179 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18180 ;;Total ram usage:       32 bytes
 18181 ;; Hardware stack levels used:    1
 18182 ;; Hardware stack levels required when called:    5
 18183 ;; This function calls:
 18184 ;;		i2___lodiv
 18185 ;;		i2___lomod
 18186 ;;		i2_pad
 18187 ;; This function is called by:
 18188 ;;		i2_vfpfcnvrt
 18189 ;; This function uses a non-reentrant model
 18190 ;;
 18191                           
 18192                           	psect	text79
 18193  003C44                     __ptext79:
 18194                           	opt callstack 0
 18195  003C44                     i2_utoa:
 18196                           	opt callstack 8
 18197  003C44                     
 18198                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
 18199  003C44  0100               	movlb	0	; () banked
 18200  003C46  BFBC               	btfsc	(_prec+1)& (0+255),7,b
 18201  003C48  EF28  F01E         	goto	i2u911_41
 18202  003C4C  EF2A  F01E         	goto	i2u911_40
 18203  003C50                     i2u911_41:
 18204  003C50  EF2B  F01E         	goto	i2l7597
 18205  003C54                     i2u911_40:
 18206  003C54                     
 18207                           ; BSR set to: 0
 18208                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
 18209  003C54  93BD               	bcf	_flags& (0+255),1,b
 18210  003C56                     i2l7597:
 18211                           
 18212                           ; BSR set to: 0
 18213                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
 18214  003C56  BFBC               	btfsc	(_prec+1)& (0+255),7,b
 18215  003C58  EF38  F01E         	goto	i2u912_40
 18216  003C5C  51BC               	movf	(_prec+1)& (0+255),w,b
 18217  003C5E  E106               	bnz	i2u912_41
 18218  003C60  05BB               	decf	_prec& (0+255),w,b
 18219  003C62  B0D8               	btfsc	status,0,c
 18220  003C64  EF36  F01E         	goto	i2u912_41
 18221  003C68  EF38  F01E         	goto	i2u912_40
 18222  003C6C                     i2u912_41:
 18223  003C6C  EF3E  F01E         	goto	i2l720
 18224  003C70                     i2u912_40:
 18225  003C70                     
 18226                           ; BSR set to: 0
 18227  003C70  0E00               	movlw	0
 18228  003C72  6E31               	movwf	(i2utoa@p+1)^0,c
 18229  003C74  0E01               	movlw	1
 18230  003C76  6E30               	movwf	i2utoa@p^0,c
 18231  003C78  EF42  F01E         	goto	i2l722
 18232  003C7C                     i2l720:
 18233                           
 18234                           ; BSR set to: 0
 18235  003C7C  C0BB  F030         	movff	_prec,i2utoa@p
 18236  003C80  C0BC  F031         	movff	_prec+1,i2utoa@p+1
 18237  003C84                     i2l722:
 18238                           
 18239                           ; BSR set to: 0
 18240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
 18241  003C84  C0B9  F032         	movff	_width,i2utoa@w
 18242  003C88  C0BA  F033         	movff	_width+1,i2utoa@w+1
 18243                           
 18244                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
 18245  003C8C  C020  F034         	movff	i2utoa@d,i2utoa@n
 18246  003C90  C021  F035         	movff	i2utoa@d+1,i2utoa@n+1
 18247  003C94  C022  F036         	movff	i2utoa@d+2,i2utoa@n+2
 18248  003C98  C023  F037         	movff	i2utoa@d+3,i2utoa@n+3
 18249  003C9C  C024  F038         	movff	i2utoa@d+4,i2utoa@n+4
 18250  003CA0  C025  F039         	movff	i2utoa@d+5,i2utoa@n+5
 18251  003CA4  C026  F03A         	movff	i2utoa@d+6,i2utoa@n+6
 18252  003CA8  C027  F03B         	movff	i2utoa@d+7,i2utoa@n+7
 18253  003CAC                     
 18254                           ; BSR set to: 0
 18255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
 18256  003CAC  0E00               	movlw	0
 18257  003CAE  6E3D               	movwf	(i2utoa@i+1)^0,c
 18258  003CB0  0E1F               	movlw	31
 18259  003CB2  6E3C               	movwf	i2utoa@i^0,c
 18260  003CB4                     
 18261                           ; BSR set to: 0
 18262                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
 18263  003CB4  0E00               	movlw	0
 18264  003CB6  0101               	movlb	1	; () banked
 18265  003CB8  6F97               	movwf	(_dbuf+31)& (0+255),b
 18266                           
 18267                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18268  003CBA  EFD5  F01E         	goto	i2l7615
 18269  003CBE                     i2l7605:
 18270                           
 18271                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
 18272  003CBE  063C               	decf	i2utoa@i^0,f,c
 18273  003CC0  A0D8               	btfss	status,0,c
 18274  003CC2  063D               	decf	(i2utoa@i+1)^0,f,c
 18275  003CC4                     
 18276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
 18277  003CC4  0E78               	movlw	low _dbuf
 18278  003CC6  243C               	addwf	i2utoa@i^0,w,c
 18279  003CC8  6ED9               	movwf	fsr2l,c
 18280  003CCA  0E01               	movlw	high _dbuf
 18281  003CCC  203D               	addwfc	(i2utoa@i+1)^0,w,c
 18282  003CCE  6EDA               	movwf	fsr2h,c
 18283  003CD0  C034  F001         	movff	i2utoa@n,i2___lomod@dividend
 18284  003CD4  C035  F002         	movff	i2utoa@n+1,i2___lomod@dividend+1
 18285  003CD8  C036  F003         	movff	i2utoa@n+2,i2___lomod@dividend+2
 18286  003CDC  C037  F004         	movff	i2utoa@n+3,i2___lomod@dividend+3
 18287  003CE0  C038  F005         	movff	i2utoa@n+4,i2___lomod@dividend+4
 18288  003CE4  C039  F006         	movff	i2utoa@n+5,i2___lomod@dividend+5
 18289  003CE8  C03A  F007         	movff	i2utoa@n+6,i2___lomod@dividend+6
 18290  003CEC  C03B  F008         	movff	i2utoa@n+7,i2___lomod@dividend+7
 18291  003CF0  0E0A               	movlw	10
 18292  003CF2  6E09               	movwf	i2___lomod@divisor^0,c
 18293  003CF4  0E00               	movlw	0
 18294  003CF6  6E0A               	movwf	(i2___lomod@divisor+1)^0,c
 18295  003CF8  0E00               	movlw	0
 18296  003CFA  6E0B               	movwf	(i2___lomod@divisor+2)^0,c
 18297  003CFC  0E00               	movlw	0
 18298  003CFE  6E0C               	movwf	(i2___lomod@divisor+3)^0,c
 18299  003D00  0E00               	movlw	0
 18300  003D02  6E0D               	movwf	(i2___lomod@divisor+4)^0,c
 18301  003D04  0E00               	movlw	0
 18302  003D06  6E0E               	movwf	(i2___lomod@divisor+5)^0,c
 18303  003D08  0E00               	movlw	0
 18304  003D0A  6E0F               	movwf	(i2___lomod@divisor+6)^0,c
 18305  003D0C  0E00               	movlw	0
 18306  003D0E  6E10               	movwf	(i2___lomod@divisor+7)^0,c
 18307  003D10  EC47  F02B         	call	i2___lomod	;wreg free
 18308  003D14  C001  F028         	movff	?i2___lomod,??i2_utoa
 18309  003D18  C002  F029         	movff	?i2___lomod+1,??i2_utoa+1
 18310  003D1C  C003  F02A         	movff	?i2___lomod+2,??i2_utoa+2
 18311  003D20  C004  F02B         	movff	?i2___lomod+3,??i2_utoa+3
 18312  003D24  C005  F02C         	movff	?i2___lomod+4,??i2_utoa+4
 18313  003D28  C006  F02D         	movff	?i2___lomod+5,??i2_utoa+5
 18314  003D2C  C007  F02E         	movff	?i2___lomod+6,??i2_utoa+6
 18315  003D30  C008  F02F         	movff	?i2___lomod+7,??i2_utoa+7
 18316  003D34  5028               	movf	??i2_utoa^0,w,c
 18317  003D36  0F30               	addlw	48
 18318  003D38  6EDF               	movwf	indf2,c
 18319  003D3A                     
 18320                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
 18321  003D3A  0630               	decf	i2utoa@p^0,f,c
 18322  003D3C  A0D8               	btfss	status,0,c
 18323  003D3E  0631               	decf	(i2utoa@p+1)^0,f,c
 18324  003D40                     
 18325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
 18326  003D40  0632               	decf	i2utoa@w^0,f,c
 18327  003D42  A0D8               	btfss	status,0,c
 18328  003D44  0633               	decf	(i2utoa@w+1)^0,f,c
 18329  003D46                     
 18330                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
 18331  003D46  C034  F001         	movff	i2utoa@n,i2___lodiv@dividend
 18332  003D4A  C035  F002         	movff	i2utoa@n+1,i2___lodiv@dividend+1
 18333  003D4E  C036  F003         	movff	i2utoa@n+2,i2___lodiv@dividend+2
 18334  003D52  C037  F004         	movff	i2utoa@n+3,i2___lodiv@dividend+3
 18335  003D56  C038  F005         	movff	i2utoa@n+4,i2___lodiv@dividend+4
 18336  003D5A  C039  F006         	movff	i2utoa@n+5,i2___lodiv@dividend+5
 18337  003D5E  C03A  F007         	movff	i2utoa@n+6,i2___lodiv@dividend+6
 18338  003D62  C03B  F008         	movff	i2utoa@n+7,i2___lodiv@dividend+7
 18339  003D66  0E0A               	movlw	10
 18340  003D68  6E09               	movwf	i2___lodiv@divisor^0,c
 18341  003D6A  0E00               	movlw	0
 18342  003D6C  6E0A               	movwf	(i2___lodiv@divisor+1)^0,c
 18343  003D6E  0E00               	movlw	0
 18344  003D70  6E0B               	movwf	(i2___lodiv@divisor+2)^0,c
 18345  003D72  0E00               	movlw	0
 18346  003D74  6E0C               	movwf	(i2___lodiv@divisor+3)^0,c
 18347  003D76  0E00               	movlw	0
 18348  003D78  6E0D               	movwf	(i2___lodiv@divisor+4)^0,c
 18349  003D7A  0E00               	movlw	0
 18350  003D7C  6E0E               	movwf	(i2___lodiv@divisor+5)^0,c
 18351  003D7E  0E00               	movlw	0
 18352  003D80  6E0F               	movwf	(i2___lodiv@divisor+6)^0,c
 18353  003D82  0E00               	movlw	0
 18354  003D84  6E10               	movwf	(i2___lodiv@divisor+7)^0,c
 18355  003D86  EC7B  F029         	call	i2___lodiv	;wreg free
 18356  003D8A  C001  F034         	movff	?i2___lodiv,i2utoa@n
 18357  003D8E  C002  F035         	movff	?i2___lodiv+1,i2utoa@n+1
 18358  003D92  C003  F036         	movff	?i2___lodiv+2,i2utoa@n+2
 18359  003D96  C004  F037         	movff	?i2___lodiv+3,i2utoa@n+3
 18360  003D9A  C005  F038         	movff	?i2___lodiv+4,i2utoa@n+4
 18361  003D9E  C006  F039         	movff	?i2___lodiv+5,i2utoa@n+5
 18362  003DA2  C007  F03A         	movff	?i2___lodiv+6,i2utoa@n+6
 18363  003DA6  C008  F03B         	movff	?i2___lodiv+7,i2utoa@n+7
 18364  003DAA                     i2l7615:
 18365                           
 18366                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18367  003DAA  503C               	movf	i2utoa@i^0,w,c
 18368  003DAC  103D               	iorwf	(i2utoa@i+1)^0,w,c
 18369  003DAE  B4D8               	btfsc	status,2,c
 18370  003DB0  EFDC  F01E         	goto	i2u913_41
 18371  003DB4  EFDE  F01E         	goto	i2u913_40
 18372  003DB8                     i2u913_41:
 18373  003DB8  EF0F  F01F         	goto	i2l7625
 18374  003DBC                     i2u913_40:
 18375  003DBC  5034               	movf	i2utoa@n^0,w,c
 18376  003DBE  1035               	iorwf	(i2utoa@n+1)^0,w,c
 18377  003DC0  1036               	iorwf	(i2utoa@n+2)^0,w,c
 18378  003DC2  1037               	iorwf	(i2utoa@n+3)^0,w,c
 18379  003DC4  1038               	iorwf	(i2utoa@n+4)^0,w,c
 18380  003DC6  1039               	iorwf	(i2utoa@n+5)^0,w,c
 18381  003DC8  103A               	iorwf	(i2utoa@n+6)^0,w,c
 18382  003DCA  103B               	iorwf	(i2utoa@n+7)^0,w,c
 18383  003DCC  A4D8               	btfss	status,2,c
 18384  003DCE  EFEB  F01E         	goto	i2u914_41
 18385  003DD2  EFED  F01E         	goto	i2u914_40
 18386  003DD6                     i2u914_41:
 18387  003DD6  EF5F  F01E         	goto	i2l7605
 18388  003DDA                     i2u914_40:
 18389  003DDA  BE31               	btfsc	(i2utoa@p+1)^0,7,c
 18390  003DDC  EFFA  F01E         	goto	i2u915_40
 18391  003DE0  5031               	movf	(i2utoa@p+1)^0,w,c
 18392  003DE2  E106               	bnz	i2u915_41
 18393  003DE4  0430               	decf	i2utoa@p^0,w,c
 18394  003DE6  B0D8               	btfsc	status,0,c
 18395  003DE8  EFF8  F01E         	goto	i2u915_41
 18396  003DEC  EFFA  F01E         	goto	i2u915_40
 18397  003DF0                     i2u915_41:
 18398  003DF0  EF5F  F01E         	goto	i2l7605
 18399  003DF4                     i2u915_40:
 18400  003DF4  BE33               	btfsc	(i2utoa@w+1)^0,7,c
 18401  003DF6  EF05  F01F         	goto	i2u916_41
 18402  003DFA  5033               	movf	(i2utoa@w+1)^0,w,c
 18403  003DFC  E108               	bnz	i2u916_40
 18404  003DFE  0432               	decf	i2utoa@w^0,w,c
 18405  003E00  A0D8               	btfss	status,0,c
 18406  003E02  EF05  F01F         	goto	i2u916_41
 18407  003E06  EF07  F01F         	goto	i2u916_40
 18408  003E0A                     i2u916_41:
 18409  003E0A  EF0F  F01F         	goto	i2l7625
 18410  003E0E                     i2u916_40:
 18411  003E0E  0100               	movlb	0	; () banked
 18412  003E10  B3BD               	btfsc	_flags& (0+255),1,b
 18413  003E12  EF0D  F01F         	goto	i2u917_41
 18414  003E16  EF0F  F01F         	goto	i2u917_40
 18415  003E1A                     i2u917_41:
 18416  003E1A  EF5F  F01E         	goto	i2l7605
 18417  003E1E                     i2u917_40:
 18418  003E1E                     i2l7625:
 18419                           
 18420                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
 18421  003E1E  C01E  F013         	movff	i2utoa@fp,i2pad@fp
 18422  003E22  C01F  F014         	movff	i2utoa@fp+1,i2pad@fp+1
 18423  003E26  0E78               	movlw	low _dbuf
 18424  003E28  243C               	addwf	i2utoa@i^0,w,c
 18425  003E2A  6E15               	movwf	i2pad@buf^0,c
 18426  003E2C  0E01               	movlw	high _dbuf
 18427  003E2E  203D               	addwfc	(i2utoa@i+1)^0,w,c
 18428  003E30  6E16               	movwf	(i2pad@buf+1)^0,c
 18429  003E32  C032  F017         	movff	i2utoa@w,i2pad@p
 18430  003E36  C033  F018         	movff	i2utoa@w+1,i2pad@p+1
 18431  003E3A  ECDF  F02C         	call	i2_pad	;wreg free
 18432  003E3E  C013  F01E         	movff	?i2_pad,?i2_utoa
 18433  003E42  C014  F01F         	movff	?i2_pad+1,?i2_utoa+1
 18434  003E46  0012               	return		;funcret
 18435  003E48                     __end_ofi2_utoa:
 18436                           	opt callstack 0
 18437                           
 18438 ;; *************** function i2___lomod *****************
 18439 ;; Defined at:
 18440 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
 18441 ;; Parameters:    Size  Location     Type
 18442 ;;  dividend        8    0[COMRAM] unsigned long long 
 18443 ;;  divisor         8    8[COMRAM] unsigned long long 
 18444 ;; Auto vars:     Size  Location     Type
 18445 ;;  __lomod         1   16[COMRAM] unsigned char 
 18446 ;; Return value:  Size  Location     Type
 18447 ;;                  8    0[COMRAM] unsigned long long 
 18448 ;; Registers used:
 18449 ;;		wreg, status,2, status,0
 18450 ;; Tracked objects:
 18451 ;;		On entry : 0/0
 18452 ;;		On exit  : 0/0
 18453 ;;		Unchanged: 0/0
 18454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18455 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18456 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18458 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18459 ;;Total ram usage:       17 bytes
 18460 ;; Hardware stack levels used:    1
 18461 ;; This function calls:
 18462 ;;		Nothing
 18463 ;; This function is called by:
 18464 ;;		i2_utoa
 18465 ;; This function uses a non-reentrant model
 18466 ;;
 18467                           
 18468                           	psect	text80
 18469  00568E                     __ptext80:
 18470                           	opt callstack 0
 18471  00568E                     i2___lomod:
 18472                           	opt callstack 12
 18473  00568E  5009               	movf	i2___lomod@divisor^0,w,c
 18474  005690  100A               	iorwf	(i2___lomod@divisor+1)^0,w,c
 18475  005692  100B               	iorwf	(i2___lomod@divisor+2)^0,w,c
 18476  005694  100C               	iorwf	(i2___lomod@divisor+3)^0,w,c
 18477  005696  100D               	iorwf	(i2___lomod@divisor+4)^0,w,c
 18478  005698  100E               	iorwf	(i2___lomod@divisor+5)^0,w,c
 18479  00569A  100F               	iorwf	(i2___lomod@divisor+6)^0,w,c
 18480  00569C  1010               	iorwf	(i2___lomod@divisor+7)^0,w,c
 18481  00569E  B4D8               	btfsc	status,2,c
 18482  0056A0  EF54  F02B         	goto	i2u857_41
 18483  0056A4  EF56  F02B         	goto	i2u857_40
 18484  0056A8                     i2u857_41:
 18485  0056A8  EF9E  F02B         	goto	i2l1293
 18486  0056AC                     i2u857_40:
 18487  0056AC  0E01               	movlw	1
 18488  0056AE  6E11               	movwf	i2___lomod@counter^0,c
 18489  0056B0  EF64  F02B         	goto	i2l7357
 18490  0056B4                     i2l7355:
 18491  0056B4  90D8               	bcf	status,0,c
 18492  0056B6  3609               	rlcf	i2___lomod@divisor^0,f,c
 18493  0056B8  360A               	rlcf	(i2___lomod@divisor+1)^0,f,c
 18494  0056BA  360B               	rlcf	(i2___lomod@divisor+2)^0,f,c
 18495  0056BC  360C               	rlcf	(i2___lomod@divisor+3)^0,f,c
 18496  0056BE  360D               	rlcf	(i2___lomod@divisor+4)^0,f,c
 18497  0056C0  360E               	rlcf	(i2___lomod@divisor+5)^0,f,c
 18498  0056C2  360F               	rlcf	(i2___lomod@divisor+6)^0,f,c
 18499  0056C4  3610               	rlcf	(i2___lomod@divisor+7)^0,f,c
 18500  0056C6  2A11               	incf	i2___lomod@counter^0,f,c
 18501  0056C8                     i2l7357:
 18502  0056C8  AE10               	btfss	(i2___lomod@divisor+7)^0,7,c
 18503  0056CA  EF69  F02B         	goto	i2u858_41
 18504  0056CE  EF6B  F02B         	goto	i2u858_40
 18505  0056D2                     i2u858_41:
 18506  0056D2  EF5A  F02B         	goto	i2l7355
 18507  0056D6                     i2u858_40:
 18508  0056D6                     i2l7359:
 18509  0056D6  5009               	movf	i2___lomod@divisor^0,w,c
 18510  0056D8  5C01               	subwf	i2___lomod@dividend^0,w,c
 18511  0056DA  500A               	movf	(i2___lomod@divisor+1)^0,w,c
 18512  0056DC  5802               	subwfb	(i2___lomod@dividend+1)^0,w,c
 18513  0056DE  500B               	movf	(i2___lomod@divisor+2)^0,w,c
 18514  0056E0  5803               	subwfb	(i2___lomod@dividend+2)^0,w,c
 18515  0056E2  500C               	movf	(i2___lomod@divisor+3)^0,w,c
 18516  0056E4  5804               	subwfb	(i2___lomod@dividend+3)^0,w,c
 18517  0056E6  500D               	movf	(i2___lomod@divisor+4)^0,w,c
 18518  0056E8  5805               	subwfb	(i2___lomod@dividend+4)^0,w,c
 18519  0056EA  500E               	movf	(i2___lomod@divisor+5)^0,w,c
 18520  0056EC  5806               	subwfb	(i2___lomod@dividend+5)^0,w,c
 18521  0056EE  500F               	movf	(i2___lomod@divisor+6)^0,w,c
 18522  0056F0  5807               	subwfb	(i2___lomod@dividend+6)^0,w,c
 18523  0056F2  5010               	movf	(i2___lomod@divisor+7)^0,w,c
 18524  0056F4  5808               	subwfb	(i2___lomod@dividend+7)^0,w,c
 18525  0056F6  A0D8               	btfss	status,0,c
 18526  0056F8  EF80  F02B         	goto	i2u859_41
 18527  0056FC  EF82  F02B         	goto	i2u859_40
 18528  005700                     i2u859_41:
 18529  005700  EF92  F02B         	goto	i2l7363
 18530  005704                     i2u859_40:
 18531  005704  5009               	movf	i2___lomod@divisor^0,w,c
 18532  005706  5E01               	subwf	i2___lomod@dividend^0,f,c
 18533  005708  500A               	movf	(i2___lomod@divisor+1)^0,w,c
 18534  00570A  5A02               	subwfb	(i2___lomod@dividend+1)^0,f,c
 18535  00570C  500B               	movf	(i2___lomod@divisor+2)^0,w,c
 18536  00570E  5A03               	subwfb	(i2___lomod@dividend+2)^0,f,c
 18537  005710  500C               	movf	(i2___lomod@divisor+3)^0,w,c
 18538  005712  5A04               	subwfb	(i2___lomod@dividend+3)^0,f,c
 18539  005714  500D               	movf	(i2___lomod@divisor+4)^0,w,c
 18540  005716  5A05               	subwfb	(i2___lomod@dividend+4)^0,f,c
 18541  005718  500E               	movf	(i2___lomod@divisor+5)^0,w,c
 18542  00571A  5A06               	subwfb	(i2___lomod@dividend+5)^0,f,c
 18543  00571C  500F               	movf	(i2___lomod@divisor+6)^0,w,c
 18544  00571E  5A07               	subwfb	(i2___lomod@dividend+6)^0,f,c
 18545  005720  5010               	movf	(i2___lomod@divisor+7)^0,w,c
 18546  005722  5A08               	subwfb	(i2___lomod@dividend+7)^0,f,c
 18547  005724                     i2l7363:
 18548  005724  90D8               	bcf	status,0,c
 18549  005726  3210               	rrcf	(i2___lomod@divisor+7)^0,f,c
 18550  005728  320F               	rrcf	(i2___lomod@divisor+6)^0,f,c
 18551  00572A  320E               	rrcf	(i2___lomod@divisor+5)^0,f,c
 18552  00572C  320D               	rrcf	(i2___lomod@divisor+4)^0,f,c
 18553  00572E  320C               	rrcf	(i2___lomod@divisor+3)^0,f,c
 18554  005730  320B               	rrcf	(i2___lomod@divisor+2)^0,f,c
 18555  005732  320A               	rrcf	(i2___lomod@divisor+1)^0,f,c
 18556  005734  3209               	rrcf	i2___lomod@divisor^0,f,c
 18557  005736  2E11               	decfsz	i2___lomod@counter^0,f,c
 18558  005738  EF6B  F02B         	goto	i2l7359
 18559  00573C                     i2l1293:
 18560  00573C  C001  F001         	movff	i2___lomod@dividend,?i2___lomod
 18561  005740  C002  F002         	movff	i2___lomod@dividend+1,?i2___lomod+1
 18562  005744  C003  F003         	movff	i2___lomod@dividend+2,?i2___lomod+2
 18563  005748  C004  F004         	movff	i2___lomod@dividend+3,?i2___lomod+3
 18564  00574C  C005  F005         	movff	i2___lomod@dividend+4,?i2___lomod+4
 18565  005750  C006  F006         	movff	i2___lomod@dividend+5,?i2___lomod+5
 18566  005754  C007  F007         	movff	i2___lomod@dividend+6,?i2___lomod+6
 18567  005758  C008  F008         	movff	i2___lomod@dividend+7,?i2___lomod+7
 18568  00575C  0012               	return		;funcret
 18569  00575E                     __end_ofi2___lomod:
 18570                           	opt callstack 0
 18571                           
 18572 ;; *************** function i2___lodiv *****************
 18573 ;; Defined at:
 18574 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
 18575 ;; Parameters:    Size  Location     Type
 18576 ;;  dividend        8    0[COMRAM] unsigned long long 
 18577 ;;  divisor         8    8[COMRAM] unsigned long long 
 18578 ;; Auto vars:     Size  Location     Type
 18579 ;;  __lodiv         8   16[COMRAM] unsigned long long 
 18580 ;;  __lodiv         1   24[COMRAM] unsigned char 
 18581 ;; Return value:  Size  Location     Type
 18582 ;;                  8    0[COMRAM] unsigned long long 
 18583 ;; Registers used:
 18584 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18585 ;; Tracked objects:
 18586 ;;		On entry : 0/0
 18587 ;;		On exit  : 0/0
 18588 ;;		Unchanged: 0/0
 18589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18590 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18591 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18593 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18594 ;;Total ram usage:       25 bytes
 18595 ;; Hardware stack levels used:    1
 18596 ;; This function calls:
 18597 ;;		Nothing
 18598 ;; This function is called by:
 18599 ;;		i2_utoa
 18600 ;; This function uses a non-reentrant model
 18601 ;;
 18602                           
 18603                           	psect	text81
 18604  0052F6                     __ptext81:
 18605                           	opt callstack 0
 18606  0052F6                     i2___lodiv:
 18607                           	opt callstack 12
 18608  0052F6  EE20  F011         	lfsr	2,i2___lodiv@quotient
 18609  0052FA  0E07               	movlw	7
 18610  0052FC                     i2u853_41:
 18611  0052FC  6ADE               	clrf	postinc2,c
 18612  0052FE  06E8               	decf	wreg,f,c
 18613  005300  E2FD               	bc	i2u853_41
 18614  005302  5009               	movf	i2___lodiv@divisor^0,w,c
 18615  005304  100A               	iorwf	(i2___lodiv@divisor+1)^0,w,c
 18616  005306  100B               	iorwf	(i2___lodiv@divisor+2)^0,w,c
 18617  005308  100C               	iorwf	(i2___lodiv@divisor+3)^0,w,c
 18618  00530A  100D               	iorwf	(i2___lodiv@divisor+4)^0,w,c
 18619  00530C  100E               	iorwf	(i2___lodiv@divisor+5)^0,w,c
 18620  00530E  100F               	iorwf	(i2___lodiv@divisor+6)^0,w,c
 18621  005310  1010               	iorwf	(i2___lodiv@divisor+7)^0,w,c
 18622  005312  B4D8               	btfsc	status,2,c
 18623  005314  EF8E  F029         	goto	i2u854_41
 18624  005318  EF90  F029         	goto	i2u854_40
 18625  00531C                     i2u854_41:
 18626  00531C  EFE2  F029         	goto	i2l1283
 18627  005320                     i2u854_40:
 18628  005320  0E01               	movlw	1
 18629  005322  6E19               	movwf	i2___lodiv@counter^0,c
 18630  005324  EF9E  F029         	goto	i2l7337
 18631  005328                     i2l7335:
 18632  005328  90D8               	bcf	status,0,c
 18633  00532A  3609               	rlcf	i2___lodiv@divisor^0,f,c
 18634  00532C  360A               	rlcf	(i2___lodiv@divisor+1)^0,f,c
 18635  00532E  360B               	rlcf	(i2___lodiv@divisor+2)^0,f,c
 18636  005330  360C               	rlcf	(i2___lodiv@divisor+3)^0,f,c
 18637  005332  360D               	rlcf	(i2___lodiv@divisor+4)^0,f,c
 18638  005334  360E               	rlcf	(i2___lodiv@divisor+5)^0,f,c
 18639  005336  360F               	rlcf	(i2___lodiv@divisor+6)^0,f,c
 18640  005338  3610               	rlcf	(i2___lodiv@divisor+7)^0,f,c
 18641  00533A  2A19               	incf	i2___lodiv@counter^0,f,c
 18642  00533C                     i2l7337:
 18643  00533C  AE10               	btfss	(i2___lodiv@divisor+7)^0,7,c
 18644  00533E  EFA3  F029         	goto	i2u855_41
 18645  005342  EFA5  F029         	goto	i2u855_40
 18646  005346                     i2u855_41:
 18647  005346  EF94  F029         	goto	i2l7335
 18648  00534A                     i2u855_40:
 18649  00534A                     i2l7339:
 18650  00534A  90D8               	bcf	status,0,c
 18651  00534C  3611               	rlcf	i2___lodiv@quotient^0,f,c
 18652  00534E  3612               	rlcf	(i2___lodiv@quotient+1)^0,f,c
 18653  005350  3613               	rlcf	(i2___lodiv@quotient+2)^0,f,c
 18654  005352  3614               	rlcf	(i2___lodiv@quotient+3)^0,f,c
 18655  005354  3615               	rlcf	(i2___lodiv@quotient+4)^0,f,c
 18656  005356  3616               	rlcf	(i2___lodiv@quotient+5)^0,f,c
 18657  005358  3617               	rlcf	(i2___lodiv@quotient+6)^0,f,c
 18658  00535A  3618               	rlcf	(i2___lodiv@quotient+7)^0,f,c
 18659  00535C  5009               	movf	i2___lodiv@divisor^0,w,c
 18660  00535E  5C01               	subwf	i2___lodiv@dividend^0,w,c
 18661  005360  500A               	movf	(i2___lodiv@divisor+1)^0,w,c
 18662  005362  5802               	subwfb	(i2___lodiv@dividend+1)^0,w,c
 18663  005364  500B               	movf	(i2___lodiv@divisor+2)^0,w,c
 18664  005366  5803               	subwfb	(i2___lodiv@dividend+2)^0,w,c
 18665  005368  500C               	movf	(i2___lodiv@divisor+3)^0,w,c
 18666  00536A  5804               	subwfb	(i2___lodiv@dividend+3)^0,w,c
 18667  00536C  500D               	movf	(i2___lodiv@divisor+4)^0,w,c
 18668  00536E  5805               	subwfb	(i2___lodiv@dividend+4)^0,w,c
 18669  005370  500E               	movf	(i2___lodiv@divisor+5)^0,w,c
 18670  005372  5806               	subwfb	(i2___lodiv@dividend+5)^0,w,c
 18671  005374  500F               	movf	(i2___lodiv@divisor+6)^0,w,c
 18672  005376  5807               	subwfb	(i2___lodiv@dividend+6)^0,w,c
 18673  005378  5010               	movf	(i2___lodiv@divisor+7)^0,w,c
 18674  00537A  5808               	subwfb	(i2___lodiv@dividend+7)^0,w,c
 18675  00537C  A0D8               	btfss	status,0,c
 18676  00537E  EFC3  F029         	goto	i2u856_41
 18677  005382  EFC5  F029         	goto	i2u856_40
 18678  005386                     i2u856_41:
 18679  005386  EFD6  F029         	goto	i2l7347
 18680  00538A                     i2u856_40:
 18681  00538A  5009               	movf	i2___lodiv@divisor^0,w,c
 18682  00538C  5E01               	subwf	i2___lodiv@dividend^0,f,c
 18683  00538E  500A               	movf	(i2___lodiv@divisor+1)^0,w,c
 18684  005390  5A02               	subwfb	(i2___lodiv@dividend+1)^0,f,c
 18685  005392  500B               	movf	(i2___lodiv@divisor+2)^0,w,c
 18686  005394  5A03               	subwfb	(i2___lodiv@dividend+2)^0,f,c
 18687  005396  500C               	movf	(i2___lodiv@divisor+3)^0,w,c
 18688  005398  5A04               	subwfb	(i2___lodiv@dividend+3)^0,f,c
 18689  00539A  500D               	movf	(i2___lodiv@divisor+4)^0,w,c
 18690  00539C  5A05               	subwfb	(i2___lodiv@dividend+4)^0,f,c
 18691  00539E  500E               	movf	(i2___lodiv@divisor+5)^0,w,c
 18692  0053A0  5A06               	subwfb	(i2___lodiv@dividend+5)^0,f,c
 18693  0053A2  500F               	movf	(i2___lodiv@divisor+6)^0,w,c
 18694  0053A4  5A07               	subwfb	(i2___lodiv@dividend+6)^0,f,c
 18695  0053A6  5010               	movf	(i2___lodiv@divisor+7)^0,w,c
 18696  0053A8  5A08               	subwfb	(i2___lodiv@dividend+7)^0,f,c
 18697  0053AA  8011               	bsf	i2___lodiv@quotient^0,0,c
 18698  0053AC                     i2l7347:
 18699  0053AC  90D8               	bcf	status,0,c
 18700  0053AE  3210               	rrcf	(i2___lodiv@divisor+7)^0,f,c
 18701  0053B0  320F               	rrcf	(i2___lodiv@divisor+6)^0,f,c
 18702  0053B2  320E               	rrcf	(i2___lodiv@divisor+5)^0,f,c
 18703  0053B4  320D               	rrcf	(i2___lodiv@divisor+4)^0,f,c
 18704  0053B6  320C               	rrcf	(i2___lodiv@divisor+3)^0,f,c
 18705  0053B8  320B               	rrcf	(i2___lodiv@divisor+2)^0,f,c
 18706  0053BA  320A               	rrcf	(i2___lodiv@divisor+1)^0,f,c
 18707  0053BC  3209               	rrcf	i2___lodiv@divisor^0,f,c
 18708  0053BE  2E19               	decfsz	i2___lodiv@counter^0,f,c
 18709  0053C0  EFA5  F029         	goto	i2l7339
 18710  0053C4                     i2l1283:
 18711  0053C4  C011  F001         	movff	i2___lodiv@quotient,?i2___lodiv
 18712  0053C8  C012  F002         	movff	i2___lodiv@quotient+1,?i2___lodiv+1
 18713  0053CC  C013  F003         	movff	i2___lodiv@quotient+2,?i2___lodiv+2
 18714  0053D0  C014  F004         	movff	i2___lodiv@quotient+3,?i2___lodiv+3
 18715  0053D4  C015  F005         	movff	i2___lodiv@quotient+4,?i2___lodiv+4
 18716  0053D8  C016  F006         	movff	i2___lodiv@quotient+5,?i2___lodiv+5
 18717  0053DC  C017  F007         	movff	i2___lodiv@quotient+6,?i2___lodiv+6
 18718  0053E0  C018  F008         	movff	i2___lodiv@quotient+7,?i2___lodiv+7
 18719  0053E4  0012               	return		;funcret
 18720  0053E6                     __end_ofi2___lodiv:
 18721                           	opt callstack 0
 18722                           
 18723 ;; *************** function i2_strncmp *****************
 18724 ;; Defined at:
 18725 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
 18726 ;; Parameters:    Size  Location     Type
 18727 ;;  _l              2    0[COMRAM] PTR const unsigned char 
 18728 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
 18729 ;;		 -> STR_4(22), STR_3(12), STR_1(13), 
 18730 ;;  _r              2    2[COMRAM] PTR const unsigned char 
 18731 ;;		 -> STR_105(3), STR_101(3), STR_96(3), STR_92(3), 
 18732 ;;		 -> STR_87(4), STR_83(4), STR_78(3), STR_73(3), 
 18733 ;;		 -> STR_68(4), STR_63(3), STR_58(3), STR_53(4), 
 18734 ;;		 -> STR_48(3), STR_43(3), STR_38(4), STR_33(3), 
 18735 ;;		 -> STR_29(3), STR_24(3), STR_20(3), STR_15(4), 
 18736 ;;		 -> STR_11(4), 
 18737 ;;  n               2    4[COMRAM] unsigned int 
 18738 ;; Auto vars:     Size  Location     Type
 18739 ;;  strncmp         2    9[COMRAM] PTR const unsigned char 
 18740 ;;		 -> STR_105(3), STR_101(3), STR_96(3), STR_92(3), 
 18741 ;;		 -> STR_87(4), STR_83(4), STR_78(3), STR_73(3), 
 18742 ;;		 -> STR_68(4), STR_63(3), STR_58(3), STR_53(4), 
 18743 ;;		 -> STR_48(3), STR_43(3), STR_38(4), STR_33(3), 
 18744 ;;		 -> STR_29(3), STR_24(3), STR_20(3), STR_15(4), 
 18745 ;;		 -> STR_11(4), 
 18746 ;;  strncmp         2    7[COMRAM] PTR const unsigned char 
 18747 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
 18748 ;;		 -> STR_4(22), STR_3(12), STR_1(13), 
 18749 ;; Return value:  Size  Location     Type
 18750 ;;                  2    0[COMRAM] int 
 18751 ;; Registers used:
 18752 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 18753 ;; Tracked objects:
 18754 ;;		On entry : 0/0
 18755 ;;		On exit  : 0/0
 18756 ;;		Unchanged: 0/0
 18757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18758 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18759 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18760 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18761 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18762 ;;Total ram usage:       11 bytes
 18763 ;; Hardware stack levels used:    1
 18764 ;; This function calls:
 18765 ;;		Nothing
 18766 ;; This function is called by:
 18767 ;;		i2_vfpfcnvrt
 18768 ;; This function uses a non-reentrant model
 18769 ;;
 18770                           
 18771                           	psect	text82
 18772  0054D2                     __ptext82:
 18773                           	opt callstack 0
 18774  0054D2                     i2_strncmp:
 18775                           	opt callstack 13
 18776  0054D2  C001  F008         	movff	i2strncmp@_l,i2strncmp@l
 18777  0054D6  C002  F009         	movff	i2strncmp@_l+1,i2strncmp@l+1
 18778  0054DA  C003  F00A         	movff	i2strncmp@_r,i2strncmp@r
 18779  0054DE  C004  F00B         	movff	i2strncmp@_r+1,i2strncmp@r+1
 18780  0054E2  0605               	decf	i2strncmp@n^0,f,c
 18781  0054E4  A0D8               	btfss	status,0,c
 18782  0054E6  0606               	decf	(i2strncmp@n+1)^0,f,c
 18783  0054E8  2805               	incf	i2strncmp@n^0,w,c
 18784  0054EA  E106               	bnz	i2u947_41
 18785  0054EC  2806               	incf	(i2strncmp@n+1)^0,w,c
 18786  0054EE  A4D8               	btfss	status,2,c
 18787  0054F0  EF7C  F02A         	goto	i2u947_41
 18788  0054F4  EF7E  F02A         	goto	i2u947_40
 18789  0054F8                     i2u947_41:
 18790  0054F8  EF8B  F02A         	goto	i2l7745
 18791  0054FC                     i2u947_40:
 18792  0054FC  0E00               	movlw	0
 18793  0054FE  6E02               	movwf	(?i2_strncmp+1)^0,c
 18794  005500  0E00               	movlw	0
 18795  005502  6E01               	movwf	?i2_strncmp^0,c
 18796  005504  EFDD  F02A         	goto	i2l1624
 18797  005508                     i2l7743:
 18798  005508  4A08               	infsnz	i2strncmp@l^0,f,c
 18799  00550A  2A09               	incf	(i2strncmp@l+1)^0,f,c
 18800  00550C  4A0A               	infsnz	i2strncmp@r^0,f,c
 18801  00550E  2A0B               	incf	(i2strncmp@r+1)^0,f,c
 18802  005510  0605               	decf	i2strncmp@n^0,f,c
 18803  005512  A0D8               	btfss	status,0,c
 18804  005514  0606               	decf	(i2strncmp@n+1)^0,f,c
 18805  005516                     i2l7745:
 18806  005516  C008  FFF6         	movff	i2strncmp@l,tblptrl
 18807  00551A  C009  FFF7         	movff	i2strncmp@l+1,tblptrh
 18808  00551E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18809  00551E  6AF8               	clrf	tblptru,c
 18810  005520                     	endif
 18811  005520                     	if	0	;tblptru may be non-zero
 18812  005520                     	endif
 18813  005520  0008               	tblrd		*
 18814  005522  50F5               	movf	tablat,w,c
 18815  005524  0900               	iorlw	0
 18816  005526  B4D8               	btfsc	status,2,c
 18817  005528  EF98  F02A         	goto	i2u948_41
 18818  00552C  EF9A  F02A         	goto	i2u948_40
 18819  005530                     i2u948_41:
 18820  005530  EFC9  F02A         	goto	i2l7753
 18821  005534                     i2u948_40:
 18822  005534  C00A  FFF6         	movff	i2strncmp@r,tblptrl
 18823  005538  C00B  FFF7         	movff	i2strncmp@r+1,tblptrh
 18824  00553C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18825  00553C  6AF8               	clrf	tblptru,c
 18826  00553E                     	endif
 18827  00553E                     	if	0	;tblptru may be non-zero
 18828  00553E                     	endif
 18829  00553E  0008               	tblrd		*
 18830  005540  50F5               	movf	tablat,w,c
 18831  005542  0900               	iorlw	0
 18832  005544  B4D8               	btfsc	status,2,c
 18833  005546  EFA7  F02A         	goto	i2u949_41
 18834  00554A  EFA9  F02A         	goto	i2u949_40
 18835  00554E                     i2u949_41:
 18836  00554E  EFC9  F02A         	goto	i2l7753
 18837  005552                     i2u949_40:
 18838  005552  5005               	movf	i2strncmp@n^0,w,c
 18839  005554  1006               	iorwf	(i2strncmp@n+1)^0,w,c
 18840  005556  B4D8               	btfsc	status,2,c
 18841  005558  EFB0  F02A         	goto	i2u950_41
 18842  00555C  EFB2  F02A         	goto	i2u950_40
 18843  005560                     i2u950_41:
 18844  005560  EFC9  F02A         	goto	i2l7753
 18845  005564                     i2u950_40:
 18846  005564  C008  FFF6         	movff	i2strncmp@l,tblptrl
 18847  005568  C009  FFF7         	movff	i2strncmp@l+1,tblptrh
 18848  00556C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18849  00556C  6AF8               	clrf	tblptru,c
 18850  00556E                     	endif
 18851  00556E                     	if	0	;tblptru may be non-zero
 18852  00556E                     	endif
 18853  00556E  0008               	tblrd		*
 18854  005570  CFF5 F007          	movff	tablat,??i2_strncmp
 18855  005574  C00A  FFF6         	movff	i2strncmp@r,tblptrl
 18856  005578  C00B  FFF7         	movff	i2strncmp@r+1,tblptrh
 18857  00557C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18858  00557C  6AF8               	clrf	tblptru,c
 18859  00557E                     	endif
 18860  00557E                     	if	0	;tblptru may be non-zero
 18861  00557E                     	endif
 18862  00557E  0008               	tblrd		*
 18863  005580  50F5               	movf	tablat,w,c
 18864  005582  1807               	xorwf	??i2_strncmp^0,w,c
 18865  005584  B4D8               	btfsc	status,2,c
 18866  005586  EFC7  F02A         	goto	i2u951_41
 18867  00558A  EFC9  F02A         	goto	i2u951_40
 18868  00558E                     i2u951_41:
 18869  00558E  EF84  F02A         	goto	i2l7743
 18870  005592                     i2u951_40:
 18871  005592                     i2l7753:
 18872  005592  C008  FFF6         	movff	i2strncmp@l,tblptrl
 18873  005596  C009  FFF7         	movff	i2strncmp@l+1,tblptrh
 18874  00559A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18875  00559A  6AF8               	clrf	tblptru,c
 18876  00559C                     	endif
 18877  00559C                     	if	0	;tblptru may be non-zero
 18878  00559C                     	endif
 18879  00559C  0008               	tblrd		*
 18880  00559E  CFF5 F007          	movff	tablat,??i2_strncmp
 18881  0055A2  C00A  FFF6         	movff	i2strncmp@r,tblptrl
 18882  0055A6  C00B  FFF7         	movff	i2strncmp@r+1,tblptrh
 18883  0055AA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18884  0055AA  6AF8               	clrf	tblptru,c
 18885  0055AC                     	endif
 18886  0055AC                     	if	0	;tblptru may be non-zero
 18887  0055AC                     	endif
 18888  0055AC  0008               	tblrd		*
 18889  0055AE  50F5               	movf	tablat,w,c
 18890  0055B0  5C07               	subwf	??i2_strncmp^0,w,c
 18891  0055B2  6E01               	movwf	?i2_strncmp^0,c
 18892  0055B4  6A02               	clrf	(?i2_strncmp+1)^0,c
 18893  0055B6  A0D8               	btfss	status,0,c
 18894  0055B8  0602               	decf	(?i2_strncmp+1)^0,f,c
 18895  0055BA                     i2l1624:
 18896  0055BA  0012               	return		;funcret
 18897  0055BC                     __end_ofi2_strncmp:
 18898                           	opt callstack 0
 18899                           
 18900 ;; *************** function i2_stoa *****************
 18901 ;; Defined at:
 18902 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 18903 ;; Parameters:    Size  Location     Type
 18904 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 18905 ;;		 -> vsnprintf@f(6), NULL(0), 
 18906 ;;  s               2   13[COMRAM] PTR unsigned char 
 18907 ;;		 -> ?_snprintf(2), ?_printf(2), 
 18908 ;; Auto vars:     Size  Location     Type
 18909 ;;  stoa            7   16[COMRAM] unsigned char [7]
 18910 ;;  stoa            2   31[COMRAM] int 
 18911 ;;  stoa            2   29[COMRAM] int 
 18912 ;;  stoa            2   27[COMRAM] PTR unsigned char 
 18913 ;;		 -> i2stoa@nuls(7), ?_snprintf(2), ?_printf(2), stoa@nuls(7), 
 18914 ;;  stoa            2   25[COMRAM] int 
 18915 ;;  stoa            2   23[COMRAM] int 
 18916 ;; Return value:  Size  Location     Type
 18917 ;;                  2   11[COMRAM] int 
 18918 ;; Registers used:
 18919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18920 ;; Tracked objects:
 18921 ;;		On entry : 0/0
 18922 ;;		On exit  : 0/0
 18923 ;;		Unchanged: 0/0
 18924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18925 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18926 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18927 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18928 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18929 ;;Total ram usage:       22 bytes
 18930 ;; Hardware stack levels used:    1
 18931 ;; Hardware stack levels required when called:    3
 18932 ;; This function calls:
 18933 ;;		i2_fputc
 18934 ;;		i2_strlen
 18935 ;; This function is called by:
 18936 ;;		i2_vfpfcnvrt
 18937 ;; This function uses a non-reentrant model
 18938 ;;
 18939                           
 18940                           	psect	text83
 18941  0048D6                     __ptext83:
 18942                           	opt callstack 0
 18943  0048D6                     i2_stoa:
 18944                           	opt callstack 10
 18945  0048D6                     
 18946                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
 18947  0048D6  EE20  F0CC         	lfsr	2,stoa@F1152
 18948  0048DA  EE10  F011         	lfsr	1,i2stoa@nuls
 18949  0048DE  0E06               	movlw	6
 18950  0048E0                     i2u902_41:
 18951  0048E0  CFDB FFE3          	movff	plusw2,plusw1
 18952  0048E4  06E8               	decf	wreg,f,c
 18953  0048E6  E2FC               	bc	i2u902_41
 18954  0048E8                     
 18955                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
 18956  0048E8  C00E  F01C         	movff	i2stoa@s,i2stoa@cp
 18957  0048EC  C00F  F01D         	movff	i2stoa@s+1,i2stoa@cp+1
 18958  0048F0                     
 18959                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
 18960  0048F0  501C               	movf	i2stoa@cp^0,w,c
 18961  0048F2  101D               	iorwf	(i2stoa@cp+1)^0,w,c
 18962  0048F4  A4D8               	btfss	status,2,c
 18963  0048F6  EF7F  F024         	goto	i2u903_41
 18964  0048FA  EF81  F024         	goto	i2u903_40
 18965  0048FE                     i2u903_41:
 18966  0048FE  EF85  F024         	goto	i2l7559
 18967  004902                     i2u903_40:
 18968  004902                     
 18969                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
 18970  004902  0E11               	movlw	low i2stoa@nuls
 18971  004904  6E1C               	movwf	i2stoa@cp^0,c
 18972  004906  0E00               	movlw	high i2stoa@nuls
 18973  004908  6E1D               	movwf	(i2stoa@cp+1)^0,c
 18974  00490A                     i2l7559:
 18975                           
 18976                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
 18977  00490A  C01C  F001         	movff	i2stoa@cp,i2strlen@s
 18978  00490E  C01D  F002         	movff	i2stoa@cp+1,i2strlen@s+1
 18979  004912  ECBF  F032         	call	i2_strlen	;wreg free
 18980  004916  C001  F020         	movff	?i2_strlen,i2stoa@l
 18981  00491A  C002  F021         	movff	?i2_strlen+1,i2stoa@l+1
 18982  00491E                     
 18983                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
 18984  00491E  C0BB  F01E         	movff	_prec,i2stoa@p
 18985  004922  C0BC  F01F         	movff	_prec+1,i2stoa@p+1
 18986  004926                     
 18987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
 18988  004926  BE1F               	btfsc	(i2stoa@p+1)^0,7,c
 18989  004928  EF98  F024         	goto	i2u904_41
 18990  00492C  EF9A  F024         	goto	i2u904_40
 18991  004930                     i2u904_41:
 18992  004930  EFAF  F024         	goto	i2l701
 18993  004934                     i2u904_40:
 18994  004934  5020               	movf	i2stoa@l^0,w,c
 18995  004936  5C1E               	subwf	i2stoa@p^0,w,c
 18996  004938  501F               	movf	(i2stoa@p+1)^0,w,c
 18997  00493A  0A80               	xorlw	128
 18998  00493C  6E10               	movwf	??i2_stoa^0,c
 18999  00493E  5021               	movf	(i2stoa@l+1)^0,w,c
 19000  004940  0A80               	xorlw	128
 19001  004942  5810               	subwfb	??i2_stoa^0,w,c
 19002  004944  A0D8               	btfss	status,0,c
 19003  004946  EFA7  F024         	goto	i2u905_41
 19004  00494A  EFA9  F024         	goto	i2u905_40
 19005  00494E                     i2u905_41:
 19006  00494E  EFAB  F024         	goto	i2l699
 19007  004952                     i2u905_40:
 19008  004952  EFAF  F024         	goto	i2l701
 19009  004956                     i2l699:
 19010  004956  C01E  F020         	movff	i2stoa@p,i2stoa@l
 19011  00495A  C01F  F021         	movff	i2stoa@p+1,i2stoa@l+1
 19012  00495E                     i2l701:
 19013                           
 19014                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
 19015  00495E  C020  F01E         	movff	i2stoa@l,i2stoa@p
 19016  004962  C021  F01F         	movff	i2stoa@l+1,i2stoa@p+1
 19017                           
 19018                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
 19019  004966  C0B9  F01A         	movff	_width,i2stoa@w
 19020  00496A  C0BA  F01B         	movff	_width+1,i2stoa@w+1
 19021                           
 19022                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
 19023  00496E  0100               	movlb	0	; () banked
 19024  004970  B1BD               	btfsc	_flags& (0+255),0,b
 19025  004972  EFBD  F024         	goto	i2u906_41
 19026  004976  EFBF  F024         	goto	i2u906_40
 19027  00497A                     i2u906_41:
 19028  00497A  EFDC  F024         	goto	i2l7575
 19029  00497E                     i2u906_40:
 19030  00497E  EFCD  F024         	goto	i2l7573
 19031  004982                     i2l7569:
 19032                           
 19033                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
 19034  004982  0E00               	movlw	0
 19035  004984  6E04               	movwf	(i2fputc@c+1)^0,c
 19036  004986  0E20               	movlw	32
 19037  004988  6E03               	movwf	i2fputc@c^0,c
 19038  00498A  C00C  F005         	movff	i2stoa@fp,i2fputc@fp
 19039  00498E  C00D  F006         	movff	i2stoa@fp+1,i2fputc@fp+1
 19040  004992  EC7A  F02C         	call	i2_fputc	;wreg free
 19041  004996                     
 19042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
 19043  004996  4A20               	infsnz	i2stoa@l^0,f,c
 19044  004998  2A21               	incf	(i2stoa@l+1)^0,f,c
 19045  00499A                     i2l7573:
 19046                           
 19047                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
 19048  00499A  501A               	movf	i2stoa@w^0,w,c
 19049  00499C  5C20               	subwf	i2stoa@l^0,w,c
 19050  00499E  5021               	movf	(i2stoa@l+1)^0,w,c
 19051  0049A0  0A80               	xorlw	128
 19052  0049A2  6E10               	movwf	??i2_stoa^0,c
 19053  0049A4  501B               	movf	(i2stoa@w+1)^0,w,c
 19054  0049A6  0A80               	xorlw	128
 19055  0049A8  5810               	subwfb	??i2_stoa^0,w,c
 19056  0049AA  A0D8               	btfss	status,0,c
 19057  0049AC  EFDA  F024         	goto	i2u907_41
 19058  0049B0  EFDC  F024         	goto	i2u907_40
 19059  0049B4                     i2u907_41:
 19060  0049B4  EFC1  F024         	goto	i2l7569
 19061  0049B8                     i2u907_40:
 19062  0049B8                     i2l7575:
 19063                           
 19064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
 19065  0049B8  0E00               	movlw	0
 19066  0049BA  6E19               	movwf	(i2stoa@i+1)^0,c
 19067  0049BC  0E00               	movlw	0
 19068  0049BE  6E18               	movwf	i2stoa@i^0,c
 19069                           
 19070                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 19071  0049C0  EFF5  F024         	goto	i2l7583
 19072  0049C4                     i2l7577:
 19073                           
 19074                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
 19075  0049C4  C01C  FFD9         	movff	i2stoa@cp,fsr2l
 19076  0049C8  C01D  FFDA         	movff	i2stoa@cp+1,fsr2h
 19077  0049CC  50DF               	movf	indf2,w,c
 19078  0049CE  6E10               	movwf	??i2_stoa^0,c
 19079  0049D0  5010               	movf	??i2_stoa^0,w,c
 19080  0049D2  6E03               	movwf	i2fputc@c^0,c
 19081  0049D4  6A04               	clrf	(i2fputc@c+1)^0,c
 19082  0049D6  C00C  F005         	movff	i2stoa@fp,i2fputc@fp
 19083  0049DA  C00D  F006         	movff	i2stoa@fp+1,i2fputc@fp+1
 19084  0049DE  EC7A  F02C         	call	i2_fputc	;wreg free
 19085  0049E2                     
 19086                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
 19087  0049E2  4A1C               	infsnz	i2stoa@cp^0,f,c
 19088  0049E4  2A1D               	incf	(i2stoa@cp+1)^0,f,c
 19089  0049E6                     
 19090                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
 19091  0049E6  4A18               	infsnz	i2stoa@i^0,f,c
 19092  0049E8  2A19               	incf	(i2stoa@i+1)^0,f,c
 19093  0049EA                     i2l7583:
 19094                           
 19095                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 19096  0049EA  501E               	movf	i2stoa@p^0,w,c
 19097  0049EC  5C18               	subwf	i2stoa@i^0,w,c
 19098  0049EE  5019               	movf	(i2stoa@i+1)^0,w,c
 19099  0049F0  0A80               	xorlw	128
 19100  0049F2  6E10               	movwf	??i2_stoa^0,c
 19101  0049F4  501F               	movf	(i2stoa@p+1)^0,w,c
 19102  0049F6  0A80               	xorlw	128
 19103  0049F8  5810               	subwfb	??i2_stoa^0,w,c
 19104  0049FA  A0D8               	btfss	status,0,c
 19105  0049FC  EF02  F025         	goto	i2u908_41
 19106  004A00  EF04  F025         	goto	i2u908_40
 19107  004A04                     i2u908_41:
 19108  004A04  EFE2  F024         	goto	i2l7577
 19109  004A08                     i2u908_40:
 19110  004A08                     
 19111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
 19112  004A08  0100               	movlb	0	; () banked
 19113  004A0A  A1BD               	btfss	_flags& (0+255),0,b
 19114  004A0C  EF0A  F025         	goto	i2u909_41
 19115  004A10  EF0C  F025         	goto	i2u909_40
 19116  004A14                     i2u909_41:
 19117  004A14  EF29  F025         	goto	i2l711
 19118  004A18                     i2u909_40:
 19119  004A18  EF1A  F025         	goto	i2l7591
 19120  004A1C                     i2l7587:
 19121                           
 19122                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
 19123  004A1C  0E00               	movlw	0
 19124  004A1E  6E04               	movwf	(i2fputc@c+1)^0,c
 19125  004A20  0E20               	movlw	32
 19126  004A22  6E03               	movwf	i2fputc@c^0,c
 19127  004A24  C00C  F005         	movff	i2stoa@fp,i2fputc@fp
 19128  004A28  C00D  F006         	movff	i2stoa@fp+1,i2fputc@fp+1
 19129  004A2C  EC7A  F02C         	call	i2_fputc	;wreg free
 19130  004A30                     
 19131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
 19132  004A30  4A20               	infsnz	i2stoa@l^0,f,c
 19133  004A32  2A21               	incf	(i2stoa@l+1)^0,f,c
 19134  004A34                     i2l7591:
 19135                           
 19136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
 19137  004A34  501A               	movf	i2stoa@w^0,w,c
 19138  004A36  5C20               	subwf	i2stoa@l^0,w,c
 19139  004A38  5021               	movf	(i2stoa@l+1)^0,w,c
 19140  004A3A  0A80               	xorlw	128
 19141  004A3C  6E10               	movwf	??i2_stoa^0,c
 19142  004A3E  501B               	movf	(i2stoa@w+1)^0,w,c
 19143  004A40  0A80               	xorlw	128
 19144  004A42  5810               	subwfb	??i2_stoa^0,w,c
 19145  004A44  A0D8               	btfss	status,0,c
 19146  004A46  EF27  F025         	goto	i2u910_41
 19147  004A4A  EF29  F025         	goto	i2u910_40
 19148  004A4E                     i2u910_41:
 19149  004A4E  EF0E  F025         	goto	i2l7587
 19150  004A52                     i2u910_40:
 19151  004A52                     i2l711:
 19152                           
 19153                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
 19154  004A52  C020  F00C         	movff	i2stoa@l,?i2_stoa
 19155  004A56  C021  F00D         	movff	i2stoa@l+1,?i2_stoa+1
 19156  004A5A  0012               	return		;funcret
 19157  004A5C                     __end_ofi2_stoa:
 19158                           	opt callstack 0
 19159                           
 19160 ;; *************** function i2_otoa *****************
 19161 ;; Defined at:
 19162 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 19163 ;; Parameters:    Size  Location     Type
 19164 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 19165 ;;		 -> vsnprintf@f(6), NULL(0), 
 19166 ;;  d               8   31[COMRAM] unsigned long long 
 19167 ;; Auto vars:     Size  Location     Type
 19168 ;;  otoa            8   53[COMRAM] unsigned long long 
 19169 ;;  otoa            2   61[COMRAM] int 
 19170 ;;  otoa            2   51[COMRAM] int 
 19171 ;;  otoa            2   49[COMRAM] int 
 19172 ;;  otoa            2   47[COMRAM] int 
 19173 ;; Return value:  Size  Location     Type
 19174 ;;                  2   29[COMRAM] int 
 19175 ;; Registers used:
 19176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19177 ;; Tracked objects:
 19178 ;;		On entry : 0/0
 19179 ;;		On exit  : 0/0
 19180 ;;		Unchanged: 0/0
 19181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19182 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19183 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19184 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19185 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19186 ;;Total ram usage:       34 bytes
 19187 ;; Hardware stack levels used:    1
 19188 ;; Hardware stack levels required when called:    5
 19189 ;; This function calls:
 19190 ;;		i2_pad
 19191 ;; This function is called by:
 19192 ;;		i2_vfpfcnvrt
 19193 ;; This function uses a non-reentrant model
 19194 ;;
 19195                           
 19196                           	psect	text84
 19197  004248                     __ptext84:
 19198                           	opt callstack 0
 19199  004248                     i2_otoa:
 19200                           	opt callstack 8
 19201  004248                     
 19202                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
 19203  004248  0100               	movlb	0	; () banked
 19204  00424A  BFBC               	btfsc	(_prec+1)& (0+255),7,b
 19205  00424C  EF2A  F021         	goto	i2u892_41
 19206  004250  EF2C  F021         	goto	i2u892_40
 19207  004254                     i2u892_41:
 19208  004254  EF2D  F021         	goto	i2l7507
 19209  004258                     i2u892_40:
 19210  004258                     
 19211                           ; BSR set to: 0
 19212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
 19213  004258  93BD               	bcf	_flags& (0+255),1,b
 19214  00425A                     i2l7507:
 19215                           
 19216                           ; BSR set to: 0
 19217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
 19218  00425A  BFBC               	btfsc	(_prec+1)& (0+255),7,b
 19219  00425C  EF3A  F021         	goto	i2u893_40
 19220  004260  51BC               	movf	(_prec+1)& (0+255),w,b
 19221  004262  E106               	bnz	i2u893_41
 19222  004264  05BB               	decf	_prec& (0+255),w,b
 19223  004266  B0D8               	btfsc	status,0,c
 19224  004268  EF38  F021         	goto	i2u893_41
 19225  00426C  EF3A  F021         	goto	i2u893_40
 19226  004270                     i2u893_41:
 19227  004270  EF40  F021         	goto	i2l681
 19228  004274                     i2u893_40:
 19229  004274                     
 19230                           ; BSR set to: 0
 19231  004274  0E00               	movlw	0
 19232  004276  6E31               	movwf	(i2otoa@p+1)^0,c
 19233  004278  0E01               	movlw	1
 19234  00427A  6E30               	movwf	i2otoa@p^0,c
 19235  00427C  EF44  F021         	goto	i2l683
 19236  004280                     i2l681:
 19237                           
 19238                           ; BSR set to: 0
 19239  004280  C0BB  F030         	movff	_prec,i2otoa@p
 19240  004284  C0BC  F031         	movff	_prec+1,i2otoa@p+1
 19241  004288                     i2l683:
 19242                           
 19243                           ; BSR set to: 0
 19244                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
 19245  004288  C0B9  F034         	movff	_width,i2otoa@w
 19246  00428C  C0BA  F035         	movff	_width+1,i2otoa@w+1
 19247                           
 19248                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
 19249  004290  C020  F036         	movff	i2otoa@d,i2otoa@n
 19250  004294  C021  F037         	movff	i2otoa@d+1,i2otoa@n+1
 19251  004298  C022  F038         	movff	i2otoa@d+2,i2otoa@n+2
 19252  00429C  C023  F039         	movff	i2otoa@d+3,i2otoa@n+3
 19253  0042A0  C024  F03A         	movff	i2otoa@d+4,i2otoa@n+4
 19254  0042A4  C025  F03B         	movff	i2otoa@d+5,i2otoa@n+5
 19255  0042A8  C026  F03C         	movff	i2otoa@d+6,i2otoa@n+6
 19256  0042AC  C027  F03D         	movff	i2otoa@d+7,i2otoa@n+7
 19257  0042B0                     
 19258                           ; BSR set to: 0
 19259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
 19260  0042B0  0E00               	movlw	0
 19261  0042B2  6E3F               	movwf	(i2otoa@i+1)^0,c
 19262  0042B4  0E1F               	movlw	31
 19263  0042B6  6E3E               	movwf	i2otoa@i^0,c
 19264  0042B8                     
 19265                           ; BSR set to: 0
 19266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
 19267  0042B8  0E00               	movlw	0
 19268  0042BA  0101               	movlb	1	; () banked
 19269  0042BC  6F97               	movwf	(_dbuf+31)& (0+255),b
 19270  0042BE                     
 19271                           ; BSR set to: 1
 19272                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
 19273  0042BE  0E00               	movlw	0
 19274  0042C0  6E33               	movwf	(i2otoa@t+1)^0,c
 19275  0042C2  0E00               	movlw	0
 19276  0042C4  6E32               	movwf	i2otoa@t^0,c
 19277                           
 19278                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19279  0042C6  EFAA  F021         	goto	i2l7529
 19280  0042CA                     i2l7517:
 19281                           
 19282                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
 19283  0042CA  063E               	decf	i2otoa@i^0,f,c
 19284  0042CC  A0D8               	btfss	status,0,c
 19285  0042CE  063F               	decf	(i2otoa@i+1)^0,f,c
 19286  0042D0                     
 19287                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
 19288  0042D0  0E07               	movlw	7
 19289  0042D2  1436               	andwf	i2otoa@n^0,w,c
 19290  0042D4  6E32               	movwf	i2otoa@t^0,c
 19291  0042D6  6A33               	clrf	(i2otoa@t+1)^0,c
 19292  0042D8                     
 19293                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
 19294  0042D8  0E78               	movlw	low _dbuf
 19295  0042DA  243E               	addwf	i2otoa@i^0,w,c
 19296  0042DC  6ED9               	movwf	fsr2l,c
 19297  0042DE  0E01               	movlw	high _dbuf
 19298  0042E0  203F               	addwfc	(i2otoa@i+1)^0,w,c
 19299  0042E2  6EDA               	movwf	fsr2h,c
 19300  0042E4  5032               	movf	i2otoa@t^0,w,c
 19301  0042E6  0F30               	addlw	48
 19302  0042E8  6EDF               	movwf	indf2,c
 19303  0042EA                     
 19304                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
 19305  0042EA  0630               	decf	i2otoa@p^0,f,c
 19306  0042EC  A0D8               	btfss	status,0,c
 19307  0042EE  0631               	decf	(i2otoa@p+1)^0,f,c
 19308  0042F0                     
 19309                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
 19310  0042F0  0634               	decf	i2otoa@w^0,f,c
 19311  0042F2  A0D8               	btfss	status,0,c
 19312  0042F4  0635               	decf	(i2otoa@w+1)^0,f,c
 19313  0042F6                     
 19314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
 19315  0042F6  C036  F028         	movff	i2otoa@n,??i2_otoa
 19316  0042FA  C037  F029         	movff	i2otoa@n+1,??i2_otoa+1
 19317  0042FE  C038  F02A         	movff	i2otoa@n+2,??i2_otoa+2
 19318  004302  C039  F02B         	movff	i2otoa@n+3,??i2_otoa+3
 19319  004306  C03A  F02C         	movff	i2otoa@n+4,??i2_otoa+4
 19320  00430A  C03B  F02D         	movff	i2otoa@n+5,??i2_otoa+5
 19321  00430E  C03C  F02E         	movff	i2otoa@n+6,??i2_otoa+6
 19322  004312  C03D  F02F         	movff	i2otoa@n+7,??i2_otoa+7
 19323  004316  0E04               	movlw	4
 19324  004318  EF97  F021         	goto	i2u894_40
 19325  00431C                     i2u894_45:
 19326  00431C  90D8               	bcf	status,0,c
 19327  00431E  322F               	rrcf	(??i2_otoa+7)^0,f,c
 19328  004320  322E               	rrcf	(??i2_otoa+6)^0,f,c
 19329  004322  322D               	rrcf	(??i2_otoa+5)^0,f,c
 19330  004324  322C               	rrcf	(??i2_otoa+4)^0,f,c
 19331  004326  322B               	rrcf	(??i2_otoa+3)^0,f,c
 19332  004328  322A               	rrcf	(??i2_otoa+2)^0,f,c
 19333  00432A  3229               	rrcf	(??i2_otoa+1)^0,f,c
 19334  00432C  3228               	rrcf	??i2_otoa^0,f,c
 19335  00432E                     i2u894_40:
 19336  00432E  2EE8               	decfsz	wreg,f,c
 19337  004330  EF8E  F021         	goto	i2u894_45
 19338  004334  C028  F036         	movff	??i2_otoa,i2otoa@n
 19339  004338  C029  F037         	movff	??i2_otoa+1,i2otoa@n+1
 19340  00433C  C02A  F038         	movff	??i2_otoa+2,i2otoa@n+2
 19341  004340  C02B  F039         	movff	??i2_otoa+3,i2otoa@n+3
 19342  004344  C02C  F03A         	movff	??i2_otoa+4,i2otoa@n+4
 19343  004348  C02D  F03B         	movff	??i2_otoa+5,i2otoa@n+5
 19344  00434C  C02E  F03C         	movff	??i2_otoa+6,i2otoa@n+6
 19345  004350  C02F  F03D         	movff	??i2_otoa+7,i2otoa@n+7
 19346  004354                     i2l7529:
 19347                           
 19348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19349  004354  BE3F               	btfsc	(i2otoa@i+1)^0,7,c
 19350  004356  EFB5  F021         	goto	i2u895_41
 19351  00435A  503F               	movf	(i2otoa@i+1)^0,w,c
 19352  00435C  E108               	bnz	i2u895_40
 19353  00435E  043E               	decf	i2otoa@i^0,w,c
 19354  004360  A0D8               	btfss	status,0,c
 19355  004362  EFB5  F021         	goto	i2u895_41
 19356  004366  EFB7  F021         	goto	i2u895_40
 19357  00436A                     i2u895_41:
 19358  00436A  EFE8  F021         	goto	i2l690
 19359  00436E                     i2u895_40:
 19360  00436E  5036               	movf	i2otoa@n^0,w,c
 19361  004370  1037               	iorwf	(i2otoa@n+1)^0,w,c
 19362  004372  1038               	iorwf	(i2otoa@n+2)^0,w,c
 19363  004374  1039               	iorwf	(i2otoa@n+3)^0,w,c
 19364  004376  103A               	iorwf	(i2otoa@n+4)^0,w,c
 19365  004378  103B               	iorwf	(i2otoa@n+5)^0,w,c
 19366  00437A  103C               	iorwf	(i2otoa@n+6)^0,w,c
 19367  00437C  103D               	iorwf	(i2otoa@n+7)^0,w,c
 19368  00437E  A4D8               	btfss	status,2,c
 19369  004380  EFC4  F021         	goto	i2u896_41
 19370  004384  EFC6  F021         	goto	i2u896_40
 19371  004388                     i2u896_41:
 19372  004388  EF65  F021         	goto	i2l7517
 19373  00438C                     i2u896_40:
 19374  00438C  BE31               	btfsc	(i2otoa@p+1)^0,7,c
 19375  00438E  EFD3  F021         	goto	i2u897_40
 19376  004392  5031               	movf	(i2otoa@p+1)^0,w,c
 19377  004394  E106               	bnz	i2u897_41
 19378  004396  0430               	decf	i2otoa@p^0,w,c
 19379  004398  B0D8               	btfsc	status,0,c
 19380  00439A  EFD1  F021         	goto	i2u897_41
 19381  00439E  EFD3  F021         	goto	i2u897_40
 19382  0043A2                     i2u897_41:
 19383  0043A2  EF65  F021         	goto	i2l7517
 19384  0043A6                     i2u897_40:
 19385  0043A6  BE35               	btfsc	(i2otoa@w+1)^0,7,c
 19386  0043A8  EFDE  F021         	goto	i2u898_41
 19387  0043AC  5035               	movf	(i2otoa@w+1)^0,w,c
 19388  0043AE  E108               	bnz	i2u898_40
 19389  0043B0  0434               	decf	i2otoa@w^0,w,c
 19390  0043B2  A0D8               	btfss	status,0,c
 19391  0043B4  EFDE  F021         	goto	i2u898_41
 19392  0043B8  EFE0  F021         	goto	i2u898_40
 19393  0043BC                     i2u898_41:
 19394  0043BC  EFE8  F021         	goto	i2l690
 19395  0043C0                     i2u898_40:
 19396  0043C0  0100               	movlb	0	; () banked
 19397  0043C2  B3BD               	btfsc	_flags& (0+255),1,b
 19398  0043C4  EFE6  F021         	goto	i2u899_41
 19399  0043C8  EFE8  F021         	goto	i2u899_40
 19400  0043CC                     i2u899_41:
 19401  0043CC  EF65  F021         	goto	i2l7517
 19402  0043D0                     i2u899_40:
 19403  0043D0                     i2l690:
 19404                           
 19405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
 19406  0043D0  0100               	movlb	0	; () banked
 19407  0043D2  A9BD               	btfss	_flags& (0+255),4,b
 19408  0043D4  EFEE  F021         	goto	i2u900_41
 19409  0043D8  EFF0  F021         	goto	i2u900_40
 19410  0043DC                     i2u900_41:
 19411  0043DC  EF07  F022         	goto	i2l7547
 19412  0043E0                     i2u900_40:
 19413  0043E0                     
 19414                           ; BSR set to: 0
 19415  0043E0  5032               	movf	i2otoa@t^0,w,c
 19416  0043E2  1033               	iorwf	(i2otoa@t+1)^0,w,c
 19417  0043E4  B4D8               	btfsc	status,2,c
 19418  0043E6  EFF7  F021         	goto	i2u901_41
 19419  0043EA  EFF9  F021         	goto	i2u901_40
 19420  0043EE                     i2u901_41:
 19421  0043EE  EF07  F022         	goto	i2l7547
 19422  0043F2                     i2u901_40:
 19423  0043F2                     
 19424                           ; BSR set to: 0
 19425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
 19426  0043F2  063E               	decf	i2otoa@i^0,f,c
 19427  0043F4  A0D8               	btfss	status,0,c
 19428  0043F6  063F               	decf	(i2otoa@i+1)^0,f,c
 19429  0043F8                     
 19430                           ; BSR set to: 0
 19431                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
 19432  0043F8  0E78               	movlw	low _dbuf
 19433  0043FA  243E               	addwf	i2otoa@i^0,w,c
 19434  0043FC  6ED9               	movwf	fsr2l,c
 19435  0043FE  0E01               	movlw	high _dbuf
 19436  004400  203F               	addwfc	(i2otoa@i+1)^0,w,c
 19437  004402  6EDA               	movwf	fsr2h,c
 19438  004404  0E30               	movlw	48
 19439  004406  6EDF               	movwf	indf2,c
 19440  004408                     
 19441                           ; BSR set to: 0
 19442                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
 19443  004408  0634               	decf	i2otoa@w^0,f,c
 19444  00440A  A0D8               	btfss	status,0,c
 19445  00440C  0635               	decf	(i2otoa@w+1)^0,f,c
 19446  00440E                     i2l7547:
 19447                           
 19448                           ; BSR set to: 0
 19449                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
 19450  00440E  C01E  F013         	movff	i2otoa@fp,i2pad@fp
 19451  004412  C01F  F014         	movff	i2otoa@fp+1,i2pad@fp+1
 19452  004416  0E78               	movlw	low _dbuf
 19453  004418  243E               	addwf	i2otoa@i^0,w,c
 19454  00441A  6E15               	movwf	i2pad@buf^0,c
 19455  00441C  0E01               	movlw	high _dbuf
 19456  00441E  203F               	addwfc	(i2otoa@i+1)^0,w,c
 19457  004420  6E16               	movwf	(i2pad@buf+1)^0,c
 19458  004422  C034  F017         	movff	i2otoa@w,i2pad@p
 19459  004426  C035  F018         	movff	i2otoa@w+1,i2pad@p+1
 19460  00442A  ECDF  F02C         	call	i2_pad	;wreg free
 19461  00442E  C013  F01E         	movff	?i2_pad,?i2_otoa
 19462  004432  C014  F01F         	movff	?i2_pad+1,?i2_otoa+1
 19463  004436  0012               	return		;funcret
 19464  004438                     __end_ofi2_otoa:
 19465                           	opt callstack 0
 19466                           
 19467 ;; *************** function i2_dtoa *****************
 19468 ;; Defined at:
 19469 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 19470 ;; Parameters:    Size  Location     Type
 19471 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 19472 ;;		 -> vsnprintf@f(6), NULL(0), 
 19473 ;;  d               8   31[COMRAM] long long 
 19474 ;; Auto vars:     Size  Location     Type
 19475 ;;  dtoa            8   55[COMRAM] long long 
 19476 ;;  dtoa            2   63[COMRAM] int 
 19477 ;;  dtoa            2   53[COMRAM] int 
 19478 ;;  dtoa            2   51[COMRAM] int 
 19479 ;;  dtoa            2   49[COMRAM] int 
 19480 ;; Return value:  Size  Location     Type
 19481 ;;                  2   29[COMRAM] int 
 19482 ;; Registers used:
 19483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19484 ;; Tracked objects:
 19485 ;;		On entry : 0/0
 19486 ;;		On exit  : 0/0
 19487 ;;		Unchanged: 0/0
 19488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19489 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19490 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19491 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19492 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19493 ;;Total ram usage:       36 bytes
 19494 ;; Hardware stack levels used:    1
 19495 ;; Hardware stack levels required when called:    5
 19496 ;; This function calls:
 19497 ;;		i2___aodiv
 19498 ;;		i2___aomod
 19499 ;;		i2_abs
 19500 ;;		i2_pad
 19501 ;; This function is called by:
 19502 ;;		i2_vfpfcnvrt
 19503 ;; This function uses a non-reentrant model
 19504 ;;
 19505                           
 19506                           	psect	text85
 19507  002FF8                     __ptext85:
 19508                           	opt callstack 0
 19509  002FF8                     i2_dtoa:
 19510                           	opt callstack 8
 19511  002FF8                     
 19512                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 19513  002FF8  C020  F038         	movff	i2dtoa@d,i2dtoa@n
 19514  002FFC  C021  F039         	movff	i2dtoa@d+1,i2dtoa@n+1
 19515  003000  C022  F03A         	movff	i2dtoa@d+2,i2dtoa@n+2
 19516  003004  C023  F03B         	movff	i2dtoa@d+3,i2dtoa@n+3
 19517  003008  C024  F03C         	movff	i2dtoa@d+4,i2dtoa@n+4
 19518  00300C  C025  F03D         	movff	i2dtoa@d+5,i2dtoa@n+5
 19519  003010  C026  F03E         	movff	i2dtoa@d+6,i2dtoa@n+6
 19520  003014  C027  F03F         	movff	i2dtoa@d+7,i2dtoa@n+7
 19521  003018                     
 19522                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 19523  003018  BE3F               	btfsc	(i2dtoa@n+7)^0,7,c
 19524  00301A  EF11  F018         	goto	i2u877_41
 19525  00301E  EF14  F018         	goto	i2u877_40
 19526  003022                     i2u877_41:
 19527  003022  0E01               	movlw	1
 19528  003024  EF15  F018         	goto	i2u878_40
 19529  003028                     i2u877_40:
 19530  003028  0E00               	movlw	0
 19531  00302A                     i2u878_40:
 19532  00302A  6E36               	movwf	i2dtoa@s^0,c
 19533  00302C  6A37               	clrf	(i2dtoa@s+1)^0,c
 19534                           
 19535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 19536  00302E  5036               	movf	i2dtoa@s^0,w,c
 19537  003030  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 19538  003032  B4D8               	btfsc	status,2,c
 19539  003034  EF1E  F018         	goto	i2u879_41
 19540  003038  EF20  F018         	goto	i2u879_40
 19541  00303C                     i2u879_41:
 19542  00303C  EF30  F018         	goto	i2l7447
 19543  003040                     i2u879_40:
 19544  003040                     
 19545                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 19546  003040  1E3F               	comf	(i2dtoa@n+7)^0,f,c
 19547  003042  1E3E               	comf	(i2dtoa@n+6)^0,f,c
 19548  003044  1E3D               	comf	(i2dtoa@n+5)^0,f,c
 19549  003046  1E3C               	comf	(i2dtoa@n+4)^0,f,c
 19550  003048  1E3B               	comf	(i2dtoa@n+3)^0,f,c
 19551  00304A  1E3A               	comf	(i2dtoa@n+2)^0,f,c
 19552  00304C  1E39               	comf	(i2dtoa@n+1)^0,f,c
 19553  00304E  6C38               	negf	i2dtoa@n^0,c
 19554  003050  0E00               	movlw	0
 19555  003052  2239               	addwfc	(i2dtoa@n+1)^0,f,c
 19556  003054  223A               	addwfc	(i2dtoa@n+2)^0,f,c
 19557  003056  223B               	addwfc	(i2dtoa@n+3)^0,f,c
 19558  003058  223C               	addwfc	(i2dtoa@n+4)^0,f,c
 19559  00305A  223D               	addwfc	(i2dtoa@n+5)^0,f,c
 19560  00305C  223E               	addwfc	(i2dtoa@n+6)^0,f,c
 19561  00305E  223F               	addwfc	(i2dtoa@n+7)^0,f,c
 19562  003060                     i2l7447:
 19563                           
 19564                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 19565  003060  0100               	movlb	0	; () banked
 19566  003062  BFBC               	btfsc	(_prec+1)& (0+255),7,b
 19567  003064  EF36  F018         	goto	i2u880_41
 19568  003068  EF38  F018         	goto	i2u880_40
 19569  00306C                     i2u880_41:
 19570  00306C  EF39  F018         	goto	i2l7451
 19571  003070                     i2u880_40:
 19572  003070                     
 19573                           ; BSR set to: 0
 19574                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 19575  003070  93BD               	bcf	_flags& (0+255),1,b
 19576  003072                     i2l7451:
 19577                           
 19578                           ; BSR set to: 0
 19579                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 19580  003072  BFBC               	btfsc	(_prec+1)& (0+255),7,b
 19581  003074  EF46  F018         	goto	i2u881_40
 19582  003078  51BC               	movf	(_prec+1)& (0+255),w,b
 19583  00307A  E106               	bnz	i2u881_41
 19584  00307C  05BB               	decf	_prec& (0+255),w,b
 19585  00307E  B0D8               	btfsc	status,0,c
 19586  003080  EF44  F018         	goto	i2u881_41
 19587  003084  EF46  F018         	goto	i2u881_40
 19588  003088                     i2u881_41:
 19589  003088  EF4C  F018         	goto	i2l656
 19590  00308C                     i2u881_40:
 19591  00308C                     
 19592                           ; BSR set to: 0
 19593  00308C  0E00               	movlw	0
 19594  00308E  6E33               	movwf	(i2dtoa@p+1)^0,c
 19595  003090  0E01               	movlw	1
 19596  003092  6E32               	movwf	i2dtoa@p^0,c
 19597  003094  EF50  F018         	goto	i2l658
 19598  003098                     i2l656:
 19599                           
 19600                           ; BSR set to: 0
 19601  003098  C0BB  F032         	movff	_prec,i2dtoa@p
 19602  00309C  C0BC  F033         	movff	_prec+1,i2dtoa@p+1
 19603  0030A0                     i2l658:
 19604                           
 19605                           ; BSR set to: 0
 19606                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 19607  0030A0  C0B9  F034         	movff	_width,i2dtoa@w
 19608  0030A4  C0BA  F035         	movff	_width+1,i2dtoa@w+1
 19609  0030A8                     
 19610                           ; BSR set to: 0
 19611                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 19612  0030A8  5036               	movf	i2dtoa@s^0,w,c
 19613  0030AA  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 19614  0030AC  A4D8               	btfss	status,2,c
 19615  0030AE  EF5B  F018         	goto	i2u882_41
 19616  0030B2  EF5D  F018         	goto	i2u882_40
 19617  0030B6                     i2u882_41:
 19618  0030B6  EF64  F018         	goto	i2l7459
 19619  0030BA                     i2u882_40:
 19620  0030BA                     
 19621                           ; BSR set to: 0
 19622  0030BA  A5BD               	btfss	_flags& (0+255),2,b
 19623  0030BC  EF62  F018         	goto	i2u883_41
 19624  0030C0  EF64  F018         	goto	i2u883_40
 19625  0030C4                     i2u883_41:
 19626  0030C4  EF67  F018         	goto	i2l7461
 19627  0030C8                     i2u883_40:
 19628  0030C8                     i2l7459:
 19629                           
 19630                           ; BSR set to: 0
 19631                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 19632  0030C8  0634               	decf	i2dtoa@w^0,f,c
 19633  0030CA  A0D8               	btfss	status,0,c
 19634  0030CC  0635               	decf	(i2dtoa@w+1)^0,f,c
 19635  0030CE                     i2l7461:
 19636                           
 19637                           ; BSR set to: 0
 19638                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 19639  0030CE  0E00               	movlw	0
 19640  0030D0  6E41               	movwf	(i2dtoa@i+1)^0,c
 19641  0030D2  0E1F               	movlw	31
 19642  0030D4  6E40               	movwf	i2dtoa@i^0,c
 19643  0030D6                     
 19644                           ; BSR set to: 0
 19645                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 19646  0030D6  0E00               	movlw	0
 19647  0030D8  0101               	movlb	1	; () banked
 19648  0030DA  6F97               	movwf	(_dbuf+31)& (0+255),b
 19649                           
 19650                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19651  0030DC  EFEC  F018         	goto	i2l7475
 19652  0030E0                     i2l7465:
 19653                           
 19654                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 19655  0030E0  0640               	decf	i2dtoa@i^0,f,c
 19656  0030E2  A0D8               	btfss	status,0,c
 19657  0030E4  0641               	decf	(i2dtoa@i+1)^0,f,c
 19658  0030E6                     
 19659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 19660  0030E6  0E78               	movlw	low _dbuf
 19661  0030E8  2440               	addwf	i2dtoa@i^0,w,c
 19662  0030EA  6ED9               	movwf	fsr2l,c
 19663  0030EC  0E01               	movlw	high _dbuf
 19664  0030EE  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 19665  0030F0  6EDA               	movwf	fsr2h,c
 19666  0030F2  C038  F001         	movff	i2dtoa@n,i2___aomod@dividend
 19667  0030F6  C039  F002         	movff	i2dtoa@n+1,i2___aomod@dividend+1
 19668  0030FA  C03A  F003         	movff	i2dtoa@n+2,i2___aomod@dividend+2
 19669  0030FE  C03B  F004         	movff	i2dtoa@n+3,i2___aomod@dividend+3
 19670  003102  C03C  F005         	movff	i2dtoa@n+4,i2___aomod@dividend+4
 19671  003106  C03D  F006         	movff	i2dtoa@n+5,i2___aomod@dividend+5
 19672  00310A  C03E  F007         	movff	i2dtoa@n+6,i2___aomod@dividend+6
 19673  00310E  C03F  F008         	movff	i2dtoa@n+7,i2___aomod@dividend+7
 19674  003112  0E0A               	movlw	10
 19675  003114  6E09               	movwf	i2___aomod@divisor^0,c
 19676  003116  0E00               	movlw	0
 19677  003118  6E0A               	movwf	(i2___aomod@divisor+1)^0,c
 19678  00311A  0E00               	movlw	0
 19679  00311C  6E0B               	movwf	(i2___aomod@divisor+2)^0,c
 19680  00311E  0E00               	movlw	0
 19681  003120  6E0C               	movwf	(i2___aomod@divisor+3)^0,c
 19682  003122  0E00               	movlw	0
 19683  003124  6E0D               	movwf	(i2___aomod@divisor+4)^0,c
 19684  003126  0E00               	movlw	0
 19685  003128  6E0E               	movwf	(i2___aomod@divisor+5)^0,c
 19686  00312A  0E00               	movlw	0
 19687  00312C  6E0F               	movwf	(i2___aomod@divisor+6)^0,c
 19688  00312E  0E00               	movlw	0
 19689  003130  6E10               	movwf	(i2___aomod@divisor+7)^0,c
 19690  003132  ECA2  F026         	call	i2___aomod	;wreg free
 19691  003136  C001  F028         	movff	?i2___aomod,??i2_dtoa
 19692  00313A  C002  F029         	movff	?i2___aomod+1,??i2_dtoa+1
 19693  00313E  C003  F02A         	movff	?i2___aomod+2,??i2_dtoa+2
 19694  003142  C004  F02B         	movff	?i2___aomod+3,??i2_dtoa+3
 19695  003146  C005  F02C         	movff	?i2___aomod+4,??i2_dtoa+4
 19696  00314A  C006  F02D         	movff	?i2___aomod+5,??i2_dtoa+5
 19697  00314E  C007  F02E         	movff	?i2___aomod+6,??i2_dtoa+6
 19698  003152  C008  F02F         	movff	?i2___aomod+7,??i2_dtoa+7
 19699  003156  C028  F013         	movff	??i2_dtoa,i2abs@a
 19700  00315A  C02A  F014         	movff	??i2_dtoa+2,i2abs@a+1
 19701  00315E  EC7E  F031         	call	i2_abs	;wreg free
 19702  003162  5013               	movf	?i2_abs^0,w,c
 19703  003164  0F30               	addlw	48
 19704  003166  6EDF               	movwf	indf2,c
 19705  003168                     
 19706                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 19707  003168  0632               	decf	i2dtoa@p^0,f,c
 19708  00316A  A0D8               	btfss	status,0,c
 19709  00316C  0633               	decf	(i2dtoa@p+1)^0,f,c
 19710  00316E                     
 19711                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 19712  00316E  0634               	decf	i2dtoa@w^0,f,c
 19713  003170  A0D8               	btfss	status,0,c
 19714  003172  0635               	decf	(i2dtoa@w+1)^0,f,c
 19715  003174                     
 19716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 19717  003174  C038  F001         	movff	i2dtoa@n,i2___aodiv@dividend
 19718  003178  C039  F002         	movff	i2dtoa@n+1,i2___aodiv@dividend+1
 19719  00317C  C03A  F003         	movff	i2dtoa@n+2,i2___aodiv@dividend+2
 19720  003180  C03B  F004         	movff	i2dtoa@n+3,i2___aodiv@dividend+3
 19721  003184  C03C  F005         	movff	i2dtoa@n+4,i2___aodiv@dividend+4
 19722  003188  C03D  F006         	movff	i2dtoa@n+5,i2___aodiv@dividend+5
 19723  00318C  C03E  F007         	movff	i2dtoa@n+6,i2___aodiv@dividend+6
 19724  003190  C03F  F008         	movff	i2dtoa@n+7,i2___aodiv@dividend+7
 19725  003194  0E0A               	movlw	10
 19726  003196  6E09               	movwf	i2___aodiv@divisor^0,c
 19727  003198  0E00               	movlw	0
 19728  00319A  6E0A               	movwf	(i2___aodiv@divisor+1)^0,c
 19729  00319C  0E00               	movlw	0
 19730  00319E  6E0B               	movwf	(i2___aodiv@divisor+2)^0,c
 19731  0031A0  0E00               	movlw	0
 19732  0031A2  6E0C               	movwf	(i2___aodiv@divisor+3)^0,c
 19733  0031A4  0E00               	movlw	0
 19734  0031A6  6E0D               	movwf	(i2___aodiv@divisor+4)^0,c
 19735  0031A8  0E00               	movlw	0
 19736  0031AA  6E0E               	movwf	(i2___aodiv@divisor+5)^0,c
 19737  0031AC  0E00               	movlw	0
 19738  0031AE  6E0F               	movwf	(i2___aodiv@divisor+6)^0,c
 19739  0031B0  0E00               	movlw	0
 19740  0031B2  6E10               	movwf	(i2___aodiv@divisor+7)^0,c
 19741  0031B4  ECA7  F023         	call	i2___aodiv	;wreg free
 19742  0031B8  C001  F038         	movff	?i2___aodiv,i2dtoa@n
 19743  0031BC  C002  F039         	movff	?i2___aodiv+1,i2dtoa@n+1
 19744  0031C0  C003  F03A         	movff	?i2___aodiv+2,i2dtoa@n+2
 19745  0031C4  C004  F03B         	movff	?i2___aodiv+3,i2dtoa@n+3
 19746  0031C8  C005  F03C         	movff	?i2___aodiv+4,i2dtoa@n+4
 19747  0031CC  C006  F03D         	movff	?i2___aodiv+5,i2dtoa@n+5
 19748  0031D0  C007  F03E         	movff	?i2___aodiv+6,i2dtoa@n+6
 19749  0031D4  C008  F03F         	movff	?i2___aodiv+7,i2dtoa@n+7
 19750  0031D8                     i2l7475:
 19751                           
 19752                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19753  0031D8  BE41               	btfsc	(i2dtoa@i+1)^0,7,c
 19754  0031DA  EFF7  F018         	goto	i2u884_41
 19755  0031DE  5041               	movf	(i2dtoa@i+1)^0,w,c
 19756  0031E0  E108               	bnz	i2u884_40
 19757  0031E2  0440               	decf	i2dtoa@i^0,w,c
 19758  0031E4  A0D8               	btfss	status,0,c
 19759  0031E6  EFF7  F018         	goto	i2u884_41
 19760  0031EA  EFF9  F018         	goto	i2u884_40
 19761  0031EE                     i2u884_41:
 19762  0031EE  EF2A  F019         	goto	i2l7485
 19763  0031F2                     i2u884_40:
 19764  0031F2  5038               	movf	i2dtoa@n^0,w,c
 19765  0031F4  1039               	iorwf	(i2dtoa@n+1)^0,w,c
 19766  0031F6  103A               	iorwf	(i2dtoa@n+2)^0,w,c
 19767  0031F8  103B               	iorwf	(i2dtoa@n+3)^0,w,c
 19768  0031FA  103C               	iorwf	(i2dtoa@n+4)^0,w,c
 19769  0031FC  103D               	iorwf	(i2dtoa@n+5)^0,w,c
 19770  0031FE  103E               	iorwf	(i2dtoa@n+6)^0,w,c
 19771  003200  103F               	iorwf	(i2dtoa@n+7)^0,w,c
 19772  003202  A4D8               	btfss	status,2,c
 19773  003204  EF06  F019         	goto	i2u885_41
 19774  003208  EF08  F019         	goto	i2u885_40
 19775  00320C                     i2u885_41:
 19776  00320C  EF70  F018         	goto	i2l7465
 19777  003210                     i2u885_40:
 19778  003210  BE33               	btfsc	(i2dtoa@p+1)^0,7,c
 19779  003212  EF15  F019         	goto	i2u886_40
 19780  003216  5033               	movf	(i2dtoa@p+1)^0,w,c
 19781  003218  E106               	bnz	i2u886_41
 19782  00321A  0432               	decf	i2dtoa@p^0,w,c
 19783  00321C  B0D8               	btfsc	status,0,c
 19784  00321E  EF13  F019         	goto	i2u886_41
 19785  003222  EF15  F019         	goto	i2u886_40
 19786  003226                     i2u886_41:
 19787  003226  EF70  F018         	goto	i2l7465
 19788  00322A                     i2u886_40:
 19789  00322A  BE35               	btfsc	(i2dtoa@w+1)^0,7,c
 19790  00322C  EF20  F019         	goto	i2u887_41
 19791  003230  5035               	movf	(i2dtoa@w+1)^0,w,c
 19792  003232  E108               	bnz	i2u887_40
 19793  003234  0434               	decf	i2dtoa@w^0,w,c
 19794  003236  A0D8               	btfss	status,0,c
 19795  003238  EF20  F019         	goto	i2u887_41
 19796  00323C  EF22  F019         	goto	i2u887_40
 19797  003240                     i2u887_41:
 19798  003240  EF2A  F019         	goto	i2l7485
 19799  003244                     i2u887_40:
 19800  003244  0100               	movlb	0	; () banked
 19801  003246  B3BD               	btfsc	_flags& (0+255),1,b
 19802  003248  EF28  F019         	goto	i2u888_41
 19803  00324C  EF2A  F019         	goto	i2u888_40
 19804  003250                     i2u888_41:
 19805  003250  EF70  F018         	goto	i2l7465
 19806  003254                     i2u888_40:
 19807  003254                     i2l7485:
 19808                           
 19809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 19810  003254  5036               	movf	i2dtoa@s^0,w,c
 19811  003256  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 19812  003258  A4D8               	btfss	status,2,c
 19813  00325A  EF31  F019         	goto	i2u889_41
 19814  00325E  EF33  F019         	goto	i2u889_40
 19815  003262                     i2u889_41:
 19816  003262  EF3B  F019         	goto	i2l7489
 19817  003266                     i2u889_40:
 19818  003266  0100               	movlb	0	; () banked
 19819  003268  A5BD               	btfss	_flags& (0+255),2,b
 19820  00326A  EF39  F019         	goto	i2u890_41
 19821  00326E  EF3B  F019         	goto	i2u890_40
 19822  003272                     i2u890_41:
 19823  003272  EF59  F019         	goto	i2l7499
 19824  003276                     i2u890_40:
 19825  003276                     i2l7489:
 19826                           
 19827                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 19828  003276  0640               	decf	i2dtoa@i^0,f,c
 19829  003278  A0D8               	btfss	status,0,c
 19830  00327A  0641               	decf	(i2dtoa@i+1)^0,f,c
 19831  00327C                     
 19832                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 19833  00327C  5036               	movf	i2dtoa@s^0,w,c
 19834  00327E  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 19835  003280  A4D8               	btfss	status,2,c
 19836  003282  EF45  F019         	goto	i2u891_41
 19837  003286  EF47  F019         	goto	i2u891_40
 19838  00328A                     i2u891_41:
 19839  00328A  EF4D  F019         	goto	i2l7495
 19840  00328E                     i2u891_40:
 19841  00328E  0E00               	movlw	0
 19842  003290  6E31               	movwf	(i2_dtoa$1670+1)^0,c
 19843  003292  0E2B               	movlw	43
 19844  003294  6E30               	movwf	i2_dtoa$1670^0,c
 19845  003296  EF51  F019         	goto	i2l7497
 19846  00329A                     i2l7495:
 19847  00329A  0E00               	movlw	0
 19848  00329C  6E31               	movwf	(i2_dtoa$1670+1)^0,c
 19849  00329E  0E2D               	movlw	45
 19850  0032A0  6E30               	movwf	i2_dtoa$1670^0,c
 19851  0032A2                     i2l7497:
 19852  0032A2  0E78               	movlw	low _dbuf
 19853  0032A4  2440               	addwf	i2dtoa@i^0,w,c
 19854  0032A6  6ED9               	movwf	fsr2l,c
 19855  0032A8  0E01               	movlw	high _dbuf
 19856  0032AA  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 19857  0032AC  6EDA               	movwf	fsr2h,c
 19858  0032AE  C030  FFDF         	movff	i2_dtoa$1670,indf2
 19859  0032B2                     i2l7499:
 19860                           
 19861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 19862  0032B2  C01E  F013         	movff	i2dtoa@fp,i2pad@fp
 19863  0032B6  C01F  F014         	movff	i2dtoa@fp+1,i2pad@fp+1
 19864  0032BA  0E78               	movlw	low _dbuf
 19865  0032BC  2440               	addwf	i2dtoa@i^0,w,c
 19866  0032BE  6E15               	movwf	i2pad@buf^0,c
 19867  0032C0  0E01               	movlw	high _dbuf
 19868  0032C2  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 19869  0032C4  6E16               	movwf	(i2pad@buf+1)^0,c
 19870  0032C6  C034  F017         	movff	i2dtoa@w,i2pad@p
 19871  0032CA  C035  F018         	movff	i2dtoa@w+1,i2pad@p+1
 19872  0032CE  ECDF  F02C         	call	i2_pad	;wreg free
 19873  0032D2  C013  F01E         	movff	?i2_pad,?i2_dtoa
 19874  0032D6  C014  F01F         	movff	?i2_pad+1,?i2_dtoa+1
 19875  0032DA  0012               	return		;funcret
 19876  0032DC                     __end_ofi2_dtoa:
 19877                           	opt callstack 0
 19878                           
 19879 ;; *************** function i2_abs *****************
 19880 ;; Defined at:
 19881 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 19882 ;; Parameters:    Size  Location     Type
 19883 ;;  a               2   18[COMRAM] int 
 19884 ;; Auto vars:     Size  Location     Type
 19885 ;;		None
 19886 ;; Return value:  Size  Location     Type
 19887 ;;                  2   18[COMRAM] int 
 19888 ;; Registers used:
 19889 ;;		wreg, status,2, status,0
 19890 ;; Tracked objects:
 19891 ;;		On entry : 0/0
 19892 ;;		On exit  : 0/0
 19893 ;;		Unchanged: 0/0
 19894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19895 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19897 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19898 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19899 ;;Total ram usage:        4 bytes
 19900 ;; Hardware stack levels used:    1
 19901 ;; This function calls:
 19902 ;;		Nothing
 19903 ;; This function is called by:
 19904 ;;		i2_dtoa
 19905 ;; This function uses a non-reentrant model
 19906 ;;
 19907                           
 19908                           	psect	text86
 19909  0062FC                     __ptext86:
 19910                           	opt callstack 0
 19911  0062FC                     i2_abs:
 19912                           	opt callstack 12
 19913  0062FC  BE14               	btfsc	(i2abs@a+1)^0,7,c
 19914  0062FE  EF8B  F031         	goto	i2u860_40
 19915  006302  5014               	movf	(i2abs@a+1)^0,w,c
 19916  006304  E106               	bnz	i2u860_41
 19917  006306  0413               	decf	i2abs@a^0,w,c
 19918  006308  B0D8               	btfsc	status,0,c
 19919  00630A  EF89  F031         	goto	i2u860_41
 19920  00630E  EF8B  F031         	goto	i2u860_40
 19921  006312                     i2u860_41:
 19922  006312  EF99  F031         	goto	i2l1520
 19923  006316                     i2u860_40:
 19924  006316  C013  F015         	movff	i2abs@a,??i2_abs
 19925  00631A  C014  F016         	movff	i2abs@a+1,??i2_abs+1
 19926  00631E  1E15               	comf	??i2_abs^0,f,c
 19927  006320  1E16               	comf	(??i2_abs+1)^0,f,c
 19928  006322  4A15               	infsnz	??i2_abs^0,f,c
 19929  006324  2A16               	incf	(??i2_abs+1)^0,f,c
 19930  006326  C015  F013         	movff	??i2_abs,?i2_abs
 19931  00632A  C016  F014         	movff	??i2_abs+1,?i2_abs+1
 19932  00632E  EF9D  F031         	goto	i2l1523
 19933  006332                     i2l1520:
 19934  006332  C013  F013         	movff	i2abs@a,?i2_abs
 19935  006336  C014  F014         	movff	i2abs@a+1,?i2_abs+1
 19936  00633A                     i2l1523:
 19937  00633A  0012               	return		;funcret
 19938  00633C                     __end_ofi2_abs:
 19939                           	opt callstack 0
 19940                           
 19941 ;; *************** function i2___aomod *****************
 19942 ;; Defined at:
 19943 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 19944 ;; Parameters:    Size  Location     Type
 19945 ;;  dividend        8    0[COMRAM] long long 
 19946 ;;  divisor         8    8[COMRAM] long long 
 19947 ;; Auto vars:     Size  Location     Type
 19948 ;;  __aomod         1   17[COMRAM] unsigned char 
 19949 ;;  __aomod         1   16[COMRAM] unsigned char 
 19950 ;; Return value:  Size  Location     Type
 19951 ;;                  8    0[COMRAM] long long 
 19952 ;; Registers used:
 19953 ;;		wreg, status,2, status,0
 19954 ;; Tracked objects:
 19955 ;;		On entry : 0/0
 19956 ;;		On exit  : 0/0
 19957 ;;		Unchanged: 0/0
 19958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19959 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19960 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19962 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19963 ;;Total ram usage:       18 bytes
 19964 ;; Hardware stack levels used:    1
 19965 ;; This function calls:
 19966 ;;		Nothing
 19967 ;; This function is called by:
 19968 ;;		i2_dtoa
 19969 ;; This function uses a non-reentrant model
 19970 ;;
 19971                           
 19972                           	psect	text87
 19973  004D44                     __ptext87:
 19974                           	opt callstack 0
 19975  004D44                     i2___aomod:
 19976                           	opt callstack 12
 19977  004D44  0E00               	movlw	0
 19978  004D46  6E12               	movwf	i2___aomod@sign^0,c
 19979  004D48  BE08               	btfsc	(i2___aomod@dividend+7)^0,7,c
 19980  004D4A  EFAB  F026         	goto	i2u847_40
 19981  004D4E  EFA9  F026         	goto	i2u847_41
 19982  004D52                     i2u847_41:
 19983  004D52  EFBD  F026         	goto	i2l7301
 19984  004D56                     i2u847_40:
 19985  004D56  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
 19986  004D58  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
 19987  004D5A  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
 19988  004D5C  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
 19989  004D5E  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
 19990  004D60  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
 19991  004D62  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
 19992  004D64  6C01               	negf	i2___aomod@dividend^0,c
 19993  004D66  0E00               	movlw	0
 19994  004D68  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
 19995  004D6A  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
 19996  004D6C  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
 19997  004D6E  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
 19998  004D70  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
 19999  004D72  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
 20000  004D74  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
 20001  004D76  0E01               	movlw	1
 20002  004D78  6E12               	movwf	i2___aomod@sign^0,c
 20003  004D7A                     i2l7301:
 20004  004D7A  BE10               	btfsc	(i2___aomod@divisor+7)^0,7,c
 20005  004D7C  EFC4  F026         	goto	i2u848_40
 20006  004D80  EFC2  F026         	goto	i2u848_41
 20007  004D84                     i2u848_41:
 20008  004D84  EFD4  F026         	goto	i2l7305
 20009  004D88                     i2u848_40:
 20010  004D88  1E10               	comf	(i2___aomod@divisor+7)^0,f,c
 20011  004D8A  1E0F               	comf	(i2___aomod@divisor+6)^0,f,c
 20012  004D8C  1E0E               	comf	(i2___aomod@divisor+5)^0,f,c
 20013  004D8E  1E0D               	comf	(i2___aomod@divisor+4)^0,f,c
 20014  004D90  1E0C               	comf	(i2___aomod@divisor+3)^0,f,c
 20015  004D92  1E0B               	comf	(i2___aomod@divisor+2)^0,f,c
 20016  004D94  1E0A               	comf	(i2___aomod@divisor+1)^0,f,c
 20017  004D96  6C09               	negf	i2___aomod@divisor^0,c
 20018  004D98  0E00               	movlw	0
 20019  004D9A  220A               	addwfc	(i2___aomod@divisor+1)^0,f,c
 20020  004D9C  220B               	addwfc	(i2___aomod@divisor+2)^0,f,c
 20021  004D9E  220C               	addwfc	(i2___aomod@divisor+3)^0,f,c
 20022  004DA0  220D               	addwfc	(i2___aomod@divisor+4)^0,f,c
 20023  004DA2  220E               	addwfc	(i2___aomod@divisor+5)^0,f,c
 20024  004DA4  220F               	addwfc	(i2___aomod@divisor+6)^0,f,c
 20025  004DA6  2210               	addwfc	(i2___aomod@divisor+7)^0,f,c
 20026  004DA8                     i2l7305:
 20027  004DA8  5009               	movf	i2___aomod@divisor^0,w,c
 20028  004DAA  100A               	iorwf	(i2___aomod@divisor+1)^0,w,c
 20029  004DAC  100B               	iorwf	(i2___aomod@divisor+2)^0,w,c
 20030  004DAE  100C               	iorwf	(i2___aomod@divisor+3)^0,w,c
 20031  004DB0  100D               	iorwf	(i2___aomod@divisor+4)^0,w,c
 20032  004DB2  100E               	iorwf	(i2___aomod@divisor+5)^0,w,c
 20033  004DB4  100F               	iorwf	(i2___aomod@divisor+6)^0,w,c
 20034  004DB6  1010               	iorwf	(i2___aomod@divisor+7)^0,w,c
 20035  004DB8  B4D8               	btfsc	status,2,c
 20036  004DBA  EFE1  F026         	goto	i2u849_41
 20037  004DBE  EFE3  F026         	goto	i2u849_40
 20038  004DC2                     i2u849_41:
 20039  004DC2  EF2B  F027         	goto	i2l7321
 20040  004DC6                     i2u849_40:
 20041  004DC6  0E01               	movlw	1
 20042  004DC8  6E11               	movwf	i2___aomod@counter^0,c
 20043  004DCA  EFF1  F026         	goto	i2l7311
 20044  004DCE                     i2l7309:
 20045  004DCE  90D8               	bcf	status,0,c
 20046  004DD0  3609               	rlcf	i2___aomod@divisor^0,f,c
 20047  004DD2  360A               	rlcf	(i2___aomod@divisor+1)^0,f,c
 20048  004DD4  360B               	rlcf	(i2___aomod@divisor+2)^0,f,c
 20049  004DD6  360C               	rlcf	(i2___aomod@divisor+3)^0,f,c
 20050  004DD8  360D               	rlcf	(i2___aomod@divisor+4)^0,f,c
 20051  004DDA  360E               	rlcf	(i2___aomod@divisor+5)^0,f,c
 20052  004DDC  360F               	rlcf	(i2___aomod@divisor+6)^0,f,c
 20053  004DDE  3610               	rlcf	(i2___aomod@divisor+7)^0,f,c
 20054  004DE0  2A11               	incf	i2___aomod@counter^0,f,c
 20055  004DE2                     i2l7311:
 20056  004DE2  AE10               	btfss	(i2___aomod@divisor+7)^0,7,c
 20057  004DE4  EFF6  F026         	goto	i2u850_41
 20058  004DE8  EFF8  F026         	goto	i2u850_40
 20059  004DEC                     i2u850_41:
 20060  004DEC  EFE7  F026         	goto	i2l7309
 20061  004DF0                     i2u850_40:
 20062  004DF0                     i2l7313:
 20063  004DF0  5009               	movf	i2___aomod@divisor^0,w,c
 20064  004DF2  5C01               	subwf	i2___aomod@dividend^0,w,c
 20065  004DF4  500A               	movf	(i2___aomod@divisor+1)^0,w,c
 20066  004DF6  5802               	subwfb	(i2___aomod@dividend+1)^0,w,c
 20067  004DF8  500B               	movf	(i2___aomod@divisor+2)^0,w,c
 20068  004DFA  5803               	subwfb	(i2___aomod@dividend+2)^0,w,c
 20069  004DFC  500C               	movf	(i2___aomod@divisor+3)^0,w,c
 20070  004DFE  5804               	subwfb	(i2___aomod@dividend+3)^0,w,c
 20071  004E00  500D               	movf	(i2___aomod@divisor+4)^0,w,c
 20072  004E02  5805               	subwfb	(i2___aomod@dividend+4)^0,w,c
 20073  004E04  500E               	movf	(i2___aomod@divisor+5)^0,w,c
 20074  004E06  5806               	subwfb	(i2___aomod@dividend+5)^0,w,c
 20075  004E08  500F               	movf	(i2___aomod@divisor+6)^0,w,c
 20076  004E0A  5807               	subwfb	(i2___aomod@dividend+6)^0,w,c
 20077  004E0C  5010               	movf	(i2___aomod@divisor+7)^0,w,c
 20078  004E0E  5808               	subwfb	(i2___aomod@dividend+7)^0,w,c
 20079  004E10  A0D8               	btfss	status,0,c
 20080  004E12  EF0D  F027         	goto	i2u851_41
 20081  004E16  EF0F  F027         	goto	i2u851_40
 20082  004E1A                     i2u851_41:
 20083  004E1A  EF1F  F027         	goto	i2l7317
 20084  004E1E                     i2u851_40:
 20085  004E1E  5009               	movf	i2___aomod@divisor^0,w,c
 20086  004E20  5E01               	subwf	i2___aomod@dividend^0,f,c
 20087  004E22  500A               	movf	(i2___aomod@divisor+1)^0,w,c
 20088  004E24  5A02               	subwfb	(i2___aomod@dividend+1)^0,f,c
 20089  004E26  500B               	movf	(i2___aomod@divisor+2)^0,w,c
 20090  004E28  5A03               	subwfb	(i2___aomod@dividend+2)^0,f,c
 20091  004E2A  500C               	movf	(i2___aomod@divisor+3)^0,w,c
 20092  004E2C  5A04               	subwfb	(i2___aomod@dividend+3)^0,f,c
 20093  004E2E  500D               	movf	(i2___aomod@divisor+4)^0,w,c
 20094  004E30  5A05               	subwfb	(i2___aomod@dividend+4)^0,f,c
 20095  004E32  500E               	movf	(i2___aomod@divisor+5)^0,w,c
 20096  004E34  5A06               	subwfb	(i2___aomod@dividend+5)^0,f,c
 20097  004E36  500F               	movf	(i2___aomod@divisor+6)^0,w,c
 20098  004E38  5A07               	subwfb	(i2___aomod@dividend+6)^0,f,c
 20099  004E3A  5010               	movf	(i2___aomod@divisor+7)^0,w,c
 20100  004E3C  5A08               	subwfb	(i2___aomod@dividend+7)^0,f,c
 20101  004E3E                     i2l7317:
 20102  004E3E  90D8               	bcf	status,0,c
 20103  004E40  3210               	rrcf	(i2___aomod@divisor+7)^0,f,c
 20104  004E42  320F               	rrcf	(i2___aomod@divisor+6)^0,f,c
 20105  004E44  320E               	rrcf	(i2___aomod@divisor+5)^0,f,c
 20106  004E46  320D               	rrcf	(i2___aomod@divisor+4)^0,f,c
 20107  004E48  320C               	rrcf	(i2___aomod@divisor+3)^0,f,c
 20108  004E4A  320B               	rrcf	(i2___aomod@divisor+2)^0,f,c
 20109  004E4C  320A               	rrcf	(i2___aomod@divisor+1)^0,f,c
 20110  004E4E  3209               	rrcf	i2___aomod@divisor^0,f,c
 20111  004E50  2E11               	decfsz	i2___aomod@counter^0,f,c
 20112  004E52  EFF8  F026         	goto	i2l7313
 20113  004E56                     i2l7321:
 20114  004E56  5012               	movf	i2___aomod@sign^0,w,c
 20115  004E58  B4D8               	btfsc	status,2,c
 20116  004E5A  EF31  F027         	goto	i2u852_41
 20117  004E5E  EF33  F027         	goto	i2u852_40
 20118  004E62                     i2u852_41:
 20119  004E62  EF43  F027         	goto	i2l7325
 20120  004E66                     i2u852_40:
 20121  004E66  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
 20122  004E68  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
 20123  004E6A  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
 20124  004E6C  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
 20125  004E6E  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
 20126  004E70  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
 20127  004E72  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
 20128  004E74  6C01               	negf	i2___aomod@dividend^0,c
 20129  004E76  0E00               	movlw	0
 20130  004E78  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
 20131  004E7A  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
 20132  004E7C  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
 20133  004E7E  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
 20134  004E80  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
 20135  004E82  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
 20136  004E84  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
 20137  004E86                     i2l7325:
 20138  004E86  C001  F001         	movff	i2___aomod@dividend,?i2___aomod
 20139  004E8A  C002  F002         	movff	i2___aomod@dividend+1,?i2___aomod+1
 20140  004E8E  C003  F003         	movff	i2___aomod@dividend+2,?i2___aomod+2
 20141  004E92  C004  F004         	movff	i2___aomod@dividend+3,?i2___aomod+3
 20142  004E96  C005  F005         	movff	i2___aomod@dividend+4,?i2___aomod+4
 20143  004E9A  C006  F006         	movff	i2___aomod@dividend+5,?i2___aomod+5
 20144  004E9E  C007  F007         	movff	i2___aomod@dividend+6,?i2___aomod+6
 20145  004EA2  C008  F008         	movff	i2___aomod@dividend+7,?i2___aomod+7
 20146  004EA6  0012               	return		;funcret
 20147  004EA8                     __end_ofi2___aomod:
 20148                           	opt callstack 0
 20149                           
 20150 ;; *************** function i2___aodiv *****************
 20151 ;; Defined at:
 20152 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 20153 ;; Parameters:    Size  Location     Type
 20154 ;;  dividend        8    0[COMRAM] long long 
 20155 ;;  divisor         8    8[COMRAM] long long 
 20156 ;; Auto vars:     Size  Location     Type
 20157 ;;  __aodiv         8   18[COMRAM] long long 
 20158 ;;  __aodiv         1   17[COMRAM] unsigned char 
 20159 ;;  __aodiv         1   16[COMRAM] unsigned char 
 20160 ;; Return value:  Size  Location     Type
 20161 ;;                  8    0[COMRAM] long long 
 20162 ;; Registers used:
 20163 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20164 ;; Tracked objects:
 20165 ;;		On entry : 0/0
 20166 ;;		On exit  : 0/0
 20167 ;;		Unchanged: 0/0
 20168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20169 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20170 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20172 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20173 ;;Total ram usage:       26 bytes
 20174 ;; Hardware stack levels used:    1
 20175 ;; This function calls:
 20176 ;;		Nothing
 20177 ;; This function is called by:
 20178 ;;		i2_dtoa
 20179 ;; This function uses a non-reentrant model
 20180 ;;
 20181                           
 20182                           	psect	text88
 20183  00474E                     __ptext88:
 20184                           	opt callstack 0
 20185  00474E                     i2___aodiv:
 20186                           	opt callstack 12
 20187  00474E  0E00               	movlw	0
 20188  004750  6E12               	movwf	i2___aodiv@sign^0,c
 20189  004752  BE10               	btfsc	(i2___aodiv@divisor+7)^0,7,c
 20190  004754  EFB0  F023         	goto	i2u840_40
 20191  004758  EFAE  F023         	goto	i2u840_41
 20192  00475C                     i2u840_41:
 20193  00475C  EFC2  F023         	goto	i2l7257
 20194  004760                     i2u840_40:
 20195  004760  1E10               	comf	(i2___aodiv@divisor+7)^0,f,c
 20196  004762  1E0F               	comf	(i2___aodiv@divisor+6)^0,f,c
 20197  004764  1E0E               	comf	(i2___aodiv@divisor+5)^0,f,c
 20198  004766  1E0D               	comf	(i2___aodiv@divisor+4)^0,f,c
 20199  004768  1E0C               	comf	(i2___aodiv@divisor+3)^0,f,c
 20200  00476A  1E0B               	comf	(i2___aodiv@divisor+2)^0,f,c
 20201  00476C  1E0A               	comf	(i2___aodiv@divisor+1)^0,f,c
 20202  00476E  6C09               	negf	i2___aodiv@divisor^0,c
 20203  004770  0E00               	movlw	0
 20204  004772  220A               	addwfc	(i2___aodiv@divisor+1)^0,f,c
 20205  004774  220B               	addwfc	(i2___aodiv@divisor+2)^0,f,c
 20206  004776  220C               	addwfc	(i2___aodiv@divisor+3)^0,f,c
 20207  004778  220D               	addwfc	(i2___aodiv@divisor+4)^0,f,c
 20208  00477A  220E               	addwfc	(i2___aodiv@divisor+5)^0,f,c
 20209  00477C  220F               	addwfc	(i2___aodiv@divisor+6)^0,f,c
 20210  00477E  2210               	addwfc	(i2___aodiv@divisor+7)^0,f,c
 20211  004780  0E01               	movlw	1
 20212  004782  6E12               	movwf	i2___aodiv@sign^0,c
 20213  004784                     i2l7257:
 20214  004784  BE08               	btfsc	(i2___aodiv@dividend+7)^0,7,c
 20215  004786  EFC9  F023         	goto	i2u841_40
 20216  00478A  EFC7  F023         	goto	i2u841_41
 20217  00478E                     i2u841_41:
 20218  00478E  EFDB  F023         	goto	i2l7263
 20219  004792                     i2u841_40:
 20220  004792  1E08               	comf	(i2___aodiv@dividend+7)^0,f,c
 20221  004794  1E07               	comf	(i2___aodiv@dividend+6)^0,f,c
 20222  004796  1E06               	comf	(i2___aodiv@dividend+5)^0,f,c
 20223  004798  1E05               	comf	(i2___aodiv@dividend+4)^0,f,c
 20224  00479A  1E04               	comf	(i2___aodiv@dividend+3)^0,f,c
 20225  00479C  1E03               	comf	(i2___aodiv@dividend+2)^0,f,c
 20226  00479E  1E02               	comf	(i2___aodiv@dividend+1)^0,f,c
 20227  0047A0  6C01               	negf	i2___aodiv@dividend^0,c
 20228  0047A2  0E00               	movlw	0
 20229  0047A4  2202               	addwfc	(i2___aodiv@dividend+1)^0,f,c
 20230  0047A6  2203               	addwfc	(i2___aodiv@dividend+2)^0,f,c
 20231  0047A8  2204               	addwfc	(i2___aodiv@dividend+3)^0,f,c
 20232  0047AA  2205               	addwfc	(i2___aodiv@dividend+4)^0,f,c
 20233  0047AC  2206               	addwfc	(i2___aodiv@dividend+5)^0,f,c
 20234  0047AE  2207               	addwfc	(i2___aodiv@dividend+6)^0,f,c
 20235  0047B0  2208               	addwfc	(i2___aodiv@dividend+7)^0,f,c
 20236  0047B2  0E01               	movlw	1
 20237  0047B4  1A12               	xorwf	i2___aodiv@sign^0,f,c
 20238  0047B6                     i2l7263:
 20239  0047B6  EE20  F013         	lfsr	2,i2___aodiv@quotient
 20240  0047BA  0E07               	movlw	7
 20241  0047BC                     i2u842_41:
 20242  0047BC  6ADE               	clrf	postinc2,c
 20243  0047BE  06E8               	decf	wreg,f,c
 20244  0047C0  E2FD               	bc	i2u842_41
 20245  0047C2  5009               	movf	i2___aodiv@divisor^0,w,c
 20246  0047C4  100A               	iorwf	(i2___aodiv@divisor+1)^0,w,c
 20247  0047C6  100B               	iorwf	(i2___aodiv@divisor+2)^0,w,c
 20248  0047C8  100C               	iorwf	(i2___aodiv@divisor+3)^0,w,c
 20249  0047CA  100D               	iorwf	(i2___aodiv@divisor+4)^0,w,c
 20250  0047CC  100E               	iorwf	(i2___aodiv@divisor+5)^0,w,c
 20251  0047CE  100F               	iorwf	(i2___aodiv@divisor+6)^0,w,c
 20252  0047D0  1010               	iorwf	(i2___aodiv@divisor+7)^0,w,c
 20253  0047D2  B4D8               	btfsc	status,2,c
 20254  0047D4  EFEE  F023         	goto	i2u843_41
 20255  0047D8  EFF0  F023         	goto	i2u843_40
 20256  0047DC                     i2u843_41:
 20257  0047DC  EF42  F024         	goto	i2l7285
 20258  0047E0                     i2u843_40:
 20259  0047E0  0E01               	movlw	1
 20260  0047E2  6E11               	movwf	i2___aodiv@counter^0,c
 20261  0047E4  EFFE  F023         	goto	i2l7271
 20262  0047E8                     i2l7269:
 20263  0047E8  90D8               	bcf	status,0,c
 20264  0047EA  3609               	rlcf	i2___aodiv@divisor^0,f,c
 20265  0047EC  360A               	rlcf	(i2___aodiv@divisor+1)^0,f,c
 20266  0047EE  360B               	rlcf	(i2___aodiv@divisor+2)^0,f,c
 20267  0047F0  360C               	rlcf	(i2___aodiv@divisor+3)^0,f,c
 20268  0047F2  360D               	rlcf	(i2___aodiv@divisor+4)^0,f,c
 20269  0047F4  360E               	rlcf	(i2___aodiv@divisor+5)^0,f,c
 20270  0047F6  360F               	rlcf	(i2___aodiv@divisor+6)^0,f,c
 20271  0047F8  3610               	rlcf	(i2___aodiv@divisor+7)^0,f,c
 20272  0047FA  2A11               	incf	i2___aodiv@counter^0,f,c
 20273  0047FC                     i2l7271:
 20274  0047FC  AE10               	btfss	(i2___aodiv@divisor+7)^0,7,c
 20275  0047FE  EF03  F024         	goto	i2u844_41
 20276  004802  EF05  F024         	goto	i2u844_40
 20277  004806                     i2u844_41:
 20278  004806  EFF4  F023         	goto	i2l7269
 20279  00480A                     i2u844_40:
 20280  00480A                     i2l7273:
 20281  00480A  90D8               	bcf	status,0,c
 20282  00480C  3613               	rlcf	i2___aodiv@quotient^0,f,c
 20283  00480E  3614               	rlcf	(i2___aodiv@quotient+1)^0,f,c
 20284  004810  3615               	rlcf	(i2___aodiv@quotient+2)^0,f,c
 20285  004812  3616               	rlcf	(i2___aodiv@quotient+3)^0,f,c
 20286  004814  3617               	rlcf	(i2___aodiv@quotient+4)^0,f,c
 20287  004816  3618               	rlcf	(i2___aodiv@quotient+5)^0,f,c
 20288  004818  3619               	rlcf	(i2___aodiv@quotient+6)^0,f,c
 20289  00481A  361A               	rlcf	(i2___aodiv@quotient+7)^0,f,c
 20290  00481C  5009               	movf	i2___aodiv@divisor^0,w,c
 20291  00481E  5C01               	subwf	i2___aodiv@dividend^0,w,c
 20292  004820  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
 20293  004822  5802               	subwfb	(i2___aodiv@dividend+1)^0,w,c
 20294  004824  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
 20295  004826  5803               	subwfb	(i2___aodiv@dividend+2)^0,w,c
 20296  004828  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
 20297  00482A  5804               	subwfb	(i2___aodiv@dividend+3)^0,w,c
 20298  00482C  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
 20299  00482E  5805               	subwfb	(i2___aodiv@dividend+4)^0,w,c
 20300  004830  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
 20301  004832  5806               	subwfb	(i2___aodiv@dividend+5)^0,w,c
 20302  004834  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
 20303  004836  5807               	subwfb	(i2___aodiv@dividend+6)^0,w,c
 20304  004838  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
 20305  00483A  5808               	subwfb	(i2___aodiv@dividend+7)^0,w,c
 20306  00483C  A0D8               	btfss	status,0,c
 20307  00483E  EF23  F024         	goto	i2u845_41
 20308  004842  EF25  F024         	goto	i2u845_40
 20309  004846                     i2u845_41:
 20310  004846  EF36  F024         	goto	i2l7281
 20311  00484A                     i2u845_40:
 20312  00484A  5009               	movf	i2___aodiv@divisor^0,w,c
 20313  00484C  5E01               	subwf	i2___aodiv@dividend^0,f,c
 20314  00484E  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
 20315  004850  5A02               	subwfb	(i2___aodiv@dividend+1)^0,f,c
 20316  004852  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
 20317  004854  5A03               	subwfb	(i2___aodiv@dividend+2)^0,f,c
 20318  004856  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
 20319  004858  5A04               	subwfb	(i2___aodiv@dividend+3)^0,f,c
 20320  00485A  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
 20321  00485C  5A05               	subwfb	(i2___aodiv@dividend+4)^0,f,c
 20322  00485E  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
 20323  004860  5A06               	subwfb	(i2___aodiv@dividend+5)^0,f,c
 20324  004862  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
 20325  004864  5A07               	subwfb	(i2___aodiv@dividend+6)^0,f,c
 20326  004866  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
 20327  004868  5A08               	subwfb	(i2___aodiv@dividend+7)^0,f,c
 20328  00486A  8013               	bsf	i2___aodiv@quotient^0,0,c
 20329  00486C                     i2l7281:
 20330  00486C  90D8               	bcf	status,0,c
 20331  00486E  3210               	rrcf	(i2___aodiv@divisor+7)^0,f,c
 20332  004870  320F               	rrcf	(i2___aodiv@divisor+6)^0,f,c
 20333  004872  320E               	rrcf	(i2___aodiv@divisor+5)^0,f,c
 20334  004874  320D               	rrcf	(i2___aodiv@divisor+4)^0,f,c
 20335  004876  320C               	rrcf	(i2___aodiv@divisor+3)^0,f,c
 20336  004878  320B               	rrcf	(i2___aodiv@divisor+2)^0,f,c
 20337  00487A  320A               	rrcf	(i2___aodiv@divisor+1)^0,f,c
 20338  00487C  3209               	rrcf	i2___aodiv@divisor^0,f,c
 20339  00487E  2E11               	decfsz	i2___aodiv@counter^0,f,c
 20340  004880  EF05  F024         	goto	i2l7273
 20341  004884                     i2l7285:
 20342  004884  5012               	movf	i2___aodiv@sign^0,w,c
 20343  004886  B4D8               	btfsc	status,2,c
 20344  004888  EF48  F024         	goto	i2u846_41
 20345  00488C  EF4A  F024         	goto	i2u846_40
 20346  004890                     i2u846_41:
 20347  004890  EF5A  F024         	goto	i2l7289
 20348  004894                     i2u846_40:
 20349  004894  1E1A               	comf	(i2___aodiv@quotient+7)^0,f,c
 20350  004896  1E19               	comf	(i2___aodiv@quotient+6)^0,f,c
 20351  004898  1E18               	comf	(i2___aodiv@quotient+5)^0,f,c
 20352  00489A  1E17               	comf	(i2___aodiv@quotient+4)^0,f,c
 20353  00489C  1E16               	comf	(i2___aodiv@quotient+3)^0,f,c
 20354  00489E  1E15               	comf	(i2___aodiv@quotient+2)^0,f,c
 20355  0048A0  1E14               	comf	(i2___aodiv@quotient+1)^0,f,c
 20356  0048A2  6C13               	negf	i2___aodiv@quotient^0,c
 20357  0048A4  0E00               	movlw	0
 20358  0048A6  2214               	addwfc	(i2___aodiv@quotient+1)^0,f,c
 20359  0048A8  2215               	addwfc	(i2___aodiv@quotient+2)^0,f,c
 20360  0048AA  2216               	addwfc	(i2___aodiv@quotient+3)^0,f,c
 20361  0048AC  2217               	addwfc	(i2___aodiv@quotient+4)^0,f,c
 20362  0048AE  2218               	addwfc	(i2___aodiv@quotient+5)^0,f,c
 20363  0048B0  2219               	addwfc	(i2___aodiv@quotient+6)^0,f,c
 20364  0048B2  221A               	addwfc	(i2___aodiv@quotient+7)^0,f,c
 20365  0048B4                     i2l7289:
 20366  0048B4  C013  F001         	movff	i2___aodiv@quotient,?i2___aodiv
 20367  0048B8  C014  F002         	movff	i2___aodiv@quotient+1,?i2___aodiv+1
 20368  0048BC  C015  F003         	movff	i2___aodiv@quotient+2,?i2___aodiv+2
 20369  0048C0  C016  F004         	movff	i2___aodiv@quotient+3,?i2___aodiv+3
 20370  0048C4  C017  F005         	movff	i2___aodiv@quotient+4,?i2___aodiv+4
 20371  0048C8  C018  F006         	movff	i2___aodiv@quotient+5,?i2___aodiv+5
 20372  0048CC  C019  F007         	movff	i2___aodiv@quotient+6,?i2___aodiv+6
 20373  0048D0  C01A  F008         	movff	i2___aodiv@quotient+7,?i2___aodiv+7
 20374  0048D4  0012               	return		;funcret
 20375  0048D6                     __end_ofi2___aodiv:
 20376                           	opt callstack 0
 20377                           
 20378 ;; *************** function i2_ctoa *****************
 20379 ;; Defined at:
 20380 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 20381 ;; Parameters:    Size  Location     Type
 20382 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 20383 ;;		 -> vsnprintf@f(6), NULL(0), 
 20384 ;;  c               1   31[COMRAM] unsigned char 
 20385 ;; Auto vars:     Size  Location     Type
 20386 ;;  ctoa            2   32[COMRAM] int 
 20387 ;;  ctoa            2    0        int 
 20388 ;; Return value:  Size  Location     Type
 20389 ;;                  2   29[COMRAM] int 
 20390 ;; Registers used:
 20391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20392 ;; Tracked objects:
 20393 ;;		On entry : 0/0
 20394 ;;		On exit  : 0/0
 20395 ;;		Unchanged: 0/0
 20396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20397 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20398 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20400 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20401 ;;Total ram usage:        5 bytes
 20402 ;; Hardware stack levels used:    1
 20403 ;; Hardware stack levels required when called:    5
 20404 ;; This function calls:
 20405 ;;		i2_pad
 20406 ;; This function is called by:
 20407 ;;		i2_vfpfcnvrt
 20408 ;; This function uses a non-reentrant model
 20409 ;;
 20410                           
 20411                           	psect	text89
 20412  005F32                     __ptext89:
 20413                           	opt callstack 0
 20414  005F32                     i2_ctoa:
 20415                           	opt callstack 8
 20416  005F32                     
 20417                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 20418  005F32  0100               	movlb	0	; () banked
 20419  005F34  51B9               	movf	_width& (0+255),w,b
 20420  005F36  11BA               	iorwf	(_width+1)& (0+255),w,b
 20421  005F38  A4D8               	btfss	status,2,c
 20422  005F3A  EFA1  F02F         	goto	i2u876_41
 20423  005F3E  EFA3  F02F         	goto	i2u876_40
 20424  005F42                     i2u876_41:
 20425  005F42  EFA9  F02F         	goto	i2l7431
 20426  005F46                     i2u876_40:
 20427  005F46                     
 20428                           ; BSR set to: 0
 20429  005F46  C0B9  F021         	movff	_width,i2ctoa@w
 20430  005F4A  C0BA  F022         	movff	_width+1,i2ctoa@w+1
 20431  005F4E  EFAF  F02F         	goto	i2l7433
 20432  005F52                     i2l7431:
 20433                           
 20434                           ; BSR set to: 0
 20435  005F52  0EFF               	movlw	255
 20436  005F54  25B9               	addwf	_width& (0+255),w,b
 20437  005F56  6E21               	movwf	i2ctoa@w^0,c
 20438  005F58  0EFF               	movlw	255
 20439  005F5A  21BA               	addwfc	(_width+1)& (0+255),w,b
 20440  005F5C  6E22               	movwf	(i2ctoa@w+1)^0,c
 20441  005F5E                     i2l7433:
 20442                           
 20443                           ; BSR set to: 0
 20444                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 20445  005F5E  C020  F178         	movff	i2ctoa@c,_dbuf
 20446  005F62                     
 20447                           ; BSR set to: 0
 20448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 20449  005F62  0E00               	movlw	0
 20450  005F64  0101               	movlb	1	; () banked
 20451  005F66  6F79               	movwf	(_dbuf+1)& (0+255),b
 20452  005F68                     
 20453                           ; BSR set to: 1
 20454                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 20455  005F68  C01E  F013         	movff	i2ctoa@fp,i2pad@fp
 20456  005F6C  C01F  F014         	movff	i2ctoa@fp+1,i2pad@fp+1
 20457  005F70  0E78               	movlw	low _dbuf
 20458  005F72  6E15               	movwf	i2pad@buf^0,c
 20459  005F74  0E01               	movlw	high _dbuf
 20460  005F76  6E16               	movwf	(i2pad@buf+1)^0,c
 20461  005F78  C021  F017         	movff	i2ctoa@w,i2pad@p
 20462  005F7C  C022  F018         	movff	i2ctoa@w+1,i2pad@p+1
 20463  005F80  ECDF  F02C         	call	i2_pad	;wreg free
 20464  005F84  C013  F01E         	movff	?i2_pad,?i2_ctoa
 20465  005F88  C014  F01F         	movff	?i2_pad+1,?i2_ctoa+1
 20466  005F8C  0012               	return		;funcret
 20467  005F8E                     __end_ofi2_ctoa:
 20468                           	opt callstack 0
 20469                           
 20470 ;; *************** function i2_pad *****************
 20471 ;; Defined at:
 20472 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 20473 ;; Parameters:    Size  Location     Type
 20474 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
 20475 ;;		 -> vsnprintf@f(6), NULL(0), 
 20476 ;;  buf             2   20[COMRAM] PTR unsigned char 
 20477 ;;		 -> dbuf(32), 
 20478 ;;  p               2   22[COMRAM] int 
 20479 ;; Auto vars:     Size  Location     Type
 20480 ;;  pad             2   27[COMRAM] int 
 20481 ;;  pad             2   25[COMRAM] int 
 20482 ;; Return value:  Size  Location     Type
 20483 ;;                  2   18[COMRAM] int 
 20484 ;; Registers used:
 20485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20486 ;; Tracked objects:
 20487 ;;		On entry : 0/0
 20488 ;;		On exit  : 0/0
 20489 ;;		Unchanged: 0/0
 20490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20491 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20492 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20493 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20494 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20495 ;;Total ram usage:       11 bytes
 20496 ;; Hardware stack levels used:    1
 20497 ;; Hardware stack levels required when called:    4
 20498 ;; This function calls:
 20499 ;;		i2_fputc
 20500 ;;		i2_fputs
 20501 ;;		i2_strlen
 20502 ;; This function is called by:
 20503 ;;		i2_ctoa
 20504 ;;		i2_dtoa
 20505 ;;		i2_otoa
 20506 ;;		i2_utoa
 20507 ;;		i2_xtoa
 20508 ;; This function uses a non-reentrant model
 20509 ;;
 20510                           
 20511                           	psect	text90
 20512  0059BE                     __ptext90:
 20513                           	opt callstack 0
 20514  0059BE                     i2_pad:
 20515                           	opt callstack 8
 20516  0059BE                     
 20517                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 20518  0059BE  0100               	movlb	0	; () banked
 20519  0059C0  A1BD               	btfss	_flags& (0+255),0,b
 20520  0059C2  EFE5  F02C         	goto	i2u836_41
 20521  0059C6  EFE7  F02C         	goto	i2u836_40
 20522  0059CA                     i2u836_41:
 20523  0059CA  EFF1  F02C         	goto	i2l7225
 20524  0059CE                     i2u836_40:
 20525  0059CE                     
 20526                           ; BSR set to: 0
 20527                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 20528  0059CE  C015  F00C         	movff	i2pad@buf,i2fputs@s
 20529  0059D2  C016  F00D         	movff	i2pad@buf+1,i2fputs@s+1
 20530  0059D6  C013  F00E         	movff	i2pad@fp,i2fputs@fp
 20531  0059DA  C014  F00F         	movff	i2pad@fp+1,i2fputs@fp+1
 20532  0059DE  ECFA  F030         	call	i2_fputs	;wreg free
 20533  0059E2                     i2l7225:
 20534                           
 20535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 20536  0059E2  BE18               	btfsc	(i2pad@p+1)^0,7,c
 20537  0059E4  EFF6  F02C         	goto	i2u837_41
 20538  0059E8  EFF8  F02C         	goto	i2u837_40
 20539  0059EC                     i2u837_41:
 20540  0059EC  EFFE  F02C         	goto	i2l7229
 20541  0059F0                     i2u837_40:
 20542  0059F0  C017  F01C         	movff	i2pad@p,i2pad@w
 20543  0059F4  C018  F01D         	movff	i2pad@p+1,i2pad@w+1
 20544  0059F8  EF02  F02D         	goto	i2l638
 20545  0059FC                     i2l7229:
 20546  0059FC  0E00               	movlw	0
 20547  0059FE  6E1D               	movwf	(i2pad@w+1)^0,c
 20548  005A00  0E00               	movlw	0
 20549  005A02  6E1C               	movwf	i2pad@w^0,c
 20550  005A04                     i2l638:
 20551                           
 20552                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 20553  005A04  0E00               	movlw	0
 20554  005A06  6E1B               	movwf	(i2pad@i+1)^0,c
 20555  005A08  0E00               	movlw	0
 20556  005A0A  6E1A               	movwf	i2pad@i^0,c
 20557                           
 20558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 20559  005A0C  EF14  F02D         	goto	i2l7235
 20560  005A10                     i2l7231:
 20561                           
 20562                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 20563  005A10  0E00               	movlw	0
 20564  005A12  6E04               	movwf	(i2fputc@c+1)^0,c
 20565  005A14  0E20               	movlw	32
 20566  005A16  6E03               	movwf	i2fputc@c^0,c
 20567  005A18  C013  F005         	movff	i2pad@fp,i2fputc@fp
 20568  005A1C  C014  F006         	movff	i2pad@fp+1,i2fputc@fp+1
 20569  005A20  EC7A  F02C         	call	i2_fputc	;wreg free
 20570  005A24                     
 20571                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 20572  005A24  4A1A               	infsnz	i2pad@i^0,f,c
 20573  005A26  2A1B               	incf	(i2pad@i+1)^0,f,c
 20574  005A28                     i2l7235:
 20575                           
 20576                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 20577  005A28  501C               	movf	i2pad@w^0,w,c
 20578  005A2A  5C1A               	subwf	i2pad@i^0,w,c
 20579  005A2C  501B               	movf	(i2pad@i+1)^0,w,c
 20580  005A2E  0A80               	xorlw	128
 20581  005A30  6E19               	movwf	??i2_pad^0,c
 20582  005A32  501D               	movf	(i2pad@w+1)^0,w,c
 20583  005A34  0A80               	xorlw	128
 20584  005A36  5819               	subwfb	??i2_pad^0,w,c
 20585  005A38  A0D8               	btfss	status,0,c
 20586  005A3A  EF21  F02D         	goto	i2u838_41
 20587  005A3E  EF23  F02D         	goto	i2u838_40
 20588  005A42                     i2u838_41:
 20589  005A42  EF08  F02D         	goto	i2l7231
 20590  005A46                     i2u838_40:
 20591  005A46                     
 20592                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 20593  005A46  0100               	movlb	0	; () banked
 20594  005A48  B1BD               	btfsc	_flags& (0+255),0,b
 20595  005A4A  EF29  F02D         	goto	i2u839_41
 20596  005A4E  EF2B  F02D         	goto	i2u839_40
 20597  005A52                     i2u839_41:
 20598  005A52  EF35  F02D         	goto	i2l7239
 20599  005A56                     i2u839_40:
 20600  005A56                     
 20601                           ; BSR set to: 0
 20602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 20603  005A56  C015  F00C         	movff	i2pad@buf,i2fputs@s
 20604  005A5A  C016  F00D         	movff	i2pad@buf+1,i2fputs@s+1
 20605  005A5E  C013  F00E         	movff	i2pad@fp,i2fputs@fp
 20606  005A62  C014  F00F         	movff	i2pad@fp+1,i2fputs@fp+1
 20607  005A66  ECFA  F030         	call	i2_fputs	;wreg free
 20608  005A6A                     i2l7239:
 20609                           
 20610                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 20611  005A6A  C015  F001         	movff	i2pad@buf,i2strlen@s
 20612  005A6E  C016  F002         	movff	i2pad@buf+1,i2strlen@s+1
 20613  005A72  ECBF  F032         	call	i2_strlen	;wreg free
 20614  005A76  501C               	movf	i2pad@w^0,w,c
 20615  005A78  2401               	addwf	?i2_strlen^0,w,c
 20616  005A7A  6E13               	movwf	?i2_pad^0,c
 20617  005A7C  501D               	movf	(i2pad@w+1)^0,w,c
 20618  005A7E  2002               	addwfc	(?i2_strlen+1)^0,w,c
 20619  005A80  6E14               	movwf	(?i2_pad+1)^0,c
 20620  005A82  0012               	return		;funcret
 20621  005A84                     __end_ofi2_pad:
 20622                           	opt callstack 0
 20623                           
 20624 ;; *************** function i2_strlen *****************
 20625 ;; Defined at:
 20626 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 20627 ;; Parameters:    Size  Location     Type
 20628 ;;  s               2    0[COMRAM] PTR const unsigned char 
 20629 ;;		 -> i2stoa@nuls(7), ?_snprintf(2), ?_printf(2), stoa@nuls(7), 
 20630 ;;		 -> dbuf(32), 
 20631 ;; Auto vars:     Size  Location     Type
 20632 ;;  strlen          2    2[COMRAM] PTR const unsigned char 
 20633 ;;		 -> i2stoa@nuls(7), ?_snprintf(2), ?_printf(2), stoa@nuls(7), 
 20634 ;;		 -> dbuf(32), 
 20635 ;; Return value:  Size  Location     Type
 20636 ;;                  2    0[COMRAM] unsigned int 
 20637 ;; Registers used:
 20638 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20639 ;; Tracked objects:
 20640 ;;		On entry : 0/0
 20641 ;;		On exit  : 0/0
 20642 ;;		Unchanged: 0/0
 20643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20644 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20645 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20647 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20648 ;;Total ram usage:        4 bytes
 20649 ;; Hardware stack levels used:    1
 20650 ;; This function calls:
 20651 ;;		Nothing
 20652 ;; This function is called by:
 20653 ;;		i2_pad
 20654 ;;		i2_stoa
 20655 ;; This function uses a non-reentrant model
 20656 ;;
 20657                           
 20658                           	psect	text91
 20659  00657E                     __ptext91:
 20660                           	opt callstack 0
 20661  00657E                     i2_strlen:
 20662                           	opt callstack 11
 20663  00657E  C001  F003         	movff	i2strlen@s,i2strlen@a
 20664  006582  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
 20665  006586  EFC7  F032         	goto	i2l7197
 20666  00658A                     i2l7195:
 20667  00658A  4A01               	infsnz	i2strlen@s^0,f,c
 20668  00658C  2A02               	incf	(i2strlen@s+1)^0,f,c
 20669  00658E                     i2l7197:
 20670  00658E  C001  FFD9         	movff	i2strlen@s,fsr2l
 20671  006592  C002  FFDA         	movff	i2strlen@s+1,fsr2h
 20672  006596  50DF               	movf	indf2,w,c
 20673  006598  A4D8               	btfss	status,2,c
 20674  00659A  EFD1  F032         	goto	i2u829_41
 20675  00659E  EFD3  F032         	goto	i2u829_40
 20676  0065A2                     i2u829_41:
 20677  0065A2  EFC5  F032         	goto	i2l7195
 20678  0065A6                     i2u829_40:
 20679  0065A6  5003               	movf	i2strlen@a^0,w,c
 20680  0065A8  5C01               	subwf	i2strlen@s^0,w,c
 20681  0065AA  6E01               	movwf	?i2_strlen^0,c
 20682  0065AC  5004               	movf	(i2strlen@a+1)^0,w,c
 20683  0065AE  5802               	subwfb	(i2strlen@s+1)^0,w,c
 20684  0065B0  6E02               	movwf	(?i2_strlen+1)^0,c
 20685  0065B2  0012               	return		;funcret
 20686  0065B4                     __end_ofi2_strlen:
 20687                           	opt callstack 0
 20688                           
 20689 ;; *************** function i2_fputs *****************
 20690 ;; Defined at:
 20691 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 20692 ;; Parameters:    Size  Location     Type
 20693 ;;  s               2   11[COMRAM] PTR const unsigned char 
 20694 ;;		 -> dbuf(32), 
 20695 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
 20696 ;;		 -> vsnprintf@f(6), NULL(0), 
 20697 ;; Auto vars:     Size  Location     Type
 20698 ;;  fputs           2   16[COMRAM] int 
 20699 ;;  fputs           1   15[COMRAM] unsigned char 
 20700 ;; Return value:  Size  Location     Type
 20701 ;;                  2   11[COMRAM] int 
 20702 ;; Registers used:
 20703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20704 ;; Tracked objects:
 20705 ;;		On entry : 0/0
 20706 ;;		On exit  : 0/0
 20707 ;;		Unchanged: 0/0
 20708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20709 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20710 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20712 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20713 ;;Total ram usage:        7 bytes
 20714 ;; Hardware stack levels used:    1
 20715 ;; Hardware stack levels required when called:    3
 20716 ;; This function calls:
 20717 ;;		i2_fputc
 20718 ;; This function is called by:
 20719 ;;		i2_pad
 20720 ;; This function uses a non-reentrant model
 20721 ;;
 20722                           
 20723                           	psect	text92
 20724  0061F4                     __ptext92:
 20725                           	opt callstack 0
 20726  0061F4                     i2_fputs:
 20727                           	opt callstack 8
 20728  0061F4  0E00               	movlw	0
 20729  0061F6  6E12               	movwf	(i2fputs@i+1)^0,c
 20730  0061F8  0E00               	movlw	0
 20731  0061FA  6E11               	movwf	i2fputs@i^0,c
 20732  0061FC  EF0B  F031         	goto	i2l7191
 20733  006200                     i2l7187:
 20734  006200  C010  F003         	movff	i2fputs@c,i2fputc@c
 20735  006204  6A04               	clrf	(i2fputc@c+1)^0,c
 20736  006206  C00E  F005         	movff	i2fputs@fp,i2fputc@fp
 20737  00620A  C00F  F006         	movff	i2fputs@fp+1,i2fputc@fp+1
 20738  00620E  EC7A  F02C         	call	i2_fputc	;wreg free
 20739  006212  4A11               	infsnz	i2fputs@i^0,f,c
 20740  006214  2A12               	incf	(i2fputs@i+1)^0,f,c
 20741  006216                     i2l7191:
 20742  006216  5011               	movf	i2fputs@i^0,w,c
 20743  006218  240C               	addwf	i2fputs@s^0,w,c
 20744  00621A  6ED9               	movwf	fsr2l,c
 20745  00621C  5012               	movf	(i2fputs@i+1)^0,w,c
 20746  00621E  200D               	addwfc	(i2fputs@s+1)^0,w,c
 20747  006220  6EDA               	movwf	fsr2h,c
 20748  006222  50DF               	movf	indf2,w,c
 20749  006224  6E10               	movwf	i2fputs@c^0,c
 20750  006226  5010               	movf	i2fputs@c^0,w,c
 20751  006228  A4D8               	btfss	status,2,c
 20752  00622A  EF19  F031         	goto	i2u828_41
 20753  00622E  EF1B  F031         	goto	i2u828_40
 20754  006232                     i2u828_41:
 20755  006232  EF00  F031         	goto	i2l7187
 20756  006236                     i2u828_40:
 20757  006236  0012               	return		;funcret
 20758  006238                     __end_ofi2_fputs:
 20759                           	opt callstack 0
 20760                           
 20761 ;; *************** function i2_fputc *****************
 20762 ;; Defined at:
 20763 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 20764 ;; Parameters:    Size  Location     Type
 20765 ;;  c               2    2[COMRAM] int 
 20766 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
 20767 ;;		 -> vsnprintf@f(6), NULL(0), 
 20768 ;; Auto vars:     Size  Location     Type
 20769 ;;		None
 20770 ;; Return value:  Size  Location     Type
 20771 ;;                  2    2[COMRAM] int 
 20772 ;; Registers used:
 20773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20774 ;; Tracked objects:
 20775 ;;		On entry : 0/0
 20776 ;;		On exit  : 0/0
 20777 ;;		Unchanged: 0/0
 20778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20779 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20781 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20782 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20783 ;;Total ram usage:        9 bytes
 20784 ;; Hardware stack levels used:    1
 20785 ;; Hardware stack levels required when called:    2
 20786 ;; This function calls:
 20787 ;;		i2_putch
 20788 ;; This function is called by:
 20789 ;;		i2_pad
 20790 ;;		i2_stoa
 20791 ;;		i2_vfpfcnvrt
 20792 ;;		i2_fputs
 20793 ;; This function uses a non-reentrant model
 20794 ;;
 20795                           
 20796                           	psect	text93
 20797  0058F4                     __ptext93:
 20798                           	opt callstack 0
 20799  0058F4                     i2_fputc:
 20800                           	opt callstack 8
 20801  0058F4  5005               	movf	i2fputc@fp^0,w,c
 20802  0058F6  1006               	iorwf	(i2fputc@fp+1)^0,w,c
 20803  0058F8  B4D8               	btfsc	status,2,c
 20804  0058FA  EF81  F02C         	goto	i2u824_41
 20805  0058FE  EF83  F02C         	goto	i2u824_40
 20806  005902                     i2u824_41:
 20807  005902  EF8C  F02C         	goto	i2l7173
 20808  005906                     i2u824_40:
 20809  005906  5005               	movf	i2fputc@fp^0,w,c
 20810  005908  1006               	iorwf	(i2fputc@fp+1)^0,w,c
 20811  00590A  A4D8               	btfss	status,2,c
 20812  00590C  EF8A  F02C         	goto	i2u825_41
 20813  005910  EF8C  F02C         	goto	i2u825_40
 20814  005914                     i2u825_41:
 20815  005914  EF91  F02C         	goto	i2l7175
 20816  005918                     i2u825_40:
 20817  005918                     i2l7173:
 20818  005918  5003               	movf	i2fputc@c^0,w,c
 20819  00591A  EC61  F034         	call	i2_putch
 20820  00591E  EFDE  F02C         	goto	i2l1592
 20821  005922                     i2l7175:
 20822  005922  EE20 F004          	lfsr	2,4
 20823  005926  5005               	movf	i2fputc@fp^0,w,c
 20824  005928  26D9               	addwf	fsr2l,f,c
 20825  00592A  5006               	movf	(i2fputc@fp+1)^0,w,c
 20826  00592C  22DA               	addwfc	fsr2h,f,c
 20827  00592E  50DE               	movf	postinc2,w,c
 20828  005930  10DE               	iorwf	postinc2,w,c
 20829  005932  B4D8               	btfsc	status,2,c
 20830  005934  EF9E  F02C         	goto	i2u826_41
 20831  005938  EFA0  F02C         	goto	i2u826_40
 20832  00593C                     i2u826_41:
 20833  00593C  EFBB  F02C         	goto	i2l7179
 20834  005940                     i2u826_40:
 20835  005940  EE20 F004          	lfsr	2,4
 20836  005944  5005               	movf	i2fputc@fp^0,w,c
 20837  005946  26D9               	addwf	fsr2l,f,c
 20838  005948  5006               	movf	(i2fputc@fp+1)^0,w,c
 20839  00594A  22DA               	addwfc	fsr2h,f,c
 20840  00594C  EE10 F002          	lfsr	1,2
 20841  005950  5005               	movf	i2fputc@fp^0,w,c
 20842  005952  26E1               	addwf	fsr1l,f,c
 20843  005954  5006               	movf	(i2fputc@fp+1)^0,w,c
 20844  005956  22E2               	addwfc	fsr1h,f,c
 20845  005958  50DE               	movf	postinc2,w,c
 20846  00595A  5CE6               	subwf	postinc1,w,c
 20847  00595C  50E6               	movf	postinc1,w,c
 20848  00595E  0A80               	xorlw	128
 20849  005960  6E0B               	movwf	(??i2_fputc+4)^0,c
 20850  005962  50DE               	movf	postinc2,w,c
 20851  005964  0A80               	xorlw	128
 20852  005966  580B               	subwfb	(??i2_fputc+4)^0,w,c
 20853  005968  B0D8               	btfsc	status,0,c
 20854  00596A  EFB9  F02C         	goto	i2u827_41
 20855  00596E  EFBB  F02C         	goto	i2u827_40
 20856  005972                     i2u827_41:
 20857  005972  EFDE  F02C         	goto	i2l1592
 20858  005976                     i2u827_40:
 20859  005976                     i2l7179:
 20860  005976  EE20 F002          	lfsr	2,2
 20861  00597A  5005               	movf	i2fputc@fp^0,w,c
 20862  00597C  26D9               	addwf	fsr2l,f,c
 20863  00597E  5006               	movf	(i2fputc@fp+1)^0,w,c
 20864  005980  22DA               	addwfc	fsr2h,f,c
 20865  005982  CFDE F007          	movff	postinc2,??i2_fputc
 20866  005986  CFDD F008          	movff	postdec2,??i2_fputc+1
 20867  00598A  C005  FFD9         	movff	i2fputc@fp,fsr2l
 20868  00598E  C006  FFDA         	movff	i2fputc@fp+1,fsr2h
 20869  005992  CFDE F009          	movff	postinc2,??i2_fputc+2
 20870  005996  CFDD F00A          	movff	postdec2,??i2_fputc+3
 20871  00599A  5007               	movf	??i2_fputc^0,w,c
 20872  00599C  2409               	addwf	(??i2_fputc+2)^0,w,c
 20873  00599E  6ED9               	movwf	fsr2l,c
 20874  0059A0  5008               	movf	(??i2_fputc+1)^0,w,c
 20875  0059A2  200A               	addwfc	(??i2_fputc+3)^0,w,c
 20876  0059A4  6EDA               	movwf	fsr2h,c
 20877  0059A6  C003  FFDF         	movff	i2fputc@c,indf2
 20878  0059AA  EE20 F002          	lfsr	2,2
 20879  0059AE  5005               	movf	i2fputc@fp^0,w,c
 20880  0059B0  26D9               	addwf	fsr2l,f,c
 20881  0059B2  5006               	movf	(i2fputc@fp+1)^0,w,c
 20882  0059B4  22DA               	addwfc	fsr2h,f,c
 20883  0059B6  2ADE               	incf	postinc2,f,c
 20884  0059B8  0E00               	movlw	0
 20885  0059BA  22DD               	addwfc	postdec2,f,c
 20886  0059BC                     i2l1592:
 20887  0059BC  0012               	return		;funcret
 20888  0059BE                     __end_ofi2_fputc:
 20889                           	opt callstack 0
 20890                           
 20891 ;; *************** function i2_putch *****************
 20892 ;; Defined at:
 20893 ;;		line 146 in file "mcc_generated_files/eusart1.c"
 20894 ;; Parameters:    Size  Location     Type
 20895 ;;  txData          1    wreg     unsigned char 
 20896 ;; Auto vars:     Size  Location     Type
 20897 ;;  txData          1    1[COMRAM] unsigned char 
 20898 ;; Return value:  Size  Location     Type
 20899 ;;                  1    wreg      void 
 20900 ;; Registers used:
 20901 ;;		wreg, status,2, cstack
 20902 ;; Tracked objects:
 20903 ;;		On entry : 0/0
 20904 ;;		On exit  : 0/0
 20905 ;;		Unchanged: 0/0
 20906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20908 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20910 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20911 ;;Total ram usage:        1 bytes
 20912 ;; Hardware stack levels used:    1
 20913 ;; Hardware stack levels required when called:    1
 20914 ;; This function calls:
 20915 ;;		i2_EUSART1_Write
 20916 ;; This function is called by:
 20917 ;;		i2_fputc
 20918 ;; This function uses a non-reentrant model
 20919 ;;
 20920                           
 20921                           	psect	text94
 20922  0068C2                     __ptext94:
 20923                           	opt callstack 0
 20924  0068C2                     i2_putch:
 20925                           	opt callstack 8
 20926                           
 20927                           ;incstack = 0
 20928                           ;i2putch@txData stored from wreg
 20929  0068C2  6E02               	movwf	i2putch@txData^0,c
 20930  0068C4                     
 20931                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
 20932  0068C4  5002               	movf	i2putch@txData^0,w,c
 20933  0068C6  EC19  F034         	call	i2_EUSART1_Write
 20934  0068CA  0012               	return		;funcret
 20935  0068CC                     __end_ofi2_putch:
 20936                           	opt callstack 0
 20937                           
 20938 ;; *************** function i2_EUSART1_Write *****************
 20939 ;; Defined at:
 20940 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 20941 ;; Parameters:    Size  Location     Type
 20942 ;;  txData          1    wreg     unsigned char 
 20943 ;; Auto vars:     Size  Location     Type
 20944 ;;  txData          1    0[COMRAM] unsigned char 
 20945 ;; Return value:  Size  Location     Type
 20946 ;;                  1    wreg      void 
 20947 ;; Registers used:
 20948 ;;		wreg
 20949 ;; Tracked objects:
 20950 ;;		On entry : 0/0
 20951 ;;		On exit  : 0/0
 20952 ;;		Unchanged: 0/0
 20953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20955 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20957 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20958 ;;Total ram usage:        1 bytes
 20959 ;; Hardware stack levels used:    1
 20960 ;; This function calls:
 20961 ;;		Nothing
 20962 ;; This function is called by:
 20963 ;;		i2_putch
 20964 ;; This function uses a non-reentrant model
 20965 ;;
 20966                           
 20967                           	psect	text95
 20968  006832                     __ptext95:
 20969                           	opt callstack 0
 20970  006832                     i2_EUSART1_Write:
 20971                           	opt callstack 8
 20972                           
 20973                           ;incstack = 0
 20974                           ;i2EUSART1_Write@txData stored from wreg
 20975  006832  6E01               	movwf	i2EUSART1_Write@txData^0,c
 20976  006834                     i2l297:
 20977                           
 20978                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
 20979  006834  A89E               	btfss	158,4,c	;volatile
 20980  006836  EF1F  F034         	goto	i2u822_41
 20981  00683A  EF21  F034         	goto	i2u822_40
 20982  00683E                     i2u822_41:
 20983  00683E  EF1A  F034         	goto	i2l297
 20984  006842                     i2u822_40:
 20985  006842                     
 20986                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
 20987  006842  C001  FFAD         	movff	i2EUSART1_Write@txData,4013	;volatile
 20988  006846  0012               	return		;funcret
 20989  006848                     __end_ofi2_EUSART1_Write:
 20990                           	opt callstack 0
 20991                           
 20992 ;; *************** function i2_atoi *****************
 20993 ;; Defined at:
 20994 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 20995 ;; Parameters:    Size  Location     Type
 20996 ;;  s               2    7[COMRAM] PTR const unsigned char 
 20997 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
 20998 ;;		 -> STR_4(22), STR_3(12), read_from_usart@data(10), STR_1(13), 
 20999 ;; Auto vars:     Size  Location     Type
 21000 ;;  atoi            2   20[COMRAM] int 
 21001 ;;  atoi            2   13[COMRAM] int 
 21002 ;; Return value:  Size  Location     Type
 21003 ;;                  2    7[COMRAM] int 
 21004 ;; Registers used:
 21005 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21006 ;; Tracked objects:
 21007 ;;		On entry : 0/0
 21008 ;;		On exit  : 0/0
 21009 ;;		Unchanged: 0/0
 21010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21011 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21012 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21013 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21014 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21015 ;;Total ram usage:       15 bytes
 21016 ;; Hardware stack levels used:    1
 21017 ;; Hardware stack levels required when called:    1
 21018 ;; This function calls:
 21019 ;;		i2___wmul
 21020 ;;		i2_isdigit
 21021 ;;		i2_isspace
 21022 ;; This function is called by:
 21023 ;;		i2_vfpfcnvrt
 21024 ;; This function uses a non-reentrant model
 21025 ;;
 21026                           
 21027                           	psect	text96
 21028  003E48                     __ptext96:
 21029                           	opt callstack 0
 21030  003E48                     i2_atoi:
 21031                           	opt callstack 12
 21032  003E48  0E00               	movlw	0
 21033  003E4A  6E16               	movwf	(i2atoi@n+1)^0,c
 21034  003E4C  0E00               	movlw	0
 21035  003E4E  6E15               	movwf	i2atoi@n^0,c
 21036  003E50  0E00               	movlw	0
 21037  003E52  6E0F               	movwf	(i2atoi@neg+1)^0,c
 21038  003E54  0E00               	movlw	0
 21039  003E56  6E0E               	movwf	i2atoi@neg^0,c
 21040  003E58  EF30  F01F         	goto	i2l7699
 21041  003E5C                     i2l7697:
 21042  003E5C  4A08               	infsnz	i2atoi@s^0,f,c
 21043  003E5E  2A09               	incf	(i2atoi@s+1)^0,f,c
 21044  003E60                     i2l7699:
 21045  003E60  0E01               	movlw	1
 21046  003E62  6E14               	movwf	i2_atoi$2284^0,c
 21047  003E64  C008  FFF6         	movff	i2atoi@s,tblptrl
 21048  003E68  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 21049  003E6C  0E00               	movlw	low (__mediumconst shr (0+16))
 21050  003E6E  6EF8               	movwf	tblptru,c
 21051  003E70  0E0E               	movlw	(high __ramtop+-1)
 21052  003E72  64F7               	cpfsgt	tblptrh,c
 21053  003E74  D003               	bra	i2u935_47
 21054  003E76  0008               	tblrd		*
 21055  003E78  50F5               	movf	tablat,w,c
 21056  003E7A  D005               	bra	i2u935_40
 21057  003E7C                     i2u935_47:
 21058  003E7C  CFF6 FFE1          	movff	tblptrl,fsr1l
 21059  003E80  CFF7 FFE2          	movff	tblptrh,fsr1h
 21060  003E84  50E7               	movf	indf1,w,c
 21061  003E86                     i2u935_40:
 21062  003E86  0A20               	xorlw	32
 21063  003E88  B4D8               	btfsc	status,2,c
 21064  003E8A  EF49  F01F         	goto	i2u936_41
 21065  003E8E  EF4B  F01F         	goto	i2u936_40
 21066  003E92                     i2u936_41:
 21067  003E92  EF73  F01F         	goto	i2l7707
 21068  003E96                     i2u936_40:
 21069  003E96  0EF7               	movlw	247
 21070  003E98  6E0A               	movwf	??i2_atoi^0,c
 21071  003E9A  0EFF               	movlw	255
 21072  003E9C  6E0B               	movwf	(??i2_atoi+1)^0,c
 21073  003E9E  C008  FFF6         	movff	i2atoi@s,tblptrl
 21074  003EA2  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 21075  003EA6  0E00               	movlw	low (__mediumconst shr (0+16))
 21076  003EA8  6EF8               	movwf	tblptru,c
 21077  003EAA  0E0E               	movlw	(high __ramtop+-1)
 21078  003EAC  64F7               	cpfsgt	tblptrh,c
 21079  003EAE  D003               	bra	i2u937_47
 21080  003EB0  0008               	tblrd		*
 21081  003EB2  50F5               	movf	tablat,w,c
 21082  003EB4  D005               	bra	i2u937_40
 21083  003EB6                     i2u937_47:
 21084  003EB6  CFF6 FFE1          	movff	tblptrl,fsr1l
 21085  003EBA  CFF7 FFE2          	movff	tblptrh,fsr1h
 21086  003EBE  50E7               	movf	indf1,w,c
 21087  003EC0                     i2u937_40:
 21088  003EC0  6E0C               	movwf	(??i2_atoi+2)^0,c
 21089  003EC2  6A0D               	clrf	(??i2_atoi+3)^0,c
 21090  003EC4  500A               	movf	??i2_atoi^0,w,c
 21091  003EC6  260C               	addwf	(??i2_atoi+2)^0,f,c
 21092  003EC8  500B               	movf	(??i2_atoi+1)^0,w,c
 21093  003ECA  220D               	addwfc	(??i2_atoi+3)^0,f,c
 21094  003ECC  500D               	movf	(??i2_atoi+3)^0,w,c
 21095  003ECE  E109               	bnz	i2u938_40
 21096  003ED0  0E05               	movlw	5
 21097  003ED2  5C0C               	subwf	(??i2_atoi+2)^0,w,c
 21098  003ED4  A0D8               	btfss	status,0,c
 21099  003ED6  EF6F  F01F         	goto	i2u938_41
 21100  003EDA  EF71  F01F         	goto	i2u938_40
 21101  003EDE                     i2u938_41:
 21102  003EDE  EF73  F01F         	goto	i2l7707
 21103  003EE2                     i2u938_40:
 21104  003EE2  0E00               	movlw	0
 21105  003EE4  6E14               	movwf	i2_atoi$2284^0,c
 21106  003EE6                     i2l7707:
 21107  003EE6  C014  F010         	movff	i2_atoi$2284,i2_atoi$2283
 21108  003EEA  6A11               	clrf	(i2_atoi$2283+1)^0,c
 21109  003EEC  5010               	movf	i2_atoi$2283^0,w,c
 21110  003EEE  1011               	iorwf	(i2_atoi$2283+1)^0,w,c
 21111  003EF0  A4D8               	btfss	status,2,c
 21112  003EF2  EF7D  F01F         	goto	i2u939_41
 21113  003EF6  EF7F  F01F         	goto	i2u939_40
 21114  003EFA                     i2u939_41:
 21115  003EFA  EF2E  F01F         	goto	i2l7697
 21116  003EFE                     i2u939_40:
 21117  003EFE  EF89  F01F         	goto	i2l7717
 21118  003F02                     i2l7713:
 21119  003F02  0E00               	movlw	0
 21120  003F04  6E0F               	movwf	(i2atoi@neg+1)^0,c
 21121  003F06  0E01               	movlw	1
 21122  003F08  6E0E               	movwf	i2atoi@neg^0,c
 21123  003F0A                     i2l7715:
 21124  003F0A  4A08               	infsnz	i2atoi@s^0,f,c
 21125  003F0C  2A09               	incf	(i2atoi@s+1)^0,f,c
 21126  003F0E  EFD6  F01F         	goto	i2l7723
 21127  003F12                     i2l7717:
 21128  003F12  C008  FFF6         	movff	i2atoi@s,tblptrl
 21129  003F16  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 21130  003F1A  0E00               	movlw	low (__mediumconst shr (0+16))
 21131  003F1C  6EF8               	movwf	tblptru,c
 21132  003F1E  0E0E               	movlw	(high __ramtop+-1)
 21133  003F20  64F7               	cpfsgt	tblptrh,c
 21134  003F22  D003               	bra	i2u940_47
 21135  003F24  0008               	tblrd		*
 21136  003F26  50F5               	movf	tablat,w,c
 21137  003F28  D005               	bra	i2u940_40
 21138  003F2A                     i2u940_47:
 21139  003F2A  CFF6 FFE1          	movff	tblptrl,fsr1l
 21140  003F2E  CFF7 FFE2          	movff	tblptrh,fsr1h
 21141  003F32  50E7               	movf	indf1,w,c
 21142  003F34                     i2u940_40:
 21143  003F34  6E0A               	movwf	??i2_atoi^0,c
 21144  003F36  6A0B               	clrf	(??i2_atoi+1)^0,c
 21145                           
 21146                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21147                           ; Switch size 1, requested type "simple"
 21148                           ; Number of cases is 1, Range of values is 0 to 0
 21149                           ; switch strategies available:
 21150                           ; Name         Instructions Cycles
 21151                           ; simple_byte            4     3 (average)
 21152                           ;	Chosen strategy is simple_byte
 21153  003F38  500B               	movf	(??i2_atoi+1)^0,w,c
 21154  003F3A  0A00               	xorlw	0	; case 0
 21155  003F3C  B4D8               	btfsc	status,2,c
 21156  003F3E  EFA3  F01F         	goto	i2l9205
 21157  003F42  EFD6  F01F         	goto	i2l7723
 21158  003F46                     i2l9205:
 21159                           
 21160                           ; Switch size 1, requested type "simple"
 21161                           ; Number of cases is 2, Range of values is 43 to 45
 21162                           ; switch strategies available:
 21163                           ; Name         Instructions Cycles
 21164                           ; simple_byte            7     4 (average)
 21165                           ;	Chosen strategy is simple_byte
 21166  003F46  500A               	movf	??i2_atoi^0,w,c
 21167  003F48  0A2B               	xorlw	43	; case 43
 21168  003F4A  B4D8               	btfsc	status,2,c
 21169  003F4C  EF85  F01F         	goto	i2l7715
 21170  003F50  0A06               	xorlw	6	; case 45
 21171  003F52  B4D8               	btfsc	status,2,c
 21172  003F54  EF81  F01F         	goto	i2l7713
 21173  003F58  EFD6  F01F         	goto	i2l7723
 21174  003F5C                     i2l7719:
 21175  003F5C  C015  F001         	movff	i2atoi@n,i2___wmul@multiplier
 21176  003F60  C016  F002         	movff	i2atoi@n+1,i2___wmul@multiplier+1
 21177  003F64  0E00               	movlw	0
 21178  003F66  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 21179  003F68  0E0A               	movlw	10
 21180  003F6A  6E03               	movwf	i2___wmul@multiplicand^0,c
 21181  003F6C  EC99  F033         	call	i2___wmul	;wreg free
 21182  003F70  C008  FFF6         	movff	i2atoi@s,tblptrl
 21183  003F74  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 21184  003F78  0E00               	movlw	low (__mediumconst shr (0+16))
 21185  003F7A  6EF8               	movwf	tblptru,c
 21186  003F7C  0E0E               	movlw	(high __ramtop+-1)
 21187  003F7E  64F7               	cpfsgt	tblptrh,c
 21188  003F80  D003               	bra	i2u941_47
 21189  003F82  0008               	tblrd		*
 21190  003F84  50F5               	movf	tablat,w,c
 21191  003F86  D005               	bra	i2u941_40
 21192  003F88                     i2u941_47:
 21193  003F88  CFF6 FFE1          	movff	tblptrl,fsr1l
 21194  003F8C  CFF7 FFE2          	movff	tblptrh,fsr1h
 21195  003F90  50E7               	movf	indf1,w,c
 21196  003F92                     i2u941_40:
 21197  003F92  6E0A               	movwf	??i2_atoi^0,c
 21198  003F94  500A               	movf	??i2_atoi^0,w,c
 21199  003F96  5E01               	subwf	?i2___wmul^0,f,c
 21200  003F98  0E00               	movlw	0
 21201  003F9A  5A02               	subwfb	(?i2___wmul+1)^0,f,c
 21202  003F9C  0E30               	movlw	48
 21203  003F9E  2401               	addwf	?i2___wmul^0,w,c
 21204  003FA0  6E15               	movwf	i2atoi@n^0,c
 21205  003FA2  0E00               	movlw	0
 21206  003FA4  2002               	addwfc	(?i2___wmul+1)^0,w,c
 21207  003FA6  6E16               	movwf	(i2atoi@n+1)^0,c
 21208  003FA8  EF85  F01F         	goto	i2l7715
 21209  003FAC                     i2l7723:
 21210  003FAC  0ED0               	movlw	208
 21211  003FAE  6E0A               	movwf	??i2_atoi^0,c
 21212  003FB0  0EFF               	movlw	255
 21213  003FB2  6E0B               	movwf	(??i2_atoi+1)^0,c
 21214  003FB4  C008  FFF6         	movff	i2atoi@s,tblptrl
 21215  003FB8  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 21216  003FBC  0E00               	movlw	low (__mediumconst shr (0+16))
 21217  003FBE  6EF8               	movwf	tblptru,c
 21218  003FC0  0E0E               	movlw	(high __ramtop+-1)
 21219  003FC2  64F7               	cpfsgt	tblptrh,c
 21220  003FC4  D003               	bra	i2u942_47
 21221  003FC6  0008               	tblrd		*
 21222  003FC8  50F5               	movf	tablat,w,c
 21223  003FCA  D005               	bra	i2u942_40
 21224  003FCC                     i2u942_47:
 21225  003FCC  CFF6 FFE1          	movff	tblptrl,fsr1l
 21226  003FD0  CFF7 FFE2          	movff	tblptrh,fsr1h
 21227  003FD4  50E7               	movf	indf1,w,c
 21228  003FD6                     i2u942_40:
 21229  003FD6  6E0C               	movwf	(??i2_atoi+2)^0,c
 21230  003FD8  6A0D               	clrf	(??i2_atoi+3)^0,c
 21231  003FDA  500A               	movf	??i2_atoi^0,w,c
 21232  003FDC  260C               	addwf	(??i2_atoi+2)^0,f,c
 21233  003FDE  500B               	movf	(??i2_atoi+1)^0,w,c
 21234  003FE0  220D               	addwfc	(??i2_atoi+3)^0,f,c
 21235  003FE2  500D               	movf	(??i2_atoi+3)^0,w,c
 21236  003FE4  E10A               	bnz	i2u943_40
 21237  003FE6  0E0A               	movlw	10
 21238  003FE8  5C0C               	subwf	(??i2_atoi+2)^0,w,c
 21239  003FEA  A0D8               	btfss	status,0,c
 21240  003FEC  EFFA  F01F         	goto	i2u943_41
 21241  003FF0  EFFD  F01F         	goto	i2u943_40
 21242  003FF4                     i2u943_41:
 21243  003FF4  0E01               	movlw	1
 21244  003FF6  EFFE  F01F         	goto	i2u944_40
 21245  003FFA                     i2u943_40:
 21246  003FFA  0E00               	movlw	0
 21247  003FFC                     i2u944_40:
 21248  003FFC  6E12               	movwf	i2_atoi$2285^0,c
 21249  003FFE  6A13               	clrf	(i2_atoi$2285+1)^0,c
 21250  004000  5012               	movf	i2_atoi$2285^0,w,c
 21251  004002  1013               	iorwf	(i2_atoi$2285+1)^0,w,c
 21252  004004  A4D8               	btfss	status,2,c
 21253  004006  EF07  F020         	goto	i2u945_41
 21254  00400A  EF09  F020         	goto	i2u945_40
 21255  00400E                     i2u945_41:
 21256  00400E  EFAE  F01F         	goto	i2l7719
 21257  004012                     i2u945_40:
 21258  004012  500E               	movf	i2atoi@neg^0,w,c
 21259  004014  100F               	iorwf	(i2atoi@neg+1)^0,w,c
 21260  004016  A4D8               	btfss	status,2,c
 21261  004018  EF10  F020         	goto	i2u946_41
 21262  00401C  EF12  F020         	goto	i2u946_40
 21263  004020                     i2u946_41:
 21264  004020  EF20  F020         	goto	i2l1551
 21265  004024                     i2u946_40:
 21266  004024  C015  F00A         	movff	i2atoi@n,??i2_atoi
 21267  004028  C016  F00B         	movff	i2atoi@n+1,??i2_atoi+1
 21268  00402C  1E0A               	comf	??i2_atoi^0,f,c
 21269  00402E  1E0B               	comf	(??i2_atoi+1)^0,f,c
 21270  004030  4A0A               	infsnz	??i2_atoi^0,f,c
 21271  004032  2A0B               	incf	(??i2_atoi+1)^0,f,c
 21272  004034  C00A  F008         	movff	??i2_atoi,?i2_atoi
 21273  004038  C00B  F009         	movff	??i2_atoi+1,?i2_atoi+1
 21274  00403C  EF24  F020         	goto	i2l1554
 21275  004040                     i2l1551:
 21276  004040  C015  F008         	movff	i2atoi@n,?i2_atoi
 21277  004044  C016  F009         	movff	i2atoi@n+1,?i2_atoi+1
 21278  004048                     i2l1554:
 21279  004048  0012               	return		;funcret
 21280  00404A                     __end_ofi2_atoi:
 21281                           	opt callstack 0
 21282                           
 21283 ;; *************** function i2_isspace *****************
 21284 ;; Defined at:
 21285 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 21286 ;; Parameters:    Size  Location     Type
 21287 ;;  c               2    0[COMRAM] int 
 21288 ;; Auto vars:     Size  Location     Type
 21289 ;;		None
 21290 ;; Return value:  Size  Location     Type
 21291 ;;                  2    0[COMRAM] int 
 21292 ;; Registers used:
 21293 ;;		wreg, status,2, status,0
 21294 ;; Tracked objects:
 21295 ;;		On entry : 0/0
 21296 ;;		On exit  : 0/0
 21297 ;;		Unchanged: 0/0
 21298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21299 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21300 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21301 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21302 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21303 ;;Total ram usage:        7 bytes
 21304 ;; Hardware stack levels used:    1
 21305 ;; This function calls:
 21306 ;;		Nothing
 21307 ;; This function is called by:
 21308 ;;		i2_atoi
 21309 ;; This function uses a non-reentrant model
 21310 ;;
 21311                           
 21312                           	psect	text97
 21313  005FE2                     __ptext97:
 21314                           	opt callstack 0
 21315  005FE2                     i2_isspace:
 21316                           	opt callstack 12
 21317  005FE2  0E01               	movlw	1
 21318  005FE4  6E07               	movwf	i2_isspace$2310^0,c
 21319  005FE6  0E20               	movlw	32
 21320  005FE8  1801               	xorwf	i2isspace@c^0,w,c
 21321  005FEA  1002               	iorwf	(i2isspace@c+1)^0,w,c
 21322  005FEC  B4D8               	btfsc	status,2,c
 21323  005FEE  EFFB  F02F         	goto	i2u865_41
 21324  005FF2  EFFD  F02F         	goto	i2u865_40
 21325  005FF6                     i2u865_41:
 21326  005FF6  EF16  F030         	goto	i2l7387
 21327  005FFA                     i2u865_40:
 21328  005FFA  0EF7               	movlw	247
 21329  005FFC  6E03               	movwf	??i2_isspace^0,c
 21330  005FFE  0EFF               	movlw	255
 21331  006000  6E04               	movwf	(??i2_isspace+1)^0,c
 21332  006002  C001  F005         	movff	i2isspace@c,??i2_isspace+2
 21333  006006  C002  F006         	movff	i2isspace@c+1,??i2_isspace+3
 21334  00600A  5003               	movf	??i2_isspace^0,w,c
 21335  00600C  2605               	addwf	(??i2_isspace+2)^0,f,c
 21336  00600E  5004               	movf	(??i2_isspace+1)^0,w,c
 21337  006010  2206               	addwfc	(??i2_isspace+3)^0,f,c
 21338  006012  5006               	movf	(??i2_isspace+3)^0,w,c
 21339  006014  E109               	bnz	i2u866_40
 21340  006016  0E05               	movlw	5
 21341  006018  5C05               	subwf	(??i2_isspace+2)^0,w,c
 21342  00601A  A0D8               	btfss	status,0,c
 21343  00601C  EF12  F030         	goto	i2u866_41
 21344  006020  EF14  F030         	goto	i2u866_40
 21345  006024                     i2u866_41:
 21346  006024  EF16  F030         	goto	i2l7387
 21347  006028                     i2u866_40:
 21348  006028  0E00               	movlw	0
 21349  00602A  6E07               	movwf	i2_isspace$2310^0,c
 21350  00602C                     i2l7387:
 21351  00602C  C007  F001         	movff	i2_isspace$2310,?i2_isspace
 21352  006030  6A02               	clrf	(?i2_isspace+1)^0,c
 21353  006032  0012               	return		;funcret
 21354  006034                     __end_ofi2_isspace:
 21355                           	opt callstack 0
 21356                           
 21357 ;; *************** function i2_isdigit *****************
 21358 ;; Defined at:
 21359 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 21360 ;; Parameters:    Size  Location     Type
 21361 ;;  c               2    0[COMRAM] int 
 21362 ;; Auto vars:     Size  Location     Type
 21363 ;;		None
 21364 ;; Return value:  Size  Location     Type
 21365 ;;                  2    0[COMRAM] int 
 21366 ;; Registers used:
 21367 ;;		wreg, status,2, status,0
 21368 ;; Tracked objects:
 21369 ;;		On entry : 0/0
 21370 ;;		On exit  : 0/0
 21371 ;;		Unchanged: 0/0
 21372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21373 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21375 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21376 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21377 ;;Total ram usage:        6 bytes
 21378 ;; Hardware stack levels used:    1
 21379 ;; This function calls:
 21380 ;;		Nothing
 21381 ;; This function is called by:
 21382 ;;		i2_vfpfcnvrt
 21383 ;;		i2_atoi
 21384 ;; This function uses a non-reentrant model
 21385 ;;
 21386                           
 21387                           	psect	text98
 21388  006546                     __ptext98:
 21389                           	opt callstack 0
 21390  006546                     i2_isdigit:
 21391                           	opt callstack 13
 21392  006546  0ED0               	movlw	208
 21393  006548  6E03               	movwf	??i2_isdigit^0,c
 21394  00654A  0EFF               	movlw	255
 21395  00654C  6E04               	movwf	(??i2_isdigit+1)^0,c
 21396  00654E  C001  F005         	movff	i2isdigit@c,??i2_isdigit+2
 21397  006552  C002  F006         	movff	i2isdigit@c+1,??i2_isdigit+3
 21398  006556  5003               	movf	??i2_isdigit^0,w,c
 21399  006558  2605               	addwf	(??i2_isdigit+2)^0,f,c
 21400  00655A  5004               	movf	(??i2_isdigit+1)^0,w,c
 21401  00655C  2206               	addwfc	(??i2_isdigit+3)^0,f,c
 21402  00655E  5006               	movf	(??i2_isdigit+3)^0,w,c
 21403  006560  E10A               	bnz	i2u863_40
 21404  006562  0E0A               	movlw	10
 21405  006564  5C05               	subwf	(??i2_isdigit+2)^0,w,c
 21406  006566  A0D8               	btfss	status,0,c
 21407  006568  EFB8  F032         	goto	i2u863_41
 21408  00656C  EFBB  F032         	goto	i2u863_40
 21409  006570                     i2u863_41:
 21410  006570  0E01               	movlw	1
 21411  006572  EFBC  F032         	goto	i2u864_40
 21412  006576                     i2u863_40:
 21413  006576  0E00               	movlw	0
 21414  006578                     i2u864_40:
 21415  006578  6E01               	movwf	?i2_isdigit^0,c
 21416  00657A  6A02               	clrf	(?i2_isdigit+1)^0,c
 21417  00657C  0012               	return		;funcret
 21418  00657E                     __end_ofi2_isdigit:
 21419                           	opt callstack 0
 21420                           
 21421 ;; *************** function i2___wmul *****************
 21422 ;; Defined at:
 21423 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 21424 ;; Parameters:    Size  Location     Type
 21425 ;;  multiplier      2    0[COMRAM] unsigned int 
 21426 ;;  multiplicand    2    2[COMRAM] unsigned int 
 21427 ;; Auto vars:     Size  Location     Type
 21428 ;;  __wmul          2    4[COMRAM] unsigned int 
 21429 ;; Return value:  Size  Location     Type
 21430 ;;                  2    0[COMRAM] unsigned int 
 21431 ;; Registers used:
 21432 ;;		wreg, status,2, status,0, prodl, prodh
 21433 ;; Tracked objects:
 21434 ;;		On entry : 0/0
 21435 ;;		On exit  : 0/0
 21436 ;;		Unchanged: 0/0
 21437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21438 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21439 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21441 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21442 ;;Total ram usage:        6 bytes
 21443 ;; Hardware stack levels used:    1
 21444 ;; This function calls:
 21445 ;;		Nothing
 21446 ;; This function is called by:
 21447 ;;		i2_atoi
 21448 ;; This function uses a non-reentrant model
 21449 ;;
 21450                           
 21451                           	psect	text99
 21452  006732                     __ptext99:
 21453                           	opt callstack 0
 21454  006732                     i2___wmul:
 21455                           	opt callstack 12
 21456  006732  5001               	movf	i2___wmul@multiplier^0,w,c
 21457  006734  0203               	mulwf	i2___wmul@multiplicand^0,c
 21458  006736  CFF3 F005          	movff	prodl,i2___wmul@product
 21459  00673A  CFF4 F006          	movff	prodh,i2___wmul@product+1
 21460  00673E  5001               	movf	i2___wmul@multiplier^0,w,c
 21461  006740  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 21462  006742  50F3               	movf	243,w,c
 21463  006744  2606               	addwf	(i2___wmul@product+1)^0,f,c
 21464  006746  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 21465  006748  0203               	mulwf	i2___wmul@multiplicand^0,c
 21466  00674A  50F3               	movf	243,w,c
 21467  00674C  2606               	addwf	(i2___wmul@product+1)^0,f,c
 21468  00674E  C005  F001         	movff	i2___wmul@product,?i2___wmul
 21469  006752  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 21470  006756  0012               	return		;funcret
 21471  006758                     __end_ofi2___wmul:
 21472                           	opt callstack 0
 21473                           
 21474 ;; *************** function i2_TMR0_WriteTimer *****************
 21475 ;; Defined at:
 21476 ;;		line 115 in file "mcc_generated_files/tmr0.c"
 21477 ;; Parameters:    Size  Location     Type
 21478 ;;  timerVal        2    0[COMRAM] unsigned short 
 21479 ;; Auto vars:     Size  Location     Type
 21480 ;;		None
 21481 ;; Return value:  Size  Location     Type
 21482 ;;                  1    wreg      void 
 21483 ;; Registers used:
 21484 ;;		wreg, status,2
 21485 ;; Tracked objects:
 21486 ;;		On entry : 0/0
 21487 ;;		On exit  : 0/0
 21488 ;;		Unchanged: 0/0
 21489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21490 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21493 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21494 ;;Total ram usage:        2 bytes
 21495 ;; Hardware stack levels used:    1
 21496 ;; This function calls:
 21497 ;;		Nothing
 21498 ;; This function is called by:
 21499 ;;		_INTERRUPT_S1_CALLBACK
 21500 ;; This function uses a non-reentrant model
 21501 ;;
 21502                           
 21503                           	psect	text100
 21504  0068CC                     __ptext100:
 21505                           	opt callstack 0
 21506  0068CC                     i2_TMR0_WriteTimer:
 21507                           	opt callstack 16
 21508  0068CC                     
 21509                           ;mcc_generated_files/tmr0.c: 115: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 116: {;mcc_generated_files/tmr0.c: 118:     TMR0H = timerVal >> 8;
 21510  0068CC  5002               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
 21511  0068CE  6ED7               	movwf	215,c	;volatile
 21512  0068D0                     
 21513                           ;mcc_generated_files/tmr0.c: 119:     TMR0L = (uint8_t) timerVal;
 21514  0068D0  C001  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
 21515  0068D4  0012               	return		;funcret
 21516  0068D6                     __end_ofi2_TMR0_WriteTimer:
 21517                           	opt callstack 0
 21518                           
 21519 ;; *************** function _TMR0_StopTimer *****************
 21520 ;; Defined at:
 21521 ;;		line 96 in file "mcc_generated_files/tmr0.c"
 21522 ;; Parameters:    Size  Location     Type
 21523 ;;		None
 21524 ;; Auto vars:     Size  Location     Type
 21525 ;;		None
 21526 ;; Return value:  Size  Location     Type
 21527 ;;                  1    wreg      void 
 21528 ;; Registers used:
 21529 ;;		None
 21530 ;; Tracked objects:
 21531 ;;		On entry : 0/0
 21532 ;;		On exit  : 0/0
 21533 ;;		Unchanged: 0/0
 21534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21539 ;;Total ram usage:        0 bytes
 21540 ;; Hardware stack levels used:    1
 21541 ;; This function calls:
 21542 ;;		Nothing
 21543 ;; This function is called by:
 21544 ;;		_INTERRUPT_S1_CALLBACK
 21545 ;; This function uses a non-reentrant model
 21546 ;;
 21547                           
 21548                           	psect	text101
 21549  0068E6                     __ptext101:
 21550                           	opt callstack 0
 21551  0068E6                     _TMR0_StopTimer:
 21552                           	opt callstack 16
 21553  0068E6                     
 21554                           ;mcc_generated_files/tmr0.c: 99:     T0CONbits.TMR0ON = 0;
 21555  0068E6  9ED5               	bcf	213,7,c	;volatile
 21556  0068E8  0012               	return		;funcret
 21557  0068EA                     __end_of_TMR0_StopTimer:
 21558                           	opt callstack 0
 21559                           
 21560 ;; *************** function _TMR0_StartTimer *****************
 21561 ;; Defined at:
 21562 ;;		line 90 in file "mcc_generated_files/tmr0.c"
 21563 ;; Parameters:    Size  Location     Type
 21564 ;;		None
 21565 ;; Auto vars:     Size  Location     Type
 21566 ;;		None
 21567 ;; Return value:  Size  Location     Type
 21568 ;;                  1    wreg      void 
 21569 ;; Registers used:
 21570 ;;		None
 21571 ;; Tracked objects:
 21572 ;;		On entry : 0/0
 21573 ;;		On exit  : 0/0
 21574 ;;		Unchanged: 0/0
 21575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21580 ;;Total ram usage:        0 bytes
 21581 ;; Hardware stack levels used:    1
 21582 ;; This function calls:
 21583 ;;		Nothing
 21584 ;; This function is called by:
 21585 ;;		_INTERRUPT_S1_CALLBACK
 21586 ;; This function uses a non-reentrant model
 21587 ;;
 21588                           
 21589                           	psect	text102
 21590  0068EA                     __ptext102:
 21591                           	opt callstack 0
 21592  0068EA                     _TMR0_StartTimer:
 21593                           	opt callstack 16
 21594  0068EA                     
 21595                           ;mcc_generated_files/tmr0.c: 93:     T0CONbits.TMR0ON = 1;
 21596  0068EA  8ED5               	bsf	213,7,c	;volatile
 21597  0068EC  0012               	return		;funcret
 21598  0068EE                     __end_of_TMR0_StartTimer:
 21599                           	opt callstack 0
 21600                           
 21601                           	psect	text103
 21602  000000                     __ptext103:
 21603                           	opt callstack 0
 21604  000000                     
 21605                           	psect	rparam
 21606  0000                     
 21607                           	psect	temp
 21608  00005F                     btemp:
 21609                           	opt callstack 0
 21610  00005F                     	ds	1
 21611  0000                     int$flags	set	btemp
 21612  0000                     wtemp8	set	btemp+1
 21613  0000                     ttemp5	set	btemp+1
 21614  0000                     ttemp6	set	btemp+4
 21615  0000                     ttemp7	set	btemp+8
 21616                           tosu	equ	0xFFF
 21617                           tosh	equ	0xFFE
 21618                           tosl	equ	0xFFD
 21619                           stkptr	equ	0xFFC
 21620                           pclatu	equ	0xFFB
 21621                           pclath	equ	0xFFA
 21622                           pcl	equ	0xFF9
 21623                           tblptru	equ	0xFF8
 21624                           tblptrh	equ	0xFF7
 21625                           tblptrl	equ	0xFF6
 21626                           tablat	equ	0xFF5
 21627                           prodh	equ	0xFF4
 21628                           prodl	equ	0xFF3
 21629                           indf0	equ	0xFEF
 21630                           postinc0	equ	0xFEE
 21631                           postdec0	equ	0xFED
 21632                           preinc0	equ	0xFEC
 21633                           plusw0	equ	0xFEB
 21634                           fsr0h	equ	0xFEA
 21635                           fsr0l	equ	0xFE9
 21636                           wreg	equ	0xFE8
 21637                           indf1	equ	0xFE7
 21638                           postinc1	equ	0xFE6
 21639                           postdec1	equ	0xFE5
 21640                           preinc1	equ	0xFE4
 21641                           plusw1	equ	0xFE3
 21642                           fsr1h	equ	0xFE2
 21643                           fsr1l	equ	0xFE1
 21644                           bsr	equ	0xFE0
 21645                           indf2	equ	0xFDF
 21646                           postinc2	equ	0xFDE
 21647                           postdec2	equ	0xFDD
 21648                           preinc2	equ	0xFDC
 21649                           plusw2	equ	0xFDB
 21650                           fsr2h	equ	0xFDA
 21651                           fsr2l	equ	0xFD9
 21652                           status	equ	0xFD8


Data Sizes:
    Strings     249
    Constant    3536
    Data        11
    BSS         83
    Persistent  12
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      94
    BANK0           160     85     115
    BANK1           256    114     186
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[12]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_105(CODE[3]), STR_101(CODE[3]), STR_96(CODE[3]), STR_92(CODE[3]), 
		 -> STR_87(CODE[4]), STR_83(CODE[4]), STR_78(CODE[3]), STR_73(CODE[3]), 
		 -> STR_68(CODE[4]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[4]), 
		 -> STR_48(CODE[3]), STR_43(CODE[3]), STR_38(CODE[4]), STR_33(CODE[3]), 
		 -> STR_29(CODE[3]), STR_24(CODE[3]), STR_20(CODE[3]), STR_15(CODE[4]), 
		 -> STR_11(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_105(CODE[3]), STR_101(CODE[3]), STR_96(CODE[3]), STR_92(CODE[3]), 
		 -> STR_87(CODE[4]), STR_83(CODE[4]), STR_78(CODE[3]), STR_73(CODE[3]), 
		 -> STR_68(CODE[4]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[4]), 
		 -> STR_48(CODE[3]), STR_43(CODE[3]), STR_38(CODE[4]), STR_33(CODE[3]), 
		 -> STR_29(CODE[3]), STR_24(CODE[3]), STR_20(CODE[3]), STR_15(CODE[4]), 
		 -> STR_11(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_8(CODE[40]), STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[39]), 
		 -> STR_4(CODE[22]), STR_3(CODE[12]), STR_1(CODE[13]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_8(CODE[40]), STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[39]), 
		 -> STR_4(CODE[22]), STR_3(CODE[12]), STR_1(CODE[13]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK1[32]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[12]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_8(CODE[40]), STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[39]), 
		 -> STR_4(CODE[22]), STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    S2323_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_8(CODE[40]), STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[39]), 
		 -> STR_4(CODE[22]), STR_3(CODE[12]), read_from_usart@data(BANK0[10]), STR_1(CODE[13]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_8(CODE[40]), STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[39]), 
		 -> STR_4(CODE[22]), STR_3(CODE[12]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 40
		 -> STR_8(CODE[40]), STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[39]), 
		 -> STR_4(CODE[22]), STR_3(CODE[12]), STR_1(CODE[13]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    lcd_draw_string@pS	PTR const unsigned char  size(2) Largest target is 33
		 -> string(BANK1[30]), STR_2(CODE[33]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INTERRUPT_S1_CALLBACK(), IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INTERRUPT_S1_CALLBACK(), Absolute function(), IOCB4_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_S1_CALLBACK->i2_printf
    i2_printf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_xtoa
    i2_xtoa->i2_pad
    i2_toupper->i2_islower
    i2_utoa->i2_pad
    i2_stoa->i2_fputc
    i2_otoa->i2_pad
    i2_dtoa->i2_pad
    i2_abs->i2___aomod
    i2_ctoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_fputc->i2_putch
    i2_putch->i2_EUSART1_Write
    i2_atoi->i2_isspace

Critical Paths under _main in BANK0

    _read_from_usart->_atoi
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace
    _lcd_init->_lcd_fill
    _lcd_fill->_lcd_set_cursor
    _lcd_draw_string->_lcd_draw_char
    _lcd_draw_char->_lcd_set_cursor
    _lcd_set_cursor->_lcd_set_cursor_x
    _lcd_set_cursor->_lcd_set_cursor_y
    _lcd_set_cursor_y->_lcd_send
    _lcd_set_cursor_x->_lcd_send
    _lcd_draw_pixel->_lcd_send
    _lcd_send->_SPI_ExchangeByte
    ___aldiv->___lmul
    _SYSTEM_Initialize->_TMR0_Initialize
    _SYSTEM_Initialize->_TMR1_Initialize
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_S1_CALLBACK->i2_printf
    i2_vfprintf->i2_vfpfcnvrt

Critical Paths under _main in BANK1

    _main->_snprintf
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  180988
                                            109 BANK1      5     5      0
                  _ADC_GetConversion
          _IOCB4_SetInterruptHandler
                           _SPI_Open
                  _SYSTEM_Initialize
                     _TMR0_ReadTimer
                    _TMR0_WriteTimer
                            ___aldiv
                             ___lmul
                    _lcd_draw_string
                           _lcd_init
                             _printf
                    _read_from_usart
                           _snprintf
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            14     4     10   59971
                                             95 BANK1     14     4     10
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   59264
                                             73 BANK1     22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _read_from_usart                                     17    15      2    3077
                                             67 BANK0     17    15      2
                       _EUSART1_Read
                      _EUSART1_Write
                _EUSART1_is_rx_ready
                _EUSART1_is_tx_ready
                    _TMR0_WriteTimer
                               _atoi
 ---------------------------------------------------------------------------------
 (2) _TMR0_WriteTimer                                      2     0      2     246
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_tx_ready                                  1     1      0      24
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   59086
                                             73 BANK1     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   58206
                                             65 BANK1      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   56776
                                             28 BANK1     37    31      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    8901
                                             74 BANK0     11     0     11
                                              0 BANK1     28    28      0
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                             51 BANK0      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    7743
                                             74 BANK0     10     0     10
                                              0 BANK1     22    22      0
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                             45 BANK0     17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                             45 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    5995
                                             45 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2800
                                             56 BANK0     22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    7015
                                             74 BANK0     10     0     10
                                              0 BANK1     24    24      0
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    8597
                                             74 BANK0     10     0     10
                                              0 BANK1     26    26      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             63 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                             45 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                             45 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    6070
                                             74 BANK0      5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    5791
                                             63 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     310
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2139
                                             56 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1639
                                             47 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      62
                                             46 BANK0      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Write                                       1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2285
                                             52 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                             45 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     371
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     912
                                             45 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0   31303
                           _lcd_fill
                           _lcd_send
                            _msDelay
 ---------------------------------------------------------------------------------
 (2) _msDelay                                              3     3      0      46
                                             45 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _lcd_fill                                             6     4      2   23819
                                             54 BANK0      6     4      2
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_draw_string                                     18     8     10   25662
                                             76 BANK0      8     8      0
                                              0 BANK1     10     0     10
                      _lcd_draw_char
 ---------------------------------------------------------------------------------
 (2) _lcd_draw_char                                       22    12     10   24434
                                             54 BANK0     22    12     10
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       4     0      4   15812
                                             50 BANK0      4     0      4
                   _lcd_set_cursor_x
                   _lcd_set_cursor_y
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_y                                     2     0      2    7580
                                             48 BANK0      2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_x                                     2     0      2    7580
                                             48 BANK0      2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_draw_pixel                                       2     0      2    7862
                                             48 BANK0      2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_send                                             2     1      1    7438
                                             46 BANK0      2     1      1
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI_ExchangeByte                                     1     1      0      22
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     370
                                             45 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     452
                                             57 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _TMR0_ReadTimer                                       8     6      2      69
                                             45 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     174
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Open                                             2     2      0      88
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      22
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                         12    12      0   34209
                                             33 BANK0     12    12      0
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (12) _PIN_MANAGER_IOC                                     0     0      0   34209
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (13) _IOCB4_ISR                                           0     0      0   34209
                   Absolute function *
              _INTERRUPT_S1_CALLBACK *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_S1_CALLBACK                               0     0      0   34209
                    _TMR0_StartTimer
                     _TMR0_StopTimer
                  i2_TMR0_WriteTimer
                           i2_printf
 ---------------------------------------------------------------------------------
 (15) i2_printf                                           10     4      6   34139
                                             86 COMRAM     4     4      0
                                             27 BANK0      6     0      6
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (16) i2_vfprintf                                          8     2      6   33879
                                             78 COMRAM     8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (17) i2_vfpfcnvrt                                        46    40      6   33250
                                             68 COMRAM    10     4      6
                                              0 BANK0     27    27      0
                             i2_atoi
                             i2_ctoa
                             i2_dtoa
                            i2_fputc
                          i2_isdigit
                             i2_otoa
                             i2_stoa
                          i2_strncmp
                             i2_utoa
                             i2_xtoa
 ---------------------------------------------------------------------------------
 (18) i2_xtoa                                             39    28     11    4881
                                             29 COMRAM    39    28     11
                          i2_isalpha
                          i2_isupper
                              i2_pad
                          i2_toupper
 ---------------------------------------------------------------------------------
 (19) i2_toupper                                           8     6      2     262
                                              6 COMRAM     8     6      2
                          i2_islower
 ---------------------------------------------------------------------------------
 (20) i2_islower                                           6     4      2      66
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (19) i2_isupper                                           6     4      2      66
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (19) i2_isalpha                                           6     4      2      66
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (18) i2_utoa                                             32    22     10    4388
                                             29 COMRAM    32    22     10
                          i2___lodiv
                          i2___lomod
                              i2_pad
 ---------------------------------------------------------------------------------
 (19) i2___lomod                                          17     1     16     302
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (19) i2___lodiv                                          25     9     16     311
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (18) i2_strncmp                                          11     5      6    2530
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (18) i2_stoa                                             22    18      4    1804
                                             11 COMRAM    22    18      4
                            i2_fputc
                           i2_strlen
 ---------------------------------------------------------------------------------
 (18) i2_otoa                                             34    24     10    3880
                                             29 COMRAM    34    24     10
                              i2_pad
 ---------------------------------------------------------------------------------
 (18) i2_dtoa                                             36    26     10    5187
                                             29 COMRAM    36    26     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (19) i2_abs                                               4     2      2     128
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (19) i2___aomod                                          18     2     16     503
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (19) i2___aodiv                                          26    10     16     515
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (18) i2_ctoa                                              7     4      3    3265
                                             29 COMRAM     5     2      3
                              i2_pad
 ---------------------------------------------------------------------------------
 (19) i2_pad                                              11     5      6    3096
                                             18 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (20) i2_strlen                                            4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (20) i2_fputs                                             7     3      4    1149
                                             11 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (21) i2_fputc                                             9     5      4     869
                                              2 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (22) i2_putch                                             1     1      0      62
                                              1 COMRAM     1     1      0
                    i2_EUSART1_Write
 ---------------------------------------------------------------------------------
 (23) i2_EUSART1_Write                                     1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (18) i2_atoi                                             15    13      2    1115
                                              7 COMRAM    15    13      2
                           i2___wmul
                          i2_isdigit
                          i2_isspace
 ---------------------------------------------------------------------------------
 (19) i2_isspace                                           7     5      2     134
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (18) i2_isdigit                                           6     4      2     136
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (19) i2___wmul                                            6     2      4     302
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (15) i2_TMR0_WriteTimer                                   2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR0_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _IOCB4_SetInterruptHandler
   _SPI_Open
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
   _TMR0_ReadTimer
   _TMR0_WriteTimer
   ___aldiv
     ___lmul (ARG)
   ___lmul
   _lcd_draw_string
     _lcd_draw_char
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
   _lcd_init
     _lcd_fill
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
     _lcd_send
       _SPI_ExchangeByte
     _msDelay
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
         _isdigit
         _otoa
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _stoa
           _fputc
             _putch
               _EUSART1_Write
           _strlen
         _strncmp
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
           _toupper
             _islower
   _read_from_usart
     _EUSART1_Read
     _EUSART1_Write
     _EUSART1_is_rx_ready
     _EUSART1_is_tx_ready
     _TMR0_WriteTimer
     _atoi
       ___wmul
       _isdigit
       _isspace
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _stoa
             _fputc
               _putch
                 _EUSART1_Write
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _INTERRUPT_S1_CALLBACK *
         _TMR0_StartTimer
         _TMR0_StopTimer
         i2_TMR0_WriteTimer
         i2_printf
           i2_vfprintf
             i2_vfpfcnvrt
               i2_atoi
                 i2___wmul
                 i2_isdigit
                 i2_isspace
               i2_ctoa
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_EUSART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                   i2_strlen
               i2_dtoa
                 i2___aodiv
                 i2___aomod
                 i2_abs
                   i2___aomod (ARG)
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_EUSART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                   i2_strlen
               i2_fputc
                 i2_putch
                   i2_EUSART1_Write
               i2_isdigit
               i2_otoa
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_EUSART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                   i2_strlen
               i2_stoa
                 i2_fputc
                   i2_putch
                     i2_EUSART1_Write
                 i2_strlen
               i2_strncmp
               i2_utoa
                 i2___lodiv
                 i2___lomod
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_EUSART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                   i2_strlen
               i2_xtoa
                 i2_isalpha
                 i2_isupper
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_EUSART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                   i2_strlen
                 i2_toupper
                   i2_islower
       _IOCB4_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     72      BA       8       72.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     55      73       5       71.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5E       1      100.0%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     18B       6        0.0%
DATA                 0      0     18B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Dec 03 15:52:53 2020

                                _SPI_Initialize 685C                                     _SSPSTATbits 000FC7  
                                            l30 687E                                              l51 686C  
                                            l27 6778                                              l61 67C0  
                                            l55 5BF2                                              l63 67CE  
                                            l64 67D2                             ___wmul@multiplicand 008F  
            __size_of_IOCB4_SetInterruptHandler 000A                                     __CFG_BORV$3 000000  
                               _timer0ReloadVal 005B                      ?_IOCB4_SetInterruptHandler 008D  
                                  __CFG_CP0$OFF 000000                                    __CFG_CP1$OFF 000000  
                                  __CFG_CP2$OFF 000000                                    __CFG_CP3$OFF 000000  
                                           l204 663C                                             l300 67EA  
                                           l134 61AC                                             l321 68AC  
                                           l145 68A2                                             l306 688C  
                                           l324 68C0                                             l500 67B6  
                                           l333 68E4                                             l182 62FA  
                                           l318 68B6                                             l510 611E  
                                           l167 6830                                             l273 61F2  
                                           l521 5C7A                                             l281 685A  
                                           l514 60D0                                             l506 62BA  
                                           l290 6668                                             l450 371A  
                                           l179 62D8                                             l355 66BA  
                                           l443 5B3E                                             l364 6798  
                                           l517 6802                                             l701 44C4  
                                           l277 6664                                             l437 5A92  
                                           l453 3764                                             l710 4570  
                                           l294 6690                                             l278 6666  
                                           l711 45BA                                             l367 6898  
                                           l720 3856                                             l297 67D8  
                                           l641 58B6                                             l650 5ED2  
                                           l730 3A32                                             l722 385E  
                                           l643 58F2                                             l715 45C2  
                                           l590 4BDC                                             l638 5872  
                                           l735 2D40                                             l488 64D4  
                                           l656 2AA4                                             l760 2FF6  
                                           l744 2DE4                                             l497 29FE  
                                           l681 4084                                             l737 2D48  
                                           l841 5DA8                                             l658 2AAC  
                                           l690 41D6                                             l842 5DB0  
                                           l683 408C                                             l924 5202  
                                           l676 2D04                                             l692 4246  
                                           l845 670A                                             l758 2F88  
                                           l774 0196                                             l599 4FE4  
                                           l856 5CD6                                             l857 5CE6  
                                           l699 44BC                                             l972 4D42  
                                           l797 1350                                             l959 474C  
                                  __CFG_CPB$OFF 000000                                    __CFG_CPD$OFF 000000  
                            i2___aodiv@quotient 0013                                 _timer1ReloadVal 00C8  
                                           _abs 6238                                             _pad 582A  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                             __end_ofi2_vfpfcnvrt 25CA  
                               ?_lcd_set_cursor 0092                              __size_of_IOCB4_ISR 002E  
                                          ?_abs 009F                                            l1300 568C  
                                          l1600 6166                                            l1520 6270  
                                          l1290 52F4                                            l1523 6278  
                                          l1283 52D4                                            l1620 6462  
                                          l1293 566C                                            l1614 65E2  
                                          l1551 3C3A                                            l1607 66E2  
                                          l1624 54D0                                            l1554 3C42  
                                          l1634 5E6C                                            l1563 649C  
                                          l1571 5FE0                                            l1557 6378  
                                          l1645 63EE                                            l1661 50D4  
                                          l1639 5E74                                            l1592 5828  
                                          l1656 50F4                                            l1577 6428  
                                          l5045 67BC                                            l6301 6296  
                                          ?_pad 009F                                            l6311 67EC  
                                          l6303 62B2                                            l6401 667C  
                                          l6323 68E2                                            l6331 6168  
                                          l5611 67B4                                            l6307 62B8  
                                          l7211 5784                                            l6403 668A  
                                          l6411 6894                                            l6341 619A  
                                          l6333 6184                                            l6325 685C  
                                          l5605 679E                                            l6421 5BF4  
                                          l6413 64A2                                            l7213 578E  
                                          l6405 668E                                            l6343 619C  
                                          l6335 618A                                            l6327 6868  
                                          l6351 6612                                            l6511 6764  
                                          l5607 67AA                                            l6431 5C56  
                                          l6423 5C06                                            l6415 64AC  
                                          l7215 57AC                                            l7207 575E  
                                          l6521 5B44                                            l6281 68AE  
                                          l6345 61AA                                            l6337 618C  
                                          l6329 686A                                            l6361 6694  
                                          l6353 661E                                            l6513 6768  
                                          l6505 6758                                            l5609 67AC  
                                          l6441 4A66                                            l6433 5C5E  
                                          l6417 64BE                                            l6601 25CA  
                                          l7217 57E2                                            l7209 5772  
                                          l6409 688E                                            l9001 50EC  
                                          l6531 5BF0                                            l6523 5B52  
                                          l6283 68A4                                            l6371 61C2  
                                          l6347 686E                                            l6339 6198  
                                          l6363 669C                                            l6355 6620  
                                          l6515 676C                                            l6507 675C  
                                          l6443 4AAA                                            l6427 5C2E  
                                          l6419 64C2                                            l6611 2600  
                                          l6603 25D6                                            l7411 6146  
                                          l9011 66BC                                            l6541 62C0  
                                          l6525 5B94                                            l6349 681C  
                                          l6285 68B8                                            l6373 61D0  
                                          l6365 66B4                                            l6357 6638  
                                          l6517 6770                                            l6509 6760  
                                          l6461 4B7C                                            l6429 5C3A  
                                          l6701 281C                                            l6621 263C  
                                          l6613 260C                                            l6605 25DC  
                                          l8301 3BA4                                            l7165 67D8  
                                          l7405 6120                                            l7413 642A  
                                          l9013 66C6                                            l9021 5AB4  
                                          l6543 62D4                                            l6527 5B98  
                                          l6375 61DE                                            l6279 689A  
                                          l6367 66B6                                            l6359 6692  
                                          l6519 6774                                            l6463 4B80  
                                          l6455 4AB4                                            l6471 4BA4  
                                          l6439 4A5C                                            l6711 2858  
                                          l6703 2828                                            l6631 2678  
                                          l6623 2648                                            l6615 2618  
                                          l6607 25E8                                            l7167 67E6  
                                          l7183 6884                                            l7407 612E  
                                          l7415 6436                                            l7423 63B6  
                                          l6383 663E                                            l9023 5AC8  
                                          l9031 5B04                                            l6545 62D6  
                                          l6529 5BBC                                            l6377 61EC  
                                          l6369 61AE                                            l5921 611C  
                                          l5913 60D2                                            l6465 4B90  
                                          l6457 4B60                                            l6449 4AB0  
                                          l9041 4EAC                                            l6721 2894  
                                          l6713 2864                                            l6705 2834  
                                          l6641 26B4                                            l6633 2684  
                                          l6625 2654                                            l6617 2624  
                                          l6609 25F4                                            l8305 3BFA  
                                          l9201 3B3C                                            l7409 6140  
                                          l7417 643C                                            l8321 5EA2  
                                          l8401 40BE                                            l6393 6848  
                                          l6385 6644                                            l9033 5B22  
                                          l9025 5ADC                                            l9017 5A84  
                                          l6547 62E6                                            l5915 60EA  
                                          l5931 60A2                                            l6299 627A  
                                          l6467 4B92                                            l6459 4B70  
                                          l9051 4F7A                                            l9043 4EC2  
                                          l6731 28D0                                            l6723 28A0  
                                          l6715 2870                                            l6707 2840  
                                          l6651 26F0                                            l6643 26C0  
                                          l6635 2690                                            l6627 2660  
                                          l6619 2630                                            l8307 3C0C  
                                          l7419 6454                                            l8323 5EA6  
                                          l8315 5E76                                            l8331 2A20  
                                          l8411 40F0                                            l8403 40C2  
                                          l6387 6652                                            l9035 5B36  
                                          l9027 5AF0                                            l9019 5AA0  
                                          l6565 677A                                            l5933 60CE  
                                          l5925 6084                                            l6469 4BA2  
                                          l9053 4FAE                                            l9045 4EFC  
                                          l6741 290C                                            l6733 28DC  
                                          l6725 28AC                                            l6717 287C  
                                          l6709 284C                                            l6661 272C  
                                          l6653 26FC                                            l6645 26CC  
                                          l6637 269C                                            l6629 266C  
                                          l8309 3C1E                                            l8325 5EAC  
                                          l8317 5E8A                                            l8341 2A96  
                                          l8333 2A4A                                            l8421 4192  
                                          l8413 40F6                                            l8405 40CE  
                                          l8501 3926                                            l6397 6668  
                                          l6389 6660                                            l9029 5AFE  
                                          l6567 6782                                            l5919 60F0  
                                          l5927 609C                                            l9047 4F00  
                                          l9055 4FB2                                            l9039 4EA8  
                                          l6751 2948                                            l6743 2918  
                                          l6735 28E8                                            l6727 28B8  
                                          l6719 2888                                            l6671 2768  
                                          l6663 2738                                            l6655 2708  
                                          l6647 26D8                                            l6639 26A8  
                                          l8319 5E96                                            l8351 2AEA  
                                          l8343 2AB4                                            l8335 2A6A  
                                          l8431 4200                                            l8423 41AC  
                                          l8415 40FC                                            l8407 40D6  
                                          l8511 39F2                                            l8503 398C  
                                          l6399 6676                                            l9071 35BA  
                                          l6569 6790                                            l9049 4F4E  
                                          l6761 2984                                            l6753 2954  
                                          l6745 2924                                            l6737 28F4  
                                          l6729 28C4                                            l6681 27A4  
                                          l6673 2774                                            l6665 2744  
                                          l6657 2714                                            l6649 26E4  
                                          l7801 6464                                            l8281 3A84  
                                          l8273 3A34                                            l8361 2B8E  
                                          l8353 2AF2                                            l8345 2AC8  
                                          l8337 2A7A                                            l8329 2A00  
                                          l8433 4210                                            l8425 41C6  
                                          l8409 40DE                                            l8417 415A  
                                          l8441 444A                                            l8505 39A0  
                                          l8513 3A02                                            l8521 2D18  
                                          l9057 65B4                                            l9081 3600  
                                          l9073 35C0                                            l6851 5CB6  
                                          l6843 5C7C                                            l6771 29C0  
                                          l6763 2990                                            l6755 2960  
                                          l6747 2930                                            l6739 2900  
                                          l6691 27E0                                            l6683 27B0  
                                          l6675 2780                                            l6667 2750  
                                          l6659 2720                                            l8291 3AF6  
                                          l8283 3AD4                                            l8275 3A4A  
                                          l7811 45C4                                            l8371 2C62  
                                          l8355 2AFA                                            l8363 2BF4  
                                          l8347 2AD8                                            l8339 2A7C  
                                          l8427 41E6                                            l8435 4216  
                                          l8419 4174                                            l8451 448A  
                                          l8443 4452                                            l8507 39BE  
                                          l8531 2D94                                            l8523 2D32  
                                          l8611 0092                                            l9059 65BE  
                                          l9091 36D4                                            l9083 360E  
                                          l9075 35C4                                            l6861 511E  
                                          l6853 50F6                                            l6845 5C8E  
                                          l6773 29CC                                            l6765 299C  
                                          l6757 296C                                            l6749 293C  
                                          l6693 27EC                                            l6685 27BC  
                                          l6677 278C                                            l6669 275C  
                                          l7805 66E4                                            l8293 3AFE  
                                          l8285 3AD8                                            l8277 3A4E  
                                          l7821 460A                                            l7813 45CA  
                                          l8381 2CB0                                            l8365 2C10  
                                          l8373 2C72                                            l8357 2B80  
                                          l8349 2AE0                                            l8429 41FA  
                                          l8461 4500                                            l8453 449A  
                                          l8445 4466                                            l7901 525A  
                                          l8509 39D8                                            l8541 2DD8  
                                          l8533 2D9C                                            l8525 2D60  
                                          l8517 2D06                                            l8701 04BA  
                                          l8621 00EA                                            l8613 00B8  
                                          l9093 371C                                            l9085 361C  
                                          l9077 35D2                                            l9069 35B6  
                                          l6871 5166                                            l6863 512C  
                                          l6855 50FC                                            l6847 5C9C  
                                          l6775 29DE                                            l6767 29A8  
                                          l6759 2978                                            l6695 27F8  
                                          l6687 27C8                                            l6679 2798  
                                          l7807 6702                                            l8295 3B06  
                                          l8279 3A52                                            l7831 4660  
                                          l7823 462A                                            l7815 45D8  
                                          l8383 2CBC                                            l8375 2C86  
                                          l8367 2C2E                                            l8359 2B88  
                                          l8391 404A                                            l8471 4552  
                                          l8463 451E                                            l8447 446E  
                                          l8439 4438                                            l7911 52CE  
                                          l7903 526C                                            l8551 2E68  
                                          l8535 2DA4                                            l8527 2D6A  
                                          l8519 2D16                                            l8711 05AC  
                                          l8703 0504                                            l8623 00EE  
                                          l8615 00C6                                            l9095 3766  
                                          l9087 367A                                            l9079 35D4  
                                          l6881 51B0                                            l6873 516E  
                                          l6865 513C                                            l6857 510A  
                                          l6849 5CAC                                            l6777 29EA  
                                          l6769 29B4                                            l6697 2804  
                                          l6689 27D4                                            l8297 3B52  
                                          l8289 3AE0                                            l7761 584E  
                                          l7841 46E2                                            l7833 4674  
                                          l7825 462E                                            l7817 45F8  
                                          l8385 2CC4                                            l8377 2C96  
                                          l8369 2C48                                            l8393 405A  
                                          l8465 452A                                            l8457 44E6  
                                          l8449 4482                                            l7905 529A  
                                          l7921 5606                                            l7913 55BC  
                                          l8481 381C                                            l8561 2EAC  
                                          l8553 2E7A                                            l8545 2E1C  
                                          l8537 2DAC                                            l8529 2D8A  
                                          l8801 0B50                                            l8721 0648  
                                          l8641 0120                                            l8633 0110  
                                          l8625 0100                                            l8617 00D8  
                                          l9097 3782                                            l9089 36A8  
                                          l6891 51E2                                            l6883 51C0  
                                          l6875 517A                                            l6867 5140  
                                          l6859 511A                                            l6779 29F0  
                                          l6699 2810                                            l7931 5F94  
                                          l7771 5898                                            l7763 585E  
                                          l7851 472C                                            l7843 46E4  
                                          l7835 4682                                            l7827 463A  
                                          l7819 45FC                                            l8379 2C9E  
                                          l8387 2CD4                                            l8395 405C  
                                          l8475 4582                                            l8467 4548  
                                          l8459 44FA                                            l7907 52BA  
                                          l7923 5634                                            l7915 55DC  
                                          l8491 3890                                            l8483 382C  
                                          l8571 2F78                                            l8547 2E2E  
                                          l8555 2E8E                                            l8539 2DC8  
                                          l8563 2F0A                                            l8811 0BC2  
                                          l8803 0B88                                            l8731 0706  
                                          l8707 053C                                            l8651 01A8  
                                          l8619 00DC                                            l6893 51F2  
                                          l6885 51C2                                            l6877 5188  
                                          l6869 5150                                            l7933 5FA8  
                                          l7773 58C4                                            l7765 586A  
                                          l7757 582A                                            l7845 46F6  
                                          l7837 4694                                            l7829 4658  
                                          l7861 4C12                                            l7781 6254  
                                          l8397 4076                                            l8477 4596  
                                          l8469 454E                                            l7909 52BC  
                                          l7925 5654                                            l7917 55E4  
                                          l8493 3898                                            l8485 382E  
                                          l8573 2F98                                            l8565 2F26  
                                          l8557 2EA0                                            l8901 11FC  
                                          l8821 0CA8                                            l8813 0C0E  
                                          l8741 07D8                                            l8717 05FC  
                                          l8709 0574                                            l8661 0240  
                                          l8653 01CE                                            l8645 012C  
                                          l8637 0118                                            l8629 0108  
                                          l6887 51CC                                            l6879 5192  
                                          l7935 5FD6                                            l7775 58D8  
                                          l7767 587E                                            l7759 583A  
                                          l7839 46C2                                            l7847 46FC  
                                          l7871 4C6A                                            l7863 4C16  
                                          l7855 4BDE                                            l8399 40B4  
                                          l8479 459C                                            l8591 542C  
                                          l8583 53E6                                            l7927 5666  
                                          l7919 55F8                                            l8495 38A0  
                                          l8487 3848                                            l7783 63F0  
                                          l7791 5E16                                            l8575 2FA0  
                                          l8567 2F44                                            l8559 2EA6  
                                          l8903 1234                                            l8727 0696  
                                          l8719 0622                                            l8671 02D0  
                                          l8663 024E                                            l8655 0204  
                                          l9199 0154                                            l8647 0182  
                                          l6889 51D2                                            l7937 5FDA  
                                          l7929 5F8E                                            l7769 5892  
                                          l7849 470C                                            l7881 4CEC  
                                          l7873 4C7E                                            l7865 4C24  
                                          l7857 4BE4                                            l8593 544A  
                                          l8585 5412                                            l8497 391A  
                                          l8489 3886                                            l8577 2FB0  
                                          l8569 2F5E                                            l8905 125E  
                                          l8913 12AE                                            l8841 0E0A  
                                          l8833 0D80                                            l8825 0CC8  
                                          l8817 0C4C                                            l8809 0B9C  
                                          l8761 0910                                            l8753 089A  
                                          l8745 0810                                            l8737 0758  
                                          l8729 06CE                                            l8681 0368  
                                          l8673 02DA                                            l8657 0212  
                                          l8649 01A6                                            l7875 4C8C  
                                          l7883 4CF2                                            l7867 4C44  
                                          l7859 4BF2                                            l7779 6238  
                                          l8595 5468                                            l7891 5204  
                                          l8499 3920                                            l7787 633C  
                                          l7795 5E4E                                            l8579 2FC6  
                                          l8931 133E                                            l8915 12D4  
                                          l8923 1304                                            l8907 126E  
                                          l8851 0EB8                                            l8843 0E30  
                                          l8835 0DB8                                            l8827 0D00  
                                          l8819 0C72                                            l8771 09D2  
                                          l8763 0948                                            l8755 08C0  
                                          l8747 0848                                            l8739 0790  
                                          l8691 03F8                                            l8683 0376  
                                          l8675 02E8                                            l8667 0298  
                                          l8659 0220                                            l7885 4D02  
                                          l7877 4CBA                                            l7869 4C62  
                                          l8597 547A                                            l8589 541E  
                                          l7893 5210                                            l7797 5E60  
                                          l8917 12E2                                            l8861 0F7A  
                                          l8829 0D48                                            l8781 0A5C  
                                          l8773 0A0A                                            l8693 042C  
                                          l8677 030E                                            l8669 02AA  
                                          l7887 4D22                                            l7879 4CDA  
                                          l8599 54A8                                            l7895 5230  
                                          l8919 12F6                                            l8863 0FA4  
                                          l8871 1026                                            l8791 0ACE  
                                          l8783 0A94                                            l8775 0A16  
                                          l8687 03C0                                            l8679 0348  
                                          l7897 5238                                            l8873 105E  
                                          l8865 0FB4                                            l8857 0F0A  
                                          l8849 0E80                                            l8793 0B04  
                                          l8769 099A                                            l8697 0448  
                                          l8689 03D2                                            l8929 1316  
                                          l8961 5D4E                                            l7899 524C  
                                          l8891 1174                                            l8875 1096  
                                          l8867 0FEA                                            l8859 0F42  
                                          l8779 0A24                                            l8699 0482  
                                          l8963 5D56                                            l8893 1182  
                                          l8877 10C0                                            l8885 1110  
                                          l8789 0AA8                                            l8965 5D64  
                                          l8981 500A                                            l8973 4FE6  
                                          l8887 1136                                            l8879 10D0  
                                          l8799 0B18                                            l8967 5D8A  
                                          l8991 5074                                            l8983 5028  
                                          l8975 4FFA                                            STR_1 FFB4  
                                          STR_2 FF54                                            l8889 115C  
                                          l8993 5088                                            l8985 5034  
                                          l8977 5002                                            STR_3 FFC1  
                                          STR_4 FF75                                            l8899 11C4  
                                          l8995 5096                                            l8987 5040  
                                          STR_5 FF2D                                            STR_6 FFA0  
                                          l8997 50C4                                            l8989 5050  
                                          STR_7 FF8B                                            STR_8 FF05  
                                          l8999 50DC                                            STR_9 FFD1  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            _LATD 000F8C  
                                          _LATE 000F8D                                            u5430 67CE  
                                          u7030 60EA                                            u5431 67CA  
                                          u7031 60E6                                            u8000 512C  
                                          u7040 609C                                            u8001 5128  
                                          u7041 6098                                            u8010 5166  
                                          u8011 5162                                            u8020 5188  
                                          u8021 5184                                            u8030 51B0  
                                          u8031 51AC                                            u8040 51E2  
                                          u8041 51DE                                            u8230 67E6  
                                          u6375 67A8                                            u8231 67E2  
                                          u6376 67AA                                            u7520 6296  
                                          u8320 5772                                            u7600 6676  
                                          u7521 6292                                            u8321 576E  
                                          u7601 6672                                            u7530 62B2  
                                          u8330 5784                                            u7610 668A  
                                          u7531 62AE                                            u8331 5780  
                                          u7611 6686                                            u7700 4BA2  
                                          u7620 64D4                                            u8340 57AC  
                                          u7701 4B9E                                            u7621 64D0  
                                          u8341 57A8                                            u7710 4BDC  
                                          u7630 5C2A                                            u8350 57E2  
                                          u7711 4BD8                                            u7631 5C26  
                                          u8351 57DE                                            u7640 5C56  
                                          u7641 5C52                                            u7650 5C7A  
                                          u7570 6652                                            u7651 5C76  
                                          u7571 664E                                            u7580 6660  
                                          u7581 665C                                            u7590 6858  
                                          u7591 6852                                            u7680 4B60  
                                          u8720 6166                                            u9520 583A  
                                          u9600 6374                                            u7681 4B5C  
                                          u8721 6162                                            u9521 5836  
                                          u7770 5B52                                            u7690 4B90  
                                          u7674 4B3E                                            u8730 6454  
                                          u9530 585E                                            u9610 5E48  
                                          u7771 5B4E                                            u7691 4B8C  
                                          u7675 4B38                                            u8731 6450  
                                          u9531 585A                                            u9611 5E42  
                                          u9540 58B6                                            u9700 4682  
                                          u8740 63E8                                            u9620 5E4A  
                                          u7596 685A                                            u9541 58B2  
                                          u9701 467E                                            u8741 63E2  
                                          u7790 62E6                                            u9550 58C4  
                                          u9710 46C2                                            u8750 63EA  
                                          u9630 5E60                                            u7791 62E2  
                                          u9551 58C0                                            u9711 46BE  
                                          u9631 5E5C                                            u9640 6496  
                                          u9720 470C                                            u9560 6254  
                                          u9800 5230                                            u9641 6490  
                                          u9721 4708                                            u9561 6250  
                                          u9801 522C                                            u7970 5C9C  
                                          u9650 6498                                            u9730 4BF2  
                                          u9810 525A                                            u9570 6422  
                                          u7971 5C98                                            u9731 4BEE  
                                          u9811 5256                                            u9571 641C  
                                          u7980 5CD6                                            u9660 45D8  
                                          u9740 4C24                                            u9820 529A  
                                          u9580 6424                                            u7981 5CD2  
                                          u9661 45D4                                            u9741 4C20  
                                          u9821 5296                                            u7990 510A  
                                          u9670 460A                                            u9750 4C62  
                                          u9830 55DC                                            u9590 6372  
                                          u7991 5106                                            u9671 4606  
                                          u9751 4C5E                                            u9831 55D8  
                                          u9591 636C                                            u9760 4C8C  
                                          u9840 5606                                            u9681 4634  
                                          u9761 4C88                                            u9841 5602  
                                          u9690 4658                                            u9770 4CBA  
                                          u9850 5634                                            u9691 4654  
                                          u9771 4CB6                                            u9851 5630  
                                          u9860 5FA8                                            u9780 4D02  
                                          u9861 5FA4                                            u9781 4CFE  
                                          u9870 5FD6                                            u9871 5FD2  
                                          u9791 520A                                            _WPUB 000F5B  
                                 _EUSART1_Write 67D4                                            abs@a 009F  
                                          _dbuf 0178                                            _atoi 3A34  
                                          _ctoa 5E76                                            _main 35B6  
                                          _dtoa 2A00                                            _font F135  
                                 ?_EUSART1_Read 0001                                            _prec 00BB  
                               _TMR0_StartTimer 68EA                                            _otoa 404A  
                                          _nout 0174                                            pad@i 00A6  
                                          pad@p 00A3                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf1 000FE7  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 00A8                                            fsr2l 000FD9  
                                          _stoa 4438                                            btemp 005F  
                                          _utoa 381C                                            _xtoa 2D06  
                                   i2_atoi$2283 0010                                     i2_atoi$2284 0014  
                                   i2_atoi$2285 0012                                            prodh 000FF4  
                                          prodl 000FF3                                            start 008E  
                                 __CFG_IESO$OFF 000000                                 __end_ofi2_fputc 59BE  
                               __end_ofi2_fputs 6238                          __end_of_SPI_Initialize 686E  
                               __end_ofi2_putch 68CC                                   lcd_fill@width 009A  
                                 __CFG_MCLRE$ON 000000                                     i2_dtoa$1670 0030  
                                  ___param_bank 000000                        __size_ofi2_EUSART1_Write 0016  
                                         ??_abs 00A1                                           ??_pad 00A5  
                                    i2_vfprintf 5DB2                         __end_of_TMR0_Initialize 66BC  
                __size_of_OSCILLATOR_Initialize 0012                   __end_of_OSCILLATOR_Initialize 6880  
                               __end_of___aldiv 5204                                 __end_of___aodiv 474E  
                                         ?_atoi 0094                                           ?_ctoa 00AA  
                                         ?_main 0001                                           ?_dtoa 00AA  
                               __end_of___aomod 4D44                                           STR_11 FFD1  
                                         STR_20 FFD2                                           STR_13 FFD5  
                                         STR_15 FFD5                                           STR_31 FFEF  
                                         STR_24 FFD6                                           STR_33 FFEF  
                                         STR_43 FFDE                                           STR_27 FFEC  
                                         STR_51 FFD9                                           STR_36 FFDD  
                                         STR_29 FFEC                                           STR_53 FFD9  
                                         STR_61 FFF2                                           STR_38 FFDD  
                                         STR_46 FFF5                                           STR_63 FFF2  
                                         STR_48 FFF5                                           STR_73 FFE2  
                                         STR_81 FFE5                                           STR_58 FFDA  
                                         STR_66 FFE1                                           STR_83 FFE5  
                                         STR_68 FFE1                                           STR_92 FFE6  
                                         STR_76 FFF8                                           STR_85 FFCD  
                                         STR_78 FFF8                                           STR_87 FFCD  
                                         STR_96 FFCE                                           ?_otoa 00AA  
                                         STR_99 FFFB                       TMR0_ReadTimer@readValHigh 0094  
             __end_of_IOCB4_SetInterruptHandler 68A4                                           ?_stoa 0098  
                                         ?_utoa 00AA                                           u11000 2F5E  
                                         u11001 2F5A                                           u11010 2F78  
                                         u11011 2F74                                           u11020 2F88  
                                         u11100 00B8                                           u11021 2F84  
                                         u11101 00B4                                           u11030 2F98  
                                         u11110 0196                                           u11031 2F94  
                                         u11111 0192                                           u10400 3BCE  
                                         u11040 5412                                           u11200 03BA  
                                         u11120 01A6                                           u11041 540E  
                                         u11201 03B4                                           u11121 01A2  
                                         u10410 3BF4                                           u10330 3A74  
                                         u11050 544A                                           u11210 03BC  
                                         u11130 01CE                                           u10411 3BEE  
                                         u11051 5446                                           u11131 01CA  
                                         u10420 3BF6                                           u10340 3A84  
                                         u10500 2A96                                           u11060 5468  
                                         u11300 06CE                                           u11220 03D2  
                                         u11140 0212                                           u10341 3A80  
                                         u10501 2A92                                           u11061 5464  
                                         u11301 06CA                                           u11221 03CE  
                                         u11141 020E                                           u10430 3C0C  
                                         u10350 3AB0                                           u10510 2AC8  
                                         u11070 547A                                           u11310 0706  
                                         u11230 03F8                                           u11150 0292  
                                         u10431 3C08                                           u10407 3BC4  
                                         u10511 2AC4                                           u11071 5476  
                                         u11311 0702                                           u11231 03F4  
                                         u11151 028C                                           u10440 3C1E  
                                         u10360 3AD4                                           u10600 2CB0  
                                         u10520 2AD8                                           u11080 54A8  
                                         u11400 0BC2                                           u11320 0790  
                                         u11240 0482                                           u11160 0294  
                                         _T0CON 000FD5                                           u10441 3C1A  
                                         u10361 3AD0                                           u10337 3A6A  
                                         u10601 2CAC                                           u10521 2AD4  
                                         u11081 54A4                                           u11401 0BBE  
                                         u11321 078C                                           u11241 047E  
                                         u10370 3AF2                                           u10450 5E8A  
                                         u10530 2C10                                           u10610 405A  
                                         u11410 0C72                                           u11330 0848  
                                         u11250 04BA                                           u11170 02AA  
                                         u10371 3AEE                                           u10451 5E86  
                                         u10531 2C0C                                           u10611 4056  
                               __end_of___lodiv 52F6                                           u11411 0C6E  
                                         u11331 0844                                           u11251 04B6  
                                         u11171 02A6                                           u10380 3B28  
                                         u10540 2C2E                                           u10460 2A32  
                                         u10700 41FA                                           u10620 4076  
                                         u11500 1136                                           u11420 0D00  
                                         u11340 08C0                                           u11260 0574  
                                         u11180 02D0                                           u10357 3AA6  
                                         u10541 2C2A                                           u10461 2A2C  
                                         u10701 41F6                                           u10621 4072  
                                         u11501 1132                                           u11421 0CFC  
                                         u11341 08BC                                           u11261 0570  
                                         u11181 02CC                                           u10390 3B88  
                                         u10550 2C48                                           u10470 2A34  
                                         u10630 4134                                           u11510 115C  
                                         u11430 0DB8                                           u11350 0948  
                                         u11270 05AC                                           u11190 030E  
                                         u10551 2C44                                           u10711 4442  
                                         u11511 1158                                           u11431 0DB4  
                                         u11351 0944                                           u11271 05A8  
                                         u11191 030A                                           ?_xtoa 00AA  
                                         u10560 2C62                                           u10480 2A4A  
                                         u10640 4174                                           u10720 4466  
                                         u10800 382C                                           u11520 11FC  
                                         u11440 0E30                                           u11360 09D2  
                                         u11280 0622                                           u11600 4FFA  
                                         _T1CON 000FCD                                           u10561 2C5E  
                                         u10481 2A46                                           u10641 4170  
                                         u10721 4462                                           u10801 3828  
                                         u11521 11F8                                           u11441 0E2C  
                                         u11361 09CE                                           u11281 061E  
                                         u11601 4FF6                                           u10570 2C72  
                                         u10490 2A7A                                           u10650 4192  
                                         u10730 449A                                           u10810 3848  
                                         u11530 1234                                           u11450 0EB8  
                                         u11370 0A5C                                           u11290 0648  
                                         u11610 5028                                           u10387 3B1E  
                                         u10571 2C6E                                           u10491 2A76  
                                         u10651 418E                                           u10635 4122  
                                         u10731 4496                                           u10811 3844  
                                         u11531 1230                                           u11451 0EB4  
                                         u11371 0A58                                           u11291 0644  
                                         u11611 5024                                           u11700 4F2A  
                                         u10580 2C86                                           u10660 41AC  
                                         u10740 44B8                                           u10820 39A0  
                                         u10900 2DC8                                           u11540 12D4  
                                         u11460 0F42                                           u11380 0ACE  
                                         u11620 5088                                           u10397 3B7E  
                                         u10581 2C82                                           u10661 41A8  
                                         u10741 44B4                                           u10821 399C  
                                         u10901 2DC4                                           u11541 12D0  
                                         u11461 0F3E                                           u11381 0ACA  
                                         u11621 5084                                           u11710 4F4E  
                                         u10590 2C96                                           u10670 41C6  
                                         u10750 44E2                                           u10830 39BE  
                                         u10910 2E16                                           u11470 0F7A  
                                         u11390 0B50                                           u11630 5096  
                                         u11711 4F4A                                           u10591 2C92  
                                         u10671 41C2                                           u10751 44DE  
                                         u10831 39BA                                           u10911 2E10  
                                         u11471 0F76                                           u11391 0B4C  
                                         u11631 5092                                           u11720 4FD4  
                                         u10680 41D6                                           u10760 451E  
                                         u10840 39D8                                           u10920 2E18  
                                         u11480 105E                                           u11640 50C4  
                                         u10681 41D2                                           u10761 451A  
                                         u10841 39D4                                           u11481 105A  
                                         u11641 50C0                                           u11730 4FE4  
                                         u10690 41E6                                           u10770 4570  
                                         u10850 39F2                                           u10930 2E2E  
                                         u11490 1096                                           u11570 5DA8  
                                         u11731 4FE0                                           u11707 4F20  
                                         u10691 41E2                                           u10771 456C  
                                         u10851 39EE                                           u10931 2E2A  
                                         u11491 1092                                           u11571 5DA4  
                                         u10780 457E                                           u10860 3A02  
                                         u10940 2E62                                           u11660 5AA0  
                                         u10781 457A                                           u10861 39FE  
                                         u10941 2E5C                                           u11661 5A9C  
                                         u10790 45BA                                           u10950 2E64  
                                         u10870 2D16                                           u11670 5AB4  
                                         u11727 4FCA                                           u10791 45B6  
                                         u10871 2D12                                           u11671 5AB0  
                                         u10960 2E7A                                           u10880 2D32  
                                         u11680 5ADC                                           u11760 371A  
                                         u10961 2E76                                           u10881 2D2E  
                                         u11681 5AD8                                           u11761 3716  
                                         u10970 2EE4                                           u10890 2D60  
                                         u11690 5B22                                           u11770 3764  
                                         u10891 2D5C                                           u11691 5B1E  
                                         u11771 3760                                           u10980 2F26  
                                         u11780 3782                                           u10981 2F22  
                                         u11781 377E                                           u10990 2F44  
                                         u10991 2F40                                           u10975 2ED2  
                               __end_of___lomod 568E                                           u11797 64B4  
                                         i2l300 6846                                           i2l142 6610  
                                         i2l306 68CA                                           i2l138 681A  
                                         i2l148 68EE                                           i2l340 005A  
                               _TMR0_WriteTimer 688E                                           i2l432 6082  
                                         i2l361 68E8                                           i2l701 495E  
                                         i2l358 68EC                                           i2l710 4A08  
                                         i2l367 68D4                                           i2l711 4A52  
                                         i2l720 3C7C                                           i2l297 6834  
                                         i2l641 5A46                                           i2l650 5F8C  
                                         i2l730 3E46                                           i2l722 3C84  
                                         i2l643 5A82                                           i2l715 4A5A  
                                         i2l638 5A04                                           i2l735 3314  
                                         i2l656 3098                                           i2l760 35B4  
                                         i2l744 33B2                                           i2l681 4280  
                                         i2l737 331C                                           i2l841 5E0C  
                                         i2l658 30A0                                           i2l690 43D0  
                                         i2l842 5E14                                           i2l683 4288  
                                         i2l676 32DA                                           i2l692 4436  
                                         i2l845 6756                                           i2l758 3550  
                                         i2l774 1448                                           i2l699 4956  
                                         i2l972 4EA6                                           i2l797 25C8  
                                         i2l959 48D4                                    vfpfcnvrt@fmt 011E  
                                         _TMR0H 000FD7                                    vfpfcnvrt@llu 0139  
                                         _TMR1H 000FCF                                           _TMR0L 000FD6  
                                         _TMR1L 000FCE                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                         _TRISD 000F95                                           _TRISE 000F96  
                                         i2_abs 62FC                                           i2_pad 59BE  
                                 __CFG_WRT0$OFF 000000                                 ??_lcd_draw_char 00A0  
                                 __CFG_WRT1$OFF 000000                                   __CFG_WRT2$OFF 000000  
                           ___lmul@multiplicand 0091                                   __CFG_WRT3$OFF 000000  
                                __CFG_EBTR0$OFF 000000                                  __CFG_FCMEN$OFF 000000  
                                __CFG_EBTR1$OFF 000000                                  __CFG_EBTR2$OFF 000000  
                                __CFG_EBTR3$OFF 000000                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                               __end_of_msDelay 64D6                                      i2isalpha@c 0001  
                                __CFG_EBTRB$OFF 000000                                      i2isdigit@c 0001  
                       __end_of_PIN_MANAGER_IOC 681C                                           _flags 00BD  
                                         _errno 0172                                           _fputc 575E  
                               __end_of_isalpha 637A                                           _fputs 6120  
                               __end_of_isdigit 649E                                           atoi@n 00A1  
                                         pad@fp 009F                                           atoi@s 0094  
                                         _width 00B9                                           ctoa@c 00AC  
                                         _putch 6880                                           ctoa@w 00AD  
                                         dtoa@d 00AC                                           dtoa@i 0118  
                                         dtoa@n 0110                                           dtoa@p 010A  
                                         dtoa@s 010E                                           dtoa@w 010C  
                              __end_of_SPI_Open 5BF4                                 __end_of_islower 63F0  
                               __end_of_isspace 5FE2                                  ?_EUSART1_Write 0001  
                       __end_of_TMR1_Initialize 663E                                 __end_of_isupper 642A  
                                         pclath 000FFA                                           tablat 000FF5  
                                         otoa@d 00AC                                           otoa@i 0116  
                                         otoa@n 010E                                           otoa@p 0108  
                                         otoa@t 010A                                           otoa@w 010C  
                              __end_ofi2___wmul 6758                                  ??_EUSART1_Read 008D  
                                         plusw1 000FE3                                           plusw2 000FDB  
                                         stoa@i 00A4                                           stoa@l 00AC  
                                         stoa@p 00AA                                           stoa@s 009A  
                                         stoa@w 00A6                                           ttemp5 0060  
                                         ttemp6 0063                                           ttemp7 0067  
                                    i2islower@c 0001                                           utoa@d 00AC  
                                         utoa@i 0114                                           utoa@n 010C  
                                         utoa@p 0108                                           utoa@w 010A  
                                         status 000FD8                                      i2isspace@c 0001  
                                         wtemp8 0060                                           xtoa@c 011A  
                                         xtoa@d 00AC                                           xtoa@i 0118  
                                         xtoa@n 0110                                           xtoa@p 010C  
                                         xtoa@w 010E                                           xtoa@x 00B4  
                               __end_of_strncmp 54D2                                 __end_of_toupper 5E76  
                                lcd_fill@height 0098                                ___lodiv@dividend 008D  
            _EUSART1_DefaultFramingErrorHandler 000000                              __size_ofi2___aodiv 0188  
                            __size_ofi2___aomod 0164                                      i2isupper@c 0001  
                            __size_ofi2___lodiv 00F0                              __size_ofi2___lomod 00D0  
                              __end_ofi2_printf 6732                                 ?_SPI_Initialize 0001  
               ??_IOCB4_DefaultInterruptHandler 0001                                    _toupper$2397 0099  
                              __end_ofi2_strlen 65B4                                 __initialization 5CE8  
                             ??_read_from_usart 00A5                                    __end_of_atoi 3C44  
                                  __end_of_ctoa 5ED4                      __end_of_EUSART1_Initialize 61F4  
                                  __end_of_main 381C                                    __end_of_dtoa 2D06  
                                  __end_of_font FF01                                    __end_of_otoa 4248  
                                  __end_of_stoa 45C4                                      i2printf@ap 0059  
                                  __end_of_utoa 3A34                                    __end_of_xtoa 2FF8  
                             __end_of_IOCB4_ISR 6612                              __size_ofi2_isalpha 003C  
                            __size_ofi2_isdigit 0038                     ?_INTERRUPT_InterruptManager 0001  
                                    i2stoa@nuls 0011                                     i2_vfpfcnvrt 1352  
                            __size_ofi2_islower 0038                              __size_ofi2_isspace 0052  
                                 i2vfpfcnvrt@ap 0049                                   i2vfpfcnvrt@cp 0060  
                                 i2vfpfcnvrt@fp 0045                                   i2vfpfcnvrt@ll 0068  
                                   i2_xtoa$1706 0031                                     i2_xtoa$1707 0033  
                                 i2vfpfcnvrt@vp 0070                              __size_ofi2_isupper 0038  
                                        ??_atoi 0096                                          ??_ctoa 00AD  
                                        ??_main 016D                                          ??_dtoa 0100  
                             ?_lcd_set_cursor_x 0090                               ?_lcd_set_cursor_y 0090  
                                 lcd_send@value 008E                                          ??_otoa 0100  
                                        ??_stoa 009C                                          ??_utoa 0100  
                                        ??_xtoa 0100                                   __activetblptr 000003  
                            ??_lcd_set_cursor_x 0092                              ??_lcd_set_cursor_y 0092  
                                        ?i2_abs 0013                                  __CFG_RETEN$OFF 000000  
                            __size_ofi2_strncmp 00EA                              __size_ofi2_toupper 005E  
                                        ?i2_pad 0013                                ___lodiv@quotient 009D  
                                    i2strncmp@l 0008                                      i2strncmp@n 0005  
                                    i2strncmp@r 000A                                      i2toupper@c 0007  
                                lcd_draw_char@i 00AB                                  lcd_draw_char@j 00A9  
                                lcd_draw_char@k 00AA                        __end_of_SPI_ExchangeByte 67D4  
                       __end_of_TMR0_StartTimer 68EE                                  lcd_draw_char@x 0096  
                                lcd_draw_char@y 0098                                          _ADCON0 000FC2  
                                        _ADCON1 000FC1                                          _ADCON2 000FC0  
                                        ?_fputc 008F                                          STR_101 FFFB  
                                        ?_fputs 0098                                          STR_103 FFE9  
                                        STR_105 FFE9                                          _ADRESH 000FC4  
                                        _ADRESL 000FC3                                          _ANCON0 000F5D  
                                        _ANCON1 000F5C                                          ?_putch 0001  
                                        _T1GCON 000FAA                    __size_of_EUSART1_is_rx_ready 0014  
                                        i2l1300 575C                                 __CFG_BBSIZ$BB2K 000000  
                                        i2l1600 6236                                          i2l1520 6332  
                                        i2l1290 53E4                                          i2l1523 633A  
                                        i2l1283 53C4                                          i2l1620 65B2  
                                        i2l1293 573C                                          i2l1551 4040  
                                        i2l1607 6730                                          i2l1624 55BA  
                                        i2l1554 4048                                          i2l1634 5F28  
                                        i2l1563 657C                                          i2l1571 6032  
                                        i2l1557 63B4                                          i2l1645 650C  
                                __CFG_WDTEN$OFF 000000                                          i2l1639 5F30  
                                        i2l1592 59BC                                          i2l1577 6544  
                                        i2l8001 1580                                          i2l7203 64D6  
                                        i2l8011 1616                                          i2l8003 1588  
                                        i2l7221 59BE                                          i2l7301 4D7A  
                                        i2l8101 1C68                                          i2l8021 16A6  
                                        i2l8013 1624                                          i2l8005 1596  
                                        i2l6271 68D0                                          i2l7231 5A10  
                                        i2l7223 59CE                                          i2l7311 4DE2  
                                        i2l7303 4D88                                          i2l8111 1CEE  
                                        i2l8103 1CA0                                          i2l8031 1760  
                                        i2l8023 16D8                                          i2l8007 15BC  
                                        i2l7161 6842                                          i2l7233 5A24  
                                        i2l7225 59E2                                          i2l7313 4DF0  
                                        i2l7321 4E56                                          i2l7305 4DA8  
                                        i2l7401 5F1C                                          i2l8201 22AA  
                                        i2l8121 1D60                                          i2l8113 1D26  
                                        i2l8105 1CAC                                          i2l8041 184E  
                                        i2l8033 17AA                                          i2l8017 166E  
                                        i2l8009 15F6                                          i2l7243 6732  
                                        i2l7163 68C4                                          i2l7171 5906  
                                        i2l7235 5A28                                          i2l7227 59F0  
                                        i2l7251 4752                                          i2l7323 4E66  
                                        i2l7315 4E1E                                          i2l7307 4DC6  
                                        i2l7331 5302                                          i2l8203 22E0  
                                        i2l8131 1DE0                                          i2l8123 1D96  
                                        i2l8051 18EA                                          i2l8027 16F4  
                                        i2l8019 1680                                          i2l6269 68CC  
                                        i2l7245 674E                                          i2l7173 5918  
                                        i2l7237 5A56                                          i2l7229 59FC  
                                        i2l7261 47B2                                          i2l7253 4760  
                                        i2l7325 4E86                                          i2l7317 4E3E  
                                        i2l7309 4DCE                                          i2l7341 535C  
                                        i2l7333 5320                                          i2l8221 23F4  
                                        i2l8205 2316                                          i2l8141 1E52  
                                        i2l8133 1E18                                          i2l8109 1CB8  
                                        i2l8061 19A4                                          i2l8037 17E2  
                                        i2l8029 172A                                          i2l9005 6804  
                                        i2l5911 68E6                                          i2l7159 6834  
                                        i2l7175 5922                                          i2l7191 6216  
                                        i2l7239 5A6A                                          i2l7431 5F52  
                                        i2l7271 47FC                                          i2l7263 47B6  
                                        i2l7255 4780                                          i2l7319 4E50  
                                        i2l7511 42B0                                          i2l7503 4248  
                                        i2l7343 538A                                          i2l7335 5328  
                                        i2l7351 568E                                          i2l8231 247A  
                                        i2l8223 2402                                          i2l8207 233E  
                                        i2l8215 2390                                          i2l8151 1F36  
                                        i2l8143 1E9E                                          i2l8119 1D3A  
                                        i2l8071 1A74                                          i2l8047 189E  
                                        i2l8039 1818                                          i2l9007 6814  
                                        i2l7177 5940                                          i2l7169 58F4  
                                        i2l7185 61F4                                          i2l7193 657E  
                                        i2l7433 5F5E                                          i2l7281 486C  
                                        i2l7273 480A                                          i2l7265 47C2  
                                        i2l7257 4784                                          i2l7249 474E  
                                        i2l7441 2FF8                                          i2l7521 42D8  
                                        i2l7513 42B8                                          i2l7505 4258  
                                        i2l7345 53AA                                          i2l7337 533C  
                                        i2l7329 52F6                                          i2l7361 5704  
                                        i2l7353 56AC                                          i2l7601 3CAC  
                                        i2l8233 24B0                                          i2l8217 23B6  
                                        i2l8209 234E                                          i2l8129 1DAA  
                                        i2l8057 1938                                          i2l8049 18C4  
                                        i2l9009 6818                                          i2l7179 5976  
                                        i2l7187 6200                                          i2l7195 658A  
                                        i2l7435 5F62                                          i2l7427 5F32  
                                        i2l7283 487E                                          i2l7275 481C  
                                        i2l7267 47E0                                          i2l7259 4792  
                                        i2l7451 3072                                          i2l7443 3018  
                                        i2l7531 436E                                          i2l7523 42EA  
                                        i2l7515 42BE                                          i2l7507 425A  
                                        i2l7347 53AC                                          i2l7339 534A  
                                        i2l7363 5724                                          i2l7355 56B4  
                                        i2l7611 3D40                                          i2l7603 3CB4  
                                        i2l7371 637A                                          i2l8235 24D8  
                                        i2l8243 252A                                          i2l8219 23DC  
                                        i2l8171 2094                                          i2l8163 200C  
                                        i2l8155 1F56                                          i2l8147 1EDA  
                                        i2l8139 1E2C                                          i2l8091 1BAA  
                                        i2l8083 1B34                                          i2l8075 1AAC  
                                        i2l8067 19F6                                          i2l8059 196E  
                                        i2l9203 1408                                          i2l5909 68EA  
                                        i2l7381 5FE6                                          i2l9205 3F46  
                                        i2l7701 3E64                                          i2l7189 6212  
                                        i2l7197 658E                                          i2l7437 5F68  
                                        i2l7429 5F46                                          i2l7277 484A  
                                        i2l7269 47E8                                          i2l7285 4884  
                                        i2l7293 4D44                                          i2l7461 30CE  
                                        i2l7453 308C                                          i2l7445 3040  
                                        i2l7541 43F2                                          i2l7533 438C  
                                        i2l7525 42F0                                          i2l7517 42CA  
                                        i2l7509 4274                                          i2l7349 53BE  
                                        i2l7365 5736                                          i2l7357 56C8  
                                        i2l7621 3DF4                                          i2l7613 3D46  
                                        i2l7605 3CBE                                          i2l8261 25B6  
                                        i2l8245 2550                                          i2l8253 257E  
                                        i2l8237 24E8                                          i2l8229 2444  
                                        i2l8181 2140                                          i2l8173 20BA  
                                        i2l8165 2042                                          i2l8157 1F8C  
                                        i2l8149 1F00                                          i2l8093 1BE0  
                                        i2l8085 1B5A                                          i2l8077 1AE2  
                                        i2l8069 1A2C                                          i2l7375 6546  
                                        i2l7383 5FFA                                          i2l7711 3EEC  
                                        i2l7703 3E96                                          i2l7199 65A6  
                                        i2l7287 4894                                          i2l7279 486A  
                                        i2l7295 4D48                                          i2l7367 62FC  
                                        i2l7471 316E                                          i2l7463 30D6  
                                        i2l7455 30A8                                          i2l7447 3060  
                                        i2l7543 43F8                                          i2l7535 43A6  
                                        i2l7527 42F6                                          i2l7519 42D0  
                                        i2l7551 48D6                                          i2l7359 56D6  
                                        i2l7623 3E0E                                          i2l7607 3CC4  
                                        i2l7615 3DAA                                          i2l7391 650E  
                                        i2l7631 32EC                                          i2l8247 255E  
                                        i2l8191 21FE                                          i2l8159 1FD4  
                                        i2l9063 003A                                   i2putch@txData 0002  
                                        i2l7385 6028                                          i2l7713 3F02  
                                        i2l7705 3EE2                                          i2l7289 48B4  
                                        i2l7297 4D56                                          i2l7369 6316  
                                        i2l7481 322A                                          i2l7473 3174  
                                        i2l7465 30E0                                          i2l7457 30BA  
                                        i2l7449 3070                                          i2l7545 4408  
                                        i2l7537 43C0                                          i2l7529 4354  
                                        i2l7561 491E                                          i2l7553 48E8  
                                        i2l7617 3DBC                                          i2l7625 3E1E  
                                        i2l7609 3D3A                                          i2l7641 335A  
                                        i2l7633 32EE                                          i2l8249 2572  
                                        i2l8193 2226                                          i2l9065 0048  
                                        i2l7387 602C                                          i2l7379 5FE2  
                                        i2l7731 4024                                          i2l7723 3FAC  
                                        i2l7715 3F0A                                          i2l7707 3EE6  
                                        i2l7299 4D76                                          i2l7491 327C  
                                        i2l7483 3244                                          i2l7467 30E6  
                                        i2l7475 31D8                                          i2l7459 30C8  
                                        i2l7539 43E0                                          i2l7547 440E  
                                        i2l7571 4996                                          i2l7563 4926  
                                        i2l7555 48F0                                          i2l7619 3DDA  
                                        i2l7395 5ED4                                          i2l7651 3396  
                                        i2l7643 3362                                          i2l7635 3308  
                                        i2l8195 2236                                          i2l8187 2192  
                                        i2l8179 210A                                          i2l8099 1C32  
                                        i2l8259 2590                                          i2l8603 5DB2  
                                        i2l9067 0056                                          i2l7717 3F12  
                                        i2l7493 328E                                          i2l7477 31F2  
                                        i2l7485 3254                                          i2l7469 3168  
                                        i2l7581 49E6                                          i2l7573 499A  
                                        i2l7565 4934                                          i2l7557 4902  
                                        i2l7653 33A6                                          i2l7645 336C  
                                        i2l7637 3332                                          i2l7629 32DC  
                                        i2l8197 226E                                          i2l8189 21C8  
                                        i2l8605 5DBA                                          i2l7727 4000  
                                        i2l7719 3F5C                                          i2l7495 329A  
                                        i2l7487 3266                                          i2l7479 3210  
                                        i2l7591 4A34                                          i2l7583 49EA  
                                        i2l7575 49B8                                          i2l7559 490A  
                                        i2l7751 5564                                          i2l7743 5508  
                                        i2l7399 5F0A                                          i2l7671 346E  
                                        i2l7663 3432                                          i2l7647 3372  
                                        i2l7639 333A                                          i2l8607 5DC8  
                                        i2l7729 4012                                          i2l7497 32A2  
                                        i2l7489 3276                                          i2l7577 49C4  
                                        i2l7569 4982                                          i2l7753 5592  
                                        i2l7745 5516                                          i2l7737 54D2  
                                        i2l7593 3C44                                          i2l7681 3526  
                                        i2l7673 3474                                          i2l7665 3444  
                                        i2l7657 33E6                                          i2l7649 337A  
                                        i2l8609 5DEE                                          i2l7499 32B2  
                                        i2l7587 4A1C                                          i2l7579 49E2  
                                        i2l7747 5534                                          i2l7739 54FC  
                                        i2l7595 3C54                                          i2l7691 358C  
                                        i2l7683 3540                                          i2l7659 33F8  
                                        i2l7667 3458                                          i2l7675 34D2  
                                        i2l7589 4A30                                          i2l7749 5552  
                                        i2l7597 3C56                                          i2l7685 3560  
                                        i2l7677 34EE                                          i2l7669 3468  
                                        i2l7941 1352                                          i2l7695 3E48  
                                        i2l7599 3C70                                          i2l7687 3566  
                                        i2l7679 350C                                          i2l7951 13A8  
                                        i2l7943 1378                                          i2l7697 3E5C  
                                        i2l7689 3576                                          i2l7953 13AA  
                                        i2l7945 1386                                          i2l7699 3E60  
                                        i2l7971 13D4                                          i2l7963 13C8  
                                        i2l7955 13BC                                          i2l7947 1398  
                                        i2l7981 1458                                          i2l7949 139C  
                                        i2l7991 14F0                                          i2l7983 147E  
                                        i2l7975 13E0                                          i2l7967 13CE  
                                        i2l7959 13C2                                          i2l8943 670C  
                                        i2l8951 6042                                          i2l7993 14FE  
                                        i2l7985 14B4                                          i2l7977 1436  
                                        i2l8945 6714                                          i2l8953 6060  
                                        i2l7987 14C2                                          i2l7979 1456  
                                        i2l8955 606C                                          i2l8971 65F8  
                                        i2l7997 1548                                          i2l7989 14D0  
                                        i2l8957 6070                                          i2l8949 6034  
                                        i2l7999 155A                                          i2l8959 607E  
                                        i2l8969 65E4                                       ??i2_fputc 0007  
                                        _RCREG1 000FAE                                       ??i2_fputs 0010  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                 vfpfcnvrt@done 0128                    __size_of_EUSART1_is_tx_ready 002A  
                                        _SPBRG1 000FAF                                       ??i2_putch 0002  
                                        _SSPADD 000FC8                                          _SSPBUF 000FC9  
                                i2___aodiv@sign 0012                                          _TXREG1 000FAD  
                                        i2abs@a 0013                                          _TXSTA1 000FAC  
                                        i2_atoi 3E48                                          i2_ctoa 5F32  
                                        i2_dtoa 2FF8                                          i2_otoa 4248  
                                        i2pad@i 001A                                          i2pad@p 0017  
                                        i2pad@w 001C                                          i2_stoa 48D6  
                                        i2_utoa 3C44                                          i2_xtoa 32DC  
                               _global_bg_color 00BF                                  __CFG_XINST$OFF 000000  
                              ??_lcd_draw_pixel 0092                                __end_of_lcd_fill 5C7C  
                                  vfprintf@cfmt 0147                                __end_of_lcd_init 2A00  
                              __end_of_lcd_send 67B8                                  i2___aomod@sign 0012  
                                        ___lmul 5C7C                                       ??___aldiv 00A1  
                                     ??___aodiv 009D                                   i2vfprintf@fmt 0051  
                                     ??___aomod 009D                                          ___wmul 66E4  
                                __CFG_STVREN$ON 000000                         __end_of_TMR0_WriteTimer 689A  
                                     ??___lodiv 009D                                       ??___lomod 009D  
                                   ?i2_vfprintf 004F                       i2TMR0_WriteTimer@timerVal 0001  
                      ?_EUSART1_SetErrorHandler 008D                                ?_TMR0_Initialize 0001  
                                        clear_0 5D2E                                          clear_1 5D3A  
                                        _printf 66BC                                          pad@buf 00A1  
              ??_EUSART1_SetOverrunErrorHandler 008F                 ?_EUSART1_SetOverrunErrorHandler 008D  
                                        ctoa@fp 00AA                                          dtoa@fp 00AA  
                                        _string 0198                                          _strlen 642A  
                                     ??_msDelay 008D                               ??i2_EUSART1_Write 0001  
                                        fputc@c 008F                                          fputs@c 009C  
                                        fputs@i 009D                               __end_ofi2___aodiv 48D6  
                                        fputs@s 0098                                       ??_isalpha 008F  
                                     ??_isdigit 008F                               __end_ofi2___aomod 4EA8  
                             __end_ofi2___lodiv 53E6                               __end_ofi2___lomod 575E  
                                     ??_islower 008F                                    __mediumconst F134  
                                     ??_isspace 008F                                          otoa@fp 00AA  
                                        tblptrh 000FF7                                       ??_isupper 008F  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                      ADC_GetConversion@channel 0091                                          stoa@cp 00A8  
                                        stoa@fp 0098                              i2___aomod@dividend 0001  
                              __end_of_vfprintf 5DB2                               i2___lodiv@divisor 0009  
                               ??_EUSART1_Write 008D                                          utoa@fp 00AA  
     IOCB4_SetInterruptHandler@InterruptHandler 008D                                ?_PIN_MANAGER_IOC 0001  
                              __end_of_snprintf 65E4                               i2___lodiv@counter 0019  
                                        xtoa@fp 00AA                         ??_INTERRUPT_S1_CALLBACK 005B  
                                     ??_strncmp 0093                                       ??_toupper 0095  
                 __size_of_INTERRUPT_Initialize 0004                                ?_TMR1_Initialize 0001  
                             __end_ofi2_isalpha 63B6                               __end_ofi2_isdigit 657E  
                             _SYSTEM_Initialize 6758                                      __accesstop 0060  
                      __size_of_lcd_draw_string 013E                         __end_of__initialization 5D44  
                             __end_ofi2_islower 650E                               __end_ofi2_isspace 6034  
                             __end_ofi2_isupper 6546                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                               __end_ofi2_strncmp 55BC  
                             __end_ofi2_toupper 5F32                                   __end_ofi2_abs 633C  
                                 __end_ofi2_pad 5A84                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 68D6                                    __pidataBANK1 68DD  
                           ??_SYSTEM_Initialize 008F                                   __end_of_fputc 582A  
                                 __end_of_fputs 6168           __end_of_IOCB4_DefaultInterruptHandler 68F0  
        __size_of_IOCB4_DefaultInterruptHandler 0002                   _IOCB4_DefaultInterruptHandler 68EE  
                                 __end_of_putch 688E                         __size_of_TMR0_ReadTimer 0020  
                                   i2printf@fmt 007B                                       ?_SPI_Open 0001  
                   ??_IOCB4_SetInterruptHandler 008F                            __end_of_EUSART1_Read 6692  
                                     ?i2___wmul 0001                                ??_lcd_set_cursor 0096  
                                       ??i2_abs 0015                                         ??i2_pad 0019  
                                i2vfpfcnvrt@fmt 0047                                       ?i2_printf 007B  
                                i2vfpfcnvrt@llu 0073                                       ?i2_strlen 0001  
                         i2EUSART1_Write@txData 0001                                ?_TMR0_StartTimer 0001  
                                       ??_fputc 0093                       __end_of_SYSTEM_Initialize 677A  
                                       ??_fputs 009C                                         ??_putch 008E  
                                    __pbssBANK0 00B5                                      __pbssBANK1 0172  
                           __size_ofi2_vfprintf 0064                                 __CFG_PLLCFG$OFF 000000  
                                    __pnvCOMRAM 005B                                         ?i2_atoi 0008  
                                       ?i2_ctoa 001E                                         ?i2_dtoa 001E  
                                       ?i2_otoa 001E                                         ?i2_stoa 000C  
                                       ?i2_utoa 001E                                         ?i2_xtoa 001E  
                                   i2strncmp@_l 0001                                     i2strncmp@_r 0003  
               __end_of_EUSART1_SetErrorHandler 68C2                         __size_of_TMR0_StopTimer 0004  
                                       ?___lmul 008D                                         ?___wmul 008D  
                                i2_toupper$2397 000D                                ?_TMR0_WriteTimer 008D  
                                ___lmul@product 0095                                      ??_SPI_Open 008D  
                                       ?_printf 0149                         __size_of_ADC_Initialize 0016  
                                       ?_strlen 008D          __end_of_EUSART1_SetFramingErrorHandler 68B8  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 68AE  
                                    ??i2___wmul 0005                                __CFG_CANMX$PORTB 000000  
                                       _REFOCON 000F9A                               i2___lomod@divisor 0009  
                                       _OSCCON2 000FD2                              __size_of_vfpfcnvrt 12C0  
                             i2___lomod@counter 0011                                      ??i2_printf 0057  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000F7D  
                                    ??i2_strlen 0003                                         _SSPCON1 000FC6  
                                       _SSPCON2 000FC5                                       ?_lcd_fill 0096  
                                     ?_lcd_init 0001                                       ?_lcd_send 008E  
                                       _SSPSTAT 000FC7                                ___lomod@dividend 008D  
                               _read_from_usart 5A84                                         i2_fputc 58F4  
                              ??_SPI_Initialize 008D                                         i2_fputs 61F4  
                     _IOCB4_SetInterruptHandler 689A                                         i2atoi@n 0015  
                                       i2pad@fp 0013                                         i2atoi@s 0008  
                                       i2ctoa@c 0020                                         i2_putch 68C2  
                                       i2ctoa@w 0021                                         i2dtoa@d 0020  
                                       i2dtoa@i 0040                                         i2dtoa@n 0038  
                                       i2dtoa@p 0032                                         i2dtoa@s 0036  
                                       i2dtoa@w 0034                                         i2otoa@d 0020  
                                       i2otoa@i 003E                                         i2otoa@n 0036  
                                       i2otoa@p 0030                                         i2otoa@t 0032  
                                       i2otoa@w 0034                                 __size_ofi2_atoi 0202  
                               __size_ofi2_ctoa 005C                                 __size_ofi2_dtoa 02E4  
                                       i2stoa@i 0018                                         i2stoa@l 0020  
                                       i2stoa@p 001E                                         i2stoa@s 000E  
                                       i2stoa@w 001A                                         i2utoa@d 0020  
                                       i2utoa@i 003C                                 __size_ofi2_otoa 01F0  
                                       i2utoa@n 0034                                         i2utoa@p 0030  
                               __CFG_PWRTEN$OFF 000000                                         i2utoa@w 0032  
                               __size_ofi2_stoa 0186                                 __size_ofi2_utoa 0204  
                               __size_ofi2_xtoa 02DA                                         i2xtoa@c 0043  
                                       i2xtoa@d 0020                                         i2xtoa@i 0041  
                                       i2xtoa@n 0039                                         i2xtoa@p 0035  
                                       i2xtoa@w 0037                                         i2xtoa@x 0028  
                          _ADC_InterruptHandler 005D                                         __Hparam 0000  
                                       __Lparam 0000                              __size_of_vsnprintf 0110  
                             ??_lcd_draw_string 00AC                                   _turn_on_value 01B8  
                                       ___aldiv 50F6                                         ___aodiv 45C4  
                                       ___aomod 4BDE                                 __size_of___lmul 006C  
                               __size_of___wmul 0028                                         ___lodiv 5204  
                                       ___lomod 55BC                                       ?_vfprintf 0141  
                                i2vfprintf@cfmt 0055                                       ?_snprintf 015F  
                           _EUSART1_is_rx_ready 6848                                    ?i2_vfpfcnvrt 0045  
                                       __pcinit 5CE8                                         __ramtop 0F00  
                           _EUSART1_is_tx_ready 663E                                         __ptext0 35B6  
                                       __ptext1 65B4                                         __ptext2 4FE6  
                                       __ptext3 5A84                                         __ptext4 688E  
                                       __ptext5 663E                                         __ptext6 6848  
                                       __ptext7 6668                                         __ptext8 66BC  
                                       __ptext9 5D4E                                 __size_of_printf 0028  
                                     _T0CONbits 000FD5                                         _msDelay 649E  
                                     _IOCB4_ISR 65E4                                 __size_of_strlen 003A  
                                     _T1CONbits 000FCD                           _OSCILLATOR_Initialize 686E  
                                  __size_of_abs 0042                                    __size_of_pad 00CA  
                                       _isalpha 633C                                         _isdigit 6464  
                              ___aldiv@dividend 0099                              _EUSART1_Initialize 61AE  
                                       _islower 63B6                        ??_PIN_MANAGER_Initialize 008F  
                                       _isspace 5F8E                               __CFG_MSSPMSK$MSK7 000000  
                                       _isupper 63F0                                         atoi@neg 009A  
                         __end_of_lcd_draw_char 4BDE                      __size_of_SYSTEM_Initialize 0022  
                                    ??_lcd_fill 0098                               ?_SPI_ExchangeByte 0001  
                                    ??_lcd_init 009C                                      ??_lcd_send 008F  
                                       _strncmp 53E6                                         _toupper 5E16  
                          end_of_initialization 5D44                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                              ??_SPI_ExchangeByte 008D  
                          ?_EUSART1_is_tx_ready 0001                       __size_of_lcd_set_cursor_x 004E  
                     __size_of_lcd_set_cursor_y 004E                                         fputc@fp 0091  
                   _EUSART1_OverrunErrorHandler 00C4                                         fputs@fp 009A  
                           i2___wmul@multiplier 0001                                       i2u1000_40 1680  
                                     i2u1000_41 167C                                       i2u1001_40 16A6  
                                     i2u1001_41 16A2                                       i2u1010_40 1A2C  
                                     i2u1002_40 172A                                       i2u1010_41 1A28  
                                     i2u1002_41 1726                                       i2u1011_40 1AE2  
                                     i2u1003_40 1760                                       i2u1011_41 1ADE  
                                     i2u1003_41 175C                                       i2u1020_40 1F8C  
                                     i2u1012_40 1B5A                                       i2u1004_40 1818  
                                     i2u1020_41 1F88                                       i2u1012_41 1B56  
                                     i2u1004_41 1814                                       i2u1021_40 2042  
                                     i2u1013_40 1BE0                                       i2u1005_40 184E  
                                     i2u1021_41 203E                                       i2u1013_41 1BDC  
                                     i2u1005_41 184A                                       i2u1030_40 247A  
                                     i2u1022_40 20BA                                       i2u1014_40 1C68  
                                     i2u1006_40 18C4                                       i2u1030_41 2476  
                                     i2u1022_41 20B6                                       i2u1014_41 1C64  
                                     i2u1006_41 18C0                                       i2u1031_40 24B0  
                                     i2u1023_40 2140                                       i2u1015_40 1CEE  
                                     i2u1007_40 18EA                                       i2u1031_41 24AC  
                                     i2u1023_41 213C                                       i2u1015_41 1CEA  
                                     i2u1007_41 18E6                                       i2u1032_40 2550  
                                     i2u1024_40 21C8                                       i2u1016_40 1D60  
                                     i2u1008_40 196E                                       i2u1032_41 254C  
                                     i2u1024_41 21C4                                       i2u1016_41 1D5C  
                                     i2u1008_41 196A                                       i2u1025_40 21FE  
                                     i2u1017_40 1DE0                                       i2u1009_40 19A4  
                                     i2u1025_41 21FA                                       i2u1017_41 1DDC  
                                     i2u1009_41 19A0                                       i2u1026_40 22E0  
                                     i2u1018_40 1E52                                       i2u1026_41 22DC  
                                     i2u1018_41 1E4E                                       i2u1027_40 2316  
                                     i2u1019_40 1F00                                       i2u1027_41 2312  
                                     i2u1019_41 1EFC                                       i2u1028_40 23B6  
                                     i2u1028_41 23B2                                       i2u1029_40 23DC  
                                     i2u1109_40 5E0C                                       i2u1029_41 23D8  
                                     i2u1109_41 5E08                                       i2u1155_40 6042  
                                     i2u1155_41 603E                                       i2u1156_40 607E  
                                     i2u1156_41 607A                                       i2u1165_40 6814  
                                     i2u1165_41 6810                                       i2u1158_40 65F8  
                                     i2u1174_40 0048                                       i2u1158_41 65F4  
                                     i2u1174_41 0044                                       i2u1175_40 0056  
                                     i2u1175_41 0052                                       i2u1159_48 65FE  
                                     i2u1159_49 6610                             lcd_draw_char@fIndex 009A  
                           read_from_usart@data 00A6                                 i2_EUSART1_Write 6832  
                             __end_of_vfpfcnvrt 1352                           TMR0_ReadTimer@readVal 0091  
                              ___aldiv@quotient 00A3                                         postdec1 000FE5  
                                       postdec2 000FDD                              i2___lodiv@dividend 0001  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 002A  
                              lcd_fill@bg_color 0096                                    ??i2_vfprintf 0055  
                                    ??_vfprintf 00B5                                  _TMR0_ReadTimer 677A  
                          ??_EUSART1_Initialize 008F                                      ??_snprintf 00B5  
                                       strlen@a 008F                                         strlen@s 008D  
                             lcd_draw_string@pS 0104                                       _PORTBbits 000F81  
                             _spi_configuration FF01                                      ?_IOCB4_ISR 0001  
                             i2___aodiv@divisor 0009                                __CFG_FOSC$INTIO2 000000  
                             i2___aodiv@counter 0011                         __end_of_read_from_usart 5B40  
                                     _TRISCbits 000F94                               __end_of_vsnprintf 50F6  
                                     i2___aodiv 474E                __size_of_EUSART1_SetErrorHandler 000A  
                                     i2___aomod 4D44                             EUSART1_Write@txData 008D  
                                     i2___lodiv 52F6                           ??_EUSART1_is_rx_ready 008D  
                                     i2___lomod 568E                              i2___lodiv@quotient 0011  
                         ??_EUSART1_is_tx_ready 008D                  __size_of_INTERRUPT_S1_CALLBACK 0050  
                 __end_of_INTERRUPT_S1_CALLBACK 6084                                      lcd_send@dc 008F  
                            __end_ofi2_vfprintf 5E16                                    _EUSART1_Read 6668  
                                     i2_isalpha 637A                                       i2_isdigit 6546  
                                __end_ofi2_atoi 404A                                  __end_ofi2_ctoa 5F8E  
                                __end_ofi2_dtoa 32DC                                       i2_islower 64D6  
                                     i2_isspace 5FE2                                  __end_ofi2_otoa 4438  
                                __end_ofi2_stoa 4A5C                                  __end_ofi2_utoa 3E48  
                                __end_ofi2_xtoa 35B6                                       i2_isupper 650E  
                                _TMR0_StopTimer 68E6                          __end_of_TMR0_ReadTimer 679A  
                                     i2atoi@neg 000E                    __end_of_INTERRUPT_Initialize 68E6  
                          SPI_ExchangeByte@data 008D                                       i2_strncmp 54D2  
                                     i2_toupper 5ED4                       __end_of_spi_configuration FF05  
                                __end_of___lmul 5CE8                                     vfpfcnvrt@ap 0120  
                                   vfpfcnvrt@cp 0126                                     vfpfcnvrt@fp 011C  
                                   vfpfcnvrt@ll 012E                                  __end_of___wmul 670C  
                                   vfpfcnvrt@vp 0136                                  _ADC_Initialize 681C  
                                     i2fputc@fp 0005                          ?_OSCILLATOR_Initialize 0001  
                                     i2fputs@fp 000E                                i2___wmul@product 0005  
                                __end_of_printf 66E4                               __size_of_SPI_Open 00B4  
                                __end_of_strlen 6464                             start_initialization 5CE8  
                               ___lodiv@divisor 0095                                 ___lodiv@counter 00A5  
                             __size_ofi2___wmul 0026                        __size_of_TMR0_Initialize 002A  
               __size_of_PIN_MANAGER_Initialize 0046                                     __end_of_abs 627A  
                                   __end_of_pad 58F4                                      ?i2___aodiv 0001  
                                    ?i2___aomod 0001                                    i2vfpfcnvrt@c 0072  
                                    ?i2___lodiv 0001                                      ?i2___lomod 0001  
                                   putch@txData 008E                               __size_ofi2_printf 0026  
                         __end_of_EUSART1_Write 67EC                               __size_ofi2_strlen 0036  
                                     i2strlen@a 0003                                       i2strlen@s 0001  
                       __end_ofi2_EUSART1_Write 6848                                        ??i2_atoi 000A  
                                      ??i2_ctoa 0021                                        ??i2_dtoa 0028  
                                      ??i2_otoa 0028                                        ??i2_stoa 0010  
                                      ??i2_utoa 0028                        __size_of_PIN_MANAGER_IOC 0018  
                                      ??i2_xtoa 0029                                      ?i2_isalpha 0001  
                        __end_of_TMR0_StopTimer 68EA                                      ?i2_isdigit 0001  
                                    ?i2_islower 0001                                      ?i2_isspace 0001  
                SPI_Open@spiUniqueConfiguration 008E                                      ?i2_isupper 0001  
                      __size_of_TMR1_Initialize 002C                                     vfprintf@fmt 0143  
                                  i2vfprintf@ap 0053                                 i2vfpfcnvrt@done 0062  
                                  i2vfprintf@fp 004F                                 ?_TMR0_ReadTimer 008D  
                                      ??___lmul 0095                                        ??___wmul 0091  
                                    ?i2_strncmp 0001                                      ?i2_toupper 0007  
                        __end_of_ADC_Initialize 6832                                     __pdataBANK0 00CC  
                                   __pdataBANK1 01B6                                        ??_printf 00B5  
                             i2___aomod@divisor 0009                                        ??_strlen 008F  
                             i2___aomod@counter 0011                                     ??_IOCB4_ISR 005B  
                       __size_of_lcd_draw_pixel 0018                            __size_ofi2_vfpfcnvrt 1278  
                                  vsnprintf@cnt 0157                                    vsnprintf@fmt 014D  
                                   __pbssCOMRAM 005D                                   __pcstackBANK0 0060  
                                 __pcstackBANK1 0100                                ?_read_from_usart 00A3  
                              ___aodiv@dividend 008D                                     snprintf@fmt 0163  
                                     _adc_value 0176                                 _lcd_draw_string 4EA8  
                                      ?i2_fputc 0003                                        ?i2_fputs 000C  
                              _lcd_set_cursor_x 60D2                                _lcd_set_cursor_y 6084  
              ??_EUSART1_SetFramingErrorHandler 008F                 ?_EUSART1_SetFramingErrorHandler 008D  
                             __size_of_lcd_fill 0088                               __size_of_lcd_init 0436  
                                      ?i2_putch 0001                               __size_of_lcd_send 001E  
                                     _atoi$2283 009C                                       _atoi$2284 00A0  
                                     _atoi$2285 009E                                       __pnvBANK0 00C2  
                      __size_of_TMR0_StartTimer 0004                                 ?_TMR0_StopTimer 0001  
                        _PIN_MANAGER_Initialize 6168                                       _dtoa$1670 0108  
                      fp__INTERRUPT_S1_CALLBACK 0000                         _EUSART1_is_tx_ready$859 008D  
                                     __pintcode 0008                                   __pmediumconst F134  
                                      ?___aldiv 0099                                        ?___aodiv 008D  
                                      ?___aomod 008D                                       __ptext100 68CC  
                                     __ptext101 68E6                                       __ptext102 68EA  
                              ___aodiv@quotient 009F                                       __ptext103 0000  
                                      ?___lodiv 008D                                        ?___lomod 008D  
                               ?_ADC_Initialize 0001                                read_from_usart@i 00B2  
                  ??_INTERRUPT_InterruptManager 0081                               __size_of_vfprintf 0064  
                             __size_of_snprintf 0030                                        ?_msDelay 0001  
                               ___lomod@divisor 0095                                 ___lomod@counter 009D  
                                      _BAUDCON1 000FA7              _EUSART1_DefaultOverrunErrorHandler 000000  
                                      ?_isalpha 008D                                        ?_isdigit 008D  
                                __size_ofi2_abs 0040                        __size_of_TMR0_WriteTimer 000C  
                          _EUSART1_ErrorHandler 00C2                                  __size_ofi2_pad 00C6  
                                      ?_islower 008D                                        ?_isspace 008D  
                                      ?_isupper 008D                         _EUSART1_SetErrorHandler 68B8  
                                   ??i2___aodiv 0011                                     ??i2___aomod 0011  
                                __size_of_fputc 00CC                                     ??i2___lodiv 0011  
                                __size_of_fputs 0048                                     ??i2___lomod 0011  
                                      ?_strncmp 008D                                        ?_toupper 0093  
                                __size_of_putch 000E                            _INTERRUPT_Initialize 68E2  
                       __size_of_lcd_set_cursor 0042                                 ___aldiv@divisor 009D  
                             ??_TMR0_Initialize 008D                                 ___aldiv@counter 00A1  
                              ?i2_EUSART1_Write 0001                                  ___wmul@product 0091  
                                      _IOCBbits 000F5A                                        _LATAbits 000F89  
       EUSART1_SetErrorHandler@interruptHandler 008D                                        _LATEbits 000F8D  
                                   ??i2_isalpha 0003                              i2___lomod@dividend 0001  
                                   ??i2_isdigit 0003                                 lcd_set_cursor@x 0092  
                               lcd_set_cursor@y 0094                                     ??i2_islower 0003  
                              i2_vfpfcnvrt$1721 0064                                i2_vfpfcnvrt$1722 0066  
                                   ??i2_isspace 0003             __size_of_INTERRUPT_InterruptManager 0086  
                                      _PIR1bits 000F9E                                     ??i2_isupper 0003  
                         lcd_draw_string@lIndex 00B2                                        i2u900_40 43E0  
                                      i2u900_41 43DC                                        i2u901_40 43F2  
                                      i2u901_41 43EE                                        i2u822_40 6842  
                                      i2u910_40 4A52                                        i2u830_40 6506  
                                      i2u822_41 683E                                        i2u910_41 4A4E  
                                      i2u902_41 48E0                                        i2u830_41 6500  
                                      i2u903_40 4902                                        i2u911_40 3C54  
                                      i2u831_40 6508                                        i2u903_41 48FE  
                                      i2u911_41 3C50                                        i2u824_40 5906  
                                      i2u840_40 4760                                        i2u904_40 4934  
                                      i2u912_40 3C70                                        i2u920_40 3332  
                                      i2u824_41 5902                                        i2u840_41 475C  
                                      i2u904_41 4930                                        i2u912_41 3C6C  
                                      i2u920_41 332E                                        i2u825_40 5918  
                                      i2u841_40 4792                                        i2u905_40 4952  
                                      i2u913_40 3DBC                                        i2u921_40 3396  
                                      i2u825_41 5914                                        i2u841_41 478E  
                                      i2u905_41 494E                                        i2u913_41 3DB8  
                                      i2u921_41 3392                                        i2u826_40 5940  
                                      i2u850_40 4DF0                                        i2u906_40 497E  
                                      i2u914_40 3DDA                                        i2u930_40 350C  
                                      i2u922_40 33E0                                        i2u826_41 593C  
                                      i2u842_41 47BC                                        i2u850_41 4DEC  
                                      i2u906_41 497A                                        i2u914_41 3DD6  
                                      i2u930_41 3508                                        i2u922_41 33DA  
                                      i2u827_40 5976                                        i2u843_40 47E0  
                                      i2u851_40 4E1E                                        i2u907_40 49B8  
                                      i2u915_40 3DF4                                        i2u931_40 3526  
                                      i2u923_40 33E2                                        i2u827_41 5972  
                                      i2u843_41 47DC                                        i2u851_41 4E1A  
                                      i2u907_41 49B4                                        i2u915_41 3DF0  
                                      i2u931_41 3522                                        i2u940_40 3F34  
                                      i2u828_40 6236                                        i2u836_40 59CE  
                                      i2u844_40 480A                                        i2u852_40 4E66  
                                      i2u860_40 6316                                        i2u908_40 4A08  
                                      i2u916_40 3E0E                                        i2u932_40 3540  
                                      i2u924_40 33F8                                        i2u828_41 6232  
                                      i2u836_41 59CA                                        i2u844_41 4806  
                                      i2u852_41 4E62                                        i2u860_41 6312  
                                      i2u908_41 4A04                                        i2u916_41 3E0A  
                                      i2u932_41 353C                                        i2u924_41 33F4  
                                      i2u940_47 3F2A                                        i2u941_40 3F92  
                                      i2u829_40 65A6                                        i2u837_40 59F0  
                                      i2u845_40 484A                                        i2u909_40 4A18  
                                      i2u917_40 3E1E                                        i2u861_40 63AE  
                                      i2u933_40 3550                                        i2u925_40 342C  
                                      i2u829_41 65A2                                        i2u837_41 59EC  
                                      i2u845_41 4846                                        i2u909_41 4A14  
                                      i2u853_41 52FC                                        i2u917_41 3E1A  
                                      i2u861_41 63A8                                        i2u933_41 354C  
                                      i2u925_41 3426                                        i2u941_47 3F88  
                                      i2u942_40 3FD6                                        i2u838_40 5A46  
                                      i2u846_40 4894                                        i2u950_40 5564  
                                      i2u854_40 5320                                        i2u862_40 63B0  
                                      i2u870_40 5F06                                        i2u934_40 3560  
                                      i2u926_40 342E                                        i2u918_40 32EC  
                                      i2u838_41 5A42                                        i2u846_41 4890  
                                      i2u950_41 5560                                        i2u854_41 531C  
                                      i2u934_41 355C                                        i2u918_41 32E8  
                                      i2u942_47 3FCC                                        i2u863_40 6576  
                                      i2u943_40 3FFA                                        i2u935_40 3E86  
                                      i2u839_40 5A56                                        i2u847_40 4D56  
                                      i2u951_40 5592                                        i2u855_40 534A  
                                      i2u871_40 5F1C                                        i2u927_40 3444  
                                      i2u919_40 3308                                        i2u863_41 6570  
                                      i2u943_41 3FF4                                        i2u839_41 5A52  
                                      i2u847_41 4D52                                        i2u951_41 558E  
                                      i2u855_41 5346                                        i2u871_41 5F18  
                                      i2u927_41 3440                                        i2u919_41 3304  
                                      i2u935_47 3E7C                                        i2u864_40 6578  
                                      i2u944_40 3FFC                                        i2u936_40 3E96  
                                      i2u848_40 4D88                                        i2u880_40 3070  
                                      i2u856_40 538A                                        i2u928_40 34AC  
                                      i2u936_41 3E92                                        i2u848_41 4D84  
                                      i2u880_41 306C                                        i2u856_41 5386  
                                      i2u928_45 349A                                        i2u865_40 5FFA  
                                      i2u945_40 4012                                        i2u937_40 3EC0  
                                      i2u849_40 4DC6                                        i2u881_40 308C  
                                      i2u857_40 56AC                                        i2u929_40 34EE  
                                      i2u865_41 5FF6                                        i2u945_41 400E  
                                      i2u849_41 4DC2                                        i2u881_41 3088  
                                      i2u857_41 56A8                                        i2u929_41 34EA  
                                      i2u937_47 3EB6                                        i2u866_40 6028  
                                      i2u946_40 4024                                        i2u938_40 3EE2  
                                      i2u890_40 3276                                        i2u882_40 30BA  
                                      i2u858_40 56D6                                        i2u866_41 6024  
                                      i2u946_41 4020                                        i2u938_41 3EDE  
                                      i2u890_41 3272                                        i2u882_41 30B6  
                                      i2u858_41 56D2                                        i2u939_40 3EFE  
                                      i2u891_40 328E                                        i2u883_40 30C8  
                                      i2u947_40 54FC                                        i2u859_40 5704  
                                      i2u867_40 653E                                        i2u939_41 3EFA  
                                      i2u891_41 328A                                        i2u883_41 30C4  
                                      i2u947_41 54F8                                        i2u859_41 5700  
                                      i2u867_41 6538                                        i2u876_40 5F46  
                                      i2u884_40 31F2                                        i2u892_40 4258  
                                      i2u948_40 5534                                        i2u868_40 6540  
                                      i2u876_41 5F42                                        i2u884_41 31EE  
                                      i2u892_41 4254                                        i2u948_41 5530  
                                      i2u885_40 3210                                        i2u877_40 3028  
                                      i2u893_40 4274                                        i2u949_40 5552  
                                      i2u869_40 5F04                                        i2u885_41 320C  
                                      i2u877_41 3022                                        i2u893_41 4270  
                                      i2u949_41 554E                                        i2u869_41 5EFE  
                                      i2u886_40 322A                                        i2u878_40 302A  
                                      i2u894_40 432E                                        i2u990_40 1456  
                                      i2u886_41 3226                                        i2u990_41 1452  
                                      i2u894_45 431C                                        i2u887_40 3244  
                                      i2u879_40 3040                                        i2u895_40 436E  
                                      i2u991_40 147E                                        i2u887_41 3240  
                                      i2u879_41 303C                                        i2u895_41 436A  
                                      i2u991_41 147A                                        _RCONbits 000FD0  
                                      i2u888_40 3254                                        i2u896_40 438C  
                                      i2u992_40 14C2                                        i2u888_41 3250  
                                      i2u896_41 4388                                        i2u992_41 14BE  
                                      i2u889_40 3266                                        i2u897_40 43A6  
                                      i2u993_40 1540                                        i2u889_41 3262  
                                      i2u897_41 43A2                                        i2u993_41 153A  
                                      i2u898_40 43C0                                        i2u994_40 1542  
                                      i2u898_41 43BC                                        i2u899_40 43D0  
                                      i2u995_40 155A                                        i2u899_41 43CC  
                                      i2u995_41 1556                                        i2u996_40 1580  
                                      i2u988_40 1378                                        i2u996_41 157C  
                                      i2u988_41 1374                                        i2u997_40 15BC  
                                      i2u989_40 1448                                        i2u997_41 15B8  
                                      i2u989_41 1444                                        i2u998_40 1666  
                                      i2u998_41 1660                                        i2u999_40 1668  
                     __size_of_SPI_ExchangeByte 001C                                lcd_draw_string@k 00B0  
                                   ??i2_strncmp 0007                                lcd_draw_string@x 0100  
                              lcd_draw_string@y 0102                                     ??i2_toupper 0009  
                             ??_PIN_MANAGER_IOC 005B                                       _vfpfcnvrt 0092  
                      TMR0_ReadTimer@readValLow 0093                                       _xtoa$1706 0108  
                                     _xtoa$1707 010A                                        _SPI_Open 5B40  
                             ??_TMR1_Initialize 008D                                      _ADCON0bits 000FC2  
                             ___wmul@multiplier 008D                                __CFG_SOSCSEL$DIG 000000  
                                      i2___wmul 6732                         __end_of_lcd_draw_string 4FE6  
                             i2_TMR0_WriteTimer 68CC                                    _isspace$2310 0093  
                                      i2_printf 670C                                        i2pad@buf 0015  
                                      i2ctoa@fp 001E                                       msDelay@ms 008E  
                                      i2dtoa@fp 001E                                        i2_strlen 657E  
                                    vfpfcnvrt@c 0138                              ?i2_TMR0_WriteTimer 0001  
                             ___lmul@multiplier 008D                                     _INTCON2bits 000FF1  
                                     copy_data0 5CFC                                       copy_data1 5D1C  
                                      i2fputc@c 0003                           ?_INTERRUPT_Initialize 0001  
                                      i2fputs@c 0010                                        i2fputs@i 0011  
                                      i2fputs@s 000C                                       _vsnprintf 4FE6  
                                      i2otoa@fp 001E                                        i2stoa@cp 001C  
                                      i2stoa@fp 000C                                __size_ofi2_fputc 00CA  
                              __size_ofi2_fputs 0044                                  _turn_off_value 01B6  
                                      i2utoa@fp 001E                                __size_ofi2_putch 000A  
                           ??i2_TMR0_WriteTimer 0003                                        i2xtoa@fp 001E  
                           lcd_draw_pixel@color 0090                                        __Hrparam 0000  
                                    vfprintf@ap 0145                                        __Lrparam 0000  
                                    vfprintf@fp 0141                               _ADC_GetConversion 62BC  
                            __CFG_BOREN$SBORDIS 000000                         __size_of_SPI_Initialize 0012  
                       ??_OSCILLATOR_Initialize 008D                          __size_of_lcd_draw_char 0182  
                            ?_ADC_GetConversion 008D                               ??_TMR0_StartTimer 0001  
                              __size_of___aldiv 010E                                __size_of___aodiv 018A  
                              __size_of___aomod 0166                                     vsnprintf@ap 014F  
                         i2___wmul@multiplicand 0003                                __size_of___lodiv 00F2  
                   __size_of_EUSART1_Initialize 0046                                __size_of___lomod 00D2  
                                    ?_vfpfcnvrt 011C                                      snprintf@ap 016B  
                               ___aodiv@divisor 0095                                        _adc_perc 00B5  
                               ___aodiv@counter 009D                          _IOCB4_InterruptHandler 00CA  
                                _lcd_draw_pixel 67EC                       __end_ofi2_TMR0_WriteTimer 68D6  
                     ??_EUSART1_SetErrorHandler 008F                     _EUSART1_DefaultErrorHandler 000000  
                           ??_ADC_GetConversion 008F                                __size_of_msDelay 0038  
                   __end_of_EUSART1_is_rx_ready 685C                                __size_of_isalpha 003E  
                              __size_of_isdigit 003A                     __end_of_EUSART1_is_tx_ready 6668  
              fp__IOCB4_DefaultInterruptHandler 0000                  ?_IOCB4_DefaultInterruptHandler 0001  
                              __size_of_islower 003A                                __size_of_isspace 0054  
                                      __ptext10 0092                                        __ptext11 2D06  
                                      __ptext20 4438                                        __ptext12 5E16  
                                      __ptext21 404A                                        __ptext13 63B6  
                                    _T1GCONbits 000FAA                                        __ptext30 575E  
                                      __ptext22 2A00                                        __ptext14 63F0  
                                      __ptext31 6880                                        __ptext23 6238  
                                      __ptext15 633C                                        __ptext40 4EA8  
                                      __ptext32 67D4                                        __ptext24 4BDE  
                                      __ptext16 381C                                        __ptext41 4A5C  
                                      __ptext33 3A34                                        __ptext25 45C4  
                                      __ptext17 55BC                                        __ptext50 677A  
                                      __ptext42 627A                                        __ptext34 5F8E  
                                      __ptext26 5E76                                        __ptext18 5204  
                                      __ptext51 6758                                        __ptext43 6084  
                                      __ptext35 6464                                        __ptext27 582A  
                                      __ptext19 53E6                                        __ptext60 68A4  
                                      __ptext52 6612                                        __ptext44 60D2  
                                      __ptext36 66E4                                        __ptext28 642A  
                                      __ptext61 68AE                                        __ptext53 6692  
                                      __ptext45 67EC                                        __ptext37 25CA  
                                      __ptext29 6120                                        __ptext70 68EE  
                                      __ptext62 68B8                                        __ptext54 685C  
                                      __ptext46 679A                                        __ptext38 649E  
                                      __ptext71 670C                                        __ptext63 681C  
                                      __ptext55 6168                                        __ptext47 67B8  
                                      __ptext39 5BF4                                        __ptext80 568E  
                                      __ptext72 5DB2                                        __ptext64 5B40  
                                      __ptext56 689A                                        __ptext48 5C7C  
                                      __ptext81 52F6                                        __ptext73 1352  
                                      __ptext65 62BC                                        __ptext57 686E  
                                      __ptext49 50F6                                        __ptext90 59BE  
                                      __ptext82 54D2                                        __ptext74 32DC  
                                      __ptext58 68E2                                        __ptext91 657E  
                                      __ptext83 48D6                                        __ptext75 5ED4  
                                      __ptext67 6804                                        __ptext59 61AE  
                                      __ptext92 61F4                                        __ptext84 4248  
                                      __ptext76 64D6                                        __ptext68 65E4  
                                      __ptext93 58F4                                        __ptext85 2FF8  
                                      __ptext77 650E                                        __ptext69 6034  
                                      __ptext94 68C2                                        __ptext86 62FC  
                                      __ptext78 637A                                        __ptext95 6832  
                                      __ptext87 4D44                                        __ptext79 3C44  
                                      __ptext96 3E48                                        __ptext88 474E  
                                      __ptext97 5FE2                                        __ptext89 5F32  
                                      __ptext98 6546                                        __ptext99 6732  
                              __size_of_isupper 003A                                        _lcd_fill 5BF4  
                                      _lcd_init 25CA                                        _lcd_send 679A  
                       TMR0_WriteTimer@timerVal 008D                               ??_TMR0_WriteTimer 008F  
                              __size_of_strncmp 00EC                                __size_of_toupper 0060  
                                    ?_vsnprintf 0149                                   __size_of_atoi 0210  
                                 __size_of_ctoa 005E                                   __size_of_main 0266  
                                 __size_of_dtoa 0306                                   __size_of_otoa 01FE  
                                 __size_of_stoa 018C                                   __size_of_utoa 0218  
                              ??_TMR0_ReadTimer 008F                                   __size_of_xtoa 02F2  
                         _INTERRUPT_S1_CALLBACK 6034                           read_from_usart@length 00A3  
                     __end_of_ADC_GetConversion 62FC                                       stoa@F1152 00CC  
EUSART1_SetOverrunErrorHandler@interruptHandler 008D                           lcd_draw_char@bg_color 009E  
                                      int$flags 005F                                        _vfprintf 5D4E  
                         lcd_draw_char@fg_color 009C              __end_of_INTERRUPT_InterruptManager 008E  
                    _INTERRUPT_InterruptManager 0008                          __end_of_lcd_draw_pixel 6804  
                                      _snprintf 65B4                                       printf@fmt 0149  
                      __end_of_lcd_set_cursor_x 6120                        __end_of_lcd_set_cursor_y 60D2  
                   _EUSART1_FramingErrorHandler 00C6                             __CFG_INTOSCSEL$HIGH 000000  
                                      msDelay@k 008F                                ___aomod@dividend 008D  
                                _vfpfcnvrt$1721 012A                                  _vfpfcnvrt$1722 012C  
                                    _INTCONbits 000FF2                                ?_lcd_draw_string 0100  
                                      isalpha@c 008D                                        isdigit@c 008D  
                        ??_INTERRUPT_Initialize 008D                                      vsnprintf@f 0159  
                                    vsnprintf@n 014B                                      vsnprintf@s 0149  
                                 _lcd_draw_char 4A5C                                       snprintf@n 0161  
                                     snprintf@s 015F                                        intlevel2 0000  
                                _lcd_set_cursor 627A                                ??_TMR0_StopTimer 0001  
                             lcd_set_cursor_x@x 0090                               lcd_set_cursor_y@y 0090  
                                      islower@c 008D                                        isspace@c 008D  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 68AE  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 68A4  
                                    _RCSTA1bits 000FAB                                        isupper@c 008D  
                                     strncmp@_l 008D                                       strncmp@_r 008F  
                              ??_ADC_Initialize 008D                            read_from_usart@value 00B0  
                              _SPI_ExchangeByte 67B8                         lcd_draw_string@bg_color 0108  
                                      printf@ap 0151                              __CFG_WDTPS$1048576 000000  
EUSART1_SetFramingErrorHandler@interruptHandler 008D                                 ___aomod@divisor 0095  
                       lcd_draw_string@fg_color 0106                                   ??i2_vfpfcnvrt 004B  
                               ?_lcd_draw_pixel 0090                                     ??_vfpfcnvrt 0122  
                                      stoa@nuls 009D                                 ___aomod@counter 009D  
                        __size_of_EUSART1_Write 0018                              _eusart1RxLastError 00C1  
                    __size_ofi2_TMR0_WriteTimer 000A                                  _vsnprintf$2428 0155  
                               _TMR0_Initialize 6692                                        strncmp@l 0094  
                                      strncmp@n 0091                                        strncmp@r 0096  
                                      toupper@c 0093                                    ___aldiv@sign 00A2  
                                   _SSPCON1bits 000FC6                          __end_of_lcd_set_cursor 62BC  
                                ?_lcd_draw_char 0096                                  i2_isspace$2310 0007  
                                  ___aodiv@sign 009E                  __end_of_PIN_MANAGER_Initialize 61AE  
                                   ??_vsnprintf 0151                              i2___aodiv@dividend 0001  
                           __CFG_BORPWR$ZPBORMV 000000                        __size_of_read_from_usart 00BC  
                        ?_INTERRUPT_S1_CALLBACK 0001                                 _PIN_MANAGER_IOC 6804  
                    __size_of_ADC_GetConversion 0040                                    ___aomod@sign 009E  
                               _TMR1_Initialize 6612  
