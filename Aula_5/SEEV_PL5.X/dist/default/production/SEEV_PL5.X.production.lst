

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Dec 09 13:56:10 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	text100,global,reloc=2,class=CODE,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,delta=1
   123                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1
   125                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   126                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   127  0000                     
   128                           ; Version 2.10
   129                           ; Generated 31/07/2019 GMT
   130                           ; 
   131                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   132                           ; All rights reserved.
   133                           ; 
   134                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   135                           ; 
   136                           ; Redistribution and use in source and binary forms, with or without modification, are
   137                           ; permitted provided that the following conditions are met:
   138                           ; 
   139                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   140                           ;        conditions and the following disclaimer.
   141                           ; 
   142                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   143                           ;        of conditions and the following disclaimer in the documentation and/or other
   144                           ;        materials provided with the distribution.
   145                           ; 
   146                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   147                           ;        software without specific prior written permission.
   148                           ; 
   149                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   150                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   151                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   152                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   153                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   154                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   155                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   156                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   157                           ; 
   158                           ; 
   159                           ; Code-generator required, PIC18F46K80 Definitions
   160                           ; 
   161                           ; SFR Addresses
   162  0000                     
   163 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   164  0000                     
   165 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   166  0000                     
   167 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   168  0000                     
   169                           	psect	idataBANK0
   170  0069CC                     __pidataBANK0:
   171                           	opt callstack 0
   172                           
   173                           ;initializer for stoa@F1152
   174  0069CC  28                 	db	40
   175  0069CD  6E                 	db	110
   176  0069CE  75                 	db	117
   177  0069CF  6C                 	db	108
   178  0069D0  6C                 	db	108
   179  0069D1  29                 	db	41
   180  0069D2  00                 	db	0
   181                           
   182                           	psect	idataBANK1
   183  0069D3                     __pidataBANK1:
   184                           	opt callstack 0
   185                           
   186                           ;initializer for _turn_off_value
   187  0069D3  0050               	dw	80
   188                           
   189                           ;initializer for _turn_on_value
   190  0069D5  005A               	dw	90
   191                           
   192                           	psect	mediumconst
   193  00F134                     __pmediumconst:
   194                           	opt callstack 0
   195  00F134  00                 	db	0
   196  00F135                     _font:
   197                           	opt callstack 0
   198  00F135  0004               	dw	4
   199  00F137  0000               	dw	0
   200  00F139  0000               	dw	0
   201  00F13B  0000               	dw	0
   202  00F13D  0000               	dw	0
   203  00F13F  0000               	dw	0
   204  00F141  0000               	dw	0
   205  00F143  0000               	dw	0
   206  00F145  0000               	dw	0
   207  00F147  0003               	dw	3
   208  00F149  0000               	dw	0
   209  00F14B  0000               	dw	0
   210  00F14D  00FE               	dw	254
   211  00F14F  001B               	dw	27
   212  00F151  0000               	dw	0
   213  00F153  0000               	dw	0
   214  00F155  0005               	dw	5
   215  00F157  001E               	dw	30
   216  00F159  0000               	dw	0
   217  00F15B  0000               	dw	0
   218  00F15D  0000               	dw	0
   219  00F15F  0000               	dw	0
   220  00F161  0000               	dw	0
   221  00F163  001E               	dw	30
   222  00F165  0000               	dw	0
   223  00F167  0000               	dw	0
   224  00F169  0000               	dw	0
   225  00F16B  000B               	dw	11
   226  00F16D  0000               	dw	0
   227  00F16F  0000               	dw	0
   228  00F171  0010               	dw	16
   229  00F173  0001               	dw	1
   230  00F175  0010               	dw	16
   231  00F177  001D               	dw	29
   232  00F179  00F0               	dw	240
   233  00F17B  0003               	dw	3
   234  00F17D  001E               	dw	30
   235  00F17F  0001               	dw	1
   236  00F181  0010               	dw	16
   237  00F183  0001               	dw	1
   238  00F185  0010               	dw	16
   239  00F187  001D               	dw	29
   240  00F189  00F0               	dw	240
   241  00F18B  0003               	dw	3
   242  00F18D  001E               	dw	30
   243  00F18F  0001               	dw	1
   244  00F191  0010               	dw	16
   245  00F193  0001               	dw	1
   246  00F195  0000               	dw	0
   247  00F197  0000               	dw	0
   248  00F199  0009               	dw	9
   249  00F19B  0000               	dw	0
   250  00F19D  0004               	dw	4
   251  00F19F  001C               	dw	28
   252  00F1A1  0008               	dw	8
   253  00F1A3  0022               	dw	34
   254  00F1A5  0010               	dw	16
   255  00F1A7  0042               	dw	66
   256  00F1A9  0010               	dw	16
   257  00F1AB  00FF               	dw	255
   258  00F1AD  007F               	dw	127
   259  00F1AF  0042               	dw	66
   260  00F1B1  0010               	dw	16
   261  00F1B3  0084               	dw	132
   262  00F1B5  0010               	dw	16
   263  00F1B7  0000               	dw	0
   264  00F1B9  000F               	dw	15
   265  00F1BB  0000               	dw	0
   266  00F1BD  0000               	dw	0
   267  00F1BF  000C               	dw	12
   268  00F1C1  001C               	dw	28
   269  00F1C3  0000               	dw	0
   270  00F1C5  0022               	dw	34
   271  00F1C7  0010               	dw	16
   272  00F1C9  0022               	dw	34
   273  00F1CB  0008               	dw	8
   274  00F1CD  0022               	dw	34
   275  00F1CF  0006               	dw	6
   276  00F1D1  001C               	dw	28
   277  00F1D3  0001               	dw	1
   278  00F1D5  00C0               	dw	192
   279  00F1D7  0000               	dw	0
   280  00F1D9  0020               	dw	32
   281  00F1DB  000E               	dw	14
   282  00F1DD  0018               	dw	24
   283  00F1DF  0011               	dw	17
   284  00F1E1  0004               	dw	4
   285  00F1E3  0011               	dw	17
   286  00F1E5  0002               	dw	2
   287  00F1E7  0011               	dw	17
   288  00F1E9  0000               	dw	0
   289  00F1EB  000E               	dw	14
   290  00F1ED  0000               	dw	0
   291  00F1EF  0000               	dw	0
   292  00F1F1  000B               	dw	11
   293  00F1F3  0000               	dw	0
   294  00F1F5  0000               	dw	0
   295  00F1F7  0000               	dw	0
   296  00F1F9  000E               	dw	14
   297  00F1FB  001C               	dw	28
   298  00F1FD  0011               	dw	17
   299  00F1FF  00A2               	dw	162
   300  00F201  0010               	dw	16
   301  00F203  00C2               	dw	194
   302  00F205  0010               	dw	16
   303  00F207  0022               	dw	34
   304  00F209  0011               	dw	17
   305  00F20B  001C               	dw	28
   306  00F20D  000A               	dw	10
   307  00F20F  0000               	dw	0
   308  00F211  000C               	dw	12
   309  00F213  0000               	dw	0
   310  00F215  000C               	dw	12
   311  00F217  0000               	dw	0
   312  00F219  0012               	dw	18
   313  00F21B  0000               	dw	0
   314  00F21D  0000               	dw	0
   315  00F21F  0003               	dw	3
   316  00F221  0000               	dw	0
   317  00F223  0000               	dw	0
   318  00F225  001E               	dw	30
   319  00F227  0000               	dw	0
   320  00F229  0000               	dw	0
   321  00F22B  0000               	dw	0
   322  00F22D  0006               	dw	6
   323  00F22F  0000               	dw	0
   324  00F231  0000               	dw	0
   325  00F233  0000               	dw	0
   326  00F235  0000               	dw	0
   327  00F237  00E0               	dw	224
   328  00F239  001F               	dw	31
   329  00F23B  001C               	dw	28
   330  00F23D  0060               	dw	96
   331  00F23F  0002               	dw	2
   332  00F241  0080               	dw	128
   333  00F243  0000               	dw	0
   334  00F245  0000               	dw	0
   335  00F247  0004               	dw	4
   336  00F249  0000               	dw	0
   337  00F24B  0000               	dw	0
   338  00F24D  0006               	dw	6
   339  00F24F  00C0               	dw	192
   340  00F251  00F8               	dw	248
   341  00F253  003F               	dw	63
   342  00F255  0000               	dw	0
   343  00F257  0000               	dw	0
   344  00F259  0006               	dw	6
   345  00F25B  0024               	dw	36
   346  00F25D  0000               	dw	0
   347  00F25F  0018               	dw	24
   348  00F261  0000               	dw	0
   349  00F263  007E               	dw	126
   350  00F265  0000               	dw	0
   351  00F267  0018               	dw	24
   352  00F269  0000               	dw	0
   353  00F26B  0024               	dw	36
   354  00F26D  0000               	dw	0
   355  00F26F  0000               	dw	0
   356  00F271  0000               	dw	0
   357  00F273  0009               	dw	9
   358  00F275  0000               	dw	0
   359  00F277  0000               	dw	0
   360  00F279  0080               	dw	128
   361  00F27B  0000               	dw	0
   362  00F27D  0080               	dw	128
   363  00F27F  0000               	dw	0
   364  00F281  0080               	dw	128
   365  00F283  0000               	dw	0
   366  00F285  00F0               	dw	240
   367  00F287  0007               	dw	7
   368  00F289  0080               	dw	128
   369  00F28B  0000               	dw	0
   370  00F28D  0080               	dw	128
   371  00F28F  0000               	dw	0
   372  00F291  0080               	dw	128
   373  00F293  0000               	dw	0
   374  00F295  0000               	dw	0
   375  00F297  0000               	dw	0
   376  00F299  0004               	dw	4
   377  00F29B  0000               	dw	0
   378  00F29D  0000               	dw	0
   379  00F29F  0000               	dw	0
   380  00F2A1  0060               	dw	96
   381  00F2A3  0000               	dw	0
   382  00F2A5  0018               	dw	24
   383  00F2A7  0000               	dw	0
   384  00F2A9  0000               	dw	0
   385  00F2AB  0005               	dw	5
   386  00F2AD  0000               	dw	0
   387  00F2AF  0001               	dw	1
   388  00F2B1  0000               	dw	0
   389  00F2B3  0001               	dw	1
   390  00F2B5  0000               	dw	0
   391  00F2B7  0001               	dw	1
   392  00F2B9  0000               	dw	0
   393  00F2BB  0001               	dw	1
   394  00F2BD  0000               	dw	0
   395  00F2BF  0000               	dw	0
   396  00F2C1  0004               	dw	4
   397  00F2C3  0000               	dw	0
   398  00F2C5  0000               	dw	0
   399  00F2C7  0000               	dw	0
   400  00F2C9  0018               	dw	24
   401  00F2CB  0000               	dw	0
   402  00F2CD  0018               	dw	24
   403  00F2CF  0000               	dw	0
   404  00F2D1  0000               	dw	0
   405  00F2D3  0008               	dw	8
   406  00F2D5  0000               	dw	0
   407  00F2D7  0000               	dw	0
   408  00F2D9  0000               	dw	0
   409  00F2DB  0040               	dw	64
   410  00F2DD  0000               	dw	0
   411  00F2DF  0038               	dw	56
   412  00F2E1  0000               	dw	0
   413  00F2E3  0007               	dw	7
   414  00F2E5  00E0               	dw	224
   415  00F2E7  0000               	dw	0
   416  00F2E9  001C               	dw	28
   417  00F2EB  0000               	dw	0
   418  00F2ED  0002               	dw	2
   419  00F2EF  0000               	dw	0
   420  00F2F1  0000               	dw	0
   421  00F2F3  0000               	dw	0
   422  00F2F5  0009               	dw	9
   423  00F2F7  00F8               	dw	248
   424  00F2F9  0007               	dw	7
   425  00F2FB  0004               	dw	4
   426  00F2FD  0008               	dw	8
   427  00F2FF  0002               	dw	2
   428  00F301  0010               	dw	16
   429  00F303  0002               	dw	2
   430  00F305  0010               	dw	16
   431  00F307  0002               	dw	2
   432  00F309  0010               	dw	16
   433  00F30B  0002               	dw	2
   434  00F30D  0010               	dw	16
   435  00F30F  0004               	dw	4
   436  00F311  0008               	dw	8
   437  00F313  00F8               	dw	248
   438  00F315  0007               	dw	7
   439  00F317  0000               	dw	0
   440  00F319  0000               	dw	0
   441  00F31B  0006               	dw	6
   442  00F31D  0000               	dw	0
   443  00F31F  0000               	dw	0
   444  00F321  0000               	dw	0
   445  00F323  0000               	dw	0
   446  00F325  0002               	dw	2
   447  00F327  0000               	dw	0
   448  00F329  0002               	dw	2
   449  00F32B  0000               	dw	0
   450  00F32D  00FE               	dw	254
   451  00F32F  001F               	dw	31
   452  00F331  0000               	dw	0
   453  00F333  0000               	dw	0
   454  00F335  0009               	dw	9
   455  00F337  0018               	dw	24
   456  00F339  0010               	dw	16
   457  00F33B  0004               	dw	4
   458  00F33D  0018               	dw	24
   459  00F33F  0002               	dw	2
   460  00F341  0014               	dw	20
   461  00F343  0002               	dw	2
   462  00F345  0012               	dw	18
   463  00F347  0002               	dw	2
   464  00F349  0011               	dw	17
   465  00F34B  0082               	dw	130
   466  00F34D  0010               	dw	16
   467  00F34F  0044               	dw	68
   468  00F351  0010               	dw	16
   469  00F353  0038               	dw	56
   470  00F355  0010               	dw	16
   471  00F357  0000               	dw	0
   472  00F359  0000               	dw	0
   473  00F35B  0009               	dw	9
   474  00F35D  0008               	dw	8
   475  00F35F  000C               	dw	12
   476  00F361  0004               	dw	4
   477  00F363  0010               	dw	16
   478  00F365  0002               	dw	2
   479  00F367  0010               	dw	16
   480  00F369  0042               	dw	66
   481  00F36B  0010               	dw	16
   482  00F36D  0042               	dw	66
   483  00F36F  0010               	dw	16
   484  00F371  0044               	dw	68
   485  00F373  0010               	dw	16
   486  00F375  00B8               	dw	184
   487  00F377  0008               	dw	8
   488  00F379  0000               	dw	0
   489  00F37B  0007               	dw	7
   490  00F37D  0000               	dw	0
   491  00F37F  0000               	dw	0
   492  00F381  0009               	dw	9
   493  00F383  0000               	dw	0
   494  00F385  0002               	dw	2
   495  00F387  0000               	dw	0
   496  00F389  0003               	dw	3
   497  00F38B  0080               	dw	128
   498  00F38D  0002               	dw	2
   499  00F38F  0060               	dw	96
   500  00F391  0002               	dw	2
   501  00F393  0010               	dw	16
   502  00F395  0002               	dw	2
   503  00F397  0008               	dw	8
   504  00F399  0002               	dw	2
   505  00F39B  00FE               	dw	254
   506  00F39D  001F               	dw	31
   507  00F39F  0000               	dw	0
   508  00F3A1  0002               	dw	2
   509  00F3A3  0000               	dw	0
   510  00F3A5  0000               	dw	0
   511  00F3A7  0009               	dw	9
   512  00F3A9  0000               	dw	0
   513  00F3AB  0004               	dw	4
   514  00F3AD  0070               	dw	112
   515  00F3AF  0008               	dw	8
   516  00F3B1  002E               	dw	46
   517  00F3B3  0010               	dw	16
   518  00F3B5  0022               	dw	34
   519  00F3B7  0010               	dw	16
   520  00F3B9  0022               	dw	34
   521  00F3BB  0010               	dw	16
   522  00F3BD  0022               	dw	34
   523  00F3BF  0010               	dw	16
   524  00F3C1  0042               	dw	66
   525  00F3C3  0008               	dw	8
   526  00F3C5  0082               	dw	130
   527  00F3C7  0007               	dw	7
   528  00F3C9  0000               	dw	0
   529  00F3CB  0000               	dw	0
   530  00F3CD  0009               	dw	9
   531  00F3CF  0000               	dw	0
   532  00F3D1  0000               	dw	0
   533  00F3D3  0000               	dw	0
   534  00F3D5  0007               	dw	7
   535  00F3D7  00C0               	dw	192
   536  00F3D9  0008               	dw	8
   537  00F3DB  0060               	dw	96
   538  00F3DD  0010               	dw	16
   539  00F3DF  0058               	dw	88
   540  00F3E1  0010               	dw	16
   541  00F3E3  0044               	dw	68
   542  00F3E5  0010               	dw	16
   543  00F3E7  0082               	dw	130
   544  00F3E9  0008               	dw	8
   545  00F3EB  0000               	dw	0
   546  00F3ED  0007               	dw	7
   547  00F3EF  0000               	dw	0
   548  00F3F1  0000               	dw	0
   549  00F3F3  0009               	dw	9
   550  00F3F5  0000               	dw	0
   551  00F3F7  0000               	dw	0
   552  00F3F9  0002               	dw	2
   553  00F3FB  0010               	dw	16
   554  00F3FD  0002               	dw	2
   555  00F3FF  000C               	dw	12
   556  00F401  0002               	dw	2
   557  00F403  0003               	dw	3
   558  00F405  00C2               	dw	194
   559  00F407  0000               	dw	0
   560  00F409  0032               	dw	50
   561  00F40B  0000               	dw	0
   562  00F40D  000E               	dw	14
   563  00F40F  0000               	dw	0
   564  00F411  0002               	dw	2
   565  00F413  0000               	dw	0
   566  00F415  0000               	dw	0
   567  00F417  0000               	dw	0
   568  00F419  0009               	dw	9
   569  00F41B  0000               	dw	0
   570  00F41D  0007               	dw	7
   571  00F41F  0098               	dw	152
   572  00F421  0008               	dw	8
   573  00F423  0064               	dw	100
   574  00F425  0010               	dw	16
   575  00F427  0042               	dw	66
   576  00F429  0010               	dw	16
   577  00F42B  0042               	dw	66
   578  00F42D  0010               	dw	16
   579  00F42F  0064               	dw	100
   580  00F431  0010               	dw	16
   581  00F433  0098               	dw	152
   582  00F435  0008               	dw	8
   583  00F437  0000               	dw	0
   584  00F439  0007               	dw	7
   585  00F43B  0000               	dw	0
   586  00F43D  0000               	dw	0
   587  00F43F  0009               	dw	9
   588  00F441  0000               	dw	0
   589  00F443  0000               	dw	0
   590  00F445  0038               	dw	56
   591  00F447  0000               	dw	0
   592  00F449  0044               	dw	68
   593  00F44B  0010               	dw	16
   594  00F44D  0082               	dw	130
   595  00F44F  0008               	dw	8
   596  00F451  0082               	dw	130
   597  00F453  0004               	dw	4
   598  00F455  0082               	dw	130
   599  00F457  0003               	dw	3
   600  00F459  0084               	dw	132
   601  00F45B  0000               	dw	0
   602  00F45D  0078               	dw	120
   603  00F45F  0000               	dw	0
   604  00F461  0000               	dw	0
   605  00F463  0000               	dw	0
   606  00F465  0004               	dw	4
   607  00F467  0000               	dw	0
   608  00F469  0000               	dw	0
   609  00F46B  0030               	dw	48
   610  00F46D  0018               	dw	24
   611  00F46F  0030               	dw	48
   612  00F471  0018               	dw	24
   613  00F473  0000               	dw	0
   614  00F475  0000               	dw	0
   615  00F477  0004               	dw	4
   616  00F479  0000               	dw	0
   617  00F47B  0000               	dw	0
   618  00F47D  0030               	dw	48
   619  00F47F  0060               	dw	96
   620  00F481  0030               	dw	48
   621  00F483  0018               	dw	24
   622  00F485  0000               	dw	0
   623  00F487  0000               	dw	0
   624  00F489  000A               	dw	10
   625  00F48B  0000               	dw	0
   626  00F48D  0000               	dw	0
   627  00F48F  0080               	dw	128
   628  00F491  0000               	dw	0
   629  00F493  0080               	dw	128
   630  00F495  0000               	dw	0
   631  00F497  0040               	dw	64
   632  00F499  0001               	dw	1
   633  00F49B  0020               	dw	32
   634  00F49D  0002               	dw	2
   635  00F49F  0020               	dw	32
   636  00F4A1  0002               	dw	2
   637  00F4A3  0010               	dw	16
   638  00F4A5  0004               	dw	4
   639  00F4A7  0010               	dw	16
   640  00F4A9  0004               	dw	4
   641  00F4AB  0008               	dw	8
   642  00F4AD  0008               	dw	8
   643  00F4AF  0000               	dw	0
   644  00F4B1  0000               	dw	0
   645  00F4B3  000A               	dw	10
   646  00F4B5  0000               	dw	0
   647  00F4B7  0000               	dw	0
   648  00F4B9  0020               	dw	32
   649  00F4BB  0001               	dw	1
   650  00F4BD  0020               	dw	32
   651  00F4BF  0001               	dw	1
   652  00F4C1  0020               	dw	32
   653  00F4C3  0001               	dw	1
   654  00F4C5  0020               	dw	32
   655  00F4C7  0001               	dw	1
   656  00F4C9  0020               	dw	32
   657  00F4CB  0001               	dw	1
   658  00F4CD  0020               	dw	32
   659  00F4CF  0001               	dw	1
   660  00F4D1  0020               	dw	32
   661  00F4D3  0001               	dw	1
   662  00F4D5  0020               	dw	32
   663  00F4D7  0001               	dw	1
   664  00F4D9  0000               	dw	0
   665  00F4DB  0000               	dw	0
   666  00F4DD  000A               	dw	10
   667  00F4DF  0000               	dw	0
   668  00F4E1  0000               	dw	0
   669  00F4E3  0008               	dw	8
   670  00F4E5  0008               	dw	8
   671  00F4E7  0010               	dw	16
   672  00F4E9  0004               	dw	4
   673  00F4EB  0010               	dw	16
   674  00F4ED  0004               	dw	4
   675  00F4EF  0020               	dw	32
   676  00F4F1  0002               	dw	2
   677  00F4F3  0020               	dw	32
   678  00F4F5  0002               	dw	2
   679  00F4F7  0040               	dw	64
   680  00F4F9  0001               	dw	1
   681  00F4FB  0080               	dw	128
   682  00F4FD  0000               	dw	0
   683  00F4FF  0080               	dw	128
   684  00F501  0000               	dw	0
   685  00F503  0000               	dw	0
   686  00F505  0000               	dw	0
   687  00F507  0008               	dw	8
   688  00F509  0000               	dw	0
   689  00F50B  0000               	dw	0
   690  00F50D  000C               	dw	12
   691  00F50F  0000               	dw	0
   692  00F511  0082               	dw	130
   693  00F513  0001               	dw	1
   694  00F515  0042               	dw	66
   695  00F517  0002               	dw	2
   696  00F519  0022               	dw	34
   697  00F51B  001A               	dw	26
   698  00F51D  0022               	dw	34
   699  00F51F  001A               	dw	26
   700  00F521  009C               	dw	156
   701  00F523  0001               	dw	1
   702  00F525  0000               	dw	0
   703  00F527  0000               	dw	0
   704  00F529  000E               	dw	14
   705  00F52B  0000               	dw	0
   706  00F52D  0000               	dw	0
   707  00F52F  00F0               	dw	240
   708  00F531  0003               	dw	3
   709  00F533  0008               	dw	8
   710  00F535  0004               	dw	4
   711  00F537  0004               	dw	4
   712  00F539  0008               	dw	8
   713  00F53B  00C2               	dw	194
   714  00F53D  0011               	dw	17
   715  00F53F  0022               	dw	34
   716  00F541  0012               	dw	18
   717  00F543  0012               	dw	18
   718  00F545  0012               	dw	18
   719  00F547  0012               	dw	18
   720  00F549  0012               	dw	18
   721  00F54B  00E2               	dw	226
   722  00F54D  0011               	dw	17
   723  00F54F  0012               	dw	18
   724  00F551  0012               	dw	18
   725  00F553  0004               	dw	4
   726  00F555  0012               	dw	18
   727  00F557  0008               	dw	8
   728  00F559  0009               	dw	9
   729  00F55B  00F0               	dw	240
   730  00F55D  0004               	dw	4
   731  00F55F  0000               	dw	0
   732  00F561  0000               	dw	0
   733  00F563  000D               	dw	13
   734  00F565  0000               	dw	0
   735  00F567  0000               	dw	0
   736  00F569  0000               	dw	0
   737  00F56B  0010               	dw	16
   738  00F56D  0000               	dw	0
   739  00F56F  000E               	dw	14
   740  00F571  0080               	dw	128
   741  00F573  0001               	dw	1
   742  00F575  0060               	dw	96
   743  00F577  0001               	dw	1
   744  00F579  001C               	dw	28
   745  00F57B  0001               	dw	1
   746  00F57D  0002               	dw	2
   747  00F57F  0001               	dw	1
   748  00F581  001C               	dw	28
   749  00F583  0001               	dw	1
   750  00F585  0060               	dw	96
   751  00F587  0001               	dw	1
   752  00F589  0080               	dw	128
   753  00F58B  0001               	dw	1
   754  00F58D  0000               	dw	0
   755  00F58F  000E               	dw	14
   756  00F591  0000               	dw	0
   757  00F593  0010               	dw	16
   758  00F595  0000               	dw	0
   759  00F597  0000               	dw	0
   760  00F599  0009               	dw	9
   761  00F59B  0000               	dw	0
   762  00F59D  0000               	dw	0
   763  00F59F  0000               	dw	0
   764  00F5A1  0000               	dw	0
   765  00F5A3  00FE               	dw	254
   766  00F5A5  001F               	dw	31
   767  00F5A7  0042               	dw	66
   768  00F5A9  0010               	dw	16
   769  00F5AB  0042               	dw	66
   770  00F5AD  0010               	dw	16
   771  00F5AF  0064               	dw	100
   772  00F5B1  0010               	dw	16
   773  00F5B3  0098               	dw	152
   774  00F5B5  0008               	dw	8
   775  00F5B7  0000               	dw	0
   776  00F5B9  0007               	dw	7
   777  00F5BB  0000               	dw	0
   778  00F5BD  0000               	dw	0
   779  00F5BF  000D               	dw	13
   780  00F5C1  0000               	dw	0
   781  00F5C3  0000               	dw	0
   782  00F5C5  00F0               	dw	240
   783  00F5C7  0003               	dw	3
   784  00F5C9  0008               	dw	8
   785  00F5CB  0004               	dw	4
   786  00F5CD  0004               	dw	4
   787  00F5CF  0008               	dw	8
   788  00F5D1  0002               	dw	2
   789  00F5D3  0010               	dw	16
   790  00F5D5  0002               	dw	2
   791  00F5D7  0010               	dw	16
   792  00F5D9  0002               	dw	2
   793  00F5DB  0010               	dw	16
   794  00F5DD  0002               	dw	2
   795  00F5DF  0010               	dw	16
   796  00F5E1  0002               	dw	2
   797  00F5E3  0010               	dw	16
   798  00F5E5  0004               	dw	4
   799  00F5E7  0008               	dw	8
   800  00F5E9  0004               	dw	4
   801  00F5EB  0008               	dw	8
   802  00F5ED  0008               	dw	8
   803  00F5EF  0004               	dw	4
   804  00F5F1  0000               	dw	0
   805  00F5F3  0000               	dw	0
   806  00F5F5  000C               	dw	12
   807  00F5F7  0000               	dw	0
   808  00F5F9  0000               	dw	0
   809  00F5FB  0000               	dw	0
   810  00F5FD  0000               	dw	0
   811  00F5FF  00FE               	dw	254
   812  00F601  001F               	dw	31
   813  00F603  0002               	dw	2
   814  00F605  0010               	dw	16
   815  00F607  0002               	dw	2
   816  00F609  0010               	dw	16
   817  00F60B  0002               	dw	2
   818  00F60D  0010               	dw	16
   819  00F60F  0002               	dw	2
   820  00F611  0010               	dw	16
   821  00F613  0002               	dw	2
   822  00F615  0010               	dw	16
   823  00F617  0004               	dw	4
   824  00F619  0008               	dw	8
   825  00F61B  0008               	dw	8
   826  00F61D  0004               	dw	4
   827  00F61F  00F0               	dw	240
   828  00F621  0003               	dw	3
   829  00F623  0000               	dw	0
   830  00F625  0000               	dw	0
   831  00F627  0009               	dw	9
   832  00F629  0000               	dw	0
   833  00F62B  0000               	dw	0
   834  00F62D  0000               	dw	0
   835  00F62F  0000               	dw	0
   836  00F631  00FE               	dw	254
   837  00F633  001F               	dw	31
   838  00F635  0042               	dw	66
   839  00F637  0010               	dw	16
   840  00F639  0042               	dw	66
   841  00F63B  0010               	dw	16
   842  00F63D  0042               	dw	66
   843  00F63F  0010               	dw	16
   844  00F641  0042               	dw	66
   845  00F643  0010               	dw	16
   846  00F645  0042               	dw	66
   847  00F647  0010               	dw	16
   848  00F649  0000               	dw	0
   849  00F64B  0000               	dw	0
   850  00F64D  0008               	dw	8
   851  00F64F  0000               	dw	0
   852  00F651  0000               	dw	0
   853  00F653  0000               	dw	0
   854  00F655  0000               	dw	0
   855  00F657  00FE               	dw	254
   856  00F659  001F               	dw	31
   857  00F65B  0042               	dw	66
   858  00F65D  0000               	dw	0
   859  00F65F  0042               	dw	66
   860  00F661  0000               	dw	0
   861  00F663  0042               	dw	66
   862  00F665  0000               	dw	0
   863  00F667  0042               	dw	66
   864  00F669  0000               	dw	0
   865  00F66B  0000               	dw	0
   866  00F66D  0000               	dw	0
   867  00F66F  000E               	dw	14
   868  00F671  0000               	dw	0
   869  00F673  0000               	dw	0
   870  00F675  00F0               	dw	240
   871  00F677  0003               	dw	3
   872  00F679  0008               	dw	8
   873  00F67B  0004               	dw	4
   874  00F67D  0004               	dw	4
   875  00F67F  0008               	dw	8
   876  00F681  0002               	dw	2
   877  00F683  0010               	dw	16
   878  00F685  0002               	dw	2
   879  00F687  0010               	dw	16
   880  00F689  0002               	dw	2
   881  00F68B  0010               	dw	16
   882  00F68D  0002               	dw	2
   883  00F68F  0010               	dw	16
   884  00F691  0082               	dw	130
   885  00F693  0010               	dw	16
   886  00F695  0084               	dw	132
   887  00F697  0010               	dw	16
   888  00F699  0084               	dw	132
   889  00F69B  0008               	dw	8
   890  00F69D  0088               	dw	136
   891  00F69F  0004               	dw	4
   892  00F6A1  0080               	dw	128
   893  00F6A3  0003               	dw	3
   894  00F6A5  0000               	dw	0
   895  00F6A7  0000               	dw	0
   896  00F6A9  000A               	dw	10
   897  00F6AB  0000               	dw	0
   898  00F6AD  0000               	dw	0
   899  00F6AF  0000               	dw	0
   900  00F6B1  0000               	dw	0
   901  00F6B3  00FE               	dw	254
   902  00F6B5  001F               	dw	31
   903  00F6B7  0040               	dw	64
   904  00F6B9  0000               	dw	0
   905  00F6BB  0040               	dw	64
   906  00F6BD  0000               	dw	0
   907  00F6BF  0040               	dw	64
   908  00F6C1  0000               	dw	0
   909  00F6C3  0040               	dw	64
   910  00F6C5  0000               	dw	0
   911  00F6C7  0040               	dw	64
   912  00F6C9  0000               	dw	0
   913  00F6CB  00FE               	dw	254
   914  00F6CD  001F               	dw	31
   915  00F6CF  0000               	dw	0
   916  00F6D1  0000               	dw	0
   917  00F6D3  0004               	dw	4
   918  00F6D5  0000               	dw	0
   919  00F6D7  0000               	dw	0
   920  00F6D9  0000               	dw	0
   921  00F6DB  0000               	dw	0
   922  00F6DD  00FE               	dw	254
   923  00F6DF  001F               	dw	31
   924  00F6E1  0000               	dw	0
   925  00F6E3  0000               	dw	0
   926  00F6E5  0007               	dw	7
   927  00F6E7  0000               	dw	0
   928  00F6E9  0000               	dw	0
   929  00F6EB  0000               	dw	0
   930  00F6ED  0008               	dw	8
   931  00F6EF  0000               	dw	0
   932  00F6F1  0010               	dw	16
   933  00F6F3  0000               	dw	0
   934  00F6F5  0010               	dw	16
   935  00F6F7  0000               	dw	0
   936  00F6F9  0008               	dw	8
   937  00F6FB  00FE               	dw	254
   938  00F6FD  0007               	dw	7
   939  00F6FF  0000               	dw	0
   940  00F701  0000               	dw	0
   941  00F703  0009               	dw	9
   942  00F705  0000               	dw	0
   943  00F707  0000               	dw	0
   944  00F709  0000               	dw	0
   945  00F70B  0000               	dw	0
   946  00F70D  00FE               	dw	254
   947  00F70F  001F               	dw	31
   948  00F711  0060               	dw	96
   949  00F713  0000               	dw	0
   950  00F715  0090               	dw	144
   951  00F717  0001               	dw	1
   952  00F719  0008               	dw	8
   953  00F71B  0002               	dw	2
   954  00F71D  0004               	dw	4
   955  00F71F  000C               	dw	12
   956  00F721  0002               	dw	2
   957  00F723  0010               	dw	16
   958  00F725  0000               	dw	0
   959  00F727  0000               	dw	0
   960  00F729  0008               	dw	8
   961  00F72B  0000               	dw	0
   962  00F72D  0000               	dw	0
   963  00F72F  0000               	dw	0
   964  00F731  0000               	dw	0
   965  00F733  00FE               	dw	254
   966  00F735  001F               	dw	31
   967  00F737  0000               	dw	0
   968  00F739  0010               	dw	16
   969  00F73B  0000               	dw	0
   970  00F73D  0010               	dw	16
   971  00F73F  0000               	dw	0
   972  00F741  0010               	dw	16
   973  00F743  0000               	dw	0
   974  00F745  0010               	dw	16
   975  00F747  0000               	dw	0
   976  00F749  0000               	dw	0
   977  00F74B  000F               	dw	15
   978  00F74D  0000               	dw	0
   979  00F74F  0000               	dw	0
   980  00F751  0000               	dw	0
   981  00F753  001C               	dw	28
   982  00F755  00F8               	dw	248
   983  00F757  0003               	dw	3
   984  00F759  0006               	dw	6
   985  00F75B  0000               	dw	0
   986  00F75D  0038               	dw	56
   987  00F75F  0000               	dw	0
   988  00F761  00C0               	dw	192
   989  00F763  0001               	dw	1
   990  00F765  0000               	dw	0
   991  00F767  000E               	dw	14
   992  00F769  0000               	dw	0
   993  00F76B  0010               	dw	16
   994  00F76D  0000               	dw	0
   995  00F76F  000E               	dw	14
   996  00F771  00C0               	dw	192
   997  00F773  0001               	dw	1
   998  00F775  0038               	dw	56
   999  00F777  0000               	dw	0
  1000  00F779  0006               	dw	6
  1001  00F77B  0000               	dw	0
  1002  00F77D  00F8               	dw	248
  1003  00F77F  0003               	dw	3
  1004  00F781  0000               	dw	0
  1005  00F783  001C               	dw	28
  1006  00F785  0000               	dw	0
  1007  00F787  0000               	dw	0
  1008  00F789  000B               	dw	11
  1009  00F78B  0000               	dw	0
  1010  00F78D  0000               	dw	0
  1011  00F78F  0000               	dw	0
  1012  00F791  0000               	dw	0
  1013  00F793  00FE               	dw	254
  1014  00F795  001F               	dw	31
  1015  00F797  0008               	dw	8
  1016  00F799  0000               	dw	0
  1017  00F79B  0030               	dw	48
  1018  00F79D  0000               	dw	0
  1019  00F79F  0040               	dw	64
  1020  00F7A1  0000               	dw	0
  1021  00F7A3  0080               	dw	128
  1022  00F7A5  0000               	dw	0
  1023  00F7A7  0000               	dw	0
  1024  00F7A9  0003               	dw	3
  1025  00F7AB  0000               	dw	0
  1026  00F7AD  0004               	dw	4
  1027  00F7AF  00FE               	dw	254
  1028  00F7B1  001F               	dw	31
  1029  00F7B3  0000               	dw	0
  1030  00F7B5  0000               	dw	0
  1031  00F7B7  000E               	dw	14
  1032  00F7B9  0000               	dw	0
  1033  00F7BB  0000               	dw	0
  1034  00F7BD  00F0               	dw	240
  1035  00F7BF  0003               	dw	3
  1036  00F7C1  0008               	dw	8
  1037  00F7C3  0004               	dw	4
  1038  00F7C5  0004               	dw	4
  1039  00F7C7  0008               	dw	8
  1040  00F7C9  0002               	dw	2
  1041  00F7CB  0010               	dw	16
  1042  00F7CD  0002               	dw	2
  1043  00F7CF  0010               	dw	16
  1044  00F7D1  0002               	dw	2
  1045  00F7D3  0010               	dw	16
  1046  00F7D5  0002               	dw	2
  1047  00F7D7  0010               	dw	16
  1048  00F7D9  0002               	dw	2
  1049  00F7DB  0010               	dw	16
  1050  00F7DD  0002               	dw	2
  1051  00F7DF  0010               	dw	16
  1052  00F7E1  0004               	dw	4
  1053  00F7E3  0008               	dw	8
  1054  00F7E5  0008               	dw	8
  1055  00F7E7  0004               	dw	4
  1056  00F7E9  00F0               	dw	240
  1057  00F7EB  0003               	dw	3
  1058  00F7ED  0000               	dw	0
  1059  00F7EF  0000               	dw	0
  1060  00F7F1  0009               	dw	9
  1061  00F7F3  0000               	dw	0
  1062  00F7F5  0000               	dw	0
  1063  00F7F7  0000               	dw	0
  1064  00F7F9  0000               	dw	0
  1065  00F7FB  00FE               	dw	254
  1066  00F7FD  001F               	dw	31
  1067  00F7FF  0042               	dw	66
  1068  00F801  0000               	dw	0
  1069  00F803  0042               	dw	66
  1070  00F805  0000               	dw	0
  1071  00F807  0042               	dw	66
  1072  00F809  0000               	dw	0
  1073  00F80B  0024               	dw	36
  1074  00F80D  0000               	dw	0
  1075  00F80F  0018               	dw	24
  1076  00F811  0000               	dw	0
  1077  00F813  0000               	dw	0
  1078  00F815  0000               	dw	0
  1079  00F817  000E               	dw	14
  1080  00F819  0000               	dw	0
  1081  00F81B  0000               	dw	0
  1082  00F81D  00F0               	dw	240
  1083  00F81F  0003               	dw	3
  1084  00F821  0008               	dw	8
  1085  00F823  0004               	dw	4
  1086  00F825  0004               	dw	4
  1087  00F827  0008               	dw	8
  1088  00F829  0002               	dw	2
  1089  00F82B  0010               	dw	16
  1090  00F82D  0002               	dw	2
  1091  00F82F  0010               	dw	16
  1092  00F831  0002               	dw	2
  1093  00F833  0010               	dw	16
  1094  00F835  0002               	dw	2
  1095  00F837  0011               	dw	17
  1096  00F839  0002               	dw	2
  1097  00F83B  0012               	dw	18
  1098  00F83D  0002               	dw	2
  1099  00F83F  000C               	dw	12
  1100  00F841  0004               	dw	4
  1101  00F843  0008               	dw	8
  1102  00F845  0008               	dw	8
  1103  00F847  0016               	dw	22
  1104  00F849  00F0               	dw	240
  1105  00F84B  0021               	dw	33
  1106  00F84D  0000               	dw	0
  1107  00F84F  0000               	dw	0
  1108  00F851  000A               	dw	10
  1109  00F853  0000               	dw	0
  1110  00F855  0000               	dw	0
  1111  00F857  0000               	dw	0
  1112  00F859  0000               	dw	0
  1113  00F85B  00FE               	dw	254
  1114  00F85D  001F               	dw	31
  1115  00F85F  0042               	dw	66
  1116  00F861  0000               	dw	0
  1117  00F863  00C2               	dw	194
  1118  00F865  0000               	dw	0
  1119  00F867  0042               	dw	66
  1120  00F869  0001               	dw	1
  1121  00F86B  0042               	dw	66
  1122  00F86D  0006               	dw	6
  1123  00F86F  0024               	dw	36
  1124  00F871  0008               	dw	8
  1125  00F873  0018               	dw	24
  1126  00F875  0010               	dw	16
  1127  00F877  0000               	dw	0
  1128  00F879  0000               	dw	0
  1129  00F87B  0008               	dw	8
  1130  00F87D  0000               	dw	0
  1131  00F87F  0004               	dw	4
  1132  00F881  0018               	dw	24
  1133  00F883  0008               	dw	8
  1134  00F885  0024               	dw	36
  1135  00F887  0010               	dw	16
  1136  00F889  0042               	dw	66
  1137  00F88B  0010               	dw	16
  1138  00F88D  0042               	dw	66
  1139  00F88F  0010               	dw	16
  1140  00F891  0084               	dw	132
  1141  00F893  0008               	dw	8
  1142  00F895  0008               	dw	8
  1143  00F897  0007               	dw	7
  1144  00F899  0000               	dw	0
  1145  00F89B  0000               	dw	0
  1146  00F89D  0008               	dw	8
  1147  00F89F  0002               	dw	2
  1148  00F8A1  0000               	dw	0
  1149  00F8A3  0002               	dw	2
  1150  00F8A5  0000               	dw	0
  1151  00F8A7  0002               	dw	2
  1152  00F8A9  0000               	dw	0
  1153  00F8AB  00FE               	dw	254
  1154  00F8AD  001F               	dw	31
  1155  00F8AF  0002               	dw	2
  1156  00F8B1  0000               	dw	0
  1157  00F8B3  0002               	dw	2
  1158  00F8B5  0000               	dw	0
  1159  00F8B7  0002               	dw	2
  1160  00F8B9  0000               	dw	0
  1161  00F8BB  0000               	dw	0
  1162  00F8BD  0000               	dw	0
  1163  00F8BF  000A               	dw	10
  1164  00F8C1  0000               	dw	0
  1165  00F8C3  0000               	dw	0
  1166  00F8C5  0000               	dw	0
  1167  00F8C7  0000               	dw	0
  1168  00F8C9  00FE               	dw	254
  1169  00F8CB  0007               	dw	7
  1170  00F8CD  0000               	dw	0
  1171  00F8CF  0008               	dw	8
  1172  00F8D1  0000               	dw	0
  1173  00F8D3  0010               	dw	16
  1174  00F8D5  0000               	dw	0
  1175  00F8D7  0010               	dw	16
  1176  00F8D9  0000               	dw	0
  1177  00F8DB  0010               	dw	16
  1178  00F8DD  0000               	dw	0
  1179  00F8DF  0008               	dw	8
  1180  00F8E1  00FE               	dw	254
  1181  00F8E3  0007               	dw	7
  1182  00F8E5  0000               	dw	0
  1183  00F8E7  0000               	dw	0
  1184  00F8E9  000C               	dw	12
  1185  00F8EB  0002               	dw	2
  1186  00F8ED  0000               	dw	0
  1187  00F8EF  001C               	dw	28
  1188  00F8F1  0000               	dw	0
  1189  00F8F3  0060               	dw	96
  1190  00F8F5  0000               	dw	0
  1191  00F8F7  0080               	dw	128
  1192  00F8F9  0001               	dw	1
  1193  00F8FB  0000               	dw	0
  1194  00F8FD  000E               	dw	14
  1195  00F8FF  0000               	dw	0
  1196  00F901  0010               	dw	16
  1197  00F903  0000               	dw	0
  1198  00F905  000E               	dw	14
  1199  00F907  0080               	dw	128
  1200  00F909  0001               	dw	1
  1201  00F90B  0060               	dw	96
  1202  00F90D  0000               	dw	0
  1203  00F90F  001C               	dw	28
  1204  00F911  0000               	dw	0
  1205  00F913  0002               	dw	2
  1206  00F915  0000               	dw	0
  1207  00F917  0000               	dw	0
  1208  00F919  0000               	dw	0
  1209  00F91B  000F               	dw	15
  1210  00F91D  0000               	dw	0
  1211  00F91F  0000               	dw	0
  1212  00F921  0006               	dw	6
  1213  00F923  0000               	dw	0
  1214  00F925  0078               	dw	120
  1215  00F927  0000               	dw	0
  1216  00F929  0080               	dw	128
  1217  00F92B  0007               	dw	7
  1218  00F92D  0000               	dw	0
  1219  00F92F  0018               	dw	24
  1220  00F931  0080               	dw	128
  1221  00F933  0007               	dw	7
  1222  00F935  0078               	dw	120
  1223  00F937  0000               	dw	0
  1224  00F939  0006               	dw	6
  1225  00F93B  0000               	dw	0
  1226  00F93D  0078               	dw	120
  1227  00F93F  0000               	dw	0
  1228  00F941  0080               	dw	128
  1229  00F943  0007               	dw	7
  1230  00F945  0000               	dw	0
  1231  00F947  0018               	dw	24
  1232  00F949  0080               	dw	128
  1233  00F94B  0007               	dw	7
  1234  00F94D  0078               	dw	120
  1235  00F94F  0000               	dw	0
  1236  00F951  0006               	dw	6
  1237  00F953  0000               	dw	0
  1238  00F955  0000               	dw	0
  1239  00F957  0000               	dw	0
  1240  00F959  0009               	dw	9
  1241  00F95B  0000               	dw	0
  1242  00F95D  0000               	dw	0
  1243  00F95F  0006               	dw	6
  1244  00F961  0018               	dw	24
  1245  00F963  0008               	dw	8
  1246  00F965  0004               	dw	4
  1247  00F967  0030               	dw	48
  1248  00F969  0003               	dw	3
  1249  00F96B  00C0               	dw	192
  1250  00F96D  0000               	dw	0
  1251  00F96F  0030               	dw	48
  1252  00F971  0003               	dw	3
  1253  00F973  0008               	dw	8
  1254  00F975  0004               	dw	4
  1255  00F977  0006               	dw	6
  1256  00F979  0018               	dw	24
  1257  00F97B  0000               	dw	0
  1258  00F97D  0000               	dw	0
  1259  00F97F  000B               	dw	11
  1260  00F981  0000               	dw	0
  1261  00F983  0000               	dw	0
  1262  00F985  0002               	dw	2
  1263  00F987  0000               	dw	0
  1264  00F989  0004               	dw	4
  1265  00F98B  0000               	dw	0
  1266  00F98D  0018               	dw	24
  1267  00F98F  0000               	dw	0
  1268  00F991  0060               	dw	96
  1269  00F993  0000               	dw	0
  1270  00F995  0080               	dw	128
  1271  00F997  001F               	dw	31
  1272  00F999  0060               	dw	96
  1273  00F99B  0000               	dw	0
  1274  00F99D  0018               	dw	24
  1275  00F99F  0000               	dw	0
  1276  00F9A1  0004               	dw	4
  1277  00F9A3  0000               	dw	0
  1278  00F9A5  0002               	dw	2
  1279  00F9A7  0000               	dw	0
  1280  00F9A9  0000               	dw	0
  1281  00F9AB  0000               	dw	0
  1282  00F9AD  0008               	dw	8
  1283  00F9AF  0002               	dw	2
  1284  00F9B1  0010               	dw	16
  1285  00F9B3  0002               	dw	2
  1286  00F9B5  001C               	dw	28
  1287  00F9B7  0002               	dw	2
  1288  00F9B9  0013               	dw	19
  1289  00F9BB  00C2               	dw	194
  1290  00F9BD  0010               	dw	16
  1291  00F9BF  0032               	dw	50
  1292  00F9C1  0010               	dw	16
  1293  00F9C3  000E               	dw	14
  1294  00F9C5  0010               	dw	16
  1295  00F9C7  0002               	dw	2
  1296  00F9C9  0010               	dw	16
  1297  00F9CB  0000               	dw	0
  1298  00F9CD  0000               	dw	0
  1299  00F9CF  0006               	dw	6
  1300  00F9D1  0000               	dw	0
  1301  00F9D3  0000               	dw	0
  1302  00F9D5  0000               	dw	0
  1303  00F9D7  0000               	dw	0
  1304  00F9D9  00FE               	dw	254
  1305  00F9DB  00FF               	dw	255
  1306  00F9DD  0002               	dw	2
  1307  00F9DF  0080               	dw	128
  1308  00F9E1  0002               	dw	2
  1309  00F9E3  0080               	dw	128
  1310  00F9E5  0000               	dw	0
  1311  00F9E7  0000               	dw	0
  1312  00F9E9  000A               	dw	10
  1313  00F9EB  0002               	dw	2
  1314  00F9ED  0000               	dw	0
  1315  00F9EF  000C               	dw	12
  1316  00F9F1  0000               	dw	0
  1317  00F9F3  0010               	dw	16
  1318  00F9F5  0000               	dw	0
  1319  00F9F7  0060               	dw	96
  1320  00F9F9  0000               	dw	0
  1321  00F9FB  0080               	dw	128
  1322  00F9FD  0001               	dw	1
  1323  00F9FF  0000               	dw	0
  1324  00FA01  0006               	dw	6
  1325  00FA03  0000               	dw	0
  1326  00FA05  0008               	dw	8
  1327  00FA07  0000               	dw	0
  1328  00FA09  0030               	dw	48
  1329  00FA0B  0000               	dw	0
  1330  00FA0D  0040               	dw	64
  1331  00FA0F  0000               	dw	0
  1332  00FA11  0000               	dw	0
  1333  00FA13  0005               	dw	5
  1334  00FA15  0000               	dw	0
  1335  00FA17  0000               	dw	0
  1336  00FA19  0002               	dw	2
  1337  00FA1B  0080               	dw	128
  1338  00FA1D  0002               	dw	2
  1339  00FA1F  0080               	dw	128
  1340  00FA21  00FE               	dw	254
  1341  00FA23  00FF               	dw	255
  1342  00FA25  0000               	dw	0
  1343  00FA27  0000               	dw	0
  1344  00FA29  000B               	dw	11
  1345  00FA2B  0000               	dw	0
  1346  00FA2D  0000               	dw	0
  1347  00FA2F  0000               	dw	0
  1348  00FA31  0002               	dw	2
  1349  00FA33  0080               	dw	128
  1350  00FA35  0001               	dw	1
  1351  00FA37  0070               	dw	112
  1352  00FA39  0000               	dw	0
  1353  00FA3B  000C               	dw	12
  1354  00FA3D  0000               	dw	0
  1355  00FA3F  0002               	dw	2
  1356  00FA41  0000               	dw	0
  1357  00FA43  000C               	dw	12
  1358  00FA45  0000               	dw	0
  1359  00FA47  0070               	dw	112
  1360  00FA49  0000               	dw	0
  1361  00FA4B  0080               	dw	128
  1362  00FA4D  0001               	dw	1
  1363  00FA4F  0000               	dw	0
  1364  00FA51  0002               	dw	2
  1365  00FA53  0000               	dw	0
  1366  00FA55  0000               	dw	0
  1367  00FA57  0009               	dw	9
  1368  00FA59  0000               	dw	0
  1369  00FA5B  0040               	dw	64
  1370  00FA5D  0000               	dw	0
  1371  00FA5F  0040               	dw	64
  1372  00FA61  0000               	dw	0
  1373  00FA63  0040               	dw	64
  1374  00FA65  0000               	dw	0
  1375  00FA67  0040               	dw	64
  1376  00FA69  0000               	dw	0
  1377  00FA6B  0040               	dw	64
  1378  00FA6D  0000               	dw	0
  1379  00FA6F  0040               	dw	64
  1380  00FA71  0000               	dw	0
  1381  00FA73  0040               	dw	64
  1382  00FA75  0000               	dw	0
  1383  00FA77  0040               	dw	64
  1384  00FA79  0000               	dw	0
  1385  00FA7B  0000               	dw	0
  1386  00FA7D  0005               	dw	5
  1387  00FA7F  0000               	dw	0
  1388  00FA81  0000               	dw	0
  1389  00FA83  0000               	dw	0
  1390  00FA85  0000               	dw	0
  1391  00FA87  0002               	dw	2
  1392  00FA89  0000               	dw	0
  1393  00FA8B  0004               	dw	4
  1394  00FA8D  0000               	dw	0
  1395  00FA8F  0000               	dw	0
  1396  00FA91  0000               	dw	0
  1397  00FA93  000B               	dw	11
  1398  00FA95  0000               	dw	0
  1399  00FA97  0000               	dw	0
  1400  00FA99  00C0               	dw	192
  1401  00FA9B  0007               	dw	7
  1402  00FA9D  0020               	dw	32
  1403  00FA9F  0008               	dw	8
  1404  00FAA1  0010               	dw	16
  1405  00FAA3  0010               	dw	16
  1406  00FAA5  0010               	dw	16
  1407  00FAA7  0010               	dw	16
  1408  00FAA9  0010               	dw	16
  1409  00FAAB  0010               	dw	16
  1410  00FAAD  0010               	dw	16
  1411  00FAAF  0010               	dw	16
  1412  00FAB1  0010               	dw	16
  1413  00FAB3  0010               	dw	16
  1414  00FAB5  0020               	dw	32
  1415  00FAB7  0008               	dw	8
  1416  00FAB9  00F0               	dw	240
  1417  00FABB  001F               	dw	31
  1418  00FABD  0000               	dw	0
  1419  00FABF  0000               	dw	0
  1420  00FAC1  000B               	dw	11
  1421  00FAC3  0000               	dw	0
  1422  00FAC5  0000               	dw	0
  1423  00FAC7  00FE               	dw	254
  1424  00FAC9  001F               	dw	31
  1425  00FACB  0020               	dw	32
  1426  00FACD  0008               	dw	8
  1427  00FACF  0010               	dw	16
  1428  00FAD1  0010               	dw	16
  1429  00FAD3  0010               	dw	16
  1430  00FAD5  0010               	dw	16
  1431  00FAD7  0010               	dw	16
  1432  00FAD9  0010               	dw	16
  1433  00FADB  0010               	dw	16
  1434  00FADD  0010               	dw	16
  1435  00FADF  0010               	dw	16
  1436  00FAE1  0010               	dw	16
  1437  00FAE3  0020               	dw	32
  1438  00FAE5  0008               	dw	8
  1439  00FAE7  00C0               	dw	192
  1440  00FAE9  0007               	dw	7
  1441  00FAEB  0000               	dw	0
  1442  00FAED  0000               	dw	0
  1443  00FAEF  000A               	dw	10
  1444  00FAF1  0000               	dw	0
  1445  00FAF3  0000               	dw	0
  1446  00FAF5  00C0               	dw	192
  1447  00FAF7  0007               	dw	7
  1448  00FAF9  0020               	dw	32
  1449  00FAFB  0008               	dw	8
  1450  00FAFD  0010               	dw	16
  1451  00FAFF  0010               	dw	16
  1452  00FB01  0010               	dw	16
  1453  00FB03  0010               	dw	16
  1454  00FB05  0010               	dw	16
  1455  00FB07  0010               	dw	16
  1456  00FB09  0010               	dw	16
  1457  00FB0B  0010               	dw	16
  1458  00FB0D  0020               	dw	32
  1459  00FB0F  0008               	dw	8
  1460  00FB11  0040               	dw	64
  1461  00FB13  0004               	dw	4
  1462  00FB15  0000               	dw	0
  1463  00FB17  0000               	dw	0
  1464  00FB19  000B               	dw	11
  1465  00FB1B  0000               	dw	0
  1466  00FB1D  0000               	dw	0
  1467  00FB1F  00C0               	dw	192
  1468  00FB21  0007               	dw	7
  1469  00FB23  0020               	dw	32
  1470  00FB25  0008               	dw	8
  1471  00FB27  0010               	dw	16
  1472  00FB29  0010               	dw	16
  1473  00FB2B  0010               	dw	16
  1474  00FB2D  0010               	dw	16
  1475  00FB2F  0010               	dw	16
  1476  00FB31  0010               	dw	16
  1477  00FB33  0010               	dw	16
  1478  00FB35  0010               	dw	16
  1479  00FB37  0010               	dw	16
  1480  00FB39  0010               	dw	16
  1481  00FB3B  0020               	dw	32
  1482  00FB3D  0008               	dw	8
  1483  00FB3F  00FE               	dw	254
  1484  00FB41  001F               	dw	31
  1485  00FB43  0000               	dw	0
  1486  00FB45  0000               	dw	0
  1487  00FB47  000A               	dw	10
  1488  00FB49  0000               	dw	0
  1489  00FB4B  0000               	dw	0
  1490  00FB4D  00C0               	dw	192
  1491  00FB4F  0007               	dw	7
  1492  00FB51  0020               	dw	32
  1493  00FB53  0009               	dw	9
  1494  00FB55  0010               	dw	16
  1495  00FB57  0011               	dw	17
  1496  00FB59  0010               	dw	16
  1497  00FB5B  0011               	dw	17
  1498  00FB5D  0010               	dw	16
  1499  00FB5F  0011               	dw	17
  1500  00FB61  0010               	dw	16
  1501  00FB63  0011               	dw	17
  1502  00FB65  0020               	dw	32
  1503  00FB67  0009               	dw	9
  1504  00FB69  00C0               	dw	192
  1505  00FB6B  0005               	dw	5
  1506  00FB6D  0000               	dw	0
  1507  00FB6F  0000               	dw	0
  1508  00FB71  0006               	dw	6
  1509  00FB73  0000               	dw	0
  1510  00FB75  0000               	dw	0
  1511  00FB77  0010               	dw	16
  1512  00FB79  0000               	dw	0
  1513  00FB7B  00FC               	dw	252
  1514  00FB7D  001F               	dw	31
  1515  00FB7F  0012               	dw	18
  1516  00FB81  0000               	dw	0
  1517  00FB83  0012               	dw	18
  1518  00FB85  0000               	dw	0
  1519  00FB87  0000               	dw	0
  1520  00FB89  0000               	dw	0
  1521  00FB8B  000B               	dw	11
  1522  00FB8D  0000               	dw	0
  1523  00FB8F  0000               	dw	0
  1524  00FB91  00C0               	dw	192
  1525  00FB93  0027               	dw	39
  1526  00FB95  0020               	dw	32
  1527  00FB97  0048               	dw	72
  1528  00FB99  0010               	dw	16
  1529  00FB9B  0090               	dw	144
  1530  00FB9D  0010               	dw	16
  1531  00FB9F  0090               	dw	144
  1532  00FBA1  0010               	dw	16
  1533  00FBA3  0090               	dw	144
  1534  00FBA5  0010               	dw	16
  1535  00FBA7  0090               	dw	144
  1536  00FBA9  0010               	dw	16
  1537  00FBAB  0090               	dw	144
  1538  00FBAD  0020               	dw	32
  1539  00FBAF  0048               	dw	72
  1540  00FBB1  00F0               	dw	240
  1541  00FBB3  003F               	dw	63
  1542  00FBB5  0000               	dw	0
  1543  00FBB7  0000               	dw	0
  1544  00FBB9  000A               	dw	10
  1545  00FBBB  0000               	dw	0
  1546  00FBBD  0000               	dw	0
  1547  00FBBF  00FE               	dw	254
  1548  00FBC1  001F               	dw	31
  1549  00FBC3  0020               	dw	32
  1550  00FBC5  0000               	dw	0
  1551  00FBC7  0010               	dw	16
  1552  00FBC9  0000               	dw	0
  1553  00FBCB  0010               	dw	16
  1554  00FBCD  0000               	dw	0
  1555  00FBCF  0010               	dw	16
  1556  00FBD1  0000               	dw	0
  1557  00FBD3  0010               	dw	16
  1558  00FBD5  0000               	dw	0
  1559  00FBD7  0020               	dw	32
  1560  00FBD9  0000               	dw	0
  1561  00FBDB  00C0               	dw	192
  1562  00FBDD  001F               	dw	31
  1563  00FBDF  0000               	dw	0
  1564  00FBE1  0000               	dw	0
  1565  00FBE3  0003               	dw	3
  1566  00FBE5  0000               	dw	0
  1567  00FBE7  0000               	dw	0
  1568  00FBE9  00F6               	dw	246
  1569  00FBEB  001F               	dw	31
  1570  00FBED  0000               	dw	0
  1571  00FBEF  0000               	dw	0
  1572  00FBF1  0003               	dw	3
  1573  00FBF3  0000               	dw	0
  1574  00FBF5  0080               	dw	128
  1575  00FBF7  00F6               	dw	246
  1576  00FBF9  007F               	dw	127
  1577  00FBFB  0000               	dw	0
  1578  00FBFD  0000               	dw	0
  1579  00FBFF  0008               	dw	8
  1580  00FC01  0000               	dw	0
  1581  00FC03  0000               	dw	0
  1582  00FC05  00FE               	dw	254
  1583  00FC07  001F               	dw	31
  1584  00FC09  0000               	dw	0
  1585  00FC0B  0001               	dw	1
  1586  00FC0D  0080               	dw	128
  1587  00FC0F  0002               	dw	2
  1588  00FC11  0040               	dw	64
  1589  00FC13  0004               	dw	4
  1590  00FC15  0020               	dw	32
  1591  00FC17  0008               	dw	8
  1592  00FC19  0010               	dw	16
  1593  00FC1B  0010               	dw	16
  1594  00FC1D  0000               	dw	0
  1595  00FC1F  0000               	dw	0
  1596  00FC21  0003               	dw	3
  1597  00FC23  0000               	dw	0
  1598  00FC25  0000               	dw	0
  1599  00FC27  00FE               	dw	254
  1600  00FC29  001F               	dw	31
  1601  00FC2B  0000               	dw	0
  1602  00FC2D  0000               	dw	0
  1603  00FC2F  000F               	dw	15
  1604  00FC31  0000               	dw	0
  1605  00FC33  0000               	dw	0
  1606  00FC35  00F0               	dw	240
  1607  00FC37  001F               	dw	31
  1608  00FC39  0020               	dw	32
  1609  00FC3B  0000               	dw	0
  1610  00FC3D  0010               	dw	16
  1611  00FC3F  0000               	dw	0
  1612  00FC41  0010               	dw	16
  1613  00FC43  0000               	dw	0
  1614  00FC45  0010               	dw	16
  1615  00FC47  0000               	dw	0
  1616  00FC49  0020               	dw	32
  1617  00FC4B  0000               	dw	0
  1618  00FC4D  00C0               	dw	192
  1619  00FC4F  001F               	dw	31
  1620  00FC51  0020               	dw	32
  1621  00FC53  0000               	dw	0
  1622  00FC55  0010               	dw	16
  1623  00FC57  0000               	dw	0
  1624  00FC59  0010               	dw	16
  1625  00FC5B  0000               	dw	0
  1626  00FC5D  0010               	dw	16
  1627  00FC5F  0000               	dw	0
  1628  00FC61  0020               	dw	32
  1629  00FC63  0000               	dw	0
  1630  00FC65  00C0               	dw	192
  1631  00FC67  001F               	dw	31
  1632  00FC69  0000               	dw	0
  1633  00FC6B  0000               	dw	0
  1634  00FC6D  000A               	dw	10
  1635  00FC6F  0000               	dw	0
  1636  00FC71  0000               	dw	0
  1637  00FC73  00F0               	dw	240
  1638  00FC75  001F               	dw	31
  1639  00FC77  0020               	dw	32
  1640  00FC79  0000               	dw	0
  1641  00FC7B  0010               	dw	16
  1642  00FC7D  0000               	dw	0
  1643  00FC7F  0010               	dw	16
  1644  00FC81  0000               	dw	0
  1645  00FC83  0010               	dw	16
  1646  00FC85  0000               	dw	0
  1647  00FC87  0010               	dw	16
  1648  00FC89  0000               	dw	0
  1649  00FC8B  0020               	dw	32
  1650  00FC8D  0000               	dw	0
  1651  00FC8F  00C0               	dw	192
  1652  00FC91  001F               	dw	31
  1653  00FC93  0000               	dw	0
  1654  00FC95  0000               	dw	0
  1655  00FC97  000A               	dw	10
  1656  00FC99  0000               	dw	0
  1657  00FC9B  0000               	dw	0
  1658  00FC9D  00C0               	dw	192
  1659  00FC9F  0007               	dw	7
  1660  00FCA1  0020               	dw	32
  1661  00FCA3  0008               	dw	8
  1662  00FCA5  0010               	dw	16
  1663  00FCA7  0010               	dw	16
  1664  00FCA9  0010               	dw	16
  1665  00FCAB  0010               	dw	16
  1666  00FCAD  0010               	dw	16
  1667  00FCAF  0010               	dw	16
  1668  00FCB1  0010               	dw	16
  1669  00FCB3  0010               	dw	16
  1670  00FCB5  0020               	dw	32
  1671  00FCB7  0008               	dw	8
  1672  00FCB9  00C0               	dw	192
  1673  00FCBB  0007               	dw	7
  1674  00FCBD  0000               	dw	0
  1675  00FCBF  0000               	dw	0
  1676  00FCC1  000B               	dw	11
  1677  00FCC3  0000               	dw	0
  1678  00FCC5  0000               	dw	0
  1679  00FCC7  00F0               	dw	240
  1680  00FCC9  00FF               	dw	255
  1681  00FCCB  0020               	dw	32
  1682  00FCCD  0008               	dw	8
  1683  00FCCF  0010               	dw	16
  1684  00FCD1  0010               	dw	16
  1685  00FCD3  0010               	dw	16
  1686  00FCD5  0010               	dw	16
  1687  00FCD7  0010               	dw	16
  1688  00FCD9  0010               	dw	16
  1689  00FCDB  0010               	dw	16
  1690  00FCDD  0010               	dw	16
  1691  00FCDF  0010               	dw	16
  1692  00FCE1  0010               	dw	16
  1693  00FCE3  0020               	dw	32
  1694  00FCE5  0008               	dw	8
  1695  00FCE7  00C0               	dw	192
  1696  00FCE9  0007               	dw	7
  1697  00FCEB  0000               	dw	0
  1698  00FCED  0000               	dw	0
  1699  00FCEF  000B               	dw	11
  1700  00FCF1  0000               	dw	0
  1701  00FCF3  0000               	dw	0
  1702  00FCF5  00C0               	dw	192
  1703  00FCF7  0007               	dw	7
  1704  00FCF9  0020               	dw	32
  1705  00FCFB  0008               	dw	8
  1706  00FCFD  0010               	dw	16
  1707  00FCFF  0010               	dw	16
  1708  00FD01  0010               	dw	16
  1709  00FD03  0010               	dw	16
  1710  00FD05  0010               	dw	16
  1711  00FD07  0010               	dw	16
  1712  00FD09  0010               	dw	16
  1713  00FD0B  0010               	dw	16
  1714  00FD0D  0010               	dw	16
  1715  00FD0F  0010               	dw	16
  1716  00FD11  0020               	dw	32
  1717  00FD13  0008               	dw	8
  1718  00FD15  00F0               	dw	240
  1719  00FD17  00FF               	dw	255
  1720  00FD19  0000               	dw	0
  1721  00FD1B  0000               	dw	0
  1722  00FD1D  0006               	dw	6
  1723  00FD1F  0000               	dw	0
  1724  00FD21  0000               	dw	0
  1725  00FD23  00F0               	dw	240
  1726  00FD25  001F               	dw	31
  1727  00FD27  0020               	dw	32
  1728  00FD29  0000               	dw	0
  1729  00FD2B  0010               	dw	16
  1730  00FD2D  0000               	dw	0
  1731  00FD2F  0010               	dw	16
  1732  00FD31  0000               	dw	0
  1733  00FD33  0000               	dw	0
  1734  00FD35  0000               	dw	0
  1735  00FD37  0006               	dw	6
  1736  00FD39  0060               	dw	96
  1737  00FD3B  0008               	dw	8
  1738  00FD3D  0090               	dw	144
  1739  00FD3F  0010               	dw	16
  1740  00FD41  0010               	dw	16
  1741  00FD43  0011               	dw	17
  1742  00FD45  0010               	dw	16
  1743  00FD47  0011               	dw	17
  1744  00FD49  0020               	dw	32
  1745  00FD4B  000E               	dw	14
  1746  00FD4D  0000               	dw	0
  1747  00FD4F  0000               	dw	0
  1748  00FD51  0007               	dw	7
  1749  00FD53  0000               	dw	0
  1750  00FD55  0000               	dw	0
  1751  00FD57  0010               	dw	16
  1752  00FD59  0000               	dw	0
  1753  00FD5B  0010               	dw	16
  1754  00FD5D  0000               	dw	0
  1755  00FD5F  00FE               	dw	254
  1756  00FD61  001F               	dw	31
  1757  00FD63  0010               	dw	16
  1758  00FD65  0000               	dw	0
  1759  00FD67  0010               	dw	16
  1760  00FD69  0000               	dw	0
  1761  00FD6B  0000               	dw	0
  1762  00FD6D  0000               	dw	0
  1763  00FD6F  000A               	dw	10
  1764  00FD71  0000               	dw	0
  1765  00FD73  0000               	dw	0
  1766  00FD75  00F0               	dw	240
  1767  00FD77  0007               	dw	7
  1768  00FD79  0000               	dw	0
  1769  00FD7B  0008               	dw	8
  1770  00FD7D  0000               	dw	0
  1771  00FD7F  0010               	dw	16
  1772  00FD81  0000               	dw	0
  1773  00FD83  0010               	dw	16
  1774  00FD85  0000               	dw	0
  1775  00FD87  0010               	dw	16
  1776  00FD89  0000               	dw	0
  1777  00FD8B  0010               	dw	16
  1778  00FD8D  0000               	dw	0
  1779  00FD8F  0008               	dw	8
  1780  00FD91  00F0               	dw	240
  1781  00FD93  0007               	dw	7
  1782  00FD95  0000               	dw	0
  1783  00FD97  0000               	dw	0
  1784  00FD99  000A               	dw	10
  1785  00FD9B  0010               	dw	16
  1786  00FD9D  0000               	dw	0
  1787  00FD9F  0060               	dw	96
  1788  00FDA1  0000               	dw	0
  1789  00FDA3  0080               	dw	128
  1790  00FDA5  0003               	dw	3
  1791  00FDA7  0000               	dw	0
  1792  00FDA9  000C               	dw	12
  1793  00FDAB  0000               	dw	0
  1794  00FDAD  0010               	dw	16
  1795  00FDAF  0000               	dw	0
  1796  00FDB1  000C               	dw	12
  1797  00FDB3  0080               	dw	128
  1798  00FDB5  0003               	dw	3
  1799  00FDB7  0060               	dw	96
  1800  00FDB9  0000               	dw	0
  1801  00FDBB  0010               	dw	16
  1802  00FDBD  0000               	dw	0
  1803  00FDBF  0000               	dw	0
  1804  00FDC1  0000               	dw	0
  1805  00FDC3  000E               	dw	14
  1806  00FDC5  0010               	dw	16
  1807  00FDC7  0000               	dw	0
  1808  00FDC9  00E0               	dw	224
  1809  00FDCB  0000               	dw	0
  1810  00FDCD  0000               	dw	0
  1811  00FDCF  0007               	dw	7
  1812  00FDD1  0000               	dw	0
  1813  00FDD3  0018               	dw	24
  1814  00FDD5  0000               	dw	0
  1815  00FDD7  0007               	dw	7
  1816  00FDD9  00E0               	dw	224
  1817  00FDDB  0000               	dw	0
  1818  00FDDD  0010               	dw	16
  1819  00FDDF  0000               	dw	0
  1820  00FDE1  00E0               	dw	224
  1821  00FDE3  0000               	dw	0
  1822  00FDE5  0000               	dw	0
  1823  00FDE7  0007               	dw	7
  1824  00FDE9  0000               	dw	0
  1825  00FDEB  0018               	dw	24
  1826  00FDED  0000               	dw	0
  1827  00FDEF  0007               	dw	7
  1828  00FDF1  00E0               	dw	224
  1829  00FDF3  0000               	dw	0
  1830  00FDF5  0010               	dw	16
  1831  00FDF7  0000               	dw	0
  1832  00FDF9  0000               	dw	0
  1833  00FDFB  0000               	dw	0
  1834  00FDFD  0009               	dw	9
  1835  00FDFF  0010               	dw	16
  1836  00FE01  0010               	dw	16
  1837  00FE03  0020               	dw	32
  1838  00FE05  0008               	dw	8
  1839  00FE07  0040               	dw	64
  1840  00FE09  0004               	dw	4
  1841  00FE0B  0080               	dw	128
  1842  00FE0D  0003               	dw	3
  1843  00FE0F  0080               	dw	128
  1844  00FE11  0003               	dw	3
  1845  00FE13  0040               	dw	64
  1846  00FE15  0004               	dw	4
  1847  00FE17  0020               	dw	32
  1848  00FE19  0008               	dw	8
  1849  00FE1B  0010               	dw	16
  1850  00FE1D  0010               	dw	16
  1851  00FE1F  0000               	dw	0
  1852  00FE21  0000               	dw	0
  1853  00FE23  0009               	dw	9
  1854  00FE25  0010               	dw	16
  1855  00FE27  0000               	dw	0
  1856  00FE29  00E0               	dw	224
  1857  00FE2B  0000               	dw	0
  1858  00FE2D  0000               	dw	0
  1859  00FE2F  0083               	dw	131
  1860  00FE31  0000               	dw	0
  1861  00FE33  007C               	dw	124
  1862  00FE35  0000               	dw	0
  1863  00FE37  000C               	dw	12
  1864  00FE39  0000               	dw	0
  1865  00FE3B  0003               	dw	3
  1866  00FE3D  00E0               	dw	224
  1867  00FE3F  0000               	dw	0
  1868  00FE41  0010               	dw	16
  1869  00FE43  0000               	dw	0
  1870  00FE45  0000               	dw	0
  1871  00FE47  0000               	dw	0
  1872  00FE49  0008               	dw	8
  1873  00FE4B  0010               	dw	16
  1874  00FE4D  0010               	dw	16
  1875  00FE4F  0010               	dw	16
  1876  00FE51  0018               	dw	24
  1877  00FE53  0010               	dw	16
  1878  00FE55  0016               	dw	22
  1879  00FE57  0010               	dw	16
  1880  00FE59  0011               	dw	17
  1881  00FE5B  00D0               	dw	208
  1882  00FE5D  0010               	dw	16
  1883  00FE5F  0030               	dw	48
  1884  00FE61  0010               	dw	16
  1885  00FE63  0010               	dw	16
  1886  00FE65  0010               	dw	16
  1887  00FE67  0000               	dw	0
  1888  00FE69  0000               	dw	0
  1889  00FE6B  0007               	dw	7
  1890  00FE6D  0000               	dw	0
  1891  00FE6F  0000               	dw	0
  1892  00FE71  0000               	dw	0
  1893  00FE73  0001               	dw	1
  1894  00FE75  0080               	dw	128
  1895  00FE77  0002               	dw	2
  1896  00FE79  00FC               	dw	252
  1897  00FE7B  007E               	dw	126
  1898  00FE7D  0002               	dw	2
  1899  00FE7F  0080               	dw	128
  1900  00FE81  0002               	dw	2
  1901  00FE83  0080               	dw	128
  1902  00FE85  0000               	dw	0
  1903  00FE87  0000               	dw	0
  1904  00FE89  0007               	dw	7
  1905  00FE8B  0000               	dw	0
  1906  00FE8D  0000               	dw	0
  1907  00FE8F  0000               	dw	0
  1908  00FE91  0000               	dw	0
  1909  00FE93  0000               	dw	0
  1910  00FE95  0000               	dw	0
  1911  00FE97  0000               	dw	0
  1912  00FE99  0000               	dw	0
  1913  00FE9B  0000               	dw	0
  1914  00FE9D  0000               	dw	0
  1915  00FE9F  00FE               	dw	254
  1916  00FEA1  00FF               	dw	255
  1917  00FEA3  0000               	dw	0
  1918  00FEA5  0000               	dw	0
  1919  00FEA7  0006               	dw	6
  1920  00FEA9  0002               	dw	2
  1921  00FEAB  0080               	dw	128
  1922  00FEAD  0002               	dw	2
  1923  00FEAF  0080               	dw	128
  1924  00FEB1  00FC               	dw	252
  1925  00FEB3  007E               	dw	126
  1926  00FEB5  0080               	dw	128
  1927  00FEB7  0002               	dw	2
  1928  00FEB9  0000               	dw	0
  1929  00FEBB  0001               	dw	1
  1930  00FEBD  0000               	dw	0
  1931  00FEBF  0000               	dw	0
  1932  00FEC1  000A               	dw	10
  1933  00FEC3  0000               	dw	0
  1934  00FEC5  0000               	dw	0
  1935  00FEC7  0080               	dw	128
  1936  00FEC9  0000               	dw	0
  1937  00FECB  0040               	dw	64
  1938  00FECD  0000               	dw	0
  1939  00FECF  0040               	dw	64
  1940  00FED1  0000               	dw	0
  1941  00FED3  0040               	dw	64
  1942  00FED5  0000               	dw	0
  1943  00FED7  0080               	dw	128
  1944  00FED9  0000               	dw	0
  1945  00FEDB  0080               	dw	128
  1946  00FEDD  0000               	dw	0
  1947  00FEDF  0080               	dw	128
  1948  00FEE1  0000               	dw	0
  1949  00FEE3  0040               	dw	64
  1950  00FEE5  0000               	dw	0
  1951  00FEE7  0000               	dw	0
  1952  00FEE9  0000               	dw	0
  1953  00FEEB  0005               	dw	5
  1954  00FEED  00FF               	dw	255
  1955  00FEEF  000F               	dw	15
  1956  00FEF1  0001               	dw	1
  1957  00FEF3  0008               	dw	8
  1958  00FEF5  0001               	dw	1
  1959  00FEF7  0008               	dw	8
  1960  00FEF9  00FF               	dw	255
  1961  00FEFB  000F               	dw	15
  1962  00FEFD  0000               	dw	0
  1963  00FEFF  0000               	dw	0
  1964  00FF01                     __end_of_font:
  1965                           	opt callstack 0
  1966  00FF01                     _spi_configuration:
  1967                           	opt callstack 0
  1968  00FF01  00                 	db	0
  1969  00FF02  40                 	db	64
  1970  00FF03  01                 	db	1
  1971  00FF04  00                 	db	0
  1972  00FF05                     __end_of_spi_configuration:
  1973                           	opt callstack 0
  1974  00FF05                     STR_8:
  1975  00FF05  0A                 	db	10
  1976  00FF06  0A                 	db	10
  1977  00FF07  0D                 	db	13
  1978  00FF08  54                 	db	84	;'T'
  1979  00FF09  55                 	db	85	;'U'
  1980  00FF0A  52                 	db	82	;'R'
  1981  00FF0B  4E                 	db	78	;'N'
  1982  00FF0C  20                 	db	32
  1983  00FF0D  56                 	db	86	;'V'
  1984  00FF0E  41                 	db	65	;'A'
  1985  00FF0F  4C                 	db	76	;'L'
  1986  00FF10  55                 	db	85	;'U'
  1987  00FF11  45                 	db	69	;'E'
  1988  00FF12  53                 	db	83	;'S'
  1989  00FF13  20                 	db	32
  1990  00FF14  53                 	db	83	;'S'
  1991  00FF15  41                 	db	65	;'A'
  1992  00FF16  56                 	db	86	;'V'
  1993  00FF17  45                 	db	69	;'E'
  1994  00FF18  44                 	db	68	;'D'
  1995  00FF19  20                 	db	32
  1996  00FF1A  20                 	db	32
  1997  00FF1B  20                 	db	32
  1998  00FF1C  4F                 	db	79	;'O'
  1999  00FF1D  4E                 	db	78	;'N'
  2000  00FF1E  3A                 	db	58	;':'
  2001  00FF1F  20                 	db	32
  2002  00FF20  25                 	db	37
  2003  00FF21  64                 	db	100	;'d'
  2004  00FF22  20                 	db	32
  2005  00FF23  4F                 	db	79	;'O'
  2006  00FF24  46                 	db	70	;'F'
  2007  00FF25  46                 	db	70	;'F'
  2008  00FF26  3A                 	db	58	;':'
  2009  00FF27  20                 	db	32
  2010  00FF28  25                 	db	37
  2011  00FF29  64                 	db	100	;'d'
  2012  00FF2A  0A                 	db	10
  2013  00FF2B  0D                 	db	13
  2014  00FF2C  00                 	db	0
  2015  00FF2D                     STR_5:
  2016  00FF2D  0A                 	db	10
  2017  00FF2E  0D                 	db	13
  2018  00FF2F  41                 	db	65	;'A'
  2019  00FF30  43                 	db	67	;'C'
  2020  00FF31  54                 	db	84	;'T'
  2021  00FF32  55                 	db	85	;'U'
  2022  00FF33  41                 	db	65	;'A'
  2023  00FF34  4C                 	db	76	;'L'
  2024  00FF35  20                 	db	32
  2025  00FF36  54                 	db	84	;'T'
  2026  00FF37  55                 	db	85	;'U'
  2027  00FF38  52                 	db	82	;'R'
  2028  00FF39  4E                 	db	78	;'N'
  2029  00FF3A  20                 	db	32
  2030  00FF3B  56                 	db	86	;'V'
  2031  00FF3C  41                 	db	65	;'A'
  2032  00FF3D  4C                 	db	76	;'L'
  2033  00FF3E  55                 	db	85	;'U'
  2034  00FF3F  45                 	db	69	;'E'
  2035  00FF40  53                 	db	83	;'S'
  2036  00FF41  20                 	db	32
  2037  00FF42  20                 	db	32
  2038  00FF43  4F                 	db	79	;'O'
  2039  00FF44  4E                 	db	78	;'N'
  2040  00FF45  3A                 	db	58	;':'
  2041  00FF46  20                 	db	32
  2042  00FF47  25                 	db	37
  2043  00FF48  64                 	db	100	;'d'
  2044  00FF49  20                 	db	32
  2045  00FF4A  4F                 	db	79	;'O'
  2046  00FF4B  46                 	db	70	;'F'
  2047  00FF4C  46                 	db	70	;'F'
  2048  00FF4D  3A                 	db	58	;':'
  2049  00FF4E  20                 	db	32
  2050  00FF4F  25                 	db	37
  2051  00FF50  64                 	db	100	;'d'
  2052  00FF51  0A                 	db	10
  2053  00FF52  0D                 	db	13
  2054  00FF53  00                 	db	0
  2055  00FF54                     STR_2:
  2056  00FF54  45                 	db	69	;'E'
  2057  00FF55  41                 	db	65	;'A'
  2058  00FF56  55                 	db	85	;'U'
  2059  00FF57  20                 	db	32
  2060  00FF58  20                 	db	32
  2061  00FF59  20                 	db	32
  2062  00FF5A  20                 	db	32
  2063  00FF5B  20                 	db	32
  2064  00FF5C  20                 	db	32
  2065  00FF5D  20                 	db	32
  2066  00FF5E  20                 	db	32
  2067  00FF5F  20                 	db	32
  2068  00FF60  20                 	db	32
  2069  00FF61  53                 	db	83	;'S'
  2070  00FF62  45                 	db	69	;'E'
  2071  00FF63  45                 	db	69	;'E'
  2072  00FF64  56                 	db	86	;'V'
  2073  00FF65  20                 	db	32
  2074  00FF66  20                 	db	32
  2075  00FF67  20                 	db	32
  2076  00FF68  20                 	db	32
  2077  00FF69  20                 	db	32
  2078  00FF6A  20                 	db	32
  2079  00FF6B  20                 	db	32
  2080  00FF6C  20                 	db	32
  2081  00FF6D  20                 	db	32
  2082  00FF6E  41                 	db	65	;'A'
  2083  00FF6F  55                 	db	85	;'U'
  2084  00FF70  4C                 	db	76	;'L'
  2085  00FF71  41                 	db	65	;'A'
  2086  00FF72  5F                 	db	95	;'_'
  2087  00FF73  35                 	db	53	;'5'
  2088  00FF74  00                 	db	0
  2089  00FF75                     STR_4:
  2090  00FF75  43                 	db	67	;'C'
  2091  00FF76  6F                 	db	111	;'o'
  2092  00FF77  6E                 	db	110	;'n'
  2093  00FF78  66                 	db	102	;'f'
  2094  00FF79  69                 	db	105	;'i'
  2095  00FF7A  67                 	db	103	;'g'
  2096  00FF7B  75                 	db	117	;'u'
  2097  00FF7C  72                 	db	114	;'r'
  2098  00FF7D  61                 	db	97	;'a'
  2099  00FF7E  74                 	db	116	;'t'
  2100  00FF7F  69                 	db	105	;'i'
  2101  00FF80  6F                 	db	111	;'o'
  2102  00FF81  6E                 	db	110	;'n'
  2103  00FF82  20                 	db	32
  2104  00FF83  4D                 	db	77	;'M'
  2105  00FF84  4F                 	db	79	;'O'
  2106  00FF85  44                 	db	68	;'D'
  2107  00FF86  45                 	db	69	;'E'
  2108  00FF87  20                 	db	32
  2109  00FF88  0A                 	db	10
  2110  00FF89  0D                 	db	13
  2111  00FF8A  00                 	db	0
  2112  00FF8B                     STR_7:
  2113  00FF8B  0A                 	db	10
  2114  00FF8C  0D                 	db	13
  2115  00FF8D  54                 	db	84	;'T'
  2116  00FF8E  75                 	db	117	;'u'
  2117  00FF8F  72                 	db	114	;'r'
  2118  00FF90  6E                 	db	110	;'n'
  2119  00FF91  20                 	db	32
  2120  00FF92  4F                 	db	79	;'O'
  2121  00FF93  46                 	db	70	;'F'
  2122  00FF94  46                 	db	70	;'F'
  2123  00FF95  20                 	db	32
  2124  00FF96  56                 	db	86	;'V'
  2125  00FF97  61                 	db	97	;'a'
  2126  00FF98  6C                 	db	108	;'l'
  2127  00FF99  75                 	db	117	;'u'
  2128  00FF9A  65                 	db	101	;'e'
  2129  00FF9B  3A                 	db	58	;':'
  2130  00FF9C  20                 	db	32
  2131  00FF9D  0A                 	db	10
  2132  00FF9E  0D                 	db	13
  2133  00FF9F  00                 	db	0
  2134  00FFA0                     STR_6:
  2135  00FFA0  0A                 	db	10
  2136  00FFA1  0D                 	db	13
  2137  00FFA2  54                 	db	84	;'T'
  2138  00FFA3  75                 	db	117	;'u'
  2139  00FFA4  72                 	db	114	;'r'
  2140  00FFA5  6E                 	db	110	;'n'
  2141  00FFA6  20                 	db	32
  2142  00FFA7  4F                 	db	79	;'O'
  2143  00FFA8  4E                 	db	78	;'N'
  2144  00FFA9  20                 	db	32
  2145  00FFAA  56                 	db	86	;'V'
  2146  00FFAB  61                 	db	97	;'a'
  2147  00FFAC  6C                 	db	108	;'l'
  2148  00FFAD  75                 	db	117	;'u'
  2149  00FFAE  65                 	db	101	;'e'
  2150  00FFAF  3A                 	db	58	;':'
  2151  00FFB0  20                 	db	32
  2152  00FFB1  0A                 	db	10
  2153  00FFB2  0D                 	db	13
  2154  00FFB3  00                 	db	0
  2155  00FFB4                     STR_1:
  2156  00FFB4  0C                 	db	12
  2157  00FFB5  0D                 	db	13
  2158  00FFB6  50                 	db	80	;'P'
  2159  00FFB7  4F                 	db	79	;'O'
  2160  00FFB8  54                 	db	84	;'T'
  2161  00FFB9  3A                 	db	58	;':'
  2162  00FFBA  20                 	db	32
  2163  00FFBB  25                 	db	37
  2164  00FFBC  33                 	db	51	;'3'
  2165  00FFBD  64                 	db	100	;'d'
  2166  00FFBE  20                 	db	32
  2167  00FFBF  0D                 	db	13
  2168  00FFC0  00                 	db	0
  2169  00FFC1                     STR_3:
  2170  00FFC1  50                 	db	80	;'P'
  2171  00FFC2  4F                 	db	79	;'O'
  2172  00FFC3  54                 	db	84	;'T'
  2173  00FFC4  3A                 	db	58	;':'
  2174  00FFC5  20                 	db	32
  2175  00FFC6  25                 	db	37
  2176  00FFC7  33                 	db	51	;'3'
  2177  00FFC8  64                 	db	100	;'d'
  2178  00FFC9  20                 	db	32
  2179  00FFCA  25                 	db	37
  2180  00FFCB  25                 	db	37
  2181  00FFCC  00                 	db	0
  2182  00FFCD                     STR_85:
  2183  00FFCD  68                 	db	104	;'h'
  2184  00FFCE  68                 	db	104	;'h'
  2185  00FFCF  58                 	db	88	;'X'
  2186  00FFD0  00                 	db	0
  2187  00FFD1                     STR_9:
  2188  00FFD1  68                 	db	104	;'h'
  2189  00FFD2  68                 	db	104	;'h'
  2190  00FFD3  64                 	db	100	;'d'
  2191  00FFD4  00                 	db	0
  2192  00FFD5                     STR_13:
  2193  00FFD5  68                 	db	104	;'h'
  2194  00FFD6  68                 	db	104	;'h'
  2195  00FFD7  69                 	db	105	;'i'
  2196  00FFD8  00                 	db	0
  2197  00FFD9                     STR_51:
  2198  00FFD9  68                 	db	104	;'h'
  2199  00FFDA  68                 	db	104	;'h'
  2200  00FFDB  6E                 	db	110	;'n'
  2201  00FFDC  00                 	db	0
  2202  00FFDD                     STR_36:
  2203  00FFDD  68                 	db	104	;'h'
  2204  00FFDE  68                 	db	104	;'h'
  2205  00FFDF  6F                 	db	111	;'o'
  2206  00FFE0  00                 	db	0
  2207  00FFE1                     STR_66:
  2208  00FFE1  68                 	db	104	;'h'
  2209  00FFE2  68                 	db	104	;'h'
  2210  00FFE3  75                 	db	117	;'u'
  2211  00FFE4  00                 	db	0
  2212  00FFE5                     STR_81:
  2213  00FFE5  68                 	db	104	;'h'
  2214  00FFE6  68                 	db	104	;'h'
  2215  00FFE7  78                 	db	120	;'x'
  2216  00FFE8  00                 	db	0
  2217  00FFE9                     STR_103:
  2218  00FFE9  7A                 	db	122	;'z'
  2219  00FFEA  58                 	db	88	;'X'
  2220  00FFEB  00                 	db	0
  2221  00FFEC                     STR_27:
  2222  00FFEC  7A                 	db	122	;'z'
  2223  00FFED  64                 	db	100	;'d'
  2224  00FFEE  00                 	db	0
  2225  00FFEF                     STR_31:
  2226  00FFEF  7A                 	db	122	;'z'
  2227  00FFF0  69                 	db	105	;'i'
  2228  00FFF1  00                 	db	0
  2229  00FFF2                     STR_61:
  2230  00FFF2  7A                 	db	122	;'z'
  2231  00FFF3  6E                 	db	110	;'n'
  2232  00FFF4  00                 	db	0
  2233  00FFF5                     STR_46:
  2234  00FFF5  7A                 	db	122	;'z'
  2235  00FFF6  6F                 	db	111	;'o'
  2236  00FFF7  00                 	db	0
  2237  00FFF8                     STR_76:
  2238  00FFF8  7A                 	db	122	;'z'
  2239  00FFF9  75                 	db	117	;'u'
  2240  00FFFA  00                 	db	0
  2241  00FFFB                     STR_99:
  2242  00FFFB  7A                 	db	122	;'z'
  2243  00FFFC  78                 	db	120	;'x'
  2244  00FFFD  00                 	db	0
  2245  0000                     
  2246                           ; #config settings
  2247  00FFFE  00                 	db	0	; dummy byte at the end
  2248  0000                     
  2249                           	psect	nvCOMRAM
  2250  00005B                     __pnvCOMRAM:
  2251                           	opt callstack 0
  2252  00005B                     _timer0ReloadVal:
  2253                           	opt callstack 0
  2254  00005B                     	ds	2
  2255                           
  2256                           	psect	nvBANK0
  2257  0000C0                     __pnvBANK0:
  2258                           	opt callstack 0
  2259  0000C0                     _EUSART1_ErrorHandler:
  2260                           	opt callstack 0
  2261  0000C0                     	ds	2
  2262  0000C2                     _EUSART1_OverrunErrorHandler:
  2263                           	opt callstack 0
  2264  0000C2                     	ds	2
  2265  0000C4                     _EUSART1_FramingErrorHandler:
  2266                           	opt callstack 0
  2267  0000C4                     	ds	2
  2268  0000C6                     _timer1ReloadVal:
  2269                           	opt callstack 0
  2270  0000C6                     	ds	2
  2271  0000C8                     _IOCB4_InterruptHandler:
  2272                           	opt callstack 0
  2273  0000C8                     	ds	2
  2274  0000                     _IOCBbits	set	3930
  2275  0000                     _WPUB	set	3931
  2276  0000                     _ANCON1	set	3932
  2277  0000                     _ANCON0	set	3933
  2278  0000                     _LATEbits	set	3981
  2279  0000                     _SSPSTATbits	set	4039
  2280  0000                     _LATAbits	set	3977
  2281  0000                     _PORTB	set	3969
  2282  0000                     _PORTBbits	set	3969
  2283  0000                     _PIR4bits	set	4023
  2284  0000                     _EEDATA	set	3955
  2285  0000                     _EEADR	set	3956
  2286  0000                     _EEADRH	set	3957
  2287  0000                     _EECON2	set	3966
  2288  0000                     _EECON1bits	set	3967
  2289  0000                     _TABLAT	set	4085
  2290  0000                     _TBLPTRL	set	4086
  2291  0000                     _TBLPTRH	set	4087
  2292  0000                     _TBLPTRU	set	4088
  2293  0000                     _T0CON	set	4053
  2294  0000                     _TMR0L	set	4054
  2295  0000                     _TMR0H	set	4055
  2296  0000                     _T0CONbits	set	4053
  2297  0000                     _RCONbits	set	4048
  2298  0000                     _TXREG1	set	4013
  2299  0000                     _RCREG1	set	4014
  2300  0000                     _RCSTA1bits	set	4011
  2301  0000                     _TXSTA1bits	set	4012
  2302  0000                     _SPBRGH1	set	3965
  2303  0000                     _SPBRG1	set	4015
  2304  0000                     _TXSTA1	set	4012
  2305  0000                     _RCSTA1	set	4011
  2306  0000                     _BAUDCON1	set	4007
  2307  0000                     _T1GCONbits	set	4010
  2308  0000                     _T1CONbits	set	4045
  2309  0000                     _T1CON	set	4045
  2310  0000                     _TMR1L	set	4046
  2311  0000                     _TMR1H	set	4047
  2312  0000                     _T1GCON	set	4010
  2313  0000                     _ADCON0bits	set	4034
  2314  0000                     _ADRESL	set	4035
  2315  0000                     _ADRESH	set	4036
  2316  0000                     _ADCON2	set	4032
  2317  0000                     _ADCON1	set	4033
  2318  0000                     _ADCON0	set	4034
  2319  0000                     _INTCONbits	set	4082
  2320  0000                     _INTCON2bits	set	4081
  2321  0000                     _TRISD	set	3989
  2322  0000                     _TRISC	set	3988
  2323  0000                     _TRISB	set	3987
  2324  0000                     _TRISA	set	3986
  2325  0000                     _TRISE	set	3990
  2326  0000                     _LATC	set	3979
  2327  0000                     _LATB	set	3978
  2328  0000                     _LATA	set	3977
  2329  0000                     _LATD	set	3980
  2330  0000                     _LATE	set	3981
  2331  0000                     _PIR1bits	set	3998
  2332  0000                     _SSPBUF	set	4041
  2333  0000                     _SSPCON2	set	4037
  2334  0000                     _SSPCON1bits	set	4038
  2335  0000                     _TRISCbits	set	3988
  2336  0000                     _SSPADD	set	4040
  2337  0000                     _SSPCON1	set	4038
  2338  0000                     _SSPSTAT	set	4039
  2339  0000                     _REFOCON	set	3994
  2340  0000                     _OSCTUNE	set	3995
  2341  0000                     _OSCCON2	set	4050
  2342  0000                     _OSCCON	set	4051
  2343                           
  2344                           	psect	cinit
  2345  005D9C                     __pcinit:
  2346                           	opt callstack 0
  2347  005D9C                     start_initialization:
  2348                           	opt callstack 0
  2349  005D9C                     __initialization:
  2350                           	opt callstack 0
  2351                           
  2352                           ; Initialize objects allocated to BANK1 (4 bytes)
  2353                           ; load TBLPTR registers with __pidataBANK1
  2354  005D9C  0ED3               	movlw	low __pidataBANK1
  2355  005D9E  6EF6               	movwf	tblptrl,c
  2356  005DA0  0E69               	movlw	high __pidataBANK1
  2357  005DA2  6EF7               	movwf	tblptrh,c
  2358  005DA4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2359  005DA6  6EF8               	movwf	tblptru,c
  2360  005DA8  EE01  F0C7         	lfsr	0,__pdataBANK1
  2361  005DAC  EE10 F004          	lfsr	1,4
  2362  005DB0                     copy_data0:
  2363  005DB0  0009               	tblrd		*+
  2364  005DB2  CFF5 FFEE          	movff	tablat,postinc0
  2365  005DB6  50E5               	movf	postdec1,w,c
  2366  005DB8  50E1               	movf	fsr1l,w,c
  2367  005DBA  E1FA               	bnz	copy_data0
  2368                           
  2369                           ; Initialize objects allocated to BANK0 (7 bytes)
  2370                           ; load TBLPTR registers with __pidataBANK0
  2371  005DBC  0ECC               	movlw	low __pidataBANK0
  2372  005DBE  6EF6               	movwf	tblptrl,c
  2373  005DC0  0E69               	movlw	high __pidataBANK0
  2374  005DC2  6EF7               	movwf	tblptrh,c
  2375  005DC4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2376  005DC6  6EF8               	movwf	tblptru,c
  2377  005DC8  EE00  F0CA         	lfsr	0,__pdataBANK0
  2378  005DCC  EE10 F007          	lfsr	1,7
  2379  005DD0                     copy_data1:
  2380  005DD0  0009               	tblrd		*+
  2381  005DD2  CFF5 FFEE          	movff	tablat,postinc0
  2382  005DD6  50E5               	movf	postdec1,w,c
  2383  005DD8  50E1               	movf	fsr1l,w,c
  2384  005DDA  E1FA               	bnz	copy_data1
  2385                           
  2386                           ; Clear objects allocated to BANK1 (74 bytes)
  2387  005DDC  EE01  F07D         	lfsr	0,__pbssBANK1
  2388  005DE0  0E4A               	movlw	74
  2389  005DE2                     clear_0:
  2390  005DE2  6AEE               	clrf	postinc0,c
  2391  005DE4  06E8               	decf	wreg,f,c
  2392  005DE6  E1FD               	bnz	clear_0
  2393                           
  2394                           ; Clear objects allocated to BANK0 (15 bytes)
  2395  005DE8  EE00  F0B1         	lfsr	0,__pbssBANK0
  2396  005DEC  0E0F               	movlw	15
  2397  005DEE                     clear_1:
  2398  005DEE  6AEE               	clrf	postinc0,c
  2399  005DF0  06E8               	decf	wreg,f,c
  2400  005DF2  E1FD               	bnz	clear_1
  2401                           
  2402                           ; Clear objects allocated to COMRAM (2 bytes)
  2403  005DF4  6A5E               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2404  005DF6  6A5D               	clrf	__pbssCOMRAM& (0+255),c
  2405  005DF8                     end_of_initialization:
  2406                           	opt callstack 0
  2407  005DF8                     __end_of__initialization:
  2408                           	opt callstack 0
  2409  005DF8  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2410  005DFA  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2411  005DFC  0100               	movlb	0
  2412  005DFE  EF07  F015         	goto	_main	;jump to C main() function
  2413                           
  2414                           	psect	bssCOMRAM
  2415  00005D                     __pbssCOMRAM:
  2416                           	opt callstack 0
  2417  00005D                     _ADC_InterruptHandler:
  2418                           	opt callstack 0
  2419  00005D                     	ds	2
  2420                           
  2421                           	psect	bssBANK0
  2422  0000B1                     __pbssBANK0:
  2423                           	opt callstack 0
  2424  0000B1                     _adc_perc:
  2425                           	opt callstack 0
  2426  0000B1                     	ds	4
  2427  0000B5                     _width:
  2428                           	opt callstack 0
  2429  0000B5                     	ds	2
  2430  0000B7                     _prec:
  2431                           	opt callstack 0
  2432  0000B7                     	ds	2
  2433  0000B9                     _flags:
  2434                           	opt callstack 0
  2435  0000B9                     	ds	2
  2436  0000BB                     _global_bg_color:
  2437                           	opt callstack 0
  2438  0000BB                     	ds	2
  2439  0000BD                     _acess:
  2440                           	opt callstack 0
  2441  0000BD                     	ds	2
  2442  0000BF                     _eusart1RxLastError:
  2443                           	opt callstack 0
  2444  0000BF                     	ds	1
  2445                           
  2446                           	psect	dataBANK0
  2447  0000CA                     __pdataBANK0:
  2448                           	opt callstack 0
  2449  0000CA                     stoa@F1152:
  2450                           	opt callstack 0
  2451  0000CA                     	ds	7
  2452                           
  2453                           	psect	bssBANK1
  2454  00017D                     __pbssBANK1:
  2455                           	opt callstack 0
  2456  00017D                     _errno:
  2457                           	opt callstack 0
  2458  00017D                     	ds	2
  2459  00017F                     _nout:
  2460                           	opt callstack 0
  2461  00017F                     	ds	2
  2462  000181                     _rx_data:
  2463                           	opt callstack 0
  2464  000181                     	ds	2
  2465  000183                     _b:
  2466                           	opt callstack 0
  2467  000183                     	ds	2
  2468  000185                     _a:
  2469                           	opt callstack 0
  2470  000185                     	ds	2
  2471  000187                     _adc_value:
  2472                           	opt callstack 0
  2473  000187                     	ds	2
  2474  000189                     _dbuf:
  2475                           	opt callstack 0
  2476  000189                     	ds	32
  2477  0001A9                     _string:
  2478                           	opt callstack 0
  2479  0001A9                     	ds	30
  2480                           
  2481                           	psect	dataBANK1
  2482  0001C7                     __pdataBANK1:
  2483                           	opt callstack 0
  2484  0001C7                     _turn_off_value:
  2485                           	opt callstack 0
  2486  0001C7                     	ds	2
  2487  0001C9                     _turn_on_value:
  2488                           	opt callstack 0
  2489  0001C9                     	ds	2
  2490                           
  2491                           	psect	cstackBANK1
  2492  000100                     __pcstackBANK1:
  2493                           	opt callstack 0
  2494  000100                     ?_dtoa:
  2495                           	opt callstack 0
  2496  000100                     ?_otoa:
  2497                           	opt callstack 0
  2498  000100                     ?_utoa:
  2499                           	opt callstack 0
  2500  000100                     ?_xtoa:
  2501                           	opt callstack 0
  2502  000100                     lcd_draw_string@x:
  2503                           	opt callstack 0
  2504  000100                     dtoa@fp:
  2505                           	opt callstack 0
  2506  000100                     otoa@fp:
  2507                           	opt callstack 0
  2508  000100                     utoa@fp:
  2509                           	opt callstack 0
  2510  000100                     xtoa@fp:
  2511                           	opt callstack 0
  2512  000100                     read_from_usart@data:
  2513                           	opt callstack 0
  2514                           
  2515                           ; 10 bytes @ 0x0
  2516  000100                     	ds	2
  2517  000102                     lcd_draw_string@y:
  2518                           	opt callstack 0
  2519  000102                     dtoa@d:
  2520                           	opt callstack 0
  2521  000102                     otoa@d:
  2522                           	opt callstack 0
  2523  000102                     utoa@d:
  2524                           	opt callstack 0
  2525  000102                     xtoa@d:
  2526                           	opt callstack 0
  2527                           
  2528                           ; 8 bytes @ 0x2
  2529  000102                     	ds	2
  2530  000104                     lcd_draw_string@pS:
  2531                           	opt callstack 0
  2532                           
  2533                           ; 2 bytes @ 0x4
  2534  000104                     	ds	2
  2535  000106                     lcd_draw_string@fg_color:
  2536                           	opt callstack 0
  2537                           
  2538                           ; 2 bytes @ 0x6
  2539  000106                     	ds	2
  2540  000108                     lcd_draw_string@bg_color:
  2541                           	opt callstack 0
  2542                           
  2543                           ; 2 bytes @ 0x8
  2544  000108                     	ds	2
  2545  00010A                     ??_lcd_draw_string:
  2546  00010A                     ??_dtoa:
  2547  00010A                     ??_otoa:
  2548  00010A                     ??_utoa:
  2549  00010A                     xtoa@x:
  2550                           	opt callstack 0
  2551  00010A                     read_from_usart@value:
  2552                           	opt callstack 0
  2553                           
  2554                           ; 2 bytes @ 0xA
  2555  00010A                     	ds	1
  2556  00010B                     ??_xtoa:
  2557                           
  2558                           ; 1 bytes @ 0xB
  2559  00010B                     	ds	1
  2560  00010C                     read_from_usart@i:
  2561                           	opt callstack 0
  2562                           
  2563                           ; 2 bytes @ 0xC
  2564  00010C                     	ds	2
  2565  00010E                     lcd_draw_string@k:
  2566                           	opt callstack 0
  2567                           
  2568                           ; 2 bytes @ 0xE
  2569  00010E                     	ds	2
  2570  000110                     lcd_draw_string@lIndex:
  2571                           	opt callstack 0
  2572                           
  2573                           ; 2 bytes @ 0x10
  2574  000110                     	ds	2
  2575  000112                     _dtoa$1825:
  2576                           	opt callstack 0
  2577  000112                     otoa@p:
  2578                           	opt callstack 0
  2579  000112                     utoa@p:
  2580                           	opt callstack 0
  2581                           
  2582                           ; 2 bytes @ 0x12
  2583  000112                     	ds	1
  2584  000113                     _xtoa$1861:
  2585                           	opt callstack 0
  2586                           
  2587                           ; 2 bytes @ 0x13
  2588  000113                     	ds	1
  2589  000114                     dtoa@p:
  2590                           	opt callstack 0
  2591  000114                     otoa@t:
  2592                           	opt callstack 0
  2593  000114                     utoa@w:
  2594                           	opt callstack 0
  2595                           
  2596                           ; 2 bytes @ 0x14
  2597  000114                     	ds	1
  2598  000115                     _xtoa$1862:
  2599                           	opt callstack 0
  2600                           
  2601                           ; 2 bytes @ 0x15
  2602  000115                     	ds	1
  2603  000116                     dtoa@w:
  2604                           	opt callstack 0
  2605  000116                     otoa@w:
  2606                           	opt callstack 0
  2607  000116                     utoa@n:
  2608                           	opt callstack 0
  2609                           
  2610                           ; 8 bytes @ 0x16
  2611  000116                     	ds	1
  2612  000117                     xtoa@p:
  2613                           	opt callstack 0
  2614                           
  2615                           ; 2 bytes @ 0x17
  2616  000117                     	ds	1
  2617  000118                     dtoa@s:
  2618                           	opt callstack 0
  2619  000118                     otoa@n:
  2620                           	opt callstack 0
  2621                           
  2622                           ; 8 bytes @ 0x18
  2623  000118                     	ds	1
  2624  000119                     xtoa@w:
  2625                           	opt callstack 0
  2626                           
  2627                           ; 2 bytes @ 0x19
  2628  000119                     	ds	1
  2629  00011A                     dtoa@n:
  2630                           	opt callstack 0
  2631                           
  2632                           ; 8 bytes @ 0x1A
  2633  00011A                     	ds	1
  2634  00011B                     xtoa@n:
  2635                           	opt callstack 0
  2636                           
  2637                           ; 8 bytes @ 0x1B
  2638  00011B                     	ds	3
  2639  00011E                     utoa@i:
  2640                           	opt callstack 0
  2641                           
  2642                           ; 2 bytes @ 0x1E
  2643  00011E                     	ds	2
  2644  000120                     otoa@i:
  2645                           	opt callstack 0
  2646                           
  2647                           ; 2 bytes @ 0x20
  2648  000120                     	ds	2
  2649  000122                     dtoa@i:
  2650                           	opt callstack 0
  2651                           
  2652                           ; 2 bytes @ 0x22
  2653  000122                     	ds	1
  2654  000123                     xtoa@i:
  2655                           	opt callstack 0
  2656                           
  2657                           ; 2 bytes @ 0x23
  2658  000123                     	ds	2
  2659  000125                     xtoa@c:
  2660                           	opt callstack 0
  2661                           
  2662                           ; 2 bytes @ 0x25
  2663  000125                     	ds	2
  2664  000127                     ?_vfpfcnvrt:
  2665                           	opt callstack 0
  2666  000127                     vfpfcnvrt@fp:
  2667                           	opt callstack 0
  2668                           
  2669                           ; 2 bytes @ 0x27
  2670  000127                     	ds	2
  2671  000129                     vfpfcnvrt@fmt:
  2672                           	opt callstack 0
  2673                           
  2674                           ; 2 bytes @ 0x29
  2675  000129                     	ds	2
  2676  00012B                     vfpfcnvrt@ap:
  2677                           	opt callstack 0
  2678                           
  2679                           ; 2 bytes @ 0x2B
  2680  00012B                     	ds	2
  2681  00012D                     ??_vfpfcnvrt:
  2682                           
  2683                           ; 1 bytes @ 0x2D
  2684  00012D                     	ds	4
  2685  000131                     vfpfcnvrt@cp:
  2686                           	opt callstack 0
  2687                           
  2688                           ; 2 bytes @ 0x31
  2689  000131                     	ds	2
  2690  000133                     vfpfcnvrt@done:
  2691                           	opt callstack 0
  2692                           
  2693                           ; 2 bytes @ 0x33
  2694  000133                     	ds	2
  2695  000135                     _vfpfcnvrt$1876:
  2696                           	opt callstack 0
  2697                           
  2698                           ; 2 bytes @ 0x35
  2699  000135                     	ds	2
  2700  000137                     _vfpfcnvrt$1877:
  2701                           	opt callstack 0
  2702                           
  2703                           ; 2 bytes @ 0x37
  2704  000137                     	ds	2
  2705  000139                     vfpfcnvrt@ll:
  2706                           	opt callstack 0
  2707                           
  2708                           ; 8 bytes @ 0x39
  2709  000139                     	ds	8
  2710  000141                     vfpfcnvrt@vp:
  2711                           	opt callstack 0
  2712                           
  2713                           ; 2 bytes @ 0x41
  2714  000141                     	ds	2
  2715  000143                     vfpfcnvrt@c:
  2716                           	opt callstack 0
  2717                           
  2718                           ; 1 bytes @ 0x43
  2719  000143                     	ds	1
  2720  000144                     vfpfcnvrt@llu:
  2721                           	opt callstack 0
  2722                           
  2723                           ; 8 bytes @ 0x44
  2724  000144                     	ds	8
  2725  00014C                     ?_vfprintf:
  2726                           	opt callstack 0
  2727  00014C                     vfprintf@fp:
  2728                           	opt callstack 0
  2729                           
  2730                           ; 2 bytes @ 0x4C
  2731  00014C                     	ds	2
  2732  00014E                     vfprintf@fmt:
  2733                           	opt callstack 0
  2734                           
  2735                           ; 2 bytes @ 0x4E
  2736  00014E                     	ds	2
  2737  000150                     vfprintf@ap:
  2738                           	opt callstack 0
  2739                           
  2740                           ; 2 bytes @ 0x50
  2741  000150                     	ds	2
  2742  000152                     vfprintf@cfmt:
  2743                           	opt callstack 0
  2744                           
  2745                           ; 2 bytes @ 0x52
  2746  000152                     	ds	2
  2747  000154                     ?_printf:
  2748                           	opt callstack 0
  2749  000154                     ?_vsnprintf:
  2750                           	opt callstack 0
  2751  000154                     printf@fmt:
  2752                           	opt callstack 0
  2753  000154                     vsnprintf@s:
  2754                           	opt callstack 0
  2755                           
  2756                           ; 2 bytes @ 0x54
  2757  000154                     	ds	2
  2758  000156                     vsnprintf@n:
  2759                           	opt callstack 0
  2760                           
  2761                           ; 2 bytes @ 0x56
  2762  000156                     	ds	2
  2763  000158                     vsnprintf@fmt:
  2764                           	opt callstack 0
  2765                           
  2766                           ; 2 bytes @ 0x58
  2767  000158                     	ds	2
  2768  00015A                     vsnprintf@ap:
  2769                           	opt callstack 0
  2770                           
  2771                           ; 2 bytes @ 0x5A
  2772  00015A                     	ds	2
  2773  00015C                     ??_vsnprintf:
  2774  00015C                     printf@ap:
  2775                           	opt callstack 0
  2776                           
  2777                           ; 2 bytes @ 0x5C
  2778  00015C                     	ds	4
  2779  000160                     _vsnprintf$2583:
  2780                           	opt callstack 0
  2781                           
  2782                           ; 2 bytes @ 0x60
  2783  000160                     	ds	2
  2784  000162                     vsnprintf@cnt:
  2785                           	opt callstack 0
  2786                           
  2787                           ; 2 bytes @ 0x62
  2788  000162                     	ds	2
  2789  000164                     vsnprintf@f:
  2790                           	opt callstack 0
  2791                           
  2792                           ; 6 bytes @ 0x64
  2793  000164                     	ds	6
  2794  00016A                     ?_snprintf:
  2795                           	opt callstack 0
  2796  00016A                     snprintf@s:
  2797                           	opt callstack 0
  2798                           
  2799                           ; 2 bytes @ 0x6A
  2800  00016A                     	ds	2
  2801  00016C                     snprintf@n:
  2802                           	opt callstack 0
  2803                           
  2804                           ; 2 bytes @ 0x6C
  2805  00016C                     	ds	2
  2806  00016E                     snprintf@fmt:
  2807                           	opt callstack 0
  2808                           
  2809                           ; 2 bytes @ 0x6E
  2810  00016E                     	ds	8
  2811  000176                     snprintf@ap:
  2812                           	opt callstack 0
  2813                           
  2814                           ; 2 bytes @ 0x76
  2815  000176                     	ds	2
  2816  000178                     ??_main:
  2817                           
  2818                           ; 1 bytes @ 0x78
  2819  000178                     	ds	5
  2820                           
  2821                           	psect	cstackBANK0
  2822  000060                     __pcstackBANK0:
  2823                           	opt callstack 0
  2824  000060                     i2vfpfcnvrt@cp:
  2825                           	opt callstack 0
  2826                           
  2827                           ; 2 bytes @ 0x0
  2828  000060                     	ds	2
  2829  000062                     i2vfpfcnvrt@done:
  2830                           	opt callstack 0
  2831                           
  2832                           ; 2 bytes @ 0x2
  2833  000062                     	ds	2
  2834  000064                     i2_vfpfcnvrt$1876:
  2835                           	opt callstack 0
  2836                           
  2837                           ; 2 bytes @ 0x4
  2838  000064                     	ds	2
  2839  000066                     i2_vfpfcnvrt$1877:
  2840                           	opt callstack 0
  2841                           
  2842                           ; 2 bytes @ 0x6
  2843  000066                     	ds	2
  2844  000068                     i2vfpfcnvrt@ll:
  2845                           	opt callstack 0
  2846                           
  2847                           ; 8 bytes @ 0x8
  2848  000068                     	ds	8
  2849  000070                     i2vfpfcnvrt@vp:
  2850                           	opt callstack 0
  2851                           
  2852                           ; 2 bytes @ 0x10
  2853  000070                     	ds	2
  2854  000072                     i2vfpfcnvrt@c:
  2855                           	opt callstack 0
  2856                           
  2857                           ; 1 bytes @ 0x12
  2858  000072                     	ds	1
  2859  000073                     i2vfpfcnvrt@llu:
  2860                           	opt callstack 0
  2861                           
  2862                           ; 8 bytes @ 0x13
  2863  000073                     	ds	8
  2864  00007B                     ?i2_printf:
  2865                           	opt callstack 0
  2866  00007B                     i2printf@fmt:
  2867                           	opt callstack 0
  2868                           
  2869                           ; 2 bytes @ 0x1B
  2870  00007B                     	ds	6
  2871  000081                     ??_INTERRUPT_InterruptManager:
  2872                           
  2873                           ; 1 bytes @ 0x21
  2874  000081                     	ds	14
  2875  00008F                     ??_TMR1_Initialize:
  2876  00008F                     ??_TMR0_Initialize:
  2877  00008F                     ??_SPI_Open:
  2878  00008F                     ??_msDelay:
  2879  00008F                     ?_strlen:
  2880                           	opt callstack 0
  2881  00008F                     ?_isupper:
  2882                           	opt callstack 0
  2883  00008F                     ?_isalpha:
  2884                           	opt callstack 0
  2885  00008F                     ?_isdigit:
  2886                           	opt callstack 0
  2887  00008F                     ?_strncmp:
  2888                           	opt callstack 0
  2889  00008F                     ?_isspace:
  2890                           	opt callstack 0
  2891  00008F                     ?_islower:
  2892                           	opt callstack 0
  2893  00008F                     ?_ADC_GetConversion:
  2894                           	opt callstack 0
  2895  00008F                     ?___wmul:
  2896                           	opt callstack 0
  2897  00008F                     ?___lmul:
  2898                           	opt callstack 0
  2899  00008F                     ?___aodiv:
  2900                           	opt callstack 0
  2901  00008F                     ?___aomod:
  2902                           	opt callstack 0
  2903  00008F                     ?___lodiv:
  2904                           	opt callstack 0
  2905  00008F                     ?___lomod:
  2906                           	opt callstack 0
  2907  00008F                     SPI_ExchangeByte@data:
  2908                           	opt callstack 0
  2909  00008F                     _EUSART1_is_tx_ready$859:
  2910                           	opt callstack 0
  2911  00008F                     EUSART1_Write@txData:
  2912                           	opt callstack 0
  2913  00008F                     IOCB4_SetInterruptHandler@InterruptHandler:
  2914                           	opt callstack 0
  2915  00008F                     EUSART1_SetFramingErrorHandler@interruptHandler:
  2916                           	opt callstack 0
  2917  00008F                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  2918                           	opt callstack 0
  2919  00008F                     EUSART1_SetErrorHandler@interruptHandler:
  2920                           	opt callstack 0
  2921  00008F                     TMR0_WriteTimer@timerVal:
  2922                           	opt callstack 0
  2923  00008F                     DATAEE_WriteByte@bAdd:
  2924                           	opt callstack 0
  2925  00008F                     DATAEE_ReadByte@bAdd:
  2926                           	opt callstack 0
  2927  00008F                     ___wmul@multiplier:
  2928                           	opt callstack 0
  2929  00008F                     isalpha@c:
  2930                           	opt callstack 0
  2931  00008F                     isdigit@c:
  2932                           	opt callstack 0
  2933  00008F                     isspace@c:
  2934                           	opt callstack 0
  2935  00008F                     isupper@c:
  2936                           	opt callstack 0
  2937  00008F                     strlen@s:
  2938                           	opt callstack 0
  2939  00008F                     strncmp@_l:
  2940                           	opt callstack 0
  2941  00008F                     islower@c:
  2942                           	opt callstack 0
  2943  00008F                     ___lmul@multiplier:
  2944                           	opt callstack 0
  2945  00008F                     ___aodiv@dividend:
  2946                           	opt callstack 0
  2947  00008F                     ___aomod@dividend:
  2948                           	opt callstack 0
  2949  00008F                     ___lodiv@dividend:
  2950                           	opt callstack 0
  2951  00008F                     ___lomod@dividend:
  2952                           	opt callstack 0
  2953                           
  2954                           ; 8 bytes @ 0x2F
  2955  00008F                     	ds	1
  2956  000090                     SPI_Open@spiUniqueConfiguration:
  2957                           	opt callstack 0
  2958  000090                     putch@txData:
  2959                           	opt callstack 0
  2960  000090                     msDelay@ms:
  2961                           	opt callstack 0
  2962  000090                     lcd_send@value:
  2963                           	opt callstack 0
  2964                           
  2965                           ; 1 bytes @ 0x30
  2966  000090                     	ds	1
  2967  000091                     ??_isupper:
  2968  000091                     ??_isalpha:
  2969  000091                     ??_isdigit:
  2970  000091                     ??_isspace:
  2971  000091                     ??_islower:
  2972  000091                     ??_ADC_GetConversion:
  2973  000091                     DATAEE_WriteByte@bData:
  2974                           	opt callstack 0
  2975  000091                     msDelay@k:
  2976                           	opt callstack 0
  2977  000091                     lcd_send@dc:
  2978                           	opt callstack 0
  2979  000091                     ___wmul@multiplicand:
  2980                           	opt callstack 0
  2981  000091                     fputc@c:
  2982                           	opt callstack 0
  2983  000091                     strlen@a:
  2984                           	opt callstack 0
  2985  000091                     strncmp@_r:
  2986                           	opt callstack 0
  2987                           
  2988                           ; 2 bytes @ 0x31
  2989  000091                     	ds	1
  2990  000092                     DATAEE_WriteByte@GIEBitValue:
  2991                           	opt callstack 0
  2992  000092                     lcd_set_cursor_x@x:
  2993                           	opt callstack 0
  2994  000092                     lcd_set_cursor_y@y:
  2995                           	opt callstack 0
  2996  000092                     lcd_draw_pixel@color:
  2997                           	opt callstack 0
  2998                           
  2999                           ; 2 bytes @ 0x32
  3000  000092                     	ds	1
  3001  000093                     ADC_GetConversion@channel:
  3002                           	opt callstack 0
  3003  000093                     ___wmul@product:
  3004                           	opt callstack 0
  3005  000093                     fputc@fp:
  3006                           	opt callstack 0
  3007  000093                     strncmp@n:
  3008                           	opt callstack 0
  3009  000093                     ___lmul@multiplicand:
  3010                           	opt callstack 0
  3011                           
  3012                           ; 4 bytes @ 0x33
  3013  000093                     	ds	1
  3014  000094                     lcd_set_cursor@x:
  3015                           	opt callstack 0
  3016                           
  3017                           ; 2 bytes @ 0x34
  3018  000094                     	ds	1
  3019  000095                     ??_fputc:
  3020  000095                     ??_strncmp:
  3021  000095                     ?_toupper:
  3022                           	opt callstack 0
  3023  000095                     _isspace$2465:
  3024                           	opt callstack 0
  3025  000095                     toupper@c:
  3026                           	opt callstack 0
  3027                           
  3028                           ; 2 bytes @ 0x35
  3029  000095                     	ds	1
  3030  000096                     ?_atoi:
  3031                           	opt callstack 0
  3032  000096                     lcd_set_cursor@y:
  3033                           	opt callstack 0
  3034  000096                     atoi@s:
  3035                           	opt callstack 0
  3036  000096                     strncmp@l:
  3037                           	opt callstack 0
  3038                           
  3039                           ; 2 bytes @ 0x36
  3040  000096                     	ds	1
  3041  000097                     ??_toupper:
  3042  000097                     ___lmul@product:
  3043                           	opt callstack 0
  3044  000097                     ___aodiv@divisor:
  3045                           	opt callstack 0
  3046  000097                     ___aomod@divisor:
  3047                           	opt callstack 0
  3048  000097                     ___lodiv@divisor:
  3049                           	opt callstack 0
  3050  000097                     ___lomod@divisor:
  3051                           	opt callstack 0
  3052                           
  3053                           ; 8 bytes @ 0x37
  3054  000097                     	ds	1
  3055  000098                     ??_atoi:
  3056  000098                     lcd_fill@bg_color:
  3057                           	opt callstack 0
  3058  000098                     lcd_draw_char@x:
  3059                           	opt callstack 0
  3060  000098                     strncmp@r:
  3061                           	opt callstack 0
  3062                           
  3063                           ; 2 bytes @ 0x38
  3064  000098                     	ds	2
  3065  00009A                     ?_stoa:
  3066                           	opt callstack 0
  3067  00009A                     lcd_fill@height:
  3068                           	opt callstack 0
  3069  00009A                     lcd_draw_char@y:
  3070                           	opt callstack 0
  3071  00009A                     stoa@fp:
  3072                           	opt callstack 0
  3073  00009A                     fputs@s:
  3074                           	opt callstack 0
  3075                           
  3076                           ; 2 bytes @ 0x3A
  3077  00009A                     	ds	1
  3078  00009B                     ?___aldiv:
  3079                           	opt callstack 0
  3080  00009B                     _toupper$2552:
  3081                           	opt callstack 0
  3082  00009B                     ___aldiv@dividend:
  3083                           	opt callstack 0
  3084                           
  3085                           ; 4 bytes @ 0x3B
  3086  00009B                     	ds	1
  3087  00009C                     lcd_fill@width:
  3088                           	opt callstack 0
  3089  00009C                     lcd_draw_char@fIndex:
  3090                           	opt callstack 0
  3091  00009C                     stoa@s:
  3092                           	opt callstack 0
  3093  00009C                     atoi@neg:
  3094                           	opt callstack 0
  3095  00009C                     fputs@fp:
  3096                           	opt callstack 0
  3097                           
  3098                           ; 2 bytes @ 0x3C
  3099  00009C                     	ds	2
  3100  00009E                     ??_stoa:
  3101  00009E                     fputs@c:
  3102                           	opt callstack 0
  3103  00009E                     lcd_draw_char@fg_color:
  3104                           	opt callstack 0
  3105  00009E                     _atoi$2438:
  3106                           	opt callstack 0
  3107                           
  3108                           ; 2 bytes @ 0x3E
  3109  00009E                     	ds	1
  3110  00009F                     ___aodiv@counter:
  3111                           	opt callstack 0
  3112  00009F                     ___aomod@counter:
  3113                           	opt callstack 0
  3114  00009F                     ___lomod@counter:
  3115                           	opt callstack 0
  3116  00009F                     fputs@i:
  3117                           	opt callstack 0
  3118  00009F                     ___aldiv@divisor:
  3119                           	opt callstack 0
  3120  00009F                     stoa@nuls:
  3121                           	opt callstack 0
  3122  00009F                     ___lodiv@quotient:
  3123                           	opt callstack 0
  3124                           
  3125                           ; 8 bytes @ 0x3F
  3126  00009F                     	ds	1
  3127  0000A0                     ___aodiv@sign:
  3128                           	opt callstack 0
  3129  0000A0                     ___aomod@sign:
  3130                           	opt callstack 0
  3131  0000A0                     lcd_draw_char@bg_color:
  3132                           	opt callstack 0
  3133  0000A0                     _atoi$2440:
  3134                           	opt callstack 0
  3135                           
  3136                           ; 2 bytes @ 0x40
  3137  0000A0                     	ds	1
  3138  0000A1                     ?_abs:
  3139                           	opt callstack 0
  3140  0000A1                     ?_pad:
  3141                           	opt callstack 0
  3142  0000A1                     pad@fp:
  3143                           	opt callstack 0
  3144  0000A1                     abs@a:
  3145                           	opt callstack 0
  3146  0000A1                     ___aodiv@quotient:
  3147                           	opt callstack 0
  3148                           
  3149                           ; 8 bytes @ 0x41
  3150  0000A1                     	ds	1
  3151  0000A2                     ??_lcd_draw_char:
  3152  0000A2                     _atoi$2439:
  3153                           	opt callstack 0
  3154                           
  3155                           ; 1 bytes @ 0x42
  3156  0000A2                     	ds	1
  3157  0000A3                     ??_abs:
  3158  0000A3                     ___aldiv@counter:
  3159                           	opt callstack 0
  3160  0000A3                     pad@buf:
  3161                           	opt callstack 0
  3162  0000A3                     atoi@n:
  3163                           	opt callstack 0
  3164                           
  3165                           ; 2 bytes @ 0x43
  3166  0000A3                     	ds	1
  3167  0000A4                     ___aldiv@sign:
  3168                           	opt callstack 0
  3169                           
  3170                           ; 1 bytes @ 0x44
  3171  0000A4                     	ds	1
  3172  0000A5                     ?_read_from_usart:
  3173                           	opt callstack 0
  3174  0000A5                     read_from_usart@length:
  3175                           	opt callstack 0
  3176  0000A5                     pad@p:
  3177                           	opt callstack 0
  3178  0000A5                     ___aldiv@quotient:
  3179                           	opt callstack 0
  3180                           
  3181                           ; 4 bytes @ 0x45
  3182  0000A5                     	ds	1
  3183  0000A6                     stoa@i:
  3184                           	opt callstack 0
  3185                           
  3186                           ; 2 bytes @ 0x46
  3187  0000A6                     	ds	1
  3188  0000A7                     ??_read_from_usart:
  3189  0000A7                     ??_pad:
  3190  0000A7                     ___lodiv@counter:
  3191                           	opt callstack 0
  3192                           
  3193                           ; 1 bytes @ 0x47
  3194  0000A7                     	ds	1
  3195  0000A8                     pad@i:
  3196                           	opt callstack 0
  3197  0000A8                     stoa@w:
  3198                           	opt callstack 0
  3199                           
  3200                           ; 2 bytes @ 0x48
  3201  0000A8                     	ds	2
  3202  0000AA                     pad@w:
  3203                           	opt callstack 0
  3204  0000AA                     stoa@cp:
  3205                           	opt callstack 0
  3206                           
  3207                           ; 2 bytes @ 0x4A
  3208  0000AA                     	ds	1
  3209  0000AB                     lcd_draw_char@j:
  3210                           	opt callstack 0
  3211                           
  3212                           ; 1 bytes @ 0x4B
  3213  0000AB                     	ds	1
  3214  0000AC                     ?_ctoa:
  3215                           	opt callstack 0
  3216  0000AC                     lcd_draw_char@k:
  3217                           	opt callstack 0
  3218  0000AC                     ctoa@fp:
  3219                           	opt callstack 0
  3220  0000AC                     stoa@p:
  3221                           	opt callstack 0
  3222                           
  3223                           ; 2 bytes @ 0x4C
  3224  0000AC                     	ds	1
  3225  0000AD                     lcd_draw_char@i:
  3226                           	opt callstack 0
  3227                           
  3228                           ; 1 bytes @ 0x4D
  3229  0000AD                     	ds	1
  3230  0000AE                     ctoa@c:
  3231                           	opt callstack 0
  3232  0000AE                     stoa@l:
  3233                           	opt callstack 0
  3234                           
  3235                           ; 2 bytes @ 0x4E
  3236  0000AE                     	ds	1
  3237  0000AF                     ctoa@w:
  3238                           	opt callstack 0
  3239                           
  3240                           ; 2 bytes @ 0x4F
  3241  0000AF                     	ds	2
  3242  0000B1                     
  3243                           ; 1 bytes @ 0x51
  3244                           
  3245                           	psect	cstackCOMRAM
  3246  000001                     __pcstackCOMRAM:
  3247                           	opt callstack 0
  3248  000001                     ?i2___wmul:
  3249                           	opt callstack 0
  3250  000001                     ?i2_isalpha:
  3251                           	opt callstack 0
  3252  000001                     ?i2_isdigit:
  3253                           	opt callstack 0
  3254  000001                     ?i2_isspace:
  3255                           	opt callstack 0
  3256  000001                     ?i2_isupper:
  3257                           	opt callstack 0
  3258  000001                     ?i2_strlen:
  3259                           	opt callstack 0
  3260  000001                     ?i2_strncmp:
  3261                           	opt callstack 0
  3262  000001                     ?i2_islower:
  3263                           	opt callstack 0
  3264  000001                     ?i2___aodiv:
  3265                           	opt callstack 0
  3266  000001                     ?i2___aomod:
  3267                           	opt callstack 0
  3268  000001                     ?i2___lodiv:
  3269                           	opt callstack 0
  3270  000001                     ?i2___lomod:
  3271                           	opt callstack 0
  3272  000001                     i2EUSART1_Write@txData:
  3273                           	opt callstack 0
  3274  000001                     i2TMR0_WriteTimer@timerVal:
  3275                           	opt callstack 0
  3276  000001                     i2___wmul@multiplier:
  3277                           	opt callstack 0
  3278  000001                     i2isalpha@c:
  3279                           	opt callstack 0
  3280  000001                     i2isdigit@c:
  3281                           	opt callstack 0
  3282  000001                     i2isspace@c:
  3283                           	opt callstack 0
  3284  000001                     i2isupper@c:
  3285                           	opt callstack 0
  3286  000001                     i2strlen@s:
  3287                           	opt callstack 0
  3288  000001                     i2strncmp@_l:
  3289                           	opt callstack 0
  3290  000001                     i2islower@c:
  3291                           	opt callstack 0
  3292  000001                     i2___aodiv@dividend:
  3293                           	opt callstack 0
  3294  000001                     i2___aomod@dividend:
  3295                           	opt callstack 0
  3296  000001                     i2___lodiv@dividend:
  3297                           	opt callstack 0
  3298  000001                     i2___lomod@dividend:
  3299                           	opt callstack 0
  3300                           
  3301                           ; 8 bytes @ 0x0
  3302  000001                     	ds	1
  3303  000002                     i2putch@txData:
  3304                           	opt callstack 0
  3305                           
  3306                           ; 1 bytes @ 0x1
  3307  000002                     	ds	1
  3308  000003                     ??i2_isalpha:
  3309  000003                     ??i2_isdigit:
  3310  000003                     ??i2_isspace:
  3311  000003                     ??i2_isupper:
  3312  000003                     ??i2_islower:
  3313  000003                     i2___wmul@multiplicand:
  3314                           	opt callstack 0
  3315  000003                     i2fputc@c:
  3316                           	opt callstack 0
  3317  000003                     i2strlen@a:
  3318                           	opt callstack 0
  3319  000003                     i2strncmp@_r:
  3320                           	opt callstack 0
  3321                           
  3322                           ; 2 bytes @ 0x2
  3323  000003                     	ds	2
  3324  000005                     i2___wmul@product:
  3325                           	opt callstack 0
  3326  000005                     i2fputc@fp:
  3327                           	opt callstack 0
  3328  000005                     i2strncmp@n:
  3329                           	opt callstack 0
  3330                           
  3331                           ; 2 bytes @ 0x4
  3332  000005                     	ds	2
  3333  000007                     ??i2_fputc:
  3334  000007                     ??i2_strncmp:
  3335  000007                     ?i2_toupper:
  3336                           	opt callstack 0
  3337  000007                     i2_isspace$2465:
  3338                           	opt callstack 0
  3339  000007                     i2toupper@c:
  3340                           	opt callstack 0
  3341                           
  3342                           ; 2 bytes @ 0x6
  3343  000007                     	ds	1
  3344  000008                     ?i2_atoi:
  3345                           	opt callstack 0
  3346  000008                     i2atoi@s:
  3347                           	opt callstack 0
  3348  000008                     i2strncmp@l:
  3349                           	opt callstack 0
  3350                           
  3351                           ; 2 bytes @ 0x7
  3352  000008                     	ds	1
  3353  000009                     ??i2_toupper:
  3354  000009                     i2___aodiv@divisor:
  3355                           	opt callstack 0
  3356  000009                     i2___aomod@divisor:
  3357                           	opt callstack 0
  3358  000009                     i2___lodiv@divisor:
  3359                           	opt callstack 0
  3360  000009                     i2___lomod@divisor:
  3361                           	opt callstack 0
  3362                           
  3363                           ; 8 bytes @ 0x8
  3364  000009                     	ds	1
  3365  00000A                     ??i2_atoi:
  3366  00000A                     i2strncmp@r:
  3367                           	opt callstack 0
  3368                           
  3369                           ; 2 bytes @ 0x9
  3370  00000A                     	ds	2
  3371  00000C                     ?i2_stoa:
  3372                           	opt callstack 0
  3373  00000C                     i2stoa@fp:
  3374                           	opt callstack 0
  3375  00000C                     i2fputs@s:
  3376                           	opt callstack 0
  3377                           
  3378                           ; 2 bytes @ 0xB
  3379  00000C                     	ds	1
  3380  00000D                     i2_toupper$2552:
  3381                           	opt callstack 0
  3382                           
  3383                           ; 2 bytes @ 0xC
  3384  00000D                     	ds	1
  3385  00000E                     i2stoa@s:
  3386                           	opt callstack 0
  3387  00000E                     i2atoi@neg:
  3388                           	opt callstack 0
  3389  00000E                     i2fputs@fp:
  3390                           	opt callstack 0
  3391                           
  3392                           ; 2 bytes @ 0xD
  3393  00000E                     	ds	2
  3394  000010                     ??i2_stoa:
  3395  000010                     i2fputs@c:
  3396                           	opt callstack 0
  3397  000010                     i2_atoi$2438:
  3398                           	opt callstack 0
  3399                           
  3400                           ; 2 bytes @ 0xF
  3401  000010                     	ds	1
  3402  000011                     i2___aodiv@counter:
  3403                           	opt callstack 0
  3404  000011                     i2___aomod@counter:
  3405                           	opt callstack 0
  3406  000011                     i2___lomod@counter:
  3407                           	opt callstack 0
  3408  000011                     i2fputs@i:
  3409                           	opt callstack 0
  3410  000011                     i2stoa@nuls:
  3411                           	opt callstack 0
  3412  000011                     i2___lodiv@quotient:
  3413                           	opt callstack 0
  3414                           
  3415                           ; 8 bytes @ 0x10
  3416  000011                     	ds	1
  3417  000012                     i2___aodiv@sign:
  3418                           	opt callstack 0
  3419  000012                     i2___aomod@sign:
  3420                           	opt callstack 0
  3421  000012                     i2_atoi$2440:
  3422                           	opt callstack 0
  3423                           
  3424                           ; 2 bytes @ 0x11
  3425  000012                     	ds	1
  3426  000013                     ?i2_pad:
  3427                           	opt callstack 0
  3428  000013                     ?i2_abs:
  3429                           	opt callstack 0
  3430  000013                     i2pad@fp:
  3431                           	opt callstack 0
  3432  000013                     i2abs@a:
  3433                           	opt callstack 0
  3434  000013                     i2___aodiv@quotient:
  3435                           	opt callstack 0
  3436                           
  3437                           ; 8 bytes @ 0x12
  3438  000013                     	ds	1
  3439  000014                     i2_atoi$2439:
  3440                           	opt callstack 0
  3441                           
  3442                           ; 1 bytes @ 0x13
  3443  000014                     	ds	1
  3444  000015                     ??i2_abs:
  3445  000015                     i2pad@buf:
  3446                           	opt callstack 0
  3447  000015                     i2atoi@n:
  3448                           	opt callstack 0
  3449                           
  3450                           ; 2 bytes @ 0x14
  3451  000015                     	ds	2
  3452  000017                     i2pad@p:
  3453                           	opt callstack 0
  3454                           
  3455                           ; 2 bytes @ 0x16
  3456  000017                     	ds	1
  3457  000018                     i2stoa@i:
  3458                           	opt callstack 0
  3459                           
  3460                           ; 2 bytes @ 0x17
  3461  000018                     	ds	1
  3462  000019                     ??i2_pad:
  3463  000019                     i2___lodiv@counter:
  3464                           	opt callstack 0
  3465                           
  3466                           ; 1 bytes @ 0x18
  3467  000019                     	ds	1
  3468  00001A                     i2pad@i:
  3469                           	opt callstack 0
  3470  00001A                     i2stoa@w:
  3471                           	opt callstack 0
  3472                           
  3473                           ; 2 bytes @ 0x19
  3474  00001A                     	ds	2
  3475  00001C                     i2pad@w:
  3476                           	opt callstack 0
  3477  00001C                     i2stoa@cp:
  3478                           	opt callstack 0
  3479                           
  3480                           ; 2 bytes @ 0x1B
  3481  00001C                     	ds	2
  3482  00001E                     ?i2_ctoa:
  3483                           	opt callstack 0
  3484  00001E                     ?i2_dtoa:
  3485                           	opt callstack 0
  3486  00001E                     ?i2_otoa:
  3487                           	opt callstack 0
  3488  00001E                     ?i2_utoa:
  3489                           	opt callstack 0
  3490  00001E                     ?i2_xtoa:
  3491                           	opt callstack 0
  3492  00001E                     i2ctoa@fp:
  3493                           	opt callstack 0
  3494  00001E                     i2dtoa@fp:
  3495                           	opt callstack 0
  3496  00001E                     i2otoa@fp:
  3497                           	opt callstack 0
  3498  00001E                     i2stoa@p:
  3499                           	opt callstack 0
  3500  00001E                     i2utoa@fp:
  3501                           	opt callstack 0
  3502  00001E                     i2xtoa@fp:
  3503                           	opt callstack 0
  3504                           
  3505                           ; 2 bytes @ 0x1D
  3506  00001E                     	ds	2
  3507  000020                     i2ctoa@c:
  3508                           	opt callstack 0
  3509  000020                     i2stoa@l:
  3510                           	opt callstack 0
  3511  000020                     i2dtoa@d:
  3512                           	opt callstack 0
  3513  000020                     i2otoa@d:
  3514                           	opt callstack 0
  3515  000020                     i2utoa@d:
  3516                           	opt callstack 0
  3517  000020                     i2xtoa@d:
  3518                           	opt callstack 0
  3519                           
  3520                           ; 8 bytes @ 0x1F
  3521  000020                     	ds	1
  3522  000021                     i2ctoa@w:
  3523                           	opt callstack 0
  3524                           
  3525                           ; 2 bytes @ 0x20
  3526  000021                     	ds	7
  3527  000028                     ??i2_dtoa:
  3528  000028                     ??i2_otoa:
  3529  000028                     ??i2_utoa:
  3530  000028                     i2xtoa@x:
  3531                           	opt callstack 0
  3532                           
  3533                           ; 1 bytes @ 0x27
  3534  000028                     	ds	1
  3535  000029                     ??i2_xtoa:
  3536                           
  3537                           ; 1 bytes @ 0x28
  3538  000029                     	ds	7
  3539  000030                     i2_dtoa$1825:
  3540                           	opt callstack 0
  3541  000030                     i2otoa@p:
  3542                           	opt callstack 0
  3543  000030                     i2utoa@p:
  3544                           	opt callstack 0
  3545                           
  3546                           ; 2 bytes @ 0x2F
  3547  000030                     	ds	1
  3548  000031                     i2_xtoa$1861:
  3549                           	opt callstack 0
  3550                           
  3551                           ; 2 bytes @ 0x30
  3552  000031                     	ds	1
  3553  000032                     i2dtoa@p:
  3554                           	opt callstack 0
  3555  000032                     i2otoa@t:
  3556                           	opt callstack 0
  3557  000032                     i2utoa@w:
  3558                           	opt callstack 0
  3559                           
  3560                           ; 2 bytes @ 0x31
  3561  000032                     	ds	1
  3562  000033                     i2_xtoa$1862:
  3563                           	opt callstack 0
  3564                           
  3565                           ; 2 bytes @ 0x32
  3566  000033                     	ds	1
  3567  000034                     i2dtoa@w:
  3568                           	opt callstack 0
  3569  000034                     i2otoa@w:
  3570                           	opt callstack 0
  3571  000034                     i2utoa@n:
  3572                           	opt callstack 0
  3573                           
  3574                           ; 8 bytes @ 0x33
  3575  000034                     	ds	1
  3576  000035                     i2xtoa@p:
  3577                           	opt callstack 0
  3578                           
  3579                           ; 2 bytes @ 0x34
  3580  000035                     	ds	1
  3581  000036                     i2dtoa@s:
  3582                           	opt callstack 0
  3583  000036                     i2otoa@n:
  3584                           	opt callstack 0
  3585                           
  3586                           ; 8 bytes @ 0x35
  3587  000036                     	ds	1
  3588  000037                     i2xtoa@w:
  3589                           	opt callstack 0
  3590                           
  3591                           ; 2 bytes @ 0x36
  3592  000037                     	ds	1
  3593  000038                     i2dtoa@n:
  3594                           	opt callstack 0
  3595                           
  3596                           ; 8 bytes @ 0x37
  3597  000038                     	ds	1
  3598  000039                     i2xtoa@n:
  3599                           	opt callstack 0
  3600                           
  3601                           ; 8 bytes @ 0x38
  3602  000039                     	ds	3
  3603  00003C                     i2utoa@i:
  3604                           	opt callstack 0
  3605                           
  3606                           ; 2 bytes @ 0x3B
  3607  00003C                     	ds	2
  3608  00003E                     i2otoa@i:
  3609                           	opt callstack 0
  3610                           
  3611                           ; 2 bytes @ 0x3D
  3612  00003E                     	ds	2
  3613  000040                     i2dtoa@i:
  3614                           	opt callstack 0
  3615                           
  3616                           ; 2 bytes @ 0x3F
  3617  000040                     	ds	1
  3618  000041                     i2xtoa@i:
  3619                           	opt callstack 0
  3620                           
  3621                           ; 2 bytes @ 0x40
  3622  000041                     	ds	2
  3623  000043                     i2xtoa@c:
  3624                           	opt callstack 0
  3625                           
  3626                           ; 2 bytes @ 0x42
  3627  000043                     	ds	2
  3628  000045                     ?i2_vfpfcnvrt:
  3629                           	opt callstack 0
  3630  000045                     i2vfpfcnvrt@fp:
  3631                           	opt callstack 0
  3632                           
  3633                           ; 2 bytes @ 0x44
  3634  000045                     	ds	2
  3635  000047                     i2vfpfcnvrt@fmt:
  3636                           	opt callstack 0
  3637                           
  3638                           ; 2 bytes @ 0x46
  3639  000047                     	ds	2
  3640  000049                     i2vfpfcnvrt@ap:
  3641                           	opt callstack 0
  3642                           
  3643                           ; 2 bytes @ 0x48
  3644  000049                     	ds	2
  3645  00004B                     ??i2_vfpfcnvrt:
  3646                           
  3647                           ; 1 bytes @ 0x4A
  3648  00004B                     	ds	4
  3649  00004F                     ?i2_vfprintf:
  3650                           	opt callstack 0
  3651  00004F                     i2vfprintf@fp:
  3652                           	opt callstack 0
  3653                           
  3654                           ; 2 bytes @ 0x4E
  3655  00004F                     	ds	2
  3656  000051                     i2vfprintf@fmt:
  3657                           	opt callstack 0
  3658                           
  3659                           ; 2 bytes @ 0x50
  3660  000051                     	ds	2
  3661  000053                     i2vfprintf@ap:
  3662                           	opt callstack 0
  3663                           
  3664                           ; 2 bytes @ 0x52
  3665  000053                     	ds	2
  3666  000055                     i2vfprintf@cfmt:
  3667                           	opt callstack 0
  3668                           
  3669                           ; 2 bytes @ 0x54
  3670  000055                     	ds	2
  3671  000057                     
  3672                           ; 1 bytes @ 0x56
  3673  000057                     	ds	2
  3674  000059                     i2printf@ap:
  3675                           	opt callstack 0
  3676                           
  3677                           ; 2 bytes @ 0x58
  3678  000059                     	ds	2
  3679  00005B                     
  3680                           ; 1 bytes @ 0x5A
  3681 ;;
  3682 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  3683 ;;
  3684 ;; *************** function _main *****************
  3685 ;; Defined at:
  3686 ;;		line 48 in file "main.c"
  3687 ;; Parameters:    Size  Location     Type
  3688 ;;		None
  3689 ;; Auto vars:     Size  Location     Type
  3690 ;;  dummy           2    0        int 
  3691 ;; Return value:  Size  Location     Type
  3692 ;;                  1    wreg      void 
  3693 ;; Registers used:
  3694 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3695 ;; Tracked objects:
  3696 ;;		On entry : 0/0
  3697 ;;		On exit  : 0/0
  3698 ;;		Unchanged: 0/0
  3699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3701 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3702 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3703 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3704 ;;Total ram usage:        7 bytes
  3705 ;; Hardware stack levels required when called:   23
  3706 ;; This function calls:
  3707 ;;		_ADC_GetConversion
  3708 ;;		_DATAEE_ReadByte
  3709 ;;		_DATAEE_WriteByte
  3710 ;;		_EUSART1_Read
  3711 ;;		_IOCB4_SetInterruptHandler
  3712 ;;		_SPI_Open
  3713 ;;		_SYSTEM_Initialize
  3714 ;;		_TMR0_WriteTimer
  3715 ;;		___aldiv
  3716 ;;		___lmul
  3717 ;;		_lcd_draw_string
  3718 ;;		_lcd_init
  3719 ;;		_printf
  3720 ;;		_read_from_usart
  3721 ;;		_snprintf
  3722 ;; This function is called by:
  3723 ;;		Startup code after reset
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           	psect	text0
  3728  002A0E                     __ptext0:
  3729                           	opt callstack 0
  3730  002A0E                     _main:
  3731                           	opt callstack 8
  3732  002A0E                     
  3733                           ;main.c: 49:     int dummy;;main.c: 52:     SYSTEM_Initialize();
  3734  002A0E  EC2A  F034         	call	_SYSTEM_Initialize	;wreg free
  3735  002A12                     
  3736                           ;main.c: 53:     SPI_Open(SPI_DEFAULT);
  3737  002A12  0E00               	movlw	0
  3738  002A14  ECFA  F02D         	call	_SPI_Open
  3739  002A18                     
  3740                           ;main.c: 54:     lcd_init();
  3741  002A18  ECEC  F012         	call	_lcd_init	;wreg free
  3742  002A1C  5081               	movf	129,w,c	;volatile
  3743  002A1E                     
  3744                           ;main.c: 58:     INTCONbits.RBIF = 0;
  3745  002A1E  90F2               	bcf	242,0,c	;volatile
  3746  002A20                     
  3747                           ;main.c: 61:     IOCB4_SetInterruptHandler(INTERRUPT_S1_CALLBACK);
  3748  002A20  0EE8               	movlw	low _INTERRUPT_S1_CALLBACK
  3749  002A22  0100               	movlb	0	; () banked
  3750  002A24  6F8F               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  3751  002A26  0E60               	movlw	high _INTERRUPT_S1_CALLBACK
  3752  002A28  6F90               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3753  002A2A  ECC8  F034         	call	_IOCB4_SetInterruptHandler	;wreg free
  3754  002A2E                     
  3755                           ;main.c: 68:     (INTCONbits.GIE = 1);
  3756  002A2E  8EF2               	bsf	242,7,c	;volatile
  3757  002A30                     
  3758                           ;main.c: 78:     lcd_draw_string(60, 220, "EAU          SEEV         AULA_5", 0xFFFF, 0x
      +                          0000);
  3759  002A30  0E00               	movlw	0
  3760  002A32  0101               	movlb	1	; () banked
  3761  002A34  6F01               	movwf	(lcd_draw_string@x+1)& (0+255),b
  3762  002A36  0E3C               	movlw	60
  3763  002A38  6F00               	movwf	lcd_draw_string@x& (0+255),b
  3764  002A3A  0E00               	movlw	0
  3765  002A3C  6F03               	movwf	(lcd_draw_string@y+1)& (0+255),b
  3766  002A3E  0EDC               	movlw	220
  3767  002A40  6F02               	movwf	lcd_draw_string@y& (0+255),b
  3768  002A42  0E54               	movlw	low STR_2
  3769  002A44  6F04               	movwf	lcd_draw_string@pS& (0+255),b
  3770  002A46  0EFF               	movlw	high STR_2
  3771  002A48  6F05               	movwf	(lcd_draw_string@pS+1)& (0+255),b
  3772  002A4A  0EFF               	movlw	255
  3773  002A4C  6F07               	movwf	(lcd_draw_string@fg_color+1)& (0+255),b
  3774  002A4E  6906               	setf	lcd_draw_string@fg_color& (0+255),b
  3775  002A50  0E00               	movlw	0
  3776  002A52  6F09               	movwf	(lcd_draw_string@bg_color+1)& (0+255),b
  3777  002A54  0E00               	movlw	0
  3778  002A56  6F08               	movwf	lcd_draw_string@bg_color& (0+255),b
  3779  002A58  ECAE  F027         	call	_lcd_draw_string	;wreg free
  3780  002A5C                     
  3781                           ;main.c: 79:     TMR0_WriteTimer(0x00);
  3782  002A5C  0E00               	movlw	0
  3783  002A5E  0100               	movlb	0	; () banked
  3784  002A60  6F90               	movwf	(TMR0_WriteTimer@timerVal+1)& (0+255),b
  3785  002A62  0E00               	movlw	0
  3786  002A64  6F8F               	movwf	TMR0_WriteTimer@timerVal& (0+255),b
  3787  002A66  ECC2  F034         	call	_TMR0_WriteTimer	;wreg free
  3788  002A6A                     
  3789                           ;main.c: 82:     if (DATAEE_ReadByte(0x02)!=0xFF){
  3790  002A6A  0E00               	movlw	0
  3791  002A6C  0100               	movlb	0	; () banked
  3792  002A6E  6F90               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
  3793  002A70  0E02               	movlw	2
  3794  002A72  6F8F               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
  3795  002A74  EC58  F034         	call	_DATAEE_ReadByte	;wreg free
  3796  002A78  0AFF               	xorlw	255
  3797  002A7A  B4D8               	btfsc	status,2,c
  3798  002A7C  EF42  F015         	goto	u12231
  3799  002A80  EF44  F015         	goto	u12230
  3800  002A84                     u12231:
  3801  002A84  EF5C  F015         	goto	l526
  3802  002A88                     u12230:
  3803  002A88                     
  3804                           ;main.c: 83:         turn_on_value=DATAEE_ReadByte(0x00);
  3805  002A88  0E00               	movlw	0
  3806  002A8A  0100               	movlb	0	; () banked
  3807  002A8C  6F90               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
  3808  002A8E  0E00               	movlw	0
  3809  002A90  6F8F               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
  3810  002A92  EC58  F034         	call	_DATAEE_ReadByte	;wreg free
  3811  002A96  0101               	movlb	1	; () banked
  3812  002A98  6F78               	movwf	??_main& (0+255),b
  3813  002A9A  5178               	movf	??_main& (0+255),w,b
  3814  002A9C  6FC9               	movwf	_turn_on_value& (0+255),b
  3815  002A9E  6BCA               	clrf	(_turn_on_value+1)& (0+255),b
  3816                           
  3817                           ;main.c: 84:         turn_off_value=DATAEE_ReadByte(0x01);
  3818  002AA0  0E00               	movlw	0
  3819  002AA2  0100               	movlb	0	; () banked
  3820  002AA4  6F90               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
  3821  002AA6  0E01               	movlw	1
  3822  002AA8  6F8F               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
  3823  002AAA  EC58  F034         	call	_DATAEE_ReadByte	;wreg free
  3824  002AAE  0101               	movlb	1	; () banked
  3825  002AB0  6F78               	movwf	??_main& (0+255),b
  3826  002AB2  5178               	movf	??_main& (0+255),w,b
  3827  002AB4  6FC7               	movwf	_turn_off_value& (0+255),b
  3828  002AB6  6BC8               	clrf	(_turn_off_value+1)& (0+255),b
  3829  002AB8                     l526:
  3830                           
  3831                           ;main.c: 95:         adc_value = ADC_GetConversion(POT_PIN);
  3832  002AB8  0E00               	movlw	0
  3833  002ABA  ECDC  F031         	call	_ADC_GetConversion
  3834  002ABE  C08F  F187         	movff	?_ADC_GetConversion,_adc_value
  3835  002AC2  C090  F188         	movff	?_ADC_GetConversion+1,_adc_value+1
  3836                           
  3837                           ;main.c: 96:         adc_perc = (long int) adc_value * 100 / 4095;
  3838  002AC6  C187  F08F         	movff	_adc_value,___lmul@multiplier
  3839  002ACA  C188  F090         	movff	_adc_value+1,___lmul@multiplier+1
  3840  002ACE  0100               	movlb	0	; () banked
  3841  002AD0  0E00               	movlw	0
  3842  002AD2  BF90               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
  3843  002AD4  0EFF               	movlw	-1
  3844  002AD6  6F91               	movwf	(___lmul@multiplier+2)& (0+255),b
  3845  002AD8  6F92               	movwf	(___lmul@multiplier+3)& (0+255),b
  3846  002ADA  0E64               	movlw	100
  3847  002ADC  6F93               	movwf	___lmul@multiplicand& (0+255),b
  3848  002ADE  0E00               	movlw	0
  3849  002AE0  6F94               	movwf	(___lmul@multiplicand+1)& (0+255),b
  3850  002AE2  0E00               	movlw	0
  3851  002AE4  6F95               	movwf	(___lmul@multiplicand+2)& (0+255),b
  3852  002AE6  0E00               	movlw	0
  3853  002AE8  6F96               	movwf	(___lmul@multiplicand+3)& (0+255),b
  3854  002AEA  EC98  F02E         	call	___lmul	;wreg free
  3855  002AEE  C08F  F09B         	movff	?___lmul,___aldiv@dividend
  3856  002AF2  C090  F09C         	movff	?___lmul+1,___aldiv@dividend+1
  3857  002AF6  C091  F09D         	movff	?___lmul+2,___aldiv@dividend+2
  3858  002AFA  C092  F09E         	movff	?___lmul+3,___aldiv@dividend+3
  3859  002AFE  0EFF               	movlw	255
  3860  002B00  0100               	movlb	0	; () banked
  3861  002B02  6F9F               	movwf	___aldiv@divisor& (0+255),b
  3862  002B04  0E0F               	movlw	15
  3863  002B06  6FA0               	movwf	(___aldiv@divisor+1)& (0+255),b
  3864  002B08  0E00               	movlw	0
  3865  002B0A  6FA1               	movwf	(___aldiv@divisor+2)& (0+255),b
  3866  002B0C  0E00               	movlw	0
  3867  002B0E  6FA2               	movwf	(___aldiv@divisor+3)& (0+255),b
  3868  002B10  ECD2  F028         	call	___aldiv	;wreg free
  3869  002B14  C09B  F0B1         	movff	?___aldiv,_adc_perc
  3870  002B18  C09C  F0B2         	movff	?___aldiv+1,_adc_perc+1
  3871  002B1C  C09D  F0B3         	movff	?___aldiv+2,_adc_perc+2
  3872  002B20  C09E  F0B4         	movff	?___aldiv+3,_adc_perc+3
  3873  002B24                     
  3874                           ;main.c: 97:         snprintf(string, sizeof (string), "POT: %3d %%", adc_perc);
  3875  002B24  0EA9               	movlw	low _string
  3876  002B26  0101               	movlb	1	; () banked
  3877  002B28  6F6A               	movwf	snprintf@s& (0+255),b
  3878  002B2A  0E01               	movlw	high _string
  3879  002B2C  6F6B               	movwf	(snprintf@s+1)& (0+255),b
  3880  002B2E  0E00               	movlw	0
  3881  002B30  6F6D               	movwf	(snprintf@n+1)& (0+255),b
  3882  002B32  0E1E               	movlw	30
  3883  002B34  6F6C               	movwf	snprintf@n& (0+255),b
  3884  002B36  0EC1               	movlw	low STR_3
  3885  002B38  6F6E               	movwf	snprintf@fmt& (0+255),b
  3886  002B3A  0EFF               	movlw	high STR_3
  3887  002B3C  6F6F               	movwf	(snprintf@fmt+1)& (0+255),b
  3888  002B3E  C0B1  F170         	movff	_adc_perc,?_snprintf+6
  3889  002B42  C0B2  F171         	movff	_adc_perc+1,?_snprintf+7
  3890  002B46  C0B3  F172         	movff	_adc_perc+2,?_snprintf+8
  3891  002B4A  C0B4  F173         	movff	_adc_perc+3,?_snprintf+9
  3892  002B4E  EC58  F033         	call	_snprintf	;wreg free
  3893  002B52                     
  3894                           ;main.c: 98:         lcd_draw_string(100, 100, string, 0xFFFF, 0x0000);
  3895  002B52  0E00               	movlw	0
  3896  002B54  0101               	movlb	1	; () banked
  3897  002B56  6F01               	movwf	(lcd_draw_string@x+1)& (0+255),b
  3898  002B58  0E64               	movlw	100
  3899  002B5A  6F00               	movwf	lcd_draw_string@x& (0+255),b
  3900  002B5C  0E00               	movlw	0
  3901  002B5E  6F03               	movwf	(lcd_draw_string@y+1)& (0+255),b
  3902  002B60  0E64               	movlw	100
  3903  002B62  6F02               	movwf	lcd_draw_string@y& (0+255),b
  3904  002B64  0EA9               	movlw	low _string
  3905  002B66  6F04               	movwf	lcd_draw_string@pS& (0+255),b
  3906  002B68  0E01               	movlw	high _string
  3907  002B6A  6F05               	movwf	(lcd_draw_string@pS+1)& (0+255),b
  3908  002B6C  0EFF               	movlw	255
  3909  002B6E  6F07               	movwf	(lcd_draw_string@fg_color+1)& (0+255),b
  3910  002B70  6906               	setf	lcd_draw_string@fg_color& (0+255),b
  3911  002B72  0E00               	movlw	0
  3912  002B74  6F09               	movwf	(lcd_draw_string@bg_color+1)& (0+255),b
  3913  002B76  0E00               	movlw	0
  3914  002B78  6F08               	movwf	lcd_draw_string@bg_color& (0+255),b
  3915  002B7A  ECAE  F027         	call	_lcd_draw_string	;wreg free
  3916  002B7E                     
  3917                           ;main.c: 101:         if (adc_perc >= turn_on_value) {
  3918  002B7E  C1C9  F178         	movff	_turn_on_value,??_main
  3919  002B82  C1CA  F179         	movff	_turn_on_value+1,??_main+1
  3920  002B86  0E00               	movlw	0
  3921  002B88  0101               	movlb	1	; () banked
  3922  002B8A  BF79               	btfsc	(??_main+1)& (0+255),7,b
  3923  002B8C  0EFF               	movlw	255
  3924  002B8E  6F7A               	movwf	(??_main+2)& (0+255),b
  3925  002B90  6F7B               	movwf	(??_main+3)& (0+255),b
  3926  002B92  5178               	movf	??_main& (0+255),w,b
  3927  002B94  0100               	movlb	0	; () banked
  3928  002B96  5DB1               	subwf	_adc_perc& (0+255),w,b
  3929  002B98  0101               	movlb	1	; () banked
  3930  002B9A  5179               	movf	(??_main+1)& (0+255),w,b
  3931  002B9C  0100               	movlb	0	; () banked
  3932  002B9E  59B2               	subwfb	(_adc_perc+1)& (0+255),w,b
  3933  002BA0  0101               	movlb	1	; () banked
  3934  002BA2  517A               	movf	(??_main+2)& (0+255),w,b
  3935  002BA4  0100               	movlb	0	; () banked
  3936  002BA6  59B3               	subwfb	(_adc_perc+2)& (0+255),w,b
  3937  002BA8  51B4               	movf	(_adc_perc+3)& (0+255),w,b
  3938  002BAA  0A80               	xorlw	128
  3939  002BAC  0101               	movlb	1	; () banked
  3940  002BAE  6F7C               	movwf	(??_main+4)& (0+255),b
  3941  002BB0  517B               	movf	(??_main+3)& (0+255),w,b
  3942  002BB2  0A80               	xorlw	128
  3943  002BB4  597C               	subwfb	(??_main+4)& (0+255),w,b
  3944  002BB6  A0D8               	btfss	status,0,c
  3945  002BB8  EFE0  F015         	goto	u12241
  3946  002BBC  EFE2  F015         	goto	u12240
  3947  002BC0                     u12241:
  3948  002BC0  EFE3  F015         	goto	l9756
  3949  002BC4                     u12240:
  3950  002BC4                     
  3951                           ; BSR set to: 1
  3952  002BC4  8A89               	bsf	137,5,c	;volatile
  3953  002BC6                     l9756:
  3954                           
  3955                           ; BSR set to: 1
  3956                           ;main.c: 104:         if (adc_perc <= turn_off_value) {
  3957  002BC6  C1C7  F178         	movff	_turn_off_value,??_main
  3958  002BCA  C1C8  F179         	movff	_turn_off_value+1,??_main+1
  3959  002BCE  0E00               	movlw	0
  3960  002BD0  BF79               	btfsc	(??_main+1)& (0+255),7,b
  3961  002BD2  0EFF               	movlw	255
  3962  002BD4  6F7A               	movwf	(??_main+2)& (0+255),b
  3963  002BD6  6F7B               	movwf	(??_main+3)& (0+255),b
  3964  002BD8  0100               	movlb	0	; () banked
  3965  002BDA  51B1               	movf	_adc_perc& (0+255),w,b
  3966  002BDC  0101               	movlb	1	; () banked
  3967  002BDE  5D78               	subwf	??_main& (0+255),w,b
  3968  002BE0  0100               	movlb	0	; () banked
  3969  002BE2  51B2               	movf	(_adc_perc+1)& (0+255),w,b
  3970  002BE4  0101               	movlb	1	; () banked
  3971  002BE6  5979               	subwfb	(??_main+1)& (0+255),w,b
  3972  002BE8  0100               	movlb	0	; () banked
  3973  002BEA  51B3               	movf	(_adc_perc+2)& (0+255),w,b
  3974  002BEC  0101               	movlb	1	; () banked
  3975  002BEE  597A               	subwfb	(??_main+2)& (0+255),w,b
  3976  002BF0  517B               	movf	(??_main+3)& (0+255),w,b
  3977  002BF2  0A80               	xorlw	128
  3978  002BF4  6F7C               	movwf	(??_main+4)& (0+255),b
  3979  002BF6  0100               	movlb	0	; () banked
  3980  002BF8  51B4               	movf	(_adc_perc+3)& (0+255),w,b
  3981  002BFA  0A80               	xorlw	128
  3982  002BFC  0101               	movlb	1	; () banked
  3983  002BFE  597C               	subwfb	(??_main+4)& (0+255),w,b
  3984  002C00  A0D8               	btfss	status,0,c
  3985  002C02  EF05  F016         	goto	u12251
  3986  002C06  EF07  F016         	goto	u12250
  3987  002C0A                     u12251:
  3988  002C0A  EF08  F016         	goto	l9758
  3989  002C0E                     u12250:
  3990  002C0E                     
  3991                           ; BSR set to: 1
  3992  002C0E  9A89               	bcf	137,5,c	;volatile
  3993  002C10                     l9758:
  3994                           
  3995                           ; BSR set to: 1
  3996                           ;main.c: 110:             rx_data=EUSART1_Read();
  3997  002C10  ECB2  F033         	call	_EUSART1_Read	;wreg free
  3998  002C14  0101               	movlb	1	; () banked
  3999  002C16  6F78               	movwf	??_main& (0+255),b
  4000  002C18  5178               	movf	??_main& (0+255),w,b
  4001  002C1A  6F81               	movwf	_rx_data& (0+255),b
  4002  002C1C  6B82               	clrf	(_rx_data+1)& (0+255),b
  4003  002C1E                     
  4004                           ; BSR set to: 1
  4005                           ;main.c: 111:             if (rx_data==32){
  4006  002C1E  0E20               	movlw	32
  4007  002C20  1981               	xorwf	_rx_data& (0+255),w,b
  4008  002C22  1182               	iorwf	(_rx_data+1)& (0+255),w,b
  4009  002C24  A4D8               	btfss	status,2,c
  4010  002C26  EF17  F016         	goto	u12261
  4011  002C2A  EF19  F016         	goto	u12260
  4012  002C2E                     u12261:
  4013  002C2E  EF5C  F015         	goto	l526
  4014  002C32                     u12260:
  4015  002C32                     
  4016                           ; BSR set to: 1
  4017                           ;main.c: 113:                 printf("Configuration MODE \n\r");
  4018  002C32  0E75               	movlw	low STR_4
  4019  002C34  6F54               	movwf	printf@fmt& (0+255),b
  4020  002C36  0EFF               	movlw	high STR_4
  4021  002C38  6F55               	movwf	(printf@fmt+1)& (0+255),b
  4022  002C3A  ECDC  F033         	call	_printf	;wreg free
  4023                           
  4024                           ;main.c: 114:                 printf("\n\rACTUAL TURN VALUES  ON: %d OFF: %d\n\r", turn_
      +                          on_value, turn_off_value);
  4025  002C3E  0E2D               	movlw	low STR_5
  4026  002C40  0101               	movlb	1	; () banked
  4027  002C42  6F54               	movwf	printf@fmt& (0+255),b
  4028  002C44  0EFF               	movlw	high STR_5
  4029  002C46  6F55               	movwf	(printf@fmt+1)& (0+255),b
  4030  002C48  C1C9  F156         	movff	_turn_on_value,?_printf+2
  4031  002C4C  C1CA  F157         	movff	_turn_on_value+1,?_printf+3
  4032  002C50  C1C7  F158         	movff	_turn_off_value,?_printf+4
  4033  002C54  C1C8  F159         	movff	_turn_off_value+1,?_printf+5
  4034  002C58  ECDC  F033         	call	_printf	;wreg free
  4035  002C5C                     l535:
  4036                           
  4037                           ;main.c: 117:                     printf("\n\rTurn ON Value: \n\r");
  4038  002C5C  0EA0               	movlw	low STR_6
  4039  002C5E  0101               	movlb	1	; () banked
  4040  002C60  6F54               	movwf	printf@fmt& (0+255),b
  4041  002C62  0EFF               	movlw	high STR_6
  4042  002C64  6F55               	movwf	(printf@fmt+1)& (0+255),b
  4043  002C66  ECDC  F033         	call	_printf	;wreg free
  4044  002C6A                     
  4045                           ;main.c: 118:                     turn_on_value = read_from_usart(2);
  4046  002C6A  0E00               	movlw	0
  4047  002C6C  0100               	movlb	0	; () banked
  4048  002C6E  6FA6               	movwf	(read_from_usart@length+1)& (0+255),b
  4049  002C70  0E02               	movlw	2
  4050  002C72  6FA5               	movwf	read_from_usart@length& (0+255),b
  4051  002C74  EC99  F02D         	call	_read_from_usart	;wreg free
  4052  002C78  C0A5  F1C9         	movff	?_read_from_usart,_turn_on_value
  4053  002C7C  C0A6  F1CA         	movff	?_read_from_usart+1,_turn_on_value+1
  4054  002C80                     
  4055                           ;main.c: 119:                     a=turn_on_value;
  4056  002C80  C1C9  F185         	movff	_turn_on_value,_a
  4057  002C84  C1CA  F186         	movff	_turn_on_value+1,_a+1
  4058  002C88                     
  4059                           ;main.c: 120:                     printf("\n\rTurn OFF Value: \n\r");
  4060  002C88  0E8B               	movlw	low STR_7
  4061  002C8A  0101               	movlb	1	; () banked
  4062  002C8C  6F54               	movwf	printf@fmt& (0+255),b
  4063  002C8E  0EFF               	movlw	high STR_7
  4064  002C90  6F55               	movwf	(printf@fmt+1)& (0+255),b
  4065  002C92  ECDC  F033         	call	_printf	;wreg free
  4066                           
  4067                           ;main.c: 121:                     turn_off_value = read_from_usart(2);
  4068  002C96  0E00               	movlw	0
  4069  002C98  0100               	movlb	0	; () banked
  4070  002C9A  6FA6               	movwf	(read_from_usart@length+1)& (0+255),b
  4071  002C9C  0E02               	movlw	2
  4072  002C9E  6FA5               	movwf	read_from_usart@length& (0+255),b
  4073  002CA0  EC99  F02D         	call	_read_from_usart	;wreg free
  4074  002CA4  C0A5  F1C7         	movff	?_read_from_usart,_turn_off_value
  4075  002CA8  C0A6  F1C8         	movff	?_read_from_usart+1,_turn_off_value+1
  4076  002CAC                     
  4077                           ;main.c: 122:                     b=turn_off_value;
  4078  002CAC  C1C7  F183         	movff	_turn_off_value,_b
  4079  002CB0  C1C8  F184         	movff	_turn_off_value+1,_b+1
  4080  002CB4                     
  4081                           ;main.c: 123:                 }while (a<=b);
  4082  002CB4  0101               	movlb	1	; () banked
  4083  002CB6  5185               	movf	_a& (0+255),w,b
  4084  002CB8  5D83               	subwf	_b& (0+255),w,b
  4085  002CBA  5184               	movf	(_b+1)& (0+255),w,b
  4086  002CBC  0A80               	xorlw	128
  4087  002CBE  6F78               	movwf	??_main& (0+255),b
  4088  002CC0  5186               	movf	(_a+1)& (0+255),w,b
  4089  002CC2  0A80               	xorlw	128
  4090  002CC4  5978               	subwfb	??_main& (0+255),w,b
  4091  002CC6  B0D8               	btfsc	status,0,c
  4092  002CC8  EF68  F016         	goto	u12271
  4093  002CCC  EF6A  F016         	goto	u12270
  4094  002CD0                     u12271:
  4095  002CD0  EF2E  F016         	goto	l535
  4096  002CD4                     u12270:
  4097  002CD4                     
  4098                           ; BSR set to: 1
  4099                           ;main.c: 125:                 DATAEE_WriteByte(0x00,turn_on_value);
  4100  002CD4  0E00               	movlw	0
  4101  002CD6  0100               	movlb	0	; () banked
  4102  002CD8  6F90               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  4103  002CDA  0E00               	movlw	0
  4104  002CDC  6F8F               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  4105  002CDE  C1C9  F091         	movff	_turn_on_value,DATAEE_WriteByte@bData
  4106  002CE2  EC0E  F031         	call	_DATAEE_WriteByte	;wreg free
  4107                           
  4108                           ;main.c: 126:                 DATAEE_WriteByte(0x01,turn_off_value);
  4109  002CE6  0E00               	movlw	0
  4110  002CE8  0100               	movlb	0	; () banked
  4111  002CEA  6F90               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  4112  002CEC  0E01               	movlw	1
  4113  002CEE  6F8F               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  4114  002CF0  C1C7  F091         	movff	_turn_off_value,DATAEE_WriteByte@bData
  4115  002CF4  EC0E  F031         	call	_DATAEE_WriteByte	;wreg free
  4116  002CF8                     
  4117                           ;main.c: 128:                 printf("\n\n\rTURN VALUES SAVED   ON: %d OFF: %d\n\r", tur
      +                          n_on_value, turn_off_value);
  4118  002CF8  0E05               	movlw	low STR_8
  4119  002CFA  0101               	movlb	1	; () banked
  4120  002CFC  6F54               	movwf	printf@fmt& (0+255),b
  4121  002CFE  0EFF               	movlw	high STR_8
  4122  002D00  6F55               	movwf	(printf@fmt+1)& (0+255),b
  4123  002D02  C1C9  F156         	movff	_turn_on_value,?_printf+2
  4124  002D06  C1CA  F157         	movff	_turn_on_value+1,?_printf+3
  4125  002D0A  C1C7  F158         	movff	_turn_off_value,?_printf+4
  4126  002D0E  C1C8  F159         	movff	_turn_off_value+1,?_printf+5
  4127  002D12  ECDC  F033         	call	_printf	;wreg free
  4128  002D16  EF5C  F015         	goto	l526
  4129  002D1A  EF4F  F000         	goto	start
  4130  002D1E                     __end_of_main:
  4131                           	opt callstack 0
  4132                           
  4133 ;; *************** function _snprintf *****************
  4134 ;; Defined at:
  4135 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\snprintf.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;  s               2  106[BANK1 ] PTR unsigned char 
  4138 ;;		 -> string(30), 
  4139 ;;  n               2  108[BANK1 ] unsigned int 
  4140 ;;  fmt             2  110[BANK1 ] PTR const unsigned char 
  4141 ;;		 -> STR_3(12), 
  4142 ;; Auto vars:     Size  Location     Type
  4143 ;;  ap              2  118[BANK1 ] PTR void [1]
  4144 ;;		 -> ?_snprintf(2), ?_printf(2), 
  4145 ;;  ret             2    0        int 
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  2  106[BANK1 ] int 
  4148 ;; Registers used:
  4149 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4155 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4156 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4158 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4159 ;;Total ram usage:       14 bytes
  4160 ;; Hardware stack levels used:    1
  4161 ;; Hardware stack levels required when called:   22
  4162 ;; This function calls:
  4163 ;;		_vsnprintf
  4164 ;; This function is called by:
  4165 ;;		_main
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           	psect	text1
  4170  0066B0                     __ptext1:
  4171                           	opt callstack 0
  4172  0066B0                     _snprintf:
  4173                           	opt callstack 8
  4174  0066B0  0E70               	movlw	low (?_snprintf+6)
  4175  0066B2  0101               	movlb	1	; () banked
  4176  0066B4  6F76               	movwf	snprintf@ap& (0+255),b
  4177  0066B6  0E01               	movlw	high (?_snprintf+6)
  4178  0066B8  6F77               	movwf	(snprintf@ap+1)& (0+255),b
  4179  0066BA                     
  4180                           ; BSR set to: 1
  4181  0066BA  C16A  F154         	movff	snprintf@s,vsnprintf@s
  4182  0066BE  C16B  F155         	movff	snprintf@s+1,vsnprintf@s+1
  4183  0066C2  C16C  F156         	movff	snprintf@n,vsnprintf@n
  4184  0066C6  C16D  F157         	movff	snprintf@n+1,vsnprintf@n+1
  4185  0066CA  C16E  F158         	movff	snprintf@fmt,vsnprintf@fmt
  4186  0066CE  C16F  F159         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  4187  0066D2  0E76               	movlw	low snprintf@ap
  4188  0066D4  6F5A               	movwf	vsnprintf@ap& (0+255),b
  4189  0066D6  0E01               	movlw	high snprintf@ap
  4190  0066D8  6F5B               	movwf	(vsnprintf@ap+1)& (0+255),b
  4191  0066DA  EC4A  F028         	call	_vsnprintf	;wreg free
  4192  0066DE  0012               	return		;funcret
  4193  0066E0                     __end_of_snprintf:
  4194                           	opt callstack 0
  4195                           
  4196 ;; *************** function _vsnprintf *****************
  4197 ;; Defined at:
  4198 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_vsnprintf.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;  s               2   84[BANK1 ] PTR unsigned char 
  4201 ;;		 -> string(30), 
  4202 ;;  n               2   86[BANK1 ] unsigned int 
  4203 ;;  fmt             2   88[BANK1 ] PTR const unsigned char 
  4204 ;;		 -> STR_3(12), 
  4205 ;;  ap              2   90[BANK1 ] PTR PTR void 
  4206 ;;		 -> snprintf@ap(2), 
  4207 ;; Auto vars:     Size  Location     Type
  4208 ;;  f               6  100[BANK1 ] struct _IO_FILE
  4209 ;;  cnt             2   98[BANK1 ] int 
  4210 ;; Return value:  Size  Location     Type
  4211 ;;                  2   84[BANK1 ] int 
  4212 ;; Registers used:
  4213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4214 ;; Tracked objects:
  4215 ;;		On entry : 0/0
  4216 ;;		On exit  : 0/0
  4217 ;;		Unchanged: 0/0
  4218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4219 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4220 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4221 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4222 ;;      Totals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4223 ;;Total ram usage:       22 bytes
  4224 ;; Hardware stack levels used:    1
  4225 ;; Hardware stack levels required when called:   21
  4226 ;; This function calls:
  4227 ;;		_vfprintf
  4228 ;; This function is called by:
  4229 ;;		_snprintf
  4230 ;; This function uses a non-reentrant model
  4231 ;;
  4232                           
  4233                           	psect	text2
  4234  005094                     __ptext2:
  4235                           	opt callstack 0
  4236  005094                     _vsnprintf:
  4237                           	opt callstack 8
  4238  005094  0E80               	movlw	128
  4239  005096  0101               	movlb	1	; () banked
  4240  005098  5D57               	subwf	(vsnprintf@n+1)& (0+255),w,b
  4241  00509A  A0D8               	btfss	status,0,c
  4242  00509C  EF52  F028         	goto	u11971
  4243  0050A0  EF54  F028         	goto	u11970
  4244  0050A4                     u11971:
  4245  0050A4  EF5C  F028         	goto	l9402
  4246  0050A8                     u11970:
  4247  0050A8                     
  4248                           ; BSR set to: 1
  4249  0050A8  0E00               	movlw	0
  4250  0050AA  6F7E               	movwf	(_errno+1)& (0+255),b
  4251  0050AC  0E4B               	movlw	75
  4252  0050AE  6F7D               	movwf	_errno& (0+255),b
  4253  0050B0                     
  4254                           ; BSR set to: 1
  4255  0050B0  6954               	setf	?_vsnprintf& (0+255),b
  4256  0050B2  6955               	setf	(?_vsnprintf+1)& (0+255),b
  4257  0050B4  EFD1  F028         	goto	l1737
  4258  0050B8                     l9402:
  4259                           
  4260                           ; BSR set to: 1
  4261  0050B8  C154  F164         	movff	vsnprintf@s,vsnprintf@f
  4262  0050BC  C155  F165         	movff	vsnprintf@s+1,vsnprintf@f+1
  4263  0050C0  5157               	movf	(vsnprintf@n+1)& (0+255),w,b
  4264  0050C2  E109               	bnz	u11980
  4265  0050C4  0E02               	movlw	2
  4266  0050C6  5D56               	subwf	vsnprintf@n& (0+255),w,b
  4267  0050C8  A0D8               	btfss	status,0,c
  4268  0050CA  EF69  F028         	goto	u11981
  4269  0050CE  EF6B  F028         	goto	u11980
  4270  0050D2                     u11981:
  4271  0050D2  EF77  F028         	goto	l9408
  4272  0050D6                     u11980:
  4273  0050D6                     
  4274                           ; BSR set to: 1
  4275  0050D6  0EFF               	movlw	255
  4276  0050D8  2556               	addwf	vsnprintf@n& (0+255),w,b
  4277  0050DA  6F68               	movwf	(vsnprintf@f+4)& (0+255),b
  4278  0050DC  0EFF               	movlw	255
  4279  0050DE  2157               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  4280  0050E0  6F69               	movwf	(vsnprintf@f+5)& (0+255),b
  4281  0050E2                     
  4282                           ; BSR set to: 1
  4283  0050E2  0E00               	movlw	0
  4284  0050E4  6F67               	movwf	(vsnprintf@f+3)& (0+255),b
  4285  0050E6  0E00               	movlw	0
  4286  0050E8  6F66               	movwf	(vsnprintf@f+2)& (0+255),b
  4287  0050EA  EF7F  F028         	goto	l9410
  4288  0050EE                     l9408:
  4289                           
  4290                           ; BSR set to: 1
  4291  0050EE  0E00               	movlw	0
  4292  0050F0  6F69               	movwf	(vsnprintf@f+5)& (0+255),b
  4293  0050F2  0E01               	movlw	1
  4294  0050F4  6F68               	movwf	(vsnprintf@f+4)& (0+255),b
  4295  0050F6  0E00               	movlw	0
  4296  0050F8  6F67               	movwf	(vsnprintf@f+3)& (0+255),b
  4297  0050FA  0E01               	movlw	1
  4298  0050FC  6F66               	movwf	(vsnprintf@f+2)& (0+255),b
  4299  0050FE                     l9410:
  4300                           
  4301                           ; BSR set to: 1
  4302  0050FE  0E64               	movlw	low vsnprintf@f
  4303  005100  6F4C               	movwf	vfprintf@fp& (0+255),b
  4304  005102  0E01               	movlw	high vsnprintf@f
  4305  005104  6F4D               	movwf	(vfprintf@fp+1)& (0+255),b
  4306  005106  C158  F14E         	movff	vsnprintf@fmt,vfprintf@fmt
  4307  00510A  C159  F14F         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  4308  00510E  C15A  F150         	movff	vsnprintf@ap,vfprintf@ap
  4309  005112  C15B  F151         	movff	vsnprintf@ap+1,vfprintf@ap+1
  4310  005116  EC01  F02F         	call	_vfprintf	;wreg free
  4311  00511A  C14C  F162         	movff	?_vfprintf,vsnprintf@cnt
  4312  00511E  C14D  F163         	movff	?_vfprintf+1,vsnprintf@cnt+1
  4313  005122  0101               	movlb	1	; () banked
  4314  005124  5156               	movf	vsnprintf@n& (0+255),w,b
  4315  005126  1157               	iorwf	(vsnprintf@n+1)& (0+255),w,b
  4316  005128  B4D8               	btfsc	status,2,c
  4317  00512A  EF99  F028         	goto	u11991
  4318  00512E  EF9B  F028         	goto	u11990
  4319  005132                     u11991:
  4320  005132  EFCD  F028         	goto	l9422
  4321  005136                     u11990:
  4322  005136                     
  4323                           ; BSR set to: 1
  4324  005136  BF63               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  4325  005138  EFA0  F028         	goto	u12001
  4326  00513C  EFA2  F028         	goto	u12000
  4327  005140                     u12001:
  4328  005140  EFCD  F028         	goto	l9422
  4329  005144                     u12000:
  4330  005144                     
  4331                           ; BSR set to: 1
  4332  005144  0EFF               	movlw	255
  4333  005146  6F5C               	movwf	??_vsnprintf& (0+255),b
  4334  005148  0EFF               	movlw	255
  4335  00514A  6F5D               	movwf	(??_vsnprintf+1)& (0+255),b
  4336  00514C  C156  F15E         	movff	vsnprintf@n,??_vsnprintf+2
  4337  005150  C157  F15F         	movff	vsnprintf@n+1,??_vsnprintf+3
  4338  005154  515C               	movf	??_vsnprintf& (0+255),w,b
  4339  005156  275E               	addwf	(??_vsnprintf+2)& (0+255),f,b
  4340  005158  515D               	movf	(??_vsnprintf+1)& (0+255),w,b
  4341  00515A  235F               	addwfc	(??_vsnprintf+3)& (0+255),f,b
  4342  00515C  515E               	movf	(??_vsnprintf+2)& (0+255),w,b
  4343  00515E  5D62               	subwf	vsnprintf@cnt& (0+255),w,b
  4344  005160  515F               	movf	(??_vsnprintf+3)& (0+255),w,b
  4345  005162  5963               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  4346  005164  A0D8               	btfss	status,0,c
  4347  005166  EFB7  F028         	goto	u12011
  4348  00516A  EFB9  F028         	goto	u12010
  4349  00516E                     u12011:
  4350  00516E  EFC1  F028         	goto	l1742
  4351  005172                     u12010:
  4352  005172                     
  4353                           ; BSR set to: 1
  4354  005172  0EFF               	movlw	255
  4355  005174  2556               	addwf	vsnprintf@n& (0+255),w,b
  4356  005176  6F60               	movwf	_vsnprintf$2583& (0+255),b
  4357  005178  0EFF               	movlw	255
  4358  00517A  2157               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  4359  00517C  6F61               	movwf	(_vsnprintf$2583+1)& (0+255),b
  4360  00517E  EFC5  F028         	goto	l9420
  4361  005182                     l1742:
  4362                           
  4363                           ; BSR set to: 1
  4364  005182  C162  F160         	movff	vsnprintf@cnt,_vsnprintf$2583
  4365  005186  C163  F161         	movff	vsnprintf@cnt+1,_vsnprintf$2583+1
  4366  00518A                     l9420:
  4367                           
  4368                           ; BSR set to: 1
  4369  00518A  5160               	movf	_vsnprintf$2583& (0+255),w,b
  4370  00518C  2554               	addwf	vsnprintf@s& (0+255),w,b
  4371  00518E  6ED9               	movwf	fsr2l,c
  4372  005190  5161               	movf	(_vsnprintf$2583+1)& (0+255),w,b
  4373  005192  2155               	addwfc	(vsnprintf@s+1)& (0+255),w,b
  4374  005194  6EDA               	movwf	fsr2h,c
  4375  005196  0E00               	movlw	0
  4376  005198  6EDF               	movwf	indf2,c
  4377  00519A                     l9422:
  4378                           
  4379                           ; BSR set to: 1
  4380  00519A  C162  F154         	movff	vsnprintf@cnt,?_vsnprintf
  4381  00519E  C163  F155         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  4382  0051A2                     l1737:
  4383                           
  4384                           ; BSR set to: 1
  4385  0051A2  0012               	return		;funcret
  4386  0051A4                     __end_of_vsnprintf:
  4387                           	opt callstack 0
  4388                           
  4389 ;; *************** function _read_from_usart *****************
  4390 ;; Defined at:
  4391 ;;		line 27 in file "main.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;  length          2   69[BANK0 ] int 
  4394 ;; Auto vars:     Size  Location     Type
  4395 ;;  i               2   12[BANK1 ] int 
  4396 ;;  data           10    0[BANK1 ] unsigned char [10]
  4397 ;;  value           2   10[BANK1 ] int 
  4398 ;; Return value:  Size  Location     Type
  4399 ;;                  2   69[BANK0 ] int 
  4400 ;; Registers used:
  4401 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4402 ;; Tracked objects:
  4403 ;;		On entry : 0/0
  4404 ;;		On exit  : 0/0
  4405 ;;		Unchanged: 0/0
  4406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4407 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4408 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4409 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4410 ;;      Totals:         0       3      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4411 ;;Total ram usage:       17 bytes
  4412 ;; Hardware stack levels used:    1
  4413 ;; Hardware stack levels required when called:   15
  4414 ;; This function calls:
  4415 ;;		_EUSART1_Read
  4416 ;;		_EUSART1_Write
  4417 ;;		_EUSART1_is_rx_ready
  4418 ;;		_EUSART1_is_tx_ready
  4419 ;;		_TMR0_WriteTimer
  4420 ;;		_atoi
  4421 ;; This function is called by:
  4422 ;;		_main
  4423 ;; This function uses a non-reentrant model
  4424 ;;
  4425                           
  4426                           	psect	text3
  4427  005B32                     __ptext3:
  4428                           	opt callstack 0
  4429  005B32                     _read_from_usart:
  4430                           	opt callstack 15
  4431  005B32                     
  4432                           ;main.c: 31:     for (int i = 0; i < length; i++) {
  4433  005B32  0E00               	movlw	0
  4434  005B34  0101               	movlb	1	; () banked
  4435  005B36  6F0D               	movwf	(read_from_usart@i+1)& (0+255),b
  4436  005B38  0E00               	movlw	0
  4437  005B3A  6F0C               	movwf	read_from_usart@i& (0+255),b
  4438  005B3C  EFD9  F02D         	goto	l9452
  4439  005B40                     l514:
  4440  005B40  AA9E               	btfss	158,5,c	;volatile
  4441  005B42  EFA5  F02D         	goto	u12031
  4442  005B46  EFA7  F02D         	goto	u12030
  4443  005B4A                     u12031:
  4444  005B4A  EFA0  F02D         	goto	l514
  4445  005B4E                     u12030:
  4446  005B4E                     
  4447                           ;main.c: 33:         if (EUSART1_is_rx_ready()) {
  4448  005B4E  EC9F  F034         	call	_EUSART1_is_rx_ready	;wreg free
  4449  005B52  0900               	iorlw	0
  4450  005B54  B4D8               	btfsc	status,2,c
  4451  005B56  EFAF  F02D         	goto	u12041
  4452  005B5A  EFB1  F02D         	goto	u12040
  4453  005B5E                     u12041:
  4454  005B5E  EFD6  F02D         	goto	l9450
  4455  005B62                     u12040:
  4456  005B62                     
  4457                           ;main.c: 34:             data[i] = EUSART1_Read();
  4458  005B62  0E00               	movlw	low read_from_usart@data
  4459  005B64  0101               	movlb	1	; () banked
  4460  005B66  250C               	addwf	read_from_usart@i& (0+255),w,b
  4461  005B68  6ED9               	movwf	fsr2l,c
  4462  005B6A  0E01               	movlw	high read_from_usart@data
  4463  005B6C  210D               	addwfc	(read_from_usart@i+1)& (0+255),w,b
  4464  005B6E  6EDA               	movwf	fsr2h,c
  4465  005B70  ECB2  F033         	call	_EUSART1_Read	;wreg free
  4466  005B74  6EDF               	movwf	indf2,c
  4467  005B76                     
  4468                           ;main.c: 35:             if (EUSART1_is_tx_ready()) {
  4469  005B76  EC9D  F033         	call	_EUSART1_is_tx_ready	;wreg free
  4470  005B7A  0900               	iorlw	0
  4471  005B7C  B4D8               	btfsc	status,2,c
  4472  005B7E  EFC3  F02D         	goto	u12051
  4473  005B82  EFC5  F02D         	goto	u12050
  4474  005B86                     u12051:
  4475  005B86  EFD6  F02D         	goto	l9450
  4476  005B8A                     u12050:
  4477  005B8A                     
  4478                           ;main.c: 36:                 EUSART1_Write(data[i]);
  4479  005B8A  0E00               	movlw	low read_from_usart@data
  4480  005B8C  0101               	movlb	1	; () banked
  4481  005B8E  250C               	addwf	read_from_usart@i& (0+255),w,b
  4482  005B90  6ED9               	movwf	fsr2l,c
  4483  005B92  0E01               	movlw	high read_from_usart@data
  4484  005B94  210D               	addwfc	(read_from_usart@i+1)& (0+255),w,b
  4485  005B96  6EDA               	movwf	fsr2h,c
  4486  005B98  50DF               	movf	indf2,w,c
  4487  005B9A  EC65  F034         	call	_EUSART1_Write
  4488  005B9E                     
  4489                           ;main.c: 37:                 TMR0_WriteTimer(0x00);
  4490  005B9E  0E00               	movlw	0
  4491  005BA0  0100               	movlb	0	; () banked
  4492  005BA2  6F90               	movwf	(TMR0_WriteTimer@timerVal+1)& (0+255),b
  4493  005BA4  0E00               	movlw	0
  4494  005BA6  6F8F               	movwf	TMR0_WriteTimer@timerVal& (0+255),b
  4495  005BA8  ECC2  F034         	call	_TMR0_WriteTimer	;wreg free
  4496  005BAC                     l9450:
  4497                           
  4498                           ;main.c: 40:     }
  4499  005BAC  0101               	movlb	1	; () banked
  4500  005BAE  4B0C               	infsnz	read_from_usart@i& (0+255),f,b
  4501  005BB0  2B0D               	incf	(read_from_usart@i+1)& (0+255),f,b
  4502  005BB2                     l9452:
  4503                           
  4504                           ; BSR set to: 1
  4505  005BB2  0100               	movlb	0	; () banked
  4506  005BB4  51A5               	movf	read_from_usart@length& (0+255),w,b
  4507  005BB6  0101               	movlb	1	; () banked
  4508  005BB8  5D0C               	subwf	read_from_usart@i& (0+255),w,b
  4509  005BBA  510D               	movf	(read_from_usart@i+1)& (0+255),w,b
  4510  005BBC  0A80               	xorlw	128
  4511  005BBE  0100               	movlb	0	; () banked
  4512  005BC0  6FA7               	movwf	??_read_from_usart& (0+255),b
  4513  005BC2  51A6               	movf	(read_from_usart@length+1)& (0+255),w,b
  4514  005BC4  0A80               	xorlw	128
  4515  005BC6  59A7               	subwfb	??_read_from_usart& (0+255),w,b
  4516  005BC8  A0D8               	btfss	status,0,c
  4517  005BCA  EFE9  F02D         	goto	u12061
  4518  005BCE  EFEB  F02D         	goto	u12060
  4519  005BD2                     u12061:
  4520  005BD2  EFA0  F02D         	goto	l514
  4521  005BD6                     u12060:
  4522  005BD6                     
  4523                           ; BSR set to: 0
  4524                           ;main.c: 41:     value = atoi(data);
  4525  005BD6  0E00               	movlw	low read_from_usart@data
  4526  005BD8  6F96               	movwf	atoi@s& (0+255),b
  4527  005BDA  0E01               	movlw	high read_from_usart@data
  4528  005BDC  6F97               	movwf	(atoi@s+1)& (0+255),b
  4529  005BDE  EC74  F01D         	call	_atoi	;wreg free
  4530  005BE2  C096  F10A         	movff	?_atoi,read_from_usart@value
  4531  005BE6  C097  F10B         	movff	?_atoi+1,read_from_usart@value+1
  4532  005BEA                     
  4533                           ;main.c: 42:     return value;
  4534  005BEA  C10A  F0A5         	movff	read_from_usart@value,?_read_from_usart
  4535  005BEE  C10B  F0A6         	movff	read_from_usart@value+1,?_read_from_usart+1
  4536  005BF2  0012               	return		;funcret
  4537  005BF4                     __end_of_read_from_usart:
  4538                           	opt callstack 0
  4539                           
  4540 ;; *************** function _TMR0_WriteTimer *****************
  4541 ;; Defined at:
  4542 ;;		line 115 in file "mcc_generated_files/tmr0.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;  timerVal        2   47[BANK0 ] unsigned short 
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;		None
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  1    wreg      void 
  4549 ;; Registers used:
  4550 ;;		wreg, status,2
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4556 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4559 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4560 ;;Total ram usage:        2 bytes
  4561 ;; Hardware stack levels used:    1
  4562 ;; Hardware stack levels required when called:   13
  4563 ;; This function calls:
  4564 ;;		Nothing
  4565 ;; This function is called by:
  4566 ;;		_read_from_usart
  4567 ;;		_main
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           	psect	text4
  4572  006984                     __ptext4:
  4573                           	opt callstack 0
  4574  006984                     _TMR0_WriteTimer:
  4575                           	opt callstack 16
  4576  006984                     
  4577                           ;mcc_generated_files/tmr0.c: 115: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 116: {;mcc_generated_files/tmr0.c: 118:     TMR0H = timerVal >> 8;
  4578  006984  0100               	movlb	0	; () banked
  4579  006986  5190               	movf	(TMR0_WriteTimer@timerVal+1)& (0+255),w,b
  4580  006988  6ED7               	movwf	215,c	;volatile
  4581  00698A                     
  4582                           ; BSR set to: 0
  4583                           ;mcc_generated_files/tmr0.c: 119:     TMR0L = (uint8_t) timerVal;
  4584  00698A  C08F  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  4585  00698E                     
  4586                           ; BSR set to: 0
  4587  00698E  0012               	return		;funcret
  4588  006990                     __end_of_TMR0_WriteTimer:
  4589                           	opt callstack 0
  4590                           
  4591 ;; *************** function _EUSART1_is_tx_ready *****************
  4592 ;; Defined at:
  4593 ;;		line 94 in file "mcc_generated_files/eusart1.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;		None
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;		None
  4598 ;; Return value:  Size  Location     Type
  4599 ;;                  1    wreg      _Bool 
  4600 ;; Registers used:
  4601 ;;		wreg, status,2
  4602 ;; Tracked objects:
  4603 ;;		On entry : 0/0
  4604 ;;		On exit  : 0/0
  4605 ;;		Unchanged: 0/0
  4606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4608 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4610 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4611 ;;Total ram usage:        1 bytes
  4612 ;; Hardware stack levels used:    1
  4613 ;; Hardware stack levels required when called:   13
  4614 ;; This function calls:
  4615 ;;		Nothing
  4616 ;; This function is called by:
  4617 ;;		_read_from_usart
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           
  4621                           	psect	text5
  4622  00673A                     __ptext5:
  4623                           	opt callstack 0
  4624  00673A                     _EUSART1_is_tx_ready:
  4625                           	opt callstack 16
  4626  00673A                     
  4627                           ;mcc_generated_files/eusart1.c: 96:     return (_Bool)(PIR1bits.TX1IF && TXSTA1bits.TXEN
      +                          );
  4628  00673A  0E00               	movlw	0
  4629  00673C  0100               	movlb	0	; () banked
  4630  00673E  6F8F               	movwf	_EUSART1_is_tx_ready$859& (0+255),b
  4631  006740                     
  4632                           ; BSR set to: 0
  4633  006740  A89E               	btfss	158,4,c	;volatile
  4634  006742  EFA5  F033         	goto	u11831
  4635  006746  EFA7  F033         	goto	u11830
  4636  00674A                     u11831:
  4637  00674A  EFB0  F033         	goto	l277
  4638  00674E                     u11830:
  4639  00674E                     
  4640                           ; BSR set to: 0
  4641  00674E  AAAC               	btfss	172,5,c	;volatile
  4642  006750  EFAC  F033         	goto	u11841
  4643  006754  EFAE  F033         	goto	u11840
  4644  006758                     u11841:
  4645  006758  EFB0  F033         	goto	l277
  4646  00675C                     u11840:
  4647  00675C                     
  4648                           ; BSR set to: 0
  4649  00675C  0E01               	movlw	1
  4650  00675E  6F8F               	movwf	_EUSART1_is_tx_ready$859& (0+255),b
  4651  006760                     l277:
  4652                           
  4653                           ; BSR set to: 0
  4654  006760  518F               	movf	_EUSART1_is_tx_ready$859& (0+255),w,b
  4655  006762                     
  4656                           ; BSR set to: 0
  4657  006762  0012               	return		;funcret
  4658  006764                     __end_of_EUSART1_is_tx_ready:
  4659                           	opt callstack 0
  4660                           
  4661 ;; *************** function _EUSART1_is_rx_ready *****************
  4662 ;; Defined at:
  4663 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  4664 ;; Parameters:    Size  Location     Type
  4665 ;;		None
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;		None
  4668 ;; Return value:  Size  Location     Type
  4669 ;;                  1    wreg      _Bool 
  4670 ;; Registers used:
  4671 ;;		wreg
  4672 ;; Tracked objects:
  4673 ;;		On entry : 0/0
  4674 ;;		On exit  : 0/0
  4675 ;;		Unchanged: 0/0
  4676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4681 ;;Total ram usage:        0 bytes
  4682 ;; Hardware stack levels used:    1
  4683 ;; Hardware stack levels required when called:   13
  4684 ;; This function calls:
  4685 ;;		Nothing
  4686 ;; This function is called by:
  4687 ;;		_read_from_usart
  4688 ;; This function uses a non-reentrant model
  4689 ;;
  4690                           
  4691                           	psect	text6
  4692  00693E                     __ptext6:
  4693                           	opt callstack 0
  4694  00693E                     _EUSART1_is_rx_ready:
  4695                           	opt callstack 16
  4696  00693E                     
  4697                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  4698  00693E  BA9E               	btfsc	158,5,c	;volatile
  4699  006940  EFA4  F034         	goto	u11851
  4700  006944  EFA7  F034         	goto	u11850
  4701  006948                     u11851:
  4702  006948  0E01               	movlw	1
  4703  00694A  EFA8  F034         	goto	u11856
  4704  00694E                     u11850:
  4705  00694E  0E00               	movlw	0
  4706  006950                     u11856:
  4707  006950  0012               	return		;funcret
  4708  006952                     __end_of_EUSART1_is_rx_ready:
  4709                           	opt callstack 0
  4710                           
  4711 ;; *************** function _EUSART1_Read *****************
  4712 ;; Defined at:
  4713 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;		None
  4716 ;; Auto vars:     Size  Location     Type
  4717 ;;		None
  4718 ;; Return value:  Size  Location     Type
  4719 ;;                  1    wreg      unsigned char 
  4720 ;; Registers used:
  4721 ;;		wreg, status,2
  4722 ;; Tracked objects:
  4723 ;;		On entry : 0/0
  4724 ;;		On exit  : 0/0
  4725 ;;		Unchanged: 0/0
  4726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4731 ;;Total ram usage:        0 bytes
  4732 ;; Hardware stack levels used:    1
  4733 ;; Hardware stack levels required when called:   13
  4734 ;; This function calls:
  4735 ;;		Nothing
  4736 ;; This function is called by:
  4737 ;;		_read_from_usart
  4738 ;;		_main
  4739 ;;		_getch
  4740 ;; This function uses a non-reentrant model
  4741 ;;
  4742                           
  4743                           	psect	text7
  4744  006764                     __ptext7:
  4745                           	opt callstack 0
  4746  006764                     _EUSART1_Read:
  4747                           	opt callstack 16
  4748  006764                     l290:
  4749                           
  4750                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  4751  006764  AA9E               	btfss	158,5,c	;volatile
  4752  006766  EFB7  F033         	goto	u11861
  4753  00676A  EFB9  F033         	goto	u11860
  4754  00676E                     u11861:
  4755  00676E  EFB2  F033         	goto	l290
  4756  006772                     u11860:
  4757  006772                     
  4758                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  4759  006772  0E00               	movlw	0
  4760  006774  0100               	movlb	0	; () banked
  4761  006776  6FBF               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  4762  006778                     
  4763                           ; BSR set to: 0
  4764                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  4765  006778  A2AB               	btfss	171,1,c	;volatile
  4766  00677A  EFC1  F033         	goto	u11871
  4767  00677E  EFC3  F033         	goto	u11870
  4768  006782                     u11871:
  4769  006782  EFC5  F033         	goto	l9334
  4770  006786                     u11870:
  4771  006786                     
  4772                           ; BSR set to: 0
  4773                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  4774  006786  98AB               	bcf	171,4,c	;volatile
  4775                           
  4776                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  4777  006788  88AB               	bsf	171,4,c	;volatile
  4778  00678A                     l9334:
  4779                           
  4780                           ; BSR set to: 0
  4781                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  4782  00678A  50AE               	movf	174,w,c	;volatile
  4783  00678C                     
  4784                           ; BSR set to: 0
  4785  00678C  0012               	return		;funcret
  4786  00678E                     __end_of_EUSART1_Read:
  4787                           	opt callstack 0
  4788                           
  4789 ;; *************** function _printf *****************
  4790 ;; Defined at:
  4791 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  4792 ;; Parameters:    Size  Location     Type
  4793 ;;  fmt             2   84[BANK1 ] PTR const unsigned char 
  4794 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
  4795 ;;		 -> STR_4(22), STR_1(13), 
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;  ap              2   92[BANK1 ] PTR void [1]
  4798 ;;		 -> ?_snprintf(2), ?_printf(2), 
  4799 ;;  ret             2    0        int 
  4800 ;; Return value:  Size  Location     Type
  4801 ;;                  2   84[BANK1 ] int 
  4802 ;; Registers used:
  4803 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4804 ;; Tracked objects:
  4805 ;;		On entry : 0/0
  4806 ;;		On exit  : 0/0
  4807 ;;		Unchanged: 0/0
  4808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4809 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4810 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4812 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4813 ;;Total ram usage:       10 bytes
  4814 ;; Hardware stack levels used:    1
  4815 ;; Hardware stack levels required when called:   21
  4816 ;; This function calls:
  4817 ;;		_vfprintf
  4818 ;; This function is called by:
  4819 ;;		_main
  4820 ;; This function uses a non-reentrant model
  4821 ;;
  4822                           
  4823                           	psect	text8
  4824  0067B8                     __ptext8:
  4825                           	opt callstack 0
  4826  0067B8                     _printf:
  4827                           	opt callstack 9
  4828  0067B8  0E56               	movlw	low (?_printf+2)
  4829  0067BA  0101               	movlb	1	; () banked
  4830  0067BC  6F5C               	movwf	printf@ap& (0+255),b
  4831  0067BE  0E01               	movlw	high (?_printf+2)
  4832  0067C0  6F5D               	movwf	(printf@ap+1)& (0+255),b
  4833  0067C2                     
  4834                           ; BSR set to: 1
  4835  0067C2  0E00               	movlw	0
  4836  0067C4  6F4C               	movwf	vfprintf@fp& (0+255),b
  4837  0067C6  0E00               	movlw	0
  4838  0067C8  6F4D               	movwf	(vfprintf@fp+1)& (0+255),b
  4839  0067CA  C154  F14E         	movff	printf@fmt,vfprintf@fmt
  4840  0067CE  C155  F14F         	movff	printf@fmt+1,vfprintf@fmt+1
  4841  0067D2  0E5C               	movlw	low printf@ap
  4842  0067D4  6F50               	movwf	vfprintf@ap& (0+255),b
  4843  0067D6  0E01               	movlw	high printf@ap
  4844  0067D8  6F51               	movwf	(vfprintf@ap+1)& (0+255),b
  4845  0067DA  EC01  F02F         	call	_vfprintf	;wreg free
  4846  0067DE  0012               	return		;funcret
  4847  0067E0                     __end_of_printf:
  4848                           	opt callstack 0
  4849                           
  4850 ;; *************** function _vfprintf *****************
  4851 ;; Defined at:
  4852 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;  fp              2   76[BANK1 ] PTR struct _IO_FILE
  4855 ;;		 -> vsnprintf@f(6), NULL(0), 
  4856 ;;  fmt             2   78[BANK1 ] PTR const unsigned char 
  4857 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
  4858 ;;		 -> STR_4(22), STR_3(12), STR_1(13), 
  4859 ;;  ap              2   80[BANK1 ] PTR PTR void 
  4860 ;;		 -> snprintf@ap(2), printf@ap(2), 
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;  cfmt            2   82[BANK1 ] PTR unsigned char 
  4863 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
  4864 ;;		 -> STR_4(22), STR_3(12), STR_1(13), 
  4865 ;; Return value:  Size  Location     Type
  4866 ;;                  2   76[BANK1 ] int 
  4867 ;; Registers used:
  4868 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4869 ;; Tracked objects:
  4870 ;;		On entry : 0/0
  4871 ;;		On exit  : 0/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4874 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4875 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4877 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4878 ;;Total ram usage:        8 bytes
  4879 ;; Hardware stack levels used:    1
  4880 ;; Hardware stack levels required when called:   20
  4881 ;; This function calls:
  4882 ;;		_vfpfcnvrt
  4883 ;; This function is called by:
  4884 ;;		_printf
  4885 ;;		_vsnprintf
  4886 ;; This function uses a non-reentrant model
  4887 ;;
  4888                           
  4889                           	psect	text9
  4890  005E02                     __ptext9:
  4891                           	opt callstack 0
  4892  005E02                     _vfprintf:
  4893                           	opt callstack 8
  4894  005E02                     
  4895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4896  005E02  C14E  F152         	movff	vfprintf@fmt,vfprintf@cfmt
  4897  005E06  C14F  F153         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4898  005E0A                     
  4899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  4900  005E0A  0E00               	movlw	0
  4901  005E0C  0101               	movlb	1	; () banked
  4902  005E0E  6F80               	movwf	(_nout+1)& (0+255),b
  4903  005E10  0E00               	movlw	0
  4904  005E12  6F7F               	movwf	_nout& (0+255),b
  4905                           
  4906                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4907  005E14  EF1F  F02F         	goto	l9306
  4908  005E18                     l9304:
  4909                           
  4910                           ; BSR set to: 1
  4911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4912  005E18  C14C  F127         	movff	vfprintf@fp,vfpfcnvrt@fp
  4913  005E1C  C14D  F128         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4914  005E20  0E52               	movlw	low vfprintf@cfmt
  4915  005E22  6F29               	movwf	vfpfcnvrt@fmt& (0+255),b
  4916  005E24  0E01               	movlw	high vfprintf@cfmt
  4917  005E26  6F2A               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  4918  005E28  C150  F12B         	movff	vfprintf@ap,vfpfcnvrt@ap
  4919  005E2C  C151  F12C         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4920  005E30  EC51  F000         	call	_vfpfcnvrt	;wreg free
  4921  005E34  0101               	movlb	1	; () banked
  4922  005E36  5127               	movf	?_vfpfcnvrt& (0+255),w,b
  4923  005E38  277F               	addwf	_nout& (0+255),f,b
  4924  005E3A  5128               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  4925  005E3C  2380               	addwfc	(_nout+1)& (0+255),f,b
  4926  005E3E                     l9306:
  4927                           
  4928                           ; BSR set to: 1
  4929                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4930  005E3E  C152  FFF6         	movff	vfprintf@cfmt,tblptrl
  4931  005E42  C153  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4932  005E46                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4933  005E46  6AF8               	clrf	tblptru,c
  4934  005E48                     	endif
  4935  005E48                     	if	0	;tblptru may be non-zero
  4936  005E48                     	endif
  4937  005E48  0008               	tblrd		*
  4938  005E4A  50F5               	movf	tablat,w,c
  4939  005E4C  0900               	iorlw	0
  4940  005E4E  A4D8               	btfss	status,2,c
  4941  005E50  EF2C  F02F         	goto	u11801
  4942  005E54  EF2E  F02F         	goto	u11800
  4943  005E58                     u11801:
  4944  005E58  EF0C  F02F         	goto	l9304
  4945  005E5C                     u11800:
  4946  005E5C                     
  4947                           ; BSR set to: 1
  4948                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4949  005E5C  C17F  F14C         	movff	_nout,?_vfprintf
  4950  005E60  C180  F14D         	movff	_nout+1,?_vfprintf+1
  4951  005E64                     
  4952                           ; BSR set to: 1
  4953  005E64  0012               	return		;funcret
  4954  005E66                     __end_of_vfprintf:
  4955                           	opt callstack 0
  4956                           
  4957 ;; *************** function _vfpfcnvrt *****************
  4958 ;; Defined at:
  4959 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4960 ;; Parameters:    Size  Location     Type
  4961 ;;  fp              2   39[BANK1 ] PTR struct _IO_FILE
  4962 ;;		 -> vsnprintf@f(6), NULL(0), 
  4963 ;;  fmt             2   41[BANK1 ] PTR PTR unsigned char 
  4964 ;;		 -> vfprintf@cfmt(2), 
  4965 ;;  ap              2   43[BANK1 ] PTR PTR void 
  4966 ;;		 -> snprintf@ap(2), printf@ap(2), 
  4967 ;; Auto vars:     Size  Location     Type
  4968 ;;  llu             8   68[BANK1 ] unsigned long long 
  4969 ;;  ll              8   57[BANK1 ] long long 
  4970 ;;  f               4    0        long long 
  4971 ;;  ct              3    0        unsigned char [3]
  4972 ;;  vp              2   65[BANK1 ] PTR void 
  4973 ;;		 -> ?_snprintf(2), ?_printf(2), 
  4974 ;;  done            2   51[BANK1 ] int 
  4975 ;;  cp              2   49[BANK1 ] PTR unsigned char 
  4976 ;;		 -> ?_snprintf(2), ?_printf(2), 
  4977 ;;  i               2    0        int 
  4978 ;;  c               1   67[BANK1 ] unsigned char 
  4979 ;; Return value:  Size  Location     Type
  4980 ;;                  2   39[BANK1 ] int 
  4981 ;; Registers used:
  4982 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4983 ;; Tracked objects:
  4984 ;;		On entry : 0/0
  4985 ;;		On exit  : 0/0
  4986 ;;		Unchanged: 0/0
  4987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4988 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4989 ;;      Locals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4990 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4991 ;;      Totals:         0       0      37       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4992 ;;Total ram usage:       37 bytes
  4993 ;; Hardware stack levels used:    1
  4994 ;; Hardware stack levels required when called:   19
  4995 ;; This function calls:
  4996 ;;		_atoi
  4997 ;;		_ctoa
  4998 ;;		_dtoa
  4999 ;;		_fputc
  5000 ;;		_isdigit
  5001 ;;		_otoa
  5002 ;;		_stoa
  5003 ;;		_strncmp
  5004 ;;		_utoa
  5005 ;;		_xtoa
  5006 ;; This function is called by:
  5007 ;;		_vfprintf
  5008 ;; This function uses a non-reentrant model
  5009 ;;
  5010                           
  5011                           	psect	text10
  5012  0000A2                     __ptext10:
  5013                           	opt callstack 0
  5014  0000A2                     _vfpfcnvrt:
  5015                           	opt callstack 8
  5016  0000A2                     
  5017                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5018  0000A2  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5019  0000A6  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5020  0000AA  CFDE FFF6          	movff	postinc2,tblptrl
  5021  0000AE  CFDD FFF7          	movff	postdec2,tblptrh
  5022  0000B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5023  0000B2  6AF8               	clrf	tblptru,c
  5024  0000B4                     	endif
  5025  0000B4                     	if	0	;tblptru may be non-zero
  5026  0000B4                     	endif
  5027  0000B4  0008               	tblrd		*
  5028  0000B6  50F5               	movf	tablat,w,c
  5029  0000B8  0A25               	xorlw	37
  5030  0000BA  A4D8               	btfss	status,2,c
  5031  0000BC  EF62  F000         	goto	u11311
  5032  0000C0  EF64  F000         	goto	u11310
  5033  0000C4                     u11311:
  5034  0000C4  EF92  F009         	goto	l9252
  5035  0000C8                     u11310:
  5036  0000C8                     
  5037                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  5038  0000C8  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5039  0000CC  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5040  0000D0  2ADE               	incf	postinc2,f,c
  5041  0000D2  0E00               	movlw	0
  5042  0000D4  22DD               	addwfc	postdec2,f,c
  5043  0000D6                     
  5044                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5045  0000D6  0E00               	movlw	0
  5046  0000D8  0100               	movlb	0	; () banked
  5047  0000DA  6FB6               	movwf	(_width+1)& (0+255),b
  5048  0000DC  0E00               	movlw	0
  5049  0000DE  6FB5               	movwf	_width& (0+255),b
  5050  0000E0  C0B5  F0B9         	movff	_width,_flags
  5051  0000E4  C0B6  F0BA         	movff	_width+1,_flags+1
  5052  0000E8                     
  5053                           ; BSR set to: 0
  5054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5055  0000E8  69B7               	setf	_prec& (0+255),b
  5056  0000EA  69B8               	setf	(_prec+1)& (0+255),b
  5057  0000EC                     
  5058                           ; BSR set to: 0
  5059                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  5060  0000EC  0E00               	movlw	0
  5061  0000EE  0101               	movlb	1	; () banked
  5062  0000F0  6F34               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  5063  0000F2  0E00               	movlw	0
  5064  0000F4  6F33               	movwf	vfpfcnvrt@done& (0+255),b
  5065                           
  5066                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  5067  0000F6  EFC9  F000         	goto	l8970
  5068  0000FA                     l8944:
  5069                           
  5070                           ; BSR set to: 1
  5071                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  5072  0000FA  0100               	movlb	0	; () banked
  5073  0000FC  81B9               	bsf	_flags& (0+255),0,b
  5074  0000FE                     l8946:
  5075                           
  5076                           ; BSR set to: 0
  5077                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  5078  0000FE  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5079  000102  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5080  000106  2ADE               	incf	postinc2,f,c
  5081  000108  0E00               	movlw	0
  5082  00010A  22DD               	addwfc	postdec2,f,c
  5083                           
  5084                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  5085  00010C  EFC9  F000         	goto	l8970
  5086  000110                     l8948:
  5087                           
  5088                           ; BSR set to: 1
  5089                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  5090  000110  0100               	movlb	0	; () banked
  5091  000112  83B9               	bsf	_flags& (0+255),1,b
  5092  000114  EF7F  F000         	goto	l8946
  5093  000118                     l8952:
  5094                           
  5095                           ; BSR set to: 1
  5096                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  5097  000118  0100               	movlb	0	; () banked
  5098  00011A  85B9               	bsf	_flags& (0+255),2,b
  5099  00011C  EF7F  F000         	goto	l8946
  5100  000120                     l8956:
  5101                           
  5102                           ; BSR set to: 1
  5103                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  5104  000120  0100               	movlb	0	; () banked
  5105  000122  87B9               	bsf	_flags& (0+255),3,b
  5106  000124  EF7F  F000         	goto	l8946
  5107  000128                     l8960:
  5108                           
  5109                           ; BSR set to: 1
  5110                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  5111  000128  0100               	movlb	0	; () banked
  5112  00012A  89B9               	bsf	_flags& (0+255),4,b
  5113  00012C  EF7F  F000         	goto	l8946
  5114  000130                     l8964:
  5115                           
  5116                           ; BSR set to: 1
  5117                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  5118  000130  0E00               	movlw	0
  5119  000132  6F34               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  5120  000134  0E01               	movlw	1
  5121  000136  6F33               	movwf	vfpfcnvrt@done& (0+255),b
  5122                           
  5123                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  5124  000138  EFC9  F000         	goto	l8970
  5125  00013C                     l8968:
  5126                           
  5127                           ; BSR set to: 1
  5128  00013C  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5129  000140  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5130  000144  CFDE FFF6          	movff	postinc2,tblptrl
  5131  000148  CFDD FFF7          	movff	postdec2,tblptrh
  5132  00014C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5133  00014C  6AF8               	clrf	tblptru,c
  5134  00014E                     	endif
  5135  00014E                     	if	0	;tblptru may be non-zero
  5136  00014E                     	endif
  5137  00014E  0008               	tblrd		*
  5138  000150  50F5               	movf	tablat,w,c
  5139  000152  6F2D               	movwf	??_vfpfcnvrt& (0+255),b
  5140  000154  6B2E               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  5141                           
  5142                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5143                           ; Switch size 1, requested type "simple"
  5144                           ; Number of cases is 1, Range of values is 0 to 0
  5145                           ; switch strategies available:
  5146                           ; Name         Instructions Cycles
  5147                           ; simple_byte            4     3 (average)
  5148                           ;	Chosen strategy is simple_byte
  5149  000156  512E               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5150  000158  0A00               	xorlw	0	; case 0
  5151  00015A  B4D8               	btfsc	status,2,c
  5152  00015C  EFB2  F000         	goto	l9982
  5153  000160  EF98  F000         	goto	l8964
  5154  000164                     l9982:
  5155                           
  5156                           ; BSR set to: 1
  5157                           ; Switch size 1, requested type "simple"
  5158                           ; Number of cases is 5, Range of values is 32 to 48
  5159                           ; switch strategies available:
  5160                           ; Name         Instructions Cycles
  5161                           ; simple_byte           16     9 (average)
  5162                           ;	Chosen strategy is simple_byte
  5163  000164  512D               	movf	??_vfpfcnvrt& (0+255),w,b
  5164  000166  0A20               	xorlw	32	; case 32
  5165  000168  B4D8               	btfsc	status,2,c
  5166  00016A  EF90  F000         	goto	l8956
  5167  00016E  0A03               	xorlw	3	; case 35
  5168  000170  B4D8               	btfsc	status,2,c
  5169  000172  EF94  F000         	goto	l8960
  5170  000176  0A08               	xorlw	8	; case 43
  5171  000178  B4D8               	btfsc	status,2,c
  5172  00017A  EF8C  F000         	goto	l8952
  5173  00017E  0A06               	xorlw	6	; case 45
  5174  000180  B4D8               	btfsc	status,2,c
  5175  000182  EF7D  F000         	goto	l8944
  5176  000186  0A1D               	xorlw	29	; case 48
  5177  000188  B4D8               	btfsc	status,2,c
  5178  00018A  EF88  F000         	goto	l8948
  5179  00018E  EF98  F000         	goto	l8964
  5180  000192                     l8970:
  5181                           
  5182                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  5183  000192  0101               	movlb	1	; () banked
  5184  000194  5133               	movf	vfpfcnvrt@done& (0+255),w,b
  5185  000196  1134               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  5186  000198  B4D8               	btfsc	status,2,c
  5187  00019A  EFD1  F000         	goto	u11321
  5188  00019E  EFD3  F000         	goto	u11320
  5189  0001A2                     u11321:
  5190  0001A2  EF9E  F000         	goto	l8968
  5191  0001A6                     u11320:
  5192  0001A6                     
  5193                           ; BSR set to: 1
  5194                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  5195  0001A6  0100               	movlb	0	; () banked
  5196  0001A8  A1B9               	btfss	_flags& (0+255),0,b
  5197  0001AA  EFD9  F000         	goto	u11331
  5198  0001AE  EFDB  F000         	goto	u11330
  5199  0001B2                     u11331:
  5200  0001B2  EFDC  F000         	goto	l8974
  5201  0001B6                     u11330:
  5202  0001B6                     
  5203                           ; BSR set to: 0
  5204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  5205  0001B6  93B9               	bcf	_flags& (0+255),1,b
  5206  0001B8                     l8974:
  5207                           
  5208                           ; BSR set to: 0
  5209                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  5210  0001B8  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5211  0001BC  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5212  0001C0  CFDE FFF6          	movff	postinc2,tblptrl
  5213  0001C4  CFDD FFF7          	movff	postdec2,tblptrh
  5214  0001C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5215  0001C8  6AF8               	clrf	tblptru,c
  5216  0001CA                     	endif
  5217  0001CA                     	if	0	;tblptru may be non-zero
  5218  0001CA                     	endif
  5219  0001CA  0008               	tblrd		*
  5220  0001CC  50F5               	movf	tablat,w,c
  5221  0001CE  0A2A               	xorlw	42
  5222  0001D0  A4D8               	btfss	status,2,c
  5223  0001D2  EFED  F000         	goto	u11341
  5224  0001D6  EFEF  F000         	goto	u11340
  5225  0001DA                     u11341:
  5226  0001DA  EF18  F001         	goto	l8982
  5227  0001DE                     u11340:
  5228  0001DE                     
  5229                           ; BSR set to: 0
  5230                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  5231  0001DE  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5232  0001E2  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5233  0001E6  2ADE               	incf	postinc2,f,c
  5234  0001E8  0E00               	movlw	0
  5235  0001EA  22DD               	addwfc	postdec2,f,c
  5236                           
  5237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  5238  0001EC  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5239  0001F0  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5240  0001F4  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  5241  0001F8  0E02               	movlw	2
  5242  0001FA  26DE               	addwf	postinc2,f,c
  5243  0001FC  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  5244  000200  0E00               	movlw	0
  5245  000202  22DD               	addwfc	postdec2,f,c
  5246  000204  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5247  000208  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5248  00020C  CFDE F0B5          	movff	postinc2,_width
  5249  000210  CFDD F0B6          	movff	postdec2,_width+1
  5250  000214                     
  5251                           ; BSR set to: 0
  5252                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  5253  000214  BFB6               	btfsc	(_width+1)& (0+255),7,b
  5254  000216  EF11  F001         	goto	u11350
  5255  00021A  EF0F  F001         	goto	u11351
  5256  00021E                     u11351:
  5257  00021E  EF5D  F001         	goto	l8992
  5258  000222                     u11350:
  5259  000222                     
  5260                           ; BSR set to: 0
  5261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  5262  000222  81B9               	bsf	_flags& (0+255),0,b
  5263                           
  5264                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  5265  000224  6DB5               	negf	_width& (0+255),b
  5266  000226  1FB6               	comf	(_width+1)& (0+255),f,b
  5267  000228  B0D8               	btfsc	status,0,c
  5268  00022A  2BB6               	incf	(_width+1)& (0+255),f,b
  5269  00022C  EF5D  F001         	goto	l8992
  5270  000230                     l8982:
  5271                           
  5272                           ; BSR set to: 0
  5273                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  5274  000230  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5275  000234  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5276  000238  CFDE F096          	movff	postinc2,atoi@s
  5277  00023C  CFDD F097          	movff	postdec2,atoi@s+1
  5278  000240  EC74  F01D         	call	_atoi	;wreg free
  5279  000244  C096  F0B5         	movff	?_atoi,_width
  5280  000248  C097  F0B6         	movff	?_atoi+1,_width+1
  5281                           
  5282                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5283  00024C  EF2F  F001         	goto	l8986
  5284  000250                     l8984:
  5285                           
  5286                           ; BSR set to: 1
  5287                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  5288  000250  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5289  000254  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5290  000258  2ADE               	incf	postinc2,f,c
  5291  00025A  0E00               	movlw	0
  5292  00025C  22DD               	addwfc	postdec2,f,c
  5293  00025E                     l8986:
  5294  00025E  0ED0               	movlw	208
  5295  000260  0101               	movlb	1	; () banked
  5296  000262  6F2D               	movwf	??_vfpfcnvrt& (0+255),b
  5297  000264  0EFF               	movlw	255
  5298  000266  6F2E               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5299  000268  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5300  00026C  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5301  000270  CFDE FFF6          	movff	postinc2,tblptrl
  5302  000274  CFDD FFF7          	movff	postdec2,tblptrh
  5303  000278                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5304  000278  6AF8               	clrf	tblptru,c
  5305  00027A                     	endif
  5306  00027A                     	if	0	;tblptru may be non-zero
  5307  00027A                     	endif
  5308  00027A  0008               	tblrd		*
  5309  00027C  50F5               	movf	tablat,w,c
  5310  00027E  6F2F               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5311  000280  6B30               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5312  000282  512D               	movf	??_vfpfcnvrt& (0+255),w,b
  5313  000284  272F               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5314  000286  512E               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5315  000288  2330               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5316  00028A  5130               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5317  00028C  E10A               	bnz	u11360
  5318  00028E  0E0A               	movlw	10
  5319  000290  5D2F               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5320  000292  A0D8               	btfss	status,0,c
  5321  000294  EF4E  F001         	goto	u11361
  5322  000298  EF51  F001         	goto	u11360
  5323  00029C                     u11361:
  5324  00029C  0E01               	movlw	1
  5325  00029E  EF52  F001         	goto	u11370
  5326  0002A2                     u11360:
  5327  0002A2  0E00               	movlw	0
  5328  0002A4                     u11370:
  5329  0002A4  6F35               	movwf	_vfpfcnvrt$1876& (0+255),b
  5330  0002A6  6B36               	clrf	(_vfpfcnvrt$1876+1)& (0+255),b
  5331  0002A8                     
  5332                           ; BSR set to: 1
  5333  0002A8  5135               	movf	_vfpfcnvrt$1876& (0+255),w,b
  5334  0002AA  1136               	iorwf	(_vfpfcnvrt$1876+1)& (0+255),w,b
  5335  0002AC  A4D8               	btfss	status,2,c
  5336  0002AE  EF5B  F001         	goto	u11381
  5337  0002B2  EF5D  F001         	goto	u11380
  5338  0002B6                     u11381:
  5339  0002B6  EF28  F001         	goto	l8984
  5340  0002BA                     u11380:
  5341  0002BA                     l8992:
  5342                           
  5343                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  5344  0002BA  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5345  0002BE  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5346  0002C2  CFDE FFF6          	movff	postinc2,tblptrl
  5347  0002C6  CFDD FFF7          	movff	postdec2,tblptrh
  5348  0002CA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5349  0002CA  6AF8               	clrf	tblptru,c
  5350  0002CC                     	endif
  5351  0002CC                     	if	0	;tblptru may be non-zero
  5352  0002CC                     	endif
  5353  0002CC  0008               	tblrd		*
  5354  0002CE  50F5               	movf	tablat,w,c
  5355  0002D0  0A2E               	xorlw	46
  5356  0002D2  A4D8               	btfss	status,2,c
  5357  0002D4  EF6E  F001         	goto	u11391
  5358  0002D8  EF70  F001         	goto	u11390
  5359  0002DC                     u11391:
  5360  0002DC  EFF1  F001         	goto	l9012
  5361  0002E0                     u11390:
  5362  0002E0                     
  5363                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  5364  0002E0  0E00               	movlw	0
  5365  0002E2  0100               	movlb	0	; () banked
  5366  0002E4  6FB8               	movwf	(_prec+1)& (0+255),b
  5367  0002E6  0E00               	movlw	0
  5368  0002E8  6FB7               	movwf	_prec& (0+255),b
  5369  0002EA                     
  5370                           ; BSR set to: 0
  5371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  5372  0002EA  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5373  0002EE  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5374  0002F2  2ADE               	incf	postinc2,f,c
  5375  0002F4  0E00               	movlw	0
  5376  0002F6  22DD               	addwfc	postdec2,f,c
  5377  0002F8                     
  5378                           ; BSR set to: 0
  5379                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  5380  0002F8  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5381  0002FC  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5382  000300  CFDE FFF6          	movff	postinc2,tblptrl
  5383  000304  CFDD FFF7          	movff	postdec2,tblptrh
  5384  000308                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5385  000308  6AF8               	clrf	tblptru,c
  5386  00030A                     	endif
  5387  00030A                     	if	0	;tblptru may be non-zero
  5388  00030A                     	endif
  5389  00030A  0008               	tblrd		*
  5390  00030C  50F5               	movf	tablat,w,c
  5391  00030E  0A2A               	xorlw	42
  5392  000310  A4D8               	btfss	status,2,c
  5393  000312  EF8D  F001         	goto	u11401
  5394  000316  EF8F  F001         	goto	u11400
  5395  00031A                     u11401:
  5396  00031A  EFAC  F001         	goto	l9002
  5397  00031E                     u11400:
  5398  00031E                     
  5399                           ; BSR set to: 0
  5400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  5401  00031E  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5402  000322  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5403  000326  2ADE               	incf	postinc2,f,c
  5404  000328  0E00               	movlw	0
  5405  00032A  22DD               	addwfc	postdec2,f,c
  5406                           
  5407                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  5408  00032C  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5409  000330  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5410  000334  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  5411  000338  0E02               	movlw	2
  5412  00033A  26DE               	addwf	postinc2,f,c
  5413  00033C  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  5414  000340  0E00               	movlw	0
  5415  000342  22DD               	addwfc	postdec2,f,c
  5416  000344  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5417  000348  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5418  00034C  CFDE F0B7          	movff	postinc2,_prec
  5419  000350  CFDD F0B8          	movff	postdec2,_prec+1
  5420                           
  5421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  5422  000354  EFF1  F001         	goto	l9012
  5423  000358                     l9002:
  5424                           
  5425                           ; BSR set to: 0
  5426                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  5427  000358  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5428  00035C  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5429  000360  CFDE F096          	movff	postinc2,atoi@s
  5430  000364  CFDD F097          	movff	postdec2,atoi@s+1
  5431  000368  EC74  F01D         	call	_atoi	;wreg free
  5432  00036C  C096  F0B7         	movff	?_atoi,_prec
  5433  000370  C097  F0B8         	movff	?_atoi+1,_prec+1
  5434                           
  5435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5436  000374  EFC3  F001         	goto	l9006
  5437  000378                     l9004:
  5438                           
  5439                           ; BSR set to: 1
  5440                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  5441  000378  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5442  00037C  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5443  000380  2ADE               	incf	postinc2,f,c
  5444  000382  0E00               	movlw	0
  5445  000384  22DD               	addwfc	postdec2,f,c
  5446  000386                     l9006:
  5447  000386  0ED0               	movlw	208
  5448  000388  0101               	movlb	1	; () banked
  5449  00038A  6F2D               	movwf	??_vfpfcnvrt& (0+255),b
  5450  00038C  0EFF               	movlw	255
  5451  00038E  6F2E               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5452  000390  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5453  000394  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5454  000398  CFDE FFF6          	movff	postinc2,tblptrl
  5455  00039C  CFDD FFF7          	movff	postdec2,tblptrh
  5456  0003A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5457  0003A0  6AF8               	clrf	tblptru,c
  5458  0003A2                     	endif
  5459  0003A2                     	if	0	;tblptru may be non-zero
  5460  0003A2                     	endif
  5461  0003A2  0008               	tblrd		*
  5462  0003A4  50F5               	movf	tablat,w,c
  5463  0003A6  6F2F               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5464  0003A8  6B30               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5465  0003AA  512D               	movf	??_vfpfcnvrt& (0+255),w,b
  5466  0003AC  272F               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5467  0003AE  512E               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5468  0003B0  2330               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5469  0003B2  5130               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5470  0003B4  E10A               	bnz	u11410
  5471  0003B6  0E0A               	movlw	10
  5472  0003B8  5D2F               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5473  0003BA  A0D8               	btfss	status,0,c
  5474  0003BC  EFE2  F001         	goto	u11411
  5475  0003C0  EFE5  F001         	goto	u11410
  5476  0003C4                     u11411:
  5477  0003C4  0E01               	movlw	1
  5478  0003C6  EFE6  F001         	goto	u11420
  5479  0003CA                     u11410:
  5480  0003CA  0E00               	movlw	0
  5481  0003CC                     u11420:
  5482  0003CC  6F37               	movwf	_vfpfcnvrt$1877& (0+255),b
  5483  0003CE  6B38               	clrf	(_vfpfcnvrt$1877+1)& (0+255),b
  5484  0003D0                     
  5485                           ; BSR set to: 1
  5486  0003D0  5137               	movf	_vfpfcnvrt$1877& (0+255),w,b
  5487  0003D2  1138               	iorwf	(_vfpfcnvrt$1877+1)& (0+255),w,b
  5488  0003D4  A4D8               	btfss	status,2,c
  5489  0003D6  EFEF  F001         	goto	u11431
  5490  0003DA  EFF1  F001         	goto	u11430
  5491  0003DE                     u11431:
  5492  0003DE  EFBC  F001         	goto	l9004
  5493  0003E2                     u11430:
  5494  0003E2                     l9012:
  5495                           
  5496                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  5497  0003E2  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5498  0003E6  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5499  0003EA  CFDE FFF6          	movff	postinc2,tblptrl
  5500  0003EE  CFDD FFF7          	movff	postdec2,tblptrh
  5501  0003F2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5502  0003F2  6AF8               	clrf	tblptru,c
  5503  0003F4                     	endif
  5504  0003F4                     	if	0	;tblptru may be non-zero
  5505  0003F4                     	endif
  5506  0003F4  0008               	tblrd		*
  5507  0003F6  50F5               	movf	tablat,w,c
  5508  0003F8  0A63               	xorlw	99
  5509  0003FA  A4D8               	btfss	status,2,c
  5510  0003FC  EF02  F002         	goto	u11441
  5511  000400  EF04  F002         	goto	u11440
  5512  000404                     u11441:
  5513  000404  EF2C  F002         	goto	l9020
  5514  000408                     u11440:
  5515  000408                     
  5516                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  5517  000408  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5518  00040C  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5519  000410  2ADE               	incf	postinc2,f,c
  5520  000412  0E00               	movlw	0
  5521  000414  22DD               	addwfc	postdec2,f,c
  5522                           
  5523                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5524  000416  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5525  00041A  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5526  00041E  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  5527  000422  0E02               	movlw	2
  5528  000424  26DE               	addwf	postinc2,f,c
  5529  000426  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  5530  00042A  0E00               	movlw	0
  5531  00042C  22DD               	addwfc	postdec2,f,c
  5532  00042E  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5533  000432  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5534  000436  50DF               	movf	indf2,w,c
  5535  000438  0101               	movlb	1	; () banked
  5536  00043A  6F43               	movwf	vfpfcnvrt@c& (0+255),b
  5537  00043C                     
  5538                           ; BSR set to: 1
  5539                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  5540  00043C  C127  F0AC         	movff	vfpfcnvrt@fp,ctoa@fp
  5541  000440  C128  F0AD         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  5542  000444  C143  F0AE         	movff	vfpfcnvrt@c,ctoa@c
  5543  000448  EC95  F02F         	call	_ctoa	;wreg free
  5544  00044C  C0AC  F127         	movff	?_ctoa,?_vfpfcnvrt
  5545  000450  C0AD  F128         	movff	?_ctoa+1,?_vfpfcnvrt+1
  5546  000454  EFAF  F009         	goto	l878
  5547  000458                     l9020:
  5548                           
  5549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
  5550  000458  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5551  00045C  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5552  000460  CFDE F08F          	movff	postinc2,strncmp@_l
  5553  000464  CFDD F090          	movff	postdec2,strncmp@_l+1
  5554  000468  0ED1               	movlw	low STR_9
  5555  00046A  0100               	movlb	0	; () banked
  5556  00046C  6F91               	movwf	strncmp@_r& (0+255),b
  5557  00046E  0EFF               	movlw	high STR_9
  5558  000470  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  5559  000472  0E00               	movlw	0
  5560  000474  6F94               	movwf	(strncmp@n+1)& (0+255),b
  5561  000476  0E03               	movlw	3
  5562  000478  6F93               	movwf	strncmp@n& (0+255),b
  5563  00047A  EC4A  F02A         	call	_strncmp	;wreg free
  5564  00047E  0100               	movlb	0	; () banked
  5565  000480  518F               	movf	?_strncmp& (0+255),w,b
  5566  000482  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  5567  000484  B4D8               	btfsc	status,2,c
  5568  000486  EF47  F002         	goto	u11451
  5569  00048A  EF49  F002         	goto	u11450
  5570  00048E                     u11451:
  5571  00048E  EF65  F002         	goto	l9024
  5572  000492                     u11450:
  5573  000492                     
  5574                           ; BSR set to: 0
  5575  000492  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5576  000496  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5577  00049A  CFDE F08F          	movff	postinc2,strncmp@_l
  5578  00049E  CFDD F090          	movff	postdec2,strncmp@_l+1
  5579  0004A2  0ED5               	movlw	low STR_13
  5580  0004A4  6F91               	movwf	strncmp@_r& (0+255),b
  5581  0004A6  0EFF               	movlw	high STR_13
  5582  0004A8  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  5583  0004AA  0E00               	movlw	0
  5584  0004AC  6F94               	movwf	(strncmp@n+1)& (0+255),b
  5585  0004AE  0E03               	movlw	3
  5586  0004B0  6F93               	movwf	strncmp@n& (0+255),b
  5587  0004B2  EC4A  F02A         	call	_strncmp	;wreg free
  5588  0004B6  0100               	movlb	0	; () banked
  5589  0004B8  518F               	movf	?_strncmp& (0+255),w,b
  5590  0004BA  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  5591  0004BC  A4D8               	btfss	status,2,c
  5592  0004BE  EF63  F002         	goto	u11461
  5593  0004C2  EF65  F002         	goto	u11460
  5594  0004C6                     u11461:
  5595  0004C6  EFA6  F002         	goto	l9030
  5596  0004CA                     u11460:
  5597  0004CA                     l9024:
  5598                           
  5599                           ; BSR set to: 0
  5600                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
  5601  0004CA  0E03               	movlw	3
  5602  0004CC  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5603  0004D0  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5604  0004D4  26DE               	addwf	postinc2,f,c
  5605  0004D6  0E00               	movlw	0
  5606  0004D8  22DD               	addwfc	postdec2,f,c
  5607                           
  5608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5609  0004DA  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5610  0004DE  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5611  0004E2  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  5612  0004E6  0E02               	movlw	2
  5613  0004E8  26DE               	addwf	postinc2,f,c
  5614  0004EA  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  5615  0004EE  0E00               	movlw	0
  5616  0004F0  22DD               	addwfc	postdec2,f,c
  5617  0004F2  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5618  0004F6  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5619  0004FA  50DF               	movf	indf2,w,c
  5620  0004FC  0101               	movlb	1	; () banked
  5621  0004FE  6F39               	movwf	vfpfcnvrt@ll& (0+255),b
  5622  000500  0E00               	movlw	0
  5623  000502  BF39               	btfsc	vfpfcnvrt@ll& (0+255),7,b
  5624  000504  0EFF               	movlw	-1
  5625  000506  6F3A               	movwf	(vfpfcnvrt@ll+1)& (0+255),b
  5626  000508  6F3B               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  5627  00050A  6F3C               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  5628  00050C  6F3D               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  5629  00050E  6F3E               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  5630  000510  6F3F               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  5631  000512  6F40               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  5632  000514                     l9026:
  5633                           
  5634                           ; BSR set to: 1
  5635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
  5636  000514  C127  F100         	movff	vfpfcnvrt@fp,dtoa@fp
  5637  000518  C128  F101         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5638  00051C  C139  F102         	movff	vfpfcnvrt@ll,dtoa@d
  5639  000520  C13A  F103         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5640  000524  C13B  F104         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5641  000528  C13C  F105         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5642  00052C  C13D  F106         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5643  000530  C13E  F107         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5644  000534  C13F  F108         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5645  000538  C140  F109         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5646  00053C  EC8F  F016         	call	_dtoa	;wreg free
  5647  000540  C100  F127         	movff	?_dtoa,?_vfpfcnvrt
  5648  000544  C101  F128         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5649  000548  EFAF  F009         	goto	l878
  5650  00054C                     l9030:
  5651                           
  5652                           ; BSR set to: 0
  5653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
  5654  00054C  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5655  000550  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5656  000554  CFDE F08F          	movff	postinc2,strncmp@_l
  5657  000558  CFDD F090          	movff	postdec2,strncmp@_l+1
  5658  00055C  0ED2               	movlw	low (STR_9+1)
  5659  00055E  6F91               	movwf	strncmp@_r& (0+255),b
  5660  000560  0EFF               	movlw	high (STR_9+1)
  5661  000562  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  5662  000564  0E00               	movlw	0
  5663  000566  6F94               	movwf	(strncmp@n+1)& (0+255),b
  5664  000568  0E02               	movlw	2
  5665  00056A  6F93               	movwf	strncmp@n& (0+255),b
  5666  00056C  EC4A  F02A         	call	_strncmp	;wreg free
  5667  000570  0100               	movlb	0	; () banked
  5668  000572  518F               	movf	?_strncmp& (0+255),w,b
  5669  000574  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  5670  000576  B4D8               	btfsc	status,2,c
  5671  000578  EFC0  F002         	goto	u11471
  5672  00057C  EFC2  F002         	goto	u11470
  5673  000580                     u11471:
  5674  000580  EFDE  F002         	goto	l9034
  5675  000584                     u11470:
  5676  000584                     
  5677                           ; BSR set to: 0
  5678  000584  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5679  000588  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5680  00058C  CFDE F08F          	movff	postinc2,strncmp@_l
  5681  000590  CFDD F090          	movff	postdec2,strncmp@_l+1
  5682  000594  0ED6               	movlw	low (STR_13+1)
  5683  000596  6F91               	movwf	strncmp@_r& (0+255),b
  5684  000598  0EFF               	movlw	high (STR_13+1)
  5685  00059A  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  5686  00059C  0E00               	movlw	0
  5687  00059E  6F94               	movwf	(strncmp@n+1)& (0+255),b
  5688  0005A0  0E02               	movlw	2
  5689  0005A2  6F93               	movwf	strncmp@n& (0+255),b
  5690  0005A4  EC4A  F02A         	call	_strncmp	;wreg free
  5691  0005A8  0100               	movlb	0	; () banked
  5692  0005AA  518F               	movf	?_strncmp& (0+255),w,b
  5693  0005AC  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  5694  0005AE  A4D8               	btfss	status,2,c
  5695  0005B0  EFDC  F002         	goto	u11481
  5696  0005B4  EFDE  F002         	goto	u11480
  5697  0005B8                     u11481:
  5698  0005B8  EF06  F003         	goto	l9040
  5699  0005BC                     u11480:
  5700  0005BC                     l9034:
  5701                           
  5702                           ; BSR set to: 0
  5703                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
  5704  0005BC  0E02               	movlw	2
  5705  0005BE  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5706  0005C2  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5707  0005C6  26DE               	addwf	postinc2,f,c
  5708  0005C8  0E00               	movlw	0
  5709  0005CA  22DD               	addwfc	postdec2,f,c
  5710                           
  5711                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5712  0005CC  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5713  0005D0  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5714  0005D4  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  5715  0005D8  0E02               	movlw	2
  5716  0005DA  26DE               	addwf	postinc2,f,c
  5717  0005DC  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  5718  0005E0  0E00               	movlw	0
  5719  0005E2  22DD               	addwfc	postdec2,f,c
  5720  0005E4  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5721  0005E8  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5722  0005EC  CFDE F139          	movff	postinc2,vfpfcnvrt@ll
  5723  0005F0  CFDD F13A          	movff	postdec2,vfpfcnvrt@ll+1
  5724  0005F4  0101               	movlb	1	; () banked
  5725  0005F6  0E00               	movlw	0
  5726  0005F8  BF3A               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  5727  0005FA  0EFF               	movlw	-1
  5728  0005FC  6F3B               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  5729  0005FE  6F3C               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  5730  000600  6F3D               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  5731  000602  6F3E               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  5732  000604  6F3F               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  5733  000606  6F40               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  5734  000608  EF8A  F002         	goto	l9026
  5735  00060C                     l9040:
  5736                           
  5737                           ; BSR set to: 0
  5738                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5739  00060C  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5740  000610  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5741  000614  CFDE FFF6          	movff	postinc2,tblptrl
  5742  000618  CFDD FFF7          	movff	postdec2,tblptrh
  5743  00061C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5744  00061C  6AF8               	clrf	tblptru,c
  5745  00061E                     	endif
  5746  00061E                     	if	0	;tblptru may be non-zero
  5747  00061E                     	endif
  5748  00061E  0008               	tblrd		*
  5749  000620  50F5               	movf	tablat,w,c
  5750  000622  0A64               	xorlw	100
  5751  000624  B4D8               	btfsc	status,2,c
  5752  000626  EF17  F003         	goto	u11491
  5753  00062A  EF19  F003         	goto	u11490
  5754  00062E                     u11491:
  5755  00062E  EF2C  F003         	goto	l9044
  5756  000632                     u11490:
  5757  000632                     
  5758                           ; BSR set to: 0
  5759  000632  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5760  000636  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5761  00063A  CFDE FFF6          	movff	postinc2,tblptrl
  5762  00063E  CFDD FFF7          	movff	postdec2,tblptrh
  5763  000642                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5764  000642  6AF8               	clrf	tblptru,c
  5765  000644                     	endif
  5766  000644                     	if	0	;tblptru may be non-zero
  5767  000644                     	endif
  5768  000644  0008               	tblrd		*
  5769  000646  50F5               	movf	tablat,w,c
  5770  000648  0A69               	xorlw	105
  5771  00064A  A4D8               	btfss	status,2,c
  5772  00064C  EF2A  F003         	goto	u11501
  5773  000650  EF2C  F003         	goto	u11500
  5774  000654                     u11501:
  5775  000654  EF53  F003         	goto	l9050
  5776  000658                     u11500:
  5777  000658                     l9044:
  5778                           
  5779                           ; BSR set to: 0
  5780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  5781  000658  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5782  00065C  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5783  000660  2ADE               	incf	postinc2,f,c
  5784  000662  0E00               	movlw	0
  5785  000664  22DD               	addwfc	postdec2,f,c
  5786                           
  5787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5788  000666  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5789  00066A  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5790  00066E  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  5791  000672  0E02               	movlw	2
  5792  000674  26DE               	addwf	postinc2,f,c
  5793  000676  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  5794  00067A  0E00               	movlw	0
  5795  00067C  22DD               	addwfc	postdec2,f,c
  5796  00067E  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5797  000682  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5798  000686  CFDE F139          	movff	postinc2,vfpfcnvrt@ll
  5799  00068A  CFDD F13A          	movff	postdec2,vfpfcnvrt@ll+1
  5800  00068E  0101               	movlb	1	; () banked
  5801  000690  0E00               	movlw	0
  5802  000692  BF3A               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  5803  000694  0EFF               	movlw	-1
  5804  000696  6F3B               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  5805  000698  6F3C               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  5806  00069A  6F3D               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  5807  00069C  6F3E               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  5808  00069E  6F3F               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  5809  0006A0  6F40               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  5810  0006A2  EF8A  F002         	goto	l9026
  5811  0006A6                     l9050:
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
  5815  0006A6  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5816  0006AA  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5817  0006AE  CFDE F08F          	movff	postinc2,strncmp@_l
  5818  0006B2  CFDD F090          	movff	postdec2,strncmp@_l+1
  5819  0006B6  0EEC               	movlw	low STR_27
  5820  0006B8  6F91               	movwf	strncmp@_r& (0+255),b
  5821  0006BA  0EFF               	movlw	high STR_27
  5822  0006BC  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  5823  0006BE  0E00               	movlw	0
  5824  0006C0  6F94               	movwf	(strncmp@n+1)& (0+255),b
  5825  0006C2  0E02               	movlw	2
  5826  0006C4  6F93               	movwf	strncmp@n& (0+255),b
  5827  0006C6  EC4A  F02A         	call	_strncmp	;wreg free
  5828  0006CA  0100               	movlb	0	; () banked
  5829  0006CC  518F               	movf	?_strncmp& (0+255),w,b
  5830  0006CE  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  5831  0006D0  B4D8               	btfsc	status,2,c
  5832  0006D2  EF6D  F003         	goto	u11511
  5833  0006D6  EF6F  F003         	goto	u11510
  5834  0006DA                     u11511:
  5835  0006DA  EF8B  F003         	goto	l9054
  5836  0006DE                     u11510:
  5837  0006DE                     
  5838                           ; BSR set to: 0
  5839  0006DE  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5840  0006E2  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5841  0006E6  CFDE F08F          	movff	postinc2,strncmp@_l
  5842  0006EA  CFDD F090          	movff	postdec2,strncmp@_l+1
  5843  0006EE  0EEF               	movlw	low STR_31
  5844  0006F0  6F91               	movwf	strncmp@_r& (0+255),b
  5845  0006F2  0EFF               	movlw	high STR_31
  5846  0006F4  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  5847  0006F6  0E00               	movlw	0
  5848  0006F8  6F94               	movwf	(strncmp@n+1)& (0+255),b
  5849  0006FA  0E02               	movlw	2
  5850  0006FC  6F93               	movwf	strncmp@n& (0+255),b
  5851  0006FE  EC4A  F02A         	call	_strncmp	;wreg free
  5852  000702  0100               	movlb	0	; () banked
  5853  000704  518F               	movf	?_strncmp& (0+255),w,b
  5854  000706  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  5855  000708  A4D8               	btfss	status,2,c
  5856  00070A  EF89  F003         	goto	u11521
  5857  00070E  EF8B  F003         	goto	u11520
  5858  000712                     u11521:
  5859  000712  EFB4  F003         	goto	l9060
  5860  000716                     u11520:
  5861  000716                     l9054:
  5862                           
  5863                           ; BSR set to: 0
  5864                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
  5865  000716  0E02               	movlw	2
  5866  000718  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5867  00071C  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5868  000720  26DE               	addwf	postinc2,f,c
  5869  000722  0E00               	movlw	0
  5870  000724  22DD               	addwfc	postdec2,f,c
  5871                           
  5872                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5873  000726  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5874  00072A  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5875  00072E  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  5876  000732  0E02               	movlw	2
  5877  000734  26DE               	addwf	postinc2,f,c
  5878  000736  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  5879  00073A  0E00               	movlw	0
  5880  00073C  22DD               	addwfc	postdec2,f,c
  5881  00073E  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5882  000742  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5883  000746  CFDE F12F          	movff	postinc2,??_vfpfcnvrt+2
  5884  00074A  CFDD F130          	movff	postdec2,??_vfpfcnvrt+3
  5885  00074E  C12F  F139         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  5886  000752  C130  F13A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  5887  000756  0101               	movlb	1	; () banked
  5888  000758  6B3B               	clrf	(vfpfcnvrt@ll+2)& (0+255),b
  5889  00075A  6B3C               	clrf	(vfpfcnvrt@ll+3)& (0+255),b
  5890  00075C  6B3D               	clrf	(vfpfcnvrt@ll+4)& (0+255),b
  5891  00075E  6B3E               	clrf	(vfpfcnvrt@ll+5)& (0+255),b
  5892  000760  6B3F               	clrf	(vfpfcnvrt@ll+6)& (0+255),b
  5893  000762  6B40               	clrf	(vfpfcnvrt@ll+7)& (0+255),b
  5894  000764  EF8A  F002         	goto	l9026
  5895  000768                     l9060:
  5896                           
  5897                           ; BSR set to: 0
  5898                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  5899  000768  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5900  00076C  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5901  000770  CFDE F08F          	movff	postinc2,strncmp@_l
  5902  000774  CFDD F090          	movff	postdec2,strncmp@_l+1
  5903  000778  0EDD               	movlw	low STR_36
  5904  00077A  6F91               	movwf	strncmp@_r& (0+255),b
  5905  00077C  0EFF               	movlw	high STR_36
  5906  00077E  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  5907  000780  0E00               	movlw	0
  5908  000782  6F94               	movwf	(strncmp@n+1)& (0+255),b
  5909  000784  0E03               	movlw	3
  5910  000786  6F93               	movwf	strncmp@n& (0+255),b
  5911  000788  EC4A  F02A         	call	_strncmp	;wreg free
  5912  00078C  0100               	movlb	0	; () banked
  5913  00078E  518F               	movf	?_strncmp& (0+255),w,b
  5914  000790  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  5915  000792  A4D8               	btfss	status,2,c
  5916  000794  EFCE  F003         	goto	u11531
  5917  000798  EFD0  F003         	goto	u11530
  5918  00079C                     u11531:
  5919  00079C  EF10  F004         	goto	l9068
  5920  0007A0                     u11530:
  5921  0007A0                     
  5922                           ; BSR set to: 0
  5923                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  5924  0007A0  0E03               	movlw	3
  5925  0007A2  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5926  0007A6  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5927  0007AA  26DE               	addwf	postinc2,f,c
  5928  0007AC  0E00               	movlw	0
  5929  0007AE  22DD               	addwfc	postdec2,f,c
  5930                           
  5931                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5932  0007B0  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5933  0007B4  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5934  0007B8  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  5935  0007BC  0E02               	movlw	2
  5936  0007BE  26DE               	addwf	postinc2,f,c
  5937  0007C0  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  5938  0007C4  0E00               	movlw	0
  5939  0007C6  22DD               	addwfc	postdec2,f,c
  5940  0007C8  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5941  0007CC  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5942  0007D0  50DF               	movf	indf2,w,c
  5943  0007D2  0101               	movlb	1	; () banked
  5944  0007D4  6F2F               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5945  0007D6  512F               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  5946  0007D8  6F44               	movwf	vfpfcnvrt@llu& (0+255),b
  5947  0007DA  6B45               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  5948  0007DC  6B46               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5949  0007DE  6B47               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5950  0007E0  6B48               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5951  0007E2  6B49               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5952  0007E4  6B4A               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5953  0007E6  6B4B               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5954  0007E8                     l9064:
  5955                           
  5956                           ; BSR set to: 1
  5957                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
  5958  0007E8  C127  F100         	movff	vfpfcnvrt@fp,otoa@fp
  5959  0007EC  C128  F101         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  5960  0007F0  C144  F102         	movff	vfpfcnvrt@llu,otoa@d
  5961  0007F4  C145  F103         	movff	vfpfcnvrt@llu+1,otoa@d+1
  5962  0007F8  C146  F104         	movff	vfpfcnvrt@llu+2,otoa@d+2
  5963  0007FC  C147  F105         	movff	vfpfcnvrt@llu+3,otoa@d+3
  5964  000800  C148  F106         	movff	vfpfcnvrt@llu+4,otoa@d+4
  5965  000804  C149  F107         	movff	vfpfcnvrt@llu+5,otoa@d+5
  5966  000808  C14A  F108         	movff	vfpfcnvrt@llu+6,otoa@d+6
  5967  00080C  C14B  F109         	movff	vfpfcnvrt@llu+7,otoa@d+7
  5968  000810  EC7F  F020         	call	_otoa	;wreg free
  5969  000814  C100  F127         	movff	?_otoa,?_vfpfcnvrt
  5970  000818  C101  F128         	movff	?_otoa+1,?_vfpfcnvrt+1
  5971  00081C  EFAF  F009         	goto	l878
  5972  000820                     l9068:
  5973                           
  5974                           ; BSR set to: 0
  5975                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  5976  000820  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5977  000824  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5978  000828  CFDE F08F          	movff	postinc2,strncmp@_l
  5979  00082C  CFDD F090          	movff	postdec2,strncmp@_l+1
  5980  000830  0EDE               	movlw	low (STR_36+1)
  5981  000832  6F91               	movwf	strncmp@_r& (0+255),b
  5982  000834  0EFF               	movlw	high (STR_36+1)
  5983  000836  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  5984  000838  0E00               	movlw	0
  5985  00083A  6F94               	movwf	(strncmp@n+1)& (0+255),b
  5986  00083C  0E02               	movlw	2
  5987  00083E  6F93               	movwf	strncmp@n& (0+255),b
  5988  000840  EC4A  F02A         	call	_strncmp	;wreg free
  5989  000844  0100               	movlb	0	; () banked
  5990  000846  518F               	movf	?_strncmp& (0+255),w,b
  5991  000848  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  5992  00084A  A4D8               	btfss	status,2,c
  5993  00084C  EF2A  F004         	goto	u11541
  5994  000850  EF2C  F004         	goto	u11540
  5995  000854                     u11541:
  5996  000854  EF55  F004         	goto	l9076
  5997  000858                     u11540:
  5998  000858                     
  5999                           ; BSR set to: 0
  6000                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  6001  000858  0E02               	movlw	2
  6002  00085A  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6003  00085E  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6004  000862  26DE               	addwf	postinc2,f,c
  6005  000864  0E00               	movlw	0
  6006  000866  22DD               	addwfc	postdec2,f,c
  6007                           
  6008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  6009  000868  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6010  00086C  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6011  000870  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  6012  000874  0E02               	movlw	2
  6013  000876  26DE               	addwf	postinc2,f,c
  6014  000878  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  6015  00087C  0E00               	movlw	0
  6016  00087E  22DD               	addwfc	postdec2,f,c
  6017  000880  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6018  000884  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6019  000888  CFDE F12F          	movff	postinc2,??_vfpfcnvrt+2
  6020  00088C  CFDD F130          	movff	postdec2,??_vfpfcnvrt+3
  6021  000890  C12F  F144         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6022  000894  C130  F145         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6023  000898  0101               	movlb	1	; () banked
  6024  00089A  6B46               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6025  00089C  6B47               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6026  00089E  6B48               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6027  0008A0  6B49               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6028  0008A2  6B4A               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6029  0008A4  6B4B               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6030  0008A6  EFF4  F003         	goto	l9064
  6031  0008AA                     l9076:
  6032                           
  6033                           ; BSR set to: 0
  6034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
  6035  0008AA  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6036  0008AE  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6037  0008B2  CFDE FFF6          	movff	postinc2,tblptrl
  6038  0008B6  CFDD FFF7          	movff	postdec2,tblptrh
  6039  0008BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6040  0008BA  6AF8               	clrf	tblptru,c
  6041  0008BC                     	endif
  6042  0008BC                     	if	0	;tblptru may be non-zero
  6043  0008BC                     	endif
  6044  0008BC  0008               	tblrd		*
  6045  0008BE  50F5               	movf	tablat,w,c
  6046  0008C0  0A6F               	xorlw	111
  6047  0008C2  A4D8               	btfss	status,2,c
  6048  0008C4  EF66  F004         	goto	u11551
  6049  0008C8  EF68  F004         	goto	u11550
  6050  0008CC                     u11551:
  6051  0008CC  EF90  F004         	goto	l9084
  6052  0008D0                     u11550:
  6053  0008D0                     
  6054                           ; BSR set to: 0
  6055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
  6056  0008D0  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6057  0008D4  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6058  0008D8  2ADE               	incf	postinc2,f,c
  6059  0008DA  0E00               	movlw	0
  6060  0008DC  22DD               	addwfc	postdec2,f,c
  6061                           
  6062                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
  6063  0008DE  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6064  0008E2  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6065  0008E6  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  6066  0008EA  0E02               	movlw	2
  6067  0008EC  26DE               	addwf	postinc2,f,c
  6068  0008EE  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  6069  0008F2  0E00               	movlw	0
  6070  0008F4  22DD               	addwfc	postdec2,f,c
  6071  0008F6  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6072  0008FA  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6073  0008FE  CFDE F12F          	movff	postinc2,??_vfpfcnvrt+2
  6074  000902  CFDD F130          	movff	postdec2,??_vfpfcnvrt+3
  6075  000906  C12F  F144         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6076  00090A  C130  F145         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6077  00090E  0101               	movlb	1	; () banked
  6078  000910  6B46               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6079  000912  6B47               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6080  000914  6B48               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6081  000916  6B49               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6082  000918  6B4A               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6083  00091A  6B4B               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6084  00091C  EFF4  F003         	goto	l9064
  6085  000920                     l9084:
  6086                           
  6087                           ; BSR set to: 0
  6088                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  6089  000920  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6090  000924  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6091  000928  CFDE F08F          	movff	postinc2,strncmp@_l
  6092  00092C  CFDD F090          	movff	postdec2,strncmp@_l+1
  6093  000930  0EF5               	movlw	low STR_46
  6094  000932  6F91               	movwf	strncmp@_r& (0+255),b
  6095  000934  0EFF               	movlw	high STR_46
  6096  000936  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  6097  000938  0E00               	movlw	0
  6098  00093A  6F94               	movwf	(strncmp@n+1)& (0+255),b
  6099  00093C  0E02               	movlw	2
  6100  00093E  6F93               	movwf	strncmp@n& (0+255),b
  6101  000940  EC4A  F02A         	call	_strncmp	;wreg free
  6102  000944  0100               	movlb	0	; () banked
  6103  000946  518F               	movf	?_strncmp& (0+255),w,b
  6104  000948  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  6105  00094A  A4D8               	btfss	status,2,c
  6106  00094C  EFAA  F004         	goto	u11561
  6107  000950  EFAC  F004         	goto	u11560
  6108  000954                     u11561:
  6109  000954  EFD5  F004         	goto	l9092
  6110  000958                     u11560:
  6111  000958                     
  6112                           ; BSR set to: 0
  6113                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  6114  000958  0E02               	movlw	2
  6115  00095A  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6116  00095E  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6117  000962  26DE               	addwf	postinc2,f,c
  6118  000964  0E00               	movlw	0
  6119  000966  22DD               	addwfc	postdec2,f,c
  6120                           
  6121                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6122  000968  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6123  00096C  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6124  000970  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  6125  000974  0E02               	movlw	2
  6126  000976  26DE               	addwf	postinc2,f,c
  6127  000978  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  6128  00097C  0E00               	movlw	0
  6129  00097E  22DD               	addwfc	postdec2,f,c
  6130  000980  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6131  000984  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6132  000988  CFDE F12F          	movff	postinc2,??_vfpfcnvrt+2
  6133  00098C  CFDD F130          	movff	postdec2,??_vfpfcnvrt+3
  6134  000990  C12F  F144         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6135  000994  C130  F145         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6136  000998  0101               	movlb	1	; () banked
  6137  00099A  6B46               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6138  00099C  6B47               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6139  00099E  6B48               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6140  0009A0  6B49               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6141  0009A2  6B4A               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6142  0009A4  6B4B               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6143  0009A6  EFF4  F003         	goto	l9064
  6144  0009AA                     l9092:
  6145                           
  6146                           ; BSR set to: 0
  6147                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  6148  0009AA  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6149  0009AE  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6150  0009B2  CFDE F08F          	movff	postinc2,strncmp@_l
  6151  0009B6  CFDD F090          	movff	postdec2,strncmp@_l+1
  6152  0009BA  0ED9               	movlw	low STR_51
  6153  0009BC  6F91               	movwf	strncmp@_r& (0+255),b
  6154  0009BE  0EFF               	movlw	high STR_51
  6155  0009C0  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  6156  0009C2  0E00               	movlw	0
  6157  0009C4  6F94               	movwf	(strncmp@n+1)& (0+255),b
  6158  0009C6  0E03               	movlw	3
  6159  0009C8  6F93               	movwf	strncmp@n& (0+255),b
  6160  0009CA  EC4A  F02A         	call	_strncmp	;wreg free
  6161  0009CE  0100               	movlb	0	; () banked
  6162  0009D0  518F               	movf	?_strncmp& (0+255),w,b
  6163  0009D2  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  6164  0009D4  A4D8               	btfss	status,2,c
  6165  0009D6  EFEF  F004         	goto	u11571
  6166  0009DA  EFF1  F004         	goto	u11570
  6167  0009DE                     u11571:
  6168  0009DE  EF1A  F005         	goto	l9102
  6169  0009E2                     u11570:
  6170  0009E2                     
  6171                           ; BSR set to: 0
  6172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  6173  0009E2  0E03               	movlw	3
  6174  0009E4  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6175  0009E8  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6176  0009EC  26DE               	addwf	postinc2,f,c
  6177  0009EE  0E00               	movlw	0
  6178  0009F0  22DD               	addwfc	postdec2,f,c
  6179                           
  6180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  6181  0009F2  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6182  0009F6  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6183  0009FA  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  6184  0009FE  0E02               	movlw	2
  6185  000A00  26DE               	addwf	postinc2,f,c
  6186  000A02  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  6187  000A06  0E00               	movlw	0
  6188  000A08  22DD               	addwfc	postdec2,f,c
  6189  000A0A  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6190  000A0E  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6191  000A12  CFDE F141          	movff	postinc2,vfpfcnvrt@vp
  6192  000A16  CFDD F142          	movff	postdec2,vfpfcnvrt@vp+1
  6193  000A1A                     
  6194                           ; BSR set to: 0
  6195                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
  6196  000A1A  C141  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  6197  000A1E  C142  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  6198  000A22  C17F  FFDF         	movff	_nout,indf2
  6199  000A26                     l9098:
  6200                           
  6201                           ; BSR set to: 0
  6202                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
  6203  000A26  0E00               	movlw	0
  6204  000A28  0101               	movlb	1	; () banked
  6205  000A2A  6F28               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  6206  000A2C  0E00               	movlw	0
  6207  000A2E  6F27               	movwf	?_vfpfcnvrt& (0+255),b
  6208  000A30  EFAF  F009         	goto	l878
  6209  000A34                     l9102:
  6210                           
  6211                           ; BSR set to: 0
  6212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  6213  000A34  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6214  000A38  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6215  000A3C  CFDE F08F          	movff	postinc2,strncmp@_l
  6216  000A40  CFDD F090          	movff	postdec2,strncmp@_l+1
  6217  000A44  0EDA               	movlw	low (STR_51+1)
  6218  000A46  6F91               	movwf	strncmp@_r& (0+255),b
  6219  000A48  0EFF               	movlw	high (STR_51+1)
  6220  000A4A  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  6221  000A4C  0E00               	movlw	0
  6222  000A4E  6F94               	movwf	(strncmp@n+1)& (0+255),b
  6223  000A50  0E02               	movlw	2
  6224  000A52  6F93               	movwf	strncmp@n& (0+255),b
  6225  000A54  EC4A  F02A         	call	_strncmp	;wreg free
  6226  000A58  0100               	movlb	0	; () banked
  6227  000A5A  518F               	movf	?_strncmp& (0+255),w,b
  6228  000A5C  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  6229  000A5E  A4D8               	btfss	status,2,c
  6230  000A60  EF34  F005         	goto	u11581
  6231  000A64  EF36  F005         	goto	u11580
  6232  000A68                     u11581:
  6233  000A68  EF5C  F005         	goto	l9112
  6234  000A6C                     u11580:
  6235  000A6C                     
  6236                           ; BSR set to: 0
  6237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  6238  000A6C  0E02               	movlw	2
  6239  000A6E  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6240  000A72  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6241  000A76  26DE               	addwf	postinc2,f,c
  6242  000A78  0E00               	movlw	0
  6243  000A7A  22DD               	addwfc	postdec2,f,c
  6244                           
  6245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  6246  000A7C  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6247  000A80  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6248  000A84  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  6249  000A88  0E02               	movlw	2
  6250  000A8A  26DE               	addwf	postinc2,f,c
  6251  000A8C  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  6252  000A90  0E00               	movlw	0
  6253  000A92  22DD               	addwfc	postdec2,f,c
  6254  000A94  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6255  000A98  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6256  000A9C  CFDE F141          	movff	postinc2,vfpfcnvrt@vp
  6257  000AA0  CFDD F142          	movff	postdec2,vfpfcnvrt@vp+1
  6258  000AA4                     
  6259                           ; BSR set to: 0
  6260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
  6261  000AA4  C141  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  6262  000AA8  C142  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  6263  000AAC  C17F  FFDE         	movff	_nout,postinc2
  6264  000AB0  C180  FFDD         	movff	_nout+1,postdec2
  6265  000AB4  EF13  F005         	goto	l9098
  6266  000AB8                     l9112:
  6267                           
  6268                           ; BSR set to: 0
  6269                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  6270  000AB8  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6271  000ABC  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6272  000AC0  CFDE FFF6          	movff	postinc2,tblptrl
  6273  000AC4  CFDD FFF7          	movff	postdec2,tblptrh
  6274  000AC8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6275  000AC8  6AF8               	clrf	tblptru,c
  6276  000ACA                     	endif
  6277  000ACA                     	if	0	;tblptru may be non-zero
  6278  000ACA                     	endif
  6279  000ACA  0008               	tblrd		*
  6280  000ACC  50F5               	movf	tablat,w,c
  6281  000ACE  0A6E               	xorlw	110
  6282  000AD0  A4D8               	btfss	status,2,c
  6283  000AD2  EF6D  F005         	goto	u11591
  6284  000AD6  EF6F  F005         	goto	u11590
  6285  000ADA                     u11591:
  6286  000ADA  EF94  F005         	goto	l9122
  6287  000ADE                     u11590:
  6288  000ADE                     
  6289                           ; BSR set to: 0
  6290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  6291  000ADE  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6292  000AE2  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6293  000AE6  2ADE               	incf	postinc2,f,c
  6294  000AE8  0E00               	movlw	0
  6295  000AEA  22DD               	addwfc	postdec2,f,c
  6296                           
  6297                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  6298  000AEC  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6299  000AF0  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6300  000AF4  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  6301  000AF8  0E02               	movlw	2
  6302  000AFA  26DE               	addwf	postinc2,f,c
  6303  000AFC  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  6304  000B00  0E00               	movlw	0
  6305  000B02  22DD               	addwfc	postdec2,f,c
  6306  000B04  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6307  000B08  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6308  000B0C  CFDE F141          	movff	postinc2,vfpfcnvrt@vp
  6309  000B10  CFDD F142          	movff	postdec2,vfpfcnvrt@vp+1
  6310  000B14                     
  6311                           ; BSR set to: 0
  6312                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  6313  000B14  C141  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  6314  000B18  C142  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  6315  000B1C  C17F  FFDE         	movff	_nout,postinc2
  6316  000B20  C180  FFDD         	movff	_nout+1,postdec2
  6317  000B24  EF13  F005         	goto	l9098
  6318  000B28                     l9122:
  6319                           
  6320                           ; BSR set to: 0
  6321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  6322  000B28  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6323  000B2C  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6324  000B30  CFDE F08F          	movff	postinc2,strncmp@_l
  6325  000B34  CFDD F090          	movff	postdec2,strncmp@_l+1
  6326  000B38  0EF2               	movlw	low STR_61
  6327  000B3A  6F91               	movwf	strncmp@_r& (0+255),b
  6328  000B3C  0EFF               	movlw	high STR_61
  6329  000B3E  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  6330  000B40  0E00               	movlw	0
  6331  000B42  6F94               	movwf	(strncmp@n+1)& (0+255),b
  6332  000B44  0E02               	movlw	2
  6333  000B46  6F93               	movwf	strncmp@n& (0+255),b
  6334  000B48  EC4A  F02A         	call	_strncmp	;wreg free
  6335  000B4C  0100               	movlb	0	; () banked
  6336  000B4E  518F               	movf	?_strncmp& (0+255),w,b
  6337  000B50  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  6338  000B52  A4D8               	btfss	status,2,c
  6339  000B54  EFAE  F005         	goto	u11601
  6340  000B58  EFB0  F005         	goto	u11600
  6341  000B5C                     u11601:
  6342  000B5C  EFD6  F005         	goto	l9132
  6343  000B60                     u11600:
  6344  000B60                     
  6345                           ; BSR set to: 0
  6346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  6347  000B60  0E02               	movlw	2
  6348  000B62  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6349  000B66  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6350  000B6A  26DE               	addwf	postinc2,f,c
  6351  000B6C  0E00               	movlw	0
  6352  000B6E  22DD               	addwfc	postdec2,f,c
  6353                           
  6354                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  6355  000B70  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6356  000B74  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6357  000B78  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  6358  000B7C  0E02               	movlw	2
  6359  000B7E  26DE               	addwf	postinc2,f,c
  6360  000B80  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  6361  000B84  0E00               	movlw	0
  6362  000B86  22DD               	addwfc	postdec2,f,c
  6363  000B88  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6364  000B8C  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6365  000B90  CFDE F141          	movff	postinc2,vfpfcnvrt@vp
  6366  000B94  CFDD F142          	movff	postdec2,vfpfcnvrt@vp+1
  6367  000B98                     
  6368                           ; BSR set to: 0
  6369                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
  6370  000B98  C141  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  6371  000B9C  C142  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  6372  000BA0  C17F  FFDE         	movff	_nout,postinc2
  6373  000BA4  C180  FFDD         	movff	_nout+1,postdec2
  6374  000BA8  EF13  F005         	goto	l9098
  6375  000BAC                     l9132:
  6376                           
  6377                           ; BSR set to: 0
  6378                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
  6379  000BAC  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6380  000BB0  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6381  000BB4  CFDE FFF6          	movff	postinc2,tblptrl
  6382  000BB8  CFDD FFF7          	movff	postdec2,tblptrh
  6383  000BBC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6384  000BBC  6AF8               	clrf	tblptru,c
  6385  000BBE                     	endif
  6386  000BBE                     	if	0	;tblptru may be non-zero
  6387  000BBE                     	endif
  6388  000BBE  0008               	tblrd		*
  6389  000BC0  50F5               	movf	tablat,w,c
  6390  000BC2  0A70               	xorlw	112
  6391  000BC4  A4D8               	btfss	status,2,c
  6392  000BC6  EFE7  F005         	goto	u11611
  6393  000BCA  EFE9  F005         	goto	u11610
  6394  000BCE                     u11611:
  6395  000BCE  EF2D  F006         	goto	l9140
  6396  000BD2                     u11610:
  6397  000BD2                     
  6398                           ; BSR set to: 0
  6399                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
  6400  000BD2  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6401  000BD6  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6402  000BDA  2ADE               	incf	postinc2,f,c
  6403  000BDC  0E00               	movlw	0
  6404  000BDE  22DD               	addwfc	postdec2,f,c
  6405                           
  6406                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
  6407  000BE0  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6408  000BE4  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6409  000BE8  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  6410  000BEC  0E02               	movlw	2
  6411  000BEE  26DE               	addwf	postinc2,f,c
  6412  000BF0  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  6413  000BF4  0E00               	movlw	0
  6414  000BF6  22DD               	addwfc	postdec2,f,c
  6415  000BF8  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6416  000BFC  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6417  000C00  CFDE F12F          	movff	postinc2,??_vfpfcnvrt+2
  6418  000C04  CFDD F130          	movff	postdec2,??_vfpfcnvrt+3
  6419  000C08  C12F  F144         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6420  000C0C  C130  F145         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6421  000C10  0101               	movlb	1	; () banked
  6422  000C12  6B46               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6423  000C14  6B47               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6424  000C16  6B48               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6425  000C18  6B49               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6426  000C1A  6B4A               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6427  000C1C  6B4B               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6428  000C1E                     
  6429                           ; BSR set to: 1
  6430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
  6431  000C1E  C127  F100         	movff	vfpfcnvrt@fp,xtoa@fp
  6432  000C22  C128  F101         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6433  000C26  C144  F102         	movff	vfpfcnvrt@llu,xtoa@d
  6434  000C2A  C145  F103         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6435  000C2E  C146  F104         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6436  000C32  C147  F105         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6437  000C36  C148  F106         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6438  000C3A  C149  F107         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6439  000C3E  C14A  F108         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6440  000C42  C14B  F109         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6441  000C46  0E78               	movlw	120
  6442  000C48  6F0A               	movwf	xtoa@x& (0+255),b
  6443  000C4A  EC12  F018         	call	_xtoa	;wreg free
  6444  000C4E  C100  F127         	movff	?_xtoa,?_vfpfcnvrt
  6445  000C52  C101  F128         	movff	?_xtoa+1,?_vfpfcnvrt+1
  6446  000C56  EFAF  F009         	goto	l878
  6447  000C5A                     l9140:
  6448                           
  6449                           ; BSR set to: 0
  6450                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  6451  000C5A  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6452  000C5E  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6453  000C62  CFDE FFF6          	movff	postinc2,tblptrl
  6454  000C66  CFDD FFF7          	movff	postdec2,tblptrh
  6455  000C6A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6456  000C6A  6AF8               	clrf	tblptru,c
  6457  000C6C                     	endif
  6458  000C6C                     	if	0	;tblptru may be non-zero
  6459  000C6C                     	endif
  6460  000C6C  0008               	tblrd		*
  6461  000C6E  50F5               	movf	tablat,w,c
  6462  000C70  0A73               	xorlw	115
  6463  000C72  A4D8               	btfss	status,2,c
  6464  000C74  EF3E  F006         	goto	u11621
  6465  000C78  EF40  F006         	goto	u11620
  6466  000C7C                     u11621:
  6467  000C7C  EF6B  F006         	goto	l9148
  6468  000C80                     u11620:
  6469  000C80                     
  6470                           ; BSR set to: 0
  6471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  6472  000C80  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6473  000C84  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6474  000C88  2ADE               	incf	postinc2,f,c
  6475  000C8A  0E00               	movlw	0
  6476  000C8C  22DD               	addwfc	postdec2,f,c
  6477                           
  6478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  6479  000C8E  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6480  000C92  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6481  000C96  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  6482  000C9A  0E02               	movlw	2
  6483  000C9C  26DE               	addwf	postinc2,f,c
  6484  000C9E  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  6485  000CA2  0E00               	movlw	0
  6486  000CA4  22DD               	addwfc	postdec2,f,c
  6487  000CA6  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6488  000CAA  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6489  000CAE  CFDE F131          	movff	postinc2,vfpfcnvrt@cp
  6490  000CB2  CFDD F132          	movff	postdec2,vfpfcnvrt@cp+1
  6491  000CB6                     
  6492                           ; BSR set to: 0
  6493                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  6494  000CB6  C127  F09A         	movff	vfpfcnvrt@fp,stoa@fp
  6495  000CBA  C128  F09B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  6496  000CBE  C131  F09C         	movff	vfpfcnvrt@cp,stoa@s
  6497  000CC2  C132  F09D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  6498  000CC6  EC76  F022         	call	_stoa	;wreg free
  6499  000CCA  C09A  F127         	movff	?_stoa,?_vfpfcnvrt
  6500  000CCE  C09B  F128         	movff	?_stoa+1,?_vfpfcnvrt+1
  6501  000CD2  EFAF  F009         	goto	l878
  6502  000CD6                     l9148:
  6503                           
  6504                           ; BSR set to: 0
  6505                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  6506  000CD6  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6507  000CDA  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6508  000CDE  CFDE F08F          	movff	postinc2,strncmp@_l
  6509  000CE2  CFDD F090          	movff	postdec2,strncmp@_l+1
  6510  000CE6  0EE1               	movlw	low STR_66
  6511  000CE8  6F91               	movwf	strncmp@_r& (0+255),b
  6512  000CEA  0EFF               	movlw	high STR_66
  6513  000CEC  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  6514  000CEE  0E00               	movlw	0
  6515  000CF0  6F94               	movwf	(strncmp@n+1)& (0+255),b
  6516  000CF2  0E03               	movlw	3
  6517  000CF4  6F93               	movwf	strncmp@n& (0+255),b
  6518  000CF6  EC4A  F02A         	call	_strncmp	;wreg free
  6519  000CFA  0100               	movlb	0	; () banked
  6520  000CFC  518F               	movf	?_strncmp& (0+255),w,b
  6521  000CFE  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  6522  000D00  A4D8               	btfss	status,2,c
  6523  000D02  EF85  F006         	goto	u11631
  6524  000D06  EF87  F006         	goto	u11630
  6525  000D0A                     u11631:
  6526  000D0A  EFC7  F006         	goto	l9156
  6527  000D0E                     u11630:
  6528  000D0E                     
  6529                           ; BSR set to: 0
  6530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  6531  000D0E  0E03               	movlw	3
  6532  000D10  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6533  000D14  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6534  000D18  26DE               	addwf	postinc2,f,c
  6535  000D1A  0E00               	movlw	0
  6536  000D1C  22DD               	addwfc	postdec2,f,c
  6537                           
  6538                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6539  000D1E  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6540  000D22  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6541  000D26  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  6542  000D2A  0E02               	movlw	2
  6543  000D2C  26DE               	addwf	postinc2,f,c
  6544  000D2E  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  6545  000D32  0E00               	movlw	0
  6546  000D34  22DD               	addwfc	postdec2,f,c
  6547  000D36  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6548  000D3A  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6549  000D3E  50DF               	movf	indf2,w,c
  6550  000D40  0101               	movlb	1	; () banked
  6551  000D42  6F2F               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6552  000D44  512F               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  6553  000D46  6F44               	movwf	vfpfcnvrt@llu& (0+255),b
  6554  000D48  6B45               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  6555  000D4A  6B46               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6556  000D4C  6B47               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6557  000D4E  6B48               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6558  000D50  6B49               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6559  000D52  6B4A               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6560  000D54  6B4B               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6561  000D56                     l9152:
  6562                           
  6563                           ; BSR set to: 1
  6564                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
  6565  000D56  C127  F100         	movff	vfpfcnvrt@fp,utoa@fp
  6566  000D5A  C128  F101         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  6567  000D5E  C144  F102         	movff	vfpfcnvrt@llu,utoa@d
  6568  000D62  C145  F103         	movff	vfpfcnvrt@llu+1,utoa@d+1
  6569  000D66  C146  F104         	movff	vfpfcnvrt@llu+2,utoa@d+2
  6570  000D6A  C147  F105         	movff	vfpfcnvrt@llu+3,utoa@d+3
  6571  000D6E  C148  F106         	movff	vfpfcnvrt@llu+4,utoa@d+4
  6572  000D72  C149  F107         	movff	vfpfcnvrt@llu+5,utoa@d+5
  6573  000D76  C14A  F108         	movff	vfpfcnvrt@llu+6,utoa@d+6
  6574  000D7A  C14B  F109         	movff	vfpfcnvrt@llu+7,utoa@d+7
  6575  000D7E  EC68  F01C         	call	_utoa	;wreg free
  6576  000D82  C100  F127         	movff	?_utoa,?_vfpfcnvrt
  6577  000D86  C101  F128         	movff	?_utoa+1,?_vfpfcnvrt+1
  6578  000D8A  EFAF  F009         	goto	l878
  6579  000D8E                     l9156:
  6580                           
  6581                           ; BSR set to: 0
  6582                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  6583  000D8E  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6584  000D92  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6585  000D96  CFDE F08F          	movff	postinc2,strncmp@_l
  6586  000D9A  CFDD F090          	movff	postdec2,strncmp@_l+1
  6587  000D9E  0EE2               	movlw	low (STR_66+1)
  6588  000DA0  6F91               	movwf	strncmp@_r& (0+255),b
  6589  000DA2  0EFF               	movlw	high (STR_66+1)
  6590  000DA4  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  6591  000DA6  0E00               	movlw	0
  6592  000DA8  6F94               	movwf	(strncmp@n+1)& (0+255),b
  6593  000DAA  0E02               	movlw	2
  6594  000DAC  6F93               	movwf	strncmp@n& (0+255),b
  6595  000DAE  EC4A  F02A         	call	_strncmp	;wreg free
  6596  000DB2  0100               	movlb	0	; () banked
  6597  000DB4  518F               	movf	?_strncmp& (0+255),w,b
  6598  000DB6  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  6599  000DB8  A4D8               	btfss	status,2,c
  6600  000DBA  EFE1  F006         	goto	u11641
  6601  000DBE  EFE3  F006         	goto	u11640
  6602  000DC2                     u11641:
  6603  000DC2  EF0C  F007         	goto	l9164
  6604  000DC6                     u11640:
  6605  000DC6                     
  6606                           ; BSR set to: 0
  6607                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  6608  000DC6  0E02               	movlw	2
  6609  000DC8  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6610  000DCC  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6611  000DD0  26DE               	addwf	postinc2,f,c
  6612  000DD2  0E00               	movlw	0
  6613  000DD4  22DD               	addwfc	postdec2,f,c
  6614                           
  6615                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  6616  000DD6  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6617  000DDA  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6618  000DDE  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  6619  000DE2  0E02               	movlw	2
  6620  000DE4  26DE               	addwf	postinc2,f,c
  6621  000DE6  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  6622  000DEA  0E00               	movlw	0
  6623  000DEC  22DD               	addwfc	postdec2,f,c
  6624  000DEE  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6625  000DF2  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6626  000DF6  CFDE F12F          	movff	postinc2,??_vfpfcnvrt+2
  6627  000DFA  CFDD F130          	movff	postdec2,??_vfpfcnvrt+3
  6628  000DFE  C12F  F144         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6629  000E02  C130  F145         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6630  000E06  0101               	movlb	1	; () banked
  6631  000E08  6B46               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6632  000E0A  6B47               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6633  000E0C  6B48               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6634  000E0E  6B49               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6635  000E10  6B4A               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6636  000E12  6B4B               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6637  000E14  EFAB  F006         	goto	l9152
  6638  000E18                     l9164:
  6639                           
  6640                           ; BSR set to: 0
  6641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  6642  000E18  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6643  000E1C  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6644  000E20  CFDE FFF6          	movff	postinc2,tblptrl
  6645  000E24  CFDD FFF7          	movff	postdec2,tblptrh
  6646  000E28                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6647  000E28  6AF8               	clrf	tblptru,c
  6648  000E2A                     	endif
  6649  000E2A                     	if	0	;tblptru may be non-zero
  6650  000E2A                     	endif
  6651  000E2A  0008               	tblrd		*
  6652  000E2C  50F5               	movf	tablat,w,c
  6653  000E2E  0A75               	xorlw	117
  6654  000E30  A4D8               	btfss	status,2,c
  6655  000E32  EF1D  F007         	goto	u11651
  6656  000E36  EF1F  F007         	goto	u11650
  6657  000E3A                     u11651:
  6658  000E3A  EF47  F007         	goto	l9172
  6659  000E3E                     u11650:
  6660  000E3E                     
  6661                           ; BSR set to: 0
  6662                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  6663  000E3E  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6664  000E42  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6665  000E46  2ADE               	incf	postinc2,f,c
  6666  000E48  0E00               	movlw	0
  6667  000E4A  22DD               	addwfc	postdec2,f,c
  6668                           
  6669                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  6670  000E4C  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6671  000E50  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6672  000E54  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  6673  000E58  0E02               	movlw	2
  6674  000E5A  26DE               	addwf	postinc2,f,c
  6675  000E5C  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  6676  000E60  0E00               	movlw	0
  6677  000E62  22DD               	addwfc	postdec2,f,c
  6678  000E64  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6679  000E68  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6680  000E6C  CFDE F12F          	movff	postinc2,??_vfpfcnvrt+2
  6681  000E70  CFDD F130          	movff	postdec2,??_vfpfcnvrt+3
  6682  000E74  C12F  F144         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6683  000E78  C130  F145         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6684  000E7C  0101               	movlb	1	; () banked
  6685  000E7E  6B46               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6686  000E80  6B47               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6687  000E82  6B48               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6688  000E84  6B49               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6689  000E86  6B4A               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6690  000E88  6B4B               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6691  000E8A  EFAB  F006         	goto	l9152
  6692  000E8E                     l9172:
  6693                           
  6694                           ; BSR set to: 0
  6695                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  6696  000E8E  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6697  000E92  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6698  000E96  CFDE F08F          	movff	postinc2,strncmp@_l
  6699  000E9A  CFDD F090          	movff	postdec2,strncmp@_l+1
  6700  000E9E  0EF8               	movlw	low STR_76
  6701  000EA0  6F91               	movwf	strncmp@_r& (0+255),b
  6702  000EA2  0EFF               	movlw	high STR_76
  6703  000EA4  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  6704  000EA6  0E00               	movlw	0
  6705  000EA8  6F94               	movwf	(strncmp@n+1)& (0+255),b
  6706  000EAA  0E02               	movlw	2
  6707  000EAC  6F93               	movwf	strncmp@n& (0+255),b
  6708  000EAE  EC4A  F02A         	call	_strncmp	;wreg free
  6709  000EB2  0100               	movlb	0	; () banked
  6710  000EB4  518F               	movf	?_strncmp& (0+255),w,b
  6711  000EB6  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  6712  000EB8  A4D8               	btfss	status,2,c
  6713  000EBA  EF61  F007         	goto	u11661
  6714  000EBE  EF63  F007         	goto	u11660
  6715  000EC2                     u11661:
  6716  000EC2  EF8C  F007         	goto	l9180
  6717  000EC6                     u11660:
  6718  000EC6                     
  6719                           ; BSR set to: 0
  6720                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  6721  000EC6  0E02               	movlw	2
  6722  000EC8  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6723  000ECC  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6724  000ED0  26DE               	addwf	postinc2,f,c
  6725  000ED2  0E00               	movlw	0
  6726  000ED4  22DD               	addwfc	postdec2,f,c
  6727                           
  6728                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6729  000ED6  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6730  000EDA  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6731  000EDE  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  6732  000EE2  0E02               	movlw	2
  6733  000EE4  26DE               	addwf	postinc2,f,c
  6734  000EE6  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  6735  000EEA  0E00               	movlw	0
  6736  000EEC  22DD               	addwfc	postdec2,f,c
  6737  000EEE  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6738  000EF2  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6739  000EF6  CFDE F12F          	movff	postinc2,??_vfpfcnvrt+2
  6740  000EFA  CFDD F130          	movff	postdec2,??_vfpfcnvrt+3
  6741  000EFE  C12F  F144         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6742  000F02  C130  F145         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6743  000F06  0101               	movlb	1	; () banked
  6744  000F08  6B46               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6745  000F0A  6B47               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6746  000F0C  6B48               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6747  000F0E  6B49               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6748  000F10  6B4A               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6749  000F12  6B4B               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6750  000F14  EFAB  F006         	goto	l9152
  6751  000F18                     l9180:
  6752                           
  6753                           ; BSR set to: 0
  6754                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  6755  000F18  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6756  000F1C  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6757  000F20  CFDE F08F          	movff	postinc2,strncmp@_l
  6758  000F24  CFDD F090          	movff	postdec2,strncmp@_l+1
  6759  000F28  0EE5               	movlw	low STR_81
  6760  000F2A  6F91               	movwf	strncmp@_r& (0+255),b
  6761  000F2C  0EFF               	movlw	high STR_81
  6762  000F2E  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  6763  000F30  0E00               	movlw	0
  6764  000F32  6F94               	movwf	(strncmp@n+1)& (0+255),b
  6765  000F34  0E03               	movlw	3
  6766  000F36  6F93               	movwf	strncmp@n& (0+255),b
  6767  000F38  EC4A  F02A         	call	_strncmp	;wreg free
  6768  000F3C  0100               	movlb	0	; () banked
  6769  000F3E  518F               	movf	?_strncmp& (0+255),w,b
  6770  000F40  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  6771  000F42  B4D8               	btfsc	status,2,c
  6772  000F44  EFA6  F007         	goto	u11671
  6773  000F48  EFA8  F007         	goto	u11670
  6774  000F4C                     u11671:
  6775  000F4C  EFC4  F007         	goto	l9184
  6776  000F50                     u11670:
  6777  000F50                     
  6778                           ; BSR set to: 0
  6779  000F50  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6780  000F54  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6781  000F58  CFDE F08F          	movff	postinc2,strncmp@_l
  6782  000F5C  CFDD F090          	movff	postdec2,strncmp@_l+1
  6783  000F60  0ECD               	movlw	low STR_85
  6784  000F62  6F91               	movwf	strncmp@_r& (0+255),b
  6785  000F64  0EFF               	movlw	high STR_85
  6786  000F66  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  6787  000F68  0E00               	movlw	0
  6788  000F6A  6F94               	movwf	(strncmp@n+1)& (0+255),b
  6789  000F6C  0E03               	movlw	3
  6790  000F6E  6F93               	movwf	strncmp@n& (0+255),b
  6791  000F70  EC4A  F02A         	call	_strncmp	;wreg free
  6792  000F74  0100               	movlb	0	; () banked
  6793  000F76  518F               	movf	?_strncmp& (0+255),w,b
  6794  000F78  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  6795  000F7A  A4D8               	btfss	status,2,c
  6796  000F7C  EFC2  F007         	goto	u11681
  6797  000F80  EFC4  F007         	goto	u11680
  6798  000F84                     u11681:
  6799  000F84  EF1A  F008         	goto	l9194
  6800  000F88                     u11680:
  6801  000F88                     l9184:
  6802                           
  6803                           ; BSR set to: 0
  6804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
  6805  000F88  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6806  000F8C  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6807  000F90  CFDE F12D          	movff	postinc2,??_vfpfcnvrt
  6808  000F94  CFDD F12E          	movff	postdec2,??_vfpfcnvrt+1
  6809  000F98  0E02               	movlw	2
  6810  000F9A  0101               	movlb	1	; () banked
  6811  000F9C  272D               	addwf	??_vfpfcnvrt& (0+255),f,b
  6812  000F9E  0E00               	movlw	0
  6813  000FA0  232E               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6814  000FA2  C12D  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6815  000FA6  C12E  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6816  000FAA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6817  000FAA  6AF8               	clrf	tblptru,c
  6818  000FAC                     	endif
  6819  000FAC                     	if	0	;tblptru may be non-zero
  6820  000FAC                     	endif
  6821  000FAC  0008               	tblrd		*
  6822  000FAE  CFF5 F143          	movff	tablat,vfpfcnvrt@c
  6823  000FB2                     
  6824                           ; BSR set to: 1
  6825                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  6826  000FB2  0E03               	movlw	3
  6827  000FB4  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6828  000FB8  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6829  000FBC  26DE               	addwf	postinc2,f,c
  6830  000FBE  0E00               	movlw	0
  6831  000FC0  22DD               	addwfc	postdec2,f,c
  6832  000FC2                     
  6833                           ; BSR set to: 1
  6834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6835  000FC2  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6836  000FC6  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6837  000FCA  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  6838  000FCE  0E02               	movlw	2
  6839  000FD0  26DE               	addwf	postinc2,f,c
  6840  000FD2  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  6841  000FD6  0E00               	movlw	0
  6842  000FD8  22DD               	addwfc	postdec2,f,c
  6843  000FDA  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6844  000FDE  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6845  000FE2  50DF               	movf	indf2,w,c
  6846  000FE4  6F2F               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6847  000FE6  512F               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  6848  000FE8  6F44               	movwf	vfpfcnvrt@llu& (0+255),b
  6849  000FEA  6B45               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  6850  000FEC  6B46               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6851  000FEE  6B47               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6852  000FF0  6B48               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6853  000FF2  6B49               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6854  000FF4  6B4A               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6855  000FF6  6B4B               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6856  000FF8                     l9190:
  6857                           
  6858                           ; BSR set to: 1
  6859                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
  6860  000FF8  C127  F100         	movff	vfpfcnvrt@fp,xtoa@fp
  6861  000FFC  C128  F101         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6862  001000  C144  F102         	movff	vfpfcnvrt@llu,xtoa@d
  6863  001004  C145  F103         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6864  001008  C146  F104         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6865  00100C  C147  F105         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6866  001010  C148  F106         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6867  001014  C149  F107         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6868  001018  C14A  F108         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6869  00101C  C14B  F109         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6870  001020  C143  F10A         	movff	vfpfcnvrt@c,xtoa@x
  6871  001024  EC12  F018         	call	_xtoa	;wreg free
  6872  001028  C100  F127         	movff	?_xtoa,?_vfpfcnvrt
  6873  00102C  C101  F128         	movff	?_xtoa+1,?_vfpfcnvrt+1
  6874  001030  EFAF  F009         	goto	l878
  6875  001034                     l9194:
  6876                           
  6877                           ; BSR set to: 0
  6878                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
  6879  001034  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6880  001038  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6881  00103C  CFDE F08F          	movff	postinc2,strncmp@_l
  6882  001040  CFDD F090          	movff	postdec2,strncmp@_l+1
  6883  001044  0EE6               	movlw	low (STR_81+1)
  6884  001046  6F91               	movwf	strncmp@_r& (0+255),b
  6885  001048  0EFF               	movlw	high (STR_81+1)
  6886  00104A  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  6887  00104C  0E00               	movlw	0
  6888  00104E  6F94               	movwf	(strncmp@n+1)& (0+255),b
  6889  001050  0E02               	movlw	2
  6890  001052  6F93               	movwf	strncmp@n& (0+255),b
  6891  001054  EC4A  F02A         	call	_strncmp	;wreg free
  6892  001058  0100               	movlb	0	; () banked
  6893  00105A  518F               	movf	?_strncmp& (0+255),w,b
  6894  00105C  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  6895  00105E  B4D8               	btfsc	status,2,c
  6896  001060  EF34  F008         	goto	u11691
  6897  001064  EF36  F008         	goto	u11690
  6898  001068                     u11691:
  6899  001068  EF52  F008         	goto	l9198
  6900  00106C                     u11690:
  6901  00106C                     
  6902                           ; BSR set to: 0
  6903  00106C  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6904  001070  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6905  001074  CFDE F08F          	movff	postinc2,strncmp@_l
  6906  001078  CFDD F090          	movff	postdec2,strncmp@_l+1
  6907  00107C  0ECE               	movlw	low (STR_85+1)
  6908  00107E  6F91               	movwf	strncmp@_r& (0+255),b
  6909  001080  0EFF               	movlw	high (STR_85+1)
  6910  001082  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  6911  001084  0E00               	movlw	0
  6912  001086  6F94               	movwf	(strncmp@n+1)& (0+255),b
  6913  001088  0E02               	movlw	2
  6914  00108A  6F93               	movwf	strncmp@n& (0+255),b
  6915  00108C  EC4A  F02A         	call	_strncmp	;wreg free
  6916  001090  0100               	movlb	0	; () banked
  6917  001092  518F               	movf	?_strncmp& (0+255),w,b
  6918  001094  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  6919  001096  A4D8               	btfss	status,2,c
  6920  001098  EF50  F008         	goto	u11701
  6921  00109C  EF52  F008         	goto	u11700
  6922  0010A0                     u11701:
  6923  0010A0  EF8F  F008         	goto	l9208
  6924  0010A4                     u11700:
  6925  0010A4                     l9198:
  6926                           
  6927                           ; BSR set to: 0
  6928                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
  6929  0010A4  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6930  0010A8  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6931  0010AC  CFDE F12D          	movff	postinc2,??_vfpfcnvrt
  6932  0010B0  CFDD F12E          	movff	postdec2,??_vfpfcnvrt+1
  6933  0010B4  0E01               	movlw	1
  6934  0010B6  0101               	movlb	1	; () banked
  6935  0010B8  272D               	addwf	??_vfpfcnvrt& (0+255),f,b
  6936  0010BA  0E00               	movlw	0
  6937  0010BC  232E               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6938  0010BE  C12D  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6939  0010C2  C12E  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6940  0010C6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6941  0010C6  6AF8               	clrf	tblptru,c
  6942  0010C8                     	endif
  6943  0010C8                     	if	0	;tblptru may be non-zero
  6944  0010C8                     	endif
  6945  0010C8  0008               	tblrd		*
  6946  0010CA  CFF5 F143          	movff	tablat,vfpfcnvrt@c
  6947  0010CE                     
  6948                           ; BSR set to: 1
  6949                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  6950  0010CE  0E02               	movlw	2
  6951  0010D0  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6952  0010D4  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6953  0010D8  26DE               	addwf	postinc2,f,c
  6954  0010DA  0E00               	movlw	0
  6955  0010DC  22DD               	addwfc	postdec2,f,c
  6956  0010DE                     
  6957                           ; BSR set to: 1
  6958                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  6959  0010DE  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6960  0010E2  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6961  0010E6  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  6962  0010EA  0E02               	movlw	2
  6963  0010EC  26DE               	addwf	postinc2,f,c
  6964  0010EE  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  6965  0010F2  0E00               	movlw	0
  6966  0010F4  22DD               	addwfc	postdec2,f,c
  6967  0010F6  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6968  0010FA  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6969  0010FE  CFDE F12F          	movff	postinc2,??_vfpfcnvrt+2
  6970  001102  CFDD F130          	movff	postdec2,??_vfpfcnvrt+3
  6971  001106  C12F  F144         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6972  00110A  C130  F145         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6973  00110E  6B46               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6974  001110  6B47               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6975  001112  6B48               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6976  001114  6B49               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6977  001116  6B4A               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6978  001118  6B4B               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6979  00111A  EFFC  F007         	goto	l9190
  6980  00111E                     l9208:
  6981                           
  6982                           ; BSR set to: 0
  6983                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  6984  00111E  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6985  001122  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6986  001126  CFDE FFF6          	movff	postinc2,tblptrl
  6987  00112A  CFDD FFF7          	movff	postdec2,tblptrh
  6988  00112E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6989  00112E  6AF8               	clrf	tblptru,c
  6990  001130                     	endif
  6991  001130                     	if	0	;tblptru may be non-zero
  6992  001130                     	endif
  6993  001130  0008               	tblrd		*
  6994  001132  50F5               	movf	tablat,w,c
  6995  001134  0A78               	xorlw	120
  6996  001136  B4D8               	btfsc	status,2,c
  6997  001138  EFA0  F008         	goto	u11711
  6998  00113C  EFA2  F008         	goto	u11710
  6999  001140                     u11711:
  7000  001140  EFB5  F008         	goto	l9212
  7001  001144                     u11710:
  7002  001144                     
  7003                           ; BSR set to: 0
  7004  001144  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7005  001148  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7006  00114C  CFDE FFF6          	movff	postinc2,tblptrl
  7007  001150  CFDD FFF7          	movff	postdec2,tblptrh
  7008  001154                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7009  001154  6AF8               	clrf	tblptru,c
  7010  001156                     	endif
  7011  001156                     	if	0	;tblptru may be non-zero
  7012  001156                     	endif
  7013  001156  0008               	tblrd		*
  7014  001158  50F5               	movf	tablat,w,c
  7015  00115A  0A58               	xorlw	88
  7016  00115C  A4D8               	btfss	status,2,c
  7017  00115E  EFB3  F008         	goto	u11721
  7018  001162  EFB5  F008         	goto	u11720
  7019  001166                     u11721:
  7020  001166  EFE9  F008         	goto	l9222
  7021  00116A                     u11720:
  7022  00116A                     l9212:
  7023                           
  7024                           ; BSR set to: 0
  7025                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  7026  00116A  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7027  00116E  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7028  001172  CFDE FFF6          	movff	postinc2,tblptrl
  7029  001176  CFDD FFF7          	movff	postdec2,tblptrh
  7030  00117A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7031  00117A  6AF8               	clrf	tblptru,c
  7032  00117C                     	endif
  7033  00117C                     	if	0	;tblptru may be non-zero
  7034  00117C                     	endif
  7035  00117C  0008               	tblrd		*
  7036  00117E  CFF5 F143          	movff	tablat,vfpfcnvrt@c
  7037  001182                     
  7038                           ; BSR set to: 0
  7039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  7040  001182  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7041  001186  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7042  00118A  2ADE               	incf	postinc2,f,c
  7043  00118C  0E00               	movlw	0
  7044  00118E  22DD               	addwfc	postdec2,f,c
  7045  001190                     
  7046                           ; BSR set to: 0
  7047                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  7048  001190  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7049  001194  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7050  001198  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  7051  00119C  0E02               	movlw	2
  7052  00119E  26DE               	addwf	postinc2,f,c
  7053  0011A0  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  7054  0011A4  0E00               	movlw	0
  7055  0011A6  22DD               	addwfc	postdec2,f,c
  7056  0011A8  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7057  0011AC  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7058  0011B0  CFDE F12F          	movff	postinc2,??_vfpfcnvrt+2
  7059  0011B4  CFDD F130          	movff	postdec2,??_vfpfcnvrt+3
  7060  0011B8  C12F  F144         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  7061  0011BC  C130  F145         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  7062  0011C0  0101               	movlb	1	; () banked
  7063  0011C2  6B46               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  7064  0011C4  6B47               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  7065  0011C6  6B48               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  7066  0011C8  6B49               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  7067  0011CA  6B4A               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  7068  0011CC  6B4B               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  7069  0011CE  EFFC  F007         	goto	l9190
  7070  0011D2                     l9222:
  7071                           
  7072                           ; BSR set to: 0
  7073                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
  7074  0011D2  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7075  0011D6  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7076  0011DA  CFDE F08F          	movff	postinc2,strncmp@_l
  7077  0011DE  CFDD F090          	movff	postdec2,strncmp@_l+1
  7078  0011E2  0EFB               	movlw	low STR_99
  7079  0011E4  6F91               	movwf	strncmp@_r& (0+255),b
  7080  0011E6  0EFF               	movlw	high STR_99
  7081  0011E8  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  7082  0011EA  0E00               	movlw	0
  7083  0011EC  6F94               	movwf	(strncmp@n+1)& (0+255),b
  7084  0011EE  0E02               	movlw	2
  7085  0011F0  6F93               	movwf	strncmp@n& (0+255),b
  7086  0011F2  EC4A  F02A         	call	_strncmp	;wreg free
  7087  0011F6  0100               	movlb	0	; () banked
  7088  0011F8  518F               	movf	?_strncmp& (0+255),w,b
  7089  0011FA  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  7090  0011FC  B4D8               	btfsc	status,2,c
  7091  0011FE  EF03  F009         	goto	u11731
  7092  001202  EF05  F009         	goto	u11730
  7093  001206                     u11731:
  7094  001206  EF21  F009         	goto	l9226
  7095  00120A                     u11730:
  7096  00120A                     
  7097                           ; BSR set to: 0
  7098  00120A  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7099  00120E  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7100  001212  CFDE F08F          	movff	postinc2,strncmp@_l
  7101  001216  CFDD F090          	movff	postdec2,strncmp@_l+1
  7102  00121A  0EE9               	movlw	low STR_103
  7103  00121C  6F91               	movwf	strncmp@_r& (0+255),b
  7104  00121E  0EFF               	movlw	high STR_103
  7105  001220  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  7106  001222  0E00               	movlw	0
  7107  001224  6F94               	movwf	(strncmp@n+1)& (0+255),b
  7108  001226  0E02               	movlw	2
  7109  001228  6F93               	movwf	strncmp@n& (0+255),b
  7110  00122A  EC4A  F02A         	call	_strncmp	;wreg free
  7111  00122E  0100               	movlb	0	; () banked
  7112  001230  518F               	movf	?_strncmp& (0+255),w,b
  7113  001232  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  7114  001234  A4D8               	btfss	status,2,c
  7115  001236  EF1F  F009         	goto	u11741
  7116  00123A  EF21  F009         	goto	u11740
  7117  00123E                     u11741:
  7118  00123E  EF5E  F009         	goto	l9236
  7119  001242                     u11740:
  7120  001242                     l9226:
  7121                           
  7122                           ; BSR set to: 0
  7123                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
  7124  001242  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7125  001246  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7126  00124A  CFDE F12D          	movff	postinc2,??_vfpfcnvrt
  7127  00124E  CFDD F12E          	movff	postdec2,??_vfpfcnvrt+1
  7128  001252  0E01               	movlw	1
  7129  001254  0101               	movlb	1	; () banked
  7130  001256  272D               	addwf	??_vfpfcnvrt& (0+255),f,b
  7131  001258  0E00               	movlw	0
  7132  00125A  232E               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  7133  00125C  C12D  FFF6         	movff	??_vfpfcnvrt,tblptrl
  7134  001260  C12E  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  7135  001264                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7136  001264  6AF8               	clrf	tblptru,c
  7137  001266                     	endif
  7138  001266                     	if	0	;tblptru may be non-zero
  7139  001266                     	endif
  7140  001266  0008               	tblrd		*
  7141  001268  CFF5 F143          	movff	tablat,vfpfcnvrt@c
  7142  00126C                     
  7143                           ; BSR set to: 1
  7144                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  7145  00126C  0E02               	movlw	2
  7146  00126E  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7147  001272  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7148  001276  26DE               	addwf	postinc2,f,c
  7149  001278  0E00               	movlw	0
  7150  00127A  22DD               	addwfc	postdec2,f,c
  7151  00127C                     
  7152                           ; BSR set to: 1
  7153                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  7154  00127C  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7155  001280  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7156  001284  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  7157  001288  0E02               	movlw	2
  7158  00128A  26DE               	addwf	postinc2,f,c
  7159  00128C  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  7160  001290  0E00               	movlw	0
  7161  001292  22DD               	addwfc	postdec2,f,c
  7162  001294  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7163  001298  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7164  00129C  CFDE F12F          	movff	postinc2,??_vfpfcnvrt+2
  7165  0012A0  CFDD F130          	movff	postdec2,??_vfpfcnvrt+3
  7166  0012A4  C12F  F144         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  7167  0012A8  C130  F145         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  7168  0012AC  6B46               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  7169  0012AE  6B47               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  7170  0012B0  6B48               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  7171  0012B2  6B49               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  7172  0012B4  6B4A               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  7173  0012B6  6B4B               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  7174  0012B8  EFFC  F007         	goto	l9190
  7175  0012BC                     l9236:
  7176                           
  7177                           ; BSR set to: 0
  7178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  7179  0012BC  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7180  0012C0  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7181  0012C4  CFDE FFF6          	movff	postinc2,tblptrl
  7182  0012C8  CFDD FFF7          	movff	postdec2,tblptrh
  7183  0012CC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7184  0012CC  6AF8               	clrf	tblptru,c
  7185  0012CE                     	endif
  7186  0012CE                     	if	0	;tblptru may be non-zero
  7187  0012CE                     	endif
  7188  0012CE  0008               	tblrd		*
  7189  0012D0  50F5               	movf	tablat,w,c
  7190  0012D2  0A25               	xorlw	37
  7191  0012D4  A4D8               	btfss	status,2,c
  7192  0012D6  EF6F  F009         	goto	u11751
  7193  0012DA  EF71  F009         	goto	u11750
  7194  0012DE                     u11751:
  7195  0012DE  EF89  F009         	goto	l9246
  7196  0012E2                     u11750:
  7197  0012E2                     
  7198                           ; BSR set to: 0
  7199                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  7200  0012E2  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7201  0012E6  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7202  0012EA  2ADE               	incf	postinc2,f,c
  7203  0012EC  0E00               	movlw	0
  7204  0012EE  22DD               	addwfc	postdec2,f,c
  7205  0012F0                     
  7206                           ; BSR set to: 0
  7207                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  7208  0012F0  0E00               	movlw	0
  7209  0012F2  6F92               	movwf	(fputc@c+1)& (0+255),b
  7210  0012F4  0E25               	movlw	37
  7211  0012F6  6F91               	movwf	fputc@c& (0+255),b
  7212  0012F8  C127  F093         	movff	vfpfcnvrt@fp,fputc@fp
  7213  0012FC  C128  F094         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7214  001300  EC06  F02C         	call	_fputc	;wreg free
  7215  001304                     l9242:
  7216                           
  7217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  7218  001304  0E00               	movlw	0
  7219  001306  0101               	movlb	1	; () banked
  7220  001308  6F28               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7221  00130A  0E01               	movlw	1
  7222  00130C  6F27               	movwf	?_vfpfcnvrt& (0+255),b
  7223  00130E  EFAF  F009         	goto	l878
  7224  001312                     l9246:
  7225                           
  7226                           ; BSR set to: 0
  7227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  7228  001312  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7229  001316  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7230  00131A  2ADE               	incf	postinc2,f,c
  7231  00131C  0E00               	movlw	0
  7232  00131E  22DD               	addwfc	postdec2,f,c
  7233  001320  EF13  F005         	goto	l9098
  7234  001324                     l9252:
  7235                           
  7236                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  7237  001324  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7238  001328  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7239  00132C  CFDE FFF6          	movff	postinc2,tblptrl
  7240  001330  CFDD FFF7          	movff	postdec2,tblptrh
  7241  001334                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7242  001334  6AF8               	clrf	tblptru,c
  7243  001336                     	endif
  7244  001336                     	if	0	;tblptru may be non-zero
  7245  001336                     	endif
  7246  001336  0008               	tblrd		*
  7247  001338  50F5               	movf	tablat,w,c
  7248  00133A  0100               	movlb	0	; () banked
  7249  00133C  6F91               	movwf	fputc@c& (0+255),b
  7250  00133E  6B92               	clrf	(fputc@c+1)& (0+255),b
  7251  001340  C127  F093         	movff	vfpfcnvrt@fp,fputc@fp
  7252  001344  C128  F094         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7253  001348  EC06  F02C         	call	_fputc	;wreg free
  7254  00134C                     
  7255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  7256  00134C  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7257  001350  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7258  001354  2ADE               	incf	postinc2,f,c
  7259  001356  0E00               	movlw	0
  7260  001358  22DD               	addwfc	postdec2,f,c
  7261  00135A  EF82  F009         	goto	l9242
  7262  00135E                     l878:
  7263  00135E  0012               	return		;funcret
  7264  001360                     __end_of_vfpfcnvrt:
  7265                           	opt callstack 0
  7266                           
  7267 ;; *************** function _xtoa *****************
  7268 ;; Defined at:
  7269 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7270 ;; Parameters:    Size  Location     Type
  7271 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  7272 ;;		 -> vsnprintf@f(6), NULL(0), 
  7273 ;;  d               8    2[BANK1 ] unsigned long long 
  7274 ;;  x               1   10[BANK1 ] unsigned char 
  7275 ;; Auto vars:     Size  Location     Type
  7276 ;;  n               8   27[BANK1 ] unsigned long long 
  7277 ;;  c               2   37[BANK1 ] int 
  7278 ;;  i               2   35[BANK1 ] int 
  7279 ;;  w               2   25[BANK1 ] int 
  7280 ;;  p               2   23[BANK1 ] int 
  7281 ;; Return value:  Size  Location     Type
  7282 ;;                  2    0[BANK1 ] int 
  7283 ;; Registers used:
  7284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7285 ;; Tracked objects:
  7286 ;;		On entry : 0/0
  7287 ;;		On exit  : 0/0
  7288 ;;		Unchanged: 0/0
  7289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7290 ;;      Params:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7291 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7292 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7293 ;;      Totals:         0       0      39       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7294 ;;Total ram usage:       39 bytes
  7295 ;; Hardware stack levels used:    1
  7296 ;; Hardware stack levels required when called:   18
  7297 ;; This function calls:
  7298 ;;		_isalpha
  7299 ;;		_isupper
  7300 ;;		_pad
  7301 ;;		_toupper
  7302 ;; This function is called by:
  7303 ;;		_vfpfcnvrt
  7304 ;; This function uses a non-reentrant model
  7305 ;;
  7306                           
  7307                           	psect	text11
  7308  003024                     __ptext11:
  7309                           	opt callstack 0
  7310  003024                     _xtoa:
  7311                           	opt callstack 8
  7312  003024                     
  7313                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  7314  003024  0100               	movlb	0	; () banked
  7315  003026  BFB8               	btfsc	(_prec+1)& (0+255),7,b
  7316  003028  EF18  F018         	goto	u11061
  7317  00302C  EF1A  F018         	goto	u11060
  7318  003030                     u11061:
  7319  003030  EF1B  F018         	goto	l8820
  7320  003034                     u11060:
  7321  003034                     
  7322                           ; BSR set to: 0
  7323                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  7324  003034  93B9               	bcf	_flags& (0+255),1,b
  7325  003036                     l8820:
  7326                           
  7327                           ; BSR set to: 0
  7328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  7329  003036  BFB8               	btfsc	(_prec+1)& (0+255),7,b
  7330  003038  EF28  F018         	goto	u11070
  7331  00303C  51B8               	movf	(_prec+1)& (0+255),w,b
  7332  00303E  E106               	bnz	u11071
  7333  003040  05B7               	decf	_prec& (0+255),w,b
  7334  003042  B0D8               	btfsc	status,0,c
  7335  003044  EF26  F018         	goto	u11071
  7336  003048  EF28  F018         	goto	u11070
  7337  00304C                     u11071:
  7338  00304C  EF2F  F018         	goto	l816
  7339  003050                     u11070:
  7340  003050                     
  7341                           ; BSR set to: 0
  7342  003050  0E00               	movlw	0
  7343  003052  0101               	movlb	1	; () banked
  7344  003054  6F18               	movwf	(xtoa@p+1)& (0+255),b
  7345  003056  0E01               	movlw	1
  7346  003058  6F17               	movwf	xtoa@p& (0+255),b
  7347  00305A  EF33  F018         	goto	l818
  7348  00305E                     l816:
  7349                           
  7350                           ; BSR set to: 0
  7351  00305E  C0B7  F117         	movff	_prec,xtoa@p
  7352  003062  C0B8  F118         	movff	_prec+1,xtoa@p+1
  7353  003066                     l818:
  7354                           
  7355                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  7356  003066  C0B5  F119         	movff	_width,xtoa@w
  7357  00306A  C0B6  F11A         	movff	_width+1,xtoa@w+1
  7358                           
  7359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  7360  00306E  0100               	movlb	0	; () banked
  7361  003070  A9B9               	btfss	_flags& (0+255),4,b
  7362  003072  EF3D  F018         	goto	u11081
  7363  003076  EF3F  F018         	goto	u11080
  7364  00307A                     u11081:
  7365  00307A  EF44  F018         	goto	l8826
  7366  00307E                     u11080:
  7367  00307E                     
  7368                           ; BSR set to: 0
  7369                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  7370  00307E  0101               	movlb	1	; () banked
  7371  003080  0EFE               	movlw	254
  7372  003082  2719               	addwf	xtoa@w& (0+255),f,b
  7373  003084  0EFF               	movlw	255
  7374  003086  231A               	addwfc	(xtoa@w+1)& (0+255),f,b
  7375  003088                     l8826:
  7376                           
  7377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  7378  003088  C102  F11B         	movff	xtoa@d,xtoa@n
  7379  00308C  C103  F11C         	movff	xtoa@d+1,xtoa@n+1
  7380  003090  C104  F11D         	movff	xtoa@d+2,xtoa@n+2
  7381  003094  C105  F11E         	movff	xtoa@d+3,xtoa@n+3
  7382  003098  C106  F11F         	movff	xtoa@d+4,xtoa@n+4
  7383  00309C  C107  F120         	movff	xtoa@d+5,xtoa@n+5
  7384  0030A0  C108  F121         	movff	xtoa@d+6,xtoa@n+6
  7385  0030A4  C109  F122         	movff	xtoa@d+7,xtoa@n+7
  7386  0030A8                     
  7387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  7388  0030A8  0E00               	movlw	0
  7389  0030AA  0101               	movlb	1	; () banked
  7390  0030AC  6F24               	movwf	(xtoa@i+1)& (0+255),b
  7391  0030AE  0E1F               	movlw	31
  7392  0030B0  6F23               	movwf	xtoa@i& (0+255),b
  7393  0030B2                     
  7394                           ; BSR set to: 1
  7395                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  7396  0030B2  0E00               	movlw	0
  7397  0030B4  6FA8               	movwf	(_dbuf+31)& (0+255),b
  7398                           
  7399                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7400  0030B6  EF12  F019         	goto	l8862
  7401  0030BA                     l8832:
  7402                           
  7403                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  7404  0030BA  0101               	movlb	1	; () banked
  7405  0030BC  0723               	decf	xtoa@i& (0+255),f,b
  7406  0030BE  A0D8               	btfss	status,0,c
  7407  0030C0  0724               	decf	(xtoa@i+1)& (0+255),f,b
  7408  0030C2                     
  7409                           ; BSR set to: 1
  7410                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  7411  0030C2  0E0F               	movlw	15
  7412  0030C4  151B               	andwf	xtoa@n& (0+255),w,b
  7413  0030C6  6F25               	movwf	xtoa@c& (0+255),b
  7414  0030C8  6B26               	clrf	(xtoa@c+1)& (0+255),b
  7415  0030CA                     
  7416                           ; BSR set to: 1
  7417                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  7418  0030CA  BF26               	btfsc	(xtoa@c+1)& (0+255),7,b
  7419  0030CC  EF71  F018         	goto	u11091
  7420  0030D0  5126               	movf	(xtoa@c+1)& (0+255),w,b
  7421  0030D2  E109               	bnz	u11090
  7422  0030D4  0E0A               	movlw	10
  7423  0030D6  5D25               	subwf	xtoa@c& (0+255),w,b
  7424  0030D8  A0D8               	btfss	status,0,c
  7425  0030DA  EF71  F018         	goto	u11091
  7426  0030DE  EF73  F018         	goto	u11090
  7427  0030E2                     u11091:
  7428  0030E2  EF7B  F018         	goto	l8840
  7429  0030E6                     u11090:
  7430  0030E6                     
  7431                           ; BSR set to: 1
  7432  0030E6  0E57               	movlw	87
  7433  0030E8  2525               	addwf	xtoa@c& (0+255),w,b
  7434  0030EA  6F25               	movwf	xtoa@c& (0+255),b
  7435  0030EC  0E00               	movlw	0
  7436  0030EE  2126               	addwfc	(xtoa@c+1)& (0+255),w,b
  7437  0030F0  6F26               	movwf	(xtoa@c+1)& (0+255),b
  7438  0030F2  EF81  F018         	goto	l825
  7439  0030F6                     l8840:
  7440                           
  7441                           ; BSR set to: 1
  7442  0030F6  0E30               	movlw	48
  7443  0030F8  2525               	addwf	xtoa@c& (0+255),w,b
  7444  0030FA  6F25               	movwf	xtoa@c& (0+255),b
  7445  0030FC  0E00               	movlw	0
  7446  0030FE  2126               	addwfc	(xtoa@c+1)& (0+255),w,b
  7447  003100  6F26               	movwf	(xtoa@c+1)& (0+255),b
  7448  003102                     l825:
  7449                           
  7450                           ; BSR set to: 1
  7451  003102  0EBF               	movlw	191
  7452  003104  6F0B               	movwf	??_xtoa& (0+255),b
  7453  003106  0EFF               	movlw	255
  7454  003108  6F0C               	movwf	(??_xtoa+1)& (0+255),b
  7455  00310A  510A               	movf	xtoa@x& (0+255),w,b
  7456  00310C  6F0D               	movwf	(??_xtoa+2)& (0+255),b
  7457  00310E  6B0E               	clrf	(??_xtoa+3)& (0+255),b
  7458  003110  510B               	movf	??_xtoa& (0+255),w,b
  7459  003112  270D               	addwf	(??_xtoa+2)& (0+255),f,b
  7460  003114  510C               	movf	(??_xtoa+1)& (0+255),w,b
  7461  003116  230E               	addwfc	(??_xtoa+3)& (0+255),f,b
  7462  003118  510E               	movf	(??_xtoa+3)& (0+255),w,b
  7463  00311A  E10A               	bnz	u11100
  7464  00311C  0E1A               	movlw	26
  7465  00311E  5D0D               	subwf	(??_xtoa+2)& (0+255),w,b
  7466  003120  A0D8               	btfss	status,0,c
  7467  003122  EF95  F018         	goto	u11101
  7468  003126  EF98  F018         	goto	u11100
  7469  00312A                     u11101:
  7470  00312A  0E01               	movlw	1
  7471  00312C  EF99  F018         	goto	u11110
  7472  003130                     u11100:
  7473  003130  0E00               	movlw	0
  7474  003132                     u11110:
  7475  003132  6F13               	movwf	_xtoa$1861& (0+255),b
  7476  003134  6B14               	clrf	(_xtoa$1861+1)& (0+255),b
  7477  003136                     
  7478                           ; BSR set to: 1
  7479  003136  5113               	movf	_xtoa$1861& (0+255),w,b
  7480  003138  1114               	iorwf	(_xtoa$1861+1)& (0+255),w,b
  7481  00313A  B4D8               	btfsc	status,2,c
  7482  00313C  EFA2  F018         	goto	u11121
  7483  003140  EFA4  F018         	goto	u11120
  7484  003144                     u11121:
  7485  003144  EFD4  F018         	goto	l8854
  7486  003148                     u11120:
  7487  003148                     
  7488                           ; BSR set to: 1
  7489  003148  0E9F               	movlw	159
  7490  00314A  6F0B               	movwf	??_xtoa& (0+255),b
  7491  00314C  0EFF               	movlw	255
  7492  00314E  6F0C               	movwf	(??_xtoa+1)& (0+255),b
  7493  003150  0E20               	movlw	32
  7494  003152  1125               	iorwf	xtoa@c& (0+255),w,b
  7495  003154  6F0D               	movwf	(??_xtoa+2)& (0+255),b
  7496  003156  0E00               	movlw	0
  7497  003158  1126               	iorwf	(xtoa@c+1)& (0+255),w,b
  7498  00315A  6F0E               	movwf	(??_xtoa+3)& (0+255),b
  7499  00315C  510B               	movf	??_xtoa& (0+255),w,b
  7500  00315E  270D               	addwf	(??_xtoa+2)& (0+255),f,b
  7501  003160  510C               	movf	(??_xtoa+1)& (0+255),w,b
  7502  003162  230E               	addwfc	(??_xtoa+3)& (0+255),f,b
  7503  003164  510E               	movf	(??_xtoa+3)& (0+255),w,b
  7504  003166  E10A               	bnz	u11130
  7505  003168  0E1A               	movlw	26
  7506  00316A  5D0D               	subwf	(??_xtoa+2)& (0+255),w,b
  7507  00316C  A0D8               	btfss	status,0,c
  7508  00316E  EFBB  F018         	goto	u11131
  7509  003172  EFBE  F018         	goto	u11130
  7510  003176                     u11131:
  7511  003176  0E01               	movlw	1
  7512  003178  EFBF  F018         	goto	u11140
  7513  00317C                     u11130:
  7514  00317C  0E00               	movlw	0
  7515  00317E                     u11140:
  7516  00317E  6F15               	movwf	_xtoa$1862& (0+255),b
  7517  003180  6B16               	clrf	(_xtoa$1862+1)& (0+255),b
  7518  003182                     
  7519                           ; BSR set to: 1
  7520  003182  5115               	movf	_xtoa$1862& (0+255),w,b
  7521  003184  1116               	iorwf	(_xtoa$1862+1)& (0+255),w,b
  7522  003186  B4D8               	btfsc	status,2,c
  7523  003188  EFC8  F018         	goto	u11151
  7524  00318C  EFCA  F018         	goto	u11150
  7525  003190                     u11151:
  7526  003190  EFD4  F018         	goto	l8854
  7527  003194                     u11150:
  7528  003194                     
  7529                           ; BSR set to: 1
  7530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  7531  003194  C125  F095         	movff	xtoa@c,toupper@c
  7532  003198  C126  F096         	movff	xtoa@c+1,toupper@c+1
  7533  00319C  EC65  F02F         	call	_toupper	;wreg free
  7534  0031A0  C095  F125         	movff	?_toupper,xtoa@c
  7535  0031A4  C096  F126         	movff	?_toupper+1,xtoa@c+1
  7536  0031A8                     l8854:
  7537                           
  7538                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  7539  0031A8  0E89               	movlw	low _dbuf
  7540  0031AA  0101               	movlb	1	; () banked
  7541  0031AC  2523               	addwf	xtoa@i& (0+255),w,b
  7542  0031AE  6ED9               	movwf	fsr2l,c
  7543  0031B0  0E01               	movlw	high _dbuf
  7544  0031B2  2124               	addwfc	(xtoa@i+1)& (0+255),w,b
  7545  0031B4  6EDA               	movwf	fsr2h,c
  7546  0031B6  C125  FFDF         	movff	xtoa@c,indf2
  7547  0031BA                     
  7548                           ; BSR set to: 1
  7549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  7550  0031BA  0717               	decf	xtoa@p& (0+255),f,b
  7551  0031BC  A0D8               	btfss	status,0,c
  7552  0031BE  0718               	decf	(xtoa@p+1)& (0+255),f,b
  7553  0031C0                     
  7554                           ; BSR set to: 1
  7555                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  7556  0031C0  0719               	decf	xtoa@w& (0+255),f,b
  7557  0031C2  A0D8               	btfss	status,0,c
  7558  0031C4  071A               	decf	(xtoa@w+1)& (0+255),f,b
  7559  0031C6                     
  7560                           ; BSR set to: 1
  7561                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  7562  0031C6  C11B  F10B         	movff	xtoa@n,??_xtoa
  7563  0031CA  C11C  F10C         	movff	xtoa@n+1,??_xtoa+1
  7564  0031CE  C11D  F10D         	movff	xtoa@n+2,??_xtoa+2
  7565  0031D2  C11E  F10E         	movff	xtoa@n+3,??_xtoa+3
  7566  0031D6  C11F  F10F         	movff	xtoa@n+4,??_xtoa+4
  7567  0031DA  C120  F110         	movff	xtoa@n+5,??_xtoa+5
  7568  0031DE  C121  F111         	movff	xtoa@n+6,??_xtoa+6
  7569  0031E2  C122  F112         	movff	xtoa@n+7,??_xtoa+7
  7570  0031E6  0E05               	movlw	5
  7571  0031E8  EFFF  F018         	goto	u11160
  7572  0031EC                     u11165:
  7573  0031EC  90D8               	bcf	status,0,c
  7574  0031EE  3312               	rrcf	(??_xtoa+7)& (0+255),f,b
  7575  0031F0  3311               	rrcf	(??_xtoa+6)& (0+255),f,b
  7576  0031F2  3310               	rrcf	(??_xtoa+5)& (0+255),f,b
  7577  0031F4  330F               	rrcf	(??_xtoa+4)& (0+255),f,b
  7578  0031F6  330E               	rrcf	(??_xtoa+3)& (0+255),f,b
  7579  0031F8  330D               	rrcf	(??_xtoa+2)& (0+255),f,b
  7580  0031FA  330C               	rrcf	(??_xtoa+1)& (0+255),f,b
  7581  0031FC  330B               	rrcf	??_xtoa& (0+255),f,b
  7582  0031FE                     u11160:
  7583  0031FE  2EE8               	decfsz	wreg,f,c
  7584  003200  EFF6  F018         	goto	u11165
  7585  003204  C10B  F11B         	movff	??_xtoa,xtoa@n
  7586  003208  C10C  F11C         	movff	??_xtoa+1,xtoa@n+1
  7587  00320C  C10D  F11D         	movff	??_xtoa+2,xtoa@n+2
  7588  003210  C10E  F11E         	movff	??_xtoa+3,xtoa@n+3
  7589  003214  C10F  F11F         	movff	??_xtoa+4,xtoa@n+4
  7590  003218  C110  F120         	movff	??_xtoa+5,xtoa@n+5
  7591  00321C  C111  F121         	movff	??_xtoa+6,xtoa@n+6
  7592  003220  C112  F122         	movff	??_xtoa+7,xtoa@n+7
  7593  003224                     l8862:
  7594                           
  7595                           ; BSR set to: 1
  7596                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7597  003224  BF24               	btfsc	(xtoa@i+1)& (0+255),7,b
  7598  003226  EF1E  F019         	goto	u11171
  7599  00322A  5124               	movf	(xtoa@i+1)& (0+255),w,b
  7600  00322C  E109               	bnz	u11170
  7601  00322E  0E02               	movlw	2
  7602  003230  5D23               	subwf	xtoa@i& (0+255),w,b
  7603  003232  A0D8               	btfss	status,0,c
  7604  003234  EF1E  F019         	goto	u11171
  7605  003238  EF20  F019         	goto	u11170
  7606  00323C                     u11171:
  7607  00323C  EF51  F019         	goto	l839
  7608  003240                     u11170:
  7609  003240                     
  7610                           ; BSR set to: 1
  7611  003240  511B               	movf	xtoa@n& (0+255),w,b
  7612  003242  111C               	iorwf	(xtoa@n+1)& (0+255),w,b
  7613  003244  111D               	iorwf	(xtoa@n+2)& (0+255),w,b
  7614  003246  111E               	iorwf	(xtoa@n+3)& (0+255),w,b
  7615  003248  111F               	iorwf	(xtoa@n+4)& (0+255),w,b
  7616  00324A  1120               	iorwf	(xtoa@n+5)& (0+255),w,b
  7617  00324C  1121               	iorwf	(xtoa@n+6)& (0+255),w,b
  7618  00324E  1122               	iorwf	(xtoa@n+7)& (0+255),w,b
  7619  003250  A4D8               	btfss	status,2,c
  7620  003252  EF2D  F019         	goto	u11181
  7621  003256  EF2F  F019         	goto	u11180
  7622  00325A                     u11181:
  7623  00325A  EF5D  F018         	goto	l8832
  7624  00325E                     u11180:
  7625  00325E                     
  7626                           ; BSR set to: 1
  7627  00325E  BF18               	btfsc	(xtoa@p+1)& (0+255),7,b
  7628  003260  EF3C  F019         	goto	u11190
  7629  003264  5118               	movf	(xtoa@p+1)& (0+255),w,b
  7630  003266  E106               	bnz	u11191
  7631  003268  0517               	decf	xtoa@p& (0+255),w,b
  7632  00326A  B0D8               	btfsc	status,0,c
  7633  00326C  EF3A  F019         	goto	u11191
  7634  003270  EF3C  F019         	goto	u11190
  7635  003274                     u11191:
  7636  003274  EF5D  F018         	goto	l8832
  7637  003278                     u11190:
  7638  003278                     
  7639                           ; BSR set to: 1
  7640  003278  BF1A               	btfsc	(xtoa@w+1)& (0+255),7,b
  7641  00327A  EF47  F019         	goto	u11201
  7642  00327E  511A               	movf	(xtoa@w+1)& (0+255),w,b
  7643  003280  E108               	bnz	u11200
  7644  003282  0519               	decf	xtoa@w& (0+255),w,b
  7645  003284  A0D8               	btfss	status,0,c
  7646  003286  EF47  F019         	goto	u11201
  7647  00328A  EF49  F019         	goto	u11200
  7648  00328E                     u11201:
  7649  00328E  EF51  F019         	goto	l839
  7650  003292                     u11200:
  7651  003292                     
  7652                           ; BSR set to: 1
  7653  003292  0100               	movlb	0	; () banked
  7654  003294  B3B9               	btfsc	_flags& (0+255),1,b
  7655  003296  EF4F  F019         	goto	u11211
  7656  00329A  EF51  F019         	goto	u11210
  7657  00329E                     u11211:
  7658  00329E  EF5D  F018         	goto	l8832
  7659  0032A2                     u11210:
  7660  0032A2                     l839:
  7661                           
  7662                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  7663  0032A2  0100               	movlb	0	; () banked
  7664  0032A4  A9B9               	btfss	_flags& (0+255),4,b
  7665  0032A6  EF57  F019         	goto	u11221
  7666  0032AA  EF59  F019         	goto	u11220
  7667  0032AE                     u11221:
  7668  0032AE  EF70  F019         	goto	l8878
  7669  0032B2                     u11220:
  7670  0032B2                     
  7671                           ; BSR set to: 0
  7672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  7673  0032B2  0101               	movlb	1	; () banked
  7674  0032B4  0723               	decf	xtoa@i& (0+255),f,b
  7675  0032B6  A0D8               	btfss	status,0,c
  7676  0032B8  0724               	decf	(xtoa@i+1)& (0+255),f,b
  7677  0032BA                     
  7678                           ; BSR set to: 1
  7679                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  7680  0032BA  0E89               	movlw	low _dbuf
  7681  0032BC  2523               	addwf	xtoa@i& (0+255),w,b
  7682  0032BE  6ED9               	movwf	fsr2l,c
  7683  0032C0  0E01               	movlw	high _dbuf
  7684  0032C2  2124               	addwfc	(xtoa@i+1)& (0+255),w,b
  7685  0032C4  6EDA               	movwf	fsr2h,c
  7686  0032C6  C10A  FFDF         	movff	xtoa@x,indf2
  7687  0032CA                     
  7688                           ; BSR set to: 1
  7689                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  7690  0032CA  0723               	decf	xtoa@i& (0+255),f,b
  7691  0032CC  A0D8               	btfss	status,0,c
  7692  0032CE  0724               	decf	(xtoa@i+1)& (0+255),f,b
  7693                           
  7694                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  7695  0032D0  0E89               	movlw	low _dbuf
  7696  0032D2  2523               	addwf	xtoa@i& (0+255),w,b
  7697  0032D4  6ED9               	movwf	fsr2l,c
  7698  0032D6  0E01               	movlw	high _dbuf
  7699  0032D8  2124               	addwfc	(xtoa@i+1)& (0+255),w,b
  7700  0032DA  6EDA               	movwf	fsr2h,c
  7701  0032DC  0E30               	movlw	48
  7702  0032DE  6EDF               	movwf	indf2,c
  7703  0032E0                     l8878:
  7704                           
  7705                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  7706  0032E0  C100  F0A1         	movff	xtoa@fp,pad@fp
  7707  0032E4  C101  F0A2         	movff	xtoa@fp+1,pad@fp+1
  7708  0032E8  0E89               	movlw	low _dbuf
  7709  0032EA  0101               	movlb	1	; () banked
  7710  0032EC  2523               	addwf	xtoa@i& (0+255),w,b
  7711  0032EE  0100               	movlb	0	; () banked
  7712  0032F0  6FA3               	movwf	pad@buf& (0+255),b
  7713  0032F2  0E01               	movlw	high _dbuf
  7714  0032F4  0101               	movlb	1	; () banked
  7715  0032F6  2124               	addwfc	(xtoa@i+1)& (0+255),w,b
  7716  0032F8  0100               	movlb	0	; () banked
  7717  0032FA  6FA4               	movwf	(pad@buf+1)& (0+255),b
  7718  0032FC  C119  F0A5         	movff	xtoa@w,pad@p
  7719  003300  C11A  F0A6         	movff	xtoa@w+1,pad@p+1
  7720  003304  EC6C  F02C         	call	_pad	;wreg free
  7721  003308  C0A1  F100         	movff	?_pad,?_xtoa
  7722  00330C  C0A2  F101         	movff	?_pad+1,?_xtoa+1
  7723  003310  0012               	return		;funcret
  7724  003312                     __end_of_xtoa:
  7725                           	opt callstack 0
  7726                           
  7727 ;; *************** function _toupper *****************
  7728 ;; Defined at:
  7729 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  7730 ;; Parameters:    Size  Location     Type
  7731 ;;  c               2   53[BANK0 ] int 
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;		None
  7734 ;; Return value:  Size  Location     Type
  7735 ;;                  2   53[BANK0 ] int 
  7736 ;; Registers used:
  7737 ;;		wreg, status,2, status,0
  7738 ;; Tracked objects:
  7739 ;;		On entry : 0/0
  7740 ;;		On exit  : 0/0
  7741 ;;		Unchanged: 0/0
  7742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7743 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7744 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7745 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7746 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7747 ;;Total ram usage:        8 bytes
  7748 ;; Hardware stack levels used:    1
  7749 ;; Hardware stack levels required when called:   14
  7750 ;; This function calls:
  7751 ;;		_islower
  7752 ;; This function is called by:
  7753 ;;		_xtoa
  7754 ;; This function uses a non-reentrant model
  7755 ;;
  7756                           
  7757                           	psect	text12
  7758  005ECA                     __ptext12:
  7759                           	opt callstack 0
  7760  005ECA                     _toupper:
  7761                           	opt callstack 11
  7762  005ECA  0E9F               	movlw	159
  7763  005ECC  0100               	movlb	0	; () banked
  7764  005ECE  6F97               	movwf	??_toupper& (0+255),b
  7765  005ED0  0EFF               	movlw	255
  7766  005ED2  6F98               	movwf	(??_toupper+1)& (0+255),b
  7767  005ED4  C095  F099         	movff	toupper@c,??_toupper+2
  7768  005ED8  C096  F09A         	movff	toupper@c+1,??_toupper+3
  7769  005EDC  5197               	movf	??_toupper& (0+255),w,b
  7770  005EDE  2799               	addwf	(??_toupper+2)& (0+255),f,b
  7771  005EE0  5198               	movf	(??_toupper+1)& (0+255),w,b
  7772  005EE2  239A               	addwfc	(??_toupper+3)& (0+255),f,b
  7773  005EE4  519A               	movf	(??_toupper+3)& (0+255),w,b
  7774  005EE6  E10A               	bnz	u9790
  7775  005EE8  0E1A               	movlw	26
  7776  005EEA  5D99               	subwf	(??_toupper+2)& (0+255),w,b
  7777  005EEC  A0D8               	btfss	status,0,c
  7778  005EEE  EF7B  F02F         	goto	u9791
  7779  005EF2  EF7E  F02F         	goto	u9790
  7780  005EF6                     u9791:
  7781  005EF6  0E01               	movlw	1
  7782  005EF8  EF7F  F02F         	goto	u9800
  7783  005EFC                     u9790:
  7784  005EFC  0E00               	movlw	0
  7785  005EFE                     u9800:
  7786  005EFE  6F9B               	movwf	_toupper$2552& (0+255),b
  7787  005F00  6B9C               	clrf	(_toupper$2552+1)& (0+255),b
  7788  005F02                     
  7789                           ; BSR set to: 0
  7790  005F02  519B               	movf	_toupper$2552& (0+255),w,b
  7791  005F04  119C               	iorwf	(_toupper$2552+1)& (0+255),w,b
  7792  005F06  B4D8               	btfsc	status,2,c
  7793  005F08  EF88  F02F         	goto	u9811
  7794  005F0C  EF8A  F02F         	goto	u9810
  7795  005F10                     u9811:
  7796  005F10  EF90  F02F         	goto	l1715
  7797  005F14                     u9810:
  7798  005F14                     
  7799                           ; BSR set to: 0
  7800  005F14  0E5F               	movlw	95
  7801  005F16  1595               	andwf	toupper@c& (0+255),w,b
  7802  005F18  6F95               	movwf	?_toupper& (0+255),b
  7803  005F1A  6B96               	clrf	(?_toupper+1)& (0+255),b
  7804  005F1C  EF94  F02F         	goto	l1720
  7805  005F20                     l1715:
  7806                           
  7807                           ; BSR set to: 0
  7808  005F20  C095  F095         	movff	toupper@c,?_toupper
  7809  005F24  C096  F096         	movff	toupper@c+1,?_toupper+1
  7810  005F28                     l1720:
  7811                           
  7812                           ; BSR set to: 0
  7813  005F28  0012               	return		;funcret
  7814  005F2A                     __end_of_toupper:
  7815                           	opt callstack 0
  7816                           
  7817 ;; *************** function _islower *****************
  7818 ;; Defined at:
  7819 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  7820 ;; Parameters:    Size  Location     Type
  7821 ;;  c               2   47[BANK0 ] int 
  7822 ;; Auto vars:     Size  Location     Type
  7823 ;;		None
  7824 ;; Return value:  Size  Location     Type
  7825 ;;                  2   47[BANK0 ] int 
  7826 ;; Registers used:
  7827 ;;		wreg, status,2, status,0
  7828 ;; Tracked objects:
  7829 ;;		On entry : 0/0
  7830 ;;		On exit  : 0/0
  7831 ;;		Unchanged: 0/0
  7832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7833 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7835 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7836 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7837 ;;Total ram usage:        6 bytes
  7838 ;; Hardware stack levels used:    1
  7839 ;; Hardware stack levels required when called:   13
  7840 ;; This function calls:
  7841 ;;		Nothing
  7842 ;; This function is called by:
  7843 ;;		_toupper
  7844 ;; This function uses a non-reentrant model
  7845 ;;
  7846                           
  7847                           	psect	text13
  7848  0064B2                     __ptext13:
  7849                           	opt callstack 0
  7850  0064B2                     _islower:
  7851                           	opt callstack 11
  7852  0064B2  0E9F               	movlw	159
  7853  0064B4  0100               	movlb	0	; () banked
  7854  0064B6  6F91               	movwf	??_islower& (0+255),b
  7855  0064B8  0EFF               	movlw	255
  7856  0064BA  6F92               	movwf	(??_islower+1)& (0+255),b
  7857  0064BC  C08F  F093         	movff	islower@c,??_islower+2
  7858  0064C0  C090  F094         	movff	islower@c+1,??_islower+3
  7859  0064C4  5191               	movf	??_islower& (0+255),w,b
  7860  0064C6  2793               	addwf	(??_islower+2)& (0+255),f,b
  7861  0064C8  5192               	movf	(??_islower+1)& (0+255),w,b
  7862  0064CA  2394               	addwfc	(??_islower+3)& (0+255),f,b
  7863  0064CC  5194               	movf	(??_islower+3)& (0+255),w,b
  7864  0064CE  E10A               	bnz	u8910
  7865  0064D0  0E1A               	movlw	26
  7866  0064D2  5D93               	subwf	(??_islower+2)& (0+255),w,b
  7867  0064D4  A0D8               	btfss	status,0,c
  7868  0064D6  EF6F  F032         	goto	u8911
  7869  0064DA  EF72  F032         	goto	u8910
  7870  0064DE                     u8911:
  7871  0064DE  0E01               	movlw	1
  7872  0064E0  EF73  F032         	goto	u8920
  7873  0064E4                     u8910:
  7874  0064E4  0E00               	movlw	0
  7875  0064E6                     u8920:
  7876  0064E6  6F8F               	movwf	?_islower& (0+255),b
  7877  0064E8  6B90               	clrf	(?_islower+1)& (0+255),b
  7878  0064EA                     
  7879                           ; BSR set to: 0
  7880  0064EA  0012               	return		;funcret
  7881  0064EC                     __end_of_islower:
  7882                           	opt callstack 0
  7883                           
  7884 ;; *************** function _isupper *****************
  7885 ;; Defined at:
  7886 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  7887 ;; Parameters:    Size  Location     Type
  7888 ;;  c               2   47[BANK0 ] int 
  7889 ;; Auto vars:     Size  Location     Type
  7890 ;;		None
  7891 ;; Return value:  Size  Location     Type
  7892 ;;                  2   47[BANK0 ] int 
  7893 ;; Registers used:
  7894 ;;		wreg, status,2, status,0
  7895 ;; Tracked objects:
  7896 ;;		On entry : 0/0
  7897 ;;		On exit  : 0/0
  7898 ;;		Unchanged: 0/0
  7899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7900 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7902 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7903 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7904 ;;Total ram usage:        6 bytes
  7905 ;; Hardware stack levels used:    1
  7906 ;; Hardware stack levels required when called:   13
  7907 ;; This function calls:
  7908 ;;		Nothing
  7909 ;; This function is called by:
  7910 ;;		_xtoa
  7911 ;; This function uses a non-reentrant model
  7912 ;;
  7913                           
  7914                           	psect	text14
  7915  0064EC                     __ptext14:
  7916                           	opt callstack 0
  7917  0064EC                     _isupper:
  7918                           	opt callstack 12
  7919  0064EC  0EBF               	movlw	191
  7920  0064EE  0100               	movlb	0	; () banked
  7921  0064F0  6F91               	movwf	??_isupper& (0+255),b
  7922  0064F2  0EFF               	movlw	255
  7923  0064F4  6F92               	movwf	(??_isupper+1)& (0+255),b
  7924  0064F6  C08F  F093         	movff	isupper@c,??_isupper+2
  7925  0064FA  C090  F094         	movff	isupper@c+1,??_isupper+3
  7926  0064FE  5191               	movf	??_isupper& (0+255),w,b
  7927  006500  2793               	addwf	(??_isupper+2)& (0+255),f,b
  7928  006502  5192               	movf	(??_isupper+1)& (0+255),w,b
  7929  006504  2394               	addwfc	(??_isupper+3)& (0+255),f,b
  7930  006506  5194               	movf	(??_isupper+3)& (0+255),w,b
  7931  006508  E10A               	bnz	u9750
  7932  00650A  0E1A               	movlw	26
  7933  00650C  5D93               	subwf	(??_isupper+2)& (0+255),w,b
  7934  00650E  A0D8               	btfss	status,0,c
  7935  006510  EF8C  F032         	goto	u9751
  7936  006514  EF8F  F032         	goto	u9750
  7937  006518                     u9751:
  7938  006518  0E01               	movlw	1
  7939  00651A  EF90  F032         	goto	u9760
  7940  00651E                     u9750:
  7941  00651E  0E00               	movlw	0
  7942  006520                     u9760:
  7943  006520  6F8F               	movwf	?_isupper& (0+255),b
  7944  006522  6B90               	clrf	(?_isupper+1)& (0+255),b
  7945  006524                     
  7946                           ; BSR set to: 0
  7947  006524  0012               	return		;funcret
  7948  006526                     __end_of_isupper:
  7949                           	opt callstack 0
  7950                           
  7951 ;; *************** function _isalpha *****************
  7952 ;; Defined at:
  7953 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  7954 ;; Parameters:    Size  Location     Type
  7955 ;;  c               2   47[BANK0 ] int 
  7956 ;; Auto vars:     Size  Location     Type
  7957 ;;		None
  7958 ;; Return value:  Size  Location     Type
  7959 ;;                  2   47[BANK0 ] int 
  7960 ;; Registers used:
  7961 ;;		wreg, status,2, status,0
  7962 ;; Tracked objects:
  7963 ;;		On entry : 0/0
  7964 ;;		On exit  : 0/0
  7965 ;;		Unchanged: 0/0
  7966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7967 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7969 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7970 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7971 ;;Total ram usage:        6 bytes
  7972 ;; Hardware stack levels used:    1
  7973 ;; Hardware stack levels required when called:   13
  7974 ;; This function calls:
  7975 ;;		Nothing
  7976 ;; This function is called by:
  7977 ;;		_xtoa
  7978 ;; This function uses a non-reentrant model
  7979 ;;
  7980                           
  7981                           	psect	text15
  7982  006438                     __ptext15:
  7983                           	opt callstack 0
  7984  006438                     _isalpha:
  7985                           	opt callstack 12
  7986  006438  0E9F               	movlw	159
  7987  00643A  0100               	movlb	0	; () banked
  7988  00643C  6F91               	movwf	??_isalpha& (0+255),b
  7989  00643E  0EFF               	movlw	255
  7990  006440  6F92               	movwf	(??_isalpha+1)& (0+255),b
  7991  006442  0E20               	movlw	32
  7992  006444  118F               	iorwf	isalpha@c& (0+255),w,b
  7993  006446  6F93               	movwf	(??_isalpha+2)& (0+255),b
  7994  006448  0E00               	movlw	0
  7995  00644A  1190               	iorwf	(isalpha@c+1)& (0+255),w,b
  7996  00644C  6F94               	movwf	(??_isalpha+3)& (0+255),b
  7997  00644E  5191               	movf	??_isalpha& (0+255),w,b
  7998  006450  2793               	addwf	(??_isalpha+2)& (0+255),f,b
  7999  006452  5192               	movf	(??_isalpha+1)& (0+255),w,b
  8000  006454  2394               	addwfc	(??_isalpha+3)& (0+255),f,b
  8001  006456  5194               	movf	(??_isalpha+3)& (0+255),w,b
  8002  006458  E10A               	bnz	u9770
  8003  00645A  0E1A               	movlw	26
  8004  00645C  5D93               	subwf	(??_isalpha+2)& (0+255),w,b
  8005  00645E  A0D8               	btfss	status,0,c
  8006  006460  EF34  F032         	goto	u9771
  8007  006464  EF37  F032         	goto	u9770
  8008  006468                     u9771:
  8009  006468  0E01               	movlw	1
  8010  00646A  EF38  F032         	goto	u9780
  8011  00646E                     u9770:
  8012  00646E  0E00               	movlw	0
  8013  006470                     u9780:
  8014  006470  6F8F               	movwf	?_isalpha& (0+255),b
  8015  006472  6B90               	clrf	(?_isalpha+1)& (0+255),b
  8016  006474                     
  8017                           ; BSR set to: 0
  8018  006474  0012               	return		;funcret
  8019  006476                     __end_of_isalpha:
  8020                           	opt callstack 0
  8021                           
  8022 ;; *************** function _utoa *****************
  8023 ;; Defined at:
  8024 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8025 ;; Parameters:    Size  Location     Type
  8026 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  8027 ;;		 -> vsnprintf@f(6), NULL(0), 
  8028 ;;  d               8    2[BANK1 ] unsigned long long 
  8029 ;; Auto vars:     Size  Location     Type
  8030 ;;  n               8   22[BANK1 ] unsigned long long 
  8031 ;;  i               2   30[BANK1 ] int 
  8032 ;;  w               2   20[BANK1 ] int 
  8033 ;;  p               2   18[BANK1 ] int 
  8034 ;; Return value:  Size  Location     Type
  8035 ;;                  2    0[BANK1 ] int 
  8036 ;; Registers used:
  8037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8038 ;; Tracked objects:
  8039 ;;		On entry : 0/0
  8040 ;;		On exit  : 0/0
  8041 ;;		Unchanged: 0/0
  8042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8043 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8044 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8045 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8046 ;;      Totals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8047 ;;Total ram usage:       32 bytes
  8048 ;; Hardware stack levels used:    1
  8049 ;; Hardware stack levels required when called:   18
  8050 ;; This function calls:
  8051 ;;		___lodiv
  8052 ;;		___lomod
  8053 ;;		_pad
  8054 ;; This function is called by:
  8055 ;;		_vfpfcnvrt
  8056 ;; This function uses a non-reentrant model
  8057 ;;
  8058                           
  8059                           	psect	text16
  8060  0038D0                     __ptext16:
  8061                           	opt callstack 0
  8062  0038D0                     _utoa:
  8063                           	opt callstack 8
  8064  0038D0                     
  8065                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  8066  0038D0  0100               	movlb	0	; () banked
  8067  0038D2  BFB8               	btfsc	(_prec+1)& (0+255),7,b
  8068  0038D4  EF6E  F01C         	goto	u10991
  8069  0038D8  EF70  F01C         	goto	u10990
  8070  0038DC                     u10991:
  8071  0038DC  EF71  F01C         	goto	l8784
  8072  0038E0                     u10990:
  8073  0038E0                     
  8074                           ; BSR set to: 0
  8075                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  8076  0038E0  93B9               	bcf	_flags& (0+255),1,b
  8077  0038E2                     l8784:
  8078                           
  8079                           ; BSR set to: 0
  8080                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  8081  0038E2  BFB8               	btfsc	(_prec+1)& (0+255),7,b
  8082  0038E4  EF7E  F01C         	goto	u11000
  8083  0038E8  51B8               	movf	(_prec+1)& (0+255),w,b
  8084  0038EA  E106               	bnz	u11001
  8085  0038EC  05B7               	decf	_prec& (0+255),w,b
  8086  0038EE  B0D8               	btfsc	status,0,c
  8087  0038F0  EF7C  F01C         	goto	u11001
  8088  0038F4  EF7E  F01C         	goto	u11000
  8089  0038F8                     u11001:
  8090  0038F8  EF85  F01C         	goto	l801
  8091  0038FC                     u11000:
  8092  0038FC                     
  8093                           ; BSR set to: 0
  8094  0038FC  0E00               	movlw	0
  8095  0038FE  0101               	movlb	1	; () banked
  8096  003900  6F13               	movwf	(utoa@p+1)& (0+255),b
  8097  003902  0E01               	movlw	1
  8098  003904  6F12               	movwf	utoa@p& (0+255),b
  8099  003906  EF89  F01C         	goto	l803
  8100  00390A                     l801:
  8101                           
  8102                           ; BSR set to: 0
  8103  00390A  C0B7  F112         	movff	_prec,utoa@p
  8104  00390E  C0B8  F113         	movff	_prec+1,utoa@p+1
  8105  003912                     l803:
  8106                           
  8107                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  8108  003912  C0B5  F114         	movff	_width,utoa@w
  8109  003916  C0B6  F115         	movff	_width+1,utoa@w+1
  8110                           
  8111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  8112  00391A  C102  F116         	movff	utoa@d,utoa@n
  8113  00391E  C103  F117         	movff	utoa@d+1,utoa@n+1
  8114  003922  C104  F118         	movff	utoa@d+2,utoa@n+2
  8115  003926  C105  F119         	movff	utoa@d+3,utoa@n+3
  8116  00392A  C106  F11A         	movff	utoa@d+4,utoa@n+4
  8117  00392E  C107  F11B         	movff	utoa@d+5,utoa@n+5
  8118  003932  C108  F11C         	movff	utoa@d+6,utoa@n+6
  8119  003936  C109  F11D         	movff	utoa@d+7,utoa@n+7
  8120  00393A                     
  8121                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  8122  00393A  0E00               	movlw	0
  8123  00393C  0101               	movlb	1	; () banked
  8124  00393E  6F1F               	movwf	(utoa@i+1)& (0+255),b
  8125  003940  0E1F               	movlw	31
  8126  003942  6F1E               	movwf	utoa@i& (0+255),b
  8127  003944                     
  8128                           ; BSR set to: 1
  8129                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  8130  003944  0E00               	movlw	0
  8131  003946  6FA8               	movwf	(_dbuf+31)& (0+255),b
  8132                           
  8133                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8134  003948  EF20  F01D         	goto	l8802
  8135  00394C                     l8792:
  8136                           
  8137                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  8138  00394C  0101               	movlb	1	; () banked
  8139  00394E  071E               	decf	utoa@i& (0+255),f,b
  8140  003950  A0D8               	btfss	status,0,c
  8141  003952  071F               	decf	(utoa@i+1)& (0+255),f,b
  8142  003954                     
  8143                           ; BSR set to: 1
  8144                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  8145  003954  0E89               	movlw	low _dbuf
  8146  003956  251E               	addwf	utoa@i& (0+255),w,b
  8147  003958  6ED9               	movwf	fsr2l,c
  8148  00395A  0E01               	movlw	high _dbuf
  8149  00395C  211F               	addwfc	(utoa@i+1)& (0+255),w,b
  8150  00395E  6EDA               	movwf	fsr2h,c
  8151  003960  C116  F08F         	movff	utoa@n,___lomod@dividend
  8152  003964  C117  F090         	movff	utoa@n+1,___lomod@dividend+1
  8153  003968  C118  F091         	movff	utoa@n+2,___lomod@dividend+2
  8154  00396C  C119  F092         	movff	utoa@n+3,___lomod@dividend+3
  8155  003970  C11A  F093         	movff	utoa@n+4,___lomod@dividend+4
  8156  003974  C11B  F094         	movff	utoa@n+5,___lomod@dividend+5
  8157  003978  C11C  F095         	movff	utoa@n+6,___lomod@dividend+6
  8158  00397C  C11D  F096         	movff	utoa@n+7,___lomod@dividend+7
  8159  003980  0E0A               	movlw	10
  8160  003982  0100               	movlb	0	; () banked
  8161  003984  6F97               	movwf	___lomod@divisor& (0+255),b
  8162  003986  0E00               	movlw	0
  8163  003988  6F98               	movwf	(___lomod@divisor+1)& (0+255),b
  8164  00398A  0E00               	movlw	0
  8165  00398C  6F99               	movwf	(___lomod@divisor+2)& (0+255),b
  8166  00398E  0E00               	movlw	0
  8167  003990  6F9A               	movwf	(___lomod@divisor+3)& (0+255),b
  8168  003992  0E00               	movlw	0
  8169  003994  6F9B               	movwf	(___lomod@divisor+4)& (0+255),b
  8170  003996  0E00               	movlw	0
  8171  003998  6F9C               	movwf	(___lomod@divisor+5)& (0+255),b
  8172  00399A  0E00               	movlw	0
  8173  00399C  6F9D               	movwf	(___lomod@divisor+6)& (0+255),b
  8174  00399E  0E00               	movlw	0
  8175  0039A0  6F9E               	movwf	(___lomod@divisor+7)& (0+255),b
  8176  0039A2  EC35  F02B         	call	___lomod	;wreg free
  8177  0039A6  C08F  F10A         	movff	?___lomod,??_utoa
  8178  0039AA  C090  F10B         	movff	?___lomod+1,??_utoa+1
  8179  0039AE  C091  F10C         	movff	?___lomod+2,??_utoa+2
  8180  0039B2  C092  F10D         	movff	?___lomod+3,??_utoa+3
  8181  0039B6  C093  F10E         	movff	?___lomod+4,??_utoa+4
  8182  0039BA  C094  F10F         	movff	?___lomod+5,??_utoa+5
  8183  0039BE  C095  F110         	movff	?___lomod+6,??_utoa+6
  8184  0039C2  C096  F111         	movff	?___lomod+7,??_utoa+7
  8185  0039C6  0101               	movlb	1	; () banked
  8186  0039C8  510A               	movf	??_utoa& (0+255),w,b
  8187  0039CA  0F30               	addlw	48
  8188  0039CC  6EDF               	movwf	indf2,c
  8189  0039CE                     
  8190                           ; BSR set to: 1
  8191                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  8192  0039CE  0712               	decf	utoa@p& (0+255),f,b
  8193  0039D0  A0D8               	btfss	status,0,c
  8194  0039D2  0713               	decf	(utoa@p+1)& (0+255),f,b
  8195  0039D4                     
  8196                           ; BSR set to: 1
  8197                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  8198  0039D4  0714               	decf	utoa@w& (0+255),f,b
  8199  0039D6  A0D8               	btfss	status,0,c
  8200  0039D8  0715               	decf	(utoa@w+1)& (0+255),f,b
  8201  0039DA                     
  8202                           ; BSR set to: 1
  8203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  8204  0039DA  C116  F08F         	movff	utoa@n,___lodiv@dividend
  8205  0039DE  C117  F090         	movff	utoa@n+1,___lodiv@dividend+1
  8206  0039E2  C118  F091         	movff	utoa@n+2,___lodiv@dividend+2
  8207  0039E6  C119  F092         	movff	utoa@n+3,___lodiv@dividend+3
  8208  0039EA  C11A  F093         	movff	utoa@n+4,___lodiv@dividend+4
  8209  0039EE  C11B  F094         	movff	utoa@n+5,___lodiv@dividend+5
  8210  0039F2  C11C  F095         	movff	utoa@n+6,___lodiv@dividend+6
  8211  0039F6  C11D  F096         	movff	utoa@n+7,___lodiv@dividend+7
  8212  0039FA  0E0A               	movlw	10
  8213  0039FC  0100               	movlb	0	; () banked
  8214  0039FE  6F97               	movwf	___lodiv@divisor& (0+255),b
  8215  003A00  0E00               	movlw	0
  8216  003A02  6F98               	movwf	(___lodiv@divisor+1)& (0+255),b
  8217  003A04  0E00               	movlw	0
  8218  003A06  6F99               	movwf	(___lodiv@divisor+2)& (0+255),b
  8219  003A08  0E00               	movlw	0
  8220  003A0A  6F9A               	movwf	(___lodiv@divisor+3)& (0+255),b
  8221  003A0C  0E00               	movlw	0
  8222  003A0E  6F9B               	movwf	(___lodiv@divisor+4)& (0+255),b
  8223  003A10  0E00               	movlw	0
  8224  003A12  6F9C               	movwf	(___lodiv@divisor+5)& (0+255),b
  8225  003A14  0E00               	movlw	0
  8226  003A16  6F9D               	movwf	(___lodiv@divisor+6)& (0+255),b
  8227  003A18  0E00               	movlw	0
  8228  003A1A  6F9E               	movwf	(___lodiv@divisor+7)& (0+255),b
  8229  003A1C  EC59  F029         	call	___lodiv	;wreg free
  8230  003A20  C08F  F116         	movff	?___lodiv,utoa@n
  8231  003A24  C090  F117         	movff	?___lodiv+1,utoa@n+1
  8232  003A28  C091  F118         	movff	?___lodiv+2,utoa@n+2
  8233  003A2C  C092  F119         	movff	?___lodiv+3,utoa@n+3
  8234  003A30  C093  F11A         	movff	?___lodiv+4,utoa@n+4
  8235  003A34  C094  F11B         	movff	?___lodiv+5,utoa@n+5
  8236  003A38  C095  F11C         	movff	?___lodiv+6,utoa@n+6
  8237  003A3C  C096  F11D         	movff	?___lodiv+7,utoa@n+7
  8238  003A40                     l8802:
  8239                           
  8240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8241  003A40  0101               	movlb	1	; () banked
  8242  003A42  511E               	movf	utoa@i& (0+255),w,b
  8243  003A44  111F               	iorwf	(utoa@i+1)& (0+255),w,b
  8244  003A46  B4D8               	btfsc	status,2,c
  8245  003A48  EF28  F01D         	goto	u11011
  8246  003A4C  EF2A  F01D         	goto	u11010
  8247  003A50                     u11011:
  8248  003A50  EF5B  F01D         	goto	l8812
  8249  003A54                     u11010:
  8250  003A54                     
  8251                           ; BSR set to: 1
  8252  003A54  5116               	movf	utoa@n& (0+255),w,b
  8253  003A56  1117               	iorwf	(utoa@n+1)& (0+255),w,b
  8254  003A58  1118               	iorwf	(utoa@n+2)& (0+255),w,b
  8255  003A5A  1119               	iorwf	(utoa@n+3)& (0+255),w,b
  8256  003A5C  111A               	iorwf	(utoa@n+4)& (0+255),w,b
  8257  003A5E  111B               	iorwf	(utoa@n+5)& (0+255),w,b
  8258  003A60  111C               	iorwf	(utoa@n+6)& (0+255),w,b
  8259  003A62  111D               	iorwf	(utoa@n+7)& (0+255),w,b
  8260  003A64  A4D8               	btfss	status,2,c
  8261  003A66  EF37  F01D         	goto	u11021
  8262  003A6A  EF39  F01D         	goto	u11020
  8263  003A6E                     u11021:
  8264  003A6E  EFA6  F01C         	goto	l8792
  8265  003A72                     u11020:
  8266  003A72                     
  8267                           ; BSR set to: 1
  8268  003A72  BF13               	btfsc	(utoa@p+1)& (0+255),7,b
  8269  003A74  EF46  F01D         	goto	u11030
  8270  003A78  5113               	movf	(utoa@p+1)& (0+255),w,b
  8271  003A7A  E106               	bnz	u11031
  8272  003A7C  0512               	decf	utoa@p& (0+255),w,b
  8273  003A7E  B0D8               	btfsc	status,0,c
  8274  003A80  EF44  F01D         	goto	u11031
  8275  003A84  EF46  F01D         	goto	u11030
  8276  003A88                     u11031:
  8277  003A88  EFA6  F01C         	goto	l8792
  8278  003A8C                     u11030:
  8279  003A8C                     
  8280                           ; BSR set to: 1
  8281  003A8C  BF15               	btfsc	(utoa@w+1)& (0+255),7,b
  8282  003A8E  EF51  F01D         	goto	u11041
  8283  003A92  5115               	movf	(utoa@w+1)& (0+255),w,b
  8284  003A94  E108               	bnz	u11040
  8285  003A96  0514               	decf	utoa@w& (0+255),w,b
  8286  003A98  A0D8               	btfss	status,0,c
  8287  003A9A  EF51  F01D         	goto	u11041
  8288  003A9E  EF53  F01D         	goto	u11040
  8289  003AA2                     u11041:
  8290  003AA2  EF5B  F01D         	goto	l8812
  8291  003AA6                     u11040:
  8292  003AA6                     
  8293                           ; BSR set to: 1
  8294  003AA6  0100               	movlb	0	; () banked
  8295  003AA8  B3B9               	btfsc	_flags& (0+255),1,b
  8296  003AAA  EF59  F01D         	goto	u11051
  8297  003AAE  EF5B  F01D         	goto	u11050
  8298  003AB2                     u11051:
  8299  003AB2  EFA6  F01C         	goto	l8792
  8300  003AB6                     u11050:
  8301  003AB6                     l8812:
  8302                           
  8303                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  8304  003AB6  C100  F0A1         	movff	utoa@fp,pad@fp
  8305  003ABA  C101  F0A2         	movff	utoa@fp+1,pad@fp+1
  8306  003ABE  0E89               	movlw	low _dbuf
  8307  003AC0  0101               	movlb	1	; () banked
  8308  003AC2  251E               	addwf	utoa@i& (0+255),w,b
  8309  003AC4  0100               	movlb	0	; () banked
  8310  003AC6  6FA3               	movwf	pad@buf& (0+255),b
  8311  003AC8  0E01               	movlw	high _dbuf
  8312  003ACA  0101               	movlb	1	; () banked
  8313  003ACC  211F               	addwfc	(utoa@i+1)& (0+255),w,b
  8314  003ACE  0100               	movlb	0	; () banked
  8315  003AD0  6FA4               	movwf	(pad@buf+1)& (0+255),b
  8316  003AD2  C114  F0A5         	movff	utoa@w,pad@p
  8317  003AD6  C115  F0A6         	movff	utoa@w+1,pad@p+1
  8318  003ADA  EC6C  F02C         	call	_pad	;wreg free
  8319  003ADE  C0A1  F100         	movff	?_pad,?_utoa
  8320  003AE2  C0A2  F101         	movff	?_pad+1,?_utoa+1
  8321  003AE6  0012               	return		;funcret
  8322  003AE8                     __end_of_utoa:
  8323                           	opt callstack 0
  8324                           
  8325 ;; *************** function ___lomod *****************
  8326 ;; Defined at:
  8327 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  8328 ;; Parameters:    Size  Location     Type
  8329 ;;  dividend        8   47[BANK0 ] unsigned long long 
  8330 ;;  divisor         8   55[BANK0 ] unsigned long long 
  8331 ;; Auto vars:     Size  Location     Type
  8332 ;;  counter         1   63[BANK0 ] unsigned char 
  8333 ;; Return value:  Size  Location     Type
  8334 ;;                  8   47[BANK0 ] unsigned long long 
  8335 ;; Registers used:
  8336 ;;		wreg, status,2, status,0
  8337 ;; Tracked objects:
  8338 ;;		On entry : 0/0
  8339 ;;		On exit  : 0/0
  8340 ;;		Unchanged: 0/0
  8341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8342 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8343 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8345 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8346 ;;Total ram usage:       17 bytes
  8347 ;; Hardware stack levels used:    1
  8348 ;; Hardware stack levels required when called:   13
  8349 ;; This function calls:
  8350 ;;		Nothing
  8351 ;; This function is called by:
  8352 ;;		_utoa
  8353 ;; This function uses a non-reentrant model
  8354 ;;
  8355                           
  8356                           	psect	text17
  8357  00566A                     __ptext17:
  8358                           	opt callstack 0
  8359  00566A                     ___lomod:
  8360                           	opt callstack 12
  8361  00566A  0100               	movlb	0	; () banked
  8362  00566C  5197               	movf	___lomod@divisor& (0+255),w,b
  8363  00566E  1198               	iorwf	(___lomod@divisor+1)& (0+255),w,b
  8364  005670  1199               	iorwf	(___lomod@divisor+2)& (0+255),w,b
  8365  005672  119A               	iorwf	(___lomod@divisor+3)& (0+255),w,b
  8366  005674  119B               	iorwf	(___lomod@divisor+4)& (0+255),w,b
  8367  005676  119C               	iorwf	(___lomod@divisor+5)& (0+255),w,b
  8368  005678  119D               	iorwf	(___lomod@divisor+6)& (0+255),w,b
  8369  00567A  119E               	iorwf	(___lomod@divisor+7)& (0+255),w,b
  8370  00567C  B4D8               	btfsc	status,2,c
  8371  00567E  EF43  F02B         	goto	u10011
  8372  005682  EF45  F02B         	goto	u10010
  8373  005686                     u10011:
  8374  005686  EF8D  F02B         	goto	l1374
  8375  00568A                     u10010:
  8376  00568A                     
  8377                           ; BSR set to: 0
  8378  00568A  0E01               	movlw	1
  8379  00568C  6F9F               	movwf	___lomod@counter& (0+255),b
  8380  00568E  EF53  F02B         	goto	l8210
  8381  005692                     l8208:
  8382                           
  8383                           ; BSR set to: 0
  8384  005692  90D8               	bcf	status,0,c
  8385  005694  3797               	rlcf	___lomod@divisor& (0+255),f,b
  8386  005696  3798               	rlcf	(___lomod@divisor+1)& (0+255),f,b
  8387  005698  3799               	rlcf	(___lomod@divisor+2)& (0+255),f,b
  8388  00569A  379A               	rlcf	(___lomod@divisor+3)& (0+255),f,b
  8389  00569C  379B               	rlcf	(___lomod@divisor+4)& (0+255),f,b
  8390  00569E  379C               	rlcf	(___lomod@divisor+5)& (0+255),f,b
  8391  0056A0  379D               	rlcf	(___lomod@divisor+6)& (0+255),f,b
  8392  0056A2  379E               	rlcf	(___lomod@divisor+7)& (0+255),f,b
  8393  0056A4  2B9F               	incf	___lomod@counter& (0+255),f,b
  8394  0056A6                     l8210:
  8395                           
  8396                           ; BSR set to: 0
  8397  0056A6  AF9E               	btfss	(___lomod@divisor+7)& (0+255),7,b
  8398  0056A8  EF58  F02B         	goto	u10021
  8399  0056AC  EF5A  F02B         	goto	u10020
  8400  0056B0                     u10021:
  8401  0056B0  EF49  F02B         	goto	l8208
  8402  0056B4                     u10020:
  8403  0056B4                     l8212:
  8404                           
  8405                           ; BSR set to: 0
  8406  0056B4  5197               	movf	___lomod@divisor& (0+255),w,b
  8407  0056B6  5D8F               	subwf	___lomod@dividend& (0+255),w,b
  8408  0056B8  5198               	movf	(___lomod@divisor+1)& (0+255),w,b
  8409  0056BA  5990               	subwfb	(___lomod@dividend+1)& (0+255),w,b
  8410  0056BC  5199               	movf	(___lomod@divisor+2)& (0+255),w,b
  8411  0056BE  5991               	subwfb	(___lomod@dividend+2)& (0+255),w,b
  8412  0056C0  519A               	movf	(___lomod@divisor+3)& (0+255),w,b
  8413  0056C2  5992               	subwfb	(___lomod@dividend+3)& (0+255),w,b
  8414  0056C4  519B               	movf	(___lomod@divisor+4)& (0+255),w,b
  8415  0056C6  5993               	subwfb	(___lomod@dividend+4)& (0+255),w,b
  8416  0056C8  519C               	movf	(___lomod@divisor+5)& (0+255),w,b
  8417  0056CA  5994               	subwfb	(___lomod@dividend+5)& (0+255),w,b
  8418  0056CC  519D               	movf	(___lomod@divisor+6)& (0+255),w,b
  8419  0056CE  5995               	subwfb	(___lomod@dividend+6)& (0+255),w,b
  8420  0056D0  519E               	movf	(___lomod@divisor+7)& (0+255),w,b
  8421  0056D2  5996               	subwfb	(___lomod@dividend+7)& (0+255),w,b
  8422  0056D4  A0D8               	btfss	status,0,c
  8423  0056D6  EF6F  F02B         	goto	u10031
  8424  0056DA  EF71  F02B         	goto	u10030
  8425  0056DE                     u10031:
  8426  0056DE  EF81  F02B         	goto	l8216
  8427  0056E2                     u10030:
  8428  0056E2                     
  8429                           ; BSR set to: 0
  8430  0056E2  5197               	movf	___lomod@divisor& (0+255),w,b
  8431  0056E4  5F8F               	subwf	___lomod@dividend& (0+255),f,b
  8432  0056E6  5198               	movf	(___lomod@divisor+1)& (0+255),w,b
  8433  0056E8  5B90               	subwfb	(___lomod@dividend+1)& (0+255),f,b
  8434  0056EA  5199               	movf	(___lomod@divisor+2)& (0+255),w,b
  8435  0056EC  5B91               	subwfb	(___lomod@dividend+2)& (0+255),f,b
  8436  0056EE  519A               	movf	(___lomod@divisor+3)& (0+255),w,b
  8437  0056F0  5B92               	subwfb	(___lomod@dividend+3)& (0+255),f,b
  8438  0056F2  519B               	movf	(___lomod@divisor+4)& (0+255),w,b
  8439  0056F4  5B93               	subwfb	(___lomod@dividend+4)& (0+255),f,b
  8440  0056F6  519C               	movf	(___lomod@divisor+5)& (0+255),w,b
  8441  0056F8  5B94               	subwfb	(___lomod@dividend+5)& (0+255),f,b
  8442  0056FA  519D               	movf	(___lomod@divisor+6)& (0+255),w,b
  8443  0056FC  5B95               	subwfb	(___lomod@dividend+6)& (0+255),f,b
  8444  0056FE  519E               	movf	(___lomod@divisor+7)& (0+255),w,b
  8445  005700  5B96               	subwfb	(___lomod@dividend+7)& (0+255),f,b
  8446  005702                     l8216:
  8447                           
  8448                           ; BSR set to: 0
  8449  005702  90D8               	bcf	status,0,c
  8450  005704  339E               	rrcf	(___lomod@divisor+7)& (0+255),f,b
  8451  005706  339D               	rrcf	(___lomod@divisor+6)& (0+255),f,b
  8452  005708  339C               	rrcf	(___lomod@divisor+5)& (0+255),f,b
  8453  00570A  339B               	rrcf	(___lomod@divisor+4)& (0+255),f,b
  8454  00570C  339A               	rrcf	(___lomod@divisor+3)& (0+255),f,b
  8455  00570E  3399               	rrcf	(___lomod@divisor+2)& (0+255),f,b
  8456  005710  3398               	rrcf	(___lomod@divisor+1)& (0+255),f,b
  8457  005712  3397               	rrcf	___lomod@divisor& (0+255),f,b
  8458  005714                     
  8459                           ; BSR set to: 0
  8460  005714  2F9F               	decfsz	___lomod@counter& (0+255),f,b
  8461  005716  EF5A  F02B         	goto	l8212
  8462  00571A                     l1374:
  8463                           
  8464                           ; BSR set to: 0
  8465  00571A  C08F  F08F         	movff	___lomod@dividend,?___lomod
  8466  00571E  C090  F090         	movff	___lomod@dividend+1,?___lomod+1
  8467  005722  C091  F091         	movff	___lomod@dividend+2,?___lomod+2
  8468  005726  C092  F092         	movff	___lomod@dividend+3,?___lomod+3
  8469  00572A  C093  F093         	movff	___lomod@dividend+4,?___lomod+4
  8470  00572E  C094  F094         	movff	___lomod@dividend+5,?___lomod+5
  8471  005732  C095  F095         	movff	___lomod@dividend+6,?___lomod+6
  8472  005736  C096  F096         	movff	___lomod@dividend+7,?___lomod+7
  8473  00573A                     
  8474                           ; BSR set to: 0
  8475  00573A  0012               	return		;funcret
  8476  00573C                     __end_of___lomod:
  8477                           	opt callstack 0
  8478                           
  8479 ;; *************** function ___lodiv *****************
  8480 ;; Defined at:
  8481 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  8482 ;; Parameters:    Size  Location     Type
  8483 ;;  dividend        8   47[BANK0 ] unsigned long long 
  8484 ;;  divisor         8   55[BANK0 ] unsigned long long 
  8485 ;; Auto vars:     Size  Location     Type
  8486 ;;  quotient        8   63[BANK0 ] unsigned long long 
  8487 ;;  counter         1   71[BANK0 ] unsigned char 
  8488 ;; Return value:  Size  Location     Type
  8489 ;;                  8   47[BANK0 ] unsigned long long 
  8490 ;; Registers used:
  8491 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8492 ;; Tracked objects:
  8493 ;;		On entry : 0/0
  8494 ;;		On exit  : 0/0
  8495 ;;		Unchanged: 0/0
  8496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8497 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8498 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8500 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8501 ;;Total ram usage:       25 bytes
  8502 ;; Hardware stack levels used:    1
  8503 ;; Hardware stack levels required when called:   13
  8504 ;; This function calls:
  8505 ;;		Nothing
  8506 ;; This function is called by:
  8507 ;;		_utoa
  8508 ;; This function uses a non-reentrant model
  8509 ;;
  8510                           
  8511                           	psect	text18
  8512  0052B2                     __ptext18:
  8513                           	opt callstack 0
  8514  0052B2                     ___lodiv:
  8515                           	opt callstack 12
  8516  0052B2  EE20  F09F         	lfsr	2,___lodiv@quotient
  8517  0052B6  0E07               	movlw	7
  8518  0052B8                     u9971:
  8519  0052B8  6ADE               	clrf	postinc2,c
  8520  0052BA  06E8               	decf	wreg,f,c
  8521  0052BC  E2FD               	bc	u9971
  8522  0052BE  0100               	movlb	0	; () banked
  8523  0052C0  5197               	movf	___lodiv@divisor& (0+255),w,b
  8524  0052C2  1198               	iorwf	(___lodiv@divisor+1)& (0+255),w,b
  8525  0052C4  1199               	iorwf	(___lodiv@divisor+2)& (0+255),w,b
  8526  0052C6  119A               	iorwf	(___lodiv@divisor+3)& (0+255),w,b
  8527  0052C8  119B               	iorwf	(___lodiv@divisor+4)& (0+255),w,b
  8528  0052CA  119C               	iorwf	(___lodiv@divisor+5)& (0+255),w,b
  8529  0052CC  119D               	iorwf	(___lodiv@divisor+6)& (0+255),w,b
  8530  0052CE  119E               	iorwf	(___lodiv@divisor+7)& (0+255),w,b
  8531  0052D0  B4D8               	btfsc	status,2,c
  8532  0052D2  EF6D  F029         	goto	u9981
  8533  0052D6  EF6F  F029         	goto	u9980
  8534  0052DA                     u9981:
  8535  0052DA  EFC1  F029         	goto	l1364
  8536  0052DE                     u9980:
  8537  0052DE                     
  8538                           ; BSR set to: 0
  8539  0052DE  0E01               	movlw	1
  8540  0052E0  6FA7               	movwf	___lodiv@counter& (0+255),b
  8541  0052E2  EF7D  F029         	goto	l8190
  8542  0052E6                     l8188:
  8543                           
  8544                           ; BSR set to: 0
  8545  0052E6  90D8               	bcf	status,0,c
  8546  0052E8  3797               	rlcf	___lodiv@divisor& (0+255),f,b
  8547  0052EA  3798               	rlcf	(___lodiv@divisor+1)& (0+255),f,b
  8548  0052EC  3799               	rlcf	(___lodiv@divisor+2)& (0+255),f,b
  8549  0052EE  379A               	rlcf	(___lodiv@divisor+3)& (0+255),f,b
  8550  0052F0  379B               	rlcf	(___lodiv@divisor+4)& (0+255),f,b
  8551  0052F2  379C               	rlcf	(___lodiv@divisor+5)& (0+255),f,b
  8552  0052F4  379D               	rlcf	(___lodiv@divisor+6)& (0+255),f,b
  8553  0052F6  379E               	rlcf	(___lodiv@divisor+7)& (0+255),f,b
  8554  0052F8  2BA7               	incf	___lodiv@counter& (0+255),f,b
  8555  0052FA                     l8190:
  8556                           
  8557                           ; BSR set to: 0
  8558  0052FA  AF9E               	btfss	(___lodiv@divisor+7)& (0+255),7,b
  8559  0052FC  EF82  F029         	goto	u9991
  8560  005300  EF84  F029         	goto	u9990
  8561  005304                     u9991:
  8562  005304  EF73  F029         	goto	l8188
  8563  005308                     u9990:
  8564  005308                     l8192:
  8565                           
  8566                           ; BSR set to: 0
  8567  005308  90D8               	bcf	status,0,c
  8568  00530A  379F               	rlcf	___lodiv@quotient& (0+255),f,b
  8569  00530C  37A0               	rlcf	(___lodiv@quotient+1)& (0+255),f,b
  8570  00530E  37A1               	rlcf	(___lodiv@quotient+2)& (0+255),f,b
  8571  005310  37A2               	rlcf	(___lodiv@quotient+3)& (0+255),f,b
  8572  005312  37A3               	rlcf	(___lodiv@quotient+4)& (0+255),f,b
  8573  005314  37A4               	rlcf	(___lodiv@quotient+5)& (0+255),f,b
  8574  005316  37A5               	rlcf	(___lodiv@quotient+6)& (0+255),f,b
  8575  005318  37A6               	rlcf	(___lodiv@quotient+7)& (0+255),f,b
  8576  00531A                     
  8577                           ; BSR set to: 0
  8578  00531A  5197               	movf	___lodiv@divisor& (0+255),w,b
  8579  00531C  5D8F               	subwf	___lodiv@dividend& (0+255),w,b
  8580  00531E  5198               	movf	(___lodiv@divisor+1)& (0+255),w,b
  8581  005320  5990               	subwfb	(___lodiv@dividend+1)& (0+255),w,b
  8582  005322  5199               	movf	(___lodiv@divisor+2)& (0+255),w,b
  8583  005324  5991               	subwfb	(___lodiv@dividend+2)& (0+255),w,b
  8584  005326  519A               	movf	(___lodiv@divisor+3)& (0+255),w,b
  8585  005328  5992               	subwfb	(___lodiv@dividend+3)& (0+255),w,b
  8586  00532A  519B               	movf	(___lodiv@divisor+4)& (0+255),w,b
  8587  00532C  5993               	subwfb	(___lodiv@dividend+4)& (0+255),w,b
  8588  00532E  519C               	movf	(___lodiv@divisor+5)& (0+255),w,b
  8589  005330  5994               	subwfb	(___lodiv@dividend+5)& (0+255),w,b
  8590  005332  519D               	movf	(___lodiv@divisor+6)& (0+255),w,b
  8591  005334  5995               	subwfb	(___lodiv@dividend+6)& (0+255),w,b
  8592  005336  519E               	movf	(___lodiv@divisor+7)& (0+255),w,b
  8593  005338  5996               	subwfb	(___lodiv@dividend+7)& (0+255),w,b
  8594  00533A  A0D8               	btfss	status,0,c
  8595  00533C  EFA2  F029         	goto	u10001
  8596  005340  EFA4  F029         	goto	u10000
  8597  005344                     u10001:
  8598  005344  EFB5  F029         	goto	l8200
  8599  005348                     u10000:
  8600  005348                     
  8601                           ; BSR set to: 0
  8602  005348  5197               	movf	___lodiv@divisor& (0+255),w,b
  8603  00534A  5F8F               	subwf	___lodiv@dividend& (0+255),f,b
  8604  00534C  5198               	movf	(___lodiv@divisor+1)& (0+255),w,b
  8605  00534E  5B90               	subwfb	(___lodiv@dividend+1)& (0+255),f,b
  8606  005350  5199               	movf	(___lodiv@divisor+2)& (0+255),w,b
  8607  005352  5B91               	subwfb	(___lodiv@dividend+2)& (0+255),f,b
  8608  005354  519A               	movf	(___lodiv@divisor+3)& (0+255),w,b
  8609  005356  5B92               	subwfb	(___lodiv@dividend+3)& (0+255),f,b
  8610  005358  519B               	movf	(___lodiv@divisor+4)& (0+255),w,b
  8611  00535A  5B93               	subwfb	(___lodiv@dividend+4)& (0+255),f,b
  8612  00535C  519C               	movf	(___lodiv@divisor+5)& (0+255),w,b
  8613  00535E  5B94               	subwfb	(___lodiv@dividend+5)& (0+255),f,b
  8614  005360  519D               	movf	(___lodiv@divisor+6)& (0+255),w,b
  8615  005362  5B95               	subwfb	(___lodiv@dividend+6)& (0+255),f,b
  8616  005364  519E               	movf	(___lodiv@divisor+7)& (0+255),w,b
  8617  005366  5B96               	subwfb	(___lodiv@dividend+7)& (0+255),f,b
  8618  005368                     
  8619                           ; BSR set to: 0
  8620  005368  819F               	bsf	___lodiv@quotient& (0+255),0,b
  8621  00536A                     l8200:
  8622                           
  8623                           ; BSR set to: 0
  8624  00536A  90D8               	bcf	status,0,c
  8625  00536C  339E               	rrcf	(___lodiv@divisor+7)& (0+255),f,b
  8626  00536E  339D               	rrcf	(___lodiv@divisor+6)& (0+255),f,b
  8627  005370  339C               	rrcf	(___lodiv@divisor+5)& (0+255),f,b
  8628  005372  339B               	rrcf	(___lodiv@divisor+4)& (0+255),f,b
  8629  005374  339A               	rrcf	(___lodiv@divisor+3)& (0+255),f,b
  8630  005376  3399               	rrcf	(___lodiv@divisor+2)& (0+255),f,b
  8631  005378  3398               	rrcf	(___lodiv@divisor+1)& (0+255),f,b
  8632  00537A  3397               	rrcf	___lodiv@divisor& (0+255),f,b
  8633  00537C                     
  8634                           ; BSR set to: 0
  8635  00537C  2FA7               	decfsz	___lodiv@counter& (0+255),f,b
  8636  00537E  EF84  F029         	goto	l8192
  8637  005382                     l1364:
  8638                           
  8639                           ; BSR set to: 0
  8640  005382  C09F  F08F         	movff	___lodiv@quotient,?___lodiv
  8641  005386  C0A0  F090         	movff	___lodiv@quotient+1,?___lodiv+1
  8642  00538A  C0A1  F091         	movff	___lodiv@quotient+2,?___lodiv+2
  8643  00538E  C0A2  F092         	movff	___lodiv@quotient+3,?___lodiv+3
  8644  005392  C0A3  F093         	movff	___lodiv@quotient+4,?___lodiv+4
  8645  005396  C0A4  F094         	movff	___lodiv@quotient+5,?___lodiv+5
  8646  00539A  C0A5  F095         	movff	___lodiv@quotient+6,?___lodiv+6
  8647  00539E  C0A6  F096         	movff	___lodiv@quotient+7,?___lodiv+7
  8648  0053A2                     
  8649                           ; BSR set to: 0
  8650  0053A2  0012               	return		;funcret
  8651  0053A4                     __end_of___lodiv:
  8652                           	opt callstack 0
  8653                           
  8654 ;; *************** function _strncmp *****************
  8655 ;; Defined at:
  8656 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  8657 ;; Parameters:    Size  Location     Type
  8658 ;;  _l              2   47[BANK0 ] PTR const unsigned char 
  8659 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
  8660 ;;		 -> STR_4(22), STR_3(12), STR_1(13), 
  8661 ;;  _r              2   49[BANK0 ] PTR const unsigned char 
  8662 ;;		 -> STR_105(3), STR_101(3), STR_96(3), STR_92(3), 
  8663 ;;		 -> STR_87(4), STR_83(4), STR_78(3), STR_73(3), 
  8664 ;;		 -> STR_68(4), STR_63(3), STR_58(3), STR_53(4), 
  8665 ;;		 -> STR_48(3), STR_43(3), STR_38(4), STR_33(3), 
  8666 ;;		 -> STR_29(3), STR_24(3), STR_20(3), STR_15(4), 
  8667 ;;		 -> STR_11(4), 
  8668 ;;  n               2   51[BANK0 ] unsigned int 
  8669 ;; Auto vars:     Size  Location     Type
  8670 ;;  r               2   56[BANK0 ] PTR const unsigned char 
  8671 ;;		 -> STR_105(3), STR_101(3), STR_96(3), STR_92(3), 
  8672 ;;		 -> STR_87(4), STR_83(4), STR_78(3), STR_73(3), 
  8673 ;;		 -> STR_68(4), STR_63(3), STR_58(3), STR_53(4), 
  8674 ;;		 -> STR_48(3), STR_43(3), STR_38(4), STR_33(3), 
  8675 ;;		 -> STR_29(3), STR_24(3), STR_20(3), STR_15(4), 
  8676 ;;		 -> STR_11(4), 
  8677 ;;  l               2   54[BANK0 ] PTR const unsigned char 
  8678 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
  8679 ;;		 -> STR_4(22), STR_3(12), STR_1(13), 
  8680 ;; Return value:  Size  Location     Type
  8681 ;;                  2   47[BANK0 ] int 
  8682 ;; Registers used:
  8683 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  8684 ;; Tracked objects:
  8685 ;;		On entry : 0/0
  8686 ;;		On exit  : 0/0
  8687 ;;		Unchanged: 0/0
  8688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8689 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8690 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8691 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8692 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8693 ;;Total ram usage:       11 bytes
  8694 ;; Hardware stack levels used:    1
  8695 ;; Hardware stack levels required when called:   13
  8696 ;; This function calls:
  8697 ;;		Nothing
  8698 ;; This function is called by:
  8699 ;;		_vfpfcnvrt
  8700 ;; This function uses a non-reentrant model
  8701 ;;
  8702                           
  8703                           	psect	text19
  8704  005494                     __ptext19:
  8705                           	opt callstack 0
  8706  005494                     _strncmp:
  8707                           	opt callstack 13
  8708  005494  C08F  F096         	movff	strncmp@_l,strncmp@l
  8709  005498  C090  F097         	movff	strncmp@_l+1,strncmp@l+1
  8710  00549C  C091  F098         	movff	strncmp@_r,strncmp@r
  8711  0054A0  C092  F099         	movff	strncmp@_r+1,strncmp@r+1
  8712  0054A4  0100               	movlb	0	; () banked
  8713  0054A6  0793               	decf	strncmp@n& (0+255),f,b
  8714  0054A8  A0D8               	btfss	status,0,c
  8715  0054AA  0794               	decf	(strncmp@n+1)& (0+255),f,b
  8716  0054AC  2993               	incf	strncmp@n& (0+255),w,b
  8717  0054AE  E106               	bnz	u11231
  8718  0054B0  2994               	incf	(strncmp@n+1)& (0+255),w,b
  8719  0054B2  A4D8               	btfss	status,2,c
  8720  0054B4  EF5E  F02A         	goto	u11231
  8721  0054B8  EF60  F02A         	goto	u11230
  8722  0054BC                     u11231:
  8723  0054BC  EF6D  F02A         	goto	l8890
  8724  0054C0                     u11230:
  8725  0054C0                     
  8726                           ; BSR set to: 0
  8727  0054C0  0E00               	movlw	0
  8728  0054C2  6F90               	movwf	(?_strncmp+1)& (0+255),b
  8729  0054C4  0E00               	movlw	0
  8730  0054C6  6F8F               	movwf	?_strncmp& (0+255),b
  8731  0054C8  EFBF  F02A         	goto	l1705
  8732  0054CC                     l8888:
  8733                           
  8734                           ; BSR set to: 0
  8735  0054CC  4B96               	infsnz	strncmp@l& (0+255),f,b
  8736  0054CE  2B97               	incf	(strncmp@l+1)& (0+255),f,b
  8737  0054D0  4B98               	infsnz	strncmp@r& (0+255),f,b
  8738  0054D2  2B99               	incf	(strncmp@r+1)& (0+255),f,b
  8739  0054D4  0793               	decf	strncmp@n& (0+255),f,b
  8740  0054D6  A0D8               	btfss	status,0,c
  8741  0054D8  0794               	decf	(strncmp@n+1)& (0+255),f,b
  8742  0054DA                     l8890:
  8743                           
  8744                           ; BSR set to: 0
  8745  0054DA  C096  FFF6         	movff	strncmp@l,tblptrl
  8746  0054DE  C097  FFF7         	movff	strncmp@l+1,tblptrh
  8747  0054E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8748  0054E2  6AF8               	clrf	tblptru,c
  8749  0054E4                     	endif
  8750  0054E4                     	if	0	;tblptru may be non-zero
  8751  0054E4                     	endif
  8752  0054E4  0008               	tblrd		*
  8753  0054E6  50F5               	movf	tablat,w,c
  8754  0054E8  0900               	iorlw	0
  8755  0054EA  B4D8               	btfsc	status,2,c
  8756  0054EC  EF7A  F02A         	goto	u11241
  8757  0054F0  EF7C  F02A         	goto	u11240
  8758  0054F4                     u11241:
  8759  0054F4  EFAB  F02A         	goto	l8898
  8760  0054F8                     u11240:
  8761  0054F8                     
  8762                           ; BSR set to: 0
  8763  0054F8  C098  FFF6         	movff	strncmp@r,tblptrl
  8764  0054FC  C099  FFF7         	movff	strncmp@r+1,tblptrh
  8765  005500                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8766  005500  6AF8               	clrf	tblptru,c
  8767  005502                     	endif
  8768  005502                     	if	0	;tblptru may be non-zero
  8769  005502                     	endif
  8770  005502  0008               	tblrd		*
  8771  005504  50F5               	movf	tablat,w,c
  8772  005506  0900               	iorlw	0
  8773  005508  B4D8               	btfsc	status,2,c
  8774  00550A  EF89  F02A         	goto	u11251
  8775  00550E  EF8B  F02A         	goto	u11250
  8776  005512                     u11251:
  8777  005512  EFAB  F02A         	goto	l8898
  8778  005516                     u11250:
  8779  005516                     
  8780                           ; BSR set to: 0
  8781  005516  5193               	movf	strncmp@n& (0+255),w,b
  8782  005518  1194               	iorwf	(strncmp@n+1)& (0+255),w,b
  8783  00551A  B4D8               	btfsc	status,2,c
  8784  00551C  EF92  F02A         	goto	u11261
  8785  005520  EF94  F02A         	goto	u11260
  8786  005524                     u11261:
  8787  005524  EFAB  F02A         	goto	l8898
  8788  005528                     u11260:
  8789  005528                     
  8790                           ; BSR set to: 0
  8791  005528  C096  FFF6         	movff	strncmp@l,tblptrl
  8792  00552C  C097  FFF7         	movff	strncmp@l+1,tblptrh
  8793  005530                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8794  005530  6AF8               	clrf	tblptru,c
  8795  005532                     	endif
  8796  005532                     	if	0	;tblptru may be non-zero
  8797  005532                     	endif
  8798  005532  0008               	tblrd		*
  8799  005534  CFF5 F095          	movff	tablat,??_strncmp
  8800  005538  C098  FFF6         	movff	strncmp@r,tblptrl
  8801  00553C  C099  FFF7         	movff	strncmp@r+1,tblptrh
  8802  005540                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8803  005540  6AF8               	clrf	tblptru,c
  8804  005542                     	endif
  8805  005542                     	if	0	;tblptru may be non-zero
  8806  005542                     	endif
  8807  005542  0008               	tblrd		*
  8808  005544  50F5               	movf	tablat,w,c
  8809  005546  1995               	xorwf	??_strncmp& (0+255),w,b
  8810  005548  B4D8               	btfsc	status,2,c
  8811  00554A  EFA9  F02A         	goto	u11271
  8812  00554E  EFAB  F02A         	goto	u11270
  8813  005552                     u11271:
  8814  005552  EF66  F02A         	goto	l8888
  8815  005556                     u11270:
  8816  005556                     l8898:
  8817                           
  8818                           ; BSR set to: 0
  8819  005556  C096  FFF6         	movff	strncmp@l,tblptrl
  8820  00555A  C097  FFF7         	movff	strncmp@l+1,tblptrh
  8821  00555E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8822  00555E  6AF8               	clrf	tblptru,c
  8823  005560                     	endif
  8824  005560                     	if	0	;tblptru may be non-zero
  8825  005560                     	endif
  8826  005560  0008               	tblrd		*
  8827  005562  CFF5 F095          	movff	tablat,??_strncmp
  8828  005566  C098  FFF6         	movff	strncmp@r,tblptrl
  8829  00556A  C099  FFF7         	movff	strncmp@r+1,tblptrh
  8830  00556E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8831  00556E  6AF8               	clrf	tblptru,c
  8832  005570                     	endif
  8833  005570                     	if	0	;tblptru may be non-zero
  8834  005570                     	endif
  8835  005570  0008               	tblrd		*
  8836  005572  50F5               	movf	tablat,w,c
  8837  005574  5D95               	subwf	??_strncmp& (0+255),w,b
  8838  005576  6F8F               	movwf	?_strncmp& (0+255),b
  8839  005578  6B90               	clrf	(?_strncmp+1)& (0+255),b
  8840  00557A  A0D8               	btfss	status,0,c
  8841  00557C  0790               	decf	(?_strncmp+1)& (0+255),f,b
  8842  00557E                     l1705:
  8843                           
  8844                           ; BSR set to: 0
  8845  00557E  0012               	return		;funcret
  8846  005580                     __end_of_strncmp:
  8847                           	opt callstack 0
  8848                           
  8849 ;; *************** function _stoa *****************
  8850 ;; Defined at:
  8851 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8852 ;; Parameters:    Size  Location     Type
  8853 ;;  fp              2   58[BANK0 ] PTR struct _IO_FILE
  8854 ;;		 -> vsnprintf@f(6), NULL(0), 
  8855 ;;  s               2   60[BANK0 ] PTR unsigned char 
  8856 ;;		 -> ?_snprintf(2), ?_printf(2), 
  8857 ;; Auto vars:     Size  Location     Type
  8858 ;;  nuls            7   63[BANK0 ] unsigned char [7]
  8859 ;;  l               2   78[BANK0 ] int 
  8860 ;;  p               2   76[BANK0 ] int 
  8861 ;;  cp              2   74[BANK0 ] PTR unsigned char 
  8862 ;;		 -> ?_snprintf(2), ?_printf(2), stoa@nuls(7), 
  8863 ;;  w               2   72[BANK0 ] int 
  8864 ;;  i               2   70[BANK0 ] int 
  8865 ;; Return value:  Size  Location     Type
  8866 ;;                  2   58[BANK0 ] int 
  8867 ;; Registers used:
  8868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8869 ;; Tracked objects:
  8870 ;;		On entry : 0/0
  8871 ;;		On exit  : 0/0
  8872 ;;		Unchanged: 0/0
  8873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8874 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8875 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8876 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8877 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8878 ;;Total ram usage:       22 bytes
  8879 ;; Hardware stack levels used:    1
  8880 ;; Hardware stack levels required when called:   16
  8881 ;; This function calls:
  8882 ;;		_fputc
  8883 ;;		_strlen
  8884 ;; This function is called by:
  8885 ;;		_vfpfcnvrt
  8886 ;; This function uses a non-reentrant model
  8887 ;;
  8888                           
  8889                           	psect	text20
  8890  0044EC                     __ptext20:
  8891                           	opt callstack 0
  8892  0044EC                     _stoa:
  8893                           	opt callstack 10
  8894  0044EC                     
  8895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8896  0044EC  EE20  F0CA         	lfsr	2,stoa@F1152
  8897  0044F0  EE10  F09F         	lfsr	1,stoa@nuls
  8898  0044F4  0E06               	movlw	6
  8899  0044F6                     u10901:
  8900  0044F6  CFDB FFE3          	movff	plusw2,plusw1
  8901  0044FA  06E8               	decf	wreg,f,c
  8902  0044FC  E2FC               	bc	u10901
  8903  0044FE                     
  8904                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  8905  0044FE  C09C  F0AA         	movff	stoa@s,stoa@cp
  8906  004502  C09D  F0AB         	movff	stoa@s+1,stoa@cp+1
  8907  004506                     
  8908                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  8909  004506  0100               	movlb	0	; () banked
  8910  004508  51AA               	movf	stoa@cp& (0+255),w,b
  8911  00450A  11AB               	iorwf	(stoa@cp+1)& (0+255),w,b
  8912  00450C  A4D8               	btfss	status,2,c
  8913  00450E  EF8B  F022         	goto	u10911
  8914  004512  EF8D  F022         	goto	u10910
  8915  004516                     u10911:
  8916  004516  EF91  F022         	goto	l8746
  8917  00451A                     u10910:
  8918  00451A                     
  8919                           ; BSR set to: 0
  8920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  8921  00451A  0E9F               	movlw	low stoa@nuls
  8922  00451C  6FAA               	movwf	stoa@cp& (0+255),b
  8923  00451E  0E00               	movlw	high stoa@nuls
  8924  004520  6FAB               	movwf	(stoa@cp+1)& (0+255),b
  8925  004522                     l8746:
  8926                           
  8927                           ; BSR set to: 0
  8928                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  8929  004522  C0AA  F08F         	movff	stoa@cp,strlen@s
  8930  004526  C0AB  F090         	movff	stoa@cp+1,strlen@s+1
  8931  00452A  EC93  F032         	call	_strlen	;wreg free
  8932  00452E  C08F  F0AE         	movff	?_strlen,stoa@l
  8933  004532  C090  F0AF         	movff	?_strlen+1,stoa@l+1
  8934  004536                     
  8935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8936  004536  C0B7  F0AC         	movff	_prec,stoa@p
  8937  00453A  C0B8  F0AD         	movff	_prec+1,stoa@p+1
  8938  00453E                     
  8939                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8940  00453E  0100               	movlb	0	; () banked
  8941  004540  BFAD               	btfsc	(stoa@p+1)& (0+255),7,b
  8942  004542  EFA5  F022         	goto	u10921
  8943  004546  EFA7  F022         	goto	u10920
  8944  00454A                     u10921:
  8945  00454A  EFBC  F022         	goto	l782
  8946  00454E                     u10920:
  8947  00454E                     
  8948                           ; BSR set to: 0
  8949  00454E  51AE               	movf	stoa@l& (0+255),w,b
  8950  004550  5DAC               	subwf	stoa@p& (0+255),w,b
  8951  004552  51AD               	movf	(stoa@p+1)& (0+255),w,b
  8952  004554  0A80               	xorlw	128
  8953  004556  6F9E               	movwf	??_stoa& (0+255),b
  8954  004558  51AF               	movf	(stoa@l+1)& (0+255),w,b
  8955  00455A  0A80               	xorlw	128
  8956  00455C  599E               	subwfb	??_stoa& (0+255),w,b
  8957  00455E  A0D8               	btfss	status,0,c
  8958  004560  EFB4  F022         	goto	u10931
  8959  004564  EFB6  F022         	goto	u10930
  8960  004568                     u10931:
  8961  004568  EFB8  F022         	goto	l780
  8962  00456C                     u10930:
  8963  00456C  EFBC  F022         	goto	l782
  8964  004570                     l780:
  8965                           
  8966                           ; BSR set to: 0
  8967  004570  C0AC  F0AE         	movff	stoa@p,stoa@l
  8968  004574  C0AD  F0AF         	movff	stoa@p+1,stoa@l+1
  8969  004578                     l782:
  8970                           
  8971                           ; BSR set to: 0
  8972                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8973  004578  C0AE  F0AC         	movff	stoa@l,stoa@p
  8974  00457C  C0AF  F0AD         	movff	stoa@l+1,stoa@p+1
  8975                           
  8976                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8977  004580  C0B5  F0A8         	movff	_width,stoa@w
  8978  004584  C0B6  F0A9         	movff	_width+1,stoa@w+1
  8979                           
  8980                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8981  004588  B1B9               	btfsc	_flags& (0+255),0,b
  8982  00458A  EFC9  F022         	goto	u10941
  8983  00458E  EFCB  F022         	goto	u10940
  8984  004592                     u10941:
  8985  004592  EFE9  F022         	goto	l8762
  8986  004596                     u10940:
  8987  004596  EFDA  F022         	goto	l8760
  8988  00459A                     l8756:
  8989                           
  8990                           ; BSR set to: 0
  8991                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8992  00459A  0E00               	movlw	0
  8993  00459C  6F92               	movwf	(fputc@c+1)& (0+255),b
  8994  00459E  0E20               	movlw	32
  8995  0045A0  6F91               	movwf	fputc@c& (0+255),b
  8996  0045A2  C09A  F093         	movff	stoa@fp,fputc@fp
  8997  0045A6  C09B  F094         	movff	stoa@fp+1,fputc@fp+1
  8998  0045AA  EC06  F02C         	call	_fputc	;wreg free
  8999  0045AE                     
  9000                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  9001  0045AE  0100               	movlb	0	; () banked
  9002  0045B0  4BAE               	infsnz	stoa@l& (0+255),f,b
  9003  0045B2  2BAF               	incf	(stoa@l+1)& (0+255),f,b
  9004  0045B4                     l8760:
  9005                           
  9006                           ; BSR set to: 0
  9007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  9008  0045B4  51A8               	movf	stoa@w& (0+255),w,b
  9009  0045B6  5DAE               	subwf	stoa@l& (0+255),w,b
  9010  0045B8  51AF               	movf	(stoa@l+1)& (0+255),w,b
  9011  0045BA  0A80               	xorlw	128
  9012  0045BC  6F9E               	movwf	??_stoa& (0+255),b
  9013  0045BE  51A9               	movf	(stoa@w+1)& (0+255),w,b
  9014  0045C0  0A80               	xorlw	128
  9015  0045C2  599E               	subwfb	??_stoa& (0+255),w,b
  9016  0045C4  A0D8               	btfss	status,0,c
  9017  0045C6  EFE7  F022         	goto	u10951
  9018  0045CA  EFE9  F022         	goto	u10950
  9019  0045CE                     u10951:
  9020  0045CE  EFCD  F022         	goto	l8756
  9021  0045D2                     u10950:
  9022  0045D2                     l8762:
  9023                           
  9024                           ; BSR set to: 0
  9025                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  9026  0045D2  0E00               	movlw	0
  9027  0045D4  6FA7               	movwf	(stoa@i+1)& (0+255),b
  9028  0045D6  0E00               	movlw	0
  9029  0045D8  6FA6               	movwf	stoa@i& (0+255),b
  9030                           
  9031                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  9032  0045DA  EF03  F023         	goto	l8770
  9033  0045DE                     l8764:
  9034                           
  9035                           ; BSR set to: 0
  9036                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  9037  0045DE  C0AA  FFD9         	movff	stoa@cp,fsr2l
  9038  0045E2  C0AB  FFDA         	movff	stoa@cp+1,fsr2h
  9039  0045E6  50DF               	movf	indf2,w,c
  9040  0045E8  6F9E               	movwf	??_stoa& (0+255),b
  9041  0045EA  519E               	movf	??_stoa& (0+255),w,b
  9042  0045EC  6F91               	movwf	fputc@c& (0+255),b
  9043  0045EE  6B92               	clrf	(fputc@c+1)& (0+255),b
  9044  0045F0  C09A  F093         	movff	stoa@fp,fputc@fp
  9045  0045F4  C09B  F094         	movff	stoa@fp+1,fputc@fp+1
  9046  0045F8  EC06  F02C         	call	_fputc	;wreg free
  9047  0045FC                     
  9048                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  9049  0045FC  0100               	movlb	0	; () banked
  9050  0045FE  4BAA               	infsnz	stoa@cp& (0+255),f,b
  9051  004600  2BAB               	incf	(stoa@cp+1)& (0+255),f,b
  9052  004602                     
  9053                           ; BSR set to: 0
  9054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  9055  004602  4BA6               	infsnz	stoa@i& (0+255),f,b
  9056  004604  2BA7               	incf	(stoa@i+1)& (0+255),f,b
  9057  004606                     l8770:
  9058                           
  9059                           ; BSR set to: 0
  9060                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  9061  004606  51AC               	movf	stoa@p& (0+255),w,b
  9062  004608  5DA6               	subwf	stoa@i& (0+255),w,b
  9063  00460A  51A7               	movf	(stoa@i+1)& (0+255),w,b
  9064  00460C  0A80               	xorlw	128
  9065  00460E  6F9E               	movwf	??_stoa& (0+255),b
  9066  004610  51AD               	movf	(stoa@p+1)& (0+255),w,b
  9067  004612  0A80               	xorlw	128
  9068  004614  599E               	subwfb	??_stoa& (0+255),w,b
  9069  004616  A0D8               	btfss	status,0,c
  9070  004618  EF10  F023         	goto	u10961
  9071  00461C  EF12  F023         	goto	u10960
  9072  004620                     u10961:
  9073  004620  EFEF  F022         	goto	l8764
  9074  004624                     u10960:
  9075  004624                     
  9076                           ; BSR set to: 0
  9077                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  9078  004624  A1B9               	btfss	_flags& (0+255),0,b
  9079  004626  EF17  F023         	goto	u10971
  9080  00462A  EF19  F023         	goto	u10970
  9081  00462E                     u10971:
  9082  00462E  EF37  F023         	goto	l792
  9083  004632                     u10970:
  9084  004632  EF28  F023         	goto	l8778
  9085  004636                     l8774:
  9086                           
  9087                           ; BSR set to: 0
  9088                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  9089  004636  0E00               	movlw	0
  9090  004638  6F92               	movwf	(fputc@c+1)& (0+255),b
  9091  00463A  0E20               	movlw	32
  9092  00463C  6F91               	movwf	fputc@c& (0+255),b
  9093  00463E  C09A  F093         	movff	stoa@fp,fputc@fp
  9094  004642  C09B  F094         	movff	stoa@fp+1,fputc@fp+1
  9095  004646  EC06  F02C         	call	_fputc	;wreg free
  9096  00464A                     
  9097                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  9098  00464A  0100               	movlb	0	; () banked
  9099  00464C  4BAE               	infsnz	stoa@l& (0+255),f,b
  9100  00464E  2BAF               	incf	(stoa@l+1)& (0+255),f,b
  9101  004650                     l8778:
  9102                           
  9103                           ; BSR set to: 0
  9104                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  9105  004650  51A8               	movf	stoa@w& (0+255),w,b
  9106  004652  5DAE               	subwf	stoa@l& (0+255),w,b
  9107  004654  51AF               	movf	(stoa@l+1)& (0+255),w,b
  9108  004656  0A80               	xorlw	128
  9109  004658  6F9E               	movwf	??_stoa& (0+255),b
  9110  00465A  51A9               	movf	(stoa@w+1)& (0+255),w,b
  9111  00465C  0A80               	xorlw	128
  9112  00465E  599E               	subwfb	??_stoa& (0+255),w,b
  9113  004660  A0D8               	btfss	status,0,c
  9114  004662  EF35  F023         	goto	u10981
  9115  004666  EF37  F023         	goto	u10980
  9116  00466A                     u10981:
  9117  00466A  EF1B  F023         	goto	l8774
  9118  00466E                     u10980:
  9119  00466E                     l792:
  9120                           
  9121                           ; BSR set to: 0
  9122                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  9123  00466E  C0AE  F09A         	movff	stoa@l,?_stoa
  9124  004672  C0AF  F09B         	movff	stoa@l+1,?_stoa+1
  9125  004676                     
  9126                           ; BSR set to: 0
  9127  004676  0012               	return		;funcret
  9128  004678                     __end_of_stoa:
  9129                           	opt callstack 0
  9130                           
  9131 ;; *************** function _otoa *****************
  9132 ;; Defined at:
  9133 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9134 ;; Parameters:    Size  Location     Type
  9135 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  9136 ;;		 -> vsnprintf@f(6), NULL(0), 
  9137 ;;  d               8    2[BANK1 ] unsigned long long 
  9138 ;; Auto vars:     Size  Location     Type
  9139 ;;  n               8   24[BANK1 ] unsigned long long 
  9140 ;;  i               2   32[BANK1 ] int 
  9141 ;;  w               2   22[BANK1 ] int 
  9142 ;;  t               2   20[BANK1 ] int 
  9143 ;;  p               2   18[BANK1 ] int 
  9144 ;; Return value:  Size  Location     Type
  9145 ;;                  2    0[BANK1 ] int 
  9146 ;; Registers used:
  9147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9148 ;; Tracked objects:
  9149 ;;		On entry : 0/0
  9150 ;;		On exit  : 0/0
  9151 ;;		Unchanged: 0/0
  9152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9153 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9154 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9155 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9156 ;;      Totals:         0       0      34       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9157 ;;Total ram usage:       34 bytes
  9158 ;; Hardware stack levels used:    1
  9159 ;; Hardware stack levels required when called:   18
  9160 ;; This function calls:
  9161 ;;		_pad
  9162 ;; This function is called by:
  9163 ;;		_vfpfcnvrt
  9164 ;; This function uses a non-reentrant model
  9165 ;;
  9166                           
  9167                           	psect	text21
  9168  0040FE                     __ptext21:
  9169                           	opt callstack 0
  9170  0040FE                     _otoa:
  9171                           	opt callstack 8
  9172  0040FE                     
  9173                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  9174  0040FE  0100               	movlb	0	; () banked
  9175  004100  BFB8               	btfsc	(_prec+1)& (0+255),7,b
  9176  004102  EF85  F020         	goto	u10801
  9177  004106  EF87  F020         	goto	u10800
  9178  00410A                     u10801:
  9179  00410A  EF88  F020         	goto	l8694
  9180  00410E                     u10800:
  9181  00410E                     
  9182                           ; BSR set to: 0
  9183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  9184  00410E  93B9               	bcf	_flags& (0+255),1,b
  9185  004110                     l8694:
  9186                           
  9187                           ; BSR set to: 0
  9188                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  9189  004110  BFB8               	btfsc	(_prec+1)& (0+255),7,b
  9190  004112  EF95  F020         	goto	u10810
  9191  004116  51B8               	movf	(_prec+1)& (0+255),w,b
  9192  004118  E106               	bnz	u10811
  9193  00411A  05B7               	decf	_prec& (0+255),w,b
  9194  00411C  B0D8               	btfsc	status,0,c
  9195  00411E  EF93  F020         	goto	u10811
  9196  004122  EF95  F020         	goto	u10810
  9197  004126                     u10811:
  9198  004126  EF9C  F020         	goto	l762
  9199  00412A                     u10810:
  9200  00412A                     
  9201                           ; BSR set to: 0
  9202  00412A  0E00               	movlw	0
  9203  00412C  0101               	movlb	1	; () banked
  9204  00412E  6F13               	movwf	(otoa@p+1)& (0+255),b
  9205  004130  0E01               	movlw	1
  9206  004132  6F12               	movwf	otoa@p& (0+255),b
  9207  004134  EFA0  F020         	goto	l764
  9208  004138                     l762:
  9209                           
  9210                           ; BSR set to: 0
  9211  004138  C0B7  F112         	movff	_prec,otoa@p
  9212  00413C  C0B8  F113         	movff	_prec+1,otoa@p+1
  9213  004140                     l764:
  9214                           
  9215                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  9216  004140  C0B5  F116         	movff	_width,otoa@w
  9217  004144  C0B6  F117         	movff	_width+1,otoa@w+1
  9218                           
  9219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  9220  004148  C102  F118         	movff	otoa@d,otoa@n
  9221  00414C  C103  F119         	movff	otoa@d+1,otoa@n+1
  9222  004150  C104  F11A         	movff	otoa@d+2,otoa@n+2
  9223  004154  C105  F11B         	movff	otoa@d+3,otoa@n+3
  9224  004158  C106  F11C         	movff	otoa@d+4,otoa@n+4
  9225  00415C  C107  F11D         	movff	otoa@d+5,otoa@n+5
  9226  004160  C108  F11E         	movff	otoa@d+6,otoa@n+6
  9227  004164  C109  F11F         	movff	otoa@d+7,otoa@n+7
  9228  004168                     
  9229                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  9230  004168  0E00               	movlw	0
  9231  00416A  0101               	movlb	1	; () banked
  9232  00416C  6F21               	movwf	(otoa@i+1)& (0+255),b
  9233  00416E  0E1F               	movlw	31
  9234  004170  6F20               	movwf	otoa@i& (0+255),b
  9235  004172                     
  9236                           ; BSR set to: 1
  9237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  9238  004172  0E00               	movlw	0
  9239  004174  6FA8               	movwf	(_dbuf+31)& (0+255),b
  9240  004176                     
  9241                           ; BSR set to: 1
  9242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  9243  004176  0E00               	movlw	0
  9244  004178  6F15               	movwf	(otoa@t+1)& (0+255),b
  9245  00417A  0E00               	movlw	0
  9246  00417C  6F14               	movwf	otoa@t& (0+255),b
  9247                           
  9248                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9249  00417E  EF07  F021         	goto	l8716
  9250  004182                     l8704:
  9251                           
  9252                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  9253  004182  0101               	movlb	1	; () banked
  9254  004184  0720               	decf	otoa@i& (0+255),f,b
  9255  004186  A0D8               	btfss	status,0,c
  9256  004188  0721               	decf	(otoa@i+1)& (0+255),f,b
  9257  00418A                     
  9258                           ; BSR set to: 1
  9259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  9260  00418A  0E07               	movlw	7
  9261  00418C  1518               	andwf	otoa@n& (0+255),w,b
  9262  00418E  6F14               	movwf	otoa@t& (0+255),b
  9263  004190  6B15               	clrf	(otoa@t+1)& (0+255),b
  9264  004192                     
  9265                           ; BSR set to: 1
  9266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  9267  004192  0E89               	movlw	low _dbuf
  9268  004194  2520               	addwf	otoa@i& (0+255),w,b
  9269  004196  6ED9               	movwf	fsr2l,c
  9270  004198  0E01               	movlw	high _dbuf
  9271  00419A  2121               	addwfc	(otoa@i+1)& (0+255),w,b
  9272  00419C  6EDA               	movwf	fsr2h,c
  9273  00419E  5114               	movf	otoa@t& (0+255),w,b
  9274  0041A0  0F30               	addlw	48
  9275  0041A2  6EDF               	movwf	indf2,c
  9276  0041A4                     
  9277                           ; BSR set to: 1
  9278                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  9279  0041A4  0712               	decf	otoa@p& (0+255),f,b
  9280  0041A6  A0D8               	btfss	status,0,c
  9281  0041A8  0713               	decf	(otoa@p+1)& (0+255),f,b
  9282  0041AA                     
  9283                           ; BSR set to: 1
  9284                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  9285  0041AA  0716               	decf	otoa@w& (0+255),f,b
  9286  0041AC  A0D8               	btfss	status,0,c
  9287  0041AE  0717               	decf	(otoa@w+1)& (0+255),f,b
  9288  0041B0                     
  9289                           ; BSR set to: 1
  9290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  9291  0041B0  C118  F10A         	movff	otoa@n,??_otoa
  9292  0041B4  C119  F10B         	movff	otoa@n+1,??_otoa+1
  9293  0041B8  C11A  F10C         	movff	otoa@n+2,??_otoa+2
  9294  0041BC  C11B  F10D         	movff	otoa@n+3,??_otoa+3
  9295  0041C0  C11C  F10E         	movff	otoa@n+4,??_otoa+4
  9296  0041C4  C11D  F10F         	movff	otoa@n+5,??_otoa+5
  9297  0041C8  C11E  F110         	movff	otoa@n+6,??_otoa+6
  9298  0041CC  C11F  F111         	movff	otoa@n+7,??_otoa+7
  9299  0041D0  0E04               	movlw	4
  9300  0041D2  EFF4  F020         	goto	u10820
  9301  0041D6                     u10825:
  9302  0041D6  90D8               	bcf	status,0,c
  9303  0041D8  3311               	rrcf	(??_otoa+7)& (0+255),f,b
  9304  0041DA  3310               	rrcf	(??_otoa+6)& (0+255),f,b
  9305  0041DC  330F               	rrcf	(??_otoa+5)& (0+255),f,b
  9306  0041DE  330E               	rrcf	(??_otoa+4)& (0+255),f,b
  9307  0041E0  330D               	rrcf	(??_otoa+3)& (0+255),f,b
  9308  0041E2  330C               	rrcf	(??_otoa+2)& (0+255),f,b
  9309  0041E4  330B               	rrcf	(??_otoa+1)& (0+255),f,b
  9310  0041E6  330A               	rrcf	??_otoa& (0+255),f,b
  9311  0041E8                     u10820:
  9312  0041E8  2EE8               	decfsz	wreg,f,c
  9313  0041EA  EFEB  F020         	goto	u10825
  9314  0041EE  C10A  F118         	movff	??_otoa,otoa@n
  9315  0041F2  C10B  F119         	movff	??_otoa+1,otoa@n+1
  9316  0041F6  C10C  F11A         	movff	??_otoa+2,otoa@n+2
  9317  0041FA  C10D  F11B         	movff	??_otoa+3,otoa@n+3
  9318  0041FE  C10E  F11C         	movff	??_otoa+4,otoa@n+4
  9319  004202  C10F  F11D         	movff	??_otoa+5,otoa@n+5
  9320  004206  C110  F11E         	movff	??_otoa+6,otoa@n+6
  9321  00420A  C111  F11F         	movff	??_otoa+7,otoa@n+7
  9322  00420E                     l8716:
  9323                           
  9324                           ; BSR set to: 1
  9325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9326  00420E  BF21               	btfsc	(otoa@i+1)& (0+255),7,b
  9327  004210  EF12  F021         	goto	u10831
  9328  004214  5121               	movf	(otoa@i+1)& (0+255),w,b
  9329  004216  E108               	bnz	u10830
  9330  004218  0520               	decf	otoa@i& (0+255),w,b
  9331  00421A  A0D8               	btfss	status,0,c
  9332  00421C  EF12  F021         	goto	u10831
  9333  004220  EF14  F021         	goto	u10830
  9334  004224                     u10831:
  9335  004224  EF45  F021         	goto	l771
  9336  004228                     u10830:
  9337  004228                     
  9338                           ; BSR set to: 1
  9339  004228  5118               	movf	otoa@n& (0+255),w,b
  9340  00422A  1119               	iorwf	(otoa@n+1)& (0+255),w,b
  9341  00422C  111A               	iorwf	(otoa@n+2)& (0+255),w,b
  9342  00422E  111B               	iorwf	(otoa@n+3)& (0+255),w,b
  9343  004230  111C               	iorwf	(otoa@n+4)& (0+255),w,b
  9344  004232  111D               	iorwf	(otoa@n+5)& (0+255),w,b
  9345  004234  111E               	iorwf	(otoa@n+6)& (0+255),w,b
  9346  004236  111F               	iorwf	(otoa@n+7)& (0+255),w,b
  9347  004238  A4D8               	btfss	status,2,c
  9348  00423A  EF21  F021         	goto	u10841
  9349  00423E  EF23  F021         	goto	u10840
  9350  004242                     u10841:
  9351  004242  EFC1  F020         	goto	l8704
  9352  004246                     u10840:
  9353  004246                     
  9354                           ; BSR set to: 1
  9355  004246  BF13               	btfsc	(otoa@p+1)& (0+255),7,b
  9356  004248  EF30  F021         	goto	u10850
  9357  00424C  5113               	movf	(otoa@p+1)& (0+255),w,b
  9358  00424E  E106               	bnz	u10851
  9359  004250  0512               	decf	otoa@p& (0+255),w,b
  9360  004252  B0D8               	btfsc	status,0,c
  9361  004254  EF2E  F021         	goto	u10851
  9362  004258  EF30  F021         	goto	u10850
  9363  00425C                     u10851:
  9364  00425C  EFC1  F020         	goto	l8704
  9365  004260                     u10850:
  9366  004260                     
  9367                           ; BSR set to: 1
  9368  004260  BF17               	btfsc	(otoa@w+1)& (0+255),7,b
  9369  004262  EF3B  F021         	goto	u10861
  9370  004266  5117               	movf	(otoa@w+1)& (0+255),w,b
  9371  004268  E108               	bnz	u10860
  9372  00426A  0516               	decf	otoa@w& (0+255),w,b
  9373  00426C  A0D8               	btfss	status,0,c
  9374  00426E  EF3B  F021         	goto	u10861
  9375  004272  EF3D  F021         	goto	u10860
  9376  004276                     u10861:
  9377  004276  EF45  F021         	goto	l771
  9378  00427A                     u10860:
  9379  00427A                     
  9380                           ; BSR set to: 1
  9381  00427A  0100               	movlb	0	; () banked
  9382  00427C  B3B9               	btfsc	_flags& (0+255),1,b
  9383  00427E  EF43  F021         	goto	u10871
  9384  004282  EF45  F021         	goto	u10870
  9385  004286                     u10871:
  9386  004286  EFC1  F020         	goto	l8704
  9387  00428A                     u10870:
  9388  00428A                     l771:
  9389                           
  9390                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  9391  00428A  0100               	movlb	0	; () banked
  9392  00428C  A9B9               	btfss	_flags& (0+255),4,b
  9393  00428E  EF4B  F021         	goto	u10881
  9394  004292  EF4D  F021         	goto	u10880
  9395  004296                     u10881:
  9396  004296  EF65  F021         	goto	l8734
  9397  00429A                     u10880:
  9398  00429A                     
  9399                           ; BSR set to: 0
  9400  00429A  0101               	movlb	1	; () banked
  9401  00429C  5114               	movf	otoa@t& (0+255),w,b
  9402  00429E  1115               	iorwf	(otoa@t+1)& (0+255),w,b
  9403  0042A0  B4D8               	btfsc	status,2,c
  9404  0042A2  EF55  F021         	goto	u10891
  9405  0042A6  EF57  F021         	goto	u10890
  9406  0042AA                     u10891:
  9407  0042AA  EF65  F021         	goto	l8734
  9408  0042AE                     u10890:
  9409  0042AE                     
  9410                           ; BSR set to: 1
  9411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  9412  0042AE  0720               	decf	otoa@i& (0+255),f,b
  9413  0042B0  A0D8               	btfss	status,0,c
  9414  0042B2  0721               	decf	(otoa@i+1)& (0+255),f,b
  9415  0042B4                     
  9416                           ; BSR set to: 1
  9417                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  9418  0042B4  0E89               	movlw	low _dbuf
  9419  0042B6  2520               	addwf	otoa@i& (0+255),w,b
  9420  0042B8  6ED9               	movwf	fsr2l,c
  9421  0042BA  0E01               	movlw	high _dbuf
  9422  0042BC  2121               	addwfc	(otoa@i+1)& (0+255),w,b
  9423  0042BE  6EDA               	movwf	fsr2h,c
  9424  0042C0  0E30               	movlw	48
  9425  0042C2  6EDF               	movwf	indf2,c
  9426  0042C4                     
  9427                           ; BSR set to: 1
  9428                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  9429  0042C4  0716               	decf	otoa@w& (0+255),f,b
  9430  0042C6  A0D8               	btfss	status,0,c
  9431  0042C8  0717               	decf	(otoa@w+1)& (0+255),f,b
  9432  0042CA                     l8734:
  9433                           
  9434                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  9435  0042CA  C100  F0A1         	movff	otoa@fp,pad@fp
  9436  0042CE  C101  F0A2         	movff	otoa@fp+1,pad@fp+1
  9437  0042D2  0E89               	movlw	low _dbuf
  9438  0042D4  0101               	movlb	1	; () banked
  9439  0042D6  2520               	addwf	otoa@i& (0+255),w,b
  9440  0042D8  0100               	movlb	0	; () banked
  9441  0042DA  6FA3               	movwf	pad@buf& (0+255),b
  9442  0042DC  0E01               	movlw	high _dbuf
  9443  0042DE  0101               	movlb	1	; () banked
  9444  0042E0  2121               	addwfc	(otoa@i+1)& (0+255),w,b
  9445  0042E2  0100               	movlb	0	; () banked
  9446  0042E4  6FA4               	movwf	(pad@buf+1)& (0+255),b
  9447  0042E6  C116  F0A5         	movff	otoa@w,pad@p
  9448  0042EA  C117  F0A6         	movff	otoa@w+1,pad@p+1
  9449  0042EE  EC6C  F02C         	call	_pad	;wreg free
  9450  0042F2  C0A1  F100         	movff	?_pad,?_otoa
  9451  0042F6  C0A2  F101         	movff	?_pad+1,?_otoa+1
  9452  0042FA  0012               	return		;funcret
  9453  0042FC                     __end_of_otoa:
  9454                           	opt callstack 0
  9455                           
  9456 ;; *************** function _dtoa *****************
  9457 ;; Defined at:
  9458 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9459 ;; Parameters:    Size  Location     Type
  9460 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  9461 ;;		 -> vsnprintf@f(6), NULL(0), 
  9462 ;;  d               8    2[BANK1 ] long long 
  9463 ;; Auto vars:     Size  Location     Type
  9464 ;;  n               8   26[BANK1 ] long long 
  9465 ;;  i               2   34[BANK1 ] int 
  9466 ;;  s               2   24[BANK1 ] int 
  9467 ;;  w               2   22[BANK1 ] int 
  9468 ;;  p               2   20[BANK1 ] int 
  9469 ;; Return value:  Size  Location     Type
  9470 ;;                  2    0[BANK1 ] int 
  9471 ;; Registers used:
  9472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9473 ;; Tracked objects:
  9474 ;;		On entry : 0/0
  9475 ;;		On exit  : 0/0
  9476 ;;		Unchanged: 0/0
  9477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9478 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9479 ;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9480 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9481 ;;      Totals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9482 ;;Total ram usage:       36 bytes
  9483 ;; Hardware stack levels used:    1
  9484 ;; Hardware stack levels required when called:   18
  9485 ;; This function calls:
  9486 ;;		___aodiv
  9487 ;;		___aomod
  9488 ;;		_abs
  9489 ;;		_pad
  9490 ;; This function is called by:
  9491 ;;		_vfpfcnvrt
  9492 ;; This function uses a non-reentrant model
  9493 ;;
  9494                           
  9495                           	psect	text22
  9496  002D1E                     __ptext22:
  9497                           	opt callstack 0
  9498  002D1E                     _dtoa:
  9499                           	opt callstack 8
  9500  002D1E                     
  9501                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  9502  002D1E  C102  F11A         	movff	dtoa@d,dtoa@n
  9503  002D22  C103  F11B         	movff	dtoa@d+1,dtoa@n+1
  9504  002D26  C104  F11C         	movff	dtoa@d+2,dtoa@n+2
  9505  002D2A  C105  F11D         	movff	dtoa@d+3,dtoa@n+3
  9506  002D2E  C106  F11E         	movff	dtoa@d+4,dtoa@n+4
  9507  002D32  C107  F11F         	movff	dtoa@d+5,dtoa@n+5
  9508  002D36  C108  F120         	movff	dtoa@d+6,dtoa@n+6
  9509  002D3A  C109  F121         	movff	dtoa@d+7,dtoa@n+7
  9510  002D3E                     
  9511                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  9512  002D3E  0101               	movlb	1	; () banked
  9513  002D40  BF21               	btfsc	(dtoa@n+7)& (0+255),7,b
  9514  002D42  EFA5  F016         	goto	u10651
  9515  002D46  EFA8  F016         	goto	u10650
  9516  002D4A                     u10651:
  9517  002D4A  0E01               	movlw	1
  9518  002D4C  EFA9  F016         	goto	u10660
  9519  002D50                     u10650:
  9520  002D50  0E00               	movlw	0
  9521  002D52                     u10660:
  9522  002D52  6F18               	movwf	dtoa@s& (0+255),b
  9523  002D54  6B19               	clrf	(dtoa@s+1)& (0+255),b
  9524                           
  9525                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  9526  002D56  5118               	movf	dtoa@s& (0+255),w,b
  9527  002D58  1119               	iorwf	(dtoa@s+1)& (0+255),w,b
  9528  002D5A  B4D8               	btfsc	status,2,c
  9529  002D5C  EFB2  F016         	goto	u10671
  9530  002D60  EFB4  F016         	goto	u10670
  9531  002D64                     u10671:
  9532  002D64  EFC4  F016         	goto	l8634
  9533  002D68                     u10670:
  9534  002D68                     
  9535                           ; BSR set to: 1
  9536                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  9537  002D68  1F21               	comf	(dtoa@n+7)& (0+255),f,b
  9538  002D6A  1F20               	comf	(dtoa@n+6)& (0+255),f,b
  9539  002D6C  1F1F               	comf	(dtoa@n+5)& (0+255),f,b
  9540  002D6E  1F1E               	comf	(dtoa@n+4)& (0+255),f,b
  9541  002D70  1F1D               	comf	(dtoa@n+3)& (0+255),f,b
  9542  002D72  1F1C               	comf	(dtoa@n+2)& (0+255),f,b
  9543  002D74  1F1B               	comf	(dtoa@n+1)& (0+255),f,b
  9544  002D76  6D1A               	negf	dtoa@n& (0+255),b
  9545  002D78  0E00               	movlw	0
  9546  002D7A  231B               	addwfc	(dtoa@n+1)& (0+255),f,b
  9547  002D7C  231C               	addwfc	(dtoa@n+2)& (0+255),f,b
  9548  002D7E  231D               	addwfc	(dtoa@n+3)& (0+255),f,b
  9549  002D80  231E               	addwfc	(dtoa@n+4)& (0+255),f,b
  9550  002D82  231F               	addwfc	(dtoa@n+5)& (0+255),f,b
  9551  002D84  2320               	addwfc	(dtoa@n+6)& (0+255),f,b
  9552  002D86  2321               	addwfc	(dtoa@n+7)& (0+255),f,b
  9553  002D88                     l8634:
  9554                           
  9555                           ; BSR set to: 1
  9556                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  9557  002D88  0100               	movlb	0	; () banked
  9558  002D8A  BFB8               	btfsc	(_prec+1)& (0+255),7,b
  9559  002D8C  EFCA  F016         	goto	u10681
  9560  002D90  EFCC  F016         	goto	u10680
  9561  002D94                     u10681:
  9562  002D94  EFCD  F016         	goto	l8638
  9563  002D98                     u10680:
  9564  002D98                     
  9565                           ; BSR set to: 0
  9566                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  9567  002D98  93B9               	bcf	_flags& (0+255),1,b
  9568  002D9A                     l8638:
  9569                           
  9570                           ; BSR set to: 0
  9571                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  9572  002D9A  BFB8               	btfsc	(_prec+1)& (0+255),7,b
  9573  002D9C  EFDA  F016         	goto	u10690
  9574  002DA0  51B8               	movf	(_prec+1)& (0+255),w,b
  9575  002DA2  E106               	bnz	u10691
  9576  002DA4  05B7               	decf	_prec& (0+255),w,b
  9577  002DA6  B0D8               	btfsc	status,0,c
  9578  002DA8  EFD8  F016         	goto	u10691
  9579  002DAC  EFDA  F016         	goto	u10690
  9580  002DB0                     u10691:
  9581  002DB0  EFE1  F016         	goto	l737
  9582  002DB4                     u10690:
  9583  002DB4                     
  9584                           ; BSR set to: 0
  9585  002DB4  0E00               	movlw	0
  9586  002DB6  0101               	movlb	1	; () banked
  9587  002DB8  6F15               	movwf	(dtoa@p+1)& (0+255),b
  9588  002DBA  0E01               	movlw	1
  9589  002DBC  6F14               	movwf	dtoa@p& (0+255),b
  9590  002DBE  EFE5  F016         	goto	l739
  9591  002DC2                     l737:
  9592                           
  9593                           ; BSR set to: 0
  9594  002DC2  C0B7  F114         	movff	_prec,dtoa@p
  9595  002DC6  C0B8  F115         	movff	_prec+1,dtoa@p+1
  9596  002DCA                     l739:
  9597                           
  9598                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  9599  002DCA  C0B5  F116         	movff	_width,dtoa@w
  9600  002DCE  C0B6  F117         	movff	_width+1,dtoa@w+1
  9601  002DD2                     
  9602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  9603  002DD2  0101               	movlb	1	; () banked
  9604  002DD4  5118               	movf	dtoa@s& (0+255),w,b
  9605  002DD6  1119               	iorwf	(dtoa@s+1)& (0+255),w,b
  9606  002DD8  A4D8               	btfss	status,2,c
  9607  002DDA  EFF1  F016         	goto	u10701
  9608  002DDE  EFF3  F016         	goto	u10700
  9609  002DE2                     u10701:
  9610  002DE2  EFFB  F016         	goto	l8646
  9611  002DE6                     u10700:
  9612  002DE6                     
  9613                           ; BSR set to: 1
  9614  002DE6  0100               	movlb	0	; () banked
  9615  002DE8  A5B9               	btfss	_flags& (0+255),2,b
  9616  002DEA  EFF9  F016         	goto	u10711
  9617  002DEE  EFFB  F016         	goto	u10710
  9618  002DF2                     u10711:
  9619  002DF2  EFFF  F016         	goto	l8648
  9620  002DF6                     u10710:
  9621  002DF6                     l8646:
  9622                           
  9623                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  9624  002DF6  0101               	movlb	1	; () banked
  9625  002DF8  0716               	decf	dtoa@w& (0+255),f,b
  9626  002DFA  A0D8               	btfss	status,0,c
  9627  002DFC  0717               	decf	(dtoa@w+1)& (0+255),f,b
  9628  002DFE                     l8648:
  9629                           
  9630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  9631  002DFE  0E00               	movlw	0
  9632  002E00  0101               	movlb	1	; () banked
  9633  002E02  6F23               	movwf	(dtoa@i+1)& (0+255),b
  9634  002E04  0E1F               	movlw	31
  9635  002E06  6F22               	movwf	dtoa@i& (0+255),b
  9636  002E08                     
  9637                           ; BSR set to: 1
  9638                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  9639  002E08  0E00               	movlw	0
  9640  002E0A  6FA8               	movwf	(_dbuf+31)& (0+255),b
  9641                           
  9642                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9643  002E0C  EF89  F017         	goto	l8662
  9644  002E10                     l8652:
  9645                           
  9646                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  9647  002E10  0101               	movlb	1	; () banked
  9648  002E12  0722               	decf	dtoa@i& (0+255),f,b
  9649  002E14  A0D8               	btfss	status,0,c
  9650  002E16  0723               	decf	(dtoa@i+1)& (0+255),f,b
  9651  002E18                     
  9652                           ; BSR set to: 1
  9653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  9654  002E18  0E89               	movlw	low _dbuf
  9655  002E1A  2522               	addwf	dtoa@i& (0+255),w,b
  9656  002E1C  6ED9               	movwf	fsr2l,c
  9657  002E1E  0E01               	movlw	high _dbuf
  9658  002E20  2123               	addwfc	(dtoa@i+1)& (0+255),w,b
  9659  002E22  6EDA               	movwf	fsr2h,c
  9660  002E24  C11A  F08F         	movff	dtoa@n,___aomod@dividend
  9661  002E28  C11B  F090         	movff	dtoa@n+1,___aomod@dividend+1
  9662  002E2C  C11C  F091         	movff	dtoa@n+2,___aomod@dividend+2
  9663  002E30  C11D  F092         	movff	dtoa@n+3,___aomod@dividend+3
  9664  002E34  C11E  F093         	movff	dtoa@n+4,___aomod@dividend+4
  9665  002E38  C11F  F094         	movff	dtoa@n+5,___aomod@dividend+5
  9666  002E3C  C120  F095         	movff	dtoa@n+6,___aomod@dividend+6
  9667  002E40  C121  F096         	movff	dtoa@n+7,___aomod@dividend+7
  9668  002E44  0E0A               	movlw	10
  9669  002E46  0100               	movlb	0	; () banked
  9670  002E48  6F97               	movwf	___aomod@divisor& (0+255),b
  9671  002E4A  0E00               	movlw	0
  9672  002E4C  6F98               	movwf	(___aomod@divisor+1)& (0+255),b
  9673  002E4E  0E00               	movlw	0
  9674  002E50  6F99               	movwf	(___aomod@divisor+2)& (0+255),b
  9675  002E52  0E00               	movlw	0
  9676  002E54  6F9A               	movwf	(___aomod@divisor+3)& (0+255),b
  9677  002E56  0E00               	movlw	0
  9678  002E58  6F9B               	movwf	(___aomod@divisor+4)& (0+255),b
  9679  002E5A  0E00               	movlw	0
  9680  002E5C  6F9C               	movwf	(___aomod@divisor+5)& (0+255),b
  9681  002E5E  0E00               	movlw	0
  9682  002E60  6F9D               	movwf	(___aomod@divisor+6)& (0+255),b
  9683  002E62  0E00               	movlw	0
  9684  002E64  6F9E               	movwf	(___aomod@divisor+7)& (0+255),b
  9685  002E66  EC49  F026         	call	___aomod	;wreg free
  9686  002E6A  C08F  F10A         	movff	?___aomod,??_dtoa
  9687  002E6E  C090  F10B         	movff	?___aomod+1,??_dtoa+1
  9688  002E72  C091  F10C         	movff	?___aomod+2,??_dtoa+2
  9689  002E76  C092  F10D         	movff	?___aomod+3,??_dtoa+3
  9690  002E7A  C093  F10E         	movff	?___aomod+4,??_dtoa+4
  9691  002E7E  C094  F10F         	movff	?___aomod+5,??_dtoa+5
  9692  002E82  C095  F110         	movff	?___aomod+6,??_dtoa+6
  9693  002E86  C096  F111         	movff	?___aomod+7,??_dtoa+7
  9694  002E8A  C10A  F0A1         	movff	??_dtoa,abs@a
  9695  002E8E  C10C  F0A2         	movff	??_dtoa+2,abs@a+1
  9696  002E92  EC9A  F031         	call	_abs	;wreg free
  9697  002E96  0100               	movlb	0	; () banked
  9698  002E98  51A1               	movf	?_abs& (0+255),w,b
  9699  002E9A  0F30               	addlw	48
  9700  002E9C  6EDF               	movwf	indf2,c
  9701  002E9E                     
  9702                           ; BSR set to: 0
  9703                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  9704  002E9E  0101               	movlb	1	; () banked
  9705  002EA0  0714               	decf	dtoa@p& (0+255),f,b
  9706  002EA2  A0D8               	btfss	status,0,c
  9707  002EA4  0715               	decf	(dtoa@p+1)& (0+255),f,b
  9708  002EA6                     
  9709                           ; BSR set to: 1
  9710                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  9711  002EA6  0716               	decf	dtoa@w& (0+255),f,b
  9712  002EA8  A0D8               	btfss	status,0,c
  9713  002EAA  0717               	decf	(dtoa@w+1)& (0+255),f,b
  9714  002EAC                     
  9715                           ; BSR set to: 1
  9716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  9717  002EAC  C11A  F08F         	movff	dtoa@n,___aodiv@dividend
  9718  002EB0  C11B  F090         	movff	dtoa@n+1,___aodiv@dividend+1
  9719  002EB4  C11C  F091         	movff	dtoa@n+2,___aodiv@dividend+2
  9720  002EB8  C11D  F092         	movff	dtoa@n+3,___aodiv@dividend+3
  9721  002EBC  C11E  F093         	movff	dtoa@n+4,___aodiv@dividend+4
  9722  002EC0  C11F  F094         	movff	dtoa@n+5,___aodiv@dividend+5
  9723  002EC4  C120  F095         	movff	dtoa@n+6,___aodiv@dividend+6
  9724  002EC8  C121  F096         	movff	dtoa@n+7,___aodiv@dividend+7
  9725  002ECC  0E0A               	movlw	10
  9726  002ECE  0100               	movlb	0	; () banked
  9727  002ED0  6F97               	movwf	___aodiv@divisor& (0+255),b
  9728  002ED2  0E00               	movlw	0
  9729  002ED4  6F98               	movwf	(___aodiv@divisor+1)& (0+255),b
  9730  002ED6  0E00               	movlw	0
  9731  002ED8  6F99               	movwf	(___aodiv@divisor+2)& (0+255),b
  9732  002EDA  0E00               	movlw	0
  9733  002EDC  6F9A               	movwf	(___aodiv@divisor+3)& (0+255),b
  9734  002EDE  0E00               	movlw	0
  9735  002EE0  6F9B               	movwf	(___aodiv@divisor+4)& (0+255),b
  9736  002EE2  0E00               	movlw	0
  9737  002EE4  6F9C               	movwf	(___aodiv@divisor+5)& (0+255),b
  9738  002EE6  0E00               	movlw	0
  9739  002EE8  6F9D               	movwf	(___aodiv@divisor+6)& (0+255),b
  9740  002EEA  0E00               	movlw	0
  9741  002EEC  6F9E               	movwf	(___aodiv@divisor+7)& (0+255),b
  9742  002EEE  EC3C  F023         	call	___aodiv	;wreg free
  9743  002EF2  C08F  F11A         	movff	?___aodiv,dtoa@n
  9744  002EF6  C090  F11B         	movff	?___aodiv+1,dtoa@n+1
  9745  002EFA  C091  F11C         	movff	?___aodiv+2,dtoa@n+2
  9746  002EFE  C092  F11D         	movff	?___aodiv+3,dtoa@n+3
  9747  002F02  C093  F11E         	movff	?___aodiv+4,dtoa@n+4
  9748  002F06  C094  F11F         	movff	?___aodiv+5,dtoa@n+5
  9749  002F0A  C095  F120         	movff	?___aodiv+6,dtoa@n+6
  9750  002F0E  C096  F121         	movff	?___aodiv+7,dtoa@n+7
  9751  002F12                     l8662:
  9752                           
  9753                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9754  002F12  0101               	movlb	1	; () banked
  9755  002F14  BF23               	btfsc	(dtoa@i+1)& (0+255),7,b
  9756  002F16  EF95  F017         	goto	u10721
  9757  002F1A  5123               	movf	(dtoa@i+1)& (0+255),w,b
  9758  002F1C  E108               	bnz	u10720
  9759  002F1E  0522               	decf	dtoa@i& (0+255),w,b
  9760  002F20  A0D8               	btfss	status,0,c
  9761  002F22  EF95  F017         	goto	u10721
  9762  002F26  EF97  F017         	goto	u10720
  9763  002F2A                     u10721:
  9764  002F2A  EFC8  F017         	goto	l8672
  9765  002F2E                     u10720:
  9766  002F2E                     
  9767                           ; BSR set to: 1
  9768  002F2E  511A               	movf	dtoa@n& (0+255),w,b
  9769  002F30  111B               	iorwf	(dtoa@n+1)& (0+255),w,b
  9770  002F32  111C               	iorwf	(dtoa@n+2)& (0+255),w,b
  9771  002F34  111D               	iorwf	(dtoa@n+3)& (0+255),w,b
  9772  002F36  111E               	iorwf	(dtoa@n+4)& (0+255),w,b
  9773  002F38  111F               	iorwf	(dtoa@n+5)& (0+255),w,b
  9774  002F3A  1120               	iorwf	(dtoa@n+6)& (0+255),w,b
  9775  002F3C  1121               	iorwf	(dtoa@n+7)& (0+255),w,b
  9776  002F3E  A4D8               	btfss	status,2,c
  9777  002F40  EFA4  F017         	goto	u10731
  9778  002F44  EFA6  F017         	goto	u10730
  9779  002F48                     u10731:
  9780  002F48  EF08  F017         	goto	l8652
  9781  002F4C                     u10730:
  9782  002F4C                     
  9783                           ; BSR set to: 1
  9784  002F4C  BF15               	btfsc	(dtoa@p+1)& (0+255),7,b
  9785  002F4E  EFB3  F017         	goto	u10740
  9786  002F52  5115               	movf	(dtoa@p+1)& (0+255),w,b
  9787  002F54  E106               	bnz	u10741
  9788  002F56  0514               	decf	dtoa@p& (0+255),w,b
  9789  002F58  B0D8               	btfsc	status,0,c
  9790  002F5A  EFB1  F017         	goto	u10741
  9791  002F5E  EFB3  F017         	goto	u10740
  9792  002F62                     u10741:
  9793  002F62  EF08  F017         	goto	l8652
  9794  002F66                     u10740:
  9795  002F66                     
  9796                           ; BSR set to: 1
  9797  002F66  BF17               	btfsc	(dtoa@w+1)& (0+255),7,b
  9798  002F68  EFBE  F017         	goto	u10751
  9799  002F6C  5117               	movf	(dtoa@w+1)& (0+255),w,b
  9800  002F6E  E108               	bnz	u10750
  9801  002F70  0516               	decf	dtoa@w& (0+255),w,b
  9802  002F72  A0D8               	btfss	status,0,c
  9803  002F74  EFBE  F017         	goto	u10751
  9804  002F78  EFC0  F017         	goto	u10750
  9805  002F7C                     u10751:
  9806  002F7C  EFC8  F017         	goto	l8672
  9807  002F80                     u10750:
  9808  002F80                     
  9809                           ; BSR set to: 1
  9810  002F80  0100               	movlb	0	; () banked
  9811  002F82  B3B9               	btfsc	_flags& (0+255),1,b
  9812  002F84  EFC6  F017         	goto	u10761
  9813  002F88  EFC8  F017         	goto	u10760
  9814  002F8C                     u10761:
  9815  002F8C  EF08  F017         	goto	l8652
  9816  002F90                     u10760:
  9817  002F90                     l8672:
  9818                           
  9819                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  9820  002F90  0101               	movlb	1	; () banked
  9821  002F92  5118               	movf	dtoa@s& (0+255),w,b
  9822  002F94  1119               	iorwf	(dtoa@s+1)& (0+255),w,b
  9823  002F96  A4D8               	btfss	status,2,c
  9824  002F98  EFD0  F017         	goto	u10771
  9825  002F9C  EFD2  F017         	goto	u10770
  9826  002FA0                     u10771:
  9827  002FA0  EFDA  F017         	goto	l8676
  9828  002FA4                     u10770:
  9829  002FA4                     
  9830                           ; BSR set to: 1
  9831  002FA4  0100               	movlb	0	; () banked
  9832  002FA6  A5B9               	btfss	_flags& (0+255),2,b
  9833  002FA8  EFD8  F017         	goto	u10781
  9834  002FAC  EFDA  F017         	goto	u10780
  9835  002FB0                     u10781:
  9836  002FB0  EFF9  F017         	goto	l8686
  9837  002FB4                     u10780:
  9838  002FB4                     l8676:
  9839                           
  9840                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  9841  002FB4  0101               	movlb	1	; () banked
  9842  002FB6  0722               	decf	dtoa@i& (0+255),f,b
  9843  002FB8  A0D8               	btfss	status,0,c
  9844  002FBA  0723               	decf	(dtoa@i+1)& (0+255),f,b
  9845  002FBC                     
  9846                           ; BSR set to: 1
  9847                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  9848  002FBC  5118               	movf	dtoa@s& (0+255),w,b
  9849  002FBE  1119               	iorwf	(dtoa@s+1)& (0+255),w,b
  9850  002FC0  A4D8               	btfss	status,2,c
  9851  002FC2  EFE5  F017         	goto	u10791
  9852  002FC6  EFE7  F017         	goto	u10790
  9853  002FCA                     u10791:
  9854  002FCA  EFED  F017         	goto	l8682
  9855  002FCE                     u10790:
  9856  002FCE                     
  9857                           ; BSR set to: 1
  9858  002FCE  0E00               	movlw	0
  9859  002FD0  6F13               	movwf	(_dtoa$1825+1)& (0+255),b
  9860  002FD2  0E2B               	movlw	43
  9861  002FD4  6F12               	movwf	_dtoa$1825& (0+255),b
  9862  002FD6  EFF1  F017         	goto	l8684
  9863  002FDA                     l8682:
  9864                           
  9865                           ; BSR set to: 1
  9866  002FDA  0E00               	movlw	0
  9867  002FDC  6F13               	movwf	(_dtoa$1825+1)& (0+255),b
  9868  002FDE  0E2D               	movlw	45
  9869  002FE0  6F12               	movwf	_dtoa$1825& (0+255),b
  9870  002FE2                     l8684:
  9871                           
  9872                           ; BSR set to: 1
  9873  002FE2  0E89               	movlw	low _dbuf
  9874  002FE4  2522               	addwf	dtoa@i& (0+255),w,b
  9875  002FE6  6ED9               	movwf	fsr2l,c
  9876  002FE8  0E01               	movlw	high _dbuf
  9877  002FEA  2123               	addwfc	(dtoa@i+1)& (0+255),w,b
  9878  002FEC  6EDA               	movwf	fsr2h,c
  9879  002FEE  C112  FFDF         	movff	_dtoa$1825,indf2
  9880  002FF2                     l8686:
  9881                           
  9882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  9883  002FF2  C100  F0A1         	movff	dtoa@fp,pad@fp
  9884  002FF6  C101  F0A2         	movff	dtoa@fp+1,pad@fp+1
  9885  002FFA  0E89               	movlw	low _dbuf
  9886  002FFC  0101               	movlb	1	; () banked
  9887  002FFE  2522               	addwf	dtoa@i& (0+255),w,b
  9888  003000  0100               	movlb	0	; () banked
  9889  003002  6FA3               	movwf	pad@buf& (0+255),b
  9890  003004  0E01               	movlw	high _dbuf
  9891  003006  0101               	movlb	1	; () banked
  9892  003008  2123               	addwfc	(dtoa@i+1)& (0+255),w,b
  9893  00300A  0100               	movlb	0	; () banked
  9894  00300C  6FA4               	movwf	(pad@buf+1)& (0+255),b
  9895  00300E  C116  F0A5         	movff	dtoa@w,pad@p
  9896  003012  C117  F0A6         	movff	dtoa@w+1,pad@p+1
  9897  003016  EC6C  F02C         	call	_pad	;wreg free
  9898  00301A  C0A1  F100         	movff	?_pad,?_dtoa
  9899  00301E  C0A2  F101         	movff	?_pad+1,?_dtoa+1
  9900  003022  0012               	return		;funcret
  9901  003024                     __end_of_dtoa:
  9902                           	opt callstack 0
  9903                           
  9904 ;; *************** function _abs *****************
  9905 ;; Defined at:
  9906 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  9907 ;; Parameters:    Size  Location     Type
  9908 ;;  a               2   65[BANK0 ] int 
  9909 ;; Auto vars:     Size  Location     Type
  9910 ;;		None
  9911 ;; Return value:  Size  Location     Type
  9912 ;;                  2   65[BANK0 ] int 
  9913 ;; Registers used:
  9914 ;;		wreg, status,2, status,0
  9915 ;; Tracked objects:
  9916 ;;		On entry : 0/0
  9917 ;;		On exit  : 0/0
  9918 ;;		Unchanged: 0/0
  9919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9920 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9922 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9923 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9924 ;;Total ram usage:        4 bytes
  9925 ;; Hardware stack levels used:    1
  9926 ;; Hardware stack levels required when called:   13
  9927 ;; This function calls:
  9928 ;;		Nothing
  9929 ;; This function is called by:
  9930 ;;		_dtoa
  9931 ;; This function uses a non-reentrant model
  9932 ;;
  9933                           
  9934                           	psect	text23
  9935  006334                     __ptext23:
  9936                           	opt callstack 0
  9937  006334                     _abs:
  9938                           	opt callstack 12
  9939  006334  0100               	movlb	0	; () banked
  9940  006336  BFA2               	btfsc	(abs@a+1)& (0+255),7,b
  9941  006338  EFA8  F031         	goto	u9740
  9942  00633C  51A2               	movf	(abs@a+1)& (0+255),w,b
  9943  00633E  E106               	bnz	u9741
  9944  006340  05A1               	decf	abs@a& (0+255),w,b
  9945  006342  B0D8               	btfsc	status,0,c
  9946  006344  EFA6  F031         	goto	u9741
  9947  006348  EFA8  F031         	goto	u9740
  9948  00634C                     u9741:
  9949  00634C  EFB6  F031         	goto	l1601
  9950  006350                     u9740:
  9951  006350                     
  9952                           ; BSR set to: 0
  9953  006350  C0A1  F0A3         	movff	abs@a,??_abs
  9954  006354  C0A2  F0A4         	movff	abs@a+1,??_abs+1
  9955  006358  1FA3               	comf	??_abs& (0+255),f,b
  9956  00635A  1FA4               	comf	(??_abs+1)& (0+255),f,b
  9957  00635C  4BA3               	infsnz	??_abs& (0+255),f,b
  9958  00635E  2BA4               	incf	(??_abs+1)& (0+255),f,b
  9959  006360  C0A3  F0A1         	movff	??_abs,?_abs
  9960  006364  C0A4  F0A2         	movff	??_abs+1,?_abs+1
  9961  006368  EFBA  F031         	goto	l1604
  9962  00636C                     l1601:
  9963                           
  9964                           ; BSR set to: 0
  9965  00636C  C0A1  F0A1         	movff	abs@a,?_abs
  9966  006370  C0A2  F0A2         	movff	abs@a+1,?_abs+1
  9967  006374                     l1604:
  9968                           
  9969                           ; BSR set to: 0
  9970  006374  0012               	return		;funcret
  9971  006376                     __end_of_abs:
  9972                           	opt callstack 0
  9973                           
  9974 ;; *************** function ___aomod *****************
  9975 ;; Defined at:
  9976 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  9977 ;; Parameters:    Size  Location     Type
  9978 ;;  dividend        8   47[BANK0 ] long long 
  9979 ;;  divisor         8   55[BANK0 ] long long 
  9980 ;; Auto vars:     Size  Location     Type
  9981 ;;  sign            1   64[BANK0 ] unsigned char 
  9982 ;;  counter         1   63[BANK0 ] unsigned char 
  9983 ;; Return value:  Size  Location     Type
  9984 ;;                  8   47[BANK0 ] long long 
  9985 ;; Registers used:
  9986 ;;		wreg, status,2, status,0
  9987 ;; Tracked objects:
  9988 ;;		On entry : 0/0
  9989 ;;		On exit  : 0/0
  9990 ;;		Unchanged: 0/0
  9991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9992 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9993 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9995 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9996 ;;Total ram usage:       18 bytes
  9997 ;; Hardware stack levels used:    1
  9998 ;; Hardware stack levels required when called:   13
  9999 ;; This function calls:
 10000 ;;		Nothing
 10001 ;; This function is called by:
 10002 ;;		_dtoa
 10003 ;; This function uses a non-reentrant model
 10004 ;;
 10005                           
 10006                           	psect	text24
 10007  004C92                     __ptext24:
 10008                           	opt callstack 0
 10009  004C92                     ___aomod:
 10010                           	opt callstack 12
 10011  004C92  0E00               	movlw	0
 10012  004C94  0100               	movlb	0	; () banked
 10013  004C96  6FA0               	movwf	___aomod@sign& (0+255),b
 10014  004C98                     
 10015                           ; BSR set to: 0
 10016  004C98  BF96               	btfsc	(___aomod@dividend+7)& (0+255),7,b
 10017  004C9A  EF53  F026         	goto	u9910
 10018  004C9E  EF51  F026         	goto	u9911
 10019  004CA2                     u9911:
 10020  004CA2  EF65  F026         	goto	l8154
 10021  004CA6                     u9910:
 10022  004CA6                     
 10023                           ; BSR set to: 0
 10024  004CA6  1F96               	comf	(___aomod@dividend+7)& (0+255),f,b
 10025  004CA8  1F95               	comf	(___aomod@dividend+6)& (0+255),f,b
 10026  004CAA  1F94               	comf	(___aomod@dividend+5)& (0+255),f,b
 10027  004CAC  1F93               	comf	(___aomod@dividend+4)& (0+255),f,b
 10028  004CAE  1F92               	comf	(___aomod@dividend+3)& (0+255),f,b
 10029  004CB0  1F91               	comf	(___aomod@dividend+2)& (0+255),f,b
 10030  004CB2  1F90               	comf	(___aomod@dividend+1)& (0+255),f,b
 10031  004CB4  6D8F               	negf	___aomod@dividend& (0+255),b
 10032  004CB6  0E00               	movlw	0
 10033  004CB8  2390               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 10034  004CBA  2391               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 10035  004CBC  2392               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 10036  004CBE  2393               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 10037  004CC0  2394               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 10038  004CC2  2395               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 10039  004CC4  2396               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 10040  004CC6                     
 10041                           ; BSR set to: 0
 10042  004CC6  0E01               	movlw	1
 10043  004CC8  6FA0               	movwf	___aomod@sign& (0+255),b
 10044  004CCA                     l8154:
 10045                           
 10046                           ; BSR set to: 0
 10047  004CCA  BF9E               	btfsc	(___aomod@divisor+7)& (0+255),7,b
 10048  004CCC  EF6C  F026         	goto	u9920
 10049  004CD0  EF6A  F026         	goto	u9921
 10050  004CD4                     u9921:
 10051  004CD4  EF7C  F026         	goto	l8158
 10052  004CD8                     u9920:
 10053  004CD8                     
 10054                           ; BSR set to: 0
 10055  004CD8  1F9E               	comf	(___aomod@divisor+7)& (0+255),f,b
 10056  004CDA  1F9D               	comf	(___aomod@divisor+6)& (0+255),f,b
 10057  004CDC  1F9C               	comf	(___aomod@divisor+5)& (0+255),f,b
 10058  004CDE  1F9B               	comf	(___aomod@divisor+4)& (0+255),f,b
 10059  004CE0  1F9A               	comf	(___aomod@divisor+3)& (0+255),f,b
 10060  004CE2  1F99               	comf	(___aomod@divisor+2)& (0+255),f,b
 10061  004CE4  1F98               	comf	(___aomod@divisor+1)& (0+255),f,b
 10062  004CE6  6D97               	negf	___aomod@divisor& (0+255),b
 10063  004CE8  0E00               	movlw	0
 10064  004CEA  2398               	addwfc	(___aomod@divisor+1)& (0+255),f,b
 10065  004CEC  2399               	addwfc	(___aomod@divisor+2)& (0+255),f,b
 10066  004CEE  239A               	addwfc	(___aomod@divisor+3)& (0+255),f,b
 10067  004CF0  239B               	addwfc	(___aomod@divisor+4)& (0+255),f,b
 10068  004CF2  239C               	addwfc	(___aomod@divisor+5)& (0+255),f,b
 10069  004CF4  239D               	addwfc	(___aomod@divisor+6)& (0+255),f,b
 10070  004CF6  239E               	addwfc	(___aomod@divisor+7)& (0+255),f,b
 10071  004CF8                     l8158:
 10072                           
 10073                           ; BSR set to: 0
 10074  004CF8  5197               	movf	___aomod@divisor& (0+255),w,b
 10075  004CFA  1198               	iorwf	(___aomod@divisor+1)& (0+255),w,b
 10076  004CFC  1199               	iorwf	(___aomod@divisor+2)& (0+255),w,b
 10077  004CFE  119A               	iorwf	(___aomod@divisor+3)& (0+255),w,b
 10078  004D00  119B               	iorwf	(___aomod@divisor+4)& (0+255),w,b
 10079  004D02  119C               	iorwf	(___aomod@divisor+5)& (0+255),w,b
 10080  004D04  119D               	iorwf	(___aomod@divisor+6)& (0+255),w,b
 10081  004D06  119E               	iorwf	(___aomod@divisor+7)& (0+255),w,b
 10082  004D08  B4D8               	btfsc	status,2,c
 10083  004D0A  EF89  F026         	goto	u9931
 10084  004D0E  EF8B  F026         	goto	u9930
 10085  004D12                     u9931:
 10086  004D12  EFD3  F026         	goto	l8174
 10087  004D16                     u9930:
 10088  004D16                     
 10089                           ; BSR set to: 0
 10090  004D16  0E01               	movlw	1
 10091  004D18  6F9F               	movwf	___aomod@counter& (0+255),b
 10092  004D1A  EF99  F026         	goto	l8164
 10093  004D1E                     l8162:
 10094                           
 10095                           ; BSR set to: 0
 10096  004D1E  90D8               	bcf	status,0,c
 10097  004D20  3797               	rlcf	___aomod@divisor& (0+255),f,b
 10098  004D22  3798               	rlcf	(___aomod@divisor+1)& (0+255),f,b
 10099  004D24  3799               	rlcf	(___aomod@divisor+2)& (0+255),f,b
 10100  004D26  379A               	rlcf	(___aomod@divisor+3)& (0+255),f,b
 10101  004D28  379B               	rlcf	(___aomod@divisor+4)& (0+255),f,b
 10102  004D2A  379C               	rlcf	(___aomod@divisor+5)& (0+255),f,b
 10103  004D2C  379D               	rlcf	(___aomod@divisor+6)& (0+255),f,b
 10104  004D2E  379E               	rlcf	(___aomod@divisor+7)& (0+255),f,b
 10105  004D30  2B9F               	incf	___aomod@counter& (0+255),f,b
 10106  004D32                     l8164:
 10107                           
 10108                           ; BSR set to: 0
 10109  004D32  AF9E               	btfss	(___aomod@divisor+7)& (0+255),7,b
 10110  004D34  EF9E  F026         	goto	u9941
 10111  004D38  EFA0  F026         	goto	u9940
 10112  004D3C                     u9941:
 10113  004D3C  EF8F  F026         	goto	l8162
 10114  004D40                     u9940:
 10115  004D40                     l8166:
 10116                           
 10117                           ; BSR set to: 0
 10118  004D40  5197               	movf	___aomod@divisor& (0+255),w,b
 10119  004D42  5D8F               	subwf	___aomod@dividend& (0+255),w,b
 10120  004D44  5198               	movf	(___aomod@divisor+1)& (0+255),w,b
 10121  004D46  5990               	subwfb	(___aomod@dividend+1)& (0+255),w,b
 10122  004D48  5199               	movf	(___aomod@divisor+2)& (0+255),w,b
 10123  004D4A  5991               	subwfb	(___aomod@dividend+2)& (0+255),w,b
 10124  004D4C  519A               	movf	(___aomod@divisor+3)& (0+255),w,b
 10125  004D4E  5992               	subwfb	(___aomod@dividend+3)& (0+255),w,b
 10126  004D50  519B               	movf	(___aomod@divisor+4)& (0+255),w,b
 10127  004D52  5993               	subwfb	(___aomod@dividend+4)& (0+255),w,b
 10128  004D54  519C               	movf	(___aomod@divisor+5)& (0+255),w,b
 10129  004D56  5994               	subwfb	(___aomod@dividend+5)& (0+255),w,b
 10130  004D58  519D               	movf	(___aomod@divisor+6)& (0+255),w,b
 10131  004D5A  5995               	subwfb	(___aomod@dividend+6)& (0+255),w,b
 10132  004D5C  519E               	movf	(___aomod@divisor+7)& (0+255),w,b
 10133  004D5E  5996               	subwfb	(___aomod@dividend+7)& (0+255),w,b
 10134  004D60  A0D8               	btfss	status,0,c
 10135  004D62  EFB5  F026         	goto	u9951
 10136  004D66  EFB7  F026         	goto	u9950
 10137  004D6A                     u9951:
 10138  004D6A  EFC7  F026         	goto	l8170
 10139  004D6E                     u9950:
 10140  004D6E                     
 10141                           ; BSR set to: 0
 10142  004D6E  5197               	movf	___aomod@divisor& (0+255),w,b
 10143  004D70  5F8F               	subwf	___aomod@dividend& (0+255),f,b
 10144  004D72  5198               	movf	(___aomod@divisor+1)& (0+255),w,b
 10145  004D74  5B90               	subwfb	(___aomod@dividend+1)& (0+255),f,b
 10146  004D76  5199               	movf	(___aomod@divisor+2)& (0+255),w,b
 10147  004D78  5B91               	subwfb	(___aomod@dividend+2)& (0+255),f,b
 10148  004D7A  519A               	movf	(___aomod@divisor+3)& (0+255),w,b
 10149  004D7C  5B92               	subwfb	(___aomod@dividend+3)& (0+255),f,b
 10150  004D7E  519B               	movf	(___aomod@divisor+4)& (0+255),w,b
 10151  004D80  5B93               	subwfb	(___aomod@dividend+4)& (0+255),f,b
 10152  004D82  519C               	movf	(___aomod@divisor+5)& (0+255),w,b
 10153  004D84  5B94               	subwfb	(___aomod@dividend+5)& (0+255),f,b
 10154  004D86  519D               	movf	(___aomod@divisor+6)& (0+255),w,b
 10155  004D88  5B95               	subwfb	(___aomod@dividend+6)& (0+255),f,b
 10156  004D8A  519E               	movf	(___aomod@divisor+7)& (0+255),w,b
 10157  004D8C  5B96               	subwfb	(___aomod@dividend+7)& (0+255),f,b
 10158  004D8E                     l8170:
 10159                           
 10160                           ; BSR set to: 0
 10161  004D8E  90D8               	bcf	status,0,c
 10162  004D90  339E               	rrcf	(___aomod@divisor+7)& (0+255),f,b
 10163  004D92  339D               	rrcf	(___aomod@divisor+6)& (0+255),f,b
 10164  004D94  339C               	rrcf	(___aomod@divisor+5)& (0+255),f,b
 10165  004D96  339B               	rrcf	(___aomod@divisor+4)& (0+255),f,b
 10166  004D98  339A               	rrcf	(___aomod@divisor+3)& (0+255),f,b
 10167  004D9A  3399               	rrcf	(___aomod@divisor+2)& (0+255),f,b
 10168  004D9C  3398               	rrcf	(___aomod@divisor+1)& (0+255),f,b
 10169  004D9E  3397               	rrcf	___aomod@divisor& (0+255),f,b
 10170  004DA0                     
 10171                           ; BSR set to: 0
 10172  004DA0  2F9F               	decfsz	___aomod@counter& (0+255),f,b
 10173  004DA2  EFA0  F026         	goto	l8166
 10174  004DA6                     l8174:
 10175                           
 10176                           ; BSR set to: 0
 10177  004DA6  51A0               	movf	___aomod@sign& (0+255),w,b
 10178  004DA8  B4D8               	btfsc	status,2,c
 10179  004DAA  EFD9  F026         	goto	u9961
 10180  004DAE  EFDB  F026         	goto	u9960
 10181  004DB2                     u9961:
 10182  004DB2  EFEB  F026         	goto	l8178
 10183  004DB6                     u9960:
 10184  004DB6                     
 10185                           ; BSR set to: 0
 10186  004DB6  1F96               	comf	(___aomod@dividend+7)& (0+255),f,b
 10187  004DB8  1F95               	comf	(___aomod@dividend+6)& (0+255),f,b
 10188  004DBA  1F94               	comf	(___aomod@dividend+5)& (0+255),f,b
 10189  004DBC  1F93               	comf	(___aomod@dividend+4)& (0+255),f,b
 10190  004DBE  1F92               	comf	(___aomod@dividend+3)& (0+255),f,b
 10191  004DC0  1F91               	comf	(___aomod@dividend+2)& (0+255),f,b
 10192  004DC2  1F90               	comf	(___aomod@dividend+1)& (0+255),f,b
 10193  004DC4  6D8F               	negf	___aomod@dividend& (0+255),b
 10194  004DC6  0E00               	movlw	0
 10195  004DC8  2390               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 10196  004DCA  2391               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 10197  004DCC  2392               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 10198  004DCE  2393               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 10199  004DD0  2394               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 10200  004DD2  2395               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 10201  004DD4  2396               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 10202  004DD6                     l8178:
 10203                           
 10204                           ; BSR set to: 0
 10205  004DD6  C08F  F08F         	movff	___aomod@dividend,?___aomod
 10206  004DDA  C090  F090         	movff	___aomod@dividend+1,?___aomod+1
 10207  004DDE  C091  F091         	movff	___aomod@dividend+2,?___aomod+2
 10208  004DE2  C092  F092         	movff	___aomod@dividend+3,?___aomod+3
 10209  004DE6  C093  F093         	movff	___aomod@dividend+4,?___aomod+4
 10210  004DEA  C094  F094         	movff	___aomod@dividend+5,?___aomod+5
 10211  004DEE  C095  F095         	movff	___aomod@dividend+6,?___aomod+6
 10212  004DF2  C096  F096         	movff	___aomod@dividend+7,?___aomod+7
 10213  004DF6                     
 10214                           ; BSR set to: 0
 10215  004DF6  0012               	return		;funcret
 10216  004DF8                     __end_of___aomod:
 10217                           	opt callstack 0
 10218                           
 10219 ;; *************** function ___aodiv *****************
 10220 ;; Defined at:
 10221 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 10222 ;; Parameters:    Size  Location     Type
 10223 ;;  dividend        8   47[BANK0 ] long long 
 10224 ;;  divisor         8   55[BANK0 ] long long 
 10225 ;; Auto vars:     Size  Location     Type
 10226 ;;  quotient        8   65[BANK0 ] long long 
 10227 ;;  sign            1   64[BANK0 ] unsigned char 
 10228 ;;  counter         1   63[BANK0 ] unsigned char 
 10229 ;; Return value:  Size  Location     Type
 10230 ;;                  8   47[BANK0 ] long long 
 10231 ;; Registers used:
 10232 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10233 ;; Tracked objects:
 10234 ;;		On entry : 0/0
 10235 ;;		On exit  : 0/0
 10236 ;;		Unchanged: 0/0
 10237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10238 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10239 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10241 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10242 ;;Total ram usage:       26 bytes
 10243 ;; Hardware stack levels used:    1
 10244 ;; Hardware stack levels required when called:   13
 10245 ;; This function calls:
 10246 ;;		Nothing
 10247 ;; This function is called by:
 10248 ;;		_dtoa
 10249 ;; This function uses a non-reentrant model
 10250 ;;
 10251                           
 10252                           	psect	text25
 10253  004678                     __ptext25:
 10254                           	opt callstack 0
 10255  004678                     ___aodiv:
 10256                           	opt callstack 12
 10257  004678  0E00               	movlw	0
 10258  00467A  0100               	movlb	0	; () banked
 10259  00467C  6FA0               	movwf	___aodiv@sign& (0+255),b
 10260  00467E                     
 10261                           ; BSR set to: 0
 10262  00467E  BF9E               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
 10263  004680  EF46  F023         	goto	u9840
 10264  004684  EF44  F023         	goto	u9841
 10265  004688                     u9841:
 10266  004688  EF58  F023         	goto	l8110
 10267  00468C                     u9840:
 10268  00468C                     
 10269                           ; BSR set to: 0
 10270  00468C  1F9E               	comf	(___aodiv@divisor+7)& (0+255),f,b
 10271  00468E  1F9D               	comf	(___aodiv@divisor+6)& (0+255),f,b
 10272  004690  1F9C               	comf	(___aodiv@divisor+5)& (0+255),f,b
 10273  004692  1F9B               	comf	(___aodiv@divisor+4)& (0+255),f,b
 10274  004694  1F9A               	comf	(___aodiv@divisor+3)& (0+255),f,b
 10275  004696  1F99               	comf	(___aodiv@divisor+2)& (0+255),f,b
 10276  004698  1F98               	comf	(___aodiv@divisor+1)& (0+255),f,b
 10277  00469A  6D97               	negf	___aodiv@divisor& (0+255),b
 10278  00469C  0E00               	movlw	0
 10279  00469E  2398               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 10280  0046A0  2399               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 10281  0046A2  239A               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 10282  0046A4  239B               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 10283  0046A6  239C               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 10284  0046A8  239D               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 10285  0046AA  239E               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 10286  0046AC                     
 10287                           ; BSR set to: 0
 10288  0046AC  0E01               	movlw	1
 10289  0046AE  6FA0               	movwf	___aodiv@sign& (0+255),b
 10290  0046B0                     l8110:
 10291                           
 10292                           ; BSR set to: 0
 10293  0046B0  BF96               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
 10294  0046B2  EF5F  F023         	goto	u9850
 10295  0046B6  EF5D  F023         	goto	u9851
 10296  0046BA                     u9851:
 10297  0046BA  EF71  F023         	goto	l8116
 10298  0046BE                     u9850:
 10299  0046BE                     
 10300                           ; BSR set to: 0
 10301  0046BE  1F96               	comf	(___aodiv@dividend+7)& (0+255),f,b
 10302  0046C0  1F95               	comf	(___aodiv@dividend+6)& (0+255),f,b
 10303  0046C2  1F94               	comf	(___aodiv@dividend+5)& (0+255),f,b
 10304  0046C4  1F93               	comf	(___aodiv@dividend+4)& (0+255),f,b
 10305  0046C6  1F92               	comf	(___aodiv@dividend+3)& (0+255),f,b
 10306  0046C8  1F91               	comf	(___aodiv@dividend+2)& (0+255),f,b
 10307  0046CA  1F90               	comf	(___aodiv@dividend+1)& (0+255),f,b
 10308  0046CC  6D8F               	negf	___aodiv@dividend& (0+255),b
 10309  0046CE  0E00               	movlw	0
 10310  0046D0  2390               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 10311  0046D2  2391               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 10312  0046D4  2392               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 10313  0046D6  2393               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 10314  0046D8  2394               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 10315  0046DA  2395               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 10316  0046DC  2396               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 10317  0046DE                     
 10318                           ; BSR set to: 0
 10319  0046DE  0E01               	movlw	1
 10320  0046E0  1BA0               	xorwf	___aodiv@sign& (0+255),f,b
 10321  0046E2                     l8116:
 10322                           
 10323                           ; BSR set to: 0
 10324  0046E2  EE20  F0A1         	lfsr	2,___aodiv@quotient
 10325  0046E6  0E07               	movlw	7
 10326  0046E8                     u9861:
 10327  0046E8  6ADE               	clrf	postinc2,c
 10328  0046EA  06E8               	decf	wreg,f,c
 10329  0046EC  E2FD               	bc	u9861
 10330  0046EE                     
 10331                           ; BSR set to: 0
 10332  0046EE  5197               	movf	___aodiv@divisor& (0+255),w,b
 10333  0046F0  1198               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 10334  0046F2  1199               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 10335  0046F4  119A               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 10336  0046F6  119B               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 10337  0046F8  119C               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 10338  0046FA  119D               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 10339  0046FC  119E               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 10340  0046FE  B4D8               	btfsc	status,2,c
 10341  004700  EF84  F023         	goto	u9871
 10342  004704  EF86  F023         	goto	u9870
 10343  004708                     u9871:
 10344  004708  EFD8  F023         	goto	l8138
 10345  00470C                     u9870:
 10346  00470C                     
 10347                           ; BSR set to: 0
 10348  00470C  0E01               	movlw	1
 10349  00470E  6F9F               	movwf	___aodiv@counter& (0+255),b
 10350  004710  EF94  F023         	goto	l8124
 10351  004714                     l8122:
 10352                           
 10353                           ; BSR set to: 0
 10354  004714  90D8               	bcf	status,0,c
 10355  004716  3797               	rlcf	___aodiv@divisor& (0+255),f,b
 10356  004718  3798               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 10357  00471A  3799               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 10358  00471C  379A               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 10359  00471E  379B               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 10360  004720  379C               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 10361  004722  379D               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 10362  004724  379E               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 10363  004726  2B9F               	incf	___aodiv@counter& (0+255),f,b
 10364  004728                     l8124:
 10365                           
 10366                           ; BSR set to: 0
 10367  004728  AF9E               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 10368  00472A  EF99  F023         	goto	u9881
 10369  00472E  EF9B  F023         	goto	u9880
 10370  004732                     u9881:
 10371  004732  EF8A  F023         	goto	l8122
 10372  004736                     u9880:
 10373  004736                     l8126:
 10374                           
 10375                           ; BSR set to: 0
 10376  004736  90D8               	bcf	status,0,c
 10377  004738  37A1               	rlcf	___aodiv@quotient& (0+255),f,b
 10378  00473A  37A2               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 10379  00473C  37A3               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 10380  00473E  37A4               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 10381  004740  37A5               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 10382  004742  37A6               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 10383  004744  37A7               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 10384  004746  37A8               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 10385  004748                     
 10386                           ; BSR set to: 0
 10387  004748  5197               	movf	___aodiv@divisor& (0+255),w,b
 10388  00474A  5D8F               	subwf	___aodiv@dividend& (0+255),w,b
 10389  00474C  5198               	movf	(___aodiv@divisor+1)& (0+255),w,b
 10390  00474E  5990               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 10391  004750  5199               	movf	(___aodiv@divisor+2)& (0+255),w,b
 10392  004752  5991               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 10393  004754  519A               	movf	(___aodiv@divisor+3)& (0+255),w,b
 10394  004756  5992               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 10395  004758  519B               	movf	(___aodiv@divisor+4)& (0+255),w,b
 10396  00475A  5993               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 10397  00475C  519C               	movf	(___aodiv@divisor+5)& (0+255),w,b
 10398  00475E  5994               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 10399  004760  519D               	movf	(___aodiv@divisor+6)& (0+255),w,b
 10400  004762  5995               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 10401  004764  519E               	movf	(___aodiv@divisor+7)& (0+255),w,b
 10402  004766  5996               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 10403  004768  A0D8               	btfss	status,0,c
 10404  00476A  EFB9  F023         	goto	u9891
 10405  00476E  EFBB  F023         	goto	u9890
 10406  004772                     u9891:
 10407  004772  EFCC  F023         	goto	l8134
 10408  004776                     u9890:
 10409  004776                     
 10410                           ; BSR set to: 0
 10411  004776  5197               	movf	___aodiv@divisor& (0+255),w,b
 10412  004778  5F8F               	subwf	___aodiv@dividend& (0+255),f,b
 10413  00477A  5198               	movf	(___aodiv@divisor+1)& (0+255),w,b
 10414  00477C  5B90               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 10415  00477E  5199               	movf	(___aodiv@divisor+2)& (0+255),w,b
 10416  004780  5B91               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 10417  004782  519A               	movf	(___aodiv@divisor+3)& (0+255),w,b
 10418  004784  5B92               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 10419  004786  519B               	movf	(___aodiv@divisor+4)& (0+255),w,b
 10420  004788  5B93               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 10421  00478A  519C               	movf	(___aodiv@divisor+5)& (0+255),w,b
 10422  00478C  5B94               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 10423  00478E  519D               	movf	(___aodiv@divisor+6)& (0+255),w,b
 10424  004790  5B95               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 10425  004792  519E               	movf	(___aodiv@divisor+7)& (0+255),w,b
 10426  004794  5B96               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 10427  004796                     
 10428                           ; BSR set to: 0
 10429  004796  81A1               	bsf	___aodiv@quotient& (0+255),0,b
 10430  004798                     l8134:
 10431                           
 10432                           ; BSR set to: 0
 10433  004798  90D8               	bcf	status,0,c
 10434  00479A  339E               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 10435  00479C  339D               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 10436  00479E  339C               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 10437  0047A0  339B               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 10438  0047A2  339A               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 10439  0047A4  3399               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 10440  0047A6  3398               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 10441  0047A8  3397               	rrcf	___aodiv@divisor& (0+255),f,b
 10442  0047AA                     
 10443                           ; BSR set to: 0
 10444  0047AA  2F9F               	decfsz	___aodiv@counter& (0+255),f,b
 10445  0047AC  EF9B  F023         	goto	l8126
 10446  0047B0                     l8138:
 10447                           
 10448                           ; BSR set to: 0
 10449  0047B0  51A0               	movf	___aodiv@sign& (0+255),w,b
 10450  0047B2  B4D8               	btfsc	status,2,c
 10451  0047B4  EFDE  F023         	goto	u9901
 10452  0047B8  EFE0  F023         	goto	u9900
 10453  0047BC                     u9901:
 10454  0047BC  EFF0  F023         	goto	l8142
 10455  0047C0                     u9900:
 10456  0047C0                     
 10457                           ; BSR set to: 0
 10458  0047C0  1FA8               	comf	(___aodiv@quotient+7)& (0+255),f,b
 10459  0047C2  1FA7               	comf	(___aodiv@quotient+6)& (0+255),f,b
 10460  0047C4  1FA6               	comf	(___aodiv@quotient+5)& (0+255),f,b
 10461  0047C6  1FA5               	comf	(___aodiv@quotient+4)& (0+255),f,b
 10462  0047C8  1FA4               	comf	(___aodiv@quotient+3)& (0+255),f,b
 10463  0047CA  1FA3               	comf	(___aodiv@quotient+2)& (0+255),f,b
 10464  0047CC  1FA2               	comf	(___aodiv@quotient+1)& (0+255),f,b
 10465  0047CE  6DA1               	negf	___aodiv@quotient& (0+255),b
 10466  0047D0  0E00               	movlw	0
 10467  0047D2  23A2               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 10468  0047D4  23A3               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 10469  0047D6  23A4               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 10470  0047D8  23A5               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 10471  0047DA  23A6               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 10472  0047DC  23A7               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 10473  0047DE  23A8               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 10474  0047E0                     l8142:
 10475                           
 10476                           ; BSR set to: 0
 10477  0047E0  C0A1  F08F         	movff	___aodiv@quotient,?___aodiv
 10478  0047E4  C0A2  F090         	movff	___aodiv@quotient+1,?___aodiv+1
 10479  0047E8  C0A3  F091         	movff	___aodiv@quotient+2,?___aodiv+2
 10480  0047EC  C0A4  F092         	movff	___aodiv@quotient+3,?___aodiv+3
 10481  0047F0  C0A5  F093         	movff	___aodiv@quotient+4,?___aodiv+4
 10482  0047F4  C0A6  F094         	movff	___aodiv@quotient+5,?___aodiv+5
 10483  0047F8  C0A7  F095         	movff	___aodiv@quotient+6,?___aodiv+6
 10484  0047FC  C0A8  F096         	movff	___aodiv@quotient+7,?___aodiv+7
 10485  004800                     
 10486                           ; BSR set to: 0
 10487  004800  0012               	return		;funcret
 10488  004802                     __end_of___aodiv:
 10489                           	opt callstack 0
 10490                           
 10491 ;; *************** function _ctoa *****************
 10492 ;; Defined at:
 10493 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 10494 ;; Parameters:    Size  Location     Type
 10495 ;;  fp              2   76[BANK0 ] PTR struct _IO_FILE
 10496 ;;		 -> vsnprintf@f(6), NULL(0), 
 10497 ;;  c               1   78[BANK0 ] unsigned char 
 10498 ;; Auto vars:     Size  Location     Type
 10499 ;;  w               2   79[BANK0 ] int 
 10500 ;;  l               2    0        int 
 10501 ;; Return value:  Size  Location     Type
 10502 ;;                  2   76[BANK0 ] int 
 10503 ;; Registers used:
 10504 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10505 ;; Tracked objects:
 10506 ;;		On entry : 0/0
 10507 ;;		On exit  : 0/0
 10508 ;;		Unchanged: 0/0
 10509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10510 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10511 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10513 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10514 ;;Total ram usage:        5 bytes
 10515 ;; Hardware stack levels used:    1
 10516 ;; Hardware stack levels required when called:   18
 10517 ;; This function calls:
 10518 ;;		_pad
 10519 ;; This function is called by:
 10520 ;;		_vfpfcnvrt
 10521 ;; This function uses a non-reentrant model
 10522 ;;
 10523                           
 10524                           	psect	text26
 10525  005F2A                     __ptext26:
 10526                           	opt callstack 0
 10527  005F2A                     _ctoa:
 10528                           	opt callstack 8
 10529  005F2A                     
 10530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 10531  005F2A  0100               	movlb	0	; () banked
 10532  005F2C  51B5               	movf	_width& (0+255),w,b
 10533  005F2E  11B6               	iorwf	(_width+1)& (0+255),w,b
 10534  005F30  A4D8               	btfss	status,2,c
 10535  005F32  EF9D  F02F         	goto	u10641
 10536  005F36  EF9F  F02F         	goto	u10640
 10537  005F3A                     u10641:
 10538  005F3A  EFA5  F02F         	goto	l8618
 10539  005F3E                     u10640:
 10540  005F3E                     
 10541                           ; BSR set to: 0
 10542  005F3E  C0B5  F0AF         	movff	_width,ctoa@w
 10543  005F42  C0B6  F0B0         	movff	_width+1,ctoa@w+1
 10544  005F46  EFAB  F02F         	goto	l8620
 10545  005F4A                     l8618:
 10546                           
 10547                           ; BSR set to: 0
 10548  005F4A  0EFF               	movlw	255
 10549  005F4C  25B5               	addwf	_width& (0+255),w,b
 10550  005F4E  6FAF               	movwf	ctoa@w& (0+255),b
 10551  005F50  0EFF               	movlw	255
 10552  005F52  21B6               	addwfc	(_width+1)& (0+255),w,b
 10553  005F54  6FB0               	movwf	(ctoa@w+1)& (0+255),b
 10554  005F56                     l8620:
 10555                           
 10556                           ; BSR set to: 0
 10557                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 10558  005F56  C0AE  F189         	movff	ctoa@c,_dbuf
 10559  005F5A                     
 10560                           ; BSR set to: 0
 10561                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 10562  005F5A  0E00               	movlw	0
 10563  005F5C  0101               	movlb	1	; () banked
 10564  005F5E  6F8A               	movwf	(_dbuf+1)& (0+255),b
 10565  005F60                     
 10566                           ; BSR set to: 1
 10567                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 10568  005F60  C0AC  F0A1         	movff	ctoa@fp,pad@fp
 10569  005F64  C0AD  F0A2         	movff	ctoa@fp+1,pad@fp+1
 10570  005F68  0E89               	movlw	low _dbuf
 10571  005F6A  0100               	movlb	0	; () banked
 10572  005F6C  6FA3               	movwf	pad@buf& (0+255),b
 10573  005F6E  0E01               	movlw	high _dbuf
 10574  005F70  6FA4               	movwf	(pad@buf+1)& (0+255),b
 10575  005F72  C0AF  F0A5         	movff	ctoa@w,pad@p
 10576  005F76  C0B0  F0A6         	movff	ctoa@w+1,pad@p+1
 10577  005F7A  EC6C  F02C         	call	_pad	;wreg free
 10578  005F7E  C0A1  F0AC         	movff	?_pad,?_ctoa
 10579  005F82  C0A2  F0AD         	movff	?_pad+1,?_ctoa+1
 10580  005F86  0012               	return		;funcret
 10581  005F88                     __end_of_ctoa:
 10582                           	opt callstack 0
 10583                           
 10584 ;; *************** function _pad *****************
 10585 ;; Defined at:
 10586 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 10587 ;; Parameters:    Size  Location     Type
 10588 ;;  fp              2   65[BANK0 ] PTR struct _IO_FILE
 10589 ;;		 -> vsnprintf@f(6), NULL(0), 
 10590 ;;  buf             2   67[BANK0 ] PTR unsigned char 
 10591 ;;		 -> dbuf(32), 
 10592 ;;  p               2   69[BANK0 ] int 
 10593 ;; Auto vars:     Size  Location     Type
 10594 ;;  w               2   74[BANK0 ] int 
 10595 ;;  i               2   72[BANK0 ] int 
 10596 ;; Return value:  Size  Location     Type
 10597 ;;                  2   65[BANK0 ] int 
 10598 ;; Registers used:
 10599 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10600 ;; Tracked objects:
 10601 ;;		On entry : 0/0
 10602 ;;		On exit  : 0/0
 10603 ;;		Unchanged: 0/0
 10604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10605 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10606 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10607 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10608 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10609 ;;Total ram usage:       11 bytes
 10610 ;; Hardware stack levels used:    1
 10611 ;; Hardware stack levels required when called:   17
 10612 ;; This function calls:
 10613 ;;		_fputc
 10614 ;;		_fputs
 10615 ;;		_strlen
 10616 ;; This function is called by:
 10617 ;;		_ctoa
 10618 ;;		_dtoa
 10619 ;;		_otoa
 10620 ;;		_utoa
 10621 ;;		_xtoa
 10622 ;; This function uses a non-reentrant model
 10623 ;;
 10624                           
 10625                           	psect	text27
 10626  0058D8                     __ptext27:
 10627                           	opt callstack 0
 10628  0058D8                     _pad:
 10629                           	opt callstack 8
 10630  0058D8                     
 10631                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 10632  0058D8  0100               	movlb	0	; () banked
 10633  0058DA  A1B9               	btfss	_flags& (0+255),0,b
 10634  0058DC  EF72  F02C         	goto	u9701
 10635  0058E0  EF74  F02C         	goto	u9700
 10636  0058E4                     u9701:
 10637  0058E4  EF7E  F02C         	goto	l8052
 10638  0058E8                     u9700:
 10639  0058E8                     
 10640                           ; BSR set to: 0
 10641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 10642  0058E8  C0A3  F09A         	movff	pad@buf,fputs@s
 10643  0058EC  C0A4  F09B         	movff	pad@buf+1,fputs@s+1
 10644  0058F0  C0A1  F09C         	movff	pad@fp,fputs@fp
 10645  0058F4  C0A2  F09D         	movff	pad@fp+1,fputs@fp+1
 10646  0058F8  ECEA  F030         	call	_fputs	;wreg free
 10647  0058FC                     l8052:
 10648                           
 10649                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 10650  0058FC  0100               	movlb	0	; () banked
 10651  0058FE  BFA6               	btfsc	(pad@p+1)& (0+255),7,b
 10652  005900  EF84  F02C         	goto	u9711
 10653  005904  EF86  F02C         	goto	u9710
 10654  005908                     u9711:
 10655  005908  EF8C  F02C         	goto	l8056
 10656  00590C                     u9710:
 10657  00590C                     
 10658                           ; BSR set to: 0
 10659  00590C  C0A5  F0AA         	movff	pad@p,pad@w
 10660  005910  C0A6  F0AB         	movff	pad@p+1,pad@w+1
 10661  005914  EF90  F02C         	goto	l719
 10662  005918                     l8056:
 10663                           
 10664                           ; BSR set to: 0
 10665  005918  0E00               	movlw	0
 10666  00591A  6FAB               	movwf	(pad@w+1)& (0+255),b
 10667  00591C  0E00               	movlw	0
 10668  00591E  6FAA               	movwf	pad@w& (0+255),b
 10669  005920                     l719:
 10670                           
 10671                           ; BSR set to: 0
 10672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 10673  005920  0E00               	movlw	0
 10674  005922  6FA9               	movwf	(pad@i+1)& (0+255),b
 10675  005924  0E00               	movlw	0
 10676  005926  6FA8               	movwf	pad@i& (0+255),b
 10677                           
 10678                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10679  005928  EFA3  F02C         	goto	l8062
 10680  00592C                     l8058:
 10681                           
 10682                           ; BSR set to: 0
 10683                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 10684  00592C  0E00               	movlw	0
 10685  00592E  6F92               	movwf	(fputc@c+1)& (0+255),b
 10686  005930  0E20               	movlw	32
 10687  005932  6F91               	movwf	fputc@c& (0+255),b
 10688  005934  C0A1  F093         	movff	pad@fp,fputc@fp
 10689  005938  C0A2  F094         	movff	pad@fp+1,fputc@fp+1
 10690  00593C  EC06  F02C         	call	_fputc	;wreg free
 10691  005940                     
 10692                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 10693  005940  0100               	movlb	0	; () banked
 10694  005942  4BA8               	infsnz	pad@i& (0+255),f,b
 10695  005944  2BA9               	incf	(pad@i+1)& (0+255),f,b
 10696  005946                     l8062:
 10697                           
 10698                           ; BSR set to: 0
 10699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10700  005946  51AA               	movf	pad@w& (0+255),w,b
 10701  005948  5DA8               	subwf	pad@i& (0+255),w,b
 10702  00594A  51A9               	movf	(pad@i+1)& (0+255),w,b
 10703  00594C  0A80               	xorlw	128
 10704  00594E  6FA7               	movwf	??_pad& (0+255),b
 10705  005950  51AB               	movf	(pad@w+1)& (0+255),w,b
 10706  005952  0A80               	xorlw	128
 10707  005954  59A7               	subwfb	??_pad& (0+255),w,b
 10708  005956  A0D8               	btfss	status,0,c
 10709  005958  EFB0  F02C         	goto	u9721
 10710  00595C  EFB2  F02C         	goto	u9720
 10711  005960                     u9721:
 10712  005960  EF96  F02C         	goto	l8058
 10713  005964                     u9720:
 10714  005964                     
 10715                           ; BSR set to: 0
 10716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 10717  005964  B1B9               	btfsc	_flags& (0+255),0,b
 10718  005966  EFB7  F02C         	goto	u9731
 10719  00596A  EFB9  F02C         	goto	u9730
 10720  00596E                     u9731:
 10721  00596E  EFC3  F02C         	goto	l8066
 10722  005972                     u9730:
 10723  005972                     
 10724                           ; BSR set to: 0
 10725                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 10726  005972  C0A3  F09A         	movff	pad@buf,fputs@s
 10727  005976  C0A4  F09B         	movff	pad@buf+1,fputs@s+1
 10728  00597A  C0A1  F09C         	movff	pad@fp,fputs@fp
 10729  00597E  C0A2  F09D         	movff	pad@fp+1,fputs@fp+1
 10730  005982  ECEA  F030         	call	_fputs	;wreg free
 10731  005986                     l8066:
 10732                           
 10733                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 10734  005986  C0A3  F08F         	movff	pad@buf,strlen@s
 10735  00598A  C0A4  F090         	movff	pad@buf+1,strlen@s+1
 10736  00598E  EC93  F032         	call	_strlen	;wreg free
 10737  005992  0100               	movlb	0	; () banked
 10738  005994  51AA               	movf	pad@w& (0+255),w,b
 10739  005996  258F               	addwf	?_strlen& (0+255),w,b
 10740  005998  6FA1               	movwf	?_pad& (0+255),b
 10741  00599A  51AB               	movf	(pad@w+1)& (0+255),w,b
 10742  00599C  2190               	addwfc	(?_strlen+1)& (0+255),w,b
 10743  00599E  6FA2               	movwf	(?_pad+1)& (0+255),b
 10744  0059A0                     
 10745                           ; BSR set to: 0
 10746  0059A0  0012               	return		;funcret
 10747  0059A2                     __end_of_pad:
 10748                           	opt callstack 0
 10749                           
 10750 ;; *************** function _strlen *****************
 10751 ;; Defined at:
 10752 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 10753 ;; Parameters:    Size  Location     Type
 10754 ;;  s               2   47[BANK0 ] PTR const unsigned char 
 10755 ;;		 -> ?_snprintf(2), ?_printf(2), stoa@nuls(7), dbuf(32), 
 10756 ;; Auto vars:     Size  Location     Type
 10757 ;;  a               2   49[BANK0 ] PTR const unsigned char 
 10758 ;;		 -> ?_snprintf(2), ?_printf(2), stoa@nuls(7), dbuf(32), 
 10759 ;; Return value:  Size  Location     Type
 10760 ;;                  2   47[BANK0 ] unsigned int 
 10761 ;; Registers used:
 10762 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10763 ;; Tracked objects:
 10764 ;;		On entry : 0/0
 10765 ;;		On exit  : 0/0
 10766 ;;		Unchanged: 0/0
 10767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10768 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10769 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10771 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10772 ;;Total ram usage:        4 bytes
 10773 ;; Hardware stack levels used:    1
 10774 ;; Hardware stack levels required when called:   13
 10775 ;; This function calls:
 10776 ;;		Nothing
 10777 ;; This function is called by:
 10778 ;;		_pad
 10779 ;;		_stoa
 10780 ;; This function uses a non-reentrant model
 10781 ;;
 10782                           
 10783                           	psect	text28
 10784  006526                     __ptext28:
 10785                           	opt callstack 0
 10786  006526                     _strlen:
 10787                           	opt callstack 11
 10788  006526  C08F  F091         	movff	strlen@s,strlen@a
 10789  00652A  C090  F092         	movff	strlen@s+1,strlen@a+1
 10790  00652E  EF9C  F032         	goto	l7706
 10791  006532                     l7704:
 10792  006532  0100               	movlb	0	; () banked
 10793  006534  4B8F               	infsnz	strlen@s& (0+255),f,b
 10794  006536  2B90               	incf	(strlen@s+1)& (0+255),f,b
 10795  006538                     l7706:
 10796  006538  C08F  FFD9         	movff	strlen@s,fsr2l
 10797  00653C  C090  FFDA         	movff	strlen@s+1,fsr2h
 10798  006540  50DF               	movf	indf2,w,c
 10799  006542  A4D8               	btfss	status,2,c
 10800  006544  EFA6  F032         	goto	u8901
 10801  006548  EFA8  F032         	goto	u8900
 10802  00654C                     u8901:
 10803  00654C  EF99  F032         	goto	l7704
 10804  006550                     u8900:
 10805  006550  0100               	movlb	0	; () banked
 10806  006552  5191               	movf	strlen@a& (0+255),w,b
 10807  006554  5D8F               	subwf	strlen@s& (0+255),w,b
 10808  006556  6F8F               	movwf	?_strlen& (0+255),b
 10809  006558  5192               	movf	(strlen@a+1)& (0+255),w,b
 10810  00655A  5990               	subwfb	(strlen@s+1)& (0+255),w,b
 10811  00655C  6F90               	movwf	(?_strlen+1)& (0+255),b
 10812  00655E                     
 10813                           ; BSR set to: 0
 10814  00655E  0012               	return		;funcret
 10815  006560                     __end_of_strlen:
 10816                           	opt callstack 0
 10817                           
 10818 ;; *************** function _fputs *****************
 10819 ;; Defined at:
 10820 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 10821 ;; Parameters:    Size  Location     Type
 10822 ;;  s               2   58[BANK0 ] PTR const unsigned char 
 10823 ;;		 -> dbuf(32), 
 10824 ;;  fp              2   60[BANK0 ] PTR struct _IO_FILE
 10825 ;;		 -> vsnprintf@f(6), NULL(0), 
 10826 ;; Auto vars:     Size  Location     Type
 10827 ;;  i               2   63[BANK0 ] int 
 10828 ;;  c               1   62[BANK0 ] unsigned char 
 10829 ;; Return value:  Size  Location     Type
 10830 ;;                  2   58[BANK0 ] int 
 10831 ;; Registers used:
 10832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10833 ;; Tracked objects:
 10834 ;;		On entry : 0/0
 10835 ;;		On exit  : 0/0
 10836 ;;		Unchanged: 0/0
 10837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10838 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10839 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10841 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10842 ;;Total ram usage:        7 bytes
 10843 ;; Hardware stack levels used:    1
 10844 ;; Hardware stack levels required when called:   16
 10845 ;; This function calls:
 10846 ;;		_fputc
 10847 ;; This function is called by:
 10848 ;;		_pad
 10849 ;; This function uses a non-reentrant model
 10850 ;;
 10851                           
 10852                           	psect	text29
 10853  0061D4                     __ptext29:
 10854                           	opt callstack 0
 10855  0061D4                     _fputs:
 10856                           	opt callstack 8
 10857  0061D4  0E00               	movlw	0
 10858  0061D6  0100               	movlb	0	; () banked
 10859  0061D8  6FA0               	movwf	(fputs@i+1)& (0+255),b
 10860  0061DA  0E00               	movlw	0
 10861  0061DC  6F9F               	movwf	fputs@i& (0+255),b
 10862  0061DE  EFFD  F030         	goto	l7700
 10863  0061E2                     l7696:
 10864                           
 10865                           ; BSR set to: 0
 10866  0061E2  C09E  F091         	movff	fputs@c,fputc@c
 10867  0061E6  6B92               	clrf	(fputc@c+1)& (0+255),b
 10868  0061E8  C09C  F093         	movff	fputs@fp,fputc@fp
 10869  0061EC  C09D  F094         	movff	fputs@fp+1,fputc@fp+1
 10870  0061F0  EC06  F02C         	call	_fputc	;wreg free
 10871  0061F4  0100               	movlb	0	; () banked
 10872  0061F6  4B9F               	infsnz	fputs@i& (0+255),f,b
 10873  0061F8  2BA0               	incf	(fputs@i+1)& (0+255),f,b
 10874  0061FA                     l7700:
 10875                           
 10876                           ; BSR set to: 0
 10877  0061FA  519F               	movf	fputs@i& (0+255),w,b
 10878  0061FC  259A               	addwf	fputs@s& (0+255),w,b
 10879  0061FE  6ED9               	movwf	fsr2l,c
 10880  006200  51A0               	movf	(fputs@i+1)& (0+255),w,b
 10881  006202  219B               	addwfc	(fputs@s+1)& (0+255),w,b
 10882  006204  6EDA               	movwf	fsr2h,c
 10883  006206  50DF               	movf	indf2,w,c
 10884  006208  6F9E               	movwf	fputs@c& (0+255),b
 10885  00620A  519E               	movf	fputs@c& (0+255),w,b
 10886  00620C  A4D8               	btfss	status,2,c
 10887  00620E  EF0B  F031         	goto	u8891
 10888  006212  EF0D  F031         	goto	u8890
 10889  006216                     u8891:
 10890  006216  EFF1  F030         	goto	l7696
 10891  00621A                     u8890:
 10892  00621A                     
 10893                           ; BSR set to: 0
 10894  00621A  0012               	return		;funcret
 10895  00621C                     __end_of_fputs:
 10896                           	opt callstack 0
 10897                           
 10898 ;; *************** function _fputc *****************
 10899 ;; Defined at:
 10900 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 10901 ;; Parameters:    Size  Location     Type
 10902 ;;  c               2   49[BANK0 ] int 
 10903 ;;  fp              2   51[BANK0 ] PTR struct _IO_FILE
 10904 ;;		 -> vsnprintf@f(6), NULL(0), 
 10905 ;; Auto vars:     Size  Location     Type
 10906 ;;		None
 10907 ;; Return value:  Size  Location     Type
 10908 ;;                  2   49[BANK0 ] int 
 10909 ;; Registers used:
 10910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10911 ;; Tracked objects:
 10912 ;;		On entry : 0/0
 10913 ;;		On exit  : 0/0
 10914 ;;		Unchanged: 0/0
 10915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10916 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10918 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10919 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10920 ;;Total ram usage:        9 bytes
 10921 ;; Hardware stack levels used:    1
 10922 ;; Hardware stack levels required when called:   15
 10923 ;; This function calls:
 10924 ;;		_putch
 10925 ;; This function is called by:
 10926 ;;		_pad
 10927 ;;		_stoa
 10928 ;;		_vfpfcnvrt
 10929 ;;		_fputs
 10930 ;; This function uses a non-reentrant model
 10931 ;;
 10932                           
 10933                           	psect	text30
 10934  00580C                     __ptext30:
 10935                           	opt callstack 0
 10936  00580C                     _fputc:
 10937                           	opt callstack 8
 10938  00580C  0100               	movlb	0	; () banked
 10939  00580E  5193               	movf	fputc@fp& (0+255),w,b
 10940  005810  1194               	iorwf	(fputc@fp+1)& (0+255),w,b
 10941  005812  B4D8               	btfsc	status,2,c
 10942  005814  EF0E  F02C         	goto	u8491
 10943  005818  EF10  F02C         	goto	u8490
 10944  00581C                     u8491:
 10945  00581C  EF19  F02C         	goto	l7500
 10946  005820                     u8490:
 10947  005820                     
 10948                           ; BSR set to: 0
 10949  005820  5193               	movf	fputc@fp& (0+255),w,b
 10950  005822  1194               	iorwf	(fputc@fp+1)& (0+255),w,b
 10951  005824  A4D8               	btfss	status,2,c
 10952  005826  EF17  F02C         	goto	u8501
 10953  00582A  EF19  F02C         	goto	u8500
 10954  00582E                     u8501:
 10955  00582E  EF1E  F02C         	goto	l7502
 10956  005832                     u8500:
 10957  005832                     l7500:
 10958                           
 10959                           ; BSR set to: 0
 10960  005832  5191               	movf	fputc@c& (0+255),w,b
 10961  005834  ECBB  F034         	call	_putch
 10962  005838  EF6B  F02C         	goto	l1673
 10963  00583C                     l7502:
 10964                           
 10965                           ; BSR set to: 0
 10966  00583C  EE20 F004          	lfsr	2,4
 10967  005840  5193               	movf	fputc@fp& (0+255),w,b
 10968  005842  26D9               	addwf	fsr2l,f,c
 10969  005844  5194               	movf	(fputc@fp+1)& (0+255),w,b
 10970  005846  22DA               	addwfc	fsr2h,f,c
 10971  005848  50DE               	movf	postinc2,w,c
 10972  00584A  10DE               	iorwf	postinc2,w,c
 10973  00584C  B4D8               	btfsc	status,2,c
 10974  00584E  EF2B  F02C         	goto	u8511
 10975  005852  EF2D  F02C         	goto	u8510
 10976  005856                     u8511:
 10977  005856  EF48  F02C         	goto	l7506
 10978  00585A                     u8510:
 10979  00585A                     
 10980                           ; BSR set to: 0
 10981  00585A  EE20 F004          	lfsr	2,4
 10982  00585E  5193               	movf	fputc@fp& (0+255),w,b
 10983  005860  26D9               	addwf	fsr2l,f,c
 10984  005862  5194               	movf	(fputc@fp+1)& (0+255),w,b
 10985  005864  22DA               	addwfc	fsr2h,f,c
 10986  005866  EE10 F002          	lfsr	1,2
 10987  00586A  5193               	movf	fputc@fp& (0+255),w,b
 10988  00586C  26E1               	addwf	fsr1l,f,c
 10989  00586E  5194               	movf	(fputc@fp+1)& (0+255),w,b
 10990  005870  22E2               	addwfc	fsr1h,f,c
 10991  005872  50DE               	movf	postinc2,w,c
 10992  005874  5CE6               	subwf	postinc1,w,c
 10993  005876  50E6               	movf	postinc1,w,c
 10994  005878  0A80               	xorlw	128
 10995  00587A  6F99               	movwf	(??_fputc+4)& (0+255),b
 10996  00587C  50DE               	movf	postinc2,w,c
 10997  00587E  0A80               	xorlw	128
 10998  005880  5999               	subwfb	(??_fputc+4)& (0+255),w,b
 10999  005882  B0D8               	btfsc	status,0,c
 11000  005884  EF46  F02C         	goto	u8521
 11001  005888  EF48  F02C         	goto	u8520
 11002  00588C                     u8521:
 11003  00588C  EF6B  F02C         	goto	l1673
 11004  005890                     u8520:
 11005  005890                     l7506:
 11006                           
 11007                           ; BSR set to: 0
 11008  005890  EE20 F002          	lfsr	2,2
 11009  005894  5193               	movf	fputc@fp& (0+255),w,b
 11010  005896  26D9               	addwf	fsr2l,f,c
 11011  005898  5194               	movf	(fputc@fp+1)& (0+255),w,b
 11012  00589A  22DA               	addwfc	fsr2h,f,c
 11013  00589C  CFDE F095          	movff	postinc2,??_fputc
 11014  0058A0  CFDD F096          	movff	postdec2,??_fputc+1
 11015  0058A4  C093  FFD9         	movff	fputc@fp,fsr2l
 11016  0058A8  C094  FFDA         	movff	fputc@fp+1,fsr2h
 11017  0058AC  CFDE F097          	movff	postinc2,??_fputc+2
 11018  0058B0  CFDD F098          	movff	postdec2,??_fputc+3
 11019  0058B4  5195               	movf	??_fputc& (0+255),w,b
 11020  0058B6  2597               	addwf	(??_fputc+2)& (0+255),w,b
 11021  0058B8  6ED9               	movwf	fsr2l,c
 11022  0058BA  5196               	movf	(??_fputc+1)& (0+255),w,b
 11023  0058BC  2198               	addwfc	(??_fputc+3)& (0+255),w,b
 11024  0058BE  6EDA               	movwf	fsr2h,c
 11025  0058C0  C091  FFDF         	movff	fputc@c,indf2
 11026  0058C4  EE20 F002          	lfsr	2,2
 11027  0058C8  5193               	movf	fputc@fp& (0+255),w,b
 11028  0058CA  26D9               	addwf	fsr2l,f,c
 11029  0058CC  5194               	movf	(fputc@fp+1)& (0+255),w,b
 11030  0058CE  22DA               	addwfc	fsr2h,f,c
 11031  0058D0  2ADE               	incf	postinc2,f,c
 11032  0058D2  0E00               	movlw	0
 11033  0058D4  22DD               	addwfc	postdec2,f,c
 11034  0058D6                     l1673:
 11035  0058D6  0012               	return		;funcret
 11036  0058D8                     __end_of_fputc:
 11037                           	opt callstack 0
 11038                           
 11039 ;; *************** function _putch *****************
 11040 ;; Defined at:
 11041 ;;		line 146 in file "mcc_generated_files/eusart1.c"
 11042 ;; Parameters:    Size  Location     Type
 11043 ;;  txData          1    wreg     unsigned char 
 11044 ;; Auto vars:     Size  Location     Type
 11045 ;;  txData          1   48[BANK0 ] unsigned char 
 11046 ;; Return value:  Size  Location     Type
 11047 ;;                  1    wreg      void 
 11048 ;; Registers used:
 11049 ;;		wreg, status,2, cstack
 11050 ;; Tracked objects:
 11051 ;;		On entry : 0/0
 11052 ;;		On exit  : 0/0
 11053 ;;		Unchanged: 0/0
 11054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11056 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11058 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11059 ;;Total ram usage:        1 bytes
 11060 ;; Hardware stack levels used:    1
 11061 ;; Hardware stack levels required when called:   14
 11062 ;; This function calls:
 11063 ;;		_EUSART1_Write
 11064 ;; This function is called by:
 11065 ;;		_fputc
 11066 ;; This function uses a non-reentrant model
 11067 ;;
 11068                           
 11069                           	psect	text31
 11070  006976                     __ptext31:
 11071                           	opt callstack 0
 11072  006976                     _putch:
 11073                           	opt callstack 8
 11074                           
 11075                           ;incstack = 0
 11076                           ;putch@txData stored from wreg
 11077  006976  0100               	movlb	0	; () banked
 11078  006978  6F90               	movwf	putch@txData& (0+255),b
 11079  00697A                     
 11080                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
 11081  00697A  0100               	movlb	0	; () banked
 11082  00697C  5190               	movf	putch@txData& (0+255),w,b
 11083  00697E  EC65  F034         	call	_EUSART1_Write
 11084  006982  0012               	return		;funcret
 11085  006984                     __end_of_putch:
 11086                           	opt callstack 0
 11087                           
 11088 ;; *************** function _EUSART1_Write *****************
 11089 ;; Defined at:
 11090 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 11091 ;; Parameters:    Size  Location     Type
 11092 ;;  txData          1    wreg     unsigned char 
 11093 ;; Auto vars:     Size  Location     Type
 11094 ;;  txData          1   47[BANK0 ] unsigned char 
 11095 ;; Return value:  Size  Location     Type
 11096 ;;                  1    wreg      void 
 11097 ;; Registers used:
 11098 ;;		wreg
 11099 ;; Tracked objects:
 11100 ;;		On entry : 0/0
 11101 ;;		On exit  : 0/0
 11102 ;;		Unchanged: 0/0
 11103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11105 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11107 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11108 ;;Total ram usage:        1 bytes
 11109 ;; Hardware stack levels used:    1
 11110 ;; Hardware stack levels required when called:   13
 11111 ;; This function calls:
 11112 ;;		Nothing
 11113 ;; This function is called by:
 11114 ;;		_putch
 11115 ;;		_read_from_usart
 11116 ;; This function uses a non-reentrant model
 11117 ;;
 11118                           
 11119                           	psect	text32
 11120  0068CA                     __ptext32:
 11121                           	opt callstack 0
 11122  0068CA                     _EUSART1_Write:
 11123                           	opt callstack 8
 11124                           
 11125                           ;incstack = 0
 11126                           ;EUSART1_Write@txData stored from wreg
 11127  0068CA  0100               	movlb	0	; () banked
 11128  0068CC  6F8F               	movwf	EUSART1_Write@txData& (0+255),b
 11129  0068CE                     l297:
 11130                           
 11131                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
 11132  0068CE  A89E               	btfss	158,4,c	;volatile
 11133  0068D0  EF6C  F034         	goto	u8401
 11134  0068D4  EF6E  F034         	goto	u8400
 11135  0068D8                     u8401:
 11136  0068D8  EF67  F034         	goto	l297
 11137  0068DC                     u8400:
 11138  0068DC                     
 11139                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
 11140  0068DC  C08F  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
 11141  0068E0  0012               	return		;funcret
 11142  0068E2                     __end_of_EUSART1_Write:
 11143                           	opt callstack 0
 11144                           
 11145 ;; *************** function _atoi *****************
 11146 ;; Defined at:
 11147 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 11148 ;; Parameters:    Size  Location     Type
 11149 ;;  s               2   54[BANK0 ] PTR const unsigned char 
 11150 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
 11151 ;;		 -> STR_4(22), STR_3(12), read_from_usart@data(10), STR_1(13), 
 11152 ;; Auto vars:     Size  Location     Type
 11153 ;;  n               2   67[BANK0 ] int 
 11154 ;;  neg             2   60[BANK0 ] int 
 11155 ;; Return value:  Size  Location     Type
 11156 ;;                  2   54[BANK0 ] int 
 11157 ;; Registers used:
 11158 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11159 ;; Tracked objects:
 11160 ;;		On entry : 0/0
 11161 ;;		On exit  : 0/0
 11162 ;;		Unchanged: 0/0
 11163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11164 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11165 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11166 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11167 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11168 ;;Total ram usage:       15 bytes
 11169 ;; Hardware stack levels used:    1
 11170 ;; Hardware stack levels required when called:   14
 11171 ;; This function calls:
 11172 ;;		___wmul
 11173 ;;		_isdigit
 11174 ;;		_isspace
 11175 ;; This function is called by:
 11176 ;;		_read_from_usart
 11177 ;;		_vfpfcnvrt
 11178 ;; This function uses a non-reentrant model
 11179 ;;
 11180                           
 11181                           	psect	text33
 11182  003AE8                     __ptext33:
 11183                           	opt callstack 0
 11184  003AE8                     _atoi:
 11185                           	opt callstack 12
 11186  003AE8  0E00               	movlw	0
 11187  003AEA  0100               	movlb	0	; () banked
 11188  003AEC  6FA4               	movwf	(atoi@n+1)& (0+255),b
 11189  003AEE  0E00               	movlw	0
 11190  003AF0  6FA3               	movwf	atoi@n& (0+255),b
 11191  003AF2  0E00               	movlw	0
 11192  003AF4  6F9D               	movwf	(atoi@neg+1)& (0+255),b
 11193  003AF6  0E00               	movlw	0
 11194  003AF8  6F9C               	movwf	atoi@neg& (0+255),b
 11195  003AFA  EF81  F01D         	goto	l8568
 11196  003AFE                     l8566:
 11197                           
 11198                           ; BSR set to: 0
 11199  003AFE  4B96               	infsnz	atoi@s& (0+255),f,b
 11200  003B00  2B97               	incf	(atoi@s+1)& (0+255),f,b
 11201  003B02                     l8568:
 11202                           
 11203                           ; BSR set to: 0
 11204  003B02  0E01               	movlw	1
 11205  003B04  6FA2               	movwf	_atoi$2439& (0+255),b
 11206  003B06                     
 11207                           ; BSR set to: 0
 11208  003B06  C096  FFF6         	movff	atoi@s,tblptrl
 11209  003B0A  C097  FFF7         	movff	atoi@s+1,tblptrh
 11210  003B0E  0E00               	movlw	low (__mediumconst shr (0+16))
 11211  003B10  6EF8               	movwf	tblptru,c
 11212  003B12  0E0E               	movlw	(high __ramtop+-1)
 11213  003B14  64F7               	cpfsgt	tblptrh,c
 11214  003B16  D003               	bra	u10517
 11215  003B18  0008               	tblrd		*
 11216  003B1A  50F5               	movf	tablat,w,c
 11217  003B1C  D005               	bra	u10510
 11218  003B1E                     u10517:
 11219  003B1E  CFF6 FFE9          	movff	tblptrl,fsr0l
 11220  003B22  CFF7 FFEA          	movff	tblptrh,fsr0h
 11221  003B26  50EF               	movf	indf0,w,c
 11222  003B28                     u10510:
 11223  003B28  0A20               	xorlw	32
 11224  003B2A  B4D8               	btfsc	status,2,c
 11225  003B2C  EF9A  F01D         	goto	u10521
 11226  003B30  EF9C  F01D         	goto	u10520
 11227  003B34                     u10521:
 11228  003B34  EFC6  F01D         	goto	l8576
 11229  003B38                     u10520:
 11230  003B38  0EF7               	movlw	247
 11231  003B3A  0100               	movlb	0	; () banked
 11232  003B3C  6F98               	movwf	??_atoi& (0+255),b
 11233  003B3E  0EFF               	movlw	255
 11234  003B40  6F99               	movwf	(??_atoi+1)& (0+255),b
 11235  003B42  C096  FFF6         	movff	atoi@s,tblptrl
 11236  003B46  C097  FFF7         	movff	atoi@s+1,tblptrh
 11237  003B4A  0E00               	movlw	low (__mediumconst shr (0+16))
 11238  003B4C  6EF8               	movwf	tblptru,c
 11239  003B4E  0E0E               	movlw	(high __ramtop+-1)
 11240  003B50  64F7               	cpfsgt	tblptrh,c
 11241  003B52  D003               	bra	u10537
 11242  003B54  0008               	tblrd		*
 11243  003B56  50F5               	movf	tablat,w,c
 11244  003B58  D005               	bra	u10530
 11245  003B5A                     u10537:
 11246  003B5A  CFF6 FFE9          	movff	tblptrl,fsr0l
 11247  003B5E  CFF7 FFEA          	movff	tblptrh,fsr0h
 11248  003B62  50EF               	movf	indf0,w,c
 11249  003B64                     u10530:
 11250  003B64  0100               	movlb	0	; () banked
 11251  003B66  6F9A               	movwf	(??_atoi+2)& (0+255),b
 11252  003B68  6B9B               	clrf	(??_atoi+3)& (0+255),b
 11253  003B6A  5198               	movf	??_atoi& (0+255),w,b
 11254  003B6C  279A               	addwf	(??_atoi+2)& (0+255),f,b
 11255  003B6E  5199               	movf	(??_atoi+1)& (0+255),w,b
 11256  003B70  239B               	addwfc	(??_atoi+3)& (0+255),f,b
 11257  003B72  519B               	movf	(??_atoi+3)& (0+255),w,b
 11258  003B74  E109               	bnz	u10540
 11259  003B76  0E05               	movlw	5
 11260  003B78  5D9A               	subwf	(??_atoi+2)& (0+255),w,b
 11261  003B7A  A0D8               	btfss	status,0,c
 11262  003B7C  EFC2  F01D         	goto	u10541
 11263  003B80  EFC4  F01D         	goto	u10540
 11264  003B84                     u10541:
 11265  003B84  EFC6  F01D         	goto	l8576
 11266  003B88                     u10540:
 11267  003B88                     
 11268                           ; BSR set to: 0
 11269  003B88  0E00               	movlw	0
 11270  003B8A  6FA2               	movwf	_atoi$2439& (0+255),b
 11271  003B8C                     l8576:
 11272  003B8C  C0A2  F09E         	movff	_atoi$2439,_atoi$2438
 11273  003B90  0100               	movlb	0	; () banked
 11274  003B92  6B9F               	clrf	(_atoi$2438+1)& (0+255),b
 11275  003B94                     
 11276                           ; BSR set to: 0
 11277  003B94  519E               	movf	_atoi$2438& (0+255),w,b
 11278  003B96  119F               	iorwf	(_atoi$2438+1)& (0+255),w,b
 11279  003B98  A4D8               	btfss	status,2,c
 11280  003B9A  EFD1  F01D         	goto	u10551
 11281  003B9E  EFD3  F01D         	goto	u10550
 11282  003BA2                     u10551:
 11283  003BA2  EF7F  F01D         	goto	l8566
 11284  003BA6                     u10550:
 11285  003BA6  EFDD  F01D         	goto	l8586
 11286  003BAA                     l8582:
 11287                           
 11288                           ; BSR set to: 0
 11289  003BAA  0E00               	movlw	0
 11290  003BAC  6F9D               	movwf	(atoi@neg+1)& (0+255),b
 11291  003BAE  0E01               	movlw	1
 11292  003BB0  6F9C               	movwf	atoi@neg& (0+255),b
 11293  003BB2                     l8584:
 11294                           
 11295                           ; BSR set to: 0
 11296  003BB2  4B96               	infsnz	atoi@s& (0+255),f,b
 11297  003BB4  2B97               	incf	(atoi@s+1)& (0+255),f,b
 11298  003BB6  EF2C  F01E         	goto	l8592
 11299  003BBA                     l8586:
 11300                           
 11301                           ; BSR set to: 0
 11302  003BBA  C096  FFF6         	movff	atoi@s,tblptrl
 11303  003BBE  C097  FFF7         	movff	atoi@s+1,tblptrh
 11304  003BC2  0E00               	movlw	low (__mediumconst shr (0+16))
 11305  003BC4  6EF8               	movwf	tblptru,c
 11306  003BC6  0E0E               	movlw	(high __ramtop+-1)
 11307  003BC8  64F7               	cpfsgt	tblptrh,c
 11308  003BCA  D003               	bra	u10567
 11309  003BCC  0008               	tblrd		*
 11310  003BCE  50F5               	movf	tablat,w,c
 11311  003BD0  D005               	bra	u10560
 11312  003BD2                     u10567:
 11313  003BD2  CFF6 FFE9          	movff	tblptrl,fsr0l
 11314  003BD6  CFF7 FFEA          	movff	tblptrh,fsr0h
 11315  003BDA  50EF               	movf	indf0,w,c
 11316  003BDC                     u10560:
 11317  003BDC  0100               	movlb	0	; () banked
 11318  003BDE  6F98               	movwf	??_atoi& (0+255),b
 11319  003BE0  6B99               	clrf	(??_atoi+1)& (0+255),b
 11320                           
 11321                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11322                           ; Switch size 1, requested type "simple"
 11323                           ; Number of cases is 1, Range of values is 0 to 0
 11324                           ; switch strategies available:
 11325                           ; Name         Instructions Cycles
 11326                           ; simple_byte            4     3 (average)
 11327                           ;	Chosen strategy is simple_byte
 11328  003BE2  5199               	movf	(??_atoi+1)& (0+255),w,b
 11329  003BE4  0A00               	xorlw	0	; case 0
 11330  003BE6  B4D8               	btfsc	status,2,c
 11331  003BE8  EFF8  F01D         	goto	l9984
 11332  003BEC  EF2C  F01E         	goto	l8592
 11333  003BF0                     l9984:
 11334                           
 11335                           ; BSR set to: 0
 11336                           ; Switch size 1, requested type "simple"
 11337                           ; Number of cases is 2, Range of values is 43 to 45
 11338                           ; switch strategies available:
 11339                           ; Name         Instructions Cycles
 11340                           ; simple_byte            7     4 (average)
 11341                           ;	Chosen strategy is simple_byte
 11342  003BF0  5198               	movf	??_atoi& (0+255),w,b
 11343  003BF2  0A2B               	xorlw	43	; case 43
 11344  003BF4  B4D8               	btfsc	status,2,c
 11345  003BF6  EFD9  F01D         	goto	l8584
 11346  003BFA  0A06               	xorlw	6	; case 45
 11347  003BFC  B4D8               	btfsc	status,2,c
 11348  003BFE  EFD5  F01D         	goto	l8582
 11349  003C02  EF2C  F01E         	goto	l8592
 11350  003C06                     l8588:
 11351                           
 11352                           ; BSR set to: 0
 11353  003C06  C0A3  F08F         	movff	atoi@n,___wmul@multiplier
 11354  003C0A  C0A4  F090         	movff	atoi@n+1,___wmul@multiplier+1
 11355  003C0E  0E00               	movlw	0
 11356  003C10  6F92               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11357  003C12  0E0A               	movlw	10
 11358  003C14  6F91               	movwf	___wmul@multiplicand& (0+255),b
 11359  003C16  ECF0  F033         	call	___wmul	;wreg free
 11360  003C1A  C096  FFF6         	movff	atoi@s,tblptrl
 11361  003C1E  C097  FFF7         	movff	atoi@s+1,tblptrh
 11362  003C22  0E00               	movlw	low (__mediumconst shr (0+16))
 11363  003C24  6EF8               	movwf	tblptru,c
 11364  003C26  0E0E               	movlw	(high __ramtop+-1)
 11365  003C28  64F7               	cpfsgt	tblptrh,c
 11366  003C2A  D003               	bra	u10577
 11367  003C2C  0008               	tblrd		*
 11368  003C2E  50F5               	movf	tablat,w,c
 11369  003C30  D005               	bra	u10570
 11370  003C32                     u10577:
 11371  003C32  CFF6 FFE9          	movff	tblptrl,fsr0l
 11372  003C36  CFF7 FFEA          	movff	tblptrh,fsr0h
 11373  003C3A  50EF               	movf	indf0,w,c
 11374  003C3C                     u10570:
 11375  003C3C  0100               	movlb	0	; () banked
 11376  003C3E  6F98               	movwf	??_atoi& (0+255),b
 11377  003C40  5198               	movf	??_atoi& (0+255),w,b
 11378  003C42  5F8F               	subwf	?___wmul& (0+255),f,b
 11379  003C44  0E00               	movlw	0
 11380  003C46  5B90               	subwfb	(?___wmul+1)& (0+255),f,b
 11381  003C48  0E30               	movlw	48
 11382  003C4A  258F               	addwf	?___wmul& (0+255),w,b
 11383  003C4C  6FA3               	movwf	atoi@n& (0+255),b
 11384  003C4E  0E00               	movlw	0
 11385  003C50  2190               	addwfc	(?___wmul+1)& (0+255),w,b
 11386  003C52  6FA4               	movwf	(atoi@n+1)& (0+255),b
 11387  003C54  EFD9  F01D         	goto	l8584
 11388  003C58                     l8592:
 11389                           
 11390                           ; BSR set to: 0
 11391  003C58  0ED0               	movlw	208
 11392  003C5A  6F98               	movwf	??_atoi& (0+255),b
 11393  003C5C  0EFF               	movlw	255
 11394  003C5E  6F99               	movwf	(??_atoi+1)& (0+255),b
 11395  003C60  C096  FFF6         	movff	atoi@s,tblptrl
 11396  003C64  C097  FFF7         	movff	atoi@s+1,tblptrh
 11397  003C68  0E00               	movlw	low (__mediumconst shr (0+16))
 11398  003C6A  6EF8               	movwf	tblptru,c
 11399  003C6C  0E0E               	movlw	(high __ramtop+-1)
 11400  003C6E  64F7               	cpfsgt	tblptrh,c
 11401  003C70  D003               	bra	u10587
 11402  003C72  0008               	tblrd		*
 11403  003C74  50F5               	movf	tablat,w,c
 11404  003C76  D005               	bra	u10580
 11405  003C78                     u10587:
 11406  003C78  CFF6 FFE9          	movff	tblptrl,fsr0l
 11407  003C7C  CFF7 FFEA          	movff	tblptrh,fsr0h
 11408  003C80  50EF               	movf	indf0,w,c
 11409  003C82                     u10580:
 11410  003C82  0100               	movlb	0	; () banked
 11411  003C84  6F9A               	movwf	(??_atoi+2)& (0+255),b
 11412  003C86  6B9B               	clrf	(??_atoi+3)& (0+255),b
 11413  003C88  5198               	movf	??_atoi& (0+255),w,b
 11414  003C8A  279A               	addwf	(??_atoi+2)& (0+255),f,b
 11415  003C8C  5199               	movf	(??_atoi+1)& (0+255),w,b
 11416  003C8E  239B               	addwfc	(??_atoi+3)& (0+255),f,b
 11417  003C90  519B               	movf	(??_atoi+3)& (0+255),w,b
 11418  003C92  E10A               	bnz	u10590
 11419  003C94  0E0A               	movlw	10
 11420  003C96  5D9A               	subwf	(??_atoi+2)& (0+255),w,b
 11421  003C98  A0D8               	btfss	status,0,c
 11422  003C9A  EF51  F01E         	goto	u10591
 11423  003C9E  EF54  F01E         	goto	u10590
 11424  003CA2                     u10591:
 11425  003CA2  0E01               	movlw	1
 11426  003CA4  EF55  F01E         	goto	u10600
 11427  003CA8                     u10590:
 11428  003CA8  0E00               	movlw	0
 11429  003CAA                     u10600:
 11430  003CAA  6FA0               	movwf	_atoi$2440& (0+255),b
 11431  003CAC  6BA1               	clrf	(_atoi$2440+1)& (0+255),b
 11432  003CAE                     
 11433                           ; BSR set to: 0
 11434  003CAE  51A0               	movf	_atoi$2440& (0+255),w,b
 11435  003CB0  11A1               	iorwf	(_atoi$2440+1)& (0+255),w,b
 11436  003CB2  A4D8               	btfss	status,2,c
 11437  003CB4  EF5E  F01E         	goto	u10611
 11438  003CB8  EF60  F01E         	goto	u10610
 11439  003CBC                     u10611:
 11440  003CBC  EF03  F01E         	goto	l8588
 11441  003CC0                     u10610:
 11442  003CC0                     
 11443                           ; BSR set to: 0
 11444  003CC0  519C               	movf	atoi@neg& (0+255),w,b
 11445  003CC2  119D               	iorwf	(atoi@neg+1)& (0+255),w,b
 11446  003CC4  A4D8               	btfss	status,2,c
 11447  003CC6  EF67  F01E         	goto	u10621
 11448  003CCA  EF69  F01E         	goto	u10620
 11449  003CCE                     u10621:
 11450  003CCE  EF77  F01E         	goto	l1632
 11451  003CD2                     u10620:
 11452  003CD2                     
 11453                           ; BSR set to: 0
 11454  003CD2  C0A3  F098         	movff	atoi@n,??_atoi
 11455  003CD6  C0A4  F099         	movff	atoi@n+1,??_atoi+1
 11456  003CDA  1F98               	comf	??_atoi& (0+255),f,b
 11457  003CDC  1F99               	comf	(??_atoi+1)& (0+255),f,b
 11458  003CDE  4B98               	infsnz	??_atoi& (0+255),f,b
 11459  003CE0  2B99               	incf	(??_atoi+1)& (0+255),f,b
 11460  003CE2  C098  F096         	movff	??_atoi,?_atoi
 11461  003CE6  C099  F097         	movff	??_atoi+1,?_atoi+1
 11462  003CEA  EF7B  F01E         	goto	l1635
 11463  003CEE                     l1632:
 11464                           
 11465                           ; BSR set to: 0
 11466  003CEE  C0A3  F096         	movff	atoi@n,?_atoi
 11467  003CF2  C0A4  F097         	movff	atoi@n+1,?_atoi+1
 11468  003CF6                     l1635:
 11469                           
 11470                           ; BSR set to: 0
 11471  003CF6  0012               	return		;funcret
 11472  003CF8                     __end_of_atoi:
 11473                           	opt callstack 0
 11474                           
 11475 ;; *************** function _isspace *****************
 11476 ;; Defined at:
 11477 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 11478 ;; Parameters:    Size  Location     Type
 11479 ;;  c               2   47[BANK0 ] int 
 11480 ;; Auto vars:     Size  Location     Type
 11481 ;;		None
 11482 ;; Return value:  Size  Location     Type
 11483 ;;                  2   47[BANK0 ] int 
 11484 ;; Registers used:
 11485 ;;		wreg, status,2, status,0
 11486 ;; Tracked objects:
 11487 ;;		On entry : 0/0
 11488 ;;		On exit  : 0/0
 11489 ;;		Unchanged: 0/0
 11490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11491 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11492 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11493 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11494 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11495 ;;Total ram usage:        7 bytes
 11496 ;; Hardware stack levels used:    1
 11497 ;; Hardware stack levels required when called:   13
 11498 ;; This function calls:
 11499 ;;		Nothing
 11500 ;; This function is called by:
 11501 ;;		_atoi
 11502 ;; This function uses a non-reentrant model
 11503 ;;
 11504                           
 11505                           	psect	text34
 11506  006042                     __ptext34:
 11507                           	opt callstack 0
 11508  006042                     _isspace:
 11509                           	opt callstack 12
 11510  006042  0E01               	movlw	1
 11511  006044  0100               	movlb	0	; () banked
 11512  006046  6F95               	movwf	_isspace$2465& (0+255),b
 11513  006048                     
 11514                           ; BSR set to: 0
 11515  006048  0E20               	movlw	32
 11516  00604A  198F               	xorwf	isspace@c& (0+255),w,b
 11517  00604C  1190               	iorwf	(isspace@c+1)& (0+255),w,b
 11518  00604E  B4D8               	btfsc	status,2,c
 11519  006050  EF2C  F030         	goto	u10041
 11520  006054  EF2E  F030         	goto	u10040
 11521  006058                     u10041:
 11522  006058  EF47  F030         	goto	l8228
 11523  00605C                     u10040:
 11524  00605C                     
 11525                           ; BSR set to: 0
 11526  00605C  0EF7               	movlw	247
 11527  00605E  6F91               	movwf	??_isspace& (0+255),b
 11528  006060  0EFF               	movlw	255
 11529  006062  6F92               	movwf	(??_isspace+1)& (0+255),b
 11530  006064  C08F  F093         	movff	isspace@c,??_isspace+2
 11531  006068  C090  F094         	movff	isspace@c+1,??_isspace+3
 11532  00606C  5191               	movf	??_isspace& (0+255),w,b
 11533  00606E  2793               	addwf	(??_isspace+2)& (0+255),f,b
 11534  006070  5192               	movf	(??_isspace+1)& (0+255),w,b
 11535  006072  2394               	addwfc	(??_isspace+3)& (0+255),f,b
 11536  006074  5194               	movf	(??_isspace+3)& (0+255),w,b
 11537  006076  E109               	bnz	u10050
 11538  006078  0E05               	movlw	5
 11539  00607A  5D93               	subwf	(??_isspace+2)& (0+255),w,b
 11540  00607C  A0D8               	btfss	status,0,c
 11541  00607E  EF43  F030         	goto	u10051
 11542  006082  EF45  F030         	goto	u10050
 11543  006086                     u10051:
 11544  006086  EF47  F030         	goto	l8228
 11545  00608A                     u10050:
 11546  00608A                     
 11547                           ; BSR set to: 0
 11548  00608A  0E00               	movlw	0
 11549  00608C  6F95               	movwf	_isspace$2465& (0+255),b
 11550  00608E                     l8228:
 11551                           
 11552                           ; BSR set to: 0
 11553  00608E  C095  F08F         	movff	_isspace$2465,?_isspace
 11554  006092  6B90               	clrf	(?_isspace+1)& (0+255),b
 11555  006094                     
 11556                           ; BSR set to: 0
 11557  006094  0012               	return		;funcret
 11558  006096                     __end_of_isspace:
 11559                           	opt callstack 0
 11560                           
 11561 ;; *************** function _isdigit *****************
 11562 ;; Defined at:
 11563 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 11564 ;; Parameters:    Size  Location     Type
 11565 ;;  c               2   47[BANK0 ] int 
 11566 ;; Auto vars:     Size  Location     Type
 11567 ;;		None
 11568 ;; Return value:  Size  Location     Type
 11569 ;;                  2   47[BANK0 ] int 
 11570 ;; Registers used:
 11571 ;;		wreg, status,2, status,0
 11572 ;; Tracked objects:
 11573 ;;		On entry : 0/0
 11574 ;;		On exit  : 0/0
 11575 ;;		Unchanged: 0/0
 11576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11577 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11579 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11580 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11581 ;;Total ram usage:        6 bytes
 11582 ;; Hardware stack levels used:    1
 11583 ;; Hardware stack levels required when called:   13
 11584 ;; This function calls:
 11585 ;;		Nothing
 11586 ;; This function is called by:
 11587 ;;		_vfpfcnvrt
 11588 ;;		_atoi
 11589 ;; This function uses a non-reentrant model
 11590 ;;
 11591                           
 11592                           	psect	text35
 11593  006560                     __ptext35:
 11594                           	opt callstack 0
 11595  006560                     _isdigit:
 11596                           	opt callstack 13
 11597  006560  0ED0               	movlw	208
 11598  006562  0100               	movlb	0	; () banked
 11599  006564  6F91               	movwf	??_isdigit& (0+255),b
 11600  006566  0EFF               	movlw	255
 11601  006568  6F92               	movwf	(??_isdigit+1)& (0+255),b
 11602  00656A  C08F  F093         	movff	isdigit@c,??_isdigit+2
 11603  00656E  C090  F094         	movff	isdigit@c+1,??_isdigit+3
 11604  006572  5191               	movf	??_isdigit& (0+255),w,b
 11605  006574  2793               	addwf	(??_isdigit+2)& (0+255),f,b
 11606  006576  5192               	movf	(??_isdigit+1)& (0+255),w,b
 11607  006578  2394               	addwfc	(??_isdigit+3)& (0+255),f,b
 11608  00657A  5194               	movf	(??_isdigit+3)& (0+255),w,b
 11609  00657C  E10A               	bnz	u9820
 11610  00657E  0E0A               	movlw	10
 11611  006580  5D93               	subwf	(??_isdigit+2)& (0+255),w,b
 11612  006582  A0D8               	btfss	status,0,c
 11613  006584  EFC6  F032         	goto	u9821
 11614  006588  EFC9  F032         	goto	u9820
 11615  00658C                     u9821:
 11616  00658C  0E01               	movlw	1
 11617  00658E  EFCA  F032         	goto	u9830
 11618  006592                     u9820:
 11619  006592  0E00               	movlw	0
 11620  006594                     u9830:
 11621  006594  6F8F               	movwf	?_isdigit& (0+255),b
 11622  006596  6B90               	clrf	(?_isdigit+1)& (0+255),b
 11623  006598                     
 11624                           ; BSR set to: 0
 11625  006598  0012               	return		;funcret
 11626  00659A                     __end_of_isdigit:
 11627                           	opt callstack 0
 11628                           
 11629 ;; *************** function ___wmul *****************
 11630 ;; Defined at:
 11631 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 11632 ;; Parameters:    Size  Location     Type
 11633 ;;  multiplier      2   47[BANK0 ] unsigned int 
 11634 ;;  multiplicand    2   49[BANK0 ] unsigned int 
 11635 ;; Auto vars:     Size  Location     Type
 11636 ;;  product         2   51[BANK0 ] unsigned int 
 11637 ;; Return value:  Size  Location     Type
 11638 ;;                  2   47[BANK0 ] unsigned int 
 11639 ;; Registers used:
 11640 ;;		wreg, status,2, status,0, prodl, prodh
 11641 ;; Tracked objects:
 11642 ;;		On entry : 0/0
 11643 ;;		On exit  : 0/0
 11644 ;;		Unchanged: 0/0
 11645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11646 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11647 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11649 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11650 ;;Total ram usage:        6 bytes
 11651 ;; Hardware stack levels used:    1
 11652 ;; Hardware stack levels required when called:   13
 11653 ;; This function calls:
 11654 ;;		Nothing
 11655 ;; This function is called by:
 11656 ;;		_atoi
 11657 ;; This function uses a non-reentrant model
 11658 ;;
 11659                           
 11660                           	psect	text36
 11661  0067E0                     __ptext36:
 11662                           	opt callstack 0
 11663  0067E0                     ___wmul:
 11664                           	opt callstack 12
 11665  0067E0  0100               	movlb	0	; () banked
 11666  0067E2  518F               	movf	___wmul@multiplier& (0+255),w,b
 11667  0067E4  0391               	mulwf	___wmul@multiplicand& (0+255),b
 11668  0067E6  CFF3 F093          	movff	prodl,___wmul@product
 11669  0067EA  CFF4 F094          	movff	prodh,___wmul@product+1
 11670  0067EE  518F               	movf	___wmul@multiplier& (0+255),w,b
 11671  0067F0  0392               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11672  0067F2  50F3               	movf	243,w,c
 11673  0067F4  2794               	addwf	(___wmul@product+1)& (0+255),f,b
 11674  0067F6  5190               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11675  0067F8  0391               	mulwf	___wmul@multiplicand& (0+255),b
 11676  0067FA  50F3               	movf	243,w,c
 11677  0067FC  2794               	addwf	(___wmul@product+1)& (0+255),f,b
 11678  0067FE                     
 11679                           ; BSR set to: 0
 11680  0067FE  C093  F08F         	movff	___wmul@product,?___wmul
 11681  006802  C094  F090         	movff	___wmul@product+1,?___wmul+1
 11682  006806                     
 11683                           ; BSR set to: 0
 11684  006806  0012               	return		;funcret
 11685  006808                     __end_of___wmul:
 11686                           	opt callstack 0
 11687                           
 11688 ;; *************** function _lcd_init *****************
 11689 ;; Defined at:
 11690 ;;		line 34 in file "lib_ili9341.c"
 11691 ;; Parameters:    Size  Location     Type
 11692 ;;		None
 11693 ;; Auto vars:     Size  Location     Type
 11694 ;;		None
 11695 ;; Return value:  Size  Location     Type
 11696 ;;                  1    wreg      void 
 11697 ;; Registers used:
 11698 ;;		wreg, status,2, status,0, cstack
 11699 ;; Tracked objects:
 11700 ;;		On entry : 0/0
 11701 ;;		On exit  : 0/0
 11702 ;;		Unchanged: 0/0
 11703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11708 ;;Total ram usage:        0 bytes
 11709 ;; Hardware stack levels used:    1
 11710 ;; Hardware stack levels required when called:   18
 11711 ;; This function calls:
 11712 ;;		_lcd_fill
 11713 ;;		_lcd_send
 11714 ;;		_msDelay
 11715 ;; This function is called by:
 11716 ;;		_main
 11717 ;; This function uses a non-reentrant model
 11718 ;;
 11719                           
 11720                           	psect	text37
 11721  0025D8                     __ptext37:
 11722                           	opt callstack 0
 11723  0025D8                     _lcd_init:
 11724                           	opt callstack 12
 11725  0025D8                     
 11726                           ;lib_ili9341.c: 37:     lcd_send(0, 0x01);
 11727  0025D8  0E01               	movlw	1
 11728  0025DA  0100               	movlb	0	; () banked
 11729  0025DC  6F90               	movwf	lcd_send@value& (0+255),b
 11730  0025DE  0E00               	movlw	0
 11731  0025E0  EC3B  F034         	call	_lcd_send
 11732  0025E4                     
 11733                           ;lib_ili9341.c: 38:     msDelay(150);
 11734  0025E4  0E96               	movlw	150
 11735  0025E6  ECCD  F032         	call	_msDelay
 11736  0025EA                     
 11737                           ;lib_ili9341.c: 40:     lcd_send(0,0xEF);
 11738  0025EA  0EEF               	movlw	239
 11739  0025EC  0100               	movlb	0	; () banked
 11740  0025EE  6F90               	movwf	lcd_send@value& (0+255),b
 11741  0025F0  0E00               	movlw	0
 11742  0025F2  EC3B  F034         	call	_lcd_send
 11743  0025F6                     
 11744                           ;lib_ili9341.c: 41:     lcd_send(1,0x03);
 11745  0025F6  0E03               	movlw	3
 11746  0025F8  0100               	movlb	0	; () banked
 11747  0025FA  6F90               	movwf	lcd_send@value& (0+255),b
 11748  0025FC  0E01               	movlw	1
 11749  0025FE  EC3B  F034         	call	_lcd_send
 11750  002602                     
 11751                           ;lib_ili9341.c: 42:     lcd_send(1,0x80);
 11752  002602  0E80               	movlw	128
 11753  002604  0100               	movlb	0	; () banked
 11754  002606  6F90               	movwf	lcd_send@value& (0+255),b
 11755  002608  0E01               	movlw	1
 11756  00260A  EC3B  F034         	call	_lcd_send
 11757  00260E                     
 11758                           ;lib_ili9341.c: 43:     lcd_send(1,0x02);
 11759  00260E  0E02               	movlw	2
 11760  002610  0100               	movlb	0	; () banked
 11761  002612  6F90               	movwf	lcd_send@value& (0+255),b
 11762  002614  0E01               	movlw	1
 11763  002616  EC3B  F034         	call	_lcd_send
 11764  00261A                     
 11765                           ;lib_ili9341.c: 44:     lcd_send(0,0xCF);
 11766  00261A  0ECF               	movlw	207
 11767  00261C  0100               	movlb	0	; () banked
 11768  00261E  6F90               	movwf	lcd_send@value& (0+255),b
 11769  002620  0E00               	movlw	0
 11770  002622  EC3B  F034         	call	_lcd_send
 11771  002626                     
 11772                           ;lib_ili9341.c: 45:     lcd_send(1,0x00);
 11773  002626  0E00               	movlw	0
 11774  002628  0100               	movlb	0	; () banked
 11775  00262A  6F90               	movwf	lcd_send@value& (0+255),b
 11776  00262C  0E01               	movlw	1
 11777  00262E  EC3B  F034         	call	_lcd_send
 11778  002632                     
 11779                           ;lib_ili9341.c: 46:     lcd_send(1,0XC1);
 11780  002632  0EC1               	movlw	193
 11781  002634  0100               	movlb	0	; () banked
 11782  002636  6F90               	movwf	lcd_send@value& (0+255),b
 11783  002638  0E01               	movlw	1
 11784  00263A  EC3B  F034         	call	_lcd_send
 11785  00263E                     
 11786                           ;lib_ili9341.c: 47:     lcd_send(1,0X30);
 11787  00263E  0E30               	movlw	48
 11788  002640  0100               	movlb	0	; () banked
 11789  002642  6F90               	movwf	lcd_send@value& (0+255),b
 11790  002644  0E01               	movlw	1
 11791  002646  EC3B  F034         	call	_lcd_send
 11792  00264A                     
 11793                           ;lib_ili9341.c: 48:     lcd_send(0,0xED);
 11794  00264A  0EED               	movlw	237
 11795  00264C  0100               	movlb	0	; () banked
 11796  00264E  6F90               	movwf	lcd_send@value& (0+255),b
 11797  002650  0E00               	movlw	0
 11798  002652  EC3B  F034         	call	_lcd_send
 11799  002656                     
 11800                           ;lib_ili9341.c: 49:     lcd_send(1,0x64);
 11801  002656  0E64               	movlw	100
 11802  002658  0100               	movlb	0	; () banked
 11803  00265A  6F90               	movwf	lcd_send@value& (0+255),b
 11804  00265C  0E01               	movlw	1
 11805  00265E  EC3B  F034         	call	_lcd_send
 11806  002662                     
 11807                           ;lib_ili9341.c: 50:     lcd_send(1,0x03);
 11808  002662  0E03               	movlw	3
 11809  002664  0100               	movlb	0	; () banked
 11810  002666  6F90               	movwf	lcd_send@value& (0+255),b
 11811  002668  0E01               	movlw	1
 11812  00266A  EC3B  F034         	call	_lcd_send
 11813  00266E                     
 11814                           ;lib_ili9341.c: 51:     lcd_send(1,0X12);
 11815  00266E  0E12               	movlw	18
 11816  002670  0100               	movlb	0	; () banked
 11817  002672  6F90               	movwf	lcd_send@value& (0+255),b
 11818  002674  0E01               	movlw	1
 11819  002676  EC3B  F034         	call	_lcd_send
 11820  00267A                     
 11821                           ;lib_ili9341.c: 52:     lcd_send(1,0X81);
 11822  00267A  0E81               	movlw	129
 11823  00267C  0100               	movlb	0	; () banked
 11824  00267E  6F90               	movwf	lcd_send@value& (0+255),b
 11825  002680  0E01               	movlw	1
 11826  002682  EC3B  F034         	call	_lcd_send
 11827  002686                     
 11828                           ;lib_ili9341.c: 53:     lcd_send(0,0xE8);
 11829  002686  0EE8               	movlw	232
 11830  002688  0100               	movlb	0	; () banked
 11831  00268A  6F90               	movwf	lcd_send@value& (0+255),b
 11832  00268C  0E00               	movlw	0
 11833  00268E  EC3B  F034         	call	_lcd_send
 11834  002692                     
 11835                           ;lib_ili9341.c: 54:     lcd_send(1,0x85);
 11836  002692  0E85               	movlw	133
 11837  002694  0100               	movlb	0	; () banked
 11838  002696  6F90               	movwf	lcd_send@value& (0+255),b
 11839  002698  0E01               	movlw	1
 11840  00269A  EC3B  F034         	call	_lcd_send
 11841  00269E                     
 11842                           ;lib_ili9341.c: 55:     lcd_send(1,0x00);
 11843  00269E  0E00               	movlw	0
 11844  0026A0  0100               	movlb	0	; () banked
 11845  0026A2  6F90               	movwf	lcd_send@value& (0+255),b
 11846  0026A4  0E01               	movlw	1
 11847  0026A6  EC3B  F034         	call	_lcd_send
 11848  0026AA                     
 11849                           ;lib_ili9341.c: 56:     lcd_send(1,0x78);
 11850  0026AA  0E78               	movlw	120
 11851  0026AC  0100               	movlb	0	; () banked
 11852  0026AE  6F90               	movwf	lcd_send@value& (0+255),b
 11853  0026B0  0E01               	movlw	1
 11854  0026B2  EC3B  F034         	call	_lcd_send
 11855  0026B6                     
 11856                           ;lib_ili9341.c: 57:     lcd_send(0,0xCB);
 11857  0026B6  0ECB               	movlw	203
 11858  0026B8  0100               	movlb	0	; () banked
 11859  0026BA  6F90               	movwf	lcd_send@value& (0+255),b
 11860  0026BC  0E00               	movlw	0
 11861  0026BE  EC3B  F034         	call	_lcd_send
 11862  0026C2                     
 11863                           ;lib_ili9341.c: 58:     lcd_send(1,0x39);
 11864  0026C2  0E39               	movlw	57
 11865  0026C4  0100               	movlb	0	; () banked
 11866  0026C6  6F90               	movwf	lcd_send@value& (0+255),b
 11867  0026C8  0E01               	movlw	1
 11868  0026CA  EC3B  F034         	call	_lcd_send
 11869  0026CE                     
 11870                           ;lib_ili9341.c: 59:     lcd_send(1,0x2C);
 11871  0026CE  0E2C               	movlw	44
 11872  0026D0  0100               	movlb	0	; () banked
 11873  0026D2  6F90               	movwf	lcd_send@value& (0+255),b
 11874  0026D4  0E01               	movlw	1
 11875  0026D6  EC3B  F034         	call	_lcd_send
 11876  0026DA                     
 11877                           ;lib_ili9341.c: 60:     lcd_send(1,0x00);
 11878  0026DA  0E00               	movlw	0
 11879  0026DC  0100               	movlb	0	; () banked
 11880  0026DE  6F90               	movwf	lcd_send@value& (0+255),b
 11881  0026E0  0E01               	movlw	1
 11882  0026E2  EC3B  F034         	call	_lcd_send
 11883  0026E6                     
 11884                           ;lib_ili9341.c: 61:     lcd_send(1,0x34);
 11885  0026E6  0E34               	movlw	52
 11886  0026E8  0100               	movlb	0	; () banked
 11887  0026EA  6F90               	movwf	lcd_send@value& (0+255),b
 11888  0026EC  0E01               	movlw	1
 11889  0026EE  EC3B  F034         	call	_lcd_send
 11890  0026F2                     
 11891                           ;lib_ili9341.c: 62:     lcd_send(1,0x02);
 11892  0026F2  0E02               	movlw	2
 11893  0026F4  0100               	movlb	0	; () banked
 11894  0026F6  6F90               	movwf	lcd_send@value& (0+255),b
 11895  0026F8  0E01               	movlw	1
 11896  0026FA  EC3B  F034         	call	_lcd_send
 11897  0026FE                     
 11898                           ;lib_ili9341.c: 63:     lcd_send(0,0xF7);
 11899  0026FE  0EF7               	movlw	247
 11900  002700  0100               	movlb	0	; () banked
 11901  002702  6F90               	movwf	lcd_send@value& (0+255),b
 11902  002704  0E00               	movlw	0
 11903  002706  EC3B  F034         	call	_lcd_send
 11904  00270A                     
 11905                           ;lib_ili9341.c: 64:     lcd_send(1,0x20);
 11906  00270A  0E20               	movlw	32
 11907  00270C  0100               	movlb	0	; () banked
 11908  00270E  6F90               	movwf	lcd_send@value& (0+255),b
 11909  002710  0E01               	movlw	1
 11910  002712  EC3B  F034         	call	_lcd_send
 11911  002716                     
 11912                           ;lib_ili9341.c: 65:     lcd_send(0,0xEA);
 11913  002716  0EEA               	movlw	234
 11914  002718  0100               	movlb	0	; () banked
 11915  00271A  6F90               	movwf	lcd_send@value& (0+255),b
 11916  00271C  0E00               	movlw	0
 11917  00271E  EC3B  F034         	call	_lcd_send
 11918  002722                     
 11919                           ;lib_ili9341.c: 66:     lcd_send(1,0x00);
 11920  002722  0E00               	movlw	0
 11921  002724  0100               	movlb	0	; () banked
 11922  002726  6F90               	movwf	lcd_send@value& (0+255),b
 11923  002728  0E01               	movlw	1
 11924  00272A  EC3B  F034         	call	_lcd_send
 11925  00272E                     
 11926                           ;lib_ili9341.c: 67:     lcd_send(1,0x00);
 11927  00272E  0E00               	movlw	0
 11928  002730  0100               	movlb	0	; () banked
 11929  002732  6F90               	movwf	lcd_send@value& (0+255),b
 11930  002734  0E01               	movlw	1
 11931  002736  EC3B  F034         	call	_lcd_send
 11932  00273A                     
 11933                           ;lib_ili9341.c: 68:     lcd_send(0,0xC0);
 11934  00273A  0EC0               	movlw	192
 11935  00273C  0100               	movlb	0	; () banked
 11936  00273E  6F90               	movwf	lcd_send@value& (0+255),b
 11937  002740  0E00               	movlw	0
 11938  002742  EC3B  F034         	call	_lcd_send
 11939  002746                     
 11940                           ;lib_ili9341.c: 69:     lcd_send(1,0x23);
 11941  002746  0E23               	movlw	35
 11942  002748  0100               	movlb	0	; () banked
 11943  00274A  6F90               	movwf	lcd_send@value& (0+255),b
 11944  00274C  0E01               	movlw	1
 11945  00274E  EC3B  F034         	call	_lcd_send
 11946  002752                     
 11947                           ;lib_ili9341.c: 70:     lcd_send(0,0xC1);
 11948  002752  0EC1               	movlw	193
 11949  002754  0100               	movlb	0	; () banked
 11950  002756  6F90               	movwf	lcd_send@value& (0+255),b
 11951  002758  0E00               	movlw	0
 11952  00275A  EC3B  F034         	call	_lcd_send
 11953  00275E                     
 11954                           ;lib_ili9341.c: 71:     lcd_send(1,0x10);
 11955  00275E  0E10               	movlw	16
 11956  002760  0100               	movlb	0	; () banked
 11957  002762  6F90               	movwf	lcd_send@value& (0+255),b
 11958  002764  0E01               	movlw	1
 11959  002766  EC3B  F034         	call	_lcd_send
 11960  00276A                     
 11961                           ;lib_ili9341.c: 72:     lcd_send(0,0xC5);
 11962  00276A  0EC5               	movlw	197
 11963  00276C  0100               	movlb	0	; () banked
 11964  00276E  6F90               	movwf	lcd_send@value& (0+255),b
 11965  002770  0E00               	movlw	0
 11966  002772  EC3B  F034         	call	_lcd_send
 11967  002776                     
 11968                           ;lib_ili9341.c: 73:     lcd_send(1,0x3e);
 11969  002776  0E3E               	movlw	62
 11970  002778  0100               	movlb	0	; () banked
 11971  00277A  6F90               	movwf	lcd_send@value& (0+255),b
 11972  00277C  0E01               	movlw	1
 11973  00277E  EC3B  F034         	call	_lcd_send
 11974  002782                     
 11975                           ;lib_ili9341.c: 74:     lcd_send(1,0x28);
 11976  002782  0E28               	movlw	40
 11977  002784  0100               	movlb	0	; () banked
 11978  002786  6F90               	movwf	lcd_send@value& (0+255),b
 11979  002788  0E01               	movlw	1
 11980  00278A  EC3B  F034         	call	_lcd_send
 11981  00278E                     
 11982                           ;lib_ili9341.c: 75:     lcd_send(0,0xC7);
 11983  00278E  0EC7               	movlw	199
 11984  002790  0100               	movlb	0	; () banked
 11985  002792  6F90               	movwf	lcd_send@value& (0+255),b
 11986  002794  0E00               	movlw	0
 11987  002796  EC3B  F034         	call	_lcd_send
 11988  00279A                     
 11989                           ;lib_ili9341.c: 76:     lcd_send(1,0x86);
 11990  00279A  0E86               	movlw	134
 11991  00279C  0100               	movlb	0	; () banked
 11992  00279E  6F90               	movwf	lcd_send@value& (0+255),b
 11993  0027A0  0E01               	movlw	1
 11994  0027A2  EC3B  F034         	call	_lcd_send
 11995  0027A6                     
 11996                           ;lib_ili9341.c: 77:     lcd_send(0,0x36);
 11997  0027A6  0E36               	movlw	54
 11998  0027A8  0100               	movlb	0	; () banked
 11999  0027AA  6F90               	movwf	lcd_send@value& (0+255),b
 12000  0027AC  0E00               	movlw	0
 12001  0027AE  EC3B  F034         	call	_lcd_send
 12002  0027B2                     
 12003                           ;lib_ili9341.c: 78:     lcd_send(1,0x48);
 12004  0027B2  0E48               	movlw	72
 12005  0027B4  0100               	movlb	0	; () banked
 12006  0027B6  6F90               	movwf	lcd_send@value& (0+255),b
 12007  0027B8  0E01               	movlw	1
 12008  0027BA  EC3B  F034         	call	_lcd_send
 12009  0027BE                     
 12010                           ;lib_ili9341.c: 79:     lcd_send(0,0x3A);
 12011  0027BE  0E3A               	movlw	58
 12012  0027C0  0100               	movlb	0	; () banked
 12013  0027C2  6F90               	movwf	lcd_send@value& (0+255),b
 12014  0027C4  0E00               	movlw	0
 12015  0027C6  EC3B  F034         	call	_lcd_send
 12016  0027CA                     
 12017                           ;lib_ili9341.c: 80:     lcd_send(1,0x55);
 12018  0027CA  0E55               	movlw	85
 12019  0027CC  0100               	movlb	0	; () banked
 12020  0027CE  6F90               	movwf	lcd_send@value& (0+255),b
 12021  0027D0  0E01               	movlw	1
 12022  0027D2  EC3B  F034         	call	_lcd_send
 12023  0027D6                     
 12024                           ;lib_ili9341.c: 81:     lcd_send(0,0xB1);
 12025  0027D6  0EB1               	movlw	177
 12026  0027D8  0100               	movlb	0	; () banked
 12027  0027DA  6F90               	movwf	lcd_send@value& (0+255),b
 12028  0027DC  0E00               	movlw	0
 12029  0027DE  EC3B  F034         	call	_lcd_send
 12030  0027E2                     
 12031                           ;lib_ili9341.c: 82:     lcd_send(1,0x00);
 12032  0027E2  0E00               	movlw	0
 12033  0027E4  0100               	movlb	0	; () banked
 12034  0027E6  6F90               	movwf	lcd_send@value& (0+255),b
 12035  0027E8  0E01               	movlw	1
 12036  0027EA  EC3B  F034         	call	_lcd_send
 12037  0027EE                     
 12038                           ;lib_ili9341.c: 83:     lcd_send(1,0x18);
 12039  0027EE  0E18               	movlw	24
 12040  0027F0  0100               	movlb	0	; () banked
 12041  0027F2  6F90               	movwf	lcd_send@value& (0+255),b
 12042  0027F4  0E01               	movlw	1
 12043  0027F6  EC3B  F034         	call	_lcd_send
 12044  0027FA                     
 12045                           ;lib_ili9341.c: 84:     lcd_send(0,0xB6);
 12046  0027FA  0EB6               	movlw	182
 12047  0027FC  0100               	movlb	0	; () banked
 12048  0027FE  6F90               	movwf	lcd_send@value& (0+255),b
 12049  002800  0E00               	movlw	0
 12050  002802  EC3B  F034         	call	_lcd_send
 12051  002806                     
 12052                           ;lib_ili9341.c: 85:     lcd_send(1,0x08);
 12053  002806  0E08               	movlw	8
 12054  002808  0100               	movlb	0	; () banked
 12055  00280A  6F90               	movwf	lcd_send@value& (0+255),b
 12056  00280C  0E01               	movlw	1
 12057  00280E  EC3B  F034         	call	_lcd_send
 12058  002812                     
 12059                           ;lib_ili9341.c: 86:     lcd_send(1,0x82);
 12060  002812  0E82               	movlw	130
 12061  002814  0100               	movlb	0	; () banked
 12062  002816  6F90               	movwf	lcd_send@value& (0+255),b
 12063  002818  0E01               	movlw	1
 12064  00281A  EC3B  F034         	call	_lcd_send
 12065  00281E                     
 12066                           ;lib_ili9341.c: 87:     lcd_send(1,0x27);
 12067  00281E  0E27               	movlw	39
 12068  002820  0100               	movlb	0	; () banked
 12069  002822  6F90               	movwf	lcd_send@value& (0+255),b
 12070  002824  0E01               	movlw	1
 12071  002826  EC3B  F034         	call	_lcd_send
 12072  00282A                     
 12073                           ;lib_ili9341.c: 88:     lcd_send(0,0xF2);
 12074  00282A  0EF2               	movlw	242
 12075  00282C  0100               	movlb	0	; () banked
 12076  00282E  6F90               	movwf	lcd_send@value& (0+255),b
 12077  002830  0E00               	movlw	0
 12078  002832  EC3B  F034         	call	_lcd_send
 12079  002836                     
 12080                           ;lib_ili9341.c: 89:     lcd_send(1,0x00);
 12081  002836  0E00               	movlw	0
 12082  002838  0100               	movlb	0	; () banked
 12083  00283A  6F90               	movwf	lcd_send@value& (0+255),b
 12084  00283C  0E01               	movlw	1
 12085  00283E  EC3B  F034         	call	_lcd_send
 12086  002842                     
 12087                           ;lib_ili9341.c: 90:     lcd_send(0,0x26);
 12088  002842  0E26               	movlw	38
 12089  002844  0100               	movlb	0	; () banked
 12090  002846  6F90               	movwf	lcd_send@value& (0+255),b
 12091  002848  0E00               	movlw	0
 12092  00284A  EC3B  F034         	call	_lcd_send
 12093  00284E                     
 12094                           ;lib_ili9341.c: 91:     lcd_send(1,0x01);
 12095  00284E  0E01               	movlw	1
 12096  002850  0100               	movlb	0	; () banked
 12097  002852  6F90               	movwf	lcd_send@value& (0+255),b
 12098  002854  0E01               	movlw	1
 12099  002856  EC3B  F034         	call	_lcd_send
 12100  00285A                     
 12101                           ;lib_ili9341.c: 92:     lcd_send(0,0xE0);
 12102  00285A  0EE0               	movlw	224
 12103  00285C  0100               	movlb	0	; () banked
 12104  00285E  6F90               	movwf	lcd_send@value& (0+255),b
 12105  002860  0E00               	movlw	0
 12106  002862  EC3B  F034         	call	_lcd_send
 12107  002866                     
 12108                           ;lib_ili9341.c: 93:     lcd_send(1,0x0F);
 12109  002866  0E0F               	movlw	15
 12110  002868  0100               	movlb	0	; () banked
 12111  00286A  6F90               	movwf	lcd_send@value& (0+255),b
 12112  00286C  0E01               	movlw	1
 12113  00286E  EC3B  F034         	call	_lcd_send
 12114  002872                     
 12115                           ;lib_ili9341.c: 94:     lcd_send(1,0x31);
 12116  002872  0E31               	movlw	49
 12117  002874  0100               	movlb	0	; () banked
 12118  002876  6F90               	movwf	lcd_send@value& (0+255),b
 12119  002878  0E01               	movlw	1
 12120  00287A  EC3B  F034         	call	_lcd_send
 12121  00287E                     
 12122                           ;lib_ili9341.c: 95:     lcd_send(1,0x2B);
 12123  00287E  0E2B               	movlw	43
 12124  002880  0100               	movlb	0	; () banked
 12125  002882  6F90               	movwf	lcd_send@value& (0+255),b
 12126  002884  0E01               	movlw	1
 12127  002886  EC3B  F034         	call	_lcd_send
 12128  00288A                     
 12129                           ;lib_ili9341.c: 96:     lcd_send(1,0x0C);
 12130  00288A  0E0C               	movlw	12
 12131  00288C  0100               	movlb	0	; () banked
 12132  00288E  6F90               	movwf	lcd_send@value& (0+255),b
 12133  002890  0E01               	movlw	1
 12134  002892  EC3B  F034         	call	_lcd_send
 12135  002896                     
 12136                           ;lib_ili9341.c: 97:     lcd_send(1,0x0E);
 12137  002896  0E0E               	movlw	14
 12138  002898  0100               	movlb	0	; () banked
 12139  00289A  6F90               	movwf	lcd_send@value& (0+255),b
 12140  00289C  0E01               	movlw	1
 12141  00289E  EC3B  F034         	call	_lcd_send
 12142  0028A2                     
 12143                           ;lib_ili9341.c: 98:     lcd_send(1,0x08);
 12144  0028A2  0E08               	movlw	8
 12145  0028A4  0100               	movlb	0	; () banked
 12146  0028A6  6F90               	movwf	lcd_send@value& (0+255),b
 12147  0028A8  0E01               	movlw	1
 12148  0028AA  EC3B  F034         	call	_lcd_send
 12149  0028AE                     
 12150                           ;lib_ili9341.c: 99:     lcd_send(1,0x4E);
 12151  0028AE  0E4E               	movlw	78
 12152  0028B0  0100               	movlb	0	; () banked
 12153  0028B2  6F90               	movwf	lcd_send@value& (0+255),b
 12154  0028B4  0E01               	movlw	1
 12155  0028B6  EC3B  F034         	call	_lcd_send
 12156  0028BA                     
 12157                           ;lib_ili9341.c: 100:     lcd_send(1,0xF1);
 12158  0028BA  0EF1               	movlw	241
 12159  0028BC  0100               	movlb	0	; () banked
 12160  0028BE  6F90               	movwf	lcd_send@value& (0+255),b
 12161  0028C0  0E01               	movlw	1
 12162  0028C2  EC3B  F034         	call	_lcd_send
 12163  0028C6                     
 12164                           ;lib_ili9341.c: 101:     lcd_send(1,0x37);
 12165  0028C6  0E37               	movlw	55
 12166  0028C8  0100               	movlb	0	; () banked
 12167  0028CA  6F90               	movwf	lcd_send@value& (0+255),b
 12168  0028CC  0E01               	movlw	1
 12169  0028CE  EC3B  F034         	call	_lcd_send
 12170  0028D2                     
 12171                           ;lib_ili9341.c: 102:     lcd_send(1,0x07);
 12172  0028D2  0E07               	movlw	7
 12173  0028D4  0100               	movlb	0	; () banked
 12174  0028D6  6F90               	movwf	lcd_send@value& (0+255),b
 12175  0028D8  0E01               	movlw	1
 12176  0028DA  EC3B  F034         	call	_lcd_send
 12177  0028DE                     
 12178                           ;lib_ili9341.c: 103:     lcd_send(1,0x10);
 12179  0028DE  0E10               	movlw	16
 12180  0028E0  0100               	movlb	0	; () banked
 12181  0028E2  6F90               	movwf	lcd_send@value& (0+255),b
 12182  0028E4  0E01               	movlw	1
 12183  0028E6  EC3B  F034         	call	_lcd_send
 12184  0028EA                     
 12185                           ;lib_ili9341.c: 104:     lcd_send(1,0x03);
 12186  0028EA  0E03               	movlw	3
 12187  0028EC  0100               	movlb	0	; () banked
 12188  0028EE  6F90               	movwf	lcd_send@value& (0+255),b
 12189  0028F0  0E01               	movlw	1
 12190  0028F2  EC3B  F034         	call	_lcd_send
 12191  0028F6                     
 12192                           ;lib_ili9341.c: 105:     lcd_send(1,0x0E);
 12193  0028F6  0E0E               	movlw	14
 12194  0028F8  0100               	movlb	0	; () banked
 12195  0028FA  6F90               	movwf	lcd_send@value& (0+255),b
 12196  0028FC  0E01               	movlw	1
 12197  0028FE  EC3B  F034         	call	_lcd_send
 12198  002902                     
 12199                           ;lib_ili9341.c: 106:     lcd_send(1,0x09);
 12200  002902  0E09               	movlw	9
 12201  002904  0100               	movlb	0	; () banked
 12202  002906  6F90               	movwf	lcd_send@value& (0+255),b
 12203  002908  0E01               	movlw	1
 12204  00290A  EC3B  F034         	call	_lcd_send
 12205  00290E                     
 12206                           ;lib_ili9341.c: 107:     lcd_send(1,0x00);
 12207  00290E  0E00               	movlw	0
 12208  002910  0100               	movlb	0	; () banked
 12209  002912  6F90               	movwf	lcd_send@value& (0+255),b
 12210  002914  0E01               	movlw	1
 12211  002916  EC3B  F034         	call	_lcd_send
 12212  00291A                     
 12213                           ;lib_ili9341.c: 108:     lcd_send(0,0xE1);
 12214  00291A  0EE1               	movlw	225
 12215  00291C  0100               	movlb	0	; () banked
 12216  00291E  6F90               	movwf	lcd_send@value& (0+255),b
 12217  002920  0E00               	movlw	0
 12218  002922  EC3B  F034         	call	_lcd_send
 12219  002926                     
 12220                           ;lib_ili9341.c: 109:     lcd_send(1,0x00);
 12221  002926  0E00               	movlw	0
 12222  002928  0100               	movlb	0	; () banked
 12223  00292A  6F90               	movwf	lcd_send@value& (0+255),b
 12224  00292C  0E01               	movlw	1
 12225  00292E  EC3B  F034         	call	_lcd_send
 12226  002932                     
 12227                           ;lib_ili9341.c: 110:     lcd_send(1,0x0E);
 12228  002932  0E0E               	movlw	14
 12229  002934  0100               	movlb	0	; () banked
 12230  002936  6F90               	movwf	lcd_send@value& (0+255),b
 12231  002938  0E01               	movlw	1
 12232  00293A  EC3B  F034         	call	_lcd_send
 12233  00293E                     
 12234                           ;lib_ili9341.c: 111:     lcd_send(1,0x14);
 12235  00293E  0E14               	movlw	20
 12236  002940  0100               	movlb	0	; () banked
 12237  002942  6F90               	movwf	lcd_send@value& (0+255),b
 12238  002944  0E01               	movlw	1
 12239  002946  EC3B  F034         	call	_lcd_send
 12240  00294A                     
 12241                           ;lib_ili9341.c: 112:     lcd_send(1,0x03);
 12242  00294A  0E03               	movlw	3
 12243  00294C  0100               	movlb	0	; () banked
 12244  00294E  6F90               	movwf	lcd_send@value& (0+255),b
 12245  002950  0E01               	movlw	1
 12246  002952  EC3B  F034         	call	_lcd_send
 12247  002956                     
 12248                           ;lib_ili9341.c: 113:     lcd_send(1,0x11);
 12249  002956  0E11               	movlw	17
 12250  002958  0100               	movlb	0	; () banked
 12251  00295A  6F90               	movwf	lcd_send@value& (0+255),b
 12252  00295C  0E01               	movlw	1
 12253  00295E  EC3B  F034         	call	_lcd_send
 12254  002962                     
 12255                           ;lib_ili9341.c: 114:     lcd_send(1,0x07);
 12256  002962  0E07               	movlw	7
 12257  002964  0100               	movlb	0	; () banked
 12258  002966  6F90               	movwf	lcd_send@value& (0+255),b
 12259  002968  0E01               	movlw	1
 12260  00296A  EC3B  F034         	call	_lcd_send
 12261  00296E                     
 12262                           ;lib_ili9341.c: 115:     lcd_send(1,0x31);
 12263  00296E  0E31               	movlw	49
 12264  002970  0100               	movlb	0	; () banked
 12265  002972  6F90               	movwf	lcd_send@value& (0+255),b
 12266  002974  0E01               	movlw	1
 12267  002976  EC3B  F034         	call	_lcd_send
 12268  00297A                     
 12269                           ;lib_ili9341.c: 116:     lcd_send(1,0xC1);
 12270  00297A  0EC1               	movlw	193
 12271  00297C  0100               	movlb	0	; () banked
 12272  00297E  6F90               	movwf	lcd_send@value& (0+255),b
 12273  002980  0E01               	movlw	1
 12274  002982  EC3B  F034         	call	_lcd_send
 12275  002986                     
 12276                           ;lib_ili9341.c: 117:     lcd_send(1,0x48);
 12277  002986  0E48               	movlw	72
 12278  002988  0100               	movlb	0	; () banked
 12279  00298A  6F90               	movwf	lcd_send@value& (0+255),b
 12280  00298C  0E01               	movlw	1
 12281  00298E  EC3B  F034         	call	_lcd_send
 12282  002992                     
 12283                           ;lib_ili9341.c: 118:     lcd_send(1,0x08);
 12284  002992  0E08               	movlw	8
 12285  002994  0100               	movlb	0	; () banked
 12286  002996  6F90               	movwf	lcd_send@value& (0+255),b
 12287  002998  0E01               	movlw	1
 12288  00299A  EC3B  F034         	call	_lcd_send
 12289  00299E                     
 12290                           ;lib_ili9341.c: 119:     lcd_send(1,0x0F);
 12291  00299E  0E0F               	movlw	15
 12292  0029A0  0100               	movlb	0	; () banked
 12293  0029A2  6F90               	movwf	lcd_send@value& (0+255),b
 12294  0029A4  0E01               	movlw	1
 12295  0029A6  EC3B  F034         	call	_lcd_send
 12296  0029AA                     
 12297                           ;lib_ili9341.c: 120:     lcd_send(1,0x0C);
 12298  0029AA  0E0C               	movlw	12
 12299  0029AC  0100               	movlb	0	; () banked
 12300  0029AE  6F90               	movwf	lcd_send@value& (0+255),b
 12301  0029B0  0E01               	movlw	1
 12302  0029B2  EC3B  F034         	call	_lcd_send
 12303  0029B6                     
 12304                           ;lib_ili9341.c: 121:     lcd_send(1,0x31);
 12305  0029B6  0E31               	movlw	49
 12306  0029B8  0100               	movlb	0	; () banked
 12307  0029BA  6F90               	movwf	lcd_send@value& (0+255),b
 12308  0029BC  0E01               	movlw	1
 12309  0029BE  EC3B  F034         	call	_lcd_send
 12310  0029C2                     
 12311                           ;lib_ili9341.c: 122:     lcd_send(1,0x36);
 12312  0029C2  0E36               	movlw	54
 12313  0029C4  0100               	movlb	0	; () banked
 12314  0029C6  6F90               	movwf	lcd_send@value& (0+255),b
 12315  0029C8  0E01               	movlw	1
 12316  0029CA  EC3B  F034         	call	_lcd_send
 12317  0029CE                     
 12318                           ;lib_ili9341.c: 123:     lcd_send(1,0x0F);
 12319  0029CE  0E0F               	movlw	15
 12320  0029D0  0100               	movlb	0	; () banked
 12321  0029D2  6F90               	movwf	lcd_send@value& (0+255),b
 12322  0029D4  0E01               	movlw	1
 12323  0029D6  EC3B  F034         	call	_lcd_send
 12324  0029DA                     
 12325                           ;lib_ili9341.c: 124:     lcd_send(0,0x11);
 12326  0029DA  0E11               	movlw	17
 12327  0029DC  0100               	movlb	0	; () banked
 12328  0029DE  6F90               	movwf	lcd_send@value& (0+255),b
 12329  0029E0  0E00               	movlw	0
 12330  0029E2  EC3B  F034         	call	_lcd_send
 12331                           
 12332                           ;lib_ili9341.c: 125:     msDelay(120);
 12333  0029E6  0E78               	movlw	120
 12334  0029E8  ECCD  F032         	call	_msDelay
 12335  0029EC                     
 12336                           ;lib_ili9341.c: 126:     lcd_send(0,0x29);
 12337  0029EC  0E29               	movlw	41
 12338  0029EE  0100               	movlb	0	; () banked
 12339  0029F0  6F90               	movwf	lcd_send@value& (0+255),b
 12340  0029F2  0E00               	movlw	0
 12341  0029F4  EC3B  F034         	call	_lcd_send
 12342  0029F8                     
 12343                           ;lib_ili9341.c: 127:     msDelay(120);
 12344  0029F8  0E78               	movlw	120
 12345  0029FA  ECCD  F032         	call	_msDelay
 12346  0029FE                     
 12347                           ;lib_ili9341.c: 130:     lcd_fill(global_bg_color);
 12348  0029FE  0E00               	movlw	0
 12349  002A00  0100               	movlb	0	; () banked
 12350  002A02  6F99               	movwf	(lcd_fill@bg_color+1)& (0+255),b
 12351  002A04  0E00               	movlw	0
 12352  002A06  6F98               	movwf	lcd_fill@bg_color& (0+255),b
 12353  002A08  EC54  F02E         	call	_lcd_fill	;wreg free
 12354  002A0C  0012               	return		;funcret
 12355  002A0E                     __end_of_lcd_init:
 12356                           	opt callstack 0
 12357                           
 12358 ;; *************** function _msDelay *****************
 12359 ;; Defined at:
 12360 ;;		line 16 in file "lib_ili9341.c"
 12361 ;; Parameters:    Size  Location     Type
 12362 ;;  ms              1    wreg     unsigned char 
 12363 ;; Auto vars:     Size  Location     Type
 12364 ;;  ms              1   48[BANK0 ] unsigned char 
 12365 ;;  k               1   49[BANK0 ] unsigned char 
 12366 ;; Return value:  Size  Location     Type
 12367 ;;                  1    wreg      void 
 12368 ;; Registers used:
 12369 ;;		wreg, status,2, status,0
 12370 ;; Tracked objects:
 12371 ;;		On entry : 0/0
 12372 ;;		On exit  : 0/0
 12373 ;;		Unchanged: 0/0
 12374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12376 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12377 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12378 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12379 ;;Total ram usage:        3 bytes
 12380 ;; Hardware stack levels used:    1
 12381 ;; Hardware stack levels required when called:   13
 12382 ;; This function calls:
 12383 ;;		Nothing
 12384 ;; This function is called by:
 12385 ;;		_lcd_init
 12386 ;; This function uses a non-reentrant model
 12387 ;;
 12388                           
 12389                           	psect	text38
 12390  00659A                     __ptext38:
 12391                           	opt callstack 0
 12392  00659A                     _msDelay:
 12393                           	opt callstack 16
 12394                           
 12395                           ;incstack = 0
 12396                           ;msDelay@ms stored from wreg
 12397  00659A  0100               	movlb	0	; () banked
 12398  00659C  6F90               	movwf	msDelay@ms& (0+255),b
 12399  00659E                     
 12400                           ;lib_ili9341.c: 16: void msDelay (uint8_t ms);lib_ili9341.c: 17: {;lib_ili9341.c: 18:   
      +                            uint8_t k;;lib_ili9341.c: 20:     for(k=0; k<ms; k++)
 12401  00659E  0E00               	movlw	0
 12402  0065A0  0100               	movlb	0	; () banked
 12403  0065A2  6F91               	movwf	msDelay@k& (0+255),b
 12404  0065A4  EFDF  F032         	goto	l6656
 12405  0065A8                     l6652:
 12406                           
 12407                           ; BSR set to: 0
 12408                           ;lib_ili9341.c: 21:     {;lib_ili9341.c: 22:         _delay((unsigned long)((1)*(8000000
      +                          /4000.0)));
 12409  0065A8  0E03               	movlw	3
 12410  0065AA  0100               	movlb	0	; () banked
 12411  0065AC  6F8F               	movwf	??_msDelay& (0+255),b
 12412  0065AE  0E97               	movlw	151
 12413  0065B0                     u12387:
 12414  0065B0  2EE8               	decfsz	wreg,f,c
 12415  0065B2  D7FE               	bra	u12387
 12416  0065B4  2F8F               	decfsz	??_msDelay& (0+255),f,b
 12417  0065B6  D7FC               	bra	u12387
 12418  0065B8  D000               	nop2	
 12419  0065BA                     
 12420                           ;lib_ili9341.c: 23:     }
 12421  0065BA  0100               	movlb	0	; () banked
 12422  0065BC  2B91               	incf	msDelay@k& (0+255),f,b
 12423  0065BE                     l6656:
 12424                           
 12425                           ; BSR set to: 0
 12426  0065BE  5190               	movf	msDelay@ms& (0+255),w,b
 12427  0065C0  5D91               	subwf	msDelay@k& (0+255),w,b
 12428  0065C2  A0D8               	btfss	status,0,c
 12429  0065C4  EFE6  F032         	goto	u7751
 12430  0065C8  EFE8  F032         	goto	u7750
 12431  0065CC                     u7751:
 12432  0065CC  EFD4  F032         	goto	l6652
 12433  0065D0                     u7750:
 12434  0065D0                     
 12435                           ; BSR set to: 0
 12436  0065D0  0012               	return		;funcret
 12437  0065D2                     __end_of_msDelay:
 12438                           	opt callstack 0
 12439                           
 12440 ;; *************** function _lcd_fill *****************
 12441 ;; Defined at:
 12442 ;;		line 193 in file "lib_ili9341.c"
 12443 ;; Parameters:    Size  Location     Type
 12444 ;;  bg_color        2   56[BANK0 ] unsigned short 
 12445 ;; Auto vars:     Size  Location     Type
 12446 ;;  width           2   60[BANK0 ] unsigned short 
 12447 ;;  height          2   58[BANK0 ] unsigned short 
 12448 ;; Return value:  Size  Location     Type
 12449 ;;                  1    wreg      void 
 12450 ;; Registers used:
 12451 ;;		wreg, status,2, status,0, cstack
 12452 ;; Tracked objects:
 12453 ;;		On entry : 0/0
 12454 ;;		On exit  : 0/0
 12455 ;;		Unchanged: 0/0
 12456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12457 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12458 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12460 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12461 ;;Total ram usage:        6 bytes
 12462 ;; Hardware stack levels used:    1
 12463 ;; Hardware stack levels required when called:   17
 12464 ;; This function calls:
 12465 ;;		_lcd_draw_pixel
 12466 ;;		_lcd_set_cursor
 12467 ;; This function is called by:
 12468 ;;		_lcd_init
 12469 ;; This function uses a non-reentrant model
 12470 ;;
 12471                           
 12472                           	psect	text39
 12473  005CA8                     __ptext39:
 12474                           	opt callstack 0
 12475  005CA8                     _lcd_fill:
 12476                           	opt callstack 12
 12477  005CA8                     
 12478                           ;lib_ili9341.c: 193: void lcd_fill(uint16_t bg_color);lib_ili9341.c: 194: {;lib_ili9341.
      +                          c: 195:     uint16_t width = 320, height = 240;
 12479  005CA8  0E01               	movlw	1
 12480  005CAA  0100               	movlb	0	; () banked
 12481  005CAC  6F9D               	movwf	(lcd_fill@width+1)& (0+255),b
 12482  005CAE  0E40               	movlw	64
 12483  005CB0  6F9C               	movwf	lcd_fill@width& (0+255),b
 12484  005CB2  0E00               	movlw	0
 12485  005CB4  6F9B               	movwf	(lcd_fill@height+1)& (0+255),b
 12486  005CB6  0EF0               	movlw	240
 12487  005CB8  6F9A               	movwf	lcd_fill@height& (0+255),b
 12488  005CBA                     
 12489                           ; BSR set to: 0
 12490                           ;lib_ili9341.c: 197:     if( lcd_set_cursor(0,0) )
 12491  005CBA  0E00               	movlw	0
 12492  005CBC  6F95               	movwf	(lcd_set_cursor@x+1)& (0+255),b
 12493  005CBE  0E00               	movlw	0
 12494  005CC0  6F94               	movwf	lcd_set_cursor@x& (0+255),b
 12495  005CC2  0E00               	movlw	0
 12496  005CC4  6F97               	movwf	(lcd_set_cursor@y+1)& (0+255),b
 12497  005CC6  0E00               	movlw	0
 12498  005CC8  6F96               	movwf	lcd_set_cursor@y& (0+255),b
 12499  005CCA  ECBB  F031         	call	_lcd_set_cursor	;wreg free
 12500  005CCE  0900               	iorlw	0
 12501  005CD0  B4D8               	btfsc	status,2,c
 12502  005CD2  EF6D  F02E         	goto	u11881
 12503  005CD6  EF6F  F02E         	goto	u11880
 12504  005CDA                     u11881:
 12505  005CDA  EF89  F02E         	goto	l9354
 12506  005CDE                     u11880:
 12507  005CDE  EF97  F02E         	goto	l602
 12508  005CE2                     l9348:
 12509                           
 12510                           ; BSR set to: 0
 12511                           ;lib_ili9341.c: 205:         {;lib_ili9341.c: 206:             lcd_draw_pixel(bg_color);
 12512  005CE2  C098  F092         	movff	lcd_fill@bg_color,lcd_draw_pixel@color
 12513  005CE6  C099  F093         	movff	lcd_fill@bg_color+1,lcd_draw_pixel@color+1
 12514  005CEA  EC71  F034         	call	_lcd_draw_pixel	;wreg free
 12515  005CEE                     l9350:
 12516                           
 12517                           ;lib_ili9341.c: 204:         while(width--)
 12518  005CEE  0100               	movlb	0	; () banked
 12519  005CF0  079C               	decf	lcd_fill@width& (0+255),f,b
 12520  005CF2  A0D8               	btfss	status,0,c
 12521  005CF4  079D               	decf	(lcd_fill@width+1)& (0+255),f,b
 12522  005CF6  299C               	incf	lcd_fill@width& (0+255),w,b
 12523  005CF8  E106               	bnz	u11891
 12524  005CFA  299D               	incf	(lcd_fill@width+1)& (0+255),w,b
 12525  005CFC  A4D8               	btfss	status,2,c
 12526  005CFE  EF83  F02E         	goto	u11891
 12527  005D02  EF85  F02E         	goto	u11890
 12528  005D06                     u11891:
 12529  005D06  EF71  F02E         	goto	l9348
 12530  005D0A                     u11890:
 12531  005D0A                     
 12532                           ; BSR set to: 0
 12533                           ;lib_ili9341.c: 208:         width = 320;
 12534  005D0A  0E01               	movlw	1
 12535  005D0C  6F9D               	movwf	(lcd_fill@width+1)& (0+255),b
 12536  005D0E  0E40               	movlw	64
 12537  005D10  6F9C               	movwf	lcd_fill@width& (0+255),b
 12538  005D12                     l9354:
 12539                           
 12540                           ;lib_ili9341.c: 202:     while(height--)
 12541  005D12  0100               	movlb	0	; () banked
 12542  005D14  079A               	decf	lcd_fill@height& (0+255),f,b
 12543  005D16  A0D8               	btfss	status,0,c
 12544  005D18  079B               	decf	(lcd_fill@height+1)& (0+255),f,b
 12545  005D1A  299A               	incf	lcd_fill@height& (0+255),w,b
 12546  005D1C  E106               	bnz	u11901
 12547  005D1E  299B               	incf	(lcd_fill@height+1)& (0+255),w,b
 12548  005D20  A4D8               	btfss	status,2,c
 12549  005D22  EF95  F02E         	goto	u11901
 12550  005D26  EF97  F02E         	goto	u11900
 12551  005D2A                     u11901:
 12552  005D2A  EF77  F02E         	goto	l9350
 12553  005D2E                     u11900:
 12554  005D2E                     l602:
 12555  005D2E  0012               	return		;funcret
 12556  005D30                     __end_of_lcd_fill:
 12557                           	opt callstack 0
 12558                           
 12559 ;; *************** function _lcd_draw_string *****************
 12560 ;; Defined at:
 12561 ;;		line 380 in file "lib_ili9341.c"
 12562 ;; Parameters:    Size  Location     Type
 12563 ;;  x               2    0[BANK1 ] unsigned short 
 12564 ;;  y               2    2[BANK1 ] unsigned short 
 12565 ;;  pS              2    4[BANK1 ] PTR const unsigned char 
 12566 ;;		 -> string(30), STR_2(33), 
 12567 ;;  fg_color        2    6[BANK1 ] unsigned short 
 12568 ;;  bg_color        2    8[BANK1 ] unsigned short 
 12569 ;; Auto vars:     Size  Location     Type
 12570 ;;  lIndex          2   16[BANK1 ] unsigned short 
 12571 ;;  k               2   14[BANK1 ] unsigned short 
 12572 ;; Return value:  Size  Location     Type
 12573 ;;                  1    wreg      void 
 12574 ;; Registers used:
 12575 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12576 ;; Tracked objects:
 12577 ;;		On entry : 0/0
 12578 ;;		On exit  : 0/0
 12579 ;;		Unchanged: 0/0
 12580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12581 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12582 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12583 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12584 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12585 ;;Total ram usage:       18 bytes
 12586 ;; Hardware stack levels used:    1
 12587 ;; Hardware stack levels required when called:   18
 12588 ;; This function calls:
 12589 ;;		_lcd_draw_char
 12590 ;; This function is called by:
 12591 ;;		_main
 12592 ;; This function uses a non-reentrant model
 12593 ;;
 12594                           
 12595                           	psect	text40
 12596  004F5C                     __ptext40:
 12597                           	opt callstack 0
 12598  004F5C                     _lcd_draw_string:
 12599                           	opt callstack 12
 12600  004F5C                     
 12601                           ;lib_ili9341.c: 380: void lcd_draw_string (uint16_t x, uint16_t y, const char *pS, uint1
      +                          6_t fg_color, uint16_t bg_color);lib_ili9341.c: 381: {;lib_ili9341.c: 382:     uint16_t 
      +                          lIndex, k;;lib_ili9341.c: 384:     while(*pS)
 12602  004F5C  EF30  F028         	goto	l9656
 12603  004F60                     l9642:
 12604                           
 12605                           ;lib_ili9341.c: 385:     {;lib_ili9341.c: 386:         lIndex = 0;
 12606  004F60  0E00               	movlw	0
 12607  004F62  0101               	movlb	1	; () banked
 12608  004F64  6F11               	movwf	(lcd_draw_string@lIndex+1)& (0+255),b
 12609  004F66  0E00               	movlw	0
 12610  004F68  6F10               	movwf	lcd_draw_string@lIndex& (0+255),b
 12611                           
 12612                           ;lib_ili9341.c: 387:         for(k=0; k<(*pS - ' '); k++)
 12613  004F6A  0E00               	movlw	0
 12614  004F6C  6F0F               	movwf	(lcd_draw_string@k+1)& (0+255),b
 12615  004F6E  0E00               	movlw	0
 12616  004F70  6F0E               	movwf	lcd_draw_string@k& (0+255),b
 12617  004F72  EFDA  F027         	goto	l9648
 12618  004F76                     l9644:
 12619                           
 12620                           ; BSR set to: 1
 12621                           ;lib_ili9341.c: 388:         {;lib_ili9341.c: 389:             lIndex += ((font[lIndex])
      +                           << 1) + 1;
 12622  004F76  90D8               	bcf	status,0,c
 12623  004F78  3510               	rlcf	lcd_draw_string@lIndex& (0+255),w,b
 12624  004F7A  6EF6               	movwf	tblptrl,c
 12625  004F7C  3511               	rlcf	(lcd_draw_string@lIndex+1)& (0+255),w,b
 12626  004F7E  6EF7               	movwf	tblptrh,c
 12627  004F80  0E35               	movlw	low _font
 12628  004F82  26F6               	addwf	tblptrl,f,c
 12629  004F84  0EF1               	movlw	high _font
 12630  004F86  22F7               	addwfc	tblptrh,f,c
 12631  004F88                     	if	1	;There are 3 active tblptr bytes
 12632  004F88  6AF8               	clrf	tblptru,c
 12633  004F8A  0E00               	movlw	low (__mediumconst shr (0+16))
 12634  004F8C  22F8               	addwfc	tblptru,f,c
 12635  004F8E                     	endif
 12636  004F8E  0009               	tblrd		*+
 12637  004F90  CFF5 F10A          	movff	tablat,??_lcd_draw_string
 12638  004F94  0009               	tblrd		*+
 12639  004F96  CFF5 F10B          	movff	tablat,??_lcd_draw_string+1
 12640  004F9A  90D8               	bcf	status,0,c
 12641  004F9C  370A               	rlcf	??_lcd_draw_string& (0+255),f,b
 12642  004F9E  370B               	rlcf	(??_lcd_draw_string+1)& (0+255),f,b
 12643  004FA0  0E01               	movlw	1
 12644  004FA2  270A               	addwf	??_lcd_draw_string& (0+255),f,b
 12645  004FA4  0E00               	movlw	0
 12646  004FA6  230B               	addwfc	(??_lcd_draw_string+1)& (0+255),f,b
 12647  004FA8  510A               	movf	??_lcd_draw_string& (0+255),w,b
 12648  004FAA  2710               	addwf	lcd_draw_string@lIndex& (0+255),f,b
 12649  004FAC  510B               	movf	(??_lcd_draw_string+1)& (0+255),w,b
 12650  004FAE  2311               	addwfc	(lcd_draw_string@lIndex+1)& (0+255),f,b
 12651  004FB0                     
 12652                           ; BSR set to: 1
 12653                           ;lib_ili9341.c: 390:         }
 12654  004FB0  4B0E               	infsnz	lcd_draw_string@k& (0+255),f,b
 12655  004FB2  2B0F               	incf	(lcd_draw_string@k+1)& (0+255),f,b
 12656  004FB4                     l9648:
 12657                           
 12658                           ; BSR set to: 1
 12659  004FB4  0EE0               	movlw	224
 12660  004FB6  6F0A               	movwf	??_lcd_draw_string& (0+255),b
 12661  004FB8  0EFF               	movlw	255
 12662  004FBA  6F0B               	movwf	(??_lcd_draw_string+1)& (0+255),b
 12663  004FBC  C104  FFF6         	movff	lcd_draw_string@pS,tblptrl
 12664  004FC0  C105  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 12665  004FC4  0E00               	movlw	low (__mediumconst shr (0+16))
 12666  004FC6  6EF8               	movwf	tblptru,c
 12667  004FC8  0E0E               	movlw	(high __ramtop+-1)
 12668  004FCA  64F7               	cpfsgt	tblptrh,c
 12669  004FCC  D003               	bra	u12077
 12670  004FCE  0008               	tblrd		*
 12671  004FD0  50F5               	movf	tablat,w,c
 12672  004FD2  D005               	bra	u12070
 12673  004FD4                     u12077:
 12674  004FD4  CFF6 FFE9          	movff	tblptrl,fsr0l
 12675  004FD8  CFF7 FFEA          	movff	tblptrh,fsr0h
 12676  004FDC  50EF               	movf	indf0,w,c
 12677  004FDE                     u12070:
 12678  004FDE  0101               	movlb	1	; () banked
 12679  004FE0  6F0C               	movwf	(??_lcd_draw_string+2)& (0+255),b
 12680  004FE2  6B0D               	clrf	(??_lcd_draw_string+3)& (0+255),b
 12681  004FE4  510A               	movf	??_lcd_draw_string& (0+255),w,b
 12682  004FE6  270C               	addwf	(??_lcd_draw_string+2)& (0+255),f,b
 12683  004FE8  510B               	movf	(??_lcd_draw_string+1)& (0+255),w,b
 12684  004FEA  230D               	addwfc	(??_lcd_draw_string+3)& (0+255),f,b
 12685  004FEC  510C               	movf	(??_lcd_draw_string+2)& (0+255),w,b
 12686  004FEE  5D0E               	subwf	lcd_draw_string@k& (0+255),w,b
 12687  004FF0  510D               	movf	(??_lcd_draw_string+3)& (0+255),w,b
 12688  004FF2  590F               	subwfb	(lcd_draw_string@k+1)& (0+255),w,b
 12689  004FF4  A0D8               	btfss	status,0,c
 12690  004FF6  EFFF  F027         	goto	u12081
 12691  004FFA  EF01  F028         	goto	u12080
 12692  004FFE                     u12081:
 12693  004FFE  EFBB  F027         	goto	l9644
 12694  005002                     u12080:
 12695  005002                     
 12696                           ; BSR set to: 1
 12697                           ;lib_ili9341.c: 392:         lcd_draw_char(x, y, lIndex, fg_color, bg_color);
 12698  005002  C100  F098         	movff	lcd_draw_string@x,lcd_draw_char@x
 12699  005006  C101  F099         	movff	lcd_draw_string@x+1,lcd_draw_char@x+1
 12700  00500A  C102  F09A         	movff	lcd_draw_string@y,lcd_draw_char@y
 12701  00500E  C103  F09B         	movff	lcd_draw_string@y+1,lcd_draw_char@y+1
 12702  005012  C110  F09C         	movff	lcd_draw_string@lIndex,lcd_draw_char@fIndex
 12703  005016  C111  F09D         	movff	lcd_draw_string@lIndex+1,lcd_draw_char@fIndex+1
 12704  00501A  C106  F09E         	movff	lcd_draw_string@fg_color,lcd_draw_char@fg_color
 12705  00501E  C107  F09F         	movff	lcd_draw_string@fg_color+1,lcd_draw_char@fg_color+1
 12706  005022  C108  F0A0         	movff	lcd_draw_string@bg_color,lcd_draw_char@bg_color
 12707  005026  C109  F0A1         	movff	lcd_draw_string@bg_color+1,lcd_draw_char@bg_color+1
 12708  00502A  EC88  F025         	call	_lcd_draw_char	;wreg free
 12709  00502E                     
 12710                           ;lib_ili9341.c: 394:         x += font[lIndex];
 12711  00502E  90D8               	bcf	status,0,c
 12712  005030  0101               	movlb	1	; () banked
 12713  005032  3510               	rlcf	lcd_draw_string@lIndex& (0+255),w,b
 12714  005034  6EF6               	movwf	tblptrl,c
 12715  005036  3511               	rlcf	(lcd_draw_string@lIndex+1)& (0+255),w,b
 12716  005038  6EF7               	movwf	tblptrh,c
 12717  00503A  0E35               	movlw	low _font
 12718  00503C  26F6               	addwf	tblptrl,f,c
 12719  00503E  0EF1               	movlw	high _font
 12720  005040  22F7               	addwfc	tblptrh,f,c
 12721  005042                     	if	1	;There are 3 active tblptr bytes
 12722  005042  6AF8               	clrf	tblptru,c
 12723  005044  0E00               	movlw	low (__mediumconst shr (0+16))
 12724  005046  22F8               	addwfc	tblptru,f,c
 12725  005048                     	endif
 12726  005048  0009               	tblrd		*+
 12727  00504A  CFF5 F10A          	movff	tablat,??_lcd_draw_string
 12728  00504E  0009               	tblrd		*+
 12729  005050  CFF5 F10B          	movff	tablat,??_lcd_draw_string+1
 12730  005054  510A               	movf	??_lcd_draw_string& (0+255),w,b
 12731  005056  2700               	addwf	lcd_draw_string@x& (0+255),f,b
 12732  005058  510B               	movf	(??_lcd_draw_string+1)& (0+255),w,b
 12733  00505A  2301               	addwfc	(lcd_draw_string@x+1)& (0+255),f,b
 12734  00505C                     
 12735                           ; BSR set to: 1
 12736                           ;lib_ili9341.c: 396:         pS++;
 12737  00505C  4B04               	infsnz	lcd_draw_string@pS& (0+255),f,b
 12738  00505E  2B05               	incf	(lcd_draw_string@pS+1)& (0+255),f,b
 12739  005060                     l9656:
 12740                           
 12741                           ;lib_ili9341.c: 384:     while(*pS)
 12742  005060  C104  FFF6         	movff	lcd_draw_string@pS,tblptrl
 12743  005064  C105  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 12744  005068  0E00               	movlw	low (__mediumconst shr (0+16))
 12745  00506A  6EF8               	movwf	tblptru,c
 12746  00506C  0E0E               	movlw	(high __ramtop+-1)
 12747  00506E  64F7               	cpfsgt	tblptrh,c
 12748  005070  D003               	bra	u12097
 12749  005072  0008               	tblrd		*
 12750  005074  50F5               	movf	tablat,w,c
 12751  005076  D005               	bra	u12090
 12752  005078                     u12097:
 12753  005078  CFF6 FFE9          	movff	tblptrl,fsr0l
 12754  00507C  CFF7 FFEA          	movff	tblptrh,fsr0h
 12755  005080  50EF               	movf	indf0,w,c
 12756  005082                     u12090:
 12757  005082  0900               	iorlw	0
 12758  005084  A4D8               	btfss	status,2,c
 12759  005086  EF47  F028         	goto	u12101
 12760  00508A  EF49  F028         	goto	u12100
 12761  00508E                     u12101:
 12762  00508E  EFB0  F027         	goto	l9642
 12763  005092                     u12100:
 12764  005092  0012               	return		;funcret
 12765  005094                     __end_of_lcd_draw_string:
 12766                           	opt callstack 0
 12767                           
 12768 ;; *************** function _lcd_draw_char *****************
 12769 ;; Defined at:
 12770 ;;		line 355 in file "lib_ili9341.c"
 12771 ;; Parameters:    Size  Location     Type
 12772 ;;  x               2   56[BANK0 ] unsigned short 
 12773 ;;  y               2   58[BANK0 ] unsigned short 
 12774 ;;  fIndex          2   60[BANK0 ] unsigned short 
 12775 ;;  fg_color        2   62[BANK0 ] unsigned short 
 12776 ;;  bg_color        2   64[BANK0 ] unsigned short 
 12777 ;; Auto vars:     Size  Location     Type
 12778 ;;  i               1   77[BANK0 ] unsigned char 
 12779 ;;  k               1   76[BANK0 ] unsigned char 
 12780 ;;  j               1   75[BANK0 ] unsigned char 
 12781 ;; Return value:  Size  Location     Type
 12782 ;;                  1    wreg      void 
 12783 ;; Registers used:
 12784 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12785 ;; Tracked objects:
 12786 ;;		On entry : 0/0
 12787 ;;		On exit  : 0/0
 12788 ;;		Unchanged: 0/0
 12789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12790 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12791 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12792 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12793 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12794 ;;Total ram usage:       22 bytes
 12795 ;; Hardware stack levels used:    1
 12796 ;; Hardware stack levels required when called:   17
 12797 ;; This function calls:
 12798 ;;		_lcd_draw_pixel
 12799 ;;		_lcd_set_cursor
 12800 ;; This function is called by:
 12801 ;;		_lcd_draw_string
 12802 ;; This function uses a non-reentrant model
 12803 ;;
 12804                           
 12805                           	psect	text41
 12806  004B10                     __ptext41:
 12807                           	opt callstack 0
 12808  004B10                     _lcd_draw_char:
 12809                           	opt callstack 12
 12810  004B10                     
 12811                           ;lib_ili9341.c: 355: void lcd_draw_char (uint16_t x, uint16_t y, uint16_t fIndex, uint16
      +                          _t fg_color, uint16_t bg_color);lib_ili9341.c: 356: {;lib_ili9341.c: 357:     uint8_t j,
      +                           k, i;;lib_ili9341.c: 359:     for(j=0; j < font[fIndex]; j++)
 12812  004B10  0E00               	movlw	0
 12813  004B12  0100               	movlb	0	; () banked
 12814  004B14  6FAB               	movwf	lcd_draw_char@j& (0+255),b
 12815  004B16  EF2C  F026         	goto	l9392
 12816  004B1A                     l9362:
 12817                           
 12818                           ; BSR set to: 0
 12819                           ;lib_ili9341.c: 360:     {;lib_ili9341.c: 361:         lcd_set_cursor(x + font[fIndex] -
      +                           j, y);
 12820  004B1A  90D8               	bcf	status,0,c
 12821  004B1C  359C               	rlcf	lcd_draw_char@fIndex& (0+255),w,b
 12822  004B1E  6EF6               	movwf	tblptrl,c
 12823  004B20  359D               	rlcf	(lcd_draw_char@fIndex+1)& (0+255),w,b
 12824  004B22  6EF7               	movwf	tblptrh,c
 12825  004B24  0E35               	movlw	low _font
 12826  004B26  26F6               	addwf	tblptrl,f,c
 12827  004B28  0EF1               	movlw	high _font
 12828  004B2A  22F7               	addwfc	tblptrh,f,c
 12829  004B2C                     	if	1	;There are 3 active tblptr bytes
 12830  004B2C  6AF8               	clrf	tblptru,c
 12831  004B2E  0E00               	movlw	low (__mediumconst shr (0+16))
 12832  004B30  22F8               	addwfc	tblptru,f,c
 12833  004B32                     	endif
 12834  004B32  0009               	tblrd		*+
 12835  004B34  CFF5 F0A2          	movff	tablat,??_lcd_draw_char
 12836  004B38  0009               	tblrd		*+
 12837  004B3A  CFF5 F0A3          	movff	tablat,??_lcd_draw_char+1
 12838  004B3E  51AB               	movf	lcd_draw_char@j& (0+255),w,b
 12839  004B40  5FA2               	subwf	??_lcd_draw_char& (0+255),f,b
 12840  004B42  0E00               	movlw	0
 12841  004B44  5BA3               	subwfb	(??_lcd_draw_char+1)& (0+255),f,b
 12842  004B46  5198               	movf	lcd_draw_char@x& (0+255),w,b
 12843  004B48  25A2               	addwf	??_lcd_draw_char& (0+255),w,b
 12844  004B4A  6F94               	movwf	lcd_set_cursor@x& (0+255),b
 12845  004B4C  5199               	movf	(lcd_draw_char@x+1)& (0+255),w,b
 12846  004B4E  21A3               	addwfc	(??_lcd_draw_char+1)& (0+255),w,b
 12847  004B50  6F95               	movwf	(lcd_set_cursor@x+1)& (0+255),b
 12848  004B52  C09A  F096         	movff	lcd_draw_char@y,lcd_set_cursor@y
 12849  004B56  C09B  F097         	movff	lcd_draw_char@y+1,lcd_set_cursor@y+1
 12850  004B5A  ECBB  F031         	call	_lcd_set_cursor	;wreg free
 12851  004B5E                     
 12852                           ;lib_ili9341.c: 363:         for(k=0; k<2; k++)
 12853  004B5E  0E00               	movlw	0
 12854  004B60  0100               	movlb	0	; () banked
 12855  004B62  6FAC               	movwf	lcd_draw_char@k& (0+255),b
 12856  004B64                     l9370:
 12857                           
 12858                           ; BSR set to: 0
 12859                           ;lib_ili9341.c: 364:         {;lib_ili9341.c: 365:             for(i=0; i<8; i++)
 12860  004B64  0E00               	movlw	0
 12861  004B66  6FAD               	movwf	lcd_draw_char@i& (0+255),b
 12862  004B68                     l9376:
 12863                           
 12864                           ; BSR set to: 0
 12865                           ;lib_ili9341.c: 366:             {;lib_ili9341.c: 367:                 if( font[ (fIndex
      +                           + ((font[fIndex]) << 1)) - (j<<1) - k ] & (0x80 >> i) )
 12866  004B68  51AB               	movf	lcd_draw_char@j& (0+255),w,b
 12867  004B6A  6FA2               	movwf	??_lcd_draw_char& (0+255),b
 12868  004B6C  6BA3               	clrf	(??_lcd_draw_char+1)& (0+255),b
 12869  004B6E  90D8               	bcf	status,0,c
 12870  004B70  37A2               	rlcf	??_lcd_draw_char& (0+255),f,b
 12871  004B72  37A3               	rlcf	(??_lcd_draw_char+1)& (0+255),f,b
 12872  004B74  90D8               	bcf	status,0,c
 12873  004B76  359C               	rlcf	lcd_draw_char@fIndex& (0+255),w,b
 12874  004B78  6EF6               	movwf	tblptrl,c
 12875  004B7A  359D               	rlcf	(lcd_draw_char@fIndex+1)& (0+255),w,b
 12876  004B7C  6EF7               	movwf	tblptrh,c
 12877  004B7E  0E35               	movlw	low _font
 12878  004B80  26F6               	addwf	tblptrl,f,c
 12879  004B82  0EF1               	movlw	high _font
 12880  004B84  22F7               	addwfc	tblptrh,f,c
 12881  004B86                     	if	1	;There are 3 active tblptr bytes
 12882  004B86  6AF8               	clrf	tblptru,c
 12883  004B88  0E00               	movlw	low (__mediumconst shr (0+16))
 12884  004B8A  22F8               	addwfc	tblptru,f,c
 12885  004B8C                     	endif
 12886  004B8C  0009               	tblrd		*+
 12887  004B8E  CFF5 F0A4          	movff	tablat,??_lcd_draw_char+2
 12888  004B92  0009               	tblrd		*+
 12889  004B94  CFF5 F0A5          	movff	tablat,??_lcd_draw_char+3
 12890  004B98  90D8               	bcf	status,0,c
 12891  004B9A  37A4               	rlcf	(??_lcd_draw_char+2)& (0+255),f,b
 12892  004B9C  37A5               	rlcf	(??_lcd_draw_char+3)& (0+255),f,b
 12893  004B9E  51A2               	movf	??_lcd_draw_char& (0+255),w,b
 12894  004BA0  5FA4               	subwf	(??_lcd_draw_char+2)& (0+255),f,b
 12895  004BA2  51A3               	movf	(??_lcd_draw_char+1)& (0+255),w,b
 12896  004BA4  5BA5               	subwfb	(??_lcd_draw_char+3)& (0+255),f,b
 12897  004BA6  51AC               	movf	lcd_draw_char@k& (0+255),w,b
 12898  004BA8  5FA4               	subwf	(??_lcd_draw_char+2)& (0+255),f,b
 12899  004BAA  0E00               	movlw	0
 12900  004BAC  5BA5               	subwfb	(??_lcd_draw_char+3)& (0+255),f,b
 12901  004BAE  519C               	movf	lcd_draw_char@fIndex& (0+255),w,b
 12902  004BB0  27A4               	addwf	(??_lcd_draw_char+2)& (0+255),f,b
 12903  004BB2  519D               	movf	(lcd_draw_char@fIndex+1)& (0+255),w,b
 12904  004BB4  23A5               	addwfc	(??_lcd_draw_char+3)& (0+255),f,b
 12905  004BB6  90D8               	bcf	status,0,c
 12906  004BB8  37A4               	rlcf	(??_lcd_draw_char+2)& (0+255),f,b
 12907  004BBA  37A5               	rlcf	(??_lcd_draw_char+3)& (0+255),f,b
 12908  004BBC  0E35               	movlw	low _font
 12909  004BBE  25A4               	addwf	(??_lcd_draw_char+2)& (0+255),w,b
 12910  004BC0  6EF6               	movwf	tblptrl,c
 12911  004BC2  0EF1               	movlw	high _font
 12912  004BC4  21A5               	addwfc	(??_lcd_draw_char+3)& (0+255),w,b
 12913  004BC6  6EF7               	movwf	tblptrh,c
 12914  004BC8                     	if	1	;There are 3 active tblptr bytes
 12915  004BC8  6AF8               	clrf	tblptru,c
 12916  004BCA  0E00               	movlw	low (__mediumconst shr (0+16))
 12917  004BCC  22F8               	addwfc	tblptru,f,c
 12918  004BCE                     	endif
 12919  004BCE  0009               	tblrd		*+
 12920  004BD0  CFF5 F0A6          	movff	tablat,??_lcd_draw_char+4
 12921  004BD4  0009               	tblrd		*+
 12922  004BD6  CFF5 F0A7          	movff	tablat,??_lcd_draw_char+5
 12923  004BDA  C0AD  F0A8         	movff	lcd_draw_char@i,??_lcd_draw_char+6
 12924  004BDE  0E80               	movlw	128
 12925  004BE0  6FA9               	movwf	(??_lcd_draw_char+7)& (0+255),b
 12926  004BE2  0E00               	movlw	0
 12927  004BE4  6FAA               	movwf	(??_lcd_draw_char+8)& (0+255),b
 12928  004BE6  2BA8               	incf	(??_lcd_draw_char+6)& (0+255),f,b
 12929  004BE8  EFF9  F025         	goto	u11924
 12930  004BEC                     u11925:
 12931  004BEC  35AA               	rlcf	(??_lcd_draw_char+8)& (0+255),w,b
 12932  004BEE  33AA               	rrcf	(??_lcd_draw_char+8)& (0+255),f,b
 12933  004BF0  33A9               	rrcf	(??_lcd_draw_char+7)& (0+255),f,b
 12934  004BF2                     u11924:
 12935  004BF2  2FA8               	decfsz	(??_lcd_draw_char+6)& (0+255),f,b
 12936  004BF4  EFF6  F025         	goto	u11925
 12937  004BF8  0100               	movlb	0	; () banked
 12938  004BFA  51A6               	movf	(??_lcd_draw_char+4)& (0+255),w,b
 12939  004BFC  17A9               	andwf	(??_lcd_draw_char+7)& (0+255),f,b
 12940  004BFE  51A7               	movf	(??_lcd_draw_char+5)& (0+255),w,b
 12941  004C00  17AA               	andwf	(??_lcd_draw_char+8)& (0+255),f,b
 12942  004C02  51A9               	movf	(??_lcd_draw_char+7)& (0+255),w,b
 12943  004C04  11AA               	iorwf	(??_lcd_draw_char+8)& (0+255),w,b
 12944  004C06  B4D8               	btfsc	status,2,c
 12945  004C08  EF08  F026         	goto	u11931
 12946  004C0C  EF0A  F026         	goto	u11930
 12947  004C10                     u11931:
 12948  004C10  EF12  F026         	goto	l9380
 12949  004C14                     u11930:
 12950  004C14                     
 12951                           ; BSR set to: 0
 12952                           ;lib_ili9341.c: 368:                 {;lib_ili9341.c: 369:                     lcd_draw_
      +                          pixel(fg_color);
 12953  004C14  C09E  F092         	movff	lcd_draw_char@fg_color,lcd_draw_pixel@color
 12954  004C18  C09F  F093         	movff	lcd_draw_char@fg_color+1,lcd_draw_pixel@color+1
 12955  004C1C  EC71  F034         	call	_lcd_draw_pixel	;wreg free
 12956                           
 12957                           ;lib_ili9341.c: 370:                 }
 12958  004C20  EF18  F026         	goto	l9382
 12959  004C24                     l9380:
 12960                           
 12961                           ; BSR set to: 0
 12962                           ;lib_ili9341.c: 372:                 {;lib_ili9341.c: 373:                     lcd_draw_
      +                          pixel(bg_color);
 12963  004C24  C0A0  F092         	movff	lcd_draw_char@bg_color,lcd_draw_pixel@color
 12964  004C28  C0A1  F093         	movff	lcd_draw_char@bg_color+1,lcd_draw_pixel@color+1
 12965  004C2C  EC71  F034         	call	_lcd_draw_pixel	;wreg free
 12966  004C30                     l9382:
 12967                           
 12968                           ;lib_ili9341.c: 375:             }
 12969  004C30  0100               	movlb	0	; () banked
 12970  004C32  2BAD               	incf	lcd_draw_char@i& (0+255),f,b
 12971  004C34                     
 12972                           ; BSR set to: 0
 12973  004C34  0E07               	movlw	7
 12974  004C36  65AD               	cpfsgt	lcd_draw_char@i& (0+255),b
 12975  004C38  EF20  F026         	goto	u11941
 12976  004C3C  EF22  F026         	goto	u11940
 12977  004C40                     u11941:
 12978  004C40  EFB4  F025         	goto	l9376
 12979  004C44                     u11940:
 12980  004C44                     
 12981                           ; BSR set to: 0
 12982                           ;lib_ili9341.c: 376:         }
 12983  004C44  2BAC               	incf	lcd_draw_char@k& (0+255),f,b
 12984  004C46                     
 12985                           ; BSR set to: 0
 12986  004C46  0E01               	movlw	1
 12987  004C48  65AC               	cpfsgt	lcd_draw_char@k& (0+255),b
 12988  004C4A  EF29  F026         	goto	u11951
 12989  004C4E  EF2B  F026         	goto	u11950
 12990  004C52                     u11951:
 12991  004C52  EFB2  F025         	goto	l9370
 12992  004C56                     u11950:
 12993  004C56                     
 12994                           ; BSR set to: 0
 12995                           ;lib_ili9341.c: 377:     }
 12996  004C56  2BAB               	incf	lcd_draw_char@j& (0+255),f,b
 12997  004C58                     l9392:
 12998                           
 12999                           ; BSR set to: 0
 13000  004C58  90D8               	bcf	status,0,c
 13001  004C5A  359C               	rlcf	lcd_draw_char@fIndex& (0+255),w,b
 13002  004C5C  6EF6               	movwf	tblptrl,c
 13003  004C5E  359D               	rlcf	(lcd_draw_char@fIndex+1)& (0+255),w,b
 13004  004C60  6EF7               	movwf	tblptrh,c
 13005  004C62  0E35               	movlw	low _font
 13006  004C64  26F6               	addwf	tblptrl,f,c
 13007  004C66  0EF1               	movlw	high _font
 13008  004C68  22F7               	addwfc	tblptrh,f,c
 13009  004C6A                     	if	1	;There are 3 active tblptr bytes
 13010  004C6A  6AF8               	clrf	tblptru,c
 13011  004C6C  0E00               	movlw	low (__mediumconst shr (0+16))
 13012  004C6E  22F8               	addwfc	tblptru,f,c
 13013  004C70                     	endif
 13014  004C70  51AB               	movf	lcd_draw_char@j& (0+255),w,b
 13015  004C72  6FA2               	movwf	??_lcd_draw_char& (0+255),b
 13016  004C74  6BA3               	clrf	(??_lcd_draw_char+1)& (0+255),b
 13017  004C76  0009               	tblrd		*+
 13018  004C78  50F5               	movf	tablat,w,c
 13019  004C7A  5DA2               	subwf	??_lcd_draw_char& (0+255),w,b
 13020  004C7C  0009               	tblrd		*+
 13021  004C7E  50F5               	movf	tablat,w,c
 13022  004C80  59A3               	subwfb	(??_lcd_draw_char+1)& (0+255),w,b
 13023  004C82  A0D8               	btfss	status,0,c
 13024  004C84  EF46  F026         	goto	u11961
 13025  004C88  EF48  F026         	goto	u11960
 13026  004C8C                     u11961:
 13027  004C8C  EF8D  F025         	goto	l9362
 13028  004C90                     u11960:
 13029  004C90                     
 13030                           ; BSR set to: 0
 13031  004C90  0012               	return		;funcret
 13032  004C92                     __end_of_lcd_draw_char:
 13033                           	opt callstack 0
 13034                           
 13035 ;; *************** function _lcd_set_cursor *****************
 13036 ;; Defined at:
 13037 ;;		line 144 in file "lib_ili9341.c"
 13038 ;; Parameters:    Size  Location     Type
 13039 ;;  x               2   52[BANK0 ] unsigned short 
 13040 ;;  y               2   54[BANK0 ] unsigned short 
 13041 ;; Auto vars:     Size  Location     Type
 13042 ;;		None
 13043 ;; Return value:  Size  Location     Type
 13044 ;;                  1    wreg      unsigned char 
 13045 ;; Registers used:
 13046 ;;		wreg, status,2, status,0, cstack
 13047 ;; Tracked objects:
 13048 ;;		On entry : 0/0
 13049 ;;		On exit  : 0/0
 13050 ;;		Unchanged: 0/0
 13051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13052 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13055 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13056 ;;Total ram usage:        4 bytes
 13057 ;; Hardware stack levels used:    1
 13058 ;; Hardware stack levels required when called:   16
 13059 ;; This function calls:
 13060 ;;		_lcd_set_cursor_x
 13061 ;;		_lcd_set_cursor_y
 13062 ;; This function is called by:
 13063 ;;		_lcd_fill
 13064 ;;		_lcd_draw_char
 13065 ;;		_lcd_draw_pixel_at
 13066 ;;		_lcd_fill_rect
 13067 ;; This function uses a non-reentrant model
 13068 ;;
 13069                           
 13070                           	psect	text42
 13071  006376                     __ptext42:
 13072                           	opt callstack 0
 13073  006376                     _lcd_set_cursor:
 13074                           	opt callstack 12
 13075  006376                     
 13076                           ;lib_ili9341.c: 144: uint8_t lcd_set_cursor(uint16_t x, uint16_t y);lib_ili9341.c: 145: 
      +                          {;lib_ili9341.c: 146:     if( lcd_set_cursor_x(x) || lcd_set_cursor_y(y) )
 13077  006376  C094  F092         	movff	lcd_set_cursor@x,lcd_set_cursor_x@x
 13078  00637A  C095  F093         	movff	lcd_set_cursor@x+1,lcd_set_cursor_x@x+1
 13079  00637E  ECC3  F030         	call	_lcd_set_cursor_x	;wreg free
 13080  006382  0900               	iorlw	0
 13081  006384  A4D8               	btfss	status,2,c
 13082  006386  EFC7  F031         	goto	u11781
 13083  00638A  EFC9  F031         	goto	u11780
 13084  00638E                     u11781:
 13085  00638E  EFD7  F031         	goto	l9288
 13086  006392                     u11780:
 13087  006392  C096  F092         	movff	lcd_set_cursor@y,lcd_set_cursor_y@y
 13088  006396  C097  F093         	movff	lcd_set_cursor@y+1,lcd_set_cursor_y@y+1
 13089  00639A  EC9C  F030         	call	_lcd_set_cursor_y	;wreg free
 13090  00639E  0900               	iorlw	0
 13091  0063A0  B4D8               	btfsc	status,2,c
 13092  0063A2  EFD5  F031         	goto	u11791
 13093  0063A6  EFD7  F031         	goto	u11790
 13094  0063AA                     u11791:
 13095  0063AA  EFDA  F031         	goto	l9292
 13096  0063AE                     u11790:
 13097  0063AE                     l9288:
 13098                           
 13099                           ;lib_ili9341.c: 147:     {;lib_ili9341.c: 148:         return 1;
 13100  0063AE  0E01               	movlw	1
 13101  0063B0  EFDB  F031         	goto	l587
 13102  0063B4                     l9292:
 13103                           
 13104                           ;lib_ili9341.c: 151:     return 0;
 13105  0063B4  0E00               	movlw	0
 13106  0063B6                     l587:
 13107  0063B6  0012               	return		;funcret
 13108  0063B8                     __end_of_lcd_set_cursor:
 13109                           	opt callstack 0
 13110                           
 13111 ;; *************** function _lcd_set_cursor_y *****************
 13112 ;; Defined at:
 13113 ;;		line 170 in file "lib_ili9341.c"
 13114 ;; Parameters:    Size  Location     Type
 13115 ;;  y               2   50[BANK0 ] unsigned short 
 13116 ;; Auto vars:     Size  Location     Type
 13117 ;;		None
 13118 ;; Return value:  Size  Location     Type
 13119 ;;                  1    wreg      unsigned char 
 13120 ;; Registers used:
 13121 ;;		wreg, status,2, status,0, cstack
 13122 ;; Tracked objects:
 13123 ;;		On entry : 0/0
 13124 ;;		On exit  : 0/0
 13125 ;;		Unchanged: 0/0
 13126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13127 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13130 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13131 ;;Total ram usage:        2 bytes
 13132 ;; Hardware stack levels used:    1
 13133 ;; Hardware stack levels required when called:   15
 13134 ;; This function calls:
 13135 ;;		_lcd_send
 13136 ;; This function is called by:
 13137 ;;		_lcd_set_cursor
 13138 ;; This function uses a non-reentrant model
 13139 ;;
 13140                           
 13141                           	psect	text43
 13142  006138                     __ptext43:
 13143                           	opt callstack 0
 13144  006138                     _lcd_set_cursor_y:
 13145                           	opt callstack 12
 13146  006138                     
 13147                           ;lib_ili9341.c: 170: uint8_t lcd_set_cursor_y(uint16_t y);lib_ili9341.c: 171: {;lib_ili9
      +                          341.c: 172:     if( y >= 240 )
 13148  006138  0100               	movlb	0	; () banked
 13149  00613A  5193               	movf	(lcd_set_cursor_y@y+1)& (0+255),w,b
 13150  00613C  E109               	bnz	u11300
 13151  00613E  0EF0               	movlw	240
 13152  006140  5D92               	subwf	lcd_set_cursor_y@y& (0+255),w,b
 13153  006142  A0D8               	btfss	status,0,c
 13154  006144  EFA6  F030         	goto	u11301
 13155  006148  EFA8  F030         	goto	u11300
 13156  00614C                     u11301:
 13157  00614C  EFAB  F030         	goto	l8928
 13158  006150                     u11300:
 13159  006150                     
 13160                           ; BSR set to: 0
 13161                           ;lib_ili9341.c: 173:     {;lib_ili9341.c: 174:         return 1;
 13162  006150  0E01               	movlw	1
 13163  006152  EFC2  F030         	goto	l595
 13164  006156                     l8928:
 13165                           
 13166                           ; BSR set to: 0
 13167                           ;lib_ili9341.c: 177:     lcd_send(0, 0x2A);
 13168  006156  0E2A               	movlw	42
 13169  006158  6F90               	movwf	lcd_send@value& (0+255),b
 13170  00615A  0E00               	movlw	0
 13171  00615C  EC3B  F034         	call	_lcd_send
 13172                           
 13173                           ;lib_ili9341.c: 178:     lcd_send(1, y >> 8);
 13174  006160  0100               	movlb	0	; () banked
 13175  006162  5193               	movf	(lcd_set_cursor_y@y+1)& (0+255),w,b
 13176  006164  6F90               	movwf	lcd_send@value& (0+255),b
 13177  006166  0E01               	movlw	1
 13178  006168  EC3B  F034         	call	_lcd_send
 13179                           
 13180                           ;lib_ili9341.c: 179:     lcd_send(1, y & 0xFF);
 13181  00616C  C092  F090         	movff	lcd_set_cursor_y@y,lcd_send@value
 13182  006170  0E01               	movlw	1
 13183  006172  EC3B  F034         	call	_lcd_send
 13184                           
 13185                           ;lib_ili9341.c: 180:     lcd_send(0, 0x2c);
 13186  006176  0E2C               	movlw	44
 13187  006178  0100               	movlb	0	; () banked
 13188  00617A  6F90               	movwf	lcd_send@value& (0+255),b
 13189  00617C  0E00               	movlw	0
 13190  00617E  EC3B  F034         	call	_lcd_send
 13191  006182                     
 13192                           ;lib_ili9341.c: 182:     return 0;
 13193  006182  0E00               	movlw	0
 13194  006184                     l595:
 13195  006184  0012               	return		;funcret
 13196  006186                     __end_of_lcd_set_cursor_y:
 13197                           	opt callstack 0
 13198                           
 13199 ;; *************** function _lcd_set_cursor_x *****************
 13200 ;; Defined at:
 13201 ;;		line 155 in file "lib_ili9341.c"
 13202 ;; Parameters:    Size  Location     Type
 13203 ;;  x               2   50[BANK0 ] unsigned short 
 13204 ;; Auto vars:     Size  Location     Type
 13205 ;;		None
 13206 ;; Return value:  Size  Location     Type
 13207 ;;                  1    wreg      unsigned char 
 13208 ;; Registers used:
 13209 ;;		wreg, status,2, status,0, cstack
 13210 ;; Tracked objects:
 13211 ;;		On entry : 0/0
 13212 ;;		On exit  : 0/0
 13213 ;;		Unchanged: 0/0
 13214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13215 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13218 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13219 ;;Total ram usage:        2 bytes
 13220 ;; Hardware stack levels used:    1
 13221 ;; Hardware stack levels required when called:   15
 13222 ;; This function calls:
 13223 ;;		_lcd_send
 13224 ;; This function is called by:
 13225 ;;		_lcd_set_cursor
 13226 ;; This function uses a non-reentrant model
 13227 ;;
 13228                           
 13229                           	psect	text44
 13230  006186                     __ptext44:
 13231                           	opt callstack 0
 13232  006186                     _lcd_set_cursor_x:
 13233                           	opt callstack 12
 13234  006186                     
 13235                           ;lib_ili9341.c: 155: uint8_t lcd_set_cursor_x(uint16_t x);lib_ili9341.c: 156: {;lib_ili9
      +                          341.c: 157:     if( x >= 320 )
 13236  006186  0E40               	movlw	64
 13237  006188  0100               	movlb	0	; () banked
 13238  00618A  5D92               	subwf	lcd_set_cursor_x@x& (0+255),w,b
 13239  00618C  0E01               	movlw	1
 13240  00618E  5993               	subwfb	(lcd_set_cursor_x@x+1)& (0+255),w,b
 13241  006190  A0D8               	btfss	status,0,c
 13242  006192  EFCD  F030         	goto	u11291
 13243  006196  EFCF  F030         	goto	u11290
 13244  00619A                     u11291:
 13245  00619A  EFD2  F030         	goto	l8916
 13246  00619E                     u11290:
 13247  00619E                     
 13248                           ; BSR set to: 0
 13249                           ;lib_ili9341.c: 158:     {;lib_ili9341.c: 159:         return 1;
 13250  00619E  0E01               	movlw	1
 13251  0061A0  EFE9  F030         	goto	l591
 13252  0061A4                     l8916:
 13253                           
 13254                           ; BSR set to: 0
 13255                           ;lib_ili9341.c: 162:     lcd_send(0, 0x2B);
 13256  0061A4  0E2B               	movlw	43
 13257  0061A6  6F90               	movwf	lcd_send@value& (0+255),b
 13258  0061A8  0E00               	movlw	0
 13259  0061AA  EC3B  F034         	call	_lcd_send
 13260                           
 13261                           ;lib_ili9341.c: 163:     lcd_send(1, x >> 8);
 13262  0061AE  0100               	movlb	0	; () banked
 13263  0061B0  5193               	movf	(lcd_set_cursor_x@x+1)& (0+255),w,b
 13264  0061B2  6F90               	movwf	lcd_send@value& (0+255),b
 13265  0061B4  0E01               	movlw	1
 13266  0061B6  EC3B  F034         	call	_lcd_send
 13267                           
 13268                           ;lib_ili9341.c: 164:     lcd_send(1, x & 0xFF);
 13269  0061BA  C092  F090         	movff	lcd_set_cursor_x@x,lcd_send@value
 13270  0061BE  0E01               	movlw	1
 13271  0061C0  EC3B  F034         	call	_lcd_send
 13272                           
 13273                           ;lib_ili9341.c: 165:     lcd_send(0, 0x2c);
 13274  0061C4  0E2C               	movlw	44
 13275  0061C6  0100               	movlb	0	; () banked
 13276  0061C8  6F90               	movwf	lcd_send@value& (0+255),b
 13277  0061CA  0E00               	movlw	0
 13278  0061CC  EC3B  F034         	call	_lcd_send
 13279  0061D0                     
 13280                           ;lib_ili9341.c: 167:     return 0;
 13281  0061D0  0E00               	movlw	0
 13282  0061D2                     l591:
 13283  0061D2  0012               	return		;funcret
 13284  0061D4                     __end_of_lcd_set_cursor_x:
 13285                           	opt callstack 0
 13286                           
 13287 ;; *************** function _lcd_draw_pixel *****************
 13288 ;; Defined at:
 13289 ;;		line 185 in file "lib_ili9341.c"
 13290 ;; Parameters:    Size  Location     Type
 13291 ;;  color           2   50[BANK0 ] unsigned short 
 13292 ;; Auto vars:     Size  Location     Type
 13293 ;;		None
 13294 ;; Return value:  Size  Location     Type
 13295 ;;                  1    wreg      unsigned char 
 13296 ;; Registers used:
 13297 ;;		wreg, status,2, cstack
 13298 ;; Tracked objects:
 13299 ;;		On entry : 0/0
 13300 ;;		On exit  : 0/0
 13301 ;;		Unchanged: 0/0
 13302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13303 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13306 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13307 ;;Total ram usage:        2 bytes
 13308 ;; Hardware stack levels used:    1
 13309 ;; Hardware stack levels required when called:   15
 13310 ;; This function calls:
 13311 ;;		_lcd_send
 13312 ;; This function is called by:
 13313 ;;		_lcd_fill
 13314 ;;		_lcd_draw_char
 13315 ;;		_lcd_draw_pixel_at
 13316 ;;		_lcd_fill_rect
 13317 ;; This function uses a non-reentrant model
 13318 ;;
 13319                           
 13320                           	psect	text45
 13321  0068E2                     __ptext45:
 13322                           	opt callstack 0
 13323  0068E2                     _lcd_draw_pixel:
 13324                           	opt callstack 13
 13325  0068E2                     
 13326                           ;lib_ili9341.c: 185: uint8_t lcd_draw_pixel(uint16_t color);lib_ili9341.c: 186: {;lib_il
      +                          i9341.c: 187:     lcd_send(1, color >> 8);
 13327  0068E2  0100               	movlb	0	; () banked
 13328  0068E4  5193               	movf	(lcd_draw_pixel@color+1)& (0+255),w,b
 13329  0068E6  6F90               	movwf	lcd_send@value& (0+255),b
 13330  0068E8  0E01               	movlw	1
 13331  0068EA  EC3B  F034         	call	_lcd_send
 13332                           
 13333                           ;lib_ili9341.c: 188:     lcd_send(1, color & 0xFF);
 13334  0068EE  C092  F090         	movff	lcd_draw_pixel@color,lcd_send@value
 13335  0068F2  0E01               	movlw	1
 13336  0068F4  EC3B  F034         	call	_lcd_send
 13337  0068F8  0012               	return		;funcret
 13338  0068FA                     __end_of_lcd_draw_pixel:
 13339                           	opt callstack 0
 13340                           
 13341 ;; *************** function _lcd_send *****************
 13342 ;; Defined at:
 13343 ;;		line 134 in file "lib_ili9341.c"
 13344 ;; Parameters:    Size  Location     Type
 13345 ;;  dc              1    wreg     _Bool 
 13346 ;;  value           1   48[BANK0 ] unsigned char 
 13347 ;; Auto vars:     Size  Location     Type
 13348 ;;  dc              1   49[BANK0 ] _Bool 
 13349 ;; Return value:  Size  Location     Type
 13350 ;;                  1    wreg      void 
 13351 ;; Registers used:
 13352 ;;		wreg, status,2, cstack
 13353 ;; Tracked objects:
 13354 ;;		On entry : 0/0
 13355 ;;		On exit  : 0/0
 13356 ;;		Unchanged: 0/0
 13357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13358 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13359 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13361 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13362 ;;Total ram usage:        2 bytes
 13363 ;; Hardware stack levels used:    1
 13364 ;; Hardware stack levels required when called:   14
 13365 ;; This function calls:
 13366 ;;		_SPI_ExchangeByte
 13367 ;; This function is called by:
 13368 ;;		_lcd_init
 13369 ;;		_lcd_set_cursor_x
 13370 ;;		_lcd_set_cursor_y
 13371 ;;		_lcd_draw_pixel
 13372 ;; This function uses a non-reentrant model
 13373 ;;
 13374                           
 13375                           	psect	text46
 13376  006876                     __ptext46:
 13377                           	opt callstack 0
 13378  006876                     _lcd_send:
 13379                           	opt callstack 15
 13380                           
 13381                           ;incstack = 0
 13382                           ;lcd_send@dc stored from wreg
 13383  006876  0100               	movlb	0	; () banked
 13384  006878  6F91               	movwf	lcd_send@dc& (0+255),b
 13385  00687A                     
 13386                           ;lib_ili9341.c: 134: void lcd_send(_Bool dc, uint8_t value);lib_ili9341.c: 135: {;lib_il
      +                          i9341.c: 136:     LATEbits.LE0 = dc;
 13387  00687A  0100               	movlb	0	; () banked
 13388  00687C  B191               	btfsc	lcd_send@dc& (0+255),0,b
 13389  00687E  D002               	bra	u10635
 13390  006880  908D               	bcf	141,0,c	;volatile
 13391  006882  D001               	bra	u10636
 13392  006884                     u10635:
 13393  006884  808D               	bsf	141,0,c	;volatile
 13394  006886                     u10636:
 13395  006886                     
 13396                           ;lib_ili9341.c: 138:     LATEbits.LE1 = 0;
 13397  006886  928D               	bcf	141,1,c	;volatile
 13398  006888                     
 13399                           ;lib_ili9341.c: 140:     SPI_ExchangeByte(value);
 13400  006888  0100               	movlb	0	; () banked
 13401  00688A  5190               	movf	lcd_send@value& (0+255),w,b
 13402  00688C  EC4A  F034         	call	_SPI_ExchangeByte
 13403  006890                     
 13404                           ;lib_ili9341.c: 141:     LATEbits.LE1 = 1;
 13405  006890  828D               	bsf	141,1,c	;volatile
 13406  006892  0012               	return		;funcret
 13407  006894                     __end_of_lcd_send:
 13408                           	opt callstack 0
 13409                           
 13410 ;; *************** function _SPI_ExchangeByte *****************
 13411 ;; Defined at:
 13412 ;;		line 92 in file "mcc_generated_files/spi.c"
 13413 ;; Parameters:    Size  Location     Type
 13414 ;;  data            1    wreg     unsigned char 
 13415 ;; Auto vars:     Size  Location     Type
 13416 ;;  data            1   47[BANK0 ] unsigned char 
 13417 ;; Return value:  Size  Location     Type
 13418 ;;                  1    wreg      unsigned char 
 13419 ;; Registers used:
 13420 ;;		wreg, status,2
 13421 ;; Tracked objects:
 13422 ;;		On entry : 0/0
 13423 ;;		On exit  : 0/0
 13424 ;;		Unchanged: 0/0
 13425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13427 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13429 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13430 ;;Total ram usage:        1 bytes
 13431 ;; Hardware stack levels used:    1
 13432 ;; Hardware stack levels required when called:   13
 13433 ;; This function calls:
 13434 ;;		Nothing
 13435 ;; This function is called by:
 13436 ;;		_lcd_send
 13437 ;;		_SPI_WriteBlock
 13438 ;;		_SPI_ReadBlock
 13439 ;; This function uses a non-reentrant model
 13440 ;;
 13441                           
 13442                           	psect	text47
 13443  006894                     __ptext47:
 13444                           	opt callstack 0
 13445  006894                     _SPI_ExchangeByte:
 13446                           	opt callstack 15
 13447                           
 13448                           ;incstack = 0
 13449                           ;SPI_ExchangeByte@data stored from wreg
 13450  006894  0100               	movlb	0	; () banked
 13451  006896  6F8F               	movwf	SPI_ExchangeByte@data& (0+255),b
 13452  006898                     
 13453                           ;mcc_generated_files/spi.c: 92: uint8_t SPI_ExchangeByte(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 93: {;mcc_generated_files/spi.c: 94:     SSPBUF = data;
 13454  006898  C08F  FFC9         	movff	SPI_ExchangeByte@data,4041	;volatile
 13455  00689C                     l61:
 13456  00689C  A69E               	btfss	158,3,c	;volatile
 13457  00689E  EF53  F034         	goto	u9691
 13458  0068A2  EF55  F034         	goto	u9690
 13459  0068A6                     u9691:
 13460  0068A6  EF4E  F034         	goto	l61
 13461  0068AA                     u9690:
 13462  0068AA                     
 13463                           ;mcc_generated_files/spi.c: 96:     PIR1bits.SSPIF = 0;
 13464  0068AA  969E               	bcf	158,3,c	;volatile
 13465                           
 13466                           ;mcc_generated_files/spi.c: 97:     return SSPBUF;
 13467  0068AC  50C9               	movf	201,w,c	;volatile
 13468  0068AE  0012               	return		;funcret
 13469  0068B0                     __end_of_SPI_ExchangeByte:
 13470                           	opt callstack 0
 13471                           
 13472 ;; *************** function ___lmul *****************
 13473 ;; Defined at:
 13474 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
 13475 ;; Parameters:    Size  Location     Type
 13476 ;;  multiplier      4   47[BANK0 ] unsigned long 
 13477 ;;  multiplicand    4   51[BANK0 ] unsigned long 
 13478 ;; Auto vars:     Size  Location     Type
 13479 ;;  product         4   55[BANK0 ] unsigned long 
 13480 ;; Return value:  Size  Location     Type
 13481 ;;                  4   47[BANK0 ] unsigned long 
 13482 ;; Registers used:
 13483 ;;		wreg, status,2, status,0
 13484 ;; Tracked objects:
 13485 ;;		On entry : 0/0
 13486 ;;		On exit  : 0/0
 13487 ;;		Unchanged: 0/0
 13488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13489 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13490 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13492 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13493 ;;Total ram usage:       12 bytes
 13494 ;; Hardware stack levels used:    1
 13495 ;; Hardware stack levels required when called:   13
 13496 ;; This function calls:
 13497 ;;		Nothing
 13498 ;; This function is called by:
 13499 ;;		_main
 13500 ;; This function uses a non-reentrant model
 13501 ;;
 13502                           
 13503                           	psect	text48
 13504  005D30                     __ptext48:
 13505                           	opt callstack 0
 13506  005D30                     ___lmul:
 13507                           	opt callstack 17
 13508  005D30  0E00               	movlw	0
 13509  005D32  0100               	movlb	0	; () banked
 13510  005D34  6F97               	movwf	___lmul@product& (0+255),b
 13511  005D36  0E00               	movlw	0
 13512  005D38  6F98               	movwf	(___lmul@product+1)& (0+255),b
 13513  005D3A  0E00               	movlw	0
 13514  005D3C  6F99               	movwf	(___lmul@product+2)& (0+255),b
 13515  005D3E  0E00               	movlw	0
 13516  005D40  6F9A               	movwf	(___lmul@product+3)& (0+255),b
 13517  005D42                     l7114:
 13518                           
 13519                           ; BSR set to: 0
 13520  005D42  A18F               	btfss	___lmul@multiplier& (0+255),0,b
 13521  005D44  EFA6  F02E         	goto	u8121
 13522  005D48  EFA8  F02E         	goto	u8120
 13523  005D4C                     u8121:
 13524  005D4C  EFB0  F02E         	goto	l7118
 13525  005D50                     u8120:
 13526  005D50                     
 13527                           ; BSR set to: 0
 13528  005D50  5193               	movf	___lmul@multiplicand& (0+255),w,b
 13529  005D52  2797               	addwf	___lmul@product& (0+255),f,b
 13530  005D54  5194               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 13531  005D56  2398               	addwfc	(___lmul@product+1)& (0+255),f,b
 13532  005D58  5195               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 13533  005D5A  2399               	addwfc	(___lmul@product+2)& (0+255),f,b
 13534  005D5C  5196               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 13535  005D5E  239A               	addwfc	(___lmul@product+3)& (0+255),f,b
 13536  005D60                     l7118:
 13537                           
 13538                           ; BSR set to: 0
 13539  005D60  90D8               	bcf	status,0,c
 13540  005D62  3793               	rlcf	___lmul@multiplicand& (0+255),f,b
 13541  005D64  3794               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 13542  005D66  3795               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 13543  005D68  3796               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 13544  005D6A                     
 13545                           ; BSR set to: 0
 13546  005D6A  90D8               	bcf	status,0,c
 13547  005D6C  3392               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 13548  005D6E  3391               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 13549  005D70  3390               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 13550  005D72  338F               	rrcf	___lmul@multiplier& (0+255),f,b
 13551  005D74  518F               	movf	___lmul@multiplier& (0+255),w,b
 13552  005D76  1190               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 13553  005D78  1191               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 13554  005D7A  1192               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 13555  005D7C  A4D8               	btfss	status,2,c
 13556  005D7E  EFC3  F02E         	goto	u8131
 13557  005D82  EFC5  F02E         	goto	u8130
 13558  005D86                     u8131:
 13559  005D86  EFA1  F02E         	goto	l7114
 13560  005D8A                     u8130:
 13561  005D8A                     
 13562                           ; BSR set to: 0
 13563  005D8A  C097  F08F         	movff	___lmul@product,?___lmul
 13564  005D8E  C098  F090         	movff	___lmul@product+1,?___lmul+1
 13565  005D92  C099  F091         	movff	___lmul@product+2,?___lmul+2
 13566  005D96  C09A  F092         	movff	___lmul@product+3,?___lmul+3
 13567  005D9A                     
 13568                           ; BSR set to: 0
 13569  005D9A  0012               	return		;funcret
 13570  005D9C                     __end_of___lmul:
 13571                           	opt callstack 0
 13572                           
 13573 ;; *************** function ___aldiv *****************
 13574 ;; Defined at:
 13575 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 13576 ;; Parameters:    Size  Location     Type
 13577 ;;  dividend        4   59[BANK0 ] long 
 13578 ;;  divisor         4   63[BANK0 ] long 
 13579 ;; Auto vars:     Size  Location     Type
 13580 ;;  quotient        4   69[BANK0 ] long 
 13581 ;;  sign            1   68[BANK0 ] unsigned char 
 13582 ;;  counter         1   67[BANK0 ] unsigned char 
 13583 ;; Return value:  Size  Location     Type
 13584 ;;                  4   59[BANK0 ] long 
 13585 ;; Registers used:
 13586 ;;		wreg, status,2, status,0
 13587 ;; Tracked objects:
 13588 ;;		On entry : 0/0
 13589 ;;		On exit  : 0/0
 13590 ;;		Unchanged: 0/0
 13591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13592 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13593 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13595 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13596 ;;Total ram usage:       14 bytes
 13597 ;; Hardware stack levels used:    1
 13598 ;; Hardware stack levels required when called:   13
 13599 ;; This function calls:
 13600 ;;		Nothing
 13601 ;; This function is called by:
 13602 ;;		_main
 13603 ;; This function uses a non-reentrant model
 13604 ;;
 13605                           
 13606                           	psect	text49
 13607  0051A4                     __ptext49:
 13608                           	opt callstack 0
 13609  0051A4                     ___aldiv:
 13610                           	opt callstack 17
 13611  0051A4  0E00               	movlw	0
 13612  0051A6  0100               	movlb	0	; () banked
 13613  0051A8  6FA4               	movwf	___aldiv@sign& (0+255),b
 13614  0051AA                     
 13615                           ; BSR set to: 0
 13616  0051AA  BFA2               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
 13617  0051AC  EFDC  F028         	goto	u8140
 13618  0051B0  EFDA  F028         	goto	u8141
 13619  0051B4                     u8141:
 13620  0051B4  EFE6  F028         	goto	l7130
 13621  0051B8                     u8140:
 13622  0051B8                     
 13623                           ; BSR set to: 0
 13624  0051B8  1FA2               	comf	(___aldiv@divisor+3)& (0+255),f,b
 13625  0051BA  1FA1               	comf	(___aldiv@divisor+2)& (0+255),f,b
 13626  0051BC  1FA0               	comf	(___aldiv@divisor+1)& (0+255),f,b
 13627  0051BE  6D9F               	negf	___aldiv@divisor& (0+255),b
 13628  0051C0  0E00               	movlw	0
 13629  0051C2  23A0               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 13630  0051C4  23A1               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 13631  0051C6  23A2               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 13632  0051C8                     
 13633                           ; BSR set to: 0
 13634  0051C8  0E01               	movlw	1
 13635  0051CA  6FA4               	movwf	___aldiv@sign& (0+255),b
 13636  0051CC                     l7130:
 13637                           
 13638                           ; BSR set to: 0
 13639  0051CC  BF9E               	btfsc	(___aldiv@dividend+3)& (0+255),7,b
 13640  0051CE  EFED  F028         	goto	u8150
 13641  0051D2  EFEB  F028         	goto	u8151
 13642  0051D6                     u8151:
 13643  0051D6  EFF7  F028         	goto	l7136
 13644  0051DA                     u8150:
 13645  0051DA                     
 13646                           ; BSR set to: 0
 13647  0051DA  1F9E               	comf	(___aldiv@dividend+3)& (0+255),f,b
 13648  0051DC  1F9D               	comf	(___aldiv@dividend+2)& (0+255),f,b
 13649  0051DE  1F9C               	comf	(___aldiv@dividend+1)& (0+255),f,b
 13650  0051E0  6D9B               	negf	___aldiv@dividend& (0+255),b
 13651  0051E2  0E00               	movlw	0
 13652  0051E4  239C               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 13653  0051E6  239D               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 13654  0051E8  239E               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 13655  0051EA                     
 13656                           ; BSR set to: 0
 13657  0051EA  0E01               	movlw	1
 13658  0051EC  1BA4               	xorwf	___aldiv@sign& (0+255),f,b
 13659  0051EE                     l7136:
 13660                           
 13661                           ; BSR set to: 0
 13662  0051EE  0E00               	movlw	0
 13663  0051F0  6FA5               	movwf	___aldiv@quotient& (0+255),b
 13664  0051F2  0E00               	movlw	0
 13665  0051F4  6FA6               	movwf	(___aldiv@quotient+1)& (0+255),b
 13666  0051F6  0E00               	movlw	0
 13667  0051F8  6FA7               	movwf	(___aldiv@quotient+2)& (0+255),b
 13668  0051FA  0E00               	movlw	0
 13669  0051FC  6FA8               	movwf	(___aldiv@quotient+3)& (0+255),b
 13670  0051FE                     
 13671                           ; BSR set to: 0
 13672  0051FE  519F               	movf	___aldiv@divisor& (0+255),w,b
 13673  005200  11A0               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 13674  005202  11A1               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 13675  005204  11A2               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 13676  005206  B4D8               	btfsc	status,2,c
 13677  005208  EF08  F029         	goto	u8161
 13678  00520C  EF0A  F029         	goto	u8160
 13679  005210                     u8161:
 13680  005210  EF40  F029         	goto	l7158
 13681  005214                     u8160:
 13682  005214                     
 13683                           ; BSR set to: 0
 13684  005214  0E01               	movlw	1
 13685  005216  6FA3               	movwf	___aldiv@counter& (0+255),b
 13686  005218  EF14  F029         	goto	l7144
 13687  00521C                     l7142:
 13688                           
 13689                           ; BSR set to: 0
 13690  00521C  90D8               	bcf	status,0,c
 13691  00521E  379F               	rlcf	___aldiv@divisor& (0+255),f,b
 13692  005220  37A0               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 13693  005222  37A1               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 13694  005224  37A2               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 13695  005226  2BA3               	incf	___aldiv@counter& (0+255),f,b
 13696  005228                     l7144:
 13697                           
 13698                           ; BSR set to: 0
 13699  005228  AFA2               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 13700  00522A  EF19  F029         	goto	u8171
 13701  00522E  EF1B  F029         	goto	u8170
 13702  005232                     u8171:
 13703  005232  EF0E  F029         	goto	l7142
 13704  005236                     u8170:
 13705  005236                     l7146:
 13706                           
 13707                           ; BSR set to: 0
 13708  005236  90D8               	bcf	status,0,c
 13709  005238  37A5               	rlcf	___aldiv@quotient& (0+255),f,b
 13710  00523A  37A6               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 13711  00523C  37A7               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 13712  00523E  37A8               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 13713  005240                     
 13714                           ; BSR set to: 0
 13715  005240  519F               	movf	___aldiv@divisor& (0+255),w,b
 13716  005242  5D9B               	subwf	___aldiv@dividend& (0+255),w,b
 13717  005244  51A0               	movf	(___aldiv@divisor+1)& (0+255),w,b
 13718  005246  599C               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 13719  005248  51A1               	movf	(___aldiv@divisor+2)& (0+255),w,b
 13720  00524A  599D               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 13721  00524C  51A2               	movf	(___aldiv@divisor+3)& (0+255),w,b
 13722  00524E  599E               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 13723  005250  A0D8               	btfss	status,0,c
 13724  005252  EF2D  F029         	goto	u8181
 13725  005256  EF2F  F029         	goto	u8180
 13726  00525A                     u8181:
 13727  00525A  EF38  F029         	goto	l7154
 13728  00525E                     u8180:
 13729  00525E                     
 13730                           ; BSR set to: 0
 13731  00525E  519F               	movf	___aldiv@divisor& (0+255),w,b
 13732  005260  5F9B               	subwf	___aldiv@dividend& (0+255),f,b
 13733  005262  51A0               	movf	(___aldiv@divisor+1)& (0+255),w,b
 13734  005264  5B9C               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 13735  005266  51A1               	movf	(___aldiv@divisor+2)& (0+255),w,b
 13736  005268  5B9D               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 13737  00526A  51A2               	movf	(___aldiv@divisor+3)& (0+255),w,b
 13738  00526C  5B9E               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 13739  00526E                     
 13740                           ; BSR set to: 0
 13741  00526E  81A5               	bsf	___aldiv@quotient& (0+255),0,b
 13742  005270                     l7154:
 13743                           
 13744                           ; BSR set to: 0
 13745  005270  90D8               	bcf	status,0,c
 13746  005272  33A2               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 13747  005274  33A1               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 13748  005276  33A0               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 13749  005278  339F               	rrcf	___aldiv@divisor& (0+255),f,b
 13750  00527A                     
 13751                           ; BSR set to: 0
 13752  00527A  2FA3               	decfsz	___aldiv@counter& (0+255),f,b
 13753  00527C  EF1B  F029         	goto	l7146
 13754  005280                     l7158:
 13755                           
 13756                           ; BSR set to: 0
 13757  005280  51A4               	movf	___aldiv@sign& (0+255),w,b
 13758  005282  B4D8               	btfsc	status,2,c
 13759  005284  EF46  F029         	goto	u8191
 13760  005288  EF48  F029         	goto	u8190
 13761  00528C                     u8191:
 13762  00528C  EF50  F029         	goto	l7162
 13763  005290                     u8190:
 13764  005290                     
 13765                           ; BSR set to: 0
 13766  005290  1FA8               	comf	(___aldiv@quotient+3)& (0+255),f,b
 13767  005292  1FA7               	comf	(___aldiv@quotient+2)& (0+255),f,b
 13768  005294  1FA6               	comf	(___aldiv@quotient+1)& (0+255),f,b
 13769  005296  6DA5               	negf	___aldiv@quotient& (0+255),b
 13770  005298  0E00               	movlw	0
 13771  00529A  23A6               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 13772  00529C  23A7               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 13773  00529E  23A8               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 13774  0052A0                     l7162:
 13775                           
 13776                           ; BSR set to: 0
 13777  0052A0  C0A5  F09B         	movff	___aldiv@quotient,?___aldiv
 13778  0052A4  C0A6  F09C         	movff	___aldiv@quotient+1,?___aldiv+1
 13779  0052A8  C0A7  F09D         	movff	___aldiv@quotient+2,?___aldiv+2
 13780  0052AC  C0A8  F09E         	movff	___aldiv@quotient+3,?___aldiv+3
 13781  0052B0                     
 13782                           ; BSR set to: 0
 13783  0052B0  0012               	return		;funcret
 13784  0052B2                     __end_of___aldiv:
 13785                           	opt callstack 0
 13786                           
 13787 ;; *************** function _SYSTEM_Initialize *****************
 13788 ;; Defined at:
 13789 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13790 ;; Parameters:    Size  Location     Type
 13791 ;;		None
 13792 ;; Auto vars:     Size  Location     Type
 13793 ;;		None
 13794 ;; Return value:  Size  Location     Type
 13795 ;;                  1    wreg      void 
 13796 ;; Registers used:
 13797 ;;		wreg, status,2, status,0, cstack
 13798 ;; Tracked objects:
 13799 ;;		On entry : 0/0
 13800 ;;		On exit  : 0/0
 13801 ;;		Unchanged: 0/0
 13802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13807 ;;Total ram usage:        0 bytes
 13808 ;; Hardware stack levels used:    1
 13809 ;; Hardware stack levels required when called:   15
 13810 ;; This function calls:
 13811 ;;		_ADC_Initialize
 13812 ;;		_EUSART1_Initialize
 13813 ;;		_INTERRUPT_Initialize
 13814 ;;		_OSCILLATOR_Initialize
 13815 ;;		_PIN_MANAGER_Initialize
 13816 ;;		_SPI_Initialize
 13817 ;;		_TMR0_Initialize
 13818 ;;		_TMR1_Initialize
 13819 ;; This function is called by:
 13820 ;;		_main
 13821 ;; This function uses a non-reentrant model
 13822 ;;
 13823                           
 13824                           	psect	text50
 13825  006854                     __ptext50:
 13826                           	opt callstack 0
 13827  006854                     _SYSTEM_Initialize:
 13828                           	opt callstack 15
 13829  006854                     
 13830                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
 13831  006854  ECEC  F034         	call	_INTERRUPT_Initialize	;wreg free
 13832  006858                     
 13833                           ;mcc_generated_files/mcc.c: 54:     SPI_Initialize();
 13834  006858  ECA9  F034         	call	_SPI_Initialize	;wreg free
 13835  00685C                     
 13836                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 13837  00685C  EC32  F031         	call	_PIN_MANAGER_Initialize	;wreg free
 13838  006860                     
 13839                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 13840  006860  ECB2  F034         	call	_OSCILLATOR_Initialize	;wreg free
 13841  006864                     
 13842                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
 13843  006864  EC89  F034         	call	_ADC_Initialize	;wreg free
 13844  006868                     
 13845                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
 13846  006868  EC87  F033         	call	_TMR1_Initialize	;wreg free
 13847  00686C                     
 13848                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
 13849  00686C  ECC7  F033         	call	_TMR0_Initialize	;wreg free
 13850  006870                     
 13851                           ;mcc_generated_files/mcc.c: 60:     EUSART1_Initialize();
 13852  006870  EC55  F031         	call	_EUSART1_Initialize	;wreg free
 13853  006874  0012               	return		;funcret
 13854  006876                     __end_of_SYSTEM_Initialize:
 13855                           	opt callstack 0
 13856                           
 13857 ;; *************** function _TMR1_Initialize *****************
 13858 ;; Defined at:
 13859 ;;		line 63 in file "mcc_generated_files/tmr1.c"
 13860 ;; Parameters:    Size  Location     Type
 13861 ;;		None
 13862 ;; Auto vars:     Size  Location     Type
 13863 ;;		None
 13864 ;; Return value:  Size  Location     Type
 13865 ;;                  1    wreg      void 
 13866 ;; Registers used:
 13867 ;;		wreg, status,2, status,0
 13868 ;; Tracked objects:
 13869 ;;		On entry : 0/0
 13870 ;;		On exit  : 0/0
 13871 ;;		Unchanged: 0/0
 13872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13875 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13876 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13877 ;;Total ram usage:        2 bytes
 13878 ;; Hardware stack levels used:    1
 13879 ;; Hardware stack levels required when called:   13
 13880 ;; This function calls:
 13881 ;;		Nothing
 13882 ;; This function is called by:
 13883 ;;		_SYSTEM_Initialize
 13884 ;; This function uses a non-reentrant model
 13885 ;;
 13886                           
 13887                           	psect	text51
 13888  00670E                     __ptext51:
 13889                           	opt callstack 0
 13890  00670E                     _TMR1_Initialize:
 13891                           	opt callstack 16
 13892  00670E                     
 13893                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
 13894  00670E  0E00               	movlw	0
 13895  006710  6EAA               	movwf	170,c	;volatile
 13896                           
 13897                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x0B;
 13898  006712  0E0B               	movlw	11
 13899  006714  6ECF               	movwf	207,c	;volatile
 13900                           
 13901                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0xDC;
 13902  006716  0EDC               	movlw	220
 13903  006718  6ECE               	movwf	206,c	;volatile
 13904  00671A                     
 13905                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
 13906  00671A  909E               	bcf	158,0,c	;volatile
 13907  00671C                     
 13908                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 13909  00671C  50CE               	movf	206,w,c	;volatile
 13910  00671E  CFCF F08F          	movff	4047,??_TMR1_Initialize	;volatile
 13911  006722  0100               	movlb	0	; () banked
 13912  006724  6B90               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 13913  006726  C08F  F090         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 13914  00672A  6B8F               	clrf	??_TMR1_Initialize& (0+255),b
 13915  00672C  118F               	iorwf	??_TMR1_Initialize& (0+255),w,b
 13916  00672E  6FC6               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 13917  006730  5190               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 13918  006732  6FC7               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 13919  006734                     
 13920                           ; BSR set to: 0
 13921                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x31;
 13922  006734  0E31               	movlw	49
 13923  006736  6ECD               	movwf	205,c	;volatile
 13924  006738                     
 13925                           ; BSR set to: 0
 13926  006738  0012               	return		;funcret
 13927  00673A                     __end_of_TMR1_Initialize:
 13928                           	opt callstack 0
 13929                           
 13930 ;; *************** function _TMR0_Initialize *****************
 13931 ;; Defined at:
 13932 ;;		line 66 in file "mcc_generated_files/tmr0.c"
 13933 ;; Parameters:    Size  Location     Type
 13934 ;;		None
 13935 ;; Auto vars:     Size  Location     Type
 13936 ;;		None
 13937 ;; Return value:  Size  Location     Type
 13938 ;;                  1    wreg      void 
 13939 ;; Registers used:
 13940 ;;		wreg, status,2, status,0
 13941 ;; Tracked objects:
 13942 ;;		On entry : 0/0
 13943 ;;		On exit  : 0/0
 13944 ;;		Unchanged: 0/0
 13945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13948 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13949 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13950 ;;Total ram usage:        2 bytes
 13951 ;; Hardware stack levels used:    1
 13952 ;; Hardware stack levels required when called:   13
 13953 ;; This function calls:
 13954 ;;		Nothing
 13955 ;; This function is called by:
 13956 ;;		_SYSTEM_Initialize
 13957 ;; This function uses a non-reentrant model
 13958 ;;
 13959                           
 13960                           	psect	text52
 13961  00678E                     __ptext52:
 13962                           	opt callstack 0
 13963  00678E                     _TMR0_Initialize:
 13964                           	opt callstack 16
 13965  00678E                     
 13966                           ;mcc_generated_files/tmr0.c: 71:     T0CONbits.T08BIT = 0;
 13967  00678E  9CD5               	bcf	213,6,c	;volatile
 13968  006790                     
 13969                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0x67;
 13970  006790  0E67               	movlw	103
 13971  006792  6ED7               	movwf	215,c	;volatile
 13972                           
 13973                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0x69;
 13974  006794  0E69               	movlw	105
 13975  006796  6ED6               	movwf	214,c	;volatile
 13976  006798                     
 13977                           ;mcc_generated_files/tmr0.c: 81:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
 13978  006798  50D6               	movf	214,w,c	;volatile
 13979  00679A  CFD7 F08F          	movff	4055,??_TMR0_Initialize	;volatile
 13980  00679E  0100               	movlb	0	; () banked
 13981  0067A0  6B90               	clrf	(??_TMR0_Initialize+1)& (0+255),b
 13982  0067A2  C08F  F090         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 13983  0067A6  6B8F               	clrf	??_TMR0_Initialize& (0+255),b
 13984  0067A8  118F               	iorwf	??_TMR0_Initialize& (0+255),w,b
 13985  0067AA  6E5B               	movwf	_timer0ReloadVal^0,c	;volatile
 13986  0067AC  5190               	movf	(??_TMR0_Initialize+1)& (0+255),w,b
 13987  0067AE  6E5C               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
 13988  0067B0                     
 13989                           ; BSR set to: 0
 13990                           ;mcc_generated_files/tmr0.c: 84:     INTCONbits.TMR0IF = 0;
 13991  0067B0  94F2               	bcf	242,2,c	;volatile
 13992  0067B2                     
 13993                           ; BSR set to: 0
 13994                           ;mcc_generated_files/tmr0.c: 87:     T0CON = 0x17;
 13995  0067B2  0E17               	movlw	23
 13996  0067B4  6ED5               	movwf	213,c	;volatile
 13997  0067B6                     
 13998                           ; BSR set to: 0
 13999  0067B6  0012               	return		;funcret
 14000  0067B8                     __end_of_TMR0_Initialize:
 14001                           	opt callstack 0
 14002                           
 14003 ;; *************** function _SPI_Initialize *****************
 14004 ;; Defined at:
 14005 ;;		line 62 in file "mcc_generated_files/spi.c"
 14006 ;; Parameters:    Size  Location     Type
 14007 ;;		None
 14008 ;; Auto vars:     Size  Location     Type
 14009 ;;		None
 14010 ;; Return value:  Size  Location     Type
 14011 ;;                  1    wreg      void 
 14012 ;; Registers used:
 14013 ;;		wreg, status,2
 14014 ;; Tracked objects:
 14015 ;;		On entry : 0/0
 14016 ;;		On exit  : 0/0
 14017 ;;		Unchanged: 0/0
 14018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14023 ;;Total ram usage:        0 bytes
 14024 ;; Hardware stack levels used:    1
 14025 ;; Hardware stack levels required when called:   13
 14026 ;; This function calls:
 14027 ;;		Nothing
 14028 ;; This function is called by:
 14029 ;;		_SYSTEM_Initialize
 14030 ;; This function uses a non-reentrant model
 14031 ;;
 14032                           
 14033                           	psect	text53
 14034  006952                     __ptext53:
 14035                           	opt callstack 0
 14036  006952                     _SPI_Initialize:
 14037                           	opt callstack 16
 14038  006952                     
 14039                           ;mcc_generated_files/spi.c: 65:     SSPSTAT = 0x40;
 14040  006952  0E40               	movlw	64
 14041  006954  6EC7               	movwf	199,c	;volatile
 14042                           
 14043                           ;mcc_generated_files/spi.c: 66:     SSPCON1 = 0x00;
 14044  006956  0E00               	movlw	0
 14045  006958  6EC6               	movwf	198,c	;volatile
 14046                           
 14047                           ;mcc_generated_files/spi.c: 67:     SSPADD = 0x01;
 14048  00695A  0E01               	movlw	1
 14049  00695C  6EC8               	movwf	200,c	;volatile
 14050  00695E                     
 14051                           ;mcc_generated_files/spi.c: 68:     TRISCbits.TRISC3 = 0;
 14052  00695E  9694               	bcf	148,3,c	;volatile
 14053  006960                     
 14054                           ;mcc_generated_files/spi.c: 69:     SSPCON1bits.SSPEN = 0;
 14055  006960  9AC6               	bcf	198,5,c	;volatile
 14056  006962  0012               	return		;funcret
 14057  006964                     __end_of_SPI_Initialize:
 14058                           	opt callstack 0
 14059                           
 14060 ;; *************** function _PIN_MANAGER_Initialize *****************
 14061 ;; Defined at:
 14062 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 14063 ;; Parameters:    Size  Location     Type
 14064 ;;		None
 14065 ;; Auto vars:     Size  Location     Type
 14066 ;;		None
 14067 ;; Return value:  Size  Location     Type
 14068 ;;                  1    wreg      void 
 14069 ;; Registers used:
 14070 ;;		wreg, status,2, status,0, cstack
 14071 ;; Tracked objects:
 14072 ;;		On entry : 0/0
 14073 ;;		On exit  : 0/0
 14074 ;;		Unchanged: 0/0
 14075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14080 ;;Total ram usage:        0 bytes
 14081 ;; Hardware stack levels used:    1
 14082 ;; Hardware stack levels required when called:   14
 14083 ;; This function calls:
 14084 ;;		_IOCB4_SetInterruptHandler
 14085 ;; This function is called by:
 14086 ;;		_SYSTEM_Initialize
 14087 ;; This function uses a non-reentrant model
 14088 ;;
 14089                           
 14090                           	psect	text54
 14091  006264                     __ptext54:
 14092                           	opt callstack 0
 14093  006264                     _PIN_MANAGER_Initialize:
 14094                           	opt callstack 15
 14095  006264                     
 14096                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
 14097  006264  0E00               	movlw	0
 14098  006266  6E8D               	movwf	141,c	;volatile
 14099                           
 14100                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 14101  006268  0E00               	movlw	0
 14102  00626A  6E8C               	movwf	140,c	;volatile
 14103                           
 14104                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 14105  00626C  0E00               	movlw	0
 14106  00626E  6E89               	movwf	137,c	;volatile
 14107                           
 14108                           ;mcc_generated_files/pin_manager.c: 65:     LATB = 0x00;
 14109  006270  0E00               	movlw	0
 14110  006272  6E8A               	movwf	138,c	;volatile
 14111                           
 14112                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x00;
 14113  006274  0E00               	movlw	0
 14114  006276  6E8B               	movwf	139,c	;volatile
 14115                           
 14116                           ;mcc_generated_files/pin_manager.c: 71:     TRISE = 0x04;
 14117  006278  0E04               	movlw	4
 14118  00627A  6E96               	movwf	150,c	;volatile
 14119                           
 14120                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0x0F;
 14121  00627C  0E0F               	movlw	15
 14122  00627E  6E92               	movwf	146,c	;volatile
 14123  006280                     
 14124                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
 14125  006280  6893               	setf	147,c	;volatile
 14126                           
 14127                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0x97;
 14128  006282  0E97               	movlw	151
 14129  006284  6E94               	movwf	148,c	;volatile
 14130  006286                     
 14131                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xFF;
 14132  006286  6895               	setf	149,c	;volatile
 14133  006288                     
 14134                           ;mcc_generated_files/pin_manager.c: 80:     ANCON0 = 0xFF;
 14135  006288  010F               	movlb	15	; () banked
 14136  00628A  695D               	setf	93,b	;volatile
 14137                           
 14138                           ;mcc_generated_files/pin_manager.c: 81:     ANCON1 = 0x7D;
 14139  00628C  0E7D               	movlw	125
 14140  00628E  6F5C               	movwf	92,b	;volatile
 14141                           
 14142                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
 14143  006290  0E00               	movlw	0
 14144  006292  6F5B               	movwf	91,b	;volatile
 14145  006294                     
 14146                           ; BSR set to: 15
 14147                           ;mcc_generated_files/pin_manager.c: 87:     INTCON2bits.nRBPU = 1;
 14148  006294  8EF1               	bsf	241,7,c	;volatile
 14149  006296                     
 14150                           ; BSR set to: 15
 14151                           ;mcc_generated_files/pin_manager.c: 95:     IOCBbits.IOCB4 = 1;
 14152  006296  895A               	bsf	90,4,b	;volatile
 14153  006298                     
 14154                           ; BSR set to: 15
 14155                           ;mcc_generated_files/pin_manager.c: 100:     IOCB4_SetInterruptHandler(IOCB4_DefaultInte
      +                          rruptHandler);
 14156  006298  0EE4               	movlw	low _IOCB4_DefaultInterruptHandler
 14157  00629A  0100               	movlb	0	; () banked
 14158  00629C  6F8F               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
 14159  00629E  0E69               	movlw	high _IOCB4_DefaultInterruptHandler
 14160  0062A0  6F90               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 14161  0062A2  ECC8  F034         	call	_IOCB4_SetInterruptHandler	;wreg free
 14162  0062A6                     
 14163                           ;mcc_generated_files/pin_manager.c: 103:     INTCONbits.RBIE = 1;
 14164  0062A6  86F2               	bsf	242,3,c	;volatile
 14165  0062A8  0012               	return		;funcret
 14166  0062AA                     __end_of_PIN_MANAGER_Initialize:
 14167                           	opt callstack 0
 14168                           
 14169 ;; *************** function _IOCB4_SetInterruptHandler *****************
 14170 ;; Defined at:
 14171 ;;		line 135 in file "mcc_generated_files/pin_manager.c"
 14172 ;; Parameters:    Size  Location     Type
 14173 ;;  InterruptHan    2   47[BANK0 ] PTR FTN()void 
 14174 ;;		 -> INTERRUPT_S1_CALLBACK(1), IOCB4_DefaultInterruptHandler(1), 
 14175 ;; Auto vars:     Size  Location     Type
 14176 ;;		None
 14177 ;; Return value:  Size  Location     Type
 14178 ;;                  1    wreg      void 
 14179 ;; Registers used:
 14180 ;;		wreg, status,2, status,0
 14181 ;; Tracked objects:
 14182 ;;		On entry : 0/0
 14183 ;;		On exit  : 0/0
 14184 ;;		Unchanged: 0/0
 14185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14186 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14189 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14190 ;;Total ram usage:        2 bytes
 14191 ;; Hardware stack levels used:    1
 14192 ;; Hardware stack levels required when called:   13
 14193 ;; This function calls:
 14194 ;;		Nothing
 14195 ;; This function is called by:
 14196 ;;		_PIN_MANAGER_Initialize
 14197 ;;		_main
 14198 ;; This function uses a non-reentrant model
 14199 ;;
 14200                           
 14201                           	psect	text55
 14202  006990                     __ptext55:
 14203                           	opt callstack 0
 14204  006990                     _IOCB4_SetInterruptHandler:
 14205                           	opt callstack 15
 14206  006990                     
 14207                           ;mcc_generated_files/pin_manager.c: 136:     IOCB4_InterruptHandler = InterruptHandler;
 14208  006990  C08F  F0C8         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
 14209  006994  C090  F0C9         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
 14210  006998  0012               	return		;funcret
 14211  00699A                     __end_of_IOCB4_SetInterruptHandler:
 14212                           	opt callstack 0
 14213                           
 14214 ;; *************** function _OSCILLATOR_Initialize *****************
 14215 ;; Defined at:
 14216 ;;		line 63 in file "mcc_generated_files/mcc.c"
 14217 ;; Parameters:    Size  Location     Type
 14218 ;;		None
 14219 ;; Auto vars:     Size  Location     Type
 14220 ;;		None
 14221 ;; Return value:  Size  Location     Type
 14222 ;;                  1    wreg      void 
 14223 ;; Registers used:
 14224 ;;		wreg, status,2
 14225 ;; Tracked objects:
 14226 ;;		On entry : 0/0
 14227 ;;		On exit  : 0/0
 14228 ;;		Unchanged: 0/0
 14229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14234 ;;Total ram usage:        0 bytes
 14235 ;; Hardware stack levels used:    1
 14236 ;; Hardware stack levels required when called:   13
 14237 ;; This function calls:
 14238 ;;		Nothing
 14239 ;; This function is called by:
 14240 ;;		_SYSTEM_Initialize
 14241 ;; This function uses a non-reentrant model
 14242 ;;
 14243                           
 14244                           	psect	text56
 14245  006964                     __ptext56:
 14246                           	opt callstack 0
 14247  006964                     _OSCILLATOR_Initialize:
 14248                           	opt callstack 16
 14249  006964                     
 14250                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x60;
 14251  006964  0E60               	movlw	96
 14252  006966  6ED3               	movwf	211,c	;volatile
 14253                           
 14254                           ;mcc_generated_files/mcc.c: 68:     OSCCON2 = 0x00;
 14255  006968  0E00               	movlw	0
 14256  00696A  6ED2               	movwf	210,c	;volatile
 14257                           
 14258                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x00;
 14259  00696C  0E00               	movlw	0
 14260  00696E  6E9B               	movwf	155,c	;volatile
 14261                           
 14262                           ;mcc_generated_files/mcc.c: 72:     REFOCON = 0x00;
 14263  006970  0E00               	movlw	0
 14264  006972  6E9A               	movwf	154,c	;volatile
 14265  006974  0012               	return		;funcret
 14266  006976                     __end_of_OSCILLATOR_Initialize:
 14267                           	opt callstack 0
 14268                           
 14269 ;; *************** function _INTERRUPT_Initialize *****************
 14270 ;; Defined at:
 14271 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14272 ;; Parameters:    Size  Location     Type
 14273 ;;		None
 14274 ;; Auto vars:     Size  Location     Type
 14275 ;;		None
 14276 ;; Return value:  Size  Location     Type
 14277 ;;                  1    wreg      void 
 14278 ;; Registers used:
 14279 ;;		None
 14280 ;; Tracked objects:
 14281 ;;		On entry : 0/0
 14282 ;;		On exit  : 0/0
 14283 ;;		Unchanged: 0/0
 14284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14289 ;;Total ram usage:        0 bytes
 14290 ;; Hardware stack levels used:    1
 14291 ;; Hardware stack levels required when called:   13
 14292 ;; This function calls:
 14293 ;;		Nothing
 14294 ;; This function is called by:
 14295 ;;		_SYSTEM_Initialize
 14296 ;; This function uses a non-reentrant model
 14297 ;;
 14298                           
 14299                           	psect	text57
 14300  0069D8                     __ptext57:
 14301                           	opt callstack 0
 14302  0069D8                     _INTERRUPT_Initialize:
 14303                           	opt callstack 16
 14304  0069D8                     
 14305                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
 14306  0069D8  9ED0               	bcf	208,7,c	;volatile
 14307  0069DA  0012               	return		;funcret
 14308  0069DC                     __end_of_INTERRUPT_Initialize:
 14309                           	opt callstack 0
 14310                           
 14311 ;; *************** function _EUSART1_Initialize *****************
 14312 ;; Defined at:
 14313 ;;		line 66 in file "mcc_generated_files/eusart1.c"
 14314 ;; Parameters:    Size  Location     Type
 14315 ;;		None
 14316 ;; Auto vars:     Size  Location     Type
 14317 ;;		None
 14318 ;; Return value:  Size  Location     Type
 14319 ;;                  1    wreg      void 
 14320 ;; Registers used:
 14321 ;;		wreg, status,2, status,0, cstack
 14322 ;; Tracked objects:
 14323 ;;		On entry : 0/0
 14324 ;;		On exit  : 0/0
 14325 ;;		Unchanged: 0/0
 14326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14331 ;;Total ram usage:        0 bytes
 14332 ;; Hardware stack levels used:    1
 14333 ;; Hardware stack levels required when called:   14
 14334 ;; This function calls:
 14335 ;;		_EUSART1_SetErrorHandler
 14336 ;;		_EUSART1_SetFramingErrorHandler
 14337 ;;		_EUSART1_SetOverrunErrorHandler
 14338 ;; This function is called by:
 14339 ;;		_SYSTEM_Initialize
 14340 ;; This function uses a non-reentrant model
 14341 ;;
 14342                           
 14343                           	psect	text58
 14344  0062AA                     __ptext58:
 14345                           	opt callstack 0
 14346  0062AA                     _EUSART1_Initialize:
 14347                           	opt callstack 15
 14348  0062AA                     
 14349                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
 14350  0062AA  0E08               	movlw	8
 14351  0062AC  6EA7               	movwf	167,c	;volatile
 14352                           
 14353                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
 14354  0062AE  0E90               	movlw	144
 14355  0062B0  6EAB               	movwf	171,c	;volatile
 14356                           
 14357                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
 14358  0062B2  0E24               	movlw	36
 14359  0062B4  6EAC               	movwf	172,c	;volatile
 14360                           
 14361                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0xCF;
 14362  0062B6  0ECF               	movlw	207
 14363  0062B8  6EAF               	movwf	175,c	;volatile
 14364                           
 14365                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x00;
 14366  0062BA  0E00               	movlw	0
 14367  0062BC  6E7D               	movwf	125,c	;volatile
 14368  0062BE                     
 14369                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
 14370  0062BE  0E00               	movlw	0
 14371  0062C0  0100               	movlb	0	; () banked
 14372  0062C2  6F8F               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
 14373  0062C4  0E00               	movlw	0
 14374  0062C6  6F90               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
 14375  0062C8  ECD2  F034         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 14376  0062CC                     
 14377                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
 14378  0062CC  0E00               	movlw	0
 14379  0062CE  0100               	movlb	0	; () banked
 14380  0062D0  6F8F               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
 14381  0062D2  0E00               	movlw	0
 14382  0062D4  6F90               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
 14383  0062D6  ECCD  F034         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 14384  0062DA                     
 14385                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
 14386  0062DA  0E00               	movlw	0
 14387  0062DC  0100               	movlb	0	; () banked
 14388  0062DE  6F8F               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
 14389  0062E0  0E00               	movlw	0
 14390  0062E2  6F90               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
 14391  0062E4  ECD7  F034         	call	_EUSART1_SetErrorHandler	;wreg free
 14392  0062E8                     
 14393                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
 14394  0062E8  0E00               	movlw	0
 14395  0062EA  0100               	movlb	0	; () banked
 14396  0062EC  6FBF               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 14397  0062EE                     
 14398                           ; BSR set to: 0
 14399  0062EE  0012               	return		;funcret
 14400  0062F0                     __end_of_EUSART1_Initialize:
 14401                           	opt callstack 0
 14402                           
 14403 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 14404 ;; Defined at:
 14405 ;;		line 170 in file "mcc_generated_files/eusart1.c"
 14406 ;; Parameters:    Size  Location     Type
 14407 ;;  interruptHan    2   47[BANK0 ] PTR FTN()void 
 14408 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 14409 ;; Auto vars:     Size  Location     Type
 14410 ;;		None
 14411 ;; Return value:  Size  Location     Type
 14412 ;;                  1    wreg      void 
 14413 ;; Registers used:
 14414 ;;		wreg, status,2, status,0
 14415 ;; Tracked objects:
 14416 ;;		On entry : 0/0
 14417 ;;		On exit  : 0/0
 14418 ;;		Unchanged: 0/0
 14419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14420 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14423 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14424 ;;Total ram usage:        2 bytes
 14425 ;; Hardware stack levels used:    1
 14426 ;; Hardware stack levels required when called:   13
 14427 ;; This function calls:
 14428 ;;		Nothing
 14429 ;; This function is called by:
 14430 ;;		_EUSART1_Initialize
 14431 ;; This function uses a non-reentrant model
 14432 ;;
 14433                           
 14434                           	psect	text59
 14435  00699A                     __ptext59:
 14436                           	opt callstack 0
 14437  00699A                     _EUSART1_SetOverrunErrorHandler:
 14438                           	opt callstack 15
 14439  00699A                     
 14440                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
 14441  00699A  C08F  F0C2         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 14442  00699E  C090  F0C3         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 14443  0069A2  0012               	return		;funcret
 14444  0069A4                     __end_of_EUSART1_SetOverrunErrorHandler:
 14445                           	opt callstack 0
 14446                           
 14447 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 14448 ;; Defined at:
 14449 ;;		line 166 in file "mcc_generated_files/eusart1.c"
 14450 ;; Parameters:    Size  Location     Type
 14451 ;;  interruptHan    2   47[BANK0 ] PTR FTN()void 
 14452 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 14453 ;; Auto vars:     Size  Location     Type
 14454 ;;		None
 14455 ;; Return value:  Size  Location     Type
 14456 ;;                  1    wreg      void 
 14457 ;; Registers used:
 14458 ;;		wreg, status,2, status,0
 14459 ;; Tracked objects:
 14460 ;;		On entry : 0/0
 14461 ;;		On exit  : 0/0
 14462 ;;		Unchanged: 0/0
 14463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14464 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14467 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14468 ;;Total ram usage:        2 bytes
 14469 ;; Hardware stack levels used:    1
 14470 ;; Hardware stack levels required when called:   13
 14471 ;; This function calls:
 14472 ;;		Nothing
 14473 ;; This function is called by:
 14474 ;;		_EUSART1_Initialize
 14475 ;; This function uses a non-reentrant model
 14476 ;;
 14477                           
 14478                           	psect	text60
 14479  0069A4                     __ptext60:
 14480                           	opt callstack 0
 14481  0069A4                     _EUSART1_SetFramingErrorHandler:
 14482                           	opt callstack 15
 14483  0069A4                     
 14484                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
 14485  0069A4  C08F  F0C4         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 14486  0069A8  C090  F0C5         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 14487  0069AC  0012               	return		;funcret
 14488  0069AE                     __end_of_EUSART1_SetFramingErrorHandler:
 14489                           	opt callstack 0
 14490                           
 14491 ;; *************** function _EUSART1_SetErrorHandler *****************
 14492 ;; Defined at:
 14493 ;;		line 174 in file "mcc_generated_files/eusart1.c"
 14494 ;; Parameters:    Size  Location     Type
 14495 ;;  interruptHan    2   47[BANK0 ] PTR FTN()void 
 14496 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 14497 ;; Auto vars:     Size  Location     Type
 14498 ;;		None
 14499 ;; Return value:  Size  Location     Type
 14500 ;;                  1    wreg      void 
 14501 ;; Registers used:
 14502 ;;		wreg, status,2, status,0
 14503 ;; Tracked objects:
 14504 ;;		On entry : 0/0
 14505 ;;		On exit  : 0/0
 14506 ;;		Unchanged: 0/0
 14507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14508 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14511 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14512 ;;Total ram usage:        2 bytes
 14513 ;; Hardware stack levels used:    1
 14514 ;; Hardware stack levels required when called:   13
 14515 ;; This function calls:
 14516 ;;		Nothing
 14517 ;; This function is called by:
 14518 ;;		_EUSART1_Initialize
 14519 ;; This function uses a non-reentrant model
 14520 ;;
 14521                           
 14522                           	psect	text61
 14523  0069AE                     __ptext61:
 14524                           	opt callstack 0
 14525  0069AE                     _EUSART1_SetErrorHandler:
 14526                           	opt callstack 15
 14527  0069AE                     
 14528                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
 14529  0069AE  C08F  F0C0         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 14530  0069B2  C090  F0C1         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 14531  0069B6  0012               	return		;funcret
 14532  0069B8                     __end_of_EUSART1_SetErrorHandler:
 14533                           	opt callstack 0
 14534                           
 14535 ;; *************** function _ADC_Initialize *****************
 14536 ;; Defined at:
 14537 ;;		line 62 in file "mcc_generated_files/adc.c"
 14538 ;; Parameters:    Size  Location     Type
 14539 ;;		None
 14540 ;; Auto vars:     Size  Location     Type
 14541 ;;		None
 14542 ;; Return value:  Size  Location     Type
 14543 ;;                  1    wreg      void 
 14544 ;; Registers used:
 14545 ;;		wreg, status,2
 14546 ;; Tracked objects:
 14547 ;;		On entry : 0/0
 14548 ;;		On exit  : 0/0
 14549 ;;		Unchanged: 0/0
 14550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14555 ;;Total ram usage:        0 bytes
 14556 ;; Hardware stack levels used:    1
 14557 ;; Hardware stack levels required when called:   13
 14558 ;; This function calls:
 14559 ;;		Nothing
 14560 ;; This function is called by:
 14561 ;;		_SYSTEM_Initialize
 14562 ;; This function uses a non-reentrant model
 14563 ;;
 14564                           
 14565                           	psect	text62
 14566  006912                     __ptext62:
 14567                           	opt callstack 0
 14568  006912                     _ADC_Initialize:
 14569                           	opt callstack 16
 14570  006912                     
 14571                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x01;
 14572  006912  0E01               	movlw	1
 14573  006914  6EC2               	movwf	194,c	;volatile
 14574                           
 14575                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x80;
 14576  006916  0E80               	movlw	128
 14577  006918  6EC1               	movwf	193,c	;volatile
 14578                           
 14579                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0xB5;
 14580  00691A  0EB5               	movlw	181
 14581  00691C  6EC0               	movwf	192,c	;volatile
 14582                           
 14583                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
 14584  00691E  0E00               	movlw	0
 14585  006920  6EC4               	movwf	196,c	;volatile
 14586                           
 14587                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
 14588  006922  0E00               	movlw	0
 14589  006924  6EC3               	movwf	195,c	;volatile
 14590  006926  0012               	return		;funcret
 14591  006928                     __end_of_ADC_Initialize:
 14592                           	opt callstack 0
 14593                           
 14594 ;; *************** function _SPI_Open *****************
 14595 ;; Defined at:
 14596 ;;		line 72 in file "mcc_generated_files/spi.c"
 14597 ;; Parameters:    Size  Location     Type
 14598 ;;  spiUniqueCon    1    wreg     enum E353
 14599 ;; Auto vars:     Size  Location     Type
 14600 ;;  spiUniqueCon    1   48[BANK0 ] enum E353
 14601 ;; Return value:  Size  Location     Type
 14602 ;;                  1    wreg      _Bool 
 14603 ;; Registers used:
 14604 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 14605 ;; Tracked objects:
 14606 ;;		On entry : 0/0
 14607 ;;		On exit  : 0/0
 14608 ;;		Unchanged: 0/0
 14609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14611 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14612 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14613 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14614 ;;Total ram usage:        2 bytes
 14615 ;; Hardware stack levels used:    1
 14616 ;; Hardware stack levels required when called:   13
 14617 ;; This function calls:
 14618 ;;		Nothing
 14619 ;; This function is called by:
 14620 ;;		_main
 14621 ;; This function uses a non-reentrant model
 14622 ;;
 14623                           
 14624                           	psect	text63
 14625  005BF4                     __ptext63:
 14626                           	opt callstack 0
 14627  005BF4                     _SPI_Open:
 14628                           	opt callstack 17
 14629                           
 14630                           ;incstack = 0
 14631                           ;SPI_Open@spiUniqueConfiguration stored from wreg
 14632  005BF4  0100               	movlb	0	; () banked
 14633  005BF6  6F90               	movwf	SPI_Open@spiUniqueConfiguration& (0+255),b
 14634  005BF8                     
 14635                           ;mcc_generated_files/spi.c: 72: _Bool SPI_Open(spi_modes_t spiUniqueConfiguration);mcc_g
      +                          enerated_files/spi.c: 73: {;mcc_generated_files/spi.c: 74:     if(!SSPCON1bits.SSPEN)
 14636  005BF8  BAC6               	btfsc	198,5,c	;volatile
 14637  005BFA  EF01  F02E         	goto	u7901
 14638  005BFE  EF03  F02E         	goto	u7900
 14639  005C02                     u7901:
 14640  005C02  EF53  F02E         	goto	l55
 14641  005C06                     u7900:
 14642  005C06                     
 14643                           ;mcc_generated_files/spi.c: 75:     {;mcc_generated_files/spi.c: 76:         SSPSTAT = s
      +                          pi_configuration[spiUniqueConfiguration].stat;
 14644  005C06  0100               	movlb	0	; () banked
 14645  005C08  5190               	movf	SPI_Open@spiUniqueConfiguration& (0+255),w,b
 14646  005C0A  0D04               	mullw	4
 14647  005C0C  0E01               	movlw	1
 14648  005C0E  26F3               	addwf	243,f,c
 14649  005C10  0E00               	movlw	0
 14650  005C12  22F4               	addwfc	244,f,c
 14651  005C14  0E01               	movlw	low _spi_configuration
 14652  005C16  24F3               	addwf	243,w,c
 14653  005C18  6EF6               	movwf	tblptrl,c
 14654  005C1A  0EFF               	movlw	high _spi_configuration
 14655  005C1C  20F4               	addwfc	244,w,c
 14656  005C1E  6EF7               	movwf	tblptrh,c
 14657  005C20                     	if	1	;There are 3 active tblptr bytes
 14658  005C20  6AF8               	clrf	tblptru,c
 14659  005C22  0E00               	movlw	low (__mediumconst shr (0+16))
 14660  005C24  22F8               	addwfc	tblptru,f,c
 14661  005C26                     	endif
 14662  005C26  0008               	tblrd		*
 14663  005C28  CFF5 FFC7          	movff	tablat,4039	;volatile
 14664                           
 14665                           ;mcc_generated_files/spi.c: 77:         SSPCON1 = spi_configuration[spiUniqueConfigurati
      +                          on].con1;
 14666  005C2C  5190               	movf	SPI_Open@spiUniqueConfiguration& (0+255),w,b
 14667  005C2E  0D04               	mullw	4
 14668  005C30  0E01               	movlw	low _spi_configuration
 14669  005C32  24F3               	addwf	243,w,c
 14670  005C34  6EF6               	movwf	tblptrl,c
 14671  005C36  0EFF               	movlw	high _spi_configuration
 14672  005C38  20F4               	addwfc	244,w,c
 14673  005C3A  6EF7               	movwf	tblptrh,c
 14674  005C3C                     	if	1	;There are 3 active tblptr bytes
 14675  005C3C  6AF8               	clrf	tblptru,c
 14676  005C3E  0E00               	movlw	low (__mediumconst shr (0+16))
 14677  005C40  22F8               	addwfc	tblptru,f,c
 14678  005C42                     	endif
 14679  005C42  0008               	tblrd		*
 14680  005C44  CFF5 FFC6          	movff	tablat,4038	;volatile
 14681  005C48                     
 14682                           ; BSR set to: 0
 14683                           ;mcc_generated_files/spi.c: 78:         SSPCON2 = 0x00;
 14684  005C48  0E00               	movlw	0
 14685  005C4A  6EC5               	movwf	197,c	;volatile
 14686  005C4C                     
 14687                           ; BSR set to: 0
 14688                           ;mcc_generated_files/spi.c: 79:         SSPADD = spi_configuration[spiUniqueConfiguratio
      +                          n].add;
 14689  005C4C  5190               	movf	SPI_Open@spiUniqueConfiguration& (0+255),w,b
 14690  005C4E  0D04               	mullw	4
 14691  005C50  0E02               	movlw	2
 14692  005C52  26F3               	addwf	243,f,c
 14693  005C54  0E00               	movlw	0
 14694  005C56  22F4               	addwfc	244,f,c
 14695  005C58  0E01               	movlw	low _spi_configuration
 14696  005C5A  24F3               	addwf	243,w,c
 14697  005C5C  6EF6               	movwf	tblptrl,c
 14698  005C5E  0EFF               	movlw	high _spi_configuration
 14699  005C60  20F4               	addwfc	244,w,c
 14700  005C62  6EF7               	movwf	tblptrh,c
 14701  005C64                     	if	1	;There are 3 active tblptr bytes
 14702  005C64  6AF8               	clrf	tblptru,c
 14703  005C66  0E00               	movlw	low (__mediumconst shr (0+16))
 14704  005C68  22F8               	addwfc	tblptru,f,c
 14705  005C6A                     	endif
 14706  005C6A  0008               	tblrd		*
 14707  005C6C  CFF5 FFC8          	movff	tablat,4040	;volatile
 14708  005C70                     
 14709                           ; BSR set to: 0
 14710                           ;mcc_generated_files/spi.c: 80:         TRISCbits.TRISC3 = spi_configuration[spiUniqueCo
      +                          nfiguration].operation;
 14711  005C70  5190               	movf	SPI_Open@spiUniqueConfiguration& (0+255),w,b
 14712  005C72  0D04               	mullw	4
 14713  005C74  0E03               	movlw	3
 14714  005C76  26F3               	addwf	243,f,c
 14715  005C78  0E00               	movlw	0
 14716  005C7A  22F4               	addwfc	244,f,c
 14717  005C7C  0E01               	movlw	low _spi_configuration
 14718  005C7E  24F3               	addwf	243,w,c
 14719  005C80  6EF6               	movwf	tblptrl,c
 14720  005C82  0EFF               	movlw	high _spi_configuration
 14721  005C84  20F4               	addwfc	244,w,c
 14722  005C86  6EF7               	movwf	tblptrh,c
 14723  005C88                     	if	1	;There are 3 active tblptr bytes
 14724  005C88  6AF8               	clrf	tblptru,c
 14725  005C8A  0E00               	movlw	low (__mediumconst shr (0+16))
 14726  005C8C  22F8               	addwfc	tblptru,f,c
 14727  005C8E                     	endif
 14728  005C8E  0008               	tblrd		*
 14729  005C90  CFF5 F08F          	movff	tablat,??_SPI_Open
 14730  005C94  478F               	rlncf	??_SPI_Open& (0+255),f,b
 14731  005C96  478F               	rlncf	??_SPI_Open& (0+255),f,b
 14732  005C98  478F               	rlncf	??_SPI_Open& (0+255),f,b
 14733  005C9A  5094               	movf	148,w,c	;volatile
 14734  005C9C  198F               	xorwf	??_SPI_Open& (0+255),w,b
 14735  005C9E  0BF7               	andlw	-9
 14736  005CA0  198F               	xorwf	??_SPI_Open& (0+255),w,b
 14737  005CA2  6E94               	movwf	148,c	;volatile
 14738  005CA4                     
 14739                           ; BSR set to: 0
 14740                           ;mcc_generated_files/spi.c: 81:         SSPCON1bits.SSPEN = 1;
 14741  005CA4  8AC6               	bsf	198,5,c	;volatile
 14742  005CA6                     l55:
 14743  005CA6  0012               	return		;funcret
 14744  005CA8                     __end_of_SPI_Open:
 14745                           	opt callstack 0
 14746                           
 14747 ;; *************** function _DATAEE_WriteByte *****************
 14748 ;; Defined at:
 14749 ;;		line 173 in file "mcc_generated_files/memory.c"
 14750 ;; Parameters:    Size  Location     Type
 14751 ;;  bAdd            2   47[BANK0 ] unsigned short 
 14752 ;;  bData           1   49[BANK0 ] unsigned char 
 14753 ;; Auto vars:     Size  Location     Type
 14754 ;;  GIEBitValue     1   50[BANK0 ] unsigned char 
 14755 ;; Return value:  Size  Location     Type
 14756 ;;                  1    wreg      void 
 14757 ;; Registers used:
 14758 ;;		wreg, status,2, status,0
 14759 ;; Tracked objects:
 14760 ;;		On entry : 0/0
 14761 ;;		On exit  : 0/0
 14762 ;;		Unchanged: 0/0
 14763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14764 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14765 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14767 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14768 ;;Total ram usage:        4 bytes
 14769 ;; Hardware stack levels used:    1
 14770 ;; Hardware stack levels required when called:   13
 14771 ;; This function calls:
 14772 ;;		Nothing
 14773 ;; This function is called by:
 14774 ;;		_main
 14775 ;; This function uses a non-reentrant model
 14776 ;;
 14777                           
 14778                           	psect	text64
 14779  00621C                     __ptext64:
 14780                           	opt callstack 0
 14781  00621C                     _DATAEE_WriteByte:
 14782                           	opt callstack 17
 14783  00621C                     
 14784                           ;mcc_generated_files/memory.c: 173: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 174: {;mcc_generated_files/memory.c: 175:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 14785  00621C  0E00               	movlw	0
 14786  00621E  BEF2               	btfsc	242,7,c	;volatile
 14787  006220  0E01               	movlw	1
 14788  006222  0100               	movlb	0	; () banked
 14789  006224  6F92               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 14790  006226                     
 14791                           ; BSR set to: 0
 14792                           ;mcc_generated_files/memory.c: 177:     EEADRH = ((bAdd >> 8) & 0x03);
 14793  006226  5190               	movf	(DATAEE_WriteByte@bAdd+1)& (0+255),w,b
 14794  006228  0B03               	andlw	3
 14795  00622A  6E75               	movwf	117,c	;volatile
 14796  00622C                     
 14797                           ; BSR set to: 0
 14798                           ;mcc_generated_files/memory.c: 178:     EEADR = (bAdd & 0xFF);
 14799  00622C  C08F  FF74         	movff	DATAEE_WriteByte@bAdd,3956	;volatile
 14800  006230                     
 14801                           ; BSR set to: 0
 14802                           ;mcc_generated_files/memory.c: 179:     EEDATA = bData;
 14803  006230  C091  FF73         	movff	DATAEE_WriteByte@bData,3955	;volatile
 14804  006234                     
 14805                           ; BSR set to: 0
 14806                           ;mcc_generated_files/memory.c: 180:     EECON1bits.EEPGD = 0;
 14807  006234  9E7F               	bcf	127,7,c	;volsfr
 14808  006236                     
 14809                           ; BSR set to: 0
 14810                           ;mcc_generated_files/memory.c: 181:     EECON1bits.CFGS = 0;
 14811  006236  9C7F               	bcf	127,6,c	;volsfr
 14812  006238                     
 14813                           ; BSR set to: 0
 14814                           ;mcc_generated_files/memory.c: 182:     EECON1bits.WREN = 1;
 14815  006238  847F               	bsf	127,2,c	;volsfr
 14816  00623A                     
 14817                           ; BSR set to: 0
 14818                           ;mcc_generated_files/memory.c: 183:     INTCONbits.GIE = 0;
 14819  00623A  9EF2               	bcf	242,7,c	;volatile
 14820  00623C                     
 14821                           ; BSR set to: 0
 14822                           ;mcc_generated_files/memory.c: 184:     EECON2 = 0x55;
 14823  00623C  0E55               	movlw	85
 14824  00623E  6E7E               	movwf	126,c	;volsfr
 14825  006240                     
 14826                           ; BSR set to: 0
 14827                           ;mcc_generated_files/memory.c: 185:     EECON2 = 0xAA;
 14828  006240  0EAA               	movlw	170
 14829  006242  6E7E               	movwf	126,c	;volsfr
 14830  006244                     
 14831                           ; BSR set to: 0
 14832                           ;mcc_generated_files/memory.c: 186:     EECON1bits.WR = 1;
 14833  006244  827F               	bsf	127,1,c	;volsfr
 14834  006246                     l429:
 14835                           
 14836                           ;mcc_generated_files/memory.c: 188:     while (EECON1bits.WR)
 14837  006246  B27F               	btfsc	127,1,c	;volsfr
 14838  006248  EF28  F031         	goto	u7941
 14839  00624C  EF2A  F031         	goto	u7940
 14840  006250                     u7941:
 14841  006250  EF23  F031         	goto	l429
 14842  006254                     u7940:
 14843  006254                     
 14844                           ;mcc_generated_files/memory.c: 192:     EECON1bits.WREN = 0;
 14845  006254  947F               	bcf	127,2,c	;volsfr
 14846                           
 14847                           ;mcc_generated_files/memory.c: 193:     INTCONbits.GIE = GIEBitValue;
 14848  006256  0100               	movlb	0	; () banked
 14849  006258  B192               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 14850  00625A  D002               	bra	u7955
 14851  00625C  9EF2               	bcf	242,7,c	;volatile
 14852  00625E  D001               	bra	u7956
 14853  006260                     u7955:
 14854  006260  8EF2               	bsf	242,7,c	;volatile
 14855  006262                     u7956:
 14856  006262  0012               	return		;funcret
 14857  006264                     __end_of_DATAEE_WriteByte:
 14858                           	opt callstack 0
 14859                           
 14860 ;; *************** function _DATAEE_ReadByte *****************
 14861 ;; Defined at:
 14862 ;;		line 196 in file "mcc_generated_files/memory.c"
 14863 ;; Parameters:    Size  Location     Type
 14864 ;;  bAdd            2   47[BANK0 ] unsigned short 
 14865 ;; Auto vars:     Size  Location     Type
 14866 ;;		None
 14867 ;; Return value:  Size  Location     Type
 14868 ;;                  1    wreg      unsigned char 
 14869 ;; Registers used:
 14870 ;;		wreg, status,2, status,0
 14871 ;; Tracked objects:
 14872 ;;		On entry : 0/0
 14873 ;;		On exit  : 0/0
 14874 ;;		Unchanged: 0/0
 14875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14876 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14879 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14880 ;;Total ram usage:        2 bytes
 14881 ;; Hardware stack levels used:    1
 14882 ;; Hardware stack levels required when called:   13
 14883 ;; This function calls:
 14884 ;;		Nothing
 14885 ;; This function is called by:
 14886 ;;		_main
 14887 ;; This function uses a non-reentrant model
 14888 ;;
 14889                           
 14890                           	psect	text65
 14891  0068B0                     __ptext65:
 14892                           	opt callstack 0
 14893  0068B0                     _DATAEE_ReadByte:
 14894                           	opt callstack 17
 14895  0068B0                     
 14896                           ;mcc_generated_files/memory.c: 196: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 197: {;mcc_generated_files/memory.c: 198:     EEADRH = ((bAdd >> 8) & 0
      +                          x03);
 14897  0068B0  0100               	movlb	0	; () banked
 14898  0068B2  5190               	movf	(DATAEE_ReadByte@bAdd+1)& (0+255),w,b
 14899  0068B4  0B03               	andlw	3
 14900  0068B6  6E75               	movwf	117,c	;volatile
 14901  0068B8                     
 14902                           ; BSR set to: 0
 14903                           ;mcc_generated_files/memory.c: 199:     EEADR = (bAdd & 0xFF);
 14904  0068B8  C08F  FF74         	movff	DATAEE_ReadByte@bAdd,3956	;volatile
 14905  0068BC                     
 14906                           ; BSR set to: 0
 14907                           ;mcc_generated_files/memory.c: 200:     EECON1bits.CFGS = 0;
 14908  0068BC  9C7F               	bcf	127,6,c	;volsfr
 14909  0068BE                     
 14910                           ; BSR set to: 0
 14911                           ;mcc_generated_files/memory.c: 201:     EECON1bits.EEPGD = 0;
 14912  0068BE  9E7F               	bcf	127,7,c	;volsfr
 14913  0068C0                     
 14914                           ; BSR set to: 0
 14915                           ;mcc_generated_files/memory.c: 202:     EECON1bits.RD = 1;
 14916  0068C0  807F               	bsf	127,0,c	;volsfr
 14917  0068C2                     
 14918                           ; BSR set to: 0
 14919                           ;mcc_generated_files/memory.c: 203:     __nop();
 14920  0068C2  F000               	nop	
 14921  0068C4                     
 14922                           ;mcc_generated_files/memory.c: 204:     __nop();
 14923  0068C4  F000               	nop	
 14924  0068C6                     
 14925                           ;mcc_generated_files/memory.c: 206:     return (EEDATA);
 14926  0068C6  5073               	movf	115,w,c	;volatile
 14927  0068C8  0012               	return		;funcret
 14928  0068CA                     __end_of_DATAEE_ReadByte:
 14929                           	opt callstack 0
 14930                           
 14931 ;; *************** function _ADC_GetConversion *****************
 14932 ;; Defined at:
 14933 ;;		line 108 in file "mcc_generated_files/adc.c"
 14934 ;; Parameters:    Size  Location     Type
 14935 ;;  channel         1    wreg     enum E12385
 14936 ;; Auto vars:     Size  Location     Type
 14937 ;;  channel         1   51[BANK0 ] enum E12385
 14938 ;; Return value:  Size  Location     Type
 14939 ;;                  2   47[BANK0 ] unsigned short 
 14940 ;; Registers used:
 14941 ;;		wreg, status,2, status,0
 14942 ;; Tracked objects:
 14943 ;;		On entry : 0/0
 14944 ;;		On exit  : 0/0
 14945 ;;		Unchanged: 0/0
 14946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14947 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14948 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14949 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14950 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14951 ;;Total ram usage:        5 bytes
 14952 ;; Hardware stack levels used:    1
 14953 ;; Hardware stack levels required when called:   13
 14954 ;; This function calls:
 14955 ;;		Nothing
 14956 ;; This function is called by:
 14957 ;;		_main
 14958 ;; This function uses a non-reentrant model
 14959 ;;
 14960                           
 14961                           	psect	text66
 14962  0063B8                     __ptext66:
 14963                           	opt callstack 0
 14964  0063B8                     _ADC_GetConversion:
 14965                           	opt callstack 17
 14966                           
 14967                           ;incstack = 0
 14968                           ;ADC_GetConversion@channel stored from wreg
 14969  0063B8  0100               	movlb	0	; () banked
 14970  0063BA  6F93               	movwf	ADC_GetConversion@channel& (0+255),b
 14971  0063BC                     
 14972                           ;mcc_generated_files/adc.c: 108: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 109: {;mcc_generated_files/adc.c: 111:     ADCON0bits.CHS = ch
      +                          annel;
 14973  0063BC  C093  F091         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 14974  0063C0  0100               	movlb	0	; () banked
 14975  0063C2  4791               	rlncf	??_ADC_GetConversion& (0+255),f,b
 14976  0063C4  4791               	rlncf	??_ADC_GetConversion& (0+255),f,b
 14977  0063C6  50C2               	movf	194,w,c	;volatile
 14978  0063C8  1991               	xorwf	??_ADC_GetConversion& (0+255),w,b
 14979  0063CA  0B83               	andlw	-125
 14980  0063CC  1991               	xorwf	??_ADC_GetConversion& (0+255),w,b
 14981  0063CE  6EC2               	movwf	194,c	;volatile
 14982  0063D0                     
 14983                           ; BSR set to: 0
 14984                           ;mcc_generated_files/adc.c: 114:     ADCON0bits.ADON = 1;
 14985  0063D0  80C2               	bsf	194,0,c	;volatile
 14986  0063D2                     
 14987                           ; BSR set to: 0
 14988                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.GO_nDONE = 1;
 14989  0063D2  82C2               	bsf	194,1,c	;volatile
 14990  0063D4                     l179:
 14991                           
 14992                           ;mcc_generated_files/adc.c: 121:     while (ADCON0bits.GO_nDONE)
 14993  0063D4  B2C2               	btfsc	194,1,c	;volatile
 14994  0063D6  EFEF  F031         	goto	u7921
 14995  0063DA  EFF1  F031         	goto	u7920
 14996  0063DE                     u7921:
 14997  0063DE  EFEA  F031         	goto	l179
 14998  0063E2                     u7920:
 14999  0063E2                     
 15000                           ;mcc_generated_files/adc.c: 126:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 15001  0063E2  50C4               	movf	196,w,c	;volatile
 15002  0063E4  0100               	movlb	0	; () banked
 15003  0063E6  6F92               	movwf	(??_ADC_GetConversion+1)& (0+255),b
 15004  0063E8  6B91               	clrf	??_ADC_GetConversion& (0+255),b
 15005  0063EA  50C3               	movf	195,w,c	;volatile
 15006  0063EC  2591               	addwf	??_ADC_GetConversion& (0+255),w,b
 15007  0063EE  6F8F               	movwf	?_ADC_GetConversion& (0+255),b
 15008  0063F0  0E00               	movlw	0
 15009  0063F2  2192               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
 15010  0063F4  6F90               	movwf	(?_ADC_GetConversion+1)& (0+255),b
 15011  0063F6                     
 15012                           ; BSR set to: 0
 15013  0063F6  0012               	return		;funcret
 15014  0063F8                     __end_of_ADC_GetConversion:
 15015                           	opt callstack 0
 15016                           
 15017 ;; *************** function _INTERRUPT_InterruptManager *****************
 15018 ;; Defined at:
 15019 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 15020 ;; Parameters:    Size  Location     Type
 15021 ;;		None
 15022 ;; Auto vars:     Size  Location     Type
 15023 ;;		None
 15024 ;; Return value:  Size  Location     Type
 15025 ;;                  1    wreg      void 
 15026 ;; Registers used:
 15027 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15028 ;; Tracked objects:
 15029 ;;		On entry : 0/0
 15030 ;;		On exit  : 0/0
 15031 ;;		Unchanged: 0/0
 15032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15035 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15036 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15037 ;;Total ram usage:       14 bytes
 15038 ;; Hardware stack levels used:    1
 15039 ;; Hardware stack levels required when called:   12
 15040 ;; This function calls:
 15041 ;;		_PIN_MANAGER_IOC
 15042 ;; This function is called by:
 15043 ;;		Interrupt level 2
 15044 ;; This function uses a non-reentrant model
 15045 ;;
 15046                           
 15047                           	psect	intcode
 15048  000008                     __pintcode:
 15049                           	opt callstack 0
 15050  000008                     _INTERRUPT_InterruptManager:
 15051                           	opt callstack 8
 15052                           
 15053                           ; BSR set to: 0
 15054                           ;incstack = 0
 15055  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15056  00000A  CFFA F081          	movff	pclath,??_INTERRUPT_InterruptManager
 15057  00000E  CFFB F082          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 15058  000012  CFE9 F083          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 15059  000016  CFEA F084          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 15060  00001A  CFE1 F085          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 15061  00001E  CFE2 F086          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 15062  000022  CFD9 F087          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 15063  000026  CFDA F088          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 15064  00002A  CFF3 F089          	movff	prodl,??_INTERRUPT_InterruptManager+8
 15065  00002E  CFF4 F08A          	movff	prodh,??_INTERRUPT_InterruptManager+9
 15066  000032  CFF6 F08B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 15067  000036  CFF7 F08C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 15068  00003A  CFF8 F08D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 15069  00003E  CFF5 F08E          	movff	tablat,??_INTERRUPT_InterruptManager+13
 15070  000042                     
 15071                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.RBIE == 1 && INTCONbits.
      +                          RBIF == 1)
 15072  000042  A6F2               	btfss	242,3,c	;volatile
 15073  000044  EF26  F000         	goto	i2u1221_41
 15074  000048  EF28  F000         	goto	i2u1221_40
 15075  00004C                     i2u1221_41:
 15076  00004C  EF31  F000         	goto	i2l340
 15077  000050                     i2u1221_40:
 15078  000050  A0F2               	btfss	242,0,c	;volatile
 15079  000052  EF2D  F000         	goto	i2u1222_41
 15080  000056  EF2F  F000         	goto	i2u1222_40
 15081  00005A                     i2u1222_41:
 15082  00005A  EF31  F000         	goto	i2l340
 15083  00005E                     i2u1222_40:
 15084  00005E                     
 15085                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         PIN_MANAGER_IOC();
 15086  00005E  EC7D  F034         	call	_PIN_MANAGER_IOC	;wreg free
 15087  000062                     i2l340:
 15088  000062  C08E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 15089  000066  C08D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 15090  00006A  C08C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 15091  00006E  C08B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 15092  000072  C08A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 15093  000076  C089  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 15094  00007A  C088  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 15095  00007E  C087  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 15096  000082  C086  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 15097  000086  C085  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 15098  00008A  C084  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 15099  00008E  C083  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 15100  000092  C082  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 15101  000096  C081  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 15102  00009A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15103  00009C  0011               	retfie		f
 15104  00009E                     __end_of_INTERRUPT_InterruptManager:
 15105                           	opt callstack 0
 15106                           
 15107 ;; *************** function _PIN_MANAGER_IOC *****************
 15108 ;; Defined at:
 15109 ;;		line 107 in file "mcc_generated_files/pin_manager.c"
 15110 ;; Parameters:    Size  Location     Type
 15111 ;;		None
 15112 ;; Auto vars:     Size  Location     Type
 15113 ;;		None
 15114 ;; Return value:  Size  Location     Type
 15115 ;;                  1    wreg      void 
 15116 ;; Registers used:
 15117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15118 ;; Tracked objects:
 15119 ;;		On entry : 0/0
 15120 ;;		On exit  : 0/0
 15121 ;;		Unchanged: 0/0
 15122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15127 ;;Total ram usage:        0 bytes
 15128 ;; Hardware stack levels used:    1
 15129 ;; Hardware stack levels required when called:   11
 15130 ;; This function calls:
 15131 ;;		_IOCB4_ISR
 15132 ;; This function is called by:
 15133 ;;		_INTERRUPT_InterruptManager
 15134 ;; This function uses a non-reentrant model
 15135 ;;
 15136                           
 15137                           	psect	text68
 15138  0068FA                     __ptext68:
 15139                           	opt callstack 0
 15140  0068FA                     _PIN_MANAGER_IOC:
 15141                           	opt callstack 8
 15142  0068FA                     
 15143                           ;mcc_generated_files/pin_manager.c: 110:     if(IOCBbits.IOCB4 == 1)
 15144  0068FA  010F               	movlb	15	; () banked
 15145  0068FC  A95A               	btfss	90,4,b	;volatile
 15146  0068FE  EF83  F034         	goto	i2u1202_41
 15147  006902  EF85  F034         	goto	i2u1202_40
 15148  006906                     i2u1202_41:
 15149  006906  EF87  F034         	goto	i2l9430
 15150  00690A                     i2u1202_40:
 15151  00690A                     
 15152                           ; BSR set to: 15
 15153                           ;mcc_generated_files/pin_manager.c: 111:     {;mcc_generated_files/pin_manager.c: 112:  
      +                                 IOCB4_ISR();
 15154  00690A  EC70  F033         	call	_IOCB4_ISR	;wreg free
 15155  00690E                     i2l9430:
 15156                           
 15157                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.RBIF = 0;
 15158  00690E  90F2               	bcf	242,0,c	;volatile
 15159  006910  0012               	return		;funcret
 15160  006912                     __end_of_PIN_MANAGER_IOC:
 15161                           	opt callstack 0
 15162                           
 15163 ;; *************** function _IOCB4_ISR *****************
 15164 ;; Defined at:
 15165 ;;		line 121 in file "mcc_generated_files/pin_manager.c"
 15166 ;; Parameters:    Size  Location     Type
 15167 ;;		None
 15168 ;; Auto vars:     Size  Location     Type
 15169 ;;		None
 15170 ;; Return value:  Size  Location     Type
 15171 ;;                  1    wreg      void 
 15172 ;; Registers used:
 15173 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15174 ;; Tracked objects:
 15175 ;;		On entry : 0/0
 15176 ;;		On exit  : 0/0
 15177 ;;		Unchanged: 0/0
 15178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15183 ;;Total ram usage:        0 bytes
 15184 ;; Hardware stack levels used:    1
 15185 ;; Hardware stack levels required when called:   10
 15186 ;; This function calls:
 15187 ;;		Absolute function
 15188 ;;		_INTERRUPT_S1_CALLBACK
 15189 ;;		_IOCB4_DefaultInterruptHandler
 15190 ;; This function is called by:
 15191 ;;		_PIN_MANAGER_IOC
 15192 ;; This function uses a non-reentrant model
 15193 ;;
 15194                           
 15195                           	psect	text69
 15196  0066E0                     __ptext69:
 15197                           	opt callstack 0
 15198  0066E0                     _IOCB4_ISR:
 15199                           	opt callstack 8
 15200  0066E0                     
 15201                           ;mcc_generated_files/pin_manager.c: 126:     if(IOCB4_InterruptHandler)
 15202  0066E0  0100               	movlb	0	; () banked
 15203  0066E2  51C8               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 15204  0066E4  11C9               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 15205  0066E6  B4D8               	btfsc	status,2,c
 15206  0066E8  EF78  F033         	goto	i2u1181_41
 15207  0066EC  EF7A  F033         	goto	i2u1181_40
 15208  0066F0                     i2u1181_41:
 15209  0066F0  EF86  F033         	goto	i2l142
 15210  0066F4                     i2u1181_40:
 15211  0066F4                     
 15212                           ; BSR set to: 0
 15213                           ;mcc_generated_files/pin_manager.c: 127:     {;mcc_generated_files/pin_manager.c: 128:  
      +                                 IOCB4_InterruptHandler();
 15214  0066F4  D802               	call	i2u1182_48
 15215  0066F6  EF86  F033         	goto	i2u1182_49
 15216  0066FA                     i2u1182_48:
 15217  0066FA  0005               	push	
 15218  0066FC  6EFA               	movwf	pclath,c
 15219  0066FE  51C8               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 15220  006700  6EFD               	movwf	tosl,c
 15221  006702  51C9               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 15222  006704  6EFE               	movwf	tosh,c
 15223  006706  6AFF               	clrf	tosu,c
 15224  006708  50FA               	movf	pclath,w,c
 15225  00670A  0012               	return		;indir
 15226  00670C                     i2u1182_49:
 15227  00670C                     i2l142:
 15228  00670C  0012               	return		;funcret
 15229  00670E                     __end_of_IOCB4_ISR:
 15230                           	opt callstack 0
 15231                           
 15232 ;; *************** function _INTERRUPT_S1_CALLBACK *****************
 15233 ;; Defined at:
 15234 ;;		line 15 in file "main.c"
 15235 ;; Parameters:    Size  Location     Type
 15236 ;;		None
 15237 ;; Auto vars:     Size  Location     Type
 15238 ;;		None
 15239 ;; Return value:  Size  Location     Type
 15240 ;;                  1    wreg      void 
 15241 ;; Registers used:
 15242 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15243 ;; Tracked objects:
 15244 ;;		On entry : 0/0
 15245 ;;		On exit  : 0/0
 15246 ;;		Unchanged: 0/0
 15247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15252 ;;Total ram usage:        0 bytes
 15253 ;; Hardware stack levels used:    1
 15254 ;; Hardware stack levels required when called:    9
 15255 ;; This function calls:
 15256 ;;		_TMR0_StartTimer
 15257 ;;		_TMR0_StopTimer
 15258 ;;		i2_TMR0_WriteTimer
 15259 ;;		i2_printf
 15260 ;; This function is called by:
 15261 ;;		_main
 15262 ;;		_IOCB4_ISR
 15263 ;; This function uses a non-reentrant model
 15264 ;;
 15265                           
 15266                           	psect	text70
 15267  0060E8                     __ptext70:
 15268                           	opt callstack 0
 15269  0060E8                     _INTERRUPT_S1_CALLBACK:
 15270                           	opt callstack 8
 15271  0060E8                     
 15272                           ;main.c: 16:     if (PORTBbits.RB4 == 0) {
 15273  0060E8  B881               	btfsc	129,4,c	;volatile
 15274  0060EA  EF79  F030         	goto	i2u1176_41
 15275  0060EE  EF7B  F030         	goto	i2u1176_40
 15276  0060F2                     i2u1176_41:
 15277  0060F2  EF92  F030         	goto	i2l9280
 15278  0060F6                     i2u1176_40:
 15279  0060F6                     
 15280                           ;main.c: 17:         printf("\f\rPOT: %3d \r", adc_perc);
 15281  0060F6  0EB4               	movlw	low STR_1
 15282  0060F8  0100               	movlb	0	; () banked
 15283  0060FA  6F7B               	movwf	i2printf@fmt& (0+255),b
 15284  0060FC  0EFF               	movlw	high STR_1
 15285  0060FE  6F7C               	movwf	(i2printf@fmt+1)& (0+255),b
 15286  006100  C0B1  F07D         	movff	_adc_perc,?i2_printf+2
 15287  006104  C0B2  F07E         	movff	_adc_perc+1,?i2_printf+3
 15288  006108  C0B3  F07F         	movff	_adc_perc+2,?i2_printf+4
 15289  00610C  C0B4  F080         	movff	_adc_perc+3,?i2_printf+5
 15290  006110  EC04  F034         	call	i2_printf	;wreg free
 15291  006114                     
 15292                           ;main.c: 19:         TMR0_WriteTimer(0x00);
 15293  006114  0E00               	movlw	0
 15294  006116  6E02               	movwf	(i2TMR0_WriteTimer@timerVal+1)^0,c
 15295  006118  0E00               	movlw	0
 15296  00611A  6E01               	movwf	i2TMR0_WriteTimer@timerVal^0,c
 15297  00611C  ECE1  F034         	call	i2_TMR0_WriteTimer	;wreg free
 15298  006120                     
 15299                           ;main.c: 20:         TMR0_StartTimer();
 15300  006120  ECF0  F034         	call	_TMR0_StartTimer	;wreg free
 15301  006124                     i2l9280:
 15302                           
 15303                           ;main.c: 22:     if (PORTBbits.RB4 == 1) {
 15304  006124  A881               	btfss	129,4,c	;volatile
 15305  006126  EF97  F030         	goto	i2u1177_41
 15306  00612A  EF99  F030         	goto	i2u1177_40
 15307  00612E                     i2u1177_41:
 15308  00612E  EF9B  F030         	goto	i2l509
 15309  006132                     i2u1177_40:
 15310  006132                     
 15311                           ;main.c: 23:         TMR0_StopTimer();
 15312  006132  ECEE  F034         	call	_TMR0_StopTimer	;wreg free
 15313  006136                     i2l509:
 15314  006136  0012               	return		;funcret
 15315  006138                     __end_of_INTERRUPT_S1_CALLBACK:
 15316                           	opt callstack 0
 15317                           
 15318 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 15319 ;; Defined at:
 15320 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 15321 ;; Parameters:    Size  Location     Type
 15322 ;;		None
 15323 ;; Auto vars:     Size  Location     Type
 15324 ;;		None
 15325 ;; Return value:  Size  Location     Type
 15326 ;;                  1    wreg      void 
 15327 ;; Registers used:
 15328 ;;		None
 15329 ;; Tracked objects:
 15330 ;;		On entry : 0/0
 15331 ;;		On exit  : 0/0
 15332 ;;		Unchanged: 0/0
 15333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15338 ;;Total ram usage:        0 bytes
 15339 ;; Hardware stack levels used:    1
 15340 ;; This function calls:
 15341 ;;		Nothing
 15342 ;; This function is called by:
 15343 ;;		_PIN_MANAGER_Initialize
 15344 ;;		_IOCB4_ISR
 15345 ;; This function uses a non-reentrant model
 15346 ;;
 15347                           
 15348                           	psect	text71
 15349  0069E4                     __ptext71:
 15350                           	opt callstack 0
 15351  0069E4                     _IOCB4_DefaultInterruptHandler:
 15352                           	opt callstack 17
 15353  0069E4  0012               	return		;funcret
 15354  0069E6                     __end_of_IOCB4_DefaultInterruptHandler:
 15355                           	opt callstack 0
 15356                           
 15357 ;; *************** function i2_printf *****************
 15358 ;; Defined at:
 15359 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
 15360 ;; Parameters:    Size  Location     Type
 15361 ;;  fmt             2   27[BANK0 ] PTR const unsigned char 
 15362 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
 15363 ;;		 -> STR_4(22), STR_1(13), 
 15364 ;; Auto vars:     Size  Location     Type
 15365 ;;  printf          2   88[COMRAM] PTR void [1]
 15366 ;;		 -> ?i2_printf(2), ?_snprintf(2), ?_printf(2), 
 15367 ;;  printf          2    0        int 
 15368 ;; Return value:  Size  Location     Type
 15369 ;;                  2   27[BANK0 ] int 
 15370 ;; Registers used:
 15371 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15372 ;; Tracked objects:
 15373 ;;		On entry : 0/0
 15374 ;;		On exit  : 0/0
 15375 ;;		Unchanged: 0/0
 15376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15377 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15378 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15380 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15381 ;;Total ram usage:       10 bytes
 15382 ;; Hardware stack levels used:    1
 15383 ;; Hardware stack levels required when called:    8
 15384 ;; This function calls:
 15385 ;;		i2_vfprintf
 15386 ;; This function is called by:
 15387 ;;		_INTERRUPT_S1_CALLBACK
 15388 ;; This function uses a non-reentrant model
 15389 ;;
 15390                           
 15391                           	psect	text72
 15392  006808                     __ptext72:
 15393                           	opt callstack 0
 15394  006808                     i2_printf:
 15395                           	opt callstack 8
 15396  006808  0E7D               	movlw	low (?i2_printf+2)
 15397  00680A  6E59               	movwf	i2printf@ap^0,c
 15398  00680C  0E00               	movlw	high (?i2_printf+2)
 15399  00680E  6E5A               	movwf	(i2printf@ap+1)^0,c
 15400  006810  0E00               	movlw	0
 15401  006812  6E4F               	movwf	i2vfprintf@fp^0,c
 15402  006814  0E00               	movlw	0
 15403  006816  6E50               	movwf	(i2vfprintf@fp+1)^0,c
 15404  006818  C07B  F051         	movff	i2printf@fmt,i2vfprintf@fmt
 15405  00681C  C07C  F052         	movff	i2printf@fmt+1,i2vfprintf@fmt+1
 15406  006820  0E59               	movlw	low i2printf@ap
 15407  006822  6E53               	movwf	i2vfprintf@ap^0,c
 15408  006824  0E00               	movlw	high i2printf@ap
 15409  006826  6E54               	movwf	(i2vfprintf@ap+1)^0,c
 15410  006828  EC33  F02F         	call	i2_vfprintf	;wreg free
 15411  00682C  0012               	return		;funcret
 15412  00682E                     __end_ofi2_printf:
 15413                           	opt callstack 0
 15414                           
 15415 ;; *************** function i2_vfprintf *****************
 15416 ;; Defined at:
 15417 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 15418 ;; Parameters:    Size  Location     Type
 15419 ;;  fp              2   78[COMRAM] PTR struct _IO_FILE
 15420 ;;		 -> vsnprintf@f(6), NULL(0), 
 15421 ;;  fmt             2   80[COMRAM] PTR const unsigned char 
 15422 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
 15423 ;;		 -> STR_4(22), STR_3(12), STR_1(13), 
 15424 ;;  ap              2   82[COMRAM] PTR PTR void 
 15425 ;;		 -> i2printf@ap(2), snprintf@ap(2), printf@ap(2), 
 15426 ;; Auto vars:     Size  Location     Type
 15427 ;;  vfprintf        2   84[COMRAM] PTR unsigned char 
 15428 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
 15429 ;;		 -> STR_4(22), STR_3(12), STR_1(13), 
 15430 ;; Return value:  Size  Location     Type
 15431 ;;                  2   78[COMRAM] int 
 15432 ;; Registers used:
 15433 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15434 ;; Tracked objects:
 15435 ;;		On entry : 0/0
 15436 ;;		On exit  : 0/0
 15437 ;;		Unchanged: 0/0
 15438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15439 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15440 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15442 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15443 ;;Total ram usage:        8 bytes
 15444 ;; Hardware stack levels used:    1
 15445 ;; Hardware stack levels required when called:    7
 15446 ;; This function calls:
 15447 ;;		i2_vfpfcnvrt
 15448 ;; This function is called by:
 15449 ;;		i2_printf
 15450 ;; This function uses a non-reentrant model
 15451 ;;
 15452                           
 15453                           	psect	text73
 15454  005E66                     __ptext73:
 15455                           	opt callstack 0
 15456  005E66                     i2_vfprintf:
 15457                           	opt callstack 8
 15458  005E66                     
 15459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 15460  005E66  C051  F055         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
 15461  005E6A  C052  F056         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
 15462  005E6E                     
 15463                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 15464  005E6E  0E00               	movlw	0
 15465  005E70  0101               	movlb	1	; () banked
 15466  005E72  6F80               	movwf	(_nout+1)& (0+255),b
 15467  005E74  0E00               	movlw	0
 15468  005E76  6F7F               	movwf	_nout& (0+255),b
 15469                           
 15470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 15471  005E78  EF51  F02F         	goto	i2l8908
 15472  005E7C                     i2l8906:
 15473                           
 15474                           ; BSR set to: 1
 15475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 15476  005E7C  C04F  F045         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
 15477  005E80  C050  F046         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
 15478  005E84  0E55               	movlw	low i2vfprintf@cfmt
 15479  005E86  6E47               	movwf	i2vfpfcnvrt@fmt^0,c
 15480  005E88  0E00               	movlw	high i2vfprintf@cfmt
 15481  005E8A  6E48               	movwf	(i2vfpfcnvrt@fmt+1)^0,c
 15482  005E8C  C053  F049         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
 15483  005E90  C054  F04A         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
 15484  005E94  ECB0  F009         	call	i2_vfpfcnvrt	;wreg free
 15485  005E98  5045               	movf	?i2_vfpfcnvrt^0,w,c
 15486  005E9A  0101               	movlb	1	; () banked
 15487  005E9C  277F               	addwf	_nout& (0+255),f,b
 15488  005E9E  5046               	movf	(?i2_vfpfcnvrt+1)^0,w,c
 15489  005EA0  2380               	addwfc	(_nout+1)& (0+255),f,b
 15490  005EA2                     i2l8908:
 15491                           
 15492                           ; BSR set to: 1
 15493                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 15494  005EA2  C055  FFF6         	movff	i2vfprintf@cfmt,tblptrl
 15495  005EA6  C056  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
 15496  005EAA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15497  005EAA  6AF8               	clrf	tblptru,c
 15498  005EAC                     	endif
 15499  005EAC                     	if	0	;tblptru may be non-zero
 15500  005EAC                     	endif
 15501  005EAC  0008               	tblrd		*
 15502  005EAE  50F5               	movf	tablat,w,c
 15503  005EB0  0900               	iorlw	0
 15504  005EB2  A4D8               	btfss	status,2,c
 15505  005EB4  EF5E  F02F         	goto	i2u1128_41
 15506  005EB8  EF60  F02F         	goto	i2u1128_40
 15507  005EBC                     i2u1128_41:
 15508  005EBC  EF3E  F02F         	goto	i2l8906
 15509  005EC0                     i2u1128_40:
 15510  005EC0                     
 15511                           ; BSR set to: 1
 15512                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 15513  005EC0  C17F  F04F         	movff	_nout,?i2_vfprintf
 15514  005EC4  C180  F050         	movff	_nout+1,?i2_vfprintf+1
 15515  005EC8                     
 15516                           ; BSR set to: 1
 15517  005EC8  0012               	return		;funcret
 15518  005ECA                     __end_ofi2_vfprintf:
 15519                           	opt callstack 0
 15520                           
 15521 ;; *************** function i2_vfpfcnvrt *****************
 15522 ;; Defined at:
 15523 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 15524 ;; Parameters:    Size  Location     Type
 15525 ;;  fp              2   68[COMRAM] PTR struct _IO_FILE
 15526 ;;		 -> vsnprintf@f(6), NULL(0), 
 15527 ;;  fmt             2   70[COMRAM] PTR PTR unsigned char 
 15528 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
 15529 ;;  ap              2   72[COMRAM] PTR PTR void 
 15530 ;;		 -> i2printf@ap(2), snprintf@ap(2), printf@ap(2), 
 15531 ;; Auto vars:     Size  Location     Type
 15532 ;;  vfpfcnvrt       8   19[BANK0 ] unsigned long long 
 15533 ;;  vfpfcnvrt       8    8[BANK0 ] long long 
 15534 ;;  vfpfcnvrt       4    0        long long 
 15535 ;;  vfpfcnvrt       3    0        unsigned char [3]
 15536 ;;  vfpfcnvrt       2   16[BANK0 ] PTR void 
 15537 ;;		 -> ?_snprintf(2), ?_printf(2), 
 15538 ;;  vfpfcnvrt       2    2[BANK0 ] int 
 15539 ;;  vfpfcnvrt       2    0[BANK0 ] PTR unsigned char 
 15540 ;;		 -> ?_snprintf(2), ?_printf(2), 
 15541 ;;  vfpfcnvrt       2    0        int 
 15542 ;;  vfpfcnvrt       1   18[BANK0 ] unsigned char 
 15543 ;; Return value:  Size  Location     Type
 15544 ;;                  2   68[COMRAM] int 
 15545 ;; Registers used:
 15546 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15547 ;; Tracked objects:
 15548 ;;		On entry : 0/0
 15549 ;;		On exit  : 0/0
 15550 ;;		Unchanged: 0/0
 15551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15552 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15553 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15554 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15555 ;;      Totals:        10      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15556 ;;Total ram usage:       37 bytes
 15557 ;; Hardware stack levels used:    1
 15558 ;; Hardware stack levels required when called:    6
 15559 ;; This function calls:
 15560 ;;		i2_atoi
 15561 ;;		i2_ctoa
 15562 ;;		i2_dtoa
 15563 ;;		i2_fputc
 15564 ;;		i2_isdigit
 15565 ;;		i2_otoa
 15566 ;;		i2_stoa
 15567 ;;		i2_strncmp
 15568 ;;		i2_utoa
 15569 ;;		i2_xtoa
 15570 ;; This function is called by:
 15571 ;;		i2_vfprintf
 15572 ;; This function uses a non-reentrant model
 15573 ;;
 15574                           
 15575                           	psect	text74
 15576  001360                     __ptext74:
 15577                           	opt callstack 0
 15578  001360                     i2_vfpfcnvrt:
 15579                           	opt callstack 8
 15580  001360                     
 15581                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 15582  001360  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15583  001364  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15584  001368  CFDE FFF6          	movff	postinc2,tblptrl
 15585  00136C  CFDD FFF7          	movff	postdec2,tblptrh
 15586  001370                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15587  001370  6AF8               	clrf	tblptru,c
 15588  001372                     	endif
 15589  001372                     	if	0	;tblptru may be non-zero
 15590  001372                     	endif
 15591  001372  0008               	tblrd		*
 15592  001374  50F5               	movf	tablat,w,c
 15593  001376  0A25               	xorlw	37
 15594  001378  A4D8               	btfss	status,2,c
 15595  00137A  EFC1  F009         	goto	i2u1006_41
 15596  00137E  EFC3  F009         	goto	i2u1006_40
 15597  001382                     i2u1006_41:
 15598  001382  EFCF  F012         	goto	i2l8550
 15599  001386                     i2u1006_40:
 15600  001386                     
 15601                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 15602  001386  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15603  00138A  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15604  00138E  2ADE               	incf	postinc2,f,c
 15605  001390  0E00               	movlw	0
 15606  001392  22DD               	addwfc	postdec2,f,c
 15607  001394                     
 15608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 15609  001394  0E00               	movlw	0
 15610  001396  0100               	movlb	0	; () banked
 15611  001398  6FB6               	movwf	(_width+1)& (0+255),b
 15612  00139A  0E00               	movlw	0
 15613  00139C  6FB5               	movwf	_width& (0+255),b
 15614  00139E  C0B5  F0B9         	movff	_width,_flags
 15615  0013A2  C0B6  F0BA         	movff	_width+1,_flags+1
 15616  0013A6                     
 15617                           ; BSR set to: 0
 15618                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 15619  0013A6  69B7               	setf	_prec& (0+255),b
 15620  0013A8  69B8               	setf	(_prec+1)& (0+255),b
 15621  0013AA                     
 15622                           ; BSR set to: 0
 15623                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
 15624  0013AA  0E00               	movlw	0
 15625  0013AC  6F63               	movwf	(i2vfpfcnvrt@done+1)& (0+255),b
 15626  0013AE  0E00               	movlw	0
 15627  0013B0  6F62               	movwf	i2vfpfcnvrt@done& (0+255),b
 15628                           
 15629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 15630  0013B2  EF22  F00A         	goto	i2l8268
 15631  0013B6                     i2l8242:
 15632                           
 15633                           ; BSR set to: 0
 15634                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
 15635  0013B6  81B9               	bsf	_flags& (0+255),0,b
 15636  0013B8                     i2l8244:
 15637                           
 15638                           ; BSR set to: 0
 15639                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
 15640  0013B8  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15641  0013BC  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15642  0013C0  2ADE               	incf	postinc2,f,c
 15643  0013C2  0E00               	movlw	0
 15644  0013C4  22DD               	addwfc	postdec2,f,c
 15645                           
 15646                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
 15647  0013C6  EF22  F00A         	goto	i2l8268
 15648  0013CA                     i2l8246:
 15649                           
 15650                           ; BSR set to: 0
 15651                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
 15652  0013CA  83B9               	bsf	_flags& (0+255),1,b
 15653  0013CC  EFDC  F009         	goto	i2l8244
 15654  0013D0                     i2l8250:
 15655                           
 15656                           ; BSR set to: 0
 15657                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
 15658  0013D0  85B9               	bsf	_flags& (0+255),2,b
 15659  0013D2  EFDC  F009         	goto	i2l8244
 15660  0013D6                     i2l8254:
 15661                           
 15662                           ; BSR set to: 0
 15663                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
 15664  0013D6  87B9               	bsf	_flags& (0+255),3,b
 15665  0013D8  EFDC  F009         	goto	i2l8244
 15666  0013DC                     i2l8258:
 15667                           
 15668                           ; BSR set to: 0
 15669                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
 15670  0013DC  89B9               	bsf	_flags& (0+255),4,b
 15671  0013DE  EFDC  F009         	goto	i2l8244
 15672  0013E2                     i2l8262:
 15673                           
 15674                           ; BSR set to: 0
 15675                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
 15676  0013E2  0E00               	movlw	0
 15677  0013E4  6F63               	movwf	(i2vfpfcnvrt@done+1)& (0+255),b
 15678  0013E6  0E01               	movlw	1
 15679  0013E8  6F62               	movwf	i2vfpfcnvrt@done& (0+255),b
 15680                           
 15681                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
 15682  0013EA  EF22  F00A         	goto	i2l8268
 15683  0013EE                     i2l8266:
 15684                           
 15685                           ; BSR set to: 0
 15686  0013EE  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15687  0013F2  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15688  0013F6  CFDE FFF6          	movff	postinc2,tblptrl
 15689  0013FA  CFDD FFF7          	movff	postdec2,tblptrh
 15690  0013FE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15691  0013FE  6AF8               	clrf	tblptru,c
 15692  001400                     	endif
 15693  001400                     	if	0	;tblptru may be non-zero
 15694  001400                     	endif
 15695  001400  0008               	tblrd		*
 15696  001402  50F5               	movf	tablat,w,c
 15697  001404  6E4B               	movwf	??i2_vfpfcnvrt^0,c
 15698  001406  6A4C               	clrf	(??i2_vfpfcnvrt+1)^0,c
 15699                           
 15700                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15701                           ; Switch size 1, requested type "simple"
 15702                           ; Number of cases is 1, Range of values is 0 to 0
 15703                           ; switch strategies available:
 15704                           ; Name         Instructions Cycles
 15705                           ; simple_byte            4     3 (average)
 15706                           ;	Chosen strategy is simple_byte
 15707  001408  504C               	movf	(??i2_vfpfcnvrt+1)^0,w,c
 15708  00140A  0A00               	xorlw	0	; case 0
 15709  00140C  B4D8               	btfsc	status,2,c
 15710  00140E  EF0B  F00A         	goto	i2l9986
 15711  001412  EFF1  F009         	goto	i2l8262
 15712  001416                     i2l9986:
 15713                           
 15714                           ; BSR set to: 0
 15715                           ; Switch size 1, requested type "simple"
 15716                           ; Number of cases is 5, Range of values is 32 to 48
 15717                           ; switch strategies available:
 15718                           ; Name         Instructions Cycles
 15719                           ; simple_byte           16     9 (average)
 15720                           ;	Chosen strategy is simple_byte
 15721  001416  504B               	movf	??i2_vfpfcnvrt^0,w,c
 15722  001418  0A20               	xorlw	32	; case 32
 15723  00141A  B4D8               	btfsc	status,2,c
 15724  00141C  EFEB  F009         	goto	i2l8254
 15725  001420  0A03               	xorlw	3	; case 35
 15726  001422  B4D8               	btfsc	status,2,c
 15727  001424  EFEE  F009         	goto	i2l8258
 15728  001428  0A08               	xorlw	8	; case 43
 15729  00142A  B4D8               	btfsc	status,2,c
 15730  00142C  EFE8  F009         	goto	i2l8250
 15731  001430  0A06               	xorlw	6	; case 45
 15732  001432  B4D8               	btfsc	status,2,c
 15733  001434  EFDB  F009         	goto	i2l8242
 15734  001438  0A1D               	xorlw	29	; case 48
 15735  00143A  B4D8               	btfsc	status,2,c
 15736  00143C  EFE5  F009         	goto	i2l8246
 15737  001440  EFF1  F009         	goto	i2l8262
 15738  001444                     i2l8268:
 15739                           
 15740                           ; BSR set to: 0
 15741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 15742  001444  5162               	movf	i2vfpfcnvrt@done& (0+255),w,b
 15743  001446  1163               	iorwf	(i2vfpfcnvrt@done+1)& (0+255),w,b
 15744  001448  B4D8               	btfsc	status,2,c
 15745  00144A  EF29  F00A         	goto	i2u1007_41
 15746  00144E  EF2B  F00A         	goto	i2u1007_40
 15747  001452                     i2u1007_41:
 15748  001452  EFF7  F009         	goto	i2l8266
 15749  001456                     i2u1007_40:
 15750  001456                     
 15751                           ; BSR set to: 0
 15752                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
 15753  001456  A1B9               	btfss	_flags& (0+255),0,b
 15754  001458  EF30  F00A         	goto	i2u1008_41
 15755  00145C  EF32  F00A         	goto	i2u1008_40
 15756  001460                     i2u1008_41:
 15757  001460  EF33  F00A         	goto	i2l8272
 15758  001464                     i2u1008_40:
 15759  001464                     
 15760                           ; BSR set to: 0
 15761                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
 15762  001464  93B9               	bcf	_flags& (0+255),1,b
 15763  001466                     i2l8272:
 15764                           
 15765                           ; BSR set to: 0
 15766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
 15767  001466  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15768  00146A  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15769  00146E  CFDE FFF6          	movff	postinc2,tblptrl
 15770  001472  CFDD FFF7          	movff	postdec2,tblptrh
 15771  001476                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15772  001476  6AF8               	clrf	tblptru,c
 15773  001478                     	endif
 15774  001478                     	if	0	;tblptru may be non-zero
 15775  001478                     	endif
 15776  001478  0008               	tblrd		*
 15777  00147A  50F5               	movf	tablat,w,c
 15778  00147C  0A2A               	xorlw	42
 15779  00147E  A4D8               	btfss	status,2,c
 15780  001480  EF44  F00A         	goto	i2u1009_41
 15781  001484  EF46  F00A         	goto	i2u1009_40
 15782  001488                     i2u1009_41:
 15783  001488  EF6F  F00A         	goto	i2l8280
 15784  00148C                     i2u1009_40:
 15785  00148C                     
 15786                           ; BSR set to: 0
 15787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
 15788  00148C  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15789  001490  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15790  001494  2ADE               	incf	postinc2,f,c
 15791  001496  0E00               	movlw	0
 15792  001498  22DD               	addwfc	postdec2,f,c
 15793                           
 15794                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
 15795  00149A  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 15796  00149E  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 15797  0014A2  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 15798  0014A6  0E02               	movlw	2
 15799  0014A8  26DE               	addwf	postinc2,f,c
 15800  0014AA  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 15801  0014AE  0E00               	movlw	0
 15802  0014B0  22DD               	addwfc	postdec2,f,c
 15803  0014B2  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 15804  0014B6  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 15805  0014BA  CFDE F0B5          	movff	postinc2,_width
 15806  0014BE  CFDD F0B6          	movff	postdec2,_width+1
 15807  0014C2                     
 15808                           ; BSR set to: 0
 15809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
 15810  0014C2  BFB6               	btfsc	(_width+1)& (0+255),7,b
 15811  0014C4  EF68  F00A         	goto	i2u1010_40
 15812  0014C8  EF66  F00A         	goto	i2u1010_41
 15813  0014CC                     i2u1010_41:
 15814  0014CC  EFB4  F00A         	goto	i2l8290
 15815  0014D0                     i2u1010_40:
 15816  0014D0                     
 15817                           ; BSR set to: 0
 15818                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
 15819  0014D0  81B9               	bsf	_flags& (0+255),0,b
 15820                           
 15821                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
 15822  0014D2  6DB5               	negf	_width& (0+255),b
 15823  0014D4  1FB6               	comf	(_width+1)& (0+255),f,b
 15824  0014D6  B0D8               	btfsc	status,0,c
 15825  0014D8  2BB6               	incf	(_width+1)& (0+255),f,b
 15826  0014DA  EFB4  F00A         	goto	i2l8290
 15827  0014DE                     i2l8280:
 15828                           
 15829                           ; BSR set to: 0
 15830                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
 15831  0014DE  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15832  0014E2  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15833  0014E6  CFDE F008          	movff	postinc2,i2atoi@s
 15834  0014EA  CFDD F009          	movff	postdec2,i2atoi@s+1
 15835  0014EE  EC7E  F01F         	call	i2_atoi	;wreg free
 15836  0014F2  C008  F0B5         	movff	?i2_atoi,_width
 15837  0014F6  C009  F0B6         	movff	?i2_atoi+1,_width+1
 15838                           
 15839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 15840  0014FA  EF86  F00A         	goto	i2l8284
 15841  0014FE                     i2l8282:
 15842                           
 15843                           ; BSR set to: 0
 15844                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
 15845  0014FE  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15846  001502  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15847  001506  2ADE               	incf	postinc2,f,c
 15848  001508  0E00               	movlw	0
 15849  00150A  22DD               	addwfc	postdec2,f,c
 15850  00150C                     i2l8284:
 15851  00150C  0ED0               	movlw	208
 15852  00150E  6E4B               	movwf	??i2_vfpfcnvrt^0,c
 15853  001510  0EFF               	movlw	255
 15854  001512  6E4C               	movwf	(??i2_vfpfcnvrt+1)^0,c
 15855  001514  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15856  001518  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15857  00151C  CFDE FFF6          	movff	postinc2,tblptrl
 15858  001520  CFDD FFF7          	movff	postdec2,tblptrh
 15859  001524                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15860  001524  6AF8               	clrf	tblptru,c
 15861  001526                     	endif
 15862  001526                     	if	0	;tblptru may be non-zero
 15863  001526                     	endif
 15864  001526  0008               	tblrd		*
 15865  001528  50F5               	movf	tablat,w,c
 15866  00152A  6E4D               	movwf	(??i2_vfpfcnvrt+2)^0,c
 15867  00152C  6A4E               	clrf	(??i2_vfpfcnvrt+3)^0,c
 15868  00152E  504B               	movf	??i2_vfpfcnvrt^0,w,c
 15869  001530  264D               	addwf	(??i2_vfpfcnvrt+2)^0,f,c
 15870  001532  504C               	movf	(??i2_vfpfcnvrt+1)^0,w,c
 15871  001534  224E               	addwfc	(??i2_vfpfcnvrt+3)^0,f,c
 15872  001536  504E               	movf	(??i2_vfpfcnvrt+3)^0,w,c
 15873  001538  E10A               	bnz	i2u1011_40
 15874  00153A  0E0A               	movlw	10
 15875  00153C  5C4D               	subwf	(??i2_vfpfcnvrt+2)^0,w,c
 15876  00153E  A0D8               	btfss	status,0,c
 15877  001540  EFA4  F00A         	goto	i2u1011_41
 15878  001544  EFA7  F00A         	goto	i2u1011_40
 15879  001548                     i2u1011_41:
 15880  001548  0E01               	movlw	1
 15881  00154A  EFA8  F00A         	goto	i2u1012_40
 15882  00154E                     i2u1011_40:
 15883  00154E  0E00               	movlw	0
 15884  001550                     i2u1012_40:
 15885  001550  0100               	movlb	0	; () banked
 15886  001552  6F64               	movwf	i2_vfpfcnvrt$1876& (0+255),b
 15887  001554  6B65               	clrf	(i2_vfpfcnvrt$1876+1)& (0+255),b
 15888  001556                     
 15889                           ; BSR set to: 0
 15890  001556  5164               	movf	i2_vfpfcnvrt$1876& (0+255),w,b
 15891  001558  1165               	iorwf	(i2_vfpfcnvrt$1876+1)& (0+255),w,b
 15892  00155A  A4D8               	btfss	status,2,c
 15893  00155C  EFB2  F00A         	goto	i2u1013_41
 15894  001560  EFB4  F00A         	goto	i2u1013_40
 15895  001564                     i2u1013_41:
 15896  001564  EF7F  F00A         	goto	i2l8282
 15897  001568                     i2u1013_40:
 15898  001568                     i2l8290:
 15899                           
 15900                           ; BSR set to: 0
 15901                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
 15902  001568  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15903  00156C  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15904  001570  CFDE FFF6          	movff	postinc2,tblptrl
 15905  001574  CFDD FFF7          	movff	postdec2,tblptrh
 15906  001578                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15907  001578  6AF8               	clrf	tblptru,c
 15908  00157A                     	endif
 15909  00157A                     	if	0	;tblptru may be non-zero
 15910  00157A                     	endif
 15911  00157A  0008               	tblrd		*
 15912  00157C  50F5               	movf	tablat,w,c
 15913  00157E  0A2E               	xorlw	46
 15914  001580  A4D8               	btfss	status,2,c
 15915  001582  EFC5  F00A         	goto	i2u1014_41
 15916  001586  EFC7  F00A         	goto	i2u1014_40
 15917  00158A                     i2u1014_41:
 15918  00158A  EF47  F00B         	goto	i2l8310
 15919  00158E                     i2u1014_40:
 15920  00158E                     
 15921                           ; BSR set to: 0
 15922                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
 15923  00158E  0E00               	movlw	0
 15924  001590  6FB8               	movwf	(_prec+1)& (0+255),b
 15925  001592  0E00               	movlw	0
 15926  001594  6FB7               	movwf	_prec& (0+255),b
 15927  001596                     
 15928                           ; BSR set to: 0
 15929                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
 15930  001596  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15931  00159A  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15932  00159E  2ADE               	incf	postinc2,f,c
 15933  0015A0  0E00               	movlw	0
 15934  0015A2  22DD               	addwfc	postdec2,f,c
 15935  0015A4                     
 15936                           ; BSR set to: 0
 15937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
 15938  0015A4  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15939  0015A8  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15940  0015AC  CFDE FFF6          	movff	postinc2,tblptrl
 15941  0015B0  CFDD FFF7          	movff	postdec2,tblptrh
 15942  0015B4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15943  0015B4  6AF8               	clrf	tblptru,c
 15944  0015B6                     	endif
 15945  0015B6                     	if	0	;tblptru may be non-zero
 15946  0015B6                     	endif
 15947  0015B6  0008               	tblrd		*
 15948  0015B8  50F5               	movf	tablat,w,c
 15949  0015BA  0A2A               	xorlw	42
 15950  0015BC  A4D8               	btfss	status,2,c
 15951  0015BE  EFE3  F00A         	goto	i2u1015_41
 15952  0015C2  EFE5  F00A         	goto	i2u1015_40
 15953  0015C6                     i2u1015_41:
 15954  0015C6  EF02  F00B         	goto	i2l8300
 15955  0015CA                     i2u1015_40:
 15956  0015CA                     
 15957                           ; BSR set to: 0
 15958                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
 15959  0015CA  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15960  0015CE  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15961  0015D2  2ADE               	incf	postinc2,f,c
 15962  0015D4  0E00               	movlw	0
 15963  0015D6  22DD               	addwfc	postdec2,f,c
 15964                           
 15965                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
 15966  0015D8  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 15967  0015DC  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 15968  0015E0  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 15969  0015E4  0E02               	movlw	2
 15970  0015E6  26DE               	addwf	postinc2,f,c
 15971  0015E8  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 15972  0015EC  0E00               	movlw	0
 15973  0015EE  22DD               	addwfc	postdec2,f,c
 15974  0015F0  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 15975  0015F4  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 15976  0015F8  CFDE F0B7          	movff	postinc2,_prec
 15977  0015FC  CFDD F0B8          	movff	postdec2,_prec+1
 15978                           
 15979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
 15980  001600  EF47  F00B         	goto	i2l8310
 15981  001604                     i2l8300:
 15982                           
 15983                           ; BSR set to: 0
 15984                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
 15985  001604  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15986  001608  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15987  00160C  CFDE F008          	movff	postinc2,i2atoi@s
 15988  001610  CFDD F009          	movff	postdec2,i2atoi@s+1
 15989  001614  EC7E  F01F         	call	i2_atoi	;wreg free
 15990  001618  C008  F0B7         	movff	?i2_atoi,_prec
 15991  00161C  C009  F0B8         	movff	?i2_atoi+1,_prec+1
 15992                           
 15993                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 15994  001620  EF19  F00B         	goto	i2l8304
 15995  001624                     i2l8302:
 15996                           
 15997                           ; BSR set to: 0
 15998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
 15999  001624  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16000  001628  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16001  00162C  2ADE               	incf	postinc2,f,c
 16002  00162E  0E00               	movlw	0
 16003  001630  22DD               	addwfc	postdec2,f,c
 16004  001632                     i2l8304:
 16005  001632  0ED0               	movlw	208
 16006  001634  6E4B               	movwf	??i2_vfpfcnvrt^0,c
 16007  001636  0EFF               	movlw	255
 16008  001638  6E4C               	movwf	(??i2_vfpfcnvrt+1)^0,c
 16009  00163A  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16010  00163E  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16011  001642  CFDE FFF6          	movff	postinc2,tblptrl
 16012  001646  CFDD FFF7          	movff	postdec2,tblptrh
 16013  00164A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16014  00164A  6AF8               	clrf	tblptru,c
 16015  00164C                     	endif
 16016  00164C                     	if	0	;tblptru may be non-zero
 16017  00164C                     	endif
 16018  00164C  0008               	tblrd		*
 16019  00164E  50F5               	movf	tablat,w,c
 16020  001650  6E4D               	movwf	(??i2_vfpfcnvrt+2)^0,c
 16021  001652  6A4E               	clrf	(??i2_vfpfcnvrt+3)^0,c
 16022  001654  504B               	movf	??i2_vfpfcnvrt^0,w,c
 16023  001656  264D               	addwf	(??i2_vfpfcnvrt+2)^0,f,c
 16024  001658  504C               	movf	(??i2_vfpfcnvrt+1)^0,w,c
 16025  00165A  224E               	addwfc	(??i2_vfpfcnvrt+3)^0,f,c
 16026  00165C  504E               	movf	(??i2_vfpfcnvrt+3)^0,w,c
 16027  00165E  E10A               	bnz	i2u1016_40
 16028  001660  0E0A               	movlw	10
 16029  001662  5C4D               	subwf	(??i2_vfpfcnvrt+2)^0,w,c
 16030  001664  A0D8               	btfss	status,0,c
 16031  001666  EF37  F00B         	goto	i2u1016_41
 16032  00166A  EF3A  F00B         	goto	i2u1016_40
 16033  00166E                     i2u1016_41:
 16034  00166E  0E01               	movlw	1
 16035  001670  EF3B  F00B         	goto	i2u1017_40
 16036  001674                     i2u1016_40:
 16037  001674  0E00               	movlw	0
 16038  001676                     i2u1017_40:
 16039  001676  0100               	movlb	0	; () banked
 16040  001678  6F66               	movwf	i2_vfpfcnvrt$1877& (0+255),b
 16041  00167A  6B67               	clrf	(i2_vfpfcnvrt$1877+1)& (0+255),b
 16042  00167C                     
 16043                           ; BSR set to: 0
 16044  00167C  5166               	movf	i2_vfpfcnvrt$1877& (0+255),w,b
 16045  00167E  1167               	iorwf	(i2_vfpfcnvrt$1877+1)& (0+255),w,b
 16046  001680  A4D8               	btfss	status,2,c
 16047  001682  EF45  F00B         	goto	i2u1018_41
 16048  001686  EF47  F00B         	goto	i2u1018_40
 16049  00168A                     i2u1018_41:
 16050  00168A  EF12  F00B         	goto	i2l8302
 16051  00168E                     i2u1018_40:
 16052  00168E                     i2l8310:
 16053                           
 16054                           ; BSR set to: 0
 16055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
 16056  00168E  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16057  001692  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16058  001696  CFDE FFF6          	movff	postinc2,tblptrl
 16059  00169A  CFDD FFF7          	movff	postdec2,tblptrh
 16060  00169E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16061  00169E  6AF8               	clrf	tblptru,c
 16062  0016A0                     	endif
 16063  0016A0                     	if	0	;tblptru may be non-zero
 16064  0016A0                     	endif
 16065  0016A0  0008               	tblrd		*
 16066  0016A2  50F5               	movf	tablat,w,c
 16067  0016A4  0A63               	xorlw	99
 16068  0016A6  A4D8               	btfss	status,2,c
 16069  0016A8  EF58  F00B         	goto	i2u1019_41
 16070  0016AC  EF5A  F00B         	goto	i2u1019_40
 16071  0016B0                     i2u1019_41:
 16072  0016B0  EF81  F00B         	goto	i2l8318
 16073  0016B4                     i2u1019_40:
 16074  0016B4                     
 16075                           ; BSR set to: 0
 16076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
 16077  0016B4  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16078  0016B8  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16079  0016BC  2ADE               	incf	postinc2,f,c
 16080  0016BE  0E00               	movlw	0
 16081  0016C0  22DD               	addwfc	postdec2,f,c
 16082                           
 16083                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 16084  0016C2  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16085  0016C6  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16086  0016CA  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16087  0016CE  0E02               	movlw	2
 16088  0016D0  26DE               	addwf	postinc2,f,c
 16089  0016D2  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16090  0016D6  0E00               	movlw	0
 16091  0016D8  22DD               	addwfc	postdec2,f,c
 16092  0016DA  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16093  0016DE  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16094  0016E2  50DF               	movf	indf2,w,c
 16095  0016E4  6F72               	movwf	i2vfpfcnvrt@c& (0+255),b
 16096  0016E6                     
 16097                           ; BSR set to: 0
 16098                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
 16099  0016E6  C045  F01E         	movff	i2vfpfcnvrt@fp,i2ctoa@fp
 16100  0016EA  C046  F01F         	movff	i2vfpfcnvrt@fp+1,i2ctoa@fp+1
 16101  0016EE  C072  F020         	movff	i2vfpfcnvrt@c,i2ctoa@c
 16102  0016F2  ECF3  F02F         	call	i2_ctoa	;wreg free
 16103  0016F6  C01E  F045         	movff	?i2_ctoa,?i2_vfpfcnvrt
 16104  0016FA  C01F  F046         	movff	?i2_ctoa+1,?i2_vfpfcnvrt+1
 16105  0016FE  EFEB  F012         	goto	i2l878
 16106  001702                     i2l8318:
 16107                           
 16108                           ; BSR set to: 0
 16109                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
 16110  001702  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16111  001706  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16112  00170A  CFDE F001          	movff	postinc2,i2strncmp@_l
 16113  00170E  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16114  001712  0ED1               	movlw	low STR_9
 16115  001714  6E03               	movwf	i2strncmp@_r^0,c
 16116  001716  0EFF               	movlw	high STR_9
 16117  001718  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16118  00171A  0E00               	movlw	0
 16119  00171C  6E06               	movwf	(i2strncmp@n+1)^0,c
 16120  00171E  0E03               	movlw	3
 16121  001720  6E05               	movwf	i2strncmp@n^0,c
 16122  001722  ECC0  F02A         	call	i2_strncmp	;wreg free
 16123  001726  5001               	movf	?i2_strncmp^0,w,c
 16124  001728  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16125  00172A  B4D8               	btfsc	status,2,c
 16126  00172C  EF9A  F00B         	goto	i2u1020_41
 16127  001730  EF9C  F00B         	goto	i2u1020_40
 16128  001734                     i2u1020_41:
 16129  001734  EFB7  F00B         	goto	i2l8322
 16130  001738                     i2u1020_40:
 16131  001738  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16132  00173C  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16133  001740  CFDE F001          	movff	postinc2,i2strncmp@_l
 16134  001744  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16135  001748  0ED5               	movlw	low STR_13
 16136  00174A  6E03               	movwf	i2strncmp@_r^0,c
 16137  00174C  0EFF               	movlw	high STR_13
 16138  00174E  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16139  001750  0E00               	movlw	0
 16140  001752  6E06               	movwf	(i2strncmp@n+1)^0,c
 16141  001754  0E03               	movlw	3
 16142  001756  6E05               	movwf	i2strncmp@n^0,c
 16143  001758  ECC0  F02A         	call	i2_strncmp	;wreg free
 16144  00175C  5001               	movf	?i2_strncmp^0,w,c
 16145  00175E  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16146  001760  A4D8               	btfss	status,2,c
 16147  001762  EFB5  F00B         	goto	i2u1021_41
 16148  001766  EFB7  F00B         	goto	i2u1021_40
 16149  00176A                     i2u1021_41:
 16150  00176A  EFF8  F00B         	goto	i2l8328
 16151  00176E                     i2u1021_40:
 16152  00176E                     i2l8322:
 16153                           
 16154                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
 16155  00176E  0E03               	movlw	3
 16156  001770  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16157  001774  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16158  001778  26DE               	addwf	postinc2,f,c
 16159  00177A  0E00               	movlw	0
 16160  00177C  22DD               	addwfc	postdec2,f,c
 16161                           
 16162                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 16163  00177E  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16164  001782  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16165  001786  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16166  00178A  0E02               	movlw	2
 16167  00178C  26DE               	addwf	postinc2,f,c
 16168  00178E  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16169  001792  0E00               	movlw	0
 16170  001794  22DD               	addwfc	postdec2,f,c
 16171  001796  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16172  00179A  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16173  00179E  50DF               	movf	indf2,w,c
 16174  0017A0  0100               	movlb	0	; () banked
 16175  0017A2  6F68               	movwf	i2vfpfcnvrt@ll& (0+255),b
 16176  0017A4  0E00               	movlw	0
 16177  0017A6  BF68               	btfsc	i2vfpfcnvrt@ll& (0+255),7,b
 16178  0017A8  0EFF               	movlw	-1
 16179  0017AA  6F69               	movwf	(i2vfpfcnvrt@ll+1)& (0+255),b
 16180  0017AC  6F6A               	movwf	(i2vfpfcnvrt@ll+2)& (0+255),b
 16181  0017AE  6F6B               	movwf	(i2vfpfcnvrt@ll+3)& (0+255),b
 16182  0017B0  6F6C               	movwf	(i2vfpfcnvrt@ll+4)& (0+255),b
 16183  0017B2  6F6D               	movwf	(i2vfpfcnvrt@ll+5)& (0+255),b
 16184  0017B4  6F6E               	movwf	(i2vfpfcnvrt@ll+6)& (0+255),b
 16185  0017B6  6F6F               	movwf	(i2vfpfcnvrt@ll+7)& (0+255),b
 16186  0017B8                     i2l8324:
 16187                           
 16188                           ; BSR set to: 0
 16189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
 16190  0017B8  C045  F01E         	movff	i2vfpfcnvrt@fp,i2dtoa@fp
 16191  0017BC  C046  F01F         	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
 16192  0017C0  C068  F020         	movff	i2vfpfcnvrt@ll,i2dtoa@d
 16193  0017C4  C069  F021         	movff	i2vfpfcnvrt@ll+1,i2dtoa@d+1
 16194  0017C8  C06A  F022         	movff	i2vfpfcnvrt@ll+2,i2dtoa@d+2
 16195  0017CC  C06B  F023         	movff	i2vfpfcnvrt@ll+3,i2dtoa@d+3
 16196  0017D0  C06C  F024         	movff	i2vfpfcnvrt@ll+4,i2dtoa@d+4
 16197  0017D4  C06D  F025         	movff	i2vfpfcnvrt@ll+5,i2dtoa@d+5
 16198  0017D8  C06E  F026         	movff	i2vfpfcnvrt@ll+6,i2dtoa@d+6
 16199  0017DC  C06F  F027         	movff	i2vfpfcnvrt@ll+7,i2dtoa@d+7
 16200  0017E0  EC89  F019         	call	i2_dtoa	;wreg free
 16201  0017E4  C01E  F045         	movff	?i2_dtoa,?i2_vfpfcnvrt
 16202  0017E8  C01F  F046         	movff	?i2_dtoa+1,?i2_vfpfcnvrt+1
 16203  0017EC  EFEB  F012         	goto	i2l878
 16204  0017F0                     i2l8328:
 16205                           
 16206                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
 16207  0017F0  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16208  0017F4  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16209  0017F8  CFDE F001          	movff	postinc2,i2strncmp@_l
 16210  0017FC  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16211  001800  0ED2               	movlw	low (STR_9+1)
 16212  001802  6E03               	movwf	i2strncmp@_r^0,c
 16213  001804  0EFF               	movlw	high (STR_9+1)
 16214  001806  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16215  001808  0E00               	movlw	0
 16216  00180A  6E06               	movwf	(i2strncmp@n+1)^0,c
 16217  00180C  0E02               	movlw	2
 16218  00180E  6E05               	movwf	i2strncmp@n^0,c
 16219  001810  ECC0  F02A         	call	i2_strncmp	;wreg free
 16220  001814  5001               	movf	?i2_strncmp^0,w,c
 16221  001816  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16222  001818  B4D8               	btfsc	status,2,c
 16223  00181A  EF11  F00C         	goto	i2u1022_41
 16224  00181E  EF13  F00C         	goto	i2u1022_40
 16225  001822                     i2u1022_41:
 16226  001822  EF2E  F00C         	goto	i2l8332
 16227  001826                     i2u1022_40:
 16228  001826  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16229  00182A  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16230  00182E  CFDE F001          	movff	postinc2,i2strncmp@_l
 16231  001832  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16232  001836  0ED6               	movlw	low (STR_13+1)
 16233  001838  6E03               	movwf	i2strncmp@_r^0,c
 16234  00183A  0EFF               	movlw	high (STR_13+1)
 16235  00183C  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16236  00183E  0E00               	movlw	0
 16237  001840  6E06               	movwf	(i2strncmp@n+1)^0,c
 16238  001842  0E02               	movlw	2
 16239  001844  6E05               	movwf	i2strncmp@n^0,c
 16240  001846  ECC0  F02A         	call	i2_strncmp	;wreg free
 16241  00184A  5001               	movf	?i2_strncmp^0,w,c
 16242  00184C  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16243  00184E  A4D8               	btfss	status,2,c
 16244  001850  EF2C  F00C         	goto	i2u1023_41
 16245  001854  EF2E  F00C         	goto	i2u1023_40
 16246  001858                     i2u1023_41:
 16247  001858  EF56  F00C         	goto	i2l8338
 16248  00185C                     i2u1023_40:
 16249  00185C                     i2l8332:
 16250                           
 16251                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
 16252  00185C  0E02               	movlw	2
 16253  00185E  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16254  001862  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16255  001866  26DE               	addwf	postinc2,f,c
 16256  001868  0E00               	movlw	0
 16257  00186A  22DD               	addwfc	postdec2,f,c
 16258                           
 16259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
 16260  00186C  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16261  001870  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16262  001874  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16263  001878  0E02               	movlw	2
 16264  00187A  26DE               	addwf	postinc2,f,c
 16265  00187C  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16266  001880  0E00               	movlw	0
 16267  001882  22DD               	addwfc	postdec2,f,c
 16268  001884  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16269  001888  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16270  00188C  CFDE F068          	movff	postinc2,i2vfpfcnvrt@ll
 16271  001890  CFDD F069          	movff	postdec2,i2vfpfcnvrt@ll+1
 16272  001894  0100               	movlb	0	; () banked
 16273  001896  0E00               	movlw	0
 16274  001898  BF69               	btfsc	(i2vfpfcnvrt@ll+1)& (0+255),7,b
 16275  00189A  0EFF               	movlw	-1
 16276  00189C  6F6A               	movwf	(i2vfpfcnvrt@ll+2)& (0+255),b
 16277  00189E  6F6B               	movwf	(i2vfpfcnvrt@ll+3)& (0+255),b
 16278  0018A0  6F6C               	movwf	(i2vfpfcnvrt@ll+4)& (0+255),b
 16279  0018A2  6F6D               	movwf	(i2vfpfcnvrt@ll+5)& (0+255),b
 16280  0018A4  6F6E               	movwf	(i2vfpfcnvrt@ll+6)& (0+255),b
 16281  0018A6  6F6F               	movwf	(i2vfpfcnvrt@ll+7)& (0+255),b
 16282  0018A8  EFDC  F00B         	goto	i2l8324
 16283  0018AC                     i2l8338:
 16284                           
 16285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 16286  0018AC  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16287  0018B0  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16288  0018B4  CFDE FFF6          	movff	postinc2,tblptrl
 16289  0018B8  CFDD FFF7          	movff	postdec2,tblptrh
 16290  0018BC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16291  0018BC  6AF8               	clrf	tblptru,c
 16292  0018BE                     	endif
 16293  0018BE                     	if	0	;tblptru may be non-zero
 16294  0018BE                     	endif
 16295  0018BE  0008               	tblrd		*
 16296  0018C0  50F5               	movf	tablat,w,c
 16297  0018C2  0A64               	xorlw	100
 16298  0018C4  B4D8               	btfsc	status,2,c
 16299  0018C6  EF67  F00C         	goto	i2u1024_41
 16300  0018CA  EF69  F00C         	goto	i2u1024_40
 16301  0018CE                     i2u1024_41:
 16302  0018CE  EF7C  F00C         	goto	i2l8342
 16303  0018D2                     i2u1024_40:
 16304  0018D2  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16305  0018D6  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16306  0018DA  CFDE FFF6          	movff	postinc2,tblptrl
 16307  0018DE  CFDD FFF7          	movff	postdec2,tblptrh
 16308  0018E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16309  0018E2  6AF8               	clrf	tblptru,c
 16310  0018E4                     	endif
 16311  0018E4                     	if	0	;tblptru may be non-zero
 16312  0018E4                     	endif
 16313  0018E4  0008               	tblrd		*
 16314  0018E6  50F5               	movf	tablat,w,c
 16315  0018E8  0A69               	xorlw	105
 16316  0018EA  A4D8               	btfss	status,2,c
 16317  0018EC  EF7A  F00C         	goto	i2u1025_41
 16318  0018F0  EF7C  F00C         	goto	i2u1025_40
 16319  0018F4                     i2u1025_41:
 16320  0018F4  EFA3  F00C         	goto	i2l8348
 16321  0018F8                     i2u1025_40:
 16322  0018F8                     i2l8342:
 16323                           
 16324                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 16325  0018F8  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16326  0018FC  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16327  001900  2ADE               	incf	postinc2,f,c
 16328  001902  0E00               	movlw	0
 16329  001904  22DD               	addwfc	postdec2,f,c
 16330                           
 16331                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 16332  001906  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16333  00190A  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16334  00190E  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16335  001912  0E02               	movlw	2
 16336  001914  26DE               	addwf	postinc2,f,c
 16337  001916  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16338  00191A  0E00               	movlw	0
 16339  00191C  22DD               	addwfc	postdec2,f,c
 16340  00191E  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16341  001922  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16342  001926  CFDE F068          	movff	postinc2,i2vfpfcnvrt@ll
 16343  00192A  CFDD F069          	movff	postdec2,i2vfpfcnvrt@ll+1
 16344  00192E  0100               	movlb	0	; () banked
 16345  001930  0E00               	movlw	0
 16346  001932  BF69               	btfsc	(i2vfpfcnvrt@ll+1)& (0+255),7,b
 16347  001934  0EFF               	movlw	-1
 16348  001936  6F6A               	movwf	(i2vfpfcnvrt@ll+2)& (0+255),b
 16349  001938  6F6B               	movwf	(i2vfpfcnvrt@ll+3)& (0+255),b
 16350  00193A  6F6C               	movwf	(i2vfpfcnvrt@ll+4)& (0+255),b
 16351  00193C  6F6D               	movwf	(i2vfpfcnvrt@ll+5)& (0+255),b
 16352  00193E  6F6E               	movwf	(i2vfpfcnvrt@ll+6)& (0+255),b
 16353  001940  6F6F               	movwf	(i2vfpfcnvrt@ll+7)& (0+255),b
 16354  001942  EFDC  F00B         	goto	i2l8324
 16355  001946                     i2l8348:
 16356                           
 16357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
 16358  001946  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16359  00194A  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16360  00194E  CFDE F001          	movff	postinc2,i2strncmp@_l
 16361  001952  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16362  001956  0EEC               	movlw	low STR_27
 16363  001958  6E03               	movwf	i2strncmp@_r^0,c
 16364  00195A  0EFF               	movlw	high STR_27
 16365  00195C  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16366  00195E  0E00               	movlw	0
 16367  001960  6E06               	movwf	(i2strncmp@n+1)^0,c
 16368  001962  0E02               	movlw	2
 16369  001964  6E05               	movwf	i2strncmp@n^0,c
 16370  001966  ECC0  F02A         	call	i2_strncmp	;wreg free
 16371  00196A  5001               	movf	?i2_strncmp^0,w,c
 16372  00196C  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16373  00196E  B4D8               	btfsc	status,2,c
 16374  001970  EFBC  F00C         	goto	i2u1026_41
 16375  001974  EFBE  F00C         	goto	i2u1026_40
 16376  001978                     i2u1026_41:
 16377  001978  EFD9  F00C         	goto	i2l8352
 16378  00197C                     i2u1026_40:
 16379  00197C  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16380  001980  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16381  001984  CFDE F001          	movff	postinc2,i2strncmp@_l
 16382  001988  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16383  00198C  0EEF               	movlw	low STR_31
 16384  00198E  6E03               	movwf	i2strncmp@_r^0,c
 16385  001990  0EFF               	movlw	high STR_31
 16386  001992  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16387  001994  0E00               	movlw	0
 16388  001996  6E06               	movwf	(i2strncmp@n+1)^0,c
 16389  001998  0E02               	movlw	2
 16390  00199A  6E05               	movwf	i2strncmp@n^0,c
 16391  00199C  ECC0  F02A         	call	i2_strncmp	;wreg free
 16392  0019A0  5001               	movf	?i2_strncmp^0,w,c
 16393  0019A2  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16394  0019A4  A4D8               	btfss	status,2,c
 16395  0019A6  EFD7  F00C         	goto	i2u1027_41
 16396  0019AA  EFD9  F00C         	goto	i2u1027_40
 16397  0019AE                     i2u1027_41:
 16398  0019AE  EF02  F00D         	goto	i2l8358
 16399  0019B2                     i2u1027_40:
 16400  0019B2                     i2l8352:
 16401                           
 16402                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
 16403  0019B2  0E02               	movlw	2
 16404  0019B4  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16405  0019B8  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16406  0019BC  26DE               	addwf	postinc2,f,c
 16407  0019BE  0E00               	movlw	0
 16408  0019C0  22DD               	addwfc	postdec2,f,c
 16409                           
 16410                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 16411  0019C2  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16412  0019C6  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16413  0019CA  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16414  0019CE  0E02               	movlw	2
 16415  0019D0  26DE               	addwf	postinc2,f,c
 16416  0019D2  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16417  0019D6  0E00               	movlw	0
 16418  0019D8  22DD               	addwfc	postdec2,f,c
 16419  0019DA  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16420  0019DE  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16421  0019E2  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 16422  0019E6  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 16423  0019EA  C04D  F068         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@ll
 16424  0019EE  C04E  F069         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@ll+1
 16425  0019F2  0100               	movlb	0	; () banked
 16426  0019F4  6B6A               	clrf	(i2vfpfcnvrt@ll+2)& (0+255),b
 16427  0019F6  6B6B               	clrf	(i2vfpfcnvrt@ll+3)& (0+255),b
 16428  0019F8  6B6C               	clrf	(i2vfpfcnvrt@ll+4)& (0+255),b
 16429  0019FA  6B6D               	clrf	(i2vfpfcnvrt@ll+5)& (0+255),b
 16430  0019FC  6B6E               	clrf	(i2vfpfcnvrt@ll+6)& (0+255),b
 16431  0019FE  6B6F               	clrf	(i2vfpfcnvrt@ll+7)& (0+255),b
 16432  001A00  EFDC  F00B         	goto	i2l8324
 16433  001A04                     i2l8358:
 16434                           
 16435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
 16436  001A04  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16437  001A08  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16438  001A0C  CFDE F001          	movff	postinc2,i2strncmp@_l
 16439  001A10  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16440  001A14  0EDD               	movlw	low STR_36
 16441  001A16  6E03               	movwf	i2strncmp@_r^0,c
 16442  001A18  0EFF               	movlw	high STR_36
 16443  001A1A  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16444  001A1C  0E00               	movlw	0
 16445  001A1E  6E06               	movwf	(i2strncmp@n+1)^0,c
 16446  001A20  0E03               	movlw	3
 16447  001A22  6E05               	movwf	i2strncmp@n^0,c
 16448  001A24  ECC0  F02A         	call	i2_strncmp	;wreg free
 16449  001A28  5001               	movf	?i2_strncmp^0,w,c
 16450  001A2A  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16451  001A2C  A4D8               	btfss	status,2,c
 16452  001A2E  EF1B  F00D         	goto	i2u1028_41
 16453  001A32  EF1D  F00D         	goto	i2u1028_40
 16454  001A36                     i2u1028_41:
 16455  001A36  EF5D  F00D         	goto	i2l8366
 16456  001A3A                     i2u1028_40:
 16457  001A3A                     
 16458                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
 16459  001A3A  0E03               	movlw	3
 16460  001A3C  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16461  001A40  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16462  001A44  26DE               	addwf	postinc2,f,c
 16463  001A46  0E00               	movlw	0
 16464  001A48  22DD               	addwfc	postdec2,f,c
 16465                           
 16466                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 16467  001A4A  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16468  001A4E  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16469  001A52  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16470  001A56  0E02               	movlw	2
 16471  001A58  26DE               	addwf	postinc2,f,c
 16472  001A5A  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16473  001A5E  0E00               	movlw	0
 16474  001A60  22DD               	addwfc	postdec2,f,c
 16475  001A62  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16476  001A66  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16477  001A6A  50DF               	movf	indf2,w,c
 16478  001A6C  6E4D               	movwf	(??i2_vfpfcnvrt+2)^0,c
 16479  001A6E  504D               	movf	(??i2_vfpfcnvrt+2)^0,w,c
 16480  001A70  0100               	movlb	0	; () banked
 16481  001A72  6F73               	movwf	i2vfpfcnvrt@llu& (0+255),b
 16482  001A74  6B74               	clrf	(i2vfpfcnvrt@llu+1)& (0+255),b
 16483  001A76  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 16484  001A78  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 16485  001A7A  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 16486  001A7C  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 16487  001A7E  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 16488  001A80  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 16489  001A82                     i2l8362:
 16490                           
 16491                           ; BSR set to: 0
 16492                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
 16493  001A82  C045  F01E         	movff	i2vfpfcnvrt@fp,i2otoa@fp
 16494  001A86  C046  F01F         	movff	i2vfpfcnvrt@fp+1,i2otoa@fp+1
 16495  001A8A  C073  F020         	movff	i2vfpfcnvrt@llu,i2otoa@d
 16496  001A8E  C074  F021         	movff	i2vfpfcnvrt@llu+1,i2otoa@d+1
 16497  001A92  C075  F022         	movff	i2vfpfcnvrt@llu+2,i2otoa@d+2
 16498  001A96  C076  F023         	movff	i2vfpfcnvrt@llu+3,i2otoa@d+3
 16499  001A9A  C077  F024         	movff	i2vfpfcnvrt@llu+4,i2otoa@d+4
 16500  001A9E  C078  F025         	movff	i2vfpfcnvrt@llu+5,i2otoa@d+5
 16501  001AA2  C079  F026         	movff	i2vfpfcnvrt@llu+6,i2otoa@d+6
 16502  001AA6  C07A  F027         	movff	i2vfpfcnvrt@llu+7,i2otoa@d+7
 16503  001AAA  EC7E  F021         	call	i2_otoa	;wreg free
 16504  001AAE  C01E  F045         	movff	?i2_otoa,?i2_vfpfcnvrt
 16505  001AB2  C01F  F046         	movff	?i2_otoa+1,?i2_vfpfcnvrt+1
 16506  001AB6  EFEB  F012         	goto	i2l878
 16507  001ABA                     i2l8366:
 16508                           
 16509                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
 16510  001ABA  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16511  001ABE  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16512  001AC2  CFDE F001          	movff	postinc2,i2strncmp@_l
 16513  001AC6  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16514  001ACA  0EDE               	movlw	low (STR_36+1)
 16515  001ACC  6E03               	movwf	i2strncmp@_r^0,c
 16516  001ACE  0EFF               	movlw	high (STR_36+1)
 16517  001AD0  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16518  001AD2  0E00               	movlw	0
 16519  001AD4  6E06               	movwf	(i2strncmp@n+1)^0,c
 16520  001AD6  0E02               	movlw	2
 16521  001AD8  6E05               	movwf	i2strncmp@n^0,c
 16522  001ADA  ECC0  F02A         	call	i2_strncmp	;wreg free
 16523  001ADE  5001               	movf	?i2_strncmp^0,w,c
 16524  001AE0  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16525  001AE2  A4D8               	btfss	status,2,c
 16526  001AE4  EF76  F00D         	goto	i2u1029_41
 16527  001AE8  EF78  F00D         	goto	i2u1029_40
 16528  001AEC                     i2u1029_41:
 16529  001AEC  EFA1  F00D         	goto	i2l8374
 16530  001AF0                     i2u1029_40:
 16531  001AF0                     
 16532                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
 16533  001AF0  0E02               	movlw	2
 16534  001AF2  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16535  001AF6  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16536  001AFA  26DE               	addwf	postinc2,f,c
 16537  001AFC  0E00               	movlw	0
 16538  001AFE  22DD               	addwfc	postdec2,f,c
 16539                           
 16540                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 16541  001B00  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16542  001B04  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16543  001B08  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16544  001B0C  0E02               	movlw	2
 16545  001B0E  26DE               	addwf	postinc2,f,c
 16546  001B10  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16547  001B14  0E00               	movlw	0
 16548  001B16  22DD               	addwfc	postdec2,f,c
 16549  001B18  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16550  001B1C  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16551  001B20  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 16552  001B24  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 16553  001B28  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 16554  001B2C  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 16555  001B30  0100               	movlb	0	; () banked
 16556  001B32  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 16557  001B34  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 16558  001B36  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 16559  001B38  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 16560  001B3A  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 16561  001B3C  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 16562  001B3E  EF41  F00D         	goto	i2l8362
 16563  001B42                     i2l8374:
 16564                           
 16565                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
 16566  001B42  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16567  001B46  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16568  001B4A  CFDE FFF6          	movff	postinc2,tblptrl
 16569  001B4E  CFDD FFF7          	movff	postdec2,tblptrh
 16570  001B52                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16571  001B52  6AF8               	clrf	tblptru,c
 16572  001B54                     	endif
 16573  001B54                     	if	0	;tblptru may be non-zero
 16574  001B54                     	endif
 16575  001B54  0008               	tblrd		*
 16576  001B56  50F5               	movf	tablat,w,c
 16577  001B58  0A6F               	xorlw	111
 16578  001B5A  A4D8               	btfss	status,2,c
 16579  001B5C  EFB2  F00D         	goto	i2u1030_41
 16580  001B60  EFB4  F00D         	goto	i2u1030_40
 16581  001B64                     i2u1030_41:
 16582  001B64  EFDC  F00D         	goto	i2l8382
 16583  001B68                     i2u1030_40:
 16584  001B68                     
 16585                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
 16586  001B68  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16587  001B6C  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16588  001B70  2ADE               	incf	postinc2,f,c
 16589  001B72  0E00               	movlw	0
 16590  001B74  22DD               	addwfc	postdec2,f,c
 16591                           
 16592                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
 16593  001B76  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16594  001B7A  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16595  001B7E  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16596  001B82  0E02               	movlw	2
 16597  001B84  26DE               	addwf	postinc2,f,c
 16598  001B86  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16599  001B8A  0E00               	movlw	0
 16600  001B8C  22DD               	addwfc	postdec2,f,c
 16601  001B8E  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16602  001B92  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16603  001B96  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 16604  001B9A  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 16605  001B9E  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 16606  001BA2  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 16607  001BA6  0100               	movlb	0	; () banked
 16608  001BA8  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 16609  001BAA  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 16610  001BAC  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 16611  001BAE  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 16612  001BB0  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 16613  001BB2  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 16614  001BB4  EF41  F00D         	goto	i2l8362
 16615  001BB8                     i2l8382:
 16616                           
 16617                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
 16618  001BB8  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16619  001BBC  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16620  001BC0  CFDE F001          	movff	postinc2,i2strncmp@_l
 16621  001BC4  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16622  001BC8  0EF5               	movlw	low STR_46
 16623  001BCA  6E03               	movwf	i2strncmp@_r^0,c
 16624  001BCC  0EFF               	movlw	high STR_46
 16625  001BCE  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16626  001BD0  0E00               	movlw	0
 16627  001BD2  6E06               	movwf	(i2strncmp@n+1)^0,c
 16628  001BD4  0E02               	movlw	2
 16629  001BD6  6E05               	movwf	i2strncmp@n^0,c
 16630  001BD8  ECC0  F02A         	call	i2_strncmp	;wreg free
 16631  001BDC  5001               	movf	?i2_strncmp^0,w,c
 16632  001BDE  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16633  001BE0  A4D8               	btfss	status,2,c
 16634  001BE2  EFF5  F00D         	goto	i2u1031_41
 16635  001BE6  EFF7  F00D         	goto	i2u1031_40
 16636  001BEA                     i2u1031_41:
 16637  001BEA  EF20  F00E         	goto	i2l8390
 16638  001BEE                     i2u1031_40:
 16639  001BEE                     
 16640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
 16641  001BEE  0E02               	movlw	2
 16642  001BF0  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16643  001BF4  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16644  001BF8  26DE               	addwf	postinc2,f,c
 16645  001BFA  0E00               	movlw	0
 16646  001BFC  22DD               	addwfc	postdec2,f,c
 16647                           
 16648                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 16649  001BFE  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16650  001C02  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16651  001C06  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16652  001C0A  0E02               	movlw	2
 16653  001C0C  26DE               	addwf	postinc2,f,c
 16654  001C0E  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16655  001C12  0E00               	movlw	0
 16656  001C14  22DD               	addwfc	postdec2,f,c
 16657  001C16  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16658  001C1A  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16659  001C1E  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 16660  001C22  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 16661  001C26  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 16662  001C2A  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 16663  001C2E  0100               	movlb	0	; () banked
 16664  001C30  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 16665  001C32  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 16666  001C34  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 16667  001C36  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 16668  001C38  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 16669  001C3A  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 16670  001C3C  EF41  F00D         	goto	i2l8362
 16671  001C40                     i2l8390:
 16672                           
 16673                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
 16674  001C40  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16675  001C44  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16676  001C48  CFDE F001          	movff	postinc2,i2strncmp@_l
 16677  001C4C  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16678  001C50  0ED9               	movlw	low STR_51
 16679  001C52  6E03               	movwf	i2strncmp@_r^0,c
 16680  001C54  0EFF               	movlw	high STR_51
 16681  001C56  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16682  001C58  0E00               	movlw	0
 16683  001C5A  6E06               	movwf	(i2strncmp@n+1)^0,c
 16684  001C5C  0E03               	movlw	3
 16685  001C5E  6E05               	movwf	i2strncmp@n^0,c
 16686  001C60  ECC0  F02A         	call	i2_strncmp	;wreg free
 16687  001C64  5001               	movf	?i2_strncmp^0,w,c
 16688  001C66  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16689  001C68  A4D8               	btfss	status,2,c
 16690  001C6A  EF39  F00E         	goto	i2u1032_41
 16691  001C6E  EF3B  F00E         	goto	i2u1032_40
 16692  001C72                     i2u1032_41:
 16693  001C72  EF63  F00E         	goto	i2l8400
 16694  001C76                     i2u1032_40:
 16695  001C76                     
 16696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
 16697  001C76  0E03               	movlw	3
 16698  001C78  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16699  001C7C  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16700  001C80  26DE               	addwf	postinc2,f,c
 16701  001C82  0E00               	movlw	0
 16702  001C84  22DD               	addwfc	postdec2,f,c
 16703                           
 16704                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
 16705  001C86  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16706  001C8A  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16707  001C8E  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16708  001C92  0E02               	movlw	2
 16709  001C94  26DE               	addwf	postinc2,f,c
 16710  001C96  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16711  001C9A  0E00               	movlw	0
 16712  001C9C  22DD               	addwfc	postdec2,f,c
 16713  001C9E  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16714  001CA2  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16715  001CA6  CFDE F070          	movff	postinc2,i2vfpfcnvrt@vp
 16716  001CAA  CFDD F071          	movff	postdec2,i2vfpfcnvrt@vp+1
 16717  001CAE                     
 16718                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
 16719  001CAE  C070  FFD9         	movff	i2vfpfcnvrt@vp,fsr2l
 16720  001CB2  C071  FFDA         	movff	i2vfpfcnvrt@vp+1,fsr2h
 16721  001CB6  C17F  FFDF         	movff	_nout,indf2
 16722  001CBA                     i2l8396:
 16723                           
 16724                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
 16725  001CBA  0E00               	movlw	0
 16726  001CBC  6E46               	movwf	(?i2_vfpfcnvrt+1)^0,c
 16727  001CBE  0E00               	movlw	0
 16728  001CC0  6E45               	movwf	?i2_vfpfcnvrt^0,c
 16729  001CC2  EFEB  F012         	goto	i2l878
 16730  001CC6                     i2l8400:
 16731                           
 16732                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
 16733  001CC6  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16734  001CCA  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16735  001CCE  CFDE F001          	movff	postinc2,i2strncmp@_l
 16736  001CD2  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16737  001CD6  0EDA               	movlw	low (STR_51+1)
 16738  001CD8  6E03               	movwf	i2strncmp@_r^0,c
 16739  001CDA  0EFF               	movlw	high (STR_51+1)
 16740  001CDC  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16741  001CDE  0E00               	movlw	0
 16742  001CE0  6E06               	movwf	(i2strncmp@n+1)^0,c
 16743  001CE2  0E02               	movlw	2
 16744  001CE4  6E05               	movwf	i2strncmp@n^0,c
 16745  001CE6  ECC0  F02A         	call	i2_strncmp	;wreg free
 16746  001CEA  5001               	movf	?i2_strncmp^0,w,c
 16747  001CEC  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16748  001CEE  A4D8               	btfss	status,2,c
 16749  001CF0  EF7C  F00E         	goto	i2u1033_41
 16750  001CF4  EF7E  F00E         	goto	i2u1033_40
 16751  001CF8                     i2u1033_41:
 16752  001CF8  EFA4  F00E         	goto	i2l8410
 16753  001CFC                     i2u1033_40:
 16754  001CFC                     
 16755                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
 16756  001CFC  0E02               	movlw	2
 16757  001CFE  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16758  001D02  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16759  001D06  26DE               	addwf	postinc2,f,c
 16760  001D08  0E00               	movlw	0
 16761  001D0A  22DD               	addwfc	postdec2,f,c
 16762                           
 16763                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
 16764  001D0C  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16765  001D10  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16766  001D14  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16767  001D18  0E02               	movlw	2
 16768  001D1A  26DE               	addwf	postinc2,f,c
 16769  001D1C  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16770  001D20  0E00               	movlw	0
 16771  001D22  22DD               	addwfc	postdec2,f,c
 16772  001D24  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16773  001D28  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16774  001D2C  CFDE F070          	movff	postinc2,i2vfpfcnvrt@vp
 16775  001D30  CFDD F071          	movff	postdec2,i2vfpfcnvrt@vp+1
 16776  001D34                     
 16777                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
 16778  001D34  C070  FFD9         	movff	i2vfpfcnvrt@vp,fsr2l
 16779  001D38  C071  FFDA         	movff	i2vfpfcnvrt@vp+1,fsr2h
 16780  001D3C  C17F  FFDE         	movff	_nout,postinc2
 16781  001D40  C180  FFDD         	movff	_nout+1,postdec2
 16782  001D44  EF5D  F00E         	goto	i2l8396
 16783  001D48                     i2l8410:
 16784                           
 16785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
 16786  001D48  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16787  001D4C  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16788  001D50  CFDE FFF6          	movff	postinc2,tblptrl
 16789  001D54  CFDD FFF7          	movff	postdec2,tblptrh
 16790  001D58                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16791  001D58  6AF8               	clrf	tblptru,c
 16792  001D5A                     	endif
 16793  001D5A                     	if	0	;tblptru may be non-zero
 16794  001D5A                     	endif
 16795  001D5A  0008               	tblrd		*
 16796  001D5C  50F5               	movf	tablat,w,c
 16797  001D5E  0A6E               	xorlw	110
 16798  001D60  A4D8               	btfss	status,2,c
 16799  001D62  EFB5  F00E         	goto	i2u1034_41
 16800  001D66  EFB7  F00E         	goto	i2u1034_40
 16801  001D6A                     i2u1034_41:
 16802  001D6A  EFDC  F00E         	goto	i2l8420
 16803  001D6E                     i2u1034_40:
 16804  001D6E                     
 16805                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
 16806  001D6E  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16807  001D72  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16808  001D76  2ADE               	incf	postinc2,f,c
 16809  001D78  0E00               	movlw	0
 16810  001D7A  22DD               	addwfc	postdec2,f,c
 16811                           
 16812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 16813  001D7C  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16814  001D80  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16815  001D84  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16816  001D88  0E02               	movlw	2
 16817  001D8A  26DE               	addwf	postinc2,f,c
 16818  001D8C  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16819  001D90  0E00               	movlw	0
 16820  001D92  22DD               	addwfc	postdec2,f,c
 16821  001D94  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16822  001D98  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16823  001D9C  CFDE F070          	movff	postinc2,i2vfpfcnvrt@vp
 16824  001DA0  CFDD F071          	movff	postdec2,i2vfpfcnvrt@vp+1
 16825  001DA4                     
 16826                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
 16827  001DA4  C070  FFD9         	movff	i2vfpfcnvrt@vp,fsr2l
 16828  001DA8  C071  FFDA         	movff	i2vfpfcnvrt@vp+1,fsr2h
 16829  001DAC  C17F  FFDE         	movff	_nout,postinc2
 16830  001DB0  C180  FFDD         	movff	_nout+1,postdec2
 16831  001DB4  EF5D  F00E         	goto	i2l8396
 16832  001DB8                     i2l8420:
 16833                           
 16834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
 16835  001DB8  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16836  001DBC  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16837  001DC0  CFDE F001          	movff	postinc2,i2strncmp@_l
 16838  001DC4  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16839  001DC8  0EF2               	movlw	low STR_61
 16840  001DCA  6E03               	movwf	i2strncmp@_r^0,c
 16841  001DCC  0EFF               	movlw	high STR_61
 16842  001DCE  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16843  001DD0  0E00               	movlw	0
 16844  001DD2  6E06               	movwf	(i2strncmp@n+1)^0,c
 16845  001DD4  0E02               	movlw	2
 16846  001DD6  6E05               	movwf	i2strncmp@n^0,c
 16847  001DD8  ECC0  F02A         	call	i2_strncmp	;wreg free
 16848  001DDC  5001               	movf	?i2_strncmp^0,w,c
 16849  001DDE  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16850  001DE0  A4D8               	btfss	status,2,c
 16851  001DE2  EFF5  F00E         	goto	i2u1035_41
 16852  001DE6  EFF7  F00E         	goto	i2u1035_40
 16853  001DEA                     i2u1035_41:
 16854  001DEA  EF1D  F00F         	goto	i2l8430
 16855  001DEE                     i2u1035_40:
 16856  001DEE                     
 16857                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
 16858  001DEE  0E02               	movlw	2
 16859  001DF0  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16860  001DF4  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16861  001DF8  26DE               	addwf	postinc2,f,c
 16862  001DFA  0E00               	movlw	0
 16863  001DFC  22DD               	addwfc	postdec2,f,c
 16864                           
 16865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
 16866  001DFE  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16867  001E02  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16868  001E06  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16869  001E0A  0E02               	movlw	2
 16870  001E0C  26DE               	addwf	postinc2,f,c
 16871  001E0E  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16872  001E12  0E00               	movlw	0
 16873  001E14  22DD               	addwfc	postdec2,f,c
 16874  001E16  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16875  001E1A  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16876  001E1E  CFDE F070          	movff	postinc2,i2vfpfcnvrt@vp
 16877  001E22  CFDD F071          	movff	postdec2,i2vfpfcnvrt@vp+1
 16878  001E26                     
 16879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
 16880  001E26  C070  FFD9         	movff	i2vfpfcnvrt@vp,fsr2l
 16881  001E2A  C071  FFDA         	movff	i2vfpfcnvrt@vp+1,fsr2h
 16882  001E2E  C17F  FFDE         	movff	_nout,postinc2
 16883  001E32  C180  FFDD         	movff	_nout+1,postdec2
 16884  001E36  EF5D  F00E         	goto	i2l8396
 16885  001E3A                     i2l8430:
 16886                           
 16887                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
 16888  001E3A  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16889  001E3E  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16890  001E42  CFDE FFF6          	movff	postinc2,tblptrl
 16891  001E46  CFDD FFF7          	movff	postdec2,tblptrh
 16892  001E4A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16893  001E4A  6AF8               	clrf	tblptru,c
 16894  001E4C                     	endif
 16895  001E4C                     	if	0	;tblptru may be non-zero
 16896  001E4C                     	endif
 16897  001E4C  0008               	tblrd		*
 16898  001E4E  50F5               	movf	tablat,w,c
 16899  001E50  0A70               	xorlw	112
 16900  001E52  A4D8               	btfss	status,2,c
 16901  001E54  EF2E  F00F         	goto	i2u1036_41
 16902  001E58  EF30  F00F         	goto	i2u1036_40
 16903  001E5C                     i2u1036_41:
 16904  001E5C  EF74  F00F         	goto	i2l8438
 16905  001E60                     i2u1036_40:
 16906  001E60                     
 16907                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
 16908  001E60  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16909  001E64  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16910  001E68  2ADE               	incf	postinc2,f,c
 16911  001E6A  0E00               	movlw	0
 16912  001E6C  22DD               	addwfc	postdec2,f,c
 16913                           
 16914                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
 16915  001E6E  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16916  001E72  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16917  001E76  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16918  001E7A  0E02               	movlw	2
 16919  001E7C  26DE               	addwf	postinc2,f,c
 16920  001E7E  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16921  001E82  0E00               	movlw	0
 16922  001E84  22DD               	addwfc	postdec2,f,c
 16923  001E86  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16924  001E8A  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16925  001E8E  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 16926  001E92  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 16927  001E96  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 16928  001E9A  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 16929  001E9E  0100               	movlb	0	; () banked
 16930  001EA0  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 16931  001EA2  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 16932  001EA4  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 16933  001EA6  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 16934  001EA8  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 16935  001EAA  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 16936  001EAC                     
 16937                           ; BSR set to: 0
 16938                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
 16939  001EAC  C045  F01E         	movff	i2vfpfcnvrt@fp,i2xtoa@fp
 16940  001EB0  C046  F01F         	movff	i2vfpfcnvrt@fp+1,i2xtoa@fp+1
 16941  001EB4  C073  F020         	movff	i2vfpfcnvrt@llu,i2xtoa@d
 16942  001EB8  C074  F021         	movff	i2vfpfcnvrt@llu+1,i2xtoa@d+1
 16943  001EBC  C075  F022         	movff	i2vfpfcnvrt@llu+2,i2xtoa@d+2
 16944  001EC0  C076  F023         	movff	i2vfpfcnvrt@llu+3,i2xtoa@d+3
 16945  001EC4  C077  F024         	movff	i2vfpfcnvrt@llu+4,i2xtoa@d+4
 16946  001EC8  C078  F025         	movff	i2vfpfcnvrt@llu+5,i2xtoa@d+5
 16947  001ECC  C079  F026         	movff	i2vfpfcnvrt@llu+6,i2xtoa@d+6
 16948  001ED0  C07A  F027         	movff	i2vfpfcnvrt@llu+7,i2xtoa@d+7
 16949  001ED4  0E78               	movlw	120
 16950  001ED6  6E28               	movwf	i2xtoa@x^0,c
 16951  001ED8  ECFB  F01A         	call	i2_xtoa	;wreg free
 16952  001EDC  C01E  F045         	movff	?i2_xtoa,?i2_vfpfcnvrt
 16953  001EE0  C01F  F046         	movff	?i2_xtoa+1,?i2_vfpfcnvrt+1
 16954  001EE4  EFEB  F012         	goto	i2l878
 16955  001EE8                     i2l8438:
 16956                           
 16957                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 16958  001EE8  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16959  001EEC  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16960  001EF0  CFDE FFF6          	movff	postinc2,tblptrl
 16961  001EF4  CFDD FFF7          	movff	postdec2,tblptrh
 16962  001EF8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16963  001EF8  6AF8               	clrf	tblptru,c
 16964  001EFA                     	endif
 16965  001EFA                     	if	0	;tblptru may be non-zero
 16966  001EFA                     	endif
 16967  001EFA  0008               	tblrd		*
 16968  001EFC  50F5               	movf	tablat,w,c
 16969  001EFE  0A73               	xorlw	115
 16970  001F00  A4D8               	btfss	status,2,c
 16971  001F02  EF85  F00F         	goto	i2u1037_41
 16972  001F06  EF87  F00F         	goto	i2u1037_40
 16973  001F0A                     i2u1037_41:
 16974  001F0A  EFB2  F00F         	goto	i2l8446
 16975  001F0E                     i2u1037_40:
 16976  001F0E                     
 16977                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 16978  001F0E  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16979  001F12  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16980  001F16  2ADE               	incf	postinc2,f,c
 16981  001F18  0E00               	movlw	0
 16982  001F1A  22DD               	addwfc	postdec2,f,c
 16983                           
 16984                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 16985  001F1C  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16986  001F20  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16987  001F24  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16988  001F28  0E02               	movlw	2
 16989  001F2A  26DE               	addwf	postinc2,f,c
 16990  001F2C  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16991  001F30  0E00               	movlw	0
 16992  001F32  22DD               	addwfc	postdec2,f,c
 16993  001F34  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16994  001F38  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16995  001F3C  CFDE F060          	movff	postinc2,i2vfpfcnvrt@cp
 16996  001F40  CFDD F061          	movff	postdec2,i2vfpfcnvrt@cp+1
 16997  001F44                     
 16998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 16999  001F44  C045  F00C         	movff	i2vfpfcnvrt@fp,i2stoa@fp
 17000  001F48  C046  F00D         	movff	i2vfpfcnvrt@fp+1,i2stoa@fp+1
 17001  001F4C  C060  F00E         	movff	i2vfpfcnvrt@cp,i2stoa@s
 17002  001F50  C061  F00F         	movff	i2vfpfcnvrt@cp+1,i2stoa@s+1
 17003  001F54  ECC5  F024         	call	i2_stoa	;wreg free
 17004  001F58  C00C  F045         	movff	?i2_stoa,?i2_vfpfcnvrt
 17005  001F5C  C00D  F046         	movff	?i2_stoa+1,?i2_vfpfcnvrt+1
 17006  001F60  EFEB  F012         	goto	i2l878
 17007  001F64                     i2l8446:
 17008                           
 17009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
 17010  001F64  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17011  001F68  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17012  001F6C  CFDE F001          	movff	postinc2,i2strncmp@_l
 17013  001F70  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 17014  001F74  0EE1               	movlw	low STR_66
 17015  001F76  6E03               	movwf	i2strncmp@_r^0,c
 17016  001F78  0EFF               	movlw	high STR_66
 17017  001F7A  6E04               	movwf	(i2strncmp@_r+1)^0,c
 17018  001F7C  0E00               	movlw	0
 17019  001F7E  6E06               	movwf	(i2strncmp@n+1)^0,c
 17020  001F80  0E03               	movlw	3
 17021  001F82  6E05               	movwf	i2strncmp@n^0,c
 17022  001F84  ECC0  F02A         	call	i2_strncmp	;wreg free
 17023  001F88  5001               	movf	?i2_strncmp^0,w,c
 17024  001F8A  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 17025  001F8C  A4D8               	btfss	status,2,c
 17026  001F8E  EFCB  F00F         	goto	i2u1038_41
 17027  001F92  EFCD  F00F         	goto	i2u1038_40
 17028  001F96                     i2u1038_41:
 17029  001F96  EF0D  F010         	goto	i2l8454
 17030  001F9A                     i2u1038_40:
 17031  001F9A                     
 17032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
 17033  001F9A  0E03               	movlw	3
 17034  001F9C  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17035  001FA0  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17036  001FA4  26DE               	addwf	postinc2,f,c
 17037  001FA6  0E00               	movlw	0
 17038  001FA8  22DD               	addwfc	postdec2,f,c
 17039                           
 17040                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 17041  001FAA  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 17042  001FAE  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 17043  001FB2  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 17044  001FB6  0E02               	movlw	2
 17045  001FB8  26DE               	addwf	postinc2,f,c
 17046  001FBA  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 17047  001FBE  0E00               	movlw	0
 17048  001FC0  22DD               	addwfc	postdec2,f,c
 17049  001FC2  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 17050  001FC6  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 17051  001FCA  50DF               	movf	indf2,w,c
 17052  001FCC  6E4D               	movwf	(??i2_vfpfcnvrt+2)^0,c
 17053  001FCE  504D               	movf	(??i2_vfpfcnvrt+2)^0,w,c
 17054  001FD0  0100               	movlb	0	; () banked
 17055  001FD2  6F73               	movwf	i2vfpfcnvrt@llu& (0+255),b
 17056  001FD4  6B74               	clrf	(i2vfpfcnvrt@llu+1)& (0+255),b
 17057  001FD6  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 17058  001FD8  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 17059  001FDA  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 17060  001FDC  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 17061  001FDE  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 17062  001FE0  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 17063  001FE2                     i2l8450:
 17064                           
 17065                           ; BSR set to: 0
 17066                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
 17067  001FE2  C045  F01E         	movff	i2vfpfcnvrt@fp,i2utoa@fp
 17068  001FE6  C046  F01F         	movff	i2vfpfcnvrt@fp+1,i2utoa@fp+1
 17069  001FEA  C073  F020         	movff	i2vfpfcnvrt@llu,i2utoa@d
 17070  001FEE  C074  F021         	movff	i2vfpfcnvrt@llu+1,i2utoa@d+1
 17071  001FF2  C075  F022         	movff	i2vfpfcnvrt@llu+2,i2utoa@d+2
 17072  001FF6  C076  F023         	movff	i2vfpfcnvrt@llu+3,i2utoa@d+3
 17073  001FFA  C077  F024         	movff	i2vfpfcnvrt@llu+4,i2utoa@d+4
 17074  001FFE  C078  F025         	movff	i2vfpfcnvrt@llu+5,i2utoa@d+5
 17075  002002  C079  F026         	movff	i2vfpfcnvrt@llu+6,i2utoa@d+6
 17076  002006  C07A  F027         	movff	i2vfpfcnvrt@llu+7,i2utoa@d+7
 17077  00200A  EC7C  F01E         	call	i2_utoa	;wreg free
 17078  00200E  C01E  F045         	movff	?i2_utoa,?i2_vfpfcnvrt
 17079  002012  C01F  F046         	movff	?i2_utoa+1,?i2_vfpfcnvrt+1
 17080  002016  EFEB  F012         	goto	i2l878
 17081  00201A                     i2l8454:
 17082                           
 17083                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
 17084  00201A  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17085  00201E  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17086  002022  CFDE F001          	movff	postinc2,i2strncmp@_l
 17087  002026  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 17088  00202A  0EE2               	movlw	low (STR_66+1)
 17089  00202C  6E03               	movwf	i2strncmp@_r^0,c
 17090  00202E  0EFF               	movlw	high (STR_66+1)
 17091  002030  6E04               	movwf	(i2strncmp@_r+1)^0,c
 17092  002032  0E00               	movlw	0
 17093  002034  6E06               	movwf	(i2strncmp@n+1)^0,c
 17094  002036  0E02               	movlw	2
 17095  002038  6E05               	movwf	i2strncmp@n^0,c
 17096  00203A  ECC0  F02A         	call	i2_strncmp	;wreg free
 17097  00203E  5001               	movf	?i2_strncmp^0,w,c
 17098  002040  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 17099  002042  A4D8               	btfss	status,2,c
 17100  002044  EF26  F010         	goto	i2u1039_41
 17101  002048  EF28  F010         	goto	i2u1039_40
 17102  00204C                     i2u1039_41:
 17103  00204C  EF51  F010         	goto	i2l8462
 17104  002050                     i2u1039_40:
 17105  002050                     
 17106                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
 17107  002050  0E02               	movlw	2
 17108  002052  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17109  002056  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17110  00205A  26DE               	addwf	postinc2,f,c
 17111  00205C  0E00               	movlw	0
 17112  00205E  22DD               	addwfc	postdec2,f,c
 17113                           
 17114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 17115  002060  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 17116  002064  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 17117  002068  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 17118  00206C  0E02               	movlw	2
 17119  00206E  26DE               	addwf	postinc2,f,c
 17120  002070  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 17121  002074  0E00               	movlw	0
 17122  002076  22DD               	addwfc	postdec2,f,c
 17123  002078  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 17124  00207C  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 17125  002080  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 17126  002084  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 17127  002088  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 17128  00208C  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 17129  002090  0100               	movlb	0	; () banked
 17130  002092  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 17131  002094  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 17132  002096  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 17133  002098  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 17134  00209A  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 17135  00209C  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 17136  00209E  EFF1  F00F         	goto	i2l8450
 17137  0020A2                     i2l8462:
 17138                           
 17139                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 17140  0020A2  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17141  0020A6  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17142  0020AA  CFDE FFF6          	movff	postinc2,tblptrl
 17143  0020AE  CFDD FFF7          	movff	postdec2,tblptrh
 17144  0020B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17145  0020B2  6AF8               	clrf	tblptru,c
 17146  0020B4                     	endif
 17147  0020B4                     	if	0	;tblptru may be non-zero
 17148  0020B4                     	endif
 17149  0020B4  0008               	tblrd		*
 17150  0020B6  50F5               	movf	tablat,w,c
 17151  0020B8  0A75               	xorlw	117
 17152  0020BA  A4D8               	btfss	status,2,c
 17153  0020BC  EF62  F010         	goto	i2u1040_41
 17154  0020C0  EF64  F010         	goto	i2u1040_40
 17155  0020C4                     i2u1040_41:
 17156  0020C4  EF8C  F010         	goto	i2l8470
 17157  0020C8                     i2u1040_40:
 17158  0020C8                     
 17159                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 17160  0020C8  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17161  0020CC  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17162  0020D0  2ADE               	incf	postinc2,f,c
 17163  0020D2  0E00               	movlw	0
 17164  0020D4  22DD               	addwfc	postdec2,f,c
 17165                           
 17166                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 17167  0020D6  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 17168  0020DA  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 17169  0020DE  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 17170  0020E2  0E02               	movlw	2
 17171  0020E4  26DE               	addwf	postinc2,f,c
 17172  0020E6  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 17173  0020EA  0E00               	movlw	0
 17174  0020EC  22DD               	addwfc	postdec2,f,c
 17175  0020EE  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 17176  0020F2  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 17177  0020F6  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 17178  0020FA  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 17179  0020FE  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 17180  002102  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 17181  002106  0100               	movlb	0	; () banked
 17182  002108  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 17183  00210A  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 17184  00210C  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 17185  00210E  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 17186  002110  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 17187  002112  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 17188  002114  EFF1  F00F         	goto	i2l8450
 17189  002118                     i2l8470:
 17190                           
 17191                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
 17192  002118  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17193  00211C  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17194  002120  CFDE F001          	movff	postinc2,i2strncmp@_l
 17195  002124  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 17196  002128  0EF8               	movlw	low STR_76
 17197  00212A  6E03               	movwf	i2strncmp@_r^0,c
 17198  00212C  0EFF               	movlw	high STR_76
 17199  00212E  6E04               	movwf	(i2strncmp@_r+1)^0,c
 17200  002130  0E00               	movlw	0
 17201  002132  6E06               	movwf	(i2strncmp@n+1)^0,c
 17202  002134  0E02               	movlw	2
 17203  002136  6E05               	movwf	i2strncmp@n^0,c
 17204  002138  ECC0  F02A         	call	i2_strncmp	;wreg free
 17205  00213C  5001               	movf	?i2_strncmp^0,w,c
 17206  00213E  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 17207  002140  A4D8               	btfss	status,2,c
 17208  002142  EFA5  F010         	goto	i2u1041_41
 17209  002146  EFA7  F010         	goto	i2u1041_40
 17210  00214A                     i2u1041_41:
 17211  00214A  EFD0  F010         	goto	i2l8478
 17212  00214E                     i2u1041_40:
 17213  00214E                     
 17214                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
 17215  00214E  0E02               	movlw	2
 17216  002150  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17217  002154  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17218  002158  26DE               	addwf	postinc2,f,c
 17219  00215A  0E00               	movlw	0
 17220  00215C  22DD               	addwfc	postdec2,f,c
 17221                           
 17222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 17223  00215E  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 17224  002162  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 17225  002166  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 17226  00216A  0E02               	movlw	2
 17227  00216C  26DE               	addwf	postinc2,f,c
 17228  00216E  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 17229  002172  0E00               	movlw	0
 17230  002174  22DD               	addwfc	postdec2,f,c
 17231  002176  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 17232  00217A  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 17233  00217E  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 17234  002182  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 17235  002186  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 17236  00218A  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 17237  00218E  0100               	movlb	0	; () banked
 17238  002190  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 17239  002192  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 17240  002194  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 17241  002196  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 17242  002198  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 17243  00219A  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 17244  00219C  EFF1  F00F         	goto	i2l8450
 17245  0021A0                     i2l8478:
 17246                           
 17247                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
 17248  0021A0  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17249  0021A4  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17250  0021A8  CFDE F001          	movff	postinc2,i2strncmp@_l
 17251  0021AC  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 17252  0021B0  0EE5               	movlw	low STR_81
 17253  0021B2  6E03               	movwf	i2strncmp@_r^0,c
 17254  0021B4  0EFF               	movlw	high STR_81
 17255  0021B6  6E04               	movwf	(i2strncmp@_r+1)^0,c
 17256  0021B8  0E00               	movlw	0
 17257  0021BA  6E06               	movwf	(i2strncmp@n+1)^0,c
 17258  0021BC  0E03               	movlw	3
 17259  0021BE  6E05               	movwf	i2strncmp@n^0,c
 17260  0021C0  ECC0  F02A         	call	i2_strncmp	;wreg free
 17261  0021C4  5001               	movf	?i2_strncmp^0,w,c
 17262  0021C6  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 17263  0021C8  B4D8               	btfsc	status,2,c
 17264  0021CA  EFE9  F010         	goto	i2u1042_41
 17265  0021CE  EFEB  F010         	goto	i2u1042_40
 17266  0021D2                     i2u1042_41:
 17267  0021D2  EF06  F011         	goto	i2l8482
 17268  0021D6                     i2u1042_40:
 17269  0021D6  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17270  0021DA  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17271  0021DE  CFDE F001          	movff	postinc2,i2strncmp@_l
 17272  0021E2  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 17273  0021E6  0ECD               	movlw	low STR_85
 17274  0021E8  6E03               	movwf	i2strncmp@_r^0,c
 17275  0021EA  0EFF               	movlw	high STR_85
 17276  0021EC  6E04               	movwf	(i2strncmp@_r+1)^0,c
 17277  0021EE  0E00               	movlw	0
 17278  0021F0  6E06               	movwf	(i2strncmp@n+1)^0,c
 17279  0021F2  0E03               	movlw	3
 17280  0021F4  6E05               	movwf	i2strncmp@n^0,c
 17281  0021F6  ECC0  F02A         	call	i2_strncmp	;wreg free
 17282  0021FA  5001               	movf	?i2_strncmp^0,w,c
 17283  0021FC  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 17284  0021FE  A4D8               	btfss	status,2,c
 17285  002200  EF04  F011         	goto	i2u1043_41
 17286  002204  EF06  F011         	goto	i2u1043_40
 17287  002208                     i2u1043_41:
 17288  002208  EF5C  F011         	goto	i2l8492
 17289  00220C                     i2u1043_40:
 17290  00220C                     i2l8482:
 17291                           
 17292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
 17293  00220C  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17294  002210  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17295  002214  CFDE F04B          	movff	postinc2,??i2_vfpfcnvrt
 17296  002218  CFDD F04C          	movff	postdec2,??i2_vfpfcnvrt+1
 17297  00221C  0E02               	movlw	2
 17298  00221E  264B               	addwf	??i2_vfpfcnvrt^0,f,c
 17299  002220  0E00               	movlw	0
 17300  002222  224C               	addwfc	(??i2_vfpfcnvrt+1)^0,f,c
 17301  002224  C04B  FFF6         	movff	??i2_vfpfcnvrt,tblptrl
 17302  002228  C04C  FFF7         	movff	??i2_vfpfcnvrt+1,tblptrh
 17303  00222C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17304  00222C  6AF8               	clrf	tblptru,c
 17305  00222E                     	endif
 17306  00222E                     	if	0	;tblptru may be non-zero
 17307  00222E                     	endif
 17308  00222E  0008               	tblrd		*
 17309  002230  CFF5 F072          	movff	tablat,i2vfpfcnvrt@c
 17310  002234                     
 17311                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
 17312  002234  0E03               	movlw	3
 17313  002236  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17314  00223A  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17315  00223E  26DE               	addwf	postinc2,f,c
 17316  002240  0E00               	movlw	0
 17317  002242  22DD               	addwfc	postdec2,f,c
 17318  002244                     
 17319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 17320  002244  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 17321  002248  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 17322  00224C  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 17323  002250  0E02               	movlw	2
 17324  002252  26DE               	addwf	postinc2,f,c
 17325  002254  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 17326  002258  0E00               	movlw	0
 17327  00225A  22DD               	addwfc	postdec2,f,c
 17328  00225C  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 17329  002260  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 17330  002264  50DF               	movf	indf2,w,c
 17331  002266  6E4D               	movwf	(??i2_vfpfcnvrt+2)^0,c
 17332  002268  504D               	movf	(??i2_vfpfcnvrt+2)^0,w,c
 17333  00226A  0100               	movlb	0	; () banked
 17334  00226C  6F73               	movwf	i2vfpfcnvrt@llu& (0+255),b
 17335  00226E  6B74               	clrf	(i2vfpfcnvrt@llu+1)& (0+255),b
 17336  002270  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 17337  002272  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 17338  002274  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 17339  002276  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 17340  002278  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 17341  00227A  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 17342  00227C                     i2l8488:
 17343                           
 17344                           ; BSR set to: 0
 17345                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
 17346  00227C  C045  F01E         	movff	i2vfpfcnvrt@fp,i2xtoa@fp
 17347  002280  C046  F01F         	movff	i2vfpfcnvrt@fp+1,i2xtoa@fp+1
 17348  002284  C073  F020         	movff	i2vfpfcnvrt@llu,i2xtoa@d
 17349  002288  C074  F021         	movff	i2vfpfcnvrt@llu+1,i2xtoa@d+1
 17350  00228C  C075  F022         	movff	i2vfpfcnvrt@llu+2,i2xtoa@d+2
 17351  002290  C076  F023         	movff	i2vfpfcnvrt@llu+3,i2xtoa@d+3
 17352  002294  C077  F024         	movff	i2vfpfcnvrt@llu+4,i2xtoa@d+4
 17353  002298  C078  F025         	movff	i2vfpfcnvrt@llu+5,i2xtoa@d+5
 17354  00229C  C079  F026         	movff	i2vfpfcnvrt@llu+6,i2xtoa@d+6
 17355  0022A0  C07A  F027         	movff	i2vfpfcnvrt@llu+7,i2xtoa@d+7
 17356  0022A4  C072  F028         	movff	i2vfpfcnvrt@c,i2xtoa@x
 17357  0022A8  ECFB  F01A         	call	i2_xtoa	;wreg free
 17358  0022AC  C01E  F045         	movff	?i2_xtoa,?i2_vfpfcnvrt
 17359  0022B0  C01F  F046         	movff	?i2_xtoa+1,?i2_vfpfcnvrt+1
 17360  0022B4  EFEB  F012         	goto	i2l878
 17361  0022B8                     i2l8492:
 17362                           
 17363                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
 17364  0022B8  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17365  0022BC  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17366  0022C0  CFDE F001          	movff	postinc2,i2strncmp@_l
 17367  0022C4  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 17368  0022C8  0EE6               	movlw	low (STR_81+1)
 17369  0022CA  6E03               	movwf	i2strncmp@_r^0,c
 17370  0022CC  0EFF               	movlw	high (STR_81+1)
 17371  0022CE  6E04               	movwf	(i2strncmp@_r+1)^0,c
 17372  0022D0  0E00               	movlw	0
 17373  0022D2  6E06               	movwf	(i2strncmp@n+1)^0,c
 17374  0022D4  0E02               	movlw	2
 17375  0022D6  6E05               	movwf	i2strncmp@n^0,c
 17376  0022D8  ECC0  F02A         	call	i2_strncmp	;wreg free
 17377  0022DC  5001               	movf	?i2_strncmp^0,w,c
 17378  0022DE  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 17379  0022E0  B4D8               	btfsc	status,2,c
 17380  0022E2  EF75  F011         	goto	i2u1044_41
 17381  0022E6  EF77  F011         	goto	i2u1044_40
 17382  0022EA                     i2u1044_41:
 17383  0022EA  EF92  F011         	goto	i2l8496
 17384  0022EE                     i2u1044_40:
 17385  0022EE  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17386  0022F2  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17387  0022F6  CFDE F001          	movff	postinc2,i2strncmp@_l
 17388  0022FA  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 17389  0022FE  0ECE               	movlw	low (STR_85+1)
 17390  002300  6E03               	movwf	i2strncmp@_r^0,c
 17391  002302  0EFF               	movlw	high (STR_85+1)
 17392  002304  6E04               	movwf	(i2strncmp@_r+1)^0,c
 17393  002306  0E00               	movlw	0
 17394  002308  6E06               	movwf	(i2strncmp@n+1)^0,c
 17395  00230A  0E02               	movlw	2
 17396  00230C  6E05               	movwf	i2strncmp@n^0,c
 17397  00230E  ECC0  F02A         	call	i2_strncmp	;wreg free
 17398  002312  5001               	movf	?i2_strncmp^0,w,c
 17399  002314  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 17400  002316  A4D8               	btfss	status,2,c
 17401  002318  EF90  F011         	goto	i2u1045_41
 17402  00231C  EF92  F011         	goto	i2u1045_40
 17403  002320                     i2u1045_41:
 17404  002320  EFCF  F011         	goto	i2l8506
 17405  002324                     i2u1045_40:
 17406  002324                     i2l8496:
 17407                           
 17408                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
 17409  002324  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17410  002328  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17411  00232C  CFDE F04B          	movff	postinc2,??i2_vfpfcnvrt
 17412  002330  CFDD F04C          	movff	postdec2,??i2_vfpfcnvrt+1
 17413  002334  0E01               	movlw	1
 17414  002336  264B               	addwf	??i2_vfpfcnvrt^0,f,c
 17415  002338  0E00               	movlw	0
 17416  00233A  224C               	addwfc	(??i2_vfpfcnvrt+1)^0,f,c
 17417  00233C  C04B  FFF6         	movff	??i2_vfpfcnvrt,tblptrl
 17418  002340  C04C  FFF7         	movff	??i2_vfpfcnvrt+1,tblptrh
 17419  002344                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17420  002344  6AF8               	clrf	tblptru,c
 17421  002346                     	endif
 17422  002346                     	if	0	;tblptru may be non-zero
 17423  002346                     	endif
 17424  002346  0008               	tblrd		*
 17425  002348  CFF5 F072          	movff	tablat,i2vfpfcnvrt@c
 17426  00234C                     
 17427                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
 17428  00234C  0E02               	movlw	2
 17429  00234E  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17430  002352  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17431  002356  26DE               	addwf	postinc2,f,c
 17432  002358  0E00               	movlw	0
 17433  00235A  22DD               	addwfc	postdec2,f,c
 17434  00235C                     
 17435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 17436  00235C  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 17437  002360  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 17438  002364  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 17439  002368  0E02               	movlw	2
 17440  00236A  26DE               	addwf	postinc2,f,c
 17441  00236C  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 17442  002370  0E00               	movlw	0
 17443  002372  22DD               	addwfc	postdec2,f,c
 17444  002374  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 17445  002378  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 17446  00237C  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 17447  002380  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 17448  002384  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 17449  002388  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 17450  00238C  0100               	movlb	0	; () banked
 17451  00238E  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 17452  002390  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 17453  002392  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 17454  002394  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 17455  002396  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 17456  002398  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 17457  00239A  EF3E  F011         	goto	i2l8488
 17458  00239E                     i2l8506:
 17459                           
 17460                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 17461  00239E  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17462  0023A2  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17463  0023A6  CFDE FFF6          	movff	postinc2,tblptrl
 17464  0023AA  CFDD FFF7          	movff	postdec2,tblptrh
 17465  0023AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17466  0023AE  6AF8               	clrf	tblptru,c
 17467  0023B0                     	endif
 17468  0023B0                     	if	0	;tblptru may be non-zero
 17469  0023B0                     	endif
 17470  0023B0  0008               	tblrd		*
 17471  0023B2  50F5               	movf	tablat,w,c
 17472  0023B4  0A78               	xorlw	120
 17473  0023B6  B4D8               	btfsc	status,2,c
 17474  0023B8  EFE0  F011         	goto	i2u1046_41
 17475  0023BC  EFE2  F011         	goto	i2u1046_40
 17476  0023C0                     i2u1046_41:
 17477  0023C0  EFF5  F011         	goto	i2l8510
 17478  0023C4                     i2u1046_40:
 17479  0023C4  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17480  0023C8  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17481  0023CC  CFDE FFF6          	movff	postinc2,tblptrl
 17482  0023D0  CFDD FFF7          	movff	postdec2,tblptrh
 17483  0023D4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17484  0023D4  6AF8               	clrf	tblptru,c
 17485  0023D6                     	endif
 17486  0023D6                     	if	0	;tblptru may be non-zero
 17487  0023D6                     	endif
 17488  0023D6  0008               	tblrd		*
 17489  0023D8  50F5               	movf	tablat,w,c
 17490  0023DA  0A58               	xorlw	88
 17491  0023DC  A4D8               	btfss	status,2,c
 17492  0023DE  EFF3  F011         	goto	i2u1047_41
 17493  0023E2  EFF5  F011         	goto	i2u1047_40
 17494  0023E6                     i2u1047_41:
 17495  0023E6  EF29  F012         	goto	i2l8520
 17496  0023EA                     i2u1047_40:
 17497  0023EA                     i2l8510:
 17498                           
 17499                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 17500  0023EA  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17501  0023EE  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17502  0023F2  CFDE FFF6          	movff	postinc2,tblptrl
 17503  0023F6  CFDD FFF7          	movff	postdec2,tblptrh
 17504  0023FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17505  0023FA  6AF8               	clrf	tblptru,c
 17506  0023FC                     	endif
 17507  0023FC                     	if	0	;tblptru may be non-zero
 17508  0023FC                     	endif
 17509  0023FC  0008               	tblrd		*
 17510  0023FE  CFF5 F072          	movff	tablat,i2vfpfcnvrt@c
 17511  002402                     
 17512                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 17513  002402  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17514  002406  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17515  00240A  2ADE               	incf	postinc2,f,c
 17516  00240C  0E00               	movlw	0
 17517  00240E  22DD               	addwfc	postdec2,f,c
 17518  002410                     
 17519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 17520  002410  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 17521  002414  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 17522  002418  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 17523  00241C  0E02               	movlw	2
 17524  00241E  26DE               	addwf	postinc2,f,c
 17525  002420  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 17526  002424  0E00               	movlw	0
 17527  002426  22DD               	addwfc	postdec2,f,c
 17528  002428  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 17529  00242C  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 17530  002430  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 17531  002434  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 17532  002438  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 17533  00243C  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 17534  002440  0100               	movlb	0	; () banked
 17535  002442  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 17536  002444  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 17537  002446  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 17538  002448  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 17539  00244A  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 17540  00244C  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 17541  00244E  EF3E  F011         	goto	i2l8488
 17542  002452                     i2l8520:
 17543                           
 17544                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
 17545  002452  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17546  002456  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17547  00245A  CFDE F001          	movff	postinc2,i2strncmp@_l
 17548  00245E  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 17549  002462  0EFB               	movlw	low STR_99
 17550  002464  6E03               	movwf	i2strncmp@_r^0,c
 17551  002466  0EFF               	movlw	high STR_99
 17552  002468  6E04               	movwf	(i2strncmp@_r+1)^0,c
 17553  00246A  0E00               	movlw	0
 17554  00246C  6E06               	movwf	(i2strncmp@n+1)^0,c
 17555  00246E  0E02               	movlw	2
 17556  002470  6E05               	movwf	i2strncmp@n^0,c
 17557  002472  ECC0  F02A         	call	i2_strncmp	;wreg free
 17558  002476  5001               	movf	?i2_strncmp^0,w,c
 17559  002478  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 17560  00247A  B4D8               	btfsc	status,2,c
 17561  00247C  EF42  F012         	goto	i2u1048_41
 17562  002480  EF44  F012         	goto	i2u1048_40
 17563  002484                     i2u1048_41:
 17564  002484  EF5F  F012         	goto	i2l8524
 17565  002488                     i2u1048_40:
 17566  002488  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17567  00248C  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17568  002490  CFDE F001          	movff	postinc2,i2strncmp@_l
 17569  002494  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 17570  002498  0EE9               	movlw	low STR_103
 17571  00249A  6E03               	movwf	i2strncmp@_r^0,c
 17572  00249C  0EFF               	movlw	high STR_103
 17573  00249E  6E04               	movwf	(i2strncmp@_r+1)^0,c
 17574  0024A0  0E00               	movlw	0
 17575  0024A2  6E06               	movwf	(i2strncmp@n+1)^0,c
 17576  0024A4  0E02               	movlw	2
 17577  0024A6  6E05               	movwf	i2strncmp@n^0,c
 17578  0024A8  ECC0  F02A         	call	i2_strncmp	;wreg free
 17579  0024AC  5001               	movf	?i2_strncmp^0,w,c
 17580  0024AE  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 17581  0024B0  A4D8               	btfss	status,2,c
 17582  0024B2  EF5D  F012         	goto	i2u1049_41
 17583  0024B6  EF5F  F012         	goto	i2u1049_40
 17584  0024BA                     i2u1049_41:
 17585  0024BA  EF9C  F012         	goto	i2l8534
 17586  0024BE                     i2u1049_40:
 17587  0024BE                     i2l8524:
 17588                           
 17589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
 17590  0024BE  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17591  0024C2  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17592  0024C6  CFDE F04B          	movff	postinc2,??i2_vfpfcnvrt
 17593  0024CA  CFDD F04C          	movff	postdec2,??i2_vfpfcnvrt+1
 17594  0024CE  0E01               	movlw	1
 17595  0024D0  264B               	addwf	??i2_vfpfcnvrt^0,f,c
 17596  0024D2  0E00               	movlw	0
 17597  0024D4  224C               	addwfc	(??i2_vfpfcnvrt+1)^0,f,c
 17598  0024D6  C04B  FFF6         	movff	??i2_vfpfcnvrt,tblptrl
 17599  0024DA  C04C  FFF7         	movff	??i2_vfpfcnvrt+1,tblptrh
 17600  0024DE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17601  0024DE  6AF8               	clrf	tblptru,c
 17602  0024E0                     	endif
 17603  0024E0                     	if	0	;tblptru may be non-zero
 17604  0024E0                     	endif
 17605  0024E0  0008               	tblrd		*
 17606  0024E2  CFF5 F072          	movff	tablat,i2vfpfcnvrt@c
 17607  0024E6                     
 17608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
 17609  0024E6  0E02               	movlw	2
 17610  0024E8  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17611  0024EC  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17612  0024F0  26DE               	addwf	postinc2,f,c
 17613  0024F2  0E00               	movlw	0
 17614  0024F4  22DD               	addwfc	postdec2,f,c
 17615  0024F6                     
 17616                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 17617  0024F6  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 17618  0024FA  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 17619  0024FE  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 17620  002502  0E02               	movlw	2
 17621  002504  26DE               	addwf	postinc2,f,c
 17622  002506  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 17623  00250A  0E00               	movlw	0
 17624  00250C  22DD               	addwfc	postdec2,f,c
 17625  00250E  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 17626  002512  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 17627  002516  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 17628  00251A  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 17629  00251E  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 17630  002522  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 17631  002526  0100               	movlb	0	; () banked
 17632  002528  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 17633  00252A  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 17634  00252C  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 17635  00252E  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 17636  002530  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 17637  002532  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 17638  002534  EF3E  F011         	goto	i2l8488
 17639  002538                     i2l8534:
 17640                           
 17641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 17642  002538  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17643  00253C  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17644  002540  CFDE FFF6          	movff	postinc2,tblptrl
 17645  002544  CFDD FFF7          	movff	postdec2,tblptrh
 17646  002548                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17647  002548  6AF8               	clrf	tblptru,c
 17648  00254A                     	endif
 17649  00254A                     	if	0	;tblptru may be non-zero
 17650  00254A                     	endif
 17651  00254A  0008               	tblrd		*
 17652  00254C  50F5               	movf	tablat,w,c
 17653  00254E  0A25               	xorlw	37
 17654  002550  A4D8               	btfss	status,2,c
 17655  002552  EFAD  F012         	goto	i2u1050_41
 17656  002556  EFAF  F012         	goto	i2u1050_40
 17657  00255A                     i2u1050_41:
 17658  00255A  EFC6  F012         	goto	i2l8544
 17659  00255E                     i2u1050_40:
 17660  00255E                     
 17661                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 17662  00255E  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17663  002562  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17664  002566  2ADE               	incf	postinc2,f,c
 17665  002568  0E00               	movlw	0
 17666  00256A  22DD               	addwfc	postdec2,f,c
 17667  00256C                     
 17668                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 17669  00256C  0E00               	movlw	0
 17670  00256E  6E04               	movwf	(i2fputc@c+1)^0,c
 17671  002570  0E25               	movlw	37
 17672  002572  6E03               	movwf	i2fputc@c^0,c
 17673  002574  C045  F005         	movff	i2vfpfcnvrt@fp,i2fputc@fp
 17674  002578  C046  F006         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
 17675  00257C  ECD1  F02C         	call	i2_fputc	;wreg free
 17676  002580                     i2l8540:
 17677                           
 17678                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 17679  002580  0E00               	movlw	0
 17680  002582  6E46               	movwf	(?i2_vfpfcnvrt+1)^0,c
 17681  002584  0E01               	movlw	1
 17682  002586  6E45               	movwf	?i2_vfpfcnvrt^0,c
 17683  002588  EFEB  F012         	goto	i2l878
 17684  00258C                     i2l8544:
 17685                           
 17686                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 17687  00258C  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17688  002590  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17689  002594  2ADE               	incf	postinc2,f,c
 17690  002596  0E00               	movlw	0
 17691  002598  22DD               	addwfc	postdec2,f,c
 17692  00259A  EF5D  F00E         	goto	i2l8396
 17693  00259E                     i2l8550:
 17694                           
 17695                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 17696  00259E  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17697  0025A2  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17698  0025A6  CFDE FFF6          	movff	postinc2,tblptrl
 17699  0025AA  CFDD FFF7          	movff	postdec2,tblptrh
 17700  0025AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17701  0025AE  6AF8               	clrf	tblptru,c
 17702  0025B0                     	endif
 17703  0025B0                     	if	0	;tblptru may be non-zero
 17704  0025B0                     	endif
 17705  0025B0  0008               	tblrd		*
 17706  0025B2  50F5               	movf	tablat,w,c
 17707  0025B4  6E03               	movwf	i2fputc@c^0,c
 17708  0025B6  6A04               	clrf	(i2fputc@c+1)^0,c
 17709  0025B8  C045  F005         	movff	i2vfpfcnvrt@fp,i2fputc@fp
 17710  0025BC  C046  F006         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
 17711  0025C0  ECD1  F02C         	call	i2_fputc	;wreg free
 17712  0025C4                     
 17713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 17714  0025C4  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17715  0025C8  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17716  0025CC  2ADE               	incf	postinc2,f,c
 17717  0025CE  0E00               	movlw	0
 17718  0025D0  22DD               	addwfc	postdec2,f,c
 17719  0025D2  EFC0  F012         	goto	i2l8540
 17720  0025D6                     i2l878:
 17721  0025D6  0012               	return		;funcret
 17722  0025D8                     __end_ofi2_vfpfcnvrt:
 17723                           	opt callstack 0
 17724                           
 17725 ;; *************** function i2_xtoa *****************
 17726 ;; Defined at:
 17727 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 17728 ;; Parameters:    Size  Location     Type
 17729 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 17730 ;;		 -> vsnprintf@f(6), NULL(0), 
 17731 ;;  d               8   31[COMRAM] unsigned long long 
 17732 ;;  x               1   39[COMRAM] unsigned char 
 17733 ;; Auto vars:     Size  Location     Type
 17734 ;;  xtoa            8   56[COMRAM] unsigned long long 
 17735 ;;  xtoa            2   66[COMRAM] int 
 17736 ;;  xtoa            2   64[COMRAM] int 
 17737 ;;  xtoa            2   54[COMRAM] int 
 17738 ;;  xtoa            2   52[COMRAM] int 
 17739 ;; Return value:  Size  Location     Type
 17740 ;;                  2   29[COMRAM] int 
 17741 ;; Registers used:
 17742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17743 ;; Tracked objects:
 17744 ;;		On entry : 0/0
 17745 ;;		On exit  : 0/0
 17746 ;;		Unchanged: 0/0
 17747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17748 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17749 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17750 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17751 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17752 ;;Total ram usage:       39 bytes
 17753 ;; Hardware stack levels used:    1
 17754 ;; Hardware stack levels required when called:    5
 17755 ;; This function calls:
 17756 ;;		i2_isalpha
 17757 ;;		i2_isupper
 17758 ;;		i2_pad
 17759 ;;		i2_toupper
 17760 ;; This function is called by:
 17761 ;;		i2_vfpfcnvrt
 17762 ;; This function uses a non-reentrant model
 17763 ;;
 17764                           
 17765                           	psect	text75
 17766  0035F6                     __ptext75:
 17767                           	opt callstack 0
 17768  0035F6                     i2_xtoa:
 17769                           	opt callstack 8
 17770  0035F6                     
 17771                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 17772  0035F6  0100               	movlb	0	; () banked
 17773  0035F8  BFB8               	btfsc	(_prec+1)& (0+255),7,b
 17774  0035FA  EF01  F01B         	goto	i2u935_41
 17775  0035FE  EF03  F01B         	goto	i2u935_40
 17776  003602                     i2u935_41:
 17777  003602  EF04  F01B         	goto	i2l7922
 17778  003606                     i2u935_40:
 17779  003606                     
 17780                           ; BSR set to: 0
 17781                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 17782  003606  93B9               	bcf	_flags& (0+255),1,b
 17783  003608                     i2l7922:
 17784                           
 17785                           ; BSR set to: 0
 17786                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 17787  003608  BFB8               	btfsc	(_prec+1)& (0+255),7,b
 17788  00360A  EF11  F01B         	goto	i2u936_40
 17789  00360E  51B8               	movf	(_prec+1)& (0+255),w,b
 17790  003610  E106               	bnz	i2u936_41
 17791  003612  05B7               	decf	_prec& (0+255),w,b
 17792  003614  B0D8               	btfsc	status,0,c
 17793  003616  EF0F  F01B         	goto	i2u936_41
 17794  00361A  EF11  F01B         	goto	i2u936_40
 17795  00361E                     i2u936_41:
 17796  00361E  EF17  F01B         	goto	i2l816
 17797  003622                     i2u936_40:
 17798  003622                     
 17799                           ; BSR set to: 0
 17800  003622  0E00               	movlw	0
 17801  003624  6E36               	movwf	(i2xtoa@p+1)^0,c
 17802  003626  0E01               	movlw	1
 17803  003628  6E35               	movwf	i2xtoa@p^0,c
 17804  00362A  EF1B  F01B         	goto	i2l818
 17805  00362E                     i2l816:
 17806                           
 17807                           ; BSR set to: 0
 17808  00362E  C0B7  F035         	movff	_prec,i2xtoa@p
 17809  003632  C0B8  F036         	movff	_prec+1,i2xtoa@p+1
 17810  003636                     i2l818:
 17811                           
 17812                           ; BSR set to: 0
 17813                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 17814  003636  C0B5  F037         	movff	_width,i2xtoa@w
 17815  00363A  C0B6  F038         	movff	_width+1,i2xtoa@w+1
 17816                           
 17817                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 17818  00363E  A9B9               	btfss	_flags& (0+255),4,b
 17819  003640  EF24  F01B         	goto	i2u937_41
 17820  003644  EF26  F01B         	goto	i2u937_40
 17821  003648                     i2u937_41:
 17822  003648  EF2A  F01B         	goto	i2l7928
 17823  00364C                     i2u937_40:
 17824  00364C                     
 17825                           ; BSR set to: 0
 17826                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 17827  00364C  0EFE               	movlw	254
 17828  00364E  2637               	addwf	i2xtoa@w^0,f,c
 17829  003650  0EFF               	movlw	255
 17830  003652  2238               	addwfc	(i2xtoa@w+1)^0,f,c
 17831  003654                     i2l7928:
 17832                           
 17833                           ; BSR set to: 0
 17834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 17835  003654  C020  F039         	movff	i2xtoa@d,i2xtoa@n
 17836  003658  C021  F03A         	movff	i2xtoa@d+1,i2xtoa@n+1
 17837  00365C  C022  F03B         	movff	i2xtoa@d+2,i2xtoa@n+2
 17838  003660  C023  F03C         	movff	i2xtoa@d+3,i2xtoa@n+3
 17839  003664  C024  F03D         	movff	i2xtoa@d+4,i2xtoa@n+4
 17840  003668  C025  F03E         	movff	i2xtoa@d+5,i2xtoa@n+5
 17841  00366C  C026  F03F         	movff	i2xtoa@d+6,i2xtoa@n+6
 17842  003670  C027  F040         	movff	i2xtoa@d+7,i2xtoa@n+7
 17843  003674                     
 17844                           ; BSR set to: 0
 17845                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 17846  003674  0E00               	movlw	0
 17847  003676  6E42               	movwf	(i2xtoa@i+1)^0,c
 17848  003678  0E1F               	movlw	31
 17849  00367A  6E41               	movwf	i2xtoa@i^0,c
 17850  00367C                     
 17851                           ; BSR set to: 0
 17852                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 17853  00367C  0E00               	movlw	0
 17854  00367E  0101               	movlb	1	; () banked
 17855  003680  6FA8               	movwf	(_dbuf+31)& (0+255),b
 17856                           
 17857                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17858  003682  EFF6  F01B         	goto	i2l7964
 17859  003686                     i2l7934:
 17860                           
 17861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 17862  003686  0641               	decf	i2xtoa@i^0,f,c
 17863  003688  A0D8               	btfss	status,0,c
 17864  00368A  0642               	decf	(i2xtoa@i+1)^0,f,c
 17865  00368C                     
 17866                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 17867  00368C  0E0F               	movlw	15
 17868  00368E  1439               	andwf	i2xtoa@n^0,w,c
 17869  003690  6E43               	movwf	i2xtoa@c^0,c
 17870  003692  6A44               	clrf	(i2xtoa@c+1)^0,c
 17871  003694                     
 17872                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 17873  003694  BE44               	btfsc	(i2xtoa@c+1)^0,7,c
 17874  003696  EF56  F01B         	goto	i2u938_41
 17875  00369A  5044               	movf	(i2xtoa@c+1)^0,w,c
 17876  00369C  E109               	bnz	i2u938_40
 17877  00369E  0E0A               	movlw	10
 17878  0036A0  5C43               	subwf	i2xtoa@c^0,w,c
 17879  0036A2  A0D8               	btfss	status,0,c
 17880  0036A4  EF56  F01B         	goto	i2u938_41
 17881  0036A8  EF58  F01B         	goto	i2u938_40
 17882  0036AC                     i2u938_41:
 17883  0036AC  EF60  F01B         	goto	i2l7942
 17884  0036B0                     i2u938_40:
 17885  0036B0  0E57               	movlw	87
 17886  0036B2  2443               	addwf	i2xtoa@c^0,w,c
 17887  0036B4  6E43               	movwf	i2xtoa@c^0,c
 17888  0036B6  0E00               	movlw	0
 17889  0036B8  2044               	addwfc	(i2xtoa@c+1)^0,w,c
 17890  0036BA  6E44               	movwf	(i2xtoa@c+1)^0,c
 17891  0036BC  EF66  F01B         	goto	i2l825
 17892  0036C0                     i2l7942:
 17893  0036C0  0E30               	movlw	48
 17894  0036C2  2443               	addwf	i2xtoa@c^0,w,c
 17895  0036C4  6E43               	movwf	i2xtoa@c^0,c
 17896  0036C6  0E00               	movlw	0
 17897  0036C8  2044               	addwfc	(i2xtoa@c+1)^0,w,c
 17898  0036CA  6E44               	movwf	(i2xtoa@c+1)^0,c
 17899  0036CC                     i2l825:
 17900  0036CC  0EBF               	movlw	191
 17901  0036CE  6E29               	movwf	??i2_xtoa^0,c
 17902  0036D0  0EFF               	movlw	255
 17903  0036D2  6E2A               	movwf	(??i2_xtoa+1)^0,c
 17904  0036D4  5028               	movf	i2xtoa@x^0,w,c
 17905  0036D6  6E2B               	movwf	(??i2_xtoa+2)^0,c
 17906  0036D8  6A2C               	clrf	(??i2_xtoa+3)^0,c
 17907  0036DA  5029               	movf	??i2_xtoa^0,w,c
 17908  0036DC  262B               	addwf	(??i2_xtoa+2)^0,f,c
 17909  0036DE  502A               	movf	(??i2_xtoa+1)^0,w,c
 17910  0036E0  222C               	addwfc	(??i2_xtoa+3)^0,f,c
 17911  0036E2  502C               	movf	(??i2_xtoa+3)^0,w,c
 17912  0036E4  E10A               	bnz	i2u939_40
 17913  0036E6  0E1A               	movlw	26
 17914  0036E8  5C2B               	subwf	(??i2_xtoa+2)^0,w,c
 17915  0036EA  A0D8               	btfss	status,0,c
 17916  0036EC  EF7A  F01B         	goto	i2u939_41
 17917  0036F0  EF7D  F01B         	goto	i2u939_40
 17918  0036F4                     i2u939_41:
 17919  0036F4  0E01               	movlw	1
 17920  0036F6  EF7E  F01B         	goto	i2u940_40
 17921  0036FA                     i2u939_40:
 17922  0036FA  0E00               	movlw	0
 17923  0036FC                     i2u940_40:
 17924  0036FC  6E31               	movwf	i2_xtoa$1861^0,c
 17925  0036FE  6A32               	clrf	(i2_xtoa$1861+1)^0,c
 17926  003700  5031               	movf	i2_xtoa$1861^0,w,c
 17927  003702  1032               	iorwf	(i2_xtoa$1861+1)^0,w,c
 17928  003704  B4D8               	btfsc	status,2,c
 17929  003706  EF87  F01B         	goto	i2u941_41
 17930  00370A  EF89  F01B         	goto	i2u941_40
 17931  00370E                     i2u941_41:
 17932  00370E  EFB9  F01B         	goto	i2l7956
 17933  003712                     i2u941_40:
 17934  003712  0E9F               	movlw	159
 17935  003714  6E29               	movwf	??i2_xtoa^0,c
 17936  003716  0EFF               	movlw	255
 17937  003718  6E2A               	movwf	(??i2_xtoa+1)^0,c
 17938  00371A  0E20               	movlw	32
 17939  00371C  1043               	iorwf	i2xtoa@c^0,w,c
 17940  00371E  6E2B               	movwf	(??i2_xtoa+2)^0,c
 17941  003720  0E00               	movlw	0
 17942  003722  1044               	iorwf	(i2xtoa@c+1)^0,w,c
 17943  003724  6E2C               	movwf	(??i2_xtoa+3)^0,c
 17944  003726  5029               	movf	??i2_xtoa^0,w,c
 17945  003728  262B               	addwf	(??i2_xtoa+2)^0,f,c
 17946  00372A  502A               	movf	(??i2_xtoa+1)^0,w,c
 17947  00372C  222C               	addwfc	(??i2_xtoa+3)^0,f,c
 17948  00372E  502C               	movf	(??i2_xtoa+3)^0,w,c
 17949  003730  E10A               	bnz	i2u942_40
 17950  003732  0E1A               	movlw	26
 17951  003734  5C2B               	subwf	(??i2_xtoa+2)^0,w,c
 17952  003736  A0D8               	btfss	status,0,c
 17953  003738  EFA0  F01B         	goto	i2u942_41
 17954  00373C  EFA3  F01B         	goto	i2u942_40
 17955  003740                     i2u942_41:
 17956  003740  0E01               	movlw	1
 17957  003742  EFA4  F01B         	goto	i2u943_40
 17958  003746                     i2u942_40:
 17959  003746  0E00               	movlw	0
 17960  003748                     i2u943_40:
 17961  003748  6E33               	movwf	i2_xtoa$1862^0,c
 17962  00374A  6A34               	clrf	(i2_xtoa$1862+1)^0,c
 17963  00374C  5033               	movf	i2_xtoa$1862^0,w,c
 17964  00374E  1034               	iorwf	(i2_xtoa$1862+1)^0,w,c
 17965  003750  B4D8               	btfsc	status,2,c
 17966  003752  EFAD  F01B         	goto	i2u944_41
 17967  003756  EFAF  F01B         	goto	i2u944_40
 17968  00375A                     i2u944_41:
 17969  00375A  EFB9  F01B         	goto	i2l7956
 17970  00375E                     i2u944_40:
 17971  00375E                     
 17972                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 17973  00375E  C043  F007         	movff	i2xtoa@c,i2toupper@c
 17974  003762  C044  F008         	movff	i2xtoa@c+1,i2toupper@c+1
 17975  003766  ECC4  F02F         	call	i2_toupper	;wreg free
 17976  00376A  C007  F043         	movff	?i2_toupper,i2xtoa@c
 17977  00376E  C008  F044         	movff	?i2_toupper+1,i2xtoa@c+1
 17978  003772                     i2l7956:
 17979                           
 17980                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 17981  003772  0E89               	movlw	low _dbuf
 17982  003774  2441               	addwf	i2xtoa@i^0,w,c
 17983  003776  6ED9               	movwf	fsr2l,c
 17984  003778  0E01               	movlw	high _dbuf
 17985  00377A  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 17986  00377C  6EDA               	movwf	fsr2h,c
 17987  00377E  C043  FFDF         	movff	i2xtoa@c,indf2
 17988  003782                     
 17989                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 17990  003782  0635               	decf	i2xtoa@p^0,f,c
 17991  003784  A0D8               	btfss	status,0,c
 17992  003786  0636               	decf	(i2xtoa@p+1)^0,f,c
 17993  003788                     
 17994                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 17995  003788  0637               	decf	i2xtoa@w^0,f,c
 17996  00378A  A0D8               	btfss	status,0,c
 17997  00378C  0638               	decf	(i2xtoa@w+1)^0,f,c
 17998  00378E                     
 17999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 18000  00378E  C039  F029         	movff	i2xtoa@n,??i2_xtoa
 18001  003792  C03A  F02A         	movff	i2xtoa@n+1,??i2_xtoa+1
 18002  003796  C03B  F02B         	movff	i2xtoa@n+2,??i2_xtoa+2
 18003  00379A  C03C  F02C         	movff	i2xtoa@n+3,??i2_xtoa+3
 18004  00379E  C03D  F02D         	movff	i2xtoa@n+4,??i2_xtoa+4
 18005  0037A2  C03E  F02E         	movff	i2xtoa@n+5,??i2_xtoa+5
 18006  0037A6  C03F  F02F         	movff	i2xtoa@n+6,??i2_xtoa+6
 18007  0037AA  C040  F030         	movff	i2xtoa@n+7,??i2_xtoa+7
 18008  0037AE  0E05               	movlw	5
 18009  0037B0  EFE3  F01B         	goto	i2u945_40
 18010  0037B4                     i2u945_45:
 18011  0037B4  90D8               	bcf	status,0,c
 18012  0037B6  3230               	rrcf	(??i2_xtoa+7)^0,f,c
 18013  0037B8  322F               	rrcf	(??i2_xtoa+6)^0,f,c
 18014  0037BA  322E               	rrcf	(??i2_xtoa+5)^0,f,c
 18015  0037BC  322D               	rrcf	(??i2_xtoa+4)^0,f,c
 18016  0037BE  322C               	rrcf	(??i2_xtoa+3)^0,f,c
 18017  0037C0  322B               	rrcf	(??i2_xtoa+2)^0,f,c
 18018  0037C2  322A               	rrcf	(??i2_xtoa+1)^0,f,c
 18019  0037C4  3229               	rrcf	??i2_xtoa^0,f,c
 18020  0037C6                     i2u945_40:
 18021  0037C6  2EE8               	decfsz	wreg,f,c
 18022  0037C8  EFDA  F01B         	goto	i2u945_45
 18023  0037CC  C029  F039         	movff	??i2_xtoa,i2xtoa@n
 18024  0037D0  C02A  F03A         	movff	??i2_xtoa+1,i2xtoa@n+1
 18025  0037D4  C02B  F03B         	movff	??i2_xtoa+2,i2xtoa@n+2
 18026  0037D8  C02C  F03C         	movff	??i2_xtoa+3,i2xtoa@n+3
 18027  0037DC  C02D  F03D         	movff	??i2_xtoa+4,i2xtoa@n+4
 18028  0037E0  C02E  F03E         	movff	??i2_xtoa+5,i2xtoa@n+5
 18029  0037E4  C02F  F03F         	movff	??i2_xtoa+6,i2xtoa@n+6
 18030  0037E8  C030  F040         	movff	??i2_xtoa+7,i2xtoa@n+7
 18031  0037EC                     i2l7964:
 18032                           
 18033                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18034  0037EC  BE42               	btfsc	(i2xtoa@i+1)^0,7,c
 18035  0037EE  EF02  F01C         	goto	i2u946_41
 18036  0037F2  5042               	movf	(i2xtoa@i+1)^0,w,c
 18037  0037F4  E109               	bnz	i2u946_40
 18038  0037F6  0E02               	movlw	2
 18039  0037F8  5C41               	subwf	i2xtoa@i^0,w,c
 18040  0037FA  A0D8               	btfss	status,0,c
 18041  0037FC  EF02  F01C         	goto	i2u946_41
 18042  003800  EF04  F01C         	goto	i2u946_40
 18043  003804                     i2u946_41:
 18044  003804  EF35  F01C         	goto	i2l839
 18045  003808                     i2u946_40:
 18046  003808  5039               	movf	i2xtoa@n^0,w,c
 18047  00380A  103A               	iorwf	(i2xtoa@n+1)^0,w,c
 18048  00380C  103B               	iorwf	(i2xtoa@n+2)^0,w,c
 18049  00380E  103C               	iorwf	(i2xtoa@n+3)^0,w,c
 18050  003810  103D               	iorwf	(i2xtoa@n+4)^0,w,c
 18051  003812  103E               	iorwf	(i2xtoa@n+5)^0,w,c
 18052  003814  103F               	iorwf	(i2xtoa@n+6)^0,w,c
 18053  003816  1040               	iorwf	(i2xtoa@n+7)^0,w,c
 18054  003818  A4D8               	btfss	status,2,c
 18055  00381A  EF11  F01C         	goto	i2u947_41
 18056  00381E  EF13  F01C         	goto	i2u947_40
 18057  003822                     i2u947_41:
 18058  003822  EF43  F01B         	goto	i2l7934
 18059  003826                     i2u947_40:
 18060  003826  BE36               	btfsc	(i2xtoa@p+1)^0,7,c
 18061  003828  EF20  F01C         	goto	i2u948_40
 18062  00382C  5036               	movf	(i2xtoa@p+1)^0,w,c
 18063  00382E  E106               	bnz	i2u948_41
 18064  003830  0435               	decf	i2xtoa@p^0,w,c
 18065  003832  B0D8               	btfsc	status,0,c
 18066  003834  EF1E  F01C         	goto	i2u948_41
 18067  003838  EF20  F01C         	goto	i2u948_40
 18068  00383C                     i2u948_41:
 18069  00383C  EF43  F01B         	goto	i2l7934
 18070  003840                     i2u948_40:
 18071  003840  BE38               	btfsc	(i2xtoa@w+1)^0,7,c
 18072  003842  EF2B  F01C         	goto	i2u949_41
 18073  003846  5038               	movf	(i2xtoa@w+1)^0,w,c
 18074  003848  E108               	bnz	i2u949_40
 18075  00384A  0437               	decf	i2xtoa@w^0,w,c
 18076  00384C  A0D8               	btfss	status,0,c
 18077  00384E  EF2B  F01C         	goto	i2u949_41
 18078  003852  EF2D  F01C         	goto	i2u949_40
 18079  003856                     i2u949_41:
 18080  003856  EF35  F01C         	goto	i2l839
 18081  00385A                     i2u949_40:
 18082  00385A  0100               	movlb	0	; () banked
 18083  00385C  B3B9               	btfsc	_flags& (0+255),1,b
 18084  00385E  EF33  F01C         	goto	i2u950_41
 18085  003862  EF35  F01C         	goto	i2u950_40
 18086  003866                     i2u950_41:
 18087  003866  EF43  F01B         	goto	i2l7934
 18088  00386A                     i2u950_40:
 18089  00386A                     i2l839:
 18090                           
 18091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 18092  00386A  0100               	movlb	0	; () banked
 18093  00386C  A9B9               	btfss	_flags& (0+255),4,b
 18094  00386E  EF3B  F01C         	goto	i2u951_41
 18095  003872  EF3D  F01C         	goto	i2u951_40
 18096  003876                     i2u951_41:
 18097  003876  EF53  F01C         	goto	i2l7980
 18098  00387A                     i2u951_40:
 18099  00387A                     
 18100                           ; BSR set to: 0
 18101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 18102  00387A  0641               	decf	i2xtoa@i^0,f,c
 18103  00387C  A0D8               	btfss	status,0,c
 18104  00387E  0642               	decf	(i2xtoa@i+1)^0,f,c
 18105  003880                     
 18106                           ; BSR set to: 0
 18107                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 18108  003880  0E89               	movlw	low _dbuf
 18109  003882  2441               	addwf	i2xtoa@i^0,w,c
 18110  003884  6ED9               	movwf	fsr2l,c
 18111  003886  0E01               	movlw	high _dbuf
 18112  003888  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 18113  00388A  6EDA               	movwf	fsr2h,c
 18114  00388C  C028  FFDF         	movff	i2xtoa@x,indf2
 18115  003890                     
 18116                           ; BSR set to: 0
 18117                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 18118  003890  0641               	decf	i2xtoa@i^0,f,c
 18119  003892  A0D8               	btfss	status,0,c
 18120  003894  0642               	decf	(i2xtoa@i+1)^0,f,c
 18121                           
 18122                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 18123  003896  0E89               	movlw	low _dbuf
 18124  003898  2441               	addwf	i2xtoa@i^0,w,c
 18125  00389A  6ED9               	movwf	fsr2l,c
 18126  00389C  0E01               	movlw	high _dbuf
 18127  00389E  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 18128  0038A0  6EDA               	movwf	fsr2h,c
 18129  0038A2  0E30               	movlw	48
 18130  0038A4  6EDF               	movwf	indf2,c
 18131  0038A6                     i2l7980:
 18132                           
 18133                           ; BSR set to: 0
 18134                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 18135  0038A6  C01E  F013         	movff	i2xtoa@fp,i2pad@fp
 18136  0038AA  C01F  F014         	movff	i2xtoa@fp+1,i2pad@fp+1
 18137  0038AE  0E89               	movlw	low _dbuf
 18138  0038B0  2441               	addwf	i2xtoa@i^0,w,c
 18139  0038B2  6E15               	movwf	i2pad@buf^0,c
 18140  0038B4  0E01               	movlw	high _dbuf
 18141  0038B6  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 18142  0038B8  6E16               	movwf	(i2pad@buf+1)^0,c
 18143  0038BA  C037  F017         	movff	i2xtoa@w,i2pad@p
 18144  0038BE  C038  F018         	movff	i2xtoa@w+1,i2pad@p+1
 18145  0038C2  EC36  F02D         	call	i2_pad	;wreg free
 18146  0038C6  C013  F01E         	movff	?i2_pad,?i2_xtoa
 18147  0038CA  C014  F01F         	movff	?i2_pad+1,?i2_xtoa+1
 18148  0038CE  0012               	return		;funcret
 18149  0038D0                     __end_ofi2_xtoa:
 18150                           	opt callstack 0
 18151                           
 18152 ;; *************** function i2_toupper *****************
 18153 ;; Defined at:
 18154 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
 18155 ;; Parameters:    Size  Location     Type
 18156 ;;  c               2    6[COMRAM] int 
 18157 ;; Auto vars:     Size  Location     Type
 18158 ;;		None
 18159 ;; Return value:  Size  Location     Type
 18160 ;;                  2    6[COMRAM] int 
 18161 ;; Registers used:
 18162 ;;		wreg, status,2, status,0
 18163 ;; Tracked objects:
 18164 ;;		On entry : 0/0
 18165 ;;		On exit  : 0/0
 18166 ;;		Unchanged: 0/0
 18167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18168 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18169 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18170 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18171 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18172 ;;Total ram usage:        8 bytes
 18173 ;; Hardware stack levels used:    1
 18174 ;; Hardware stack levels required when called:    1
 18175 ;; This function calls:
 18176 ;;		i2_islower
 18177 ;; This function is called by:
 18178 ;;		i2_xtoa
 18179 ;; This function uses a non-reentrant model
 18180 ;;
 18181                           
 18182                           	psect	text76
 18183  005F88                     __ptext76:
 18184                           	opt callstack 0
 18185  005F88                     i2_toupper:
 18186                           	opt callstack 11
 18187  005F88  0E9F               	movlw	159
 18188  005F8A  6E09               	movwf	??i2_toupper^0,c
 18189  005F8C  0EFF               	movlw	255
 18190  005F8E  6E0A               	movwf	(??i2_toupper+1)^0,c
 18191  005F90  C007  F00B         	movff	i2toupper@c,??i2_toupper+2
 18192  005F94  C008  F00C         	movff	i2toupper@c+1,??i2_toupper+3
 18193  005F98  5009               	movf	??i2_toupper^0,w,c
 18194  005F9A  260B               	addwf	(??i2_toupper+2)^0,f,c
 18195  005F9C  500A               	movf	(??i2_toupper+1)^0,w,c
 18196  005F9E  220C               	addwfc	(??i2_toupper+3)^0,f,c
 18197  005FA0  500C               	movf	(??i2_toupper+3)^0,w,c
 18198  005FA2  E10A               	bnz	i2u886_40
 18199  005FA4  0E1A               	movlw	26
 18200  005FA6  5C0B               	subwf	(??i2_toupper+2)^0,w,c
 18201  005FA8  A0D8               	btfss	status,0,c
 18202  005FAA  EFD9  F02F         	goto	i2u886_41
 18203  005FAE  EFDC  F02F         	goto	i2u886_40
 18204  005FB2                     i2u886_41:
 18205  005FB2  0E01               	movlw	1
 18206  005FB4  EFDD  F02F         	goto	i2u887_40
 18207  005FB8                     i2u886_40:
 18208  005FB8  0E00               	movlw	0
 18209  005FBA                     i2u887_40:
 18210  005FBA  6E0D               	movwf	i2_toupper$2552^0,c
 18211  005FBC  6A0E               	clrf	(i2_toupper$2552+1)^0,c
 18212  005FBE  500D               	movf	i2_toupper$2552^0,w,c
 18213  005FC0  100E               	iorwf	(i2_toupper$2552+1)^0,w,c
 18214  005FC2  B4D8               	btfsc	status,2,c
 18215  005FC4  EFE6  F02F         	goto	i2u888_41
 18216  005FC8  EFE8  F02F         	goto	i2u888_40
 18217  005FCC                     i2u888_41:
 18218  005FCC  EFEE  F02F         	goto	i2l1715
 18219  005FD0                     i2u888_40:
 18220  005FD0  0E5F               	movlw	95
 18221  005FD2  1407               	andwf	i2toupper@c^0,w,c
 18222  005FD4  6E07               	movwf	?i2_toupper^0,c
 18223  005FD6  6A08               	clrf	(?i2_toupper+1)^0,c
 18224  005FD8  EFF2  F02F         	goto	i2l1720
 18225  005FDC                     i2l1715:
 18226  005FDC  C007  F007         	movff	i2toupper@c,?i2_toupper
 18227  005FE0  C008  F008         	movff	i2toupper@c+1,?i2_toupper+1
 18228  005FE4                     i2l1720:
 18229  005FE4  0012               	return		;funcret
 18230  005FE6                     __end_ofi2_toupper:
 18231                           	opt callstack 0
 18232                           
 18233 ;; *************** function i2_islower *****************
 18234 ;; Defined at:
 18235 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
 18236 ;; Parameters:    Size  Location     Type
 18237 ;;  c               2    0[COMRAM] int 
 18238 ;; Auto vars:     Size  Location     Type
 18239 ;;		None
 18240 ;; Return value:  Size  Location     Type
 18241 ;;                  2    0[COMRAM] int 
 18242 ;; Registers used:
 18243 ;;		wreg, status,2, status,0
 18244 ;; Tracked objects:
 18245 ;;		On entry : 0/0
 18246 ;;		On exit  : 0/0
 18247 ;;		Unchanged: 0/0
 18248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18249 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18251 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18252 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18253 ;;Total ram usage:        6 bytes
 18254 ;; Hardware stack levels used:    1
 18255 ;; This function calls:
 18256 ;;		Nothing
 18257 ;; This function is called by:
 18258 ;;		i2_toupper
 18259 ;; This function uses a non-reentrant model
 18260 ;;
 18261                           
 18262                           	psect	text77
 18263  0065D2                     __ptext77:
 18264                           	opt callstack 0
 18265  0065D2                     i2_islower:
 18266                           	opt callstack 11
 18267  0065D2  0E9F               	movlw	159
 18268  0065D4  6E03               	movwf	??i2_islower^0,c
 18269  0065D6  0EFF               	movlw	255
 18270  0065D8  6E04               	movwf	(??i2_islower+1)^0,c
 18271  0065DA  C001  F005         	movff	i2islower@c,??i2_islower+2
 18272  0065DE  C002  F006         	movff	i2islower@c+1,??i2_islower+3
 18273  0065E2  5003               	movf	??i2_islower^0,w,c
 18274  0065E4  2605               	addwf	(??i2_islower+2)^0,f,c
 18275  0065E6  5004               	movf	(??i2_islower+1)^0,w,c
 18276  0065E8  2206               	addwfc	(??i2_islower+3)^0,f,c
 18277  0065EA  5006               	movf	(??i2_islower+3)^0,w,c
 18278  0065EC  E10A               	bnz	i2u847_40
 18279  0065EE  0E1A               	movlw	26
 18280  0065F0  5C05               	subwf	(??i2_islower+2)^0,w,c
 18281  0065F2  A0D8               	btfss	status,0,c
 18282  0065F4  EFFE  F032         	goto	i2u847_41
 18283  0065F8  EF01  F033         	goto	i2u847_40
 18284  0065FC                     i2u847_41:
 18285  0065FC  0E01               	movlw	1
 18286  0065FE  EF02  F033         	goto	i2u848_40
 18287  006602                     i2u847_40:
 18288  006602  0E00               	movlw	0
 18289  006604                     i2u848_40:
 18290  006604  6E01               	movwf	?i2_islower^0,c
 18291  006606  6A02               	clrf	(?i2_islower+1)^0,c
 18292  006608  0012               	return		;funcret
 18293  00660A                     __end_ofi2_islower:
 18294                           	opt callstack 0
 18295                           
 18296 ;; *************** function i2_isupper *****************
 18297 ;; Defined at:
 18298 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 18299 ;; Parameters:    Size  Location     Type
 18300 ;;  c               2    0[COMRAM] int 
 18301 ;; Auto vars:     Size  Location     Type
 18302 ;;		None
 18303 ;; Return value:  Size  Location     Type
 18304 ;;                  2    0[COMRAM] int 
 18305 ;; Registers used:
 18306 ;;		wreg, status,2, status,0
 18307 ;; Tracked objects:
 18308 ;;		On entry : 0/0
 18309 ;;		On exit  : 0/0
 18310 ;;		Unchanged: 0/0
 18311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18312 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18314 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18315 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18316 ;;Total ram usage:        6 bytes
 18317 ;; Hardware stack levels used:    1
 18318 ;; This function calls:
 18319 ;;		Nothing
 18320 ;; This function is called by:
 18321 ;;		i2_xtoa
 18322 ;; This function uses a non-reentrant model
 18323 ;;
 18324                           
 18325                           	psect	text78
 18326  00660A                     __ptext78:
 18327                           	opt callstack 0
 18328  00660A                     i2_isupper:
 18329                           	opt callstack 12
 18330  00660A  0EBF               	movlw	191
 18331  00660C  6E03               	movwf	??i2_isupper^0,c
 18332  00660E  0EFF               	movlw	255
 18333  006610  6E04               	movwf	(??i2_isupper+1)^0,c
 18334  006612  C001  F005         	movff	i2isupper@c,??i2_isupper+2
 18335  006616  C002  F006         	movff	i2isupper@c+1,??i2_isupper+3
 18336  00661A  5003               	movf	??i2_isupper^0,w,c
 18337  00661C  2605               	addwf	(??i2_isupper+2)^0,f,c
 18338  00661E  5004               	movf	(??i2_isupper+1)^0,w,c
 18339  006620  2206               	addwfc	(??i2_isupper+3)^0,f,c
 18340  006622  5006               	movf	(??i2_isupper+3)^0,w,c
 18341  006624  E10A               	bnz	i2u884_40
 18342  006626  0E1A               	movlw	26
 18343  006628  5C05               	subwf	(??i2_isupper+2)^0,w,c
 18344  00662A  A0D8               	btfss	status,0,c
 18345  00662C  EF1A  F033         	goto	i2u884_41
 18346  006630  EF1D  F033         	goto	i2u884_40
 18347  006634                     i2u884_41:
 18348  006634  0E01               	movlw	1
 18349  006636  EF1E  F033         	goto	i2u885_40
 18350  00663A                     i2u884_40:
 18351  00663A  0E00               	movlw	0
 18352  00663C                     i2u885_40:
 18353  00663C  6E01               	movwf	?i2_isupper^0,c
 18354  00663E  6A02               	clrf	(?i2_isupper+1)^0,c
 18355  006640  0012               	return		;funcret
 18356  006642                     __end_ofi2_isupper:
 18357                           	opt callstack 0
 18358                           
 18359 ;; *************** function i2_isalpha *****************
 18360 ;; Defined at:
 18361 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
 18362 ;; Parameters:    Size  Location     Type
 18363 ;;  c               2    0[COMRAM] int 
 18364 ;; Auto vars:     Size  Location     Type
 18365 ;;		None
 18366 ;; Return value:  Size  Location     Type
 18367 ;;                  2    0[COMRAM] int 
 18368 ;; Registers used:
 18369 ;;		wreg, status,2, status,0
 18370 ;; Tracked objects:
 18371 ;;		On entry : 0/0
 18372 ;;		On exit  : 0/0
 18373 ;;		Unchanged: 0/0
 18374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18375 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18377 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18378 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18379 ;;Total ram usage:        6 bytes
 18380 ;; Hardware stack levels used:    1
 18381 ;; This function calls:
 18382 ;;		Nothing
 18383 ;; This function is called by:
 18384 ;;		i2_xtoa
 18385 ;; This function uses a non-reentrant model
 18386 ;;
 18387                           
 18388                           	psect	text79
 18389  006476                     __ptext79:
 18390                           	opt callstack 0
 18391  006476                     i2_isalpha:
 18392                           	opt callstack 12
 18393  006476  0E9F               	movlw	159
 18394  006478  6E03               	movwf	??i2_isalpha^0,c
 18395  00647A  0EFF               	movlw	255
 18396  00647C  6E04               	movwf	(??i2_isalpha+1)^0,c
 18397  00647E  0E20               	movlw	32
 18398  006480  1001               	iorwf	i2isalpha@c^0,w,c
 18399  006482  6E05               	movwf	(??i2_isalpha+2)^0,c
 18400  006484  0E00               	movlw	0
 18401  006486  1002               	iorwf	(i2isalpha@c+1)^0,w,c
 18402  006488  6E06               	movwf	(??i2_isalpha+3)^0,c
 18403  00648A  5003               	movf	??i2_isalpha^0,w,c
 18404  00648C  2605               	addwf	(??i2_isalpha+2)^0,f,c
 18405  00648E  5004               	movf	(??i2_isalpha+1)^0,w,c
 18406  006490  2206               	addwfc	(??i2_isalpha+3)^0,f,c
 18407  006492  5006               	movf	(??i2_isalpha+3)^0,w,c
 18408  006494  E10A               	bnz	i2u878_40
 18409  006496  0E1A               	movlw	26
 18410  006498  5C05               	subwf	(??i2_isalpha+2)^0,w,c
 18411  00649A  A0D8               	btfss	status,0,c
 18412  00649C  EF52  F032         	goto	i2u878_41
 18413  0064A0  EF55  F032         	goto	i2u878_40
 18414  0064A4                     i2u878_41:
 18415  0064A4  0E01               	movlw	1
 18416  0064A6  EF56  F032         	goto	i2u879_40
 18417  0064AA                     i2u878_40:
 18418  0064AA  0E00               	movlw	0
 18419  0064AC                     i2u879_40:
 18420  0064AC  6E01               	movwf	?i2_isalpha^0,c
 18421  0064AE  6A02               	clrf	(?i2_isalpha+1)^0,c
 18422  0064B0  0012               	return		;funcret
 18423  0064B2                     __end_ofi2_isalpha:
 18424                           	opt callstack 0
 18425                           
 18426 ;; *************** function i2_utoa *****************
 18427 ;; Defined at:
 18428 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 18429 ;; Parameters:    Size  Location     Type
 18430 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 18431 ;;		 -> vsnprintf@f(6), NULL(0), 
 18432 ;;  d               8   31[COMRAM] unsigned long long 
 18433 ;; Auto vars:     Size  Location     Type
 18434 ;;  utoa            8   51[COMRAM] unsigned long long 
 18435 ;;  utoa            2   59[COMRAM] int 
 18436 ;;  utoa            2   49[COMRAM] int 
 18437 ;;  utoa            2   47[COMRAM] int 
 18438 ;; Return value:  Size  Location     Type
 18439 ;;                  2   29[COMRAM] int 
 18440 ;; Registers used:
 18441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18442 ;; Tracked objects:
 18443 ;;		On entry : 0/0
 18444 ;;		On exit  : 0/0
 18445 ;;		Unchanged: 0/0
 18446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18447 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18448 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18449 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18450 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18451 ;;Total ram usage:       32 bytes
 18452 ;; Hardware stack levels used:    1
 18453 ;; Hardware stack levels required when called:    5
 18454 ;; This function calls:
 18455 ;;		i2___lodiv
 18456 ;;		i2___lomod
 18457 ;;		i2_pad
 18458 ;; This function is called by:
 18459 ;;		i2_vfpfcnvrt
 18460 ;; This function uses a non-reentrant model
 18461 ;;
 18462                           
 18463                           	psect	text80
 18464  003CF8                     __ptext80:
 18465                           	opt callstack 0
 18466  003CF8                     i2_utoa:
 18467                           	opt callstack 8
 18468  003CF8                     
 18469                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
 18470  003CF8  0100               	movlb	0	; () banked
 18471  003CFA  BFB8               	btfsc	(_prec+1)& (0+255),7,b
 18472  003CFC  EF82  F01E         	goto	i2u928_41
 18473  003D00  EF84  F01E         	goto	i2u928_40
 18474  003D04                     i2u928_41:
 18475  003D04  EF85  F01E         	goto	i2l7886
 18476  003D08                     i2u928_40:
 18477  003D08                     
 18478                           ; BSR set to: 0
 18479                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
 18480  003D08  93B9               	bcf	_flags& (0+255),1,b
 18481  003D0A                     i2l7886:
 18482                           
 18483                           ; BSR set to: 0
 18484                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
 18485  003D0A  BFB8               	btfsc	(_prec+1)& (0+255),7,b
 18486  003D0C  EF92  F01E         	goto	i2u929_40
 18487  003D10  51B8               	movf	(_prec+1)& (0+255),w,b
 18488  003D12  E106               	bnz	i2u929_41
 18489  003D14  05B7               	decf	_prec& (0+255),w,b
 18490  003D16  B0D8               	btfsc	status,0,c
 18491  003D18  EF90  F01E         	goto	i2u929_41
 18492  003D1C  EF92  F01E         	goto	i2u929_40
 18493  003D20                     i2u929_41:
 18494  003D20  EF98  F01E         	goto	i2l801
 18495  003D24                     i2u929_40:
 18496  003D24                     
 18497                           ; BSR set to: 0
 18498  003D24  0E00               	movlw	0
 18499  003D26  6E31               	movwf	(i2utoa@p+1)^0,c
 18500  003D28  0E01               	movlw	1
 18501  003D2A  6E30               	movwf	i2utoa@p^0,c
 18502  003D2C  EF9C  F01E         	goto	i2l803
 18503  003D30                     i2l801:
 18504                           
 18505                           ; BSR set to: 0
 18506  003D30  C0B7  F030         	movff	_prec,i2utoa@p
 18507  003D34  C0B8  F031         	movff	_prec+1,i2utoa@p+1
 18508  003D38                     i2l803:
 18509                           
 18510                           ; BSR set to: 0
 18511                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
 18512  003D38  C0B5  F032         	movff	_width,i2utoa@w
 18513  003D3C  C0B6  F033         	movff	_width+1,i2utoa@w+1
 18514                           
 18515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
 18516  003D40  C020  F034         	movff	i2utoa@d,i2utoa@n
 18517  003D44  C021  F035         	movff	i2utoa@d+1,i2utoa@n+1
 18518  003D48  C022  F036         	movff	i2utoa@d+2,i2utoa@n+2
 18519  003D4C  C023  F037         	movff	i2utoa@d+3,i2utoa@n+3
 18520  003D50  C024  F038         	movff	i2utoa@d+4,i2utoa@n+4
 18521  003D54  C025  F039         	movff	i2utoa@d+5,i2utoa@n+5
 18522  003D58  C026  F03A         	movff	i2utoa@d+6,i2utoa@n+6
 18523  003D5C  C027  F03B         	movff	i2utoa@d+7,i2utoa@n+7
 18524  003D60                     
 18525                           ; BSR set to: 0
 18526                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
 18527  003D60  0E00               	movlw	0
 18528  003D62  6E3D               	movwf	(i2utoa@i+1)^0,c
 18529  003D64  0E1F               	movlw	31
 18530  003D66  6E3C               	movwf	i2utoa@i^0,c
 18531  003D68                     
 18532                           ; BSR set to: 0
 18533                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
 18534  003D68  0E00               	movlw	0
 18535  003D6A  0101               	movlb	1	; () banked
 18536  003D6C  6FA8               	movwf	(_dbuf+31)& (0+255),b
 18537                           
 18538                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18539  003D6E  EF2F  F01F         	goto	i2l7904
 18540  003D72                     i2l7894:
 18541                           
 18542                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
 18543  003D72  063C               	decf	i2utoa@i^0,f,c
 18544  003D74  A0D8               	btfss	status,0,c
 18545  003D76  063D               	decf	(i2utoa@i+1)^0,f,c
 18546  003D78                     
 18547                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
 18548  003D78  0E89               	movlw	low _dbuf
 18549  003D7A  243C               	addwf	i2utoa@i^0,w,c
 18550  003D7C  6ED9               	movwf	fsr2l,c
 18551  003D7E  0E01               	movlw	high _dbuf
 18552  003D80  203D               	addwfc	(i2utoa@i+1)^0,w,c
 18553  003D82  6EDA               	movwf	fsr2h,c
 18554  003D84  C034  F001         	movff	i2utoa@n,i2___lomod@dividend
 18555  003D88  C035  F002         	movff	i2utoa@n+1,i2___lomod@dividend+1
 18556  003D8C  C036  F003         	movff	i2utoa@n+2,i2___lomod@dividend+2
 18557  003D90  C037  F004         	movff	i2utoa@n+3,i2___lomod@dividend+3
 18558  003D94  C038  F005         	movff	i2utoa@n+4,i2___lomod@dividend+4
 18559  003D98  C039  F006         	movff	i2utoa@n+5,i2___lomod@dividend+5
 18560  003D9C  C03A  F007         	movff	i2utoa@n+6,i2___lomod@dividend+6
 18561  003DA0  C03B  F008         	movff	i2utoa@n+7,i2___lomod@dividend+7
 18562  003DA4  0E0A               	movlw	10
 18563  003DA6  6E09               	movwf	i2___lomod@divisor^0,c
 18564  003DA8  0E00               	movlw	0
 18565  003DAA  6E0A               	movwf	(i2___lomod@divisor+1)^0,c
 18566  003DAC  0E00               	movlw	0
 18567  003DAE  6E0B               	movwf	(i2___lomod@divisor+2)^0,c
 18568  003DB0  0E00               	movlw	0
 18569  003DB2  6E0C               	movwf	(i2___lomod@divisor+3)^0,c
 18570  003DB4  0E00               	movlw	0
 18571  003DB6  6E0D               	movwf	(i2___lomod@divisor+4)^0,c
 18572  003DB8  0E00               	movlw	0
 18573  003DBA  6E0E               	movwf	(i2___lomod@divisor+5)^0,c
 18574  003DBC  0E00               	movlw	0
 18575  003DBE  6E0F               	movwf	(i2___lomod@divisor+6)^0,c
 18576  003DC0  0E00               	movlw	0
 18577  003DC2  6E10               	movwf	(i2___lomod@divisor+7)^0,c
 18578  003DC4  EC9E  F02B         	call	i2___lomod	;wreg free
 18579  003DC8  C001  F028         	movff	?i2___lomod,??i2_utoa
 18580  003DCC  C002  F029         	movff	?i2___lomod+1,??i2_utoa+1
 18581  003DD0  C003  F02A         	movff	?i2___lomod+2,??i2_utoa+2
 18582  003DD4  C004  F02B         	movff	?i2___lomod+3,??i2_utoa+3
 18583  003DD8  C005  F02C         	movff	?i2___lomod+4,??i2_utoa+4
 18584  003DDC  C006  F02D         	movff	?i2___lomod+5,??i2_utoa+5
 18585  003DE0  C007  F02E         	movff	?i2___lomod+6,??i2_utoa+6
 18586  003DE4  C008  F02F         	movff	?i2___lomod+7,??i2_utoa+7
 18587  003DE8  5028               	movf	??i2_utoa^0,w,c
 18588  003DEA  0F30               	addlw	48
 18589  003DEC  6EDF               	movwf	indf2,c
 18590  003DEE                     
 18591                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
 18592  003DEE  0630               	decf	i2utoa@p^0,f,c
 18593  003DF0  A0D8               	btfss	status,0,c
 18594  003DF2  0631               	decf	(i2utoa@p+1)^0,f,c
 18595  003DF4                     
 18596                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
 18597  003DF4  0632               	decf	i2utoa@w^0,f,c
 18598  003DF6  A0D8               	btfss	status,0,c
 18599  003DF8  0633               	decf	(i2utoa@w+1)^0,f,c
 18600  003DFA                     
 18601                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
 18602  003DFA  C034  F001         	movff	i2utoa@n,i2___lodiv@dividend
 18603  003DFE  C035  F002         	movff	i2utoa@n+1,i2___lodiv@dividend+1
 18604  003E02  C036  F003         	movff	i2utoa@n+2,i2___lodiv@dividend+2
 18605  003E06  C037  F004         	movff	i2utoa@n+3,i2___lodiv@dividend+3
 18606  003E0A  C038  F005         	movff	i2utoa@n+4,i2___lodiv@dividend+4
 18607  003E0E  C039  F006         	movff	i2utoa@n+5,i2___lodiv@dividend+5
 18608  003E12  C03A  F007         	movff	i2utoa@n+6,i2___lodiv@dividend+6
 18609  003E16  C03B  F008         	movff	i2utoa@n+7,i2___lodiv@dividend+7
 18610  003E1A  0E0A               	movlw	10
 18611  003E1C  6E09               	movwf	i2___lodiv@divisor^0,c
 18612  003E1E  0E00               	movlw	0
 18613  003E20  6E0A               	movwf	(i2___lodiv@divisor+1)^0,c
 18614  003E22  0E00               	movlw	0
 18615  003E24  6E0B               	movwf	(i2___lodiv@divisor+2)^0,c
 18616  003E26  0E00               	movlw	0
 18617  003E28  6E0C               	movwf	(i2___lodiv@divisor+3)^0,c
 18618  003E2A  0E00               	movlw	0
 18619  003E2C  6E0D               	movwf	(i2___lodiv@divisor+4)^0,c
 18620  003E2E  0E00               	movlw	0
 18621  003E30  6E0E               	movwf	(i2___lodiv@divisor+5)^0,c
 18622  003E32  0E00               	movlw	0
 18623  003E34  6E0F               	movwf	(i2___lodiv@divisor+6)^0,c
 18624  003E36  0E00               	movlw	0
 18625  003E38  6E10               	movwf	(i2___lodiv@divisor+7)^0,c
 18626  003E3A  ECD2  F029         	call	i2___lodiv	;wreg free
 18627  003E3E  C001  F034         	movff	?i2___lodiv,i2utoa@n
 18628  003E42  C002  F035         	movff	?i2___lodiv+1,i2utoa@n+1
 18629  003E46  C003  F036         	movff	?i2___lodiv+2,i2utoa@n+2
 18630  003E4A  C004  F037         	movff	?i2___lodiv+3,i2utoa@n+3
 18631  003E4E  C005  F038         	movff	?i2___lodiv+4,i2utoa@n+4
 18632  003E52  C006  F039         	movff	?i2___lodiv+5,i2utoa@n+5
 18633  003E56  C007  F03A         	movff	?i2___lodiv+6,i2utoa@n+6
 18634  003E5A  C008  F03B         	movff	?i2___lodiv+7,i2utoa@n+7
 18635  003E5E                     i2l7904:
 18636                           
 18637                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18638  003E5E  503C               	movf	i2utoa@i^0,w,c
 18639  003E60  103D               	iorwf	(i2utoa@i+1)^0,w,c
 18640  003E62  B4D8               	btfsc	status,2,c
 18641  003E64  EF36  F01F         	goto	i2u930_41
 18642  003E68  EF38  F01F         	goto	i2u930_40
 18643  003E6C                     i2u930_41:
 18644  003E6C  EF69  F01F         	goto	i2l7914
 18645  003E70                     i2u930_40:
 18646  003E70  5034               	movf	i2utoa@n^0,w,c
 18647  003E72  1035               	iorwf	(i2utoa@n+1)^0,w,c
 18648  003E74  1036               	iorwf	(i2utoa@n+2)^0,w,c
 18649  003E76  1037               	iorwf	(i2utoa@n+3)^0,w,c
 18650  003E78  1038               	iorwf	(i2utoa@n+4)^0,w,c
 18651  003E7A  1039               	iorwf	(i2utoa@n+5)^0,w,c
 18652  003E7C  103A               	iorwf	(i2utoa@n+6)^0,w,c
 18653  003E7E  103B               	iorwf	(i2utoa@n+7)^0,w,c
 18654  003E80  A4D8               	btfss	status,2,c
 18655  003E82  EF45  F01F         	goto	i2u931_41
 18656  003E86  EF47  F01F         	goto	i2u931_40
 18657  003E8A                     i2u931_41:
 18658  003E8A  EFB9  F01E         	goto	i2l7894
 18659  003E8E                     i2u931_40:
 18660  003E8E  BE31               	btfsc	(i2utoa@p+1)^0,7,c
 18661  003E90  EF54  F01F         	goto	i2u932_40
 18662  003E94  5031               	movf	(i2utoa@p+1)^0,w,c
 18663  003E96  E106               	bnz	i2u932_41
 18664  003E98  0430               	decf	i2utoa@p^0,w,c
 18665  003E9A  B0D8               	btfsc	status,0,c
 18666  003E9C  EF52  F01F         	goto	i2u932_41
 18667  003EA0  EF54  F01F         	goto	i2u932_40
 18668  003EA4                     i2u932_41:
 18669  003EA4  EFB9  F01E         	goto	i2l7894
 18670  003EA8                     i2u932_40:
 18671  003EA8  BE33               	btfsc	(i2utoa@w+1)^0,7,c
 18672  003EAA  EF5F  F01F         	goto	i2u933_41
 18673  003EAE  5033               	movf	(i2utoa@w+1)^0,w,c
 18674  003EB0  E108               	bnz	i2u933_40
 18675  003EB2  0432               	decf	i2utoa@w^0,w,c
 18676  003EB4  A0D8               	btfss	status,0,c
 18677  003EB6  EF5F  F01F         	goto	i2u933_41
 18678  003EBA  EF61  F01F         	goto	i2u933_40
 18679  003EBE                     i2u933_41:
 18680  003EBE  EF69  F01F         	goto	i2l7914
 18681  003EC2                     i2u933_40:
 18682  003EC2  0100               	movlb	0	; () banked
 18683  003EC4  B3B9               	btfsc	_flags& (0+255),1,b
 18684  003EC6  EF67  F01F         	goto	i2u934_41
 18685  003ECA  EF69  F01F         	goto	i2u934_40
 18686  003ECE                     i2u934_41:
 18687  003ECE  EFB9  F01E         	goto	i2l7894
 18688  003ED2                     i2u934_40:
 18689  003ED2                     i2l7914:
 18690                           
 18691                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
 18692  003ED2  C01E  F013         	movff	i2utoa@fp,i2pad@fp
 18693  003ED6  C01F  F014         	movff	i2utoa@fp+1,i2pad@fp+1
 18694  003EDA  0E89               	movlw	low _dbuf
 18695  003EDC  243C               	addwf	i2utoa@i^0,w,c
 18696  003EDE  6E15               	movwf	i2pad@buf^0,c
 18697  003EE0  0E01               	movlw	high _dbuf
 18698  003EE2  203D               	addwfc	(i2utoa@i+1)^0,w,c
 18699  003EE4  6E16               	movwf	(i2pad@buf+1)^0,c
 18700  003EE6  C032  F017         	movff	i2utoa@w,i2pad@p
 18701  003EEA  C033  F018         	movff	i2utoa@w+1,i2pad@p+1
 18702  003EEE  EC36  F02D         	call	i2_pad	;wreg free
 18703  003EF2  C013  F01E         	movff	?i2_pad,?i2_utoa
 18704  003EF6  C014  F01F         	movff	?i2_pad+1,?i2_utoa+1
 18705  003EFA  0012               	return		;funcret
 18706  003EFC                     __end_ofi2_utoa:
 18707                           	opt callstack 0
 18708                           
 18709 ;; *************** function i2___lomod *****************
 18710 ;; Defined at:
 18711 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
 18712 ;; Parameters:    Size  Location     Type
 18713 ;;  dividend        8    0[COMRAM] unsigned long long 
 18714 ;;  divisor         8    8[COMRAM] unsigned long long 
 18715 ;; Auto vars:     Size  Location     Type
 18716 ;;  __lomod         1   16[COMRAM] unsigned char 
 18717 ;; Return value:  Size  Location     Type
 18718 ;;                  8    0[COMRAM] unsigned long long 
 18719 ;; Registers used:
 18720 ;;		wreg, status,2, status,0
 18721 ;; Tracked objects:
 18722 ;;		On entry : 0/0
 18723 ;;		On exit  : 0/0
 18724 ;;		Unchanged: 0/0
 18725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18726 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18727 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18729 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18730 ;;Total ram usage:       17 bytes
 18731 ;; Hardware stack levels used:    1
 18732 ;; This function calls:
 18733 ;;		Nothing
 18734 ;; This function is called by:
 18735 ;;		i2_utoa
 18736 ;; This function uses a non-reentrant model
 18737 ;;
 18738                           
 18739                           	psect	text81
 18740  00573C                     __ptext81:
 18741                           	opt callstack 0
 18742  00573C                     i2___lomod:
 18743                           	opt callstack 12
 18744  00573C  5009               	movf	i2___lomod@divisor^0,w,c
 18745  00573E  100A               	iorwf	(i2___lomod@divisor+1)^0,w,c
 18746  005740  100B               	iorwf	(i2___lomod@divisor+2)^0,w,c
 18747  005742  100C               	iorwf	(i2___lomod@divisor+3)^0,w,c
 18748  005744  100D               	iorwf	(i2___lomod@divisor+4)^0,w,c
 18749  005746  100E               	iorwf	(i2___lomod@divisor+5)^0,w,c
 18750  005748  100F               	iorwf	(i2___lomod@divisor+6)^0,w,c
 18751  00574A  1010               	iorwf	(i2___lomod@divisor+7)^0,w,c
 18752  00574C  B4D8               	btfsc	status,2,c
 18753  00574E  EFAB  F02B         	goto	i2u874_41
 18754  005752  EFAD  F02B         	goto	i2u874_40
 18755  005756                     i2u874_41:
 18756  005756  EFF5  F02B         	goto	i2l1374
 18757  00575A                     i2u874_40:
 18758  00575A  0E01               	movlw	1
 18759  00575C  6E11               	movwf	i2___lomod@counter^0,c
 18760  00575E  EFBB  F02B         	goto	i2l7646
 18761  005762                     i2l7644:
 18762  005762  90D8               	bcf	status,0,c
 18763  005764  3609               	rlcf	i2___lomod@divisor^0,f,c
 18764  005766  360A               	rlcf	(i2___lomod@divisor+1)^0,f,c
 18765  005768  360B               	rlcf	(i2___lomod@divisor+2)^0,f,c
 18766  00576A  360C               	rlcf	(i2___lomod@divisor+3)^0,f,c
 18767  00576C  360D               	rlcf	(i2___lomod@divisor+4)^0,f,c
 18768  00576E  360E               	rlcf	(i2___lomod@divisor+5)^0,f,c
 18769  005770  360F               	rlcf	(i2___lomod@divisor+6)^0,f,c
 18770  005772  3610               	rlcf	(i2___lomod@divisor+7)^0,f,c
 18771  005774  2A11               	incf	i2___lomod@counter^0,f,c
 18772  005776                     i2l7646:
 18773  005776  AE10               	btfss	(i2___lomod@divisor+7)^0,7,c
 18774  005778  EFC0  F02B         	goto	i2u875_41
 18775  00577C  EFC2  F02B         	goto	i2u875_40
 18776  005780                     i2u875_41:
 18777  005780  EFB1  F02B         	goto	i2l7644
 18778  005784                     i2u875_40:
 18779  005784                     i2l7648:
 18780  005784  5009               	movf	i2___lomod@divisor^0,w,c
 18781  005786  5C01               	subwf	i2___lomod@dividend^0,w,c
 18782  005788  500A               	movf	(i2___lomod@divisor+1)^0,w,c
 18783  00578A  5802               	subwfb	(i2___lomod@dividend+1)^0,w,c
 18784  00578C  500B               	movf	(i2___lomod@divisor+2)^0,w,c
 18785  00578E  5803               	subwfb	(i2___lomod@dividend+2)^0,w,c
 18786  005790  500C               	movf	(i2___lomod@divisor+3)^0,w,c
 18787  005792  5804               	subwfb	(i2___lomod@dividend+3)^0,w,c
 18788  005794  500D               	movf	(i2___lomod@divisor+4)^0,w,c
 18789  005796  5805               	subwfb	(i2___lomod@dividend+4)^0,w,c
 18790  005798  500E               	movf	(i2___lomod@divisor+5)^0,w,c
 18791  00579A  5806               	subwfb	(i2___lomod@dividend+5)^0,w,c
 18792  00579C  500F               	movf	(i2___lomod@divisor+6)^0,w,c
 18793  00579E  5807               	subwfb	(i2___lomod@dividend+6)^0,w,c
 18794  0057A0  5010               	movf	(i2___lomod@divisor+7)^0,w,c
 18795  0057A2  5808               	subwfb	(i2___lomod@dividend+7)^0,w,c
 18796  0057A4  A0D8               	btfss	status,0,c
 18797  0057A6  EFD7  F02B         	goto	i2u876_41
 18798  0057AA  EFD9  F02B         	goto	i2u876_40
 18799  0057AE                     i2u876_41:
 18800  0057AE  EFE9  F02B         	goto	i2l7652
 18801  0057B2                     i2u876_40:
 18802  0057B2  5009               	movf	i2___lomod@divisor^0,w,c
 18803  0057B4  5E01               	subwf	i2___lomod@dividend^0,f,c
 18804  0057B6  500A               	movf	(i2___lomod@divisor+1)^0,w,c
 18805  0057B8  5A02               	subwfb	(i2___lomod@dividend+1)^0,f,c
 18806  0057BA  500B               	movf	(i2___lomod@divisor+2)^0,w,c
 18807  0057BC  5A03               	subwfb	(i2___lomod@dividend+2)^0,f,c
 18808  0057BE  500C               	movf	(i2___lomod@divisor+3)^0,w,c
 18809  0057C0  5A04               	subwfb	(i2___lomod@dividend+3)^0,f,c
 18810  0057C2  500D               	movf	(i2___lomod@divisor+4)^0,w,c
 18811  0057C4  5A05               	subwfb	(i2___lomod@dividend+4)^0,f,c
 18812  0057C6  500E               	movf	(i2___lomod@divisor+5)^0,w,c
 18813  0057C8  5A06               	subwfb	(i2___lomod@dividend+5)^0,f,c
 18814  0057CA  500F               	movf	(i2___lomod@divisor+6)^0,w,c
 18815  0057CC  5A07               	subwfb	(i2___lomod@dividend+6)^0,f,c
 18816  0057CE  5010               	movf	(i2___lomod@divisor+7)^0,w,c
 18817  0057D0  5A08               	subwfb	(i2___lomod@dividend+7)^0,f,c
 18818  0057D2                     i2l7652:
 18819  0057D2  90D8               	bcf	status,0,c
 18820  0057D4  3210               	rrcf	(i2___lomod@divisor+7)^0,f,c
 18821  0057D6  320F               	rrcf	(i2___lomod@divisor+6)^0,f,c
 18822  0057D8  320E               	rrcf	(i2___lomod@divisor+5)^0,f,c
 18823  0057DA  320D               	rrcf	(i2___lomod@divisor+4)^0,f,c
 18824  0057DC  320C               	rrcf	(i2___lomod@divisor+3)^0,f,c
 18825  0057DE  320B               	rrcf	(i2___lomod@divisor+2)^0,f,c
 18826  0057E0  320A               	rrcf	(i2___lomod@divisor+1)^0,f,c
 18827  0057E2  3209               	rrcf	i2___lomod@divisor^0,f,c
 18828  0057E4  2E11               	decfsz	i2___lomod@counter^0,f,c
 18829  0057E6  EFC2  F02B         	goto	i2l7648
 18830  0057EA                     i2l1374:
 18831  0057EA  C001  F001         	movff	i2___lomod@dividend,?i2___lomod
 18832  0057EE  C002  F002         	movff	i2___lomod@dividend+1,?i2___lomod+1
 18833  0057F2  C003  F003         	movff	i2___lomod@dividend+2,?i2___lomod+2
 18834  0057F6  C004  F004         	movff	i2___lomod@dividend+3,?i2___lomod+3
 18835  0057FA  C005  F005         	movff	i2___lomod@dividend+4,?i2___lomod+4
 18836  0057FE  C006  F006         	movff	i2___lomod@dividend+5,?i2___lomod+5
 18837  005802  C007  F007         	movff	i2___lomod@dividend+6,?i2___lomod+6
 18838  005806  C008  F008         	movff	i2___lomod@dividend+7,?i2___lomod+7
 18839  00580A  0012               	return		;funcret
 18840  00580C                     __end_ofi2___lomod:
 18841                           	opt callstack 0
 18842                           
 18843 ;; *************** function i2___lodiv *****************
 18844 ;; Defined at:
 18845 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
 18846 ;; Parameters:    Size  Location     Type
 18847 ;;  dividend        8    0[COMRAM] unsigned long long 
 18848 ;;  divisor         8    8[COMRAM] unsigned long long 
 18849 ;; Auto vars:     Size  Location     Type
 18850 ;;  __lodiv         8   16[COMRAM] unsigned long long 
 18851 ;;  __lodiv         1   24[COMRAM] unsigned char 
 18852 ;; Return value:  Size  Location     Type
 18853 ;;                  8    0[COMRAM] unsigned long long 
 18854 ;; Registers used:
 18855 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18856 ;; Tracked objects:
 18857 ;;		On entry : 0/0
 18858 ;;		On exit  : 0/0
 18859 ;;		Unchanged: 0/0
 18860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18861 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18862 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18864 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18865 ;;Total ram usage:       25 bytes
 18866 ;; Hardware stack levels used:    1
 18867 ;; This function calls:
 18868 ;;		Nothing
 18869 ;; This function is called by:
 18870 ;;		i2_utoa
 18871 ;; This function uses a non-reentrant model
 18872 ;;
 18873                           
 18874                           	psect	text82
 18875  0053A4                     __ptext82:
 18876                           	opt callstack 0
 18877  0053A4                     i2___lodiv:
 18878                           	opt callstack 12
 18879  0053A4  EE20  F011         	lfsr	2,i2___lodiv@quotient
 18880  0053A8  0E07               	movlw	7
 18881  0053AA                     i2u870_41:
 18882  0053AA  6ADE               	clrf	postinc2,c
 18883  0053AC  06E8               	decf	wreg,f,c
 18884  0053AE  E2FD               	bc	i2u870_41
 18885  0053B0  5009               	movf	i2___lodiv@divisor^0,w,c
 18886  0053B2  100A               	iorwf	(i2___lodiv@divisor+1)^0,w,c
 18887  0053B4  100B               	iorwf	(i2___lodiv@divisor+2)^0,w,c
 18888  0053B6  100C               	iorwf	(i2___lodiv@divisor+3)^0,w,c
 18889  0053B8  100D               	iorwf	(i2___lodiv@divisor+4)^0,w,c
 18890  0053BA  100E               	iorwf	(i2___lodiv@divisor+5)^0,w,c
 18891  0053BC  100F               	iorwf	(i2___lodiv@divisor+6)^0,w,c
 18892  0053BE  1010               	iorwf	(i2___lodiv@divisor+7)^0,w,c
 18893  0053C0  B4D8               	btfsc	status,2,c
 18894  0053C2  EFE5  F029         	goto	i2u871_41
 18895  0053C6  EFE7  F029         	goto	i2u871_40
 18896  0053CA                     i2u871_41:
 18897  0053CA  EF39  F02A         	goto	i2l1364
 18898  0053CE                     i2u871_40:
 18899  0053CE  0E01               	movlw	1
 18900  0053D0  6E19               	movwf	i2___lodiv@counter^0,c
 18901  0053D2  EFF5  F029         	goto	i2l7626
 18902  0053D6                     i2l7624:
 18903  0053D6  90D8               	bcf	status,0,c
 18904  0053D8  3609               	rlcf	i2___lodiv@divisor^0,f,c
 18905  0053DA  360A               	rlcf	(i2___lodiv@divisor+1)^0,f,c
 18906  0053DC  360B               	rlcf	(i2___lodiv@divisor+2)^0,f,c
 18907  0053DE  360C               	rlcf	(i2___lodiv@divisor+3)^0,f,c
 18908  0053E0  360D               	rlcf	(i2___lodiv@divisor+4)^0,f,c
 18909  0053E2  360E               	rlcf	(i2___lodiv@divisor+5)^0,f,c
 18910  0053E4  360F               	rlcf	(i2___lodiv@divisor+6)^0,f,c
 18911  0053E6  3610               	rlcf	(i2___lodiv@divisor+7)^0,f,c
 18912  0053E8  2A19               	incf	i2___lodiv@counter^0,f,c
 18913  0053EA                     i2l7626:
 18914  0053EA  AE10               	btfss	(i2___lodiv@divisor+7)^0,7,c
 18915  0053EC  EFFA  F029         	goto	i2u872_41
 18916  0053F0  EFFC  F029         	goto	i2u872_40
 18917  0053F4                     i2u872_41:
 18918  0053F4  EFEB  F029         	goto	i2l7624
 18919  0053F8                     i2u872_40:
 18920  0053F8                     i2l7628:
 18921  0053F8  90D8               	bcf	status,0,c
 18922  0053FA  3611               	rlcf	i2___lodiv@quotient^0,f,c
 18923  0053FC  3612               	rlcf	(i2___lodiv@quotient+1)^0,f,c
 18924  0053FE  3613               	rlcf	(i2___lodiv@quotient+2)^0,f,c
 18925  005400  3614               	rlcf	(i2___lodiv@quotient+3)^0,f,c
 18926  005402  3615               	rlcf	(i2___lodiv@quotient+4)^0,f,c
 18927  005404  3616               	rlcf	(i2___lodiv@quotient+5)^0,f,c
 18928  005406  3617               	rlcf	(i2___lodiv@quotient+6)^0,f,c
 18929  005408  3618               	rlcf	(i2___lodiv@quotient+7)^0,f,c
 18930  00540A  5009               	movf	i2___lodiv@divisor^0,w,c
 18931  00540C  5C01               	subwf	i2___lodiv@dividend^0,w,c
 18932  00540E  500A               	movf	(i2___lodiv@divisor+1)^0,w,c
 18933  005410  5802               	subwfb	(i2___lodiv@dividend+1)^0,w,c
 18934  005412  500B               	movf	(i2___lodiv@divisor+2)^0,w,c
 18935  005414  5803               	subwfb	(i2___lodiv@dividend+2)^0,w,c
 18936  005416  500C               	movf	(i2___lodiv@divisor+3)^0,w,c
 18937  005418  5804               	subwfb	(i2___lodiv@dividend+3)^0,w,c
 18938  00541A  500D               	movf	(i2___lodiv@divisor+4)^0,w,c
 18939  00541C  5805               	subwfb	(i2___lodiv@dividend+4)^0,w,c
 18940  00541E  500E               	movf	(i2___lodiv@divisor+5)^0,w,c
 18941  005420  5806               	subwfb	(i2___lodiv@dividend+5)^0,w,c
 18942  005422  500F               	movf	(i2___lodiv@divisor+6)^0,w,c
 18943  005424  5807               	subwfb	(i2___lodiv@dividend+6)^0,w,c
 18944  005426  5010               	movf	(i2___lodiv@divisor+7)^0,w,c
 18945  005428  5808               	subwfb	(i2___lodiv@dividend+7)^0,w,c
 18946  00542A  A0D8               	btfss	status,0,c
 18947  00542C  EF1A  F02A         	goto	i2u873_41
 18948  005430  EF1C  F02A         	goto	i2u873_40
 18949  005434                     i2u873_41:
 18950  005434  EF2D  F02A         	goto	i2l7636
 18951  005438                     i2u873_40:
 18952  005438  5009               	movf	i2___lodiv@divisor^0,w,c
 18953  00543A  5E01               	subwf	i2___lodiv@dividend^0,f,c
 18954  00543C  500A               	movf	(i2___lodiv@divisor+1)^0,w,c
 18955  00543E  5A02               	subwfb	(i2___lodiv@dividend+1)^0,f,c
 18956  005440  500B               	movf	(i2___lodiv@divisor+2)^0,w,c
 18957  005442  5A03               	subwfb	(i2___lodiv@dividend+2)^0,f,c
 18958  005444  500C               	movf	(i2___lodiv@divisor+3)^0,w,c
 18959  005446  5A04               	subwfb	(i2___lodiv@dividend+3)^0,f,c
 18960  005448  500D               	movf	(i2___lodiv@divisor+4)^0,w,c
 18961  00544A  5A05               	subwfb	(i2___lodiv@dividend+4)^0,f,c
 18962  00544C  500E               	movf	(i2___lodiv@divisor+5)^0,w,c
 18963  00544E  5A06               	subwfb	(i2___lodiv@dividend+5)^0,f,c
 18964  005450  500F               	movf	(i2___lodiv@divisor+6)^0,w,c
 18965  005452  5A07               	subwfb	(i2___lodiv@dividend+6)^0,f,c
 18966  005454  5010               	movf	(i2___lodiv@divisor+7)^0,w,c
 18967  005456  5A08               	subwfb	(i2___lodiv@dividend+7)^0,f,c
 18968  005458  8011               	bsf	i2___lodiv@quotient^0,0,c
 18969  00545A                     i2l7636:
 18970  00545A  90D8               	bcf	status,0,c
 18971  00545C  3210               	rrcf	(i2___lodiv@divisor+7)^0,f,c
 18972  00545E  320F               	rrcf	(i2___lodiv@divisor+6)^0,f,c
 18973  005460  320E               	rrcf	(i2___lodiv@divisor+5)^0,f,c
 18974  005462  320D               	rrcf	(i2___lodiv@divisor+4)^0,f,c
 18975  005464  320C               	rrcf	(i2___lodiv@divisor+3)^0,f,c
 18976  005466  320B               	rrcf	(i2___lodiv@divisor+2)^0,f,c
 18977  005468  320A               	rrcf	(i2___lodiv@divisor+1)^0,f,c
 18978  00546A  3209               	rrcf	i2___lodiv@divisor^0,f,c
 18979  00546C  2E19               	decfsz	i2___lodiv@counter^0,f,c
 18980  00546E  EFFC  F029         	goto	i2l7628
 18981  005472                     i2l1364:
 18982  005472  C011  F001         	movff	i2___lodiv@quotient,?i2___lodiv
 18983  005476  C012  F002         	movff	i2___lodiv@quotient+1,?i2___lodiv+1
 18984  00547A  C013  F003         	movff	i2___lodiv@quotient+2,?i2___lodiv+2
 18985  00547E  C014  F004         	movff	i2___lodiv@quotient+3,?i2___lodiv+3
 18986  005482  C015  F005         	movff	i2___lodiv@quotient+4,?i2___lodiv+4
 18987  005486  C016  F006         	movff	i2___lodiv@quotient+5,?i2___lodiv+5
 18988  00548A  C017  F007         	movff	i2___lodiv@quotient+6,?i2___lodiv+6
 18989  00548E  C018  F008         	movff	i2___lodiv@quotient+7,?i2___lodiv+7
 18990  005492  0012               	return		;funcret
 18991  005494                     __end_ofi2___lodiv:
 18992                           	opt callstack 0
 18993                           
 18994 ;; *************** function i2_strncmp *****************
 18995 ;; Defined at:
 18996 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
 18997 ;; Parameters:    Size  Location     Type
 18998 ;;  _l              2    0[COMRAM] PTR const unsigned char 
 18999 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
 19000 ;;		 -> STR_4(22), STR_3(12), STR_1(13), 
 19001 ;;  _r              2    2[COMRAM] PTR const unsigned char 
 19002 ;;		 -> STR_105(3), STR_101(3), STR_96(3), STR_92(3), 
 19003 ;;		 -> STR_87(4), STR_83(4), STR_78(3), STR_73(3), 
 19004 ;;		 -> STR_68(4), STR_63(3), STR_58(3), STR_53(4), 
 19005 ;;		 -> STR_48(3), STR_43(3), STR_38(4), STR_33(3), 
 19006 ;;		 -> STR_29(3), STR_24(3), STR_20(3), STR_15(4), 
 19007 ;;		 -> STR_11(4), 
 19008 ;;  n               2    4[COMRAM] unsigned int 
 19009 ;; Auto vars:     Size  Location     Type
 19010 ;;  strncmp         2    9[COMRAM] PTR const unsigned char 
 19011 ;;		 -> STR_105(3), STR_101(3), STR_96(3), STR_92(3), 
 19012 ;;		 -> STR_87(4), STR_83(4), STR_78(3), STR_73(3), 
 19013 ;;		 -> STR_68(4), STR_63(3), STR_58(3), STR_53(4), 
 19014 ;;		 -> STR_48(3), STR_43(3), STR_38(4), STR_33(3), 
 19015 ;;		 -> STR_29(3), STR_24(3), STR_20(3), STR_15(4), 
 19016 ;;		 -> STR_11(4), 
 19017 ;;  strncmp         2    7[COMRAM] PTR const unsigned char 
 19018 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
 19019 ;;		 -> STR_4(22), STR_3(12), STR_1(13), 
 19020 ;; Return value:  Size  Location     Type
 19021 ;;                  2    0[COMRAM] int 
 19022 ;; Registers used:
 19023 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 19024 ;; Tracked objects:
 19025 ;;		On entry : 0/0
 19026 ;;		On exit  : 0/0
 19027 ;;		Unchanged: 0/0
 19028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19029 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19030 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19031 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19032 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19033 ;;Total ram usage:       11 bytes
 19034 ;; Hardware stack levels used:    1
 19035 ;; This function calls:
 19036 ;;		Nothing
 19037 ;; This function is called by:
 19038 ;;		i2_vfpfcnvrt
 19039 ;; This function uses a non-reentrant model
 19040 ;;
 19041                           
 19042                           	psect	text83
 19043  005580                     __ptext83:
 19044                           	opt callstack 0
 19045  005580                     i2_strncmp:
 19046                           	opt callstack 13
 19047  005580  C001  F008         	movff	i2strncmp@_l,i2strncmp@l
 19048  005584  C002  F009         	movff	i2strncmp@_l+1,i2strncmp@l+1
 19049  005588  C003  F00A         	movff	i2strncmp@_r,i2strncmp@r
 19050  00558C  C004  F00B         	movff	i2strncmp@_r+1,i2strncmp@r+1
 19051  005590  0605               	decf	i2strncmp@n^0,f,c
 19052  005592  A0D8               	btfss	status,0,c
 19053  005594  0606               	decf	(i2strncmp@n+1)^0,f,c
 19054  005596  2805               	incf	i2strncmp@n^0,w,c
 19055  005598  E106               	bnz	i2u964_41
 19056  00559A  2806               	incf	(i2strncmp@n+1)^0,w,c
 19057  00559C  A4D8               	btfss	status,2,c
 19058  00559E  EFD3  F02A         	goto	i2u964_41
 19059  0055A2  EFD5  F02A         	goto	i2u964_40
 19060  0055A6                     i2u964_41:
 19061  0055A6  EFE2  F02A         	goto	i2l8034
 19062  0055AA                     i2u964_40:
 19063  0055AA  0E00               	movlw	0
 19064  0055AC  6E02               	movwf	(?i2_strncmp+1)^0,c
 19065  0055AE  0E00               	movlw	0
 19066  0055B0  6E01               	movwf	?i2_strncmp^0,c
 19067  0055B2  EF34  F02B         	goto	i2l1705
 19068  0055B6                     i2l8032:
 19069  0055B6  4A08               	infsnz	i2strncmp@l^0,f,c
 19070  0055B8  2A09               	incf	(i2strncmp@l+1)^0,f,c
 19071  0055BA  4A0A               	infsnz	i2strncmp@r^0,f,c
 19072  0055BC  2A0B               	incf	(i2strncmp@r+1)^0,f,c
 19073  0055BE  0605               	decf	i2strncmp@n^0,f,c
 19074  0055C0  A0D8               	btfss	status,0,c
 19075  0055C2  0606               	decf	(i2strncmp@n+1)^0,f,c
 19076  0055C4                     i2l8034:
 19077  0055C4  C008  FFF6         	movff	i2strncmp@l,tblptrl
 19078  0055C8  C009  FFF7         	movff	i2strncmp@l+1,tblptrh
 19079  0055CC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19080  0055CC  6AF8               	clrf	tblptru,c
 19081  0055CE                     	endif
 19082  0055CE                     	if	0	;tblptru may be non-zero
 19083  0055CE                     	endif
 19084  0055CE  0008               	tblrd		*
 19085  0055D0  50F5               	movf	tablat,w,c
 19086  0055D2  0900               	iorlw	0
 19087  0055D4  B4D8               	btfsc	status,2,c
 19088  0055D6  EFEF  F02A         	goto	i2u965_41
 19089  0055DA  EFF1  F02A         	goto	i2u965_40
 19090  0055DE                     i2u965_41:
 19091  0055DE  EF20  F02B         	goto	i2l8042
 19092  0055E2                     i2u965_40:
 19093  0055E2  C00A  FFF6         	movff	i2strncmp@r,tblptrl
 19094  0055E6  C00B  FFF7         	movff	i2strncmp@r+1,tblptrh
 19095  0055EA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19096  0055EA  6AF8               	clrf	tblptru,c
 19097  0055EC                     	endif
 19098  0055EC                     	if	0	;tblptru may be non-zero
 19099  0055EC                     	endif
 19100  0055EC  0008               	tblrd		*
 19101  0055EE  50F5               	movf	tablat,w,c
 19102  0055F0  0900               	iorlw	0
 19103  0055F2  B4D8               	btfsc	status,2,c
 19104  0055F4  EFFE  F02A         	goto	i2u966_41
 19105  0055F8  EF00  F02B         	goto	i2u966_40
 19106  0055FC                     i2u966_41:
 19107  0055FC  EF20  F02B         	goto	i2l8042
 19108  005600                     i2u966_40:
 19109  005600  5005               	movf	i2strncmp@n^0,w,c
 19110  005602  1006               	iorwf	(i2strncmp@n+1)^0,w,c
 19111  005604  B4D8               	btfsc	status,2,c
 19112  005606  EF07  F02B         	goto	i2u967_41
 19113  00560A  EF09  F02B         	goto	i2u967_40
 19114  00560E                     i2u967_41:
 19115  00560E  EF20  F02B         	goto	i2l8042
 19116  005612                     i2u967_40:
 19117  005612  C008  FFF6         	movff	i2strncmp@l,tblptrl
 19118  005616  C009  FFF7         	movff	i2strncmp@l+1,tblptrh
 19119  00561A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19120  00561A  6AF8               	clrf	tblptru,c
 19121  00561C                     	endif
 19122  00561C                     	if	0	;tblptru may be non-zero
 19123  00561C                     	endif
 19124  00561C  0008               	tblrd		*
 19125  00561E  CFF5 F007          	movff	tablat,??i2_strncmp
 19126  005622  C00A  FFF6         	movff	i2strncmp@r,tblptrl
 19127  005626  C00B  FFF7         	movff	i2strncmp@r+1,tblptrh
 19128  00562A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19129  00562A  6AF8               	clrf	tblptru,c
 19130  00562C                     	endif
 19131  00562C                     	if	0	;tblptru may be non-zero
 19132  00562C                     	endif
 19133  00562C  0008               	tblrd		*
 19134  00562E  50F5               	movf	tablat,w,c
 19135  005630  1807               	xorwf	??i2_strncmp^0,w,c
 19136  005632  B4D8               	btfsc	status,2,c
 19137  005634  EF1E  F02B         	goto	i2u968_41
 19138  005638  EF20  F02B         	goto	i2u968_40
 19139  00563C                     i2u968_41:
 19140  00563C  EFDB  F02A         	goto	i2l8032
 19141  005640                     i2u968_40:
 19142  005640                     i2l8042:
 19143  005640  C008  FFF6         	movff	i2strncmp@l,tblptrl
 19144  005644  C009  FFF7         	movff	i2strncmp@l+1,tblptrh
 19145  005648                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19146  005648  6AF8               	clrf	tblptru,c
 19147  00564A                     	endif
 19148  00564A                     	if	0	;tblptru may be non-zero
 19149  00564A                     	endif
 19150  00564A  0008               	tblrd		*
 19151  00564C  CFF5 F007          	movff	tablat,??i2_strncmp
 19152  005650  C00A  FFF6         	movff	i2strncmp@r,tblptrl
 19153  005654  C00B  FFF7         	movff	i2strncmp@r+1,tblptrh
 19154  005658                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19155  005658  6AF8               	clrf	tblptru,c
 19156  00565A                     	endif
 19157  00565A                     	if	0	;tblptru may be non-zero
 19158  00565A                     	endif
 19159  00565A  0008               	tblrd		*
 19160  00565C  50F5               	movf	tablat,w,c
 19161  00565E  5C07               	subwf	??i2_strncmp^0,w,c
 19162  005660  6E01               	movwf	?i2_strncmp^0,c
 19163  005662  6A02               	clrf	(?i2_strncmp+1)^0,c
 19164  005664  A0D8               	btfss	status,0,c
 19165  005666  0602               	decf	(?i2_strncmp+1)^0,f,c
 19166  005668                     i2l1705:
 19167  005668  0012               	return		;funcret
 19168  00566A                     __end_ofi2_strncmp:
 19169                           	opt callstack 0
 19170                           
 19171 ;; *************** function i2_stoa *****************
 19172 ;; Defined at:
 19173 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 19174 ;; Parameters:    Size  Location     Type
 19175 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 19176 ;;		 -> vsnprintf@f(6), NULL(0), 
 19177 ;;  s               2   13[COMRAM] PTR unsigned char 
 19178 ;;		 -> ?_snprintf(2), ?_printf(2), 
 19179 ;; Auto vars:     Size  Location     Type
 19180 ;;  stoa            7   16[COMRAM] unsigned char [7]
 19181 ;;  stoa            2   31[COMRAM] int 
 19182 ;;  stoa            2   29[COMRAM] int 
 19183 ;;  stoa            2   27[COMRAM] PTR unsigned char 
 19184 ;;		 -> i2stoa@nuls(7), ?_snprintf(2), ?_printf(2), stoa@nuls(7), 
 19185 ;;  stoa            2   25[COMRAM] int 
 19186 ;;  stoa            2   23[COMRAM] int 
 19187 ;; Return value:  Size  Location     Type
 19188 ;;                  2   11[COMRAM] int 
 19189 ;; Registers used:
 19190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19191 ;; Tracked objects:
 19192 ;;		On entry : 0/0
 19193 ;;		On exit  : 0/0
 19194 ;;		Unchanged: 0/0
 19195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19196 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19197 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19198 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19199 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19200 ;;Total ram usage:       22 bytes
 19201 ;; Hardware stack levels used:    1
 19202 ;; Hardware stack levels required when called:    3
 19203 ;; This function calls:
 19204 ;;		i2_fputc
 19205 ;;		i2_strlen
 19206 ;; This function is called by:
 19207 ;;		i2_vfpfcnvrt
 19208 ;; This function uses a non-reentrant model
 19209 ;;
 19210                           
 19211                           	psect	text84
 19212  00498A                     __ptext84:
 19213                           	opt callstack 0
 19214  00498A                     i2_stoa:
 19215                           	opt callstack 10
 19216  00498A                     
 19217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
 19218  00498A  EE20  F0CA         	lfsr	2,stoa@F1152
 19219  00498E  EE10  F011         	lfsr	1,i2stoa@nuls
 19220  004992  0E06               	movlw	6
 19221  004994                     i2u919_41:
 19222  004994  CFDB FFE3          	movff	plusw2,plusw1
 19223  004998  06E8               	decf	wreg,f,c
 19224  00499A  E2FC               	bc	i2u919_41
 19225  00499C                     
 19226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
 19227  00499C  C00E  F01C         	movff	i2stoa@s,i2stoa@cp
 19228  0049A0  C00F  F01D         	movff	i2stoa@s+1,i2stoa@cp+1
 19229  0049A4                     
 19230                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
 19231  0049A4  501C               	movf	i2stoa@cp^0,w,c
 19232  0049A6  101D               	iorwf	(i2stoa@cp+1)^0,w,c
 19233  0049A8  A4D8               	btfss	status,2,c
 19234  0049AA  EFD9  F024         	goto	i2u920_41
 19235  0049AE  EFDB  F024         	goto	i2u920_40
 19236  0049B2                     i2u920_41:
 19237  0049B2  EFDF  F024         	goto	i2l7848
 19238  0049B6                     i2u920_40:
 19239  0049B6                     
 19240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
 19241  0049B6  0E11               	movlw	low i2stoa@nuls
 19242  0049B8  6E1C               	movwf	i2stoa@cp^0,c
 19243  0049BA  0E00               	movlw	high i2stoa@nuls
 19244  0049BC  6E1D               	movwf	(i2stoa@cp+1)^0,c
 19245  0049BE                     i2l7848:
 19246                           
 19247                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
 19248  0049BE  C01C  F001         	movff	i2stoa@cp,i2strlen@s
 19249  0049C2  C01D  F002         	movff	i2stoa@cp+1,i2strlen@s+1
 19250  0049C6  EC3D  F033         	call	i2_strlen	;wreg free
 19251  0049CA  C001  F020         	movff	?i2_strlen,i2stoa@l
 19252  0049CE  C002  F021         	movff	?i2_strlen+1,i2stoa@l+1
 19253  0049D2                     
 19254                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
 19255  0049D2  C0B7  F01E         	movff	_prec,i2stoa@p
 19256  0049D6  C0B8  F01F         	movff	_prec+1,i2stoa@p+1
 19257  0049DA                     
 19258                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
 19259  0049DA  BE1F               	btfsc	(i2stoa@p+1)^0,7,c
 19260  0049DC  EFF2  F024         	goto	i2u921_41
 19261  0049E0  EFF4  F024         	goto	i2u921_40
 19262  0049E4                     i2u921_41:
 19263  0049E4  EF09  F025         	goto	i2l782
 19264  0049E8                     i2u921_40:
 19265  0049E8  5020               	movf	i2stoa@l^0,w,c
 19266  0049EA  5C1E               	subwf	i2stoa@p^0,w,c
 19267  0049EC  501F               	movf	(i2stoa@p+1)^0,w,c
 19268  0049EE  0A80               	xorlw	128
 19269  0049F0  6E10               	movwf	??i2_stoa^0,c
 19270  0049F2  5021               	movf	(i2stoa@l+1)^0,w,c
 19271  0049F4  0A80               	xorlw	128
 19272  0049F6  5810               	subwfb	??i2_stoa^0,w,c
 19273  0049F8  A0D8               	btfss	status,0,c
 19274  0049FA  EF01  F025         	goto	i2u922_41
 19275  0049FE  EF03  F025         	goto	i2u922_40
 19276  004A02                     i2u922_41:
 19277  004A02  EF05  F025         	goto	i2l780
 19278  004A06                     i2u922_40:
 19279  004A06  EF09  F025         	goto	i2l782
 19280  004A0A                     i2l780:
 19281  004A0A  C01E  F020         	movff	i2stoa@p,i2stoa@l
 19282  004A0E  C01F  F021         	movff	i2stoa@p+1,i2stoa@l+1
 19283  004A12                     i2l782:
 19284                           
 19285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
 19286  004A12  C020  F01E         	movff	i2stoa@l,i2stoa@p
 19287  004A16  C021  F01F         	movff	i2stoa@l+1,i2stoa@p+1
 19288                           
 19289                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
 19290  004A1A  C0B5  F01A         	movff	_width,i2stoa@w
 19291  004A1E  C0B6  F01B         	movff	_width+1,i2stoa@w+1
 19292                           
 19293                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
 19294  004A22  0100               	movlb	0	; () banked
 19295  004A24  B1B9               	btfsc	_flags& (0+255),0,b
 19296  004A26  EF17  F025         	goto	i2u923_41
 19297  004A2A  EF19  F025         	goto	i2u923_40
 19298  004A2E                     i2u923_41:
 19299  004A2E  EF36  F025         	goto	i2l7864
 19300  004A32                     i2u923_40:
 19301  004A32  EF27  F025         	goto	i2l7862
 19302  004A36                     i2l7858:
 19303                           
 19304                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
 19305  004A36  0E00               	movlw	0
 19306  004A38  6E04               	movwf	(i2fputc@c+1)^0,c
 19307  004A3A  0E20               	movlw	32
 19308  004A3C  6E03               	movwf	i2fputc@c^0,c
 19309  004A3E  C00C  F005         	movff	i2stoa@fp,i2fputc@fp
 19310  004A42  C00D  F006         	movff	i2stoa@fp+1,i2fputc@fp+1
 19311  004A46  ECD1  F02C         	call	i2_fputc	;wreg free
 19312  004A4A                     
 19313                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
 19314  004A4A  4A20               	infsnz	i2stoa@l^0,f,c
 19315  004A4C  2A21               	incf	(i2stoa@l+1)^0,f,c
 19316  004A4E                     i2l7862:
 19317                           
 19318                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
 19319  004A4E  501A               	movf	i2stoa@w^0,w,c
 19320  004A50  5C20               	subwf	i2stoa@l^0,w,c
 19321  004A52  5021               	movf	(i2stoa@l+1)^0,w,c
 19322  004A54  0A80               	xorlw	128
 19323  004A56  6E10               	movwf	??i2_stoa^0,c
 19324  004A58  501B               	movf	(i2stoa@w+1)^0,w,c
 19325  004A5A  0A80               	xorlw	128
 19326  004A5C  5810               	subwfb	??i2_stoa^0,w,c
 19327  004A5E  A0D8               	btfss	status,0,c
 19328  004A60  EF34  F025         	goto	i2u924_41
 19329  004A64  EF36  F025         	goto	i2u924_40
 19330  004A68                     i2u924_41:
 19331  004A68  EF1B  F025         	goto	i2l7858
 19332  004A6C                     i2u924_40:
 19333  004A6C                     i2l7864:
 19334                           
 19335                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
 19336  004A6C  0E00               	movlw	0
 19337  004A6E  6E19               	movwf	(i2stoa@i+1)^0,c
 19338  004A70  0E00               	movlw	0
 19339  004A72  6E18               	movwf	i2stoa@i^0,c
 19340                           
 19341                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 19342  004A74  EF4F  F025         	goto	i2l7872
 19343  004A78                     i2l7866:
 19344                           
 19345                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
 19346  004A78  C01C  FFD9         	movff	i2stoa@cp,fsr2l
 19347  004A7C  C01D  FFDA         	movff	i2stoa@cp+1,fsr2h
 19348  004A80  50DF               	movf	indf2,w,c
 19349  004A82  6E10               	movwf	??i2_stoa^0,c
 19350  004A84  5010               	movf	??i2_stoa^0,w,c
 19351  004A86  6E03               	movwf	i2fputc@c^0,c
 19352  004A88  6A04               	clrf	(i2fputc@c+1)^0,c
 19353  004A8A  C00C  F005         	movff	i2stoa@fp,i2fputc@fp
 19354  004A8E  C00D  F006         	movff	i2stoa@fp+1,i2fputc@fp+1
 19355  004A92  ECD1  F02C         	call	i2_fputc	;wreg free
 19356  004A96                     
 19357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
 19358  004A96  4A1C               	infsnz	i2stoa@cp^0,f,c
 19359  004A98  2A1D               	incf	(i2stoa@cp+1)^0,f,c
 19360  004A9A                     
 19361                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
 19362  004A9A  4A18               	infsnz	i2stoa@i^0,f,c
 19363  004A9C  2A19               	incf	(i2stoa@i+1)^0,f,c
 19364  004A9E                     i2l7872:
 19365                           
 19366                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 19367  004A9E  501E               	movf	i2stoa@p^0,w,c
 19368  004AA0  5C18               	subwf	i2stoa@i^0,w,c
 19369  004AA2  5019               	movf	(i2stoa@i+1)^0,w,c
 19370  004AA4  0A80               	xorlw	128
 19371  004AA6  6E10               	movwf	??i2_stoa^0,c
 19372  004AA8  501F               	movf	(i2stoa@p+1)^0,w,c
 19373  004AAA  0A80               	xorlw	128
 19374  004AAC  5810               	subwfb	??i2_stoa^0,w,c
 19375  004AAE  A0D8               	btfss	status,0,c
 19376  004AB0  EF5C  F025         	goto	i2u925_41
 19377  004AB4  EF5E  F025         	goto	i2u925_40
 19378  004AB8                     i2u925_41:
 19379  004AB8  EF3C  F025         	goto	i2l7866
 19380  004ABC                     i2u925_40:
 19381  004ABC                     
 19382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
 19383  004ABC  0100               	movlb	0	; () banked
 19384  004ABE  A1B9               	btfss	_flags& (0+255),0,b
 19385  004AC0  EF64  F025         	goto	i2u926_41
 19386  004AC4  EF66  F025         	goto	i2u926_40
 19387  004AC8                     i2u926_41:
 19388  004AC8  EF83  F025         	goto	i2l792
 19389  004ACC                     i2u926_40:
 19390  004ACC  EF74  F025         	goto	i2l7880
 19391  004AD0                     i2l7876:
 19392                           
 19393                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
 19394  004AD0  0E00               	movlw	0
 19395  004AD2  6E04               	movwf	(i2fputc@c+1)^0,c
 19396  004AD4  0E20               	movlw	32
 19397  004AD6  6E03               	movwf	i2fputc@c^0,c
 19398  004AD8  C00C  F005         	movff	i2stoa@fp,i2fputc@fp
 19399  004ADC  C00D  F006         	movff	i2stoa@fp+1,i2fputc@fp+1
 19400  004AE0  ECD1  F02C         	call	i2_fputc	;wreg free
 19401  004AE4                     
 19402                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
 19403  004AE4  4A20               	infsnz	i2stoa@l^0,f,c
 19404  004AE6  2A21               	incf	(i2stoa@l+1)^0,f,c
 19405  004AE8                     i2l7880:
 19406                           
 19407                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
 19408  004AE8  501A               	movf	i2stoa@w^0,w,c
 19409  004AEA  5C20               	subwf	i2stoa@l^0,w,c
 19410  004AEC  5021               	movf	(i2stoa@l+1)^0,w,c
 19411  004AEE  0A80               	xorlw	128
 19412  004AF0  6E10               	movwf	??i2_stoa^0,c
 19413  004AF2  501B               	movf	(i2stoa@w+1)^0,w,c
 19414  004AF4  0A80               	xorlw	128
 19415  004AF6  5810               	subwfb	??i2_stoa^0,w,c
 19416  004AF8  A0D8               	btfss	status,0,c
 19417  004AFA  EF81  F025         	goto	i2u927_41
 19418  004AFE  EF83  F025         	goto	i2u927_40
 19419  004B02                     i2u927_41:
 19420  004B02  EF68  F025         	goto	i2l7876
 19421  004B06                     i2u927_40:
 19422  004B06                     i2l792:
 19423                           
 19424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
 19425  004B06  C020  F00C         	movff	i2stoa@l,?i2_stoa
 19426  004B0A  C021  F00D         	movff	i2stoa@l+1,?i2_stoa+1
 19427  004B0E  0012               	return		;funcret
 19428  004B10                     __end_ofi2_stoa:
 19429                           	opt callstack 0
 19430                           
 19431 ;; *************** function i2_otoa *****************
 19432 ;; Defined at:
 19433 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 19434 ;; Parameters:    Size  Location     Type
 19435 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 19436 ;;		 -> vsnprintf@f(6), NULL(0), 
 19437 ;;  d               8   31[COMRAM] unsigned long long 
 19438 ;; Auto vars:     Size  Location     Type
 19439 ;;  otoa            8   53[COMRAM] unsigned long long 
 19440 ;;  otoa            2   61[COMRAM] int 
 19441 ;;  otoa            2   51[COMRAM] int 
 19442 ;;  otoa            2   49[COMRAM] int 
 19443 ;;  otoa            2   47[COMRAM] int 
 19444 ;; Return value:  Size  Location     Type
 19445 ;;                  2   29[COMRAM] int 
 19446 ;; Registers used:
 19447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19448 ;; Tracked objects:
 19449 ;;		On entry : 0/0
 19450 ;;		On exit  : 0/0
 19451 ;;		Unchanged: 0/0
 19452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19453 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19454 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19455 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19456 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19457 ;;Total ram usage:       34 bytes
 19458 ;; Hardware stack levels used:    1
 19459 ;; Hardware stack levels required when called:    5
 19460 ;; This function calls:
 19461 ;;		i2_pad
 19462 ;; This function is called by:
 19463 ;;		i2_vfpfcnvrt
 19464 ;; This function uses a non-reentrant model
 19465 ;;
 19466                           
 19467                           	psect	text85
 19468  0042FC                     __ptext85:
 19469                           	opt callstack 0
 19470  0042FC                     i2_otoa:
 19471                           	opt callstack 8
 19472  0042FC                     
 19473                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
 19474  0042FC  0100               	movlb	0	; () banked
 19475  0042FE  BFB8               	btfsc	(_prec+1)& (0+255),7,b
 19476  004300  EF84  F021         	goto	i2u909_41
 19477  004304  EF86  F021         	goto	i2u909_40
 19478  004308                     i2u909_41:
 19479  004308  EF87  F021         	goto	i2l7796
 19480  00430C                     i2u909_40:
 19481  00430C                     
 19482                           ; BSR set to: 0
 19483                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
 19484  00430C  93B9               	bcf	_flags& (0+255),1,b
 19485  00430E                     i2l7796:
 19486                           
 19487                           ; BSR set to: 0
 19488                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
 19489  00430E  BFB8               	btfsc	(_prec+1)& (0+255),7,b
 19490  004310  EF94  F021         	goto	i2u910_40
 19491  004314  51B8               	movf	(_prec+1)& (0+255),w,b
 19492  004316  E106               	bnz	i2u910_41
 19493  004318  05B7               	decf	_prec& (0+255),w,b
 19494  00431A  B0D8               	btfsc	status,0,c
 19495  00431C  EF92  F021         	goto	i2u910_41
 19496  004320  EF94  F021         	goto	i2u910_40
 19497  004324                     i2u910_41:
 19498  004324  EF9A  F021         	goto	i2l762
 19499  004328                     i2u910_40:
 19500  004328                     
 19501                           ; BSR set to: 0
 19502  004328  0E00               	movlw	0
 19503  00432A  6E31               	movwf	(i2otoa@p+1)^0,c
 19504  00432C  0E01               	movlw	1
 19505  00432E  6E30               	movwf	i2otoa@p^0,c
 19506  004330  EF9E  F021         	goto	i2l764
 19507  004334                     i2l762:
 19508                           
 19509                           ; BSR set to: 0
 19510  004334  C0B7  F030         	movff	_prec,i2otoa@p
 19511  004338  C0B8  F031         	movff	_prec+1,i2otoa@p+1
 19512  00433C                     i2l764:
 19513                           
 19514                           ; BSR set to: 0
 19515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
 19516  00433C  C0B5  F034         	movff	_width,i2otoa@w
 19517  004340  C0B6  F035         	movff	_width+1,i2otoa@w+1
 19518                           
 19519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
 19520  004344  C020  F036         	movff	i2otoa@d,i2otoa@n
 19521  004348  C021  F037         	movff	i2otoa@d+1,i2otoa@n+1
 19522  00434C  C022  F038         	movff	i2otoa@d+2,i2otoa@n+2
 19523  004350  C023  F039         	movff	i2otoa@d+3,i2otoa@n+3
 19524  004354  C024  F03A         	movff	i2otoa@d+4,i2otoa@n+4
 19525  004358  C025  F03B         	movff	i2otoa@d+5,i2otoa@n+5
 19526  00435C  C026  F03C         	movff	i2otoa@d+6,i2otoa@n+6
 19527  004360  C027  F03D         	movff	i2otoa@d+7,i2otoa@n+7
 19528  004364                     
 19529                           ; BSR set to: 0
 19530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
 19531  004364  0E00               	movlw	0
 19532  004366  6E3F               	movwf	(i2otoa@i+1)^0,c
 19533  004368  0E1F               	movlw	31
 19534  00436A  6E3E               	movwf	i2otoa@i^0,c
 19535  00436C                     
 19536                           ; BSR set to: 0
 19537                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
 19538  00436C  0E00               	movlw	0
 19539  00436E  0101               	movlb	1	; () banked
 19540  004370  6FA8               	movwf	(_dbuf+31)& (0+255),b
 19541  004372                     
 19542                           ; BSR set to: 1
 19543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
 19544  004372  0E00               	movlw	0
 19545  004374  6E33               	movwf	(i2otoa@t+1)^0,c
 19546  004376  0E00               	movlw	0
 19547  004378  6E32               	movwf	i2otoa@t^0,c
 19548                           
 19549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19550  00437A  EF04  F022         	goto	i2l7818
 19551  00437E                     i2l7806:
 19552                           
 19553                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
 19554  00437E  063E               	decf	i2otoa@i^0,f,c
 19555  004380  A0D8               	btfss	status,0,c
 19556  004382  063F               	decf	(i2otoa@i+1)^0,f,c
 19557  004384                     
 19558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
 19559  004384  0E07               	movlw	7
 19560  004386  1436               	andwf	i2otoa@n^0,w,c
 19561  004388  6E32               	movwf	i2otoa@t^0,c
 19562  00438A  6A33               	clrf	(i2otoa@t+1)^0,c
 19563  00438C                     
 19564                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
 19565  00438C  0E89               	movlw	low _dbuf
 19566  00438E  243E               	addwf	i2otoa@i^0,w,c
 19567  004390  6ED9               	movwf	fsr2l,c
 19568  004392  0E01               	movlw	high _dbuf
 19569  004394  203F               	addwfc	(i2otoa@i+1)^0,w,c
 19570  004396  6EDA               	movwf	fsr2h,c
 19571  004398  5032               	movf	i2otoa@t^0,w,c
 19572  00439A  0F30               	addlw	48
 19573  00439C  6EDF               	movwf	indf2,c
 19574  00439E                     
 19575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
 19576  00439E  0630               	decf	i2otoa@p^0,f,c
 19577  0043A0  A0D8               	btfss	status,0,c
 19578  0043A2  0631               	decf	(i2otoa@p+1)^0,f,c
 19579  0043A4                     
 19580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
 19581  0043A4  0634               	decf	i2otoa@w^0,f,c
 19582  0043A6  A0D8               	btfss	status,0,c
 19583  0043A8  0635               	decf	(i2otoa@w+1)^0,f,c
 19584  0043AA                     
 19585                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
 19586  0043AA  C036  F028         	movff	i2otoa@n,??i2_otoa
 19587  0043AE  C037  F029         	movff	i2otoa@n+1,??i2_otoa+1
 19588  0043B2  C038  F02A         	movff	i2otoa@n+2,??i2_otoa+2
 19589  0043B6  C039  F02B         	movff	i2otoa@n+3,??i2_otoa+3
 19590  0043BA  C03A  F02C         	movff	i2otoa@n+4,??i2_otoa+4
 19591  0043BE  C03B  F02D         	movff	i2otoa@n+5,??i2_otoa+5
 19592  0043C2  C03C  F02E         	movff	i2otoa@n+6,??i2_otoa+6
 19593  0043C6  C03D  F02F         	movff	i2otoa@n+7,??i2_otoa+7
 19594  0043CA  0E04               	movlw	4
 19595  0043CC  EFF1  F021         	goto	i2u911_40
 19596  0043D0                     i2u911_45:
 19597  0043D0  90D8               	bcf	status,0,c
 19598  0043D2  322F               	rrcf	(??i2_otoa+7)^0,f,c
 19599  0043D4  322E               	rrcf	(??i2_otoa+6)^0,f,c
 19600  0043D6  322D               	rrcf	(??i2_otoa+5)^0,f,c
 19601  0043D8  322C               	rrcf	(??i2_otoa+4)^0,f,c
 19602  0043DA  322B               	rrcf	(??i2_otoa+3)^0,f,c
 19603  0043DC  322A               	rrcf	(??i2_otoa+2)^0,f,c
 19604  0043DE  3229               	rrcf	(??i2_otoa+1)^0,f,c
 19605  0043E0  3228               	rrcf	??i2_otoa^0,f,c
 19606  0043E2                     i2u911_40:
 19607  0043E2  2EE8               	decfsz	wreg,f,c
 19608  0043E4  EFE8  F021         	goto	i2u911_45
 19609  0043E8  C028  F036         	movff	??i2_otoa,i2otoa@n
 19610  0043EC  C029  F037         	movff	??i2_otoa+1,i2otoa@n+1
 19611  0043F0  C02A  F038         	movff	??i2_otoa+2,i2otoa@n+2
 19612  0043F4  C02B  F039         	movff	??i2_otoa+3,i2otoa@n+3
 19613  0043F8  C02C  F03A         	movff	??i2_otoa+4,i2otoa@n+4
 19614  0043FC  C02D  F03B         	movff	??i2_otoa+5,i2otoa@n+5
 19615  004400  C02E  F03C         	movff	??i2_otoa+6,i2otoa@n+6
 19616  004404  C02F  F03D         	movff	??i2_otoa+7,i2otoa@n+7
 19617  004408                     i2l7818:
 19618                           
 19619                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19620  004408  BE3F               	btfsc	(i2otoa@i+1)^0,7,c
 19621  00440A  EF0F  F022         	goto	i2u912_41
 19622  00440E  503F               	movf	(i2otoa@i+1)^0,w,c
 19623  004410  E108               	bnz	i2u912_40
 19624  004412  043E               	decf	i2otoa@i^0,w,c
 19625  004414  A0D8               	btfss	status,0,c
 19626  004416  EF0F  F022         	goto	i2u912_41
 19627  00441A  EF11  F022         	goto	i2u912_40
 19628  00441E                     i2u912_41:
 19629  00441E  EF42  F022         	goto	i2l771
 19630  004422                     i2u912_40:
 19631  004422  5036               	movf	i2otoa@n^0,w,c
 19632  004424  1037               	iorwf	(i2otoa@n+1)^0,w,c
 19633  004426  1038               	iorwf	(i2otoa@n+2)^0,w,c
 19634  004428  1039               	iorwf	(i2otoa@n+3)^0,w,c
 19635  00442A  103A               	iorwf	(i2otoa@n+4)^0,w,c
 19636  00442C  103B               	iorwf	(i2otoa@n+5)^0,w,c
 19637  00442E  103C               	iorwf	(i2otoa@n+6)^0,w,c
 19638  004430  103D               	iorwf	(i2otoa@n+7)^0,w,c
 19639  004432  A4D8               	btfss	status,2,c
 19640  004434  EF1E  F022         	goto	i2u913_41
 19641  004438  EF20  F022         	goto	i2u913_40
 19642  00443C                     i2u913_41:
 19643  00443C  EFBF  F021         	goto	i2l7806
 19644  004440                     i2u913_40:
 19645  004440  BE31               	btfsc	(i2otoa@p+1)^0,7,c
 19646  004442  EF2D  F022         	goto	i2u914_40
 19647  004446  5031               	movf	(i2otoa@p+1)^0,w,c
 19648  004448  E106               	bnz	i2u914_41
 19649  00444A  0430               	decf	i2otoa@p^0,w,c
 19650  00444C  B0D8               	btfsc	status,0,c
 19651  00444E  EF2B  F022         	goto	i2u914_41
 19652  004452  EF2D  F022         	goto	i2u914_40
 19653  004456                     i2u914_41:
 19654  004456  EFBF  F021         	goto	i2l7806
 19655  00445A                     i2u914_40:
 19656  00445A  BE35               	btfsc	(i2otoa@w+1)^0,7,c
 19657  00445C  EF38  F022         	goto	i2u915_41
 19658  004460  5035               	movf	(i2otoa@w+1)^0,w,c
 19659  004462  E108               	bnz	i2u915_40
 19660  004464  0434               	decf	i2otoa@w^0,w,c
 19661  004466  A0D8               	btfss	status,0,c
 19662  004468  EF38  F022         	goto	i2u915_41
 19663  00446C  EF3A  F022         	goto	i2u915_40
 19664  004470                     i2u915_41:
 19665  004470  EF42  F022         	goto	i2l771
 19666  004474                     i2u915_40:
 19667  004474  0100               	movlb	0	; () banked
 19668  004476  B3B9               	btfsc	_flags& (0+255),1,b
 19669  004478  EF40  F022         	goto	i2u916_41
 19670  00447C  EF42  F022         	goto	i2u916_40
 19671  004480                     i2u916_41:
 19672  004480  EFBF  F021         	goto	i2l7806
 19673  004484                     i2u916_40:
 19674  004484                     i2l771:
 19675                           
 19676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
 19677  004484  0100               	movlb	0	; () banked
 19678  004486  A9B9               	btfss	_flags& (0+255),4,b
 19679  004488  EF48  F022         	goto	i2u917_41
 19680  00448C  EF4A  F022         	goto	i2u917_40
 19681  004490                     i2u917_41:
 19682  004490  EF61  F022         	goto	i2l7836
 19683  004494                     i2u917_40:
 19684  004494                     
 19685                           ; BSR set to: 0
 19686  004494  5032               	movf	i2otoa@t^0,w,c
 19687  004496  1033               	iorwf	(i2otoa@t+1)^0,w,c
 19688  004498  B4D8               	btfsc	status,2,c
 19689  00449A  EF51  F022         	goto	i2u918_41
 19690  00449E  EF53  F022         	goto	i2u918_40
 19691  0044A2                     i2u918_41:
 19692  0044A2  EF61  F022         	goto	i2l7836
 19693  0044A6                     i2u918_40:
 19694  0044A6                     
 19695                           ; BSR set to: 0
 19696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
 19697  0044A6  063E               	decf	i2otoa@i^0,f,c
 19698  0044A8  A0D8               	btfss	status,0,c
 19699  0044AA  063F               	decf	(i2otoa@i+1)^0,f,c
 19700  0044AC                     
 19701                           ; BSR set to: 0
 19702                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
 19703  0044AC  0E89               	movlw	low _dbuf
 19704  0044AE  243E               	addwf	i2otoa@i^0,w,c
 19705  0044B0  6ED9               	movwf	fsr2l,c
 19706  0044B2  0E01               	movlw	high _dbuf
 19707  0044B4  203F               	addwfc	(i2otoa@i+1)^0,w,c
 19708  0044B6  6EDA               	movwf	fsr2h,c
 19709  0044B8  0E30               	movlw	48
 19710  0044BA  6EDF               	movwf	indf2,c
 19711  0044BC                     
 19712                           ; BSR set to: 0
 19713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
 19714  0044BC  0634               	decf	i2otoa@w^0,f,c
 19715  0044BE  A0D8               	btfss	status,0,c
 19716  0044C0  0635               	decf	(i2otoa@w+1)^0,f,c
 19717  0044C2                     i2l7836:
 19718                           
 19719                           ; BSR set to: 0
 19720                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
 19721  0044C2  C01E  F013         	movff	i2otoa@fp,i2pad@fp
 19722  0044C6  C01F  F014         	movff	i2otoa@fp+1,i2pad@fp+1
 19723  0044CA  0E89               	movlw	low _dbuf
 19724  0044CC  243E               	addwf	i2otoa@i^0,w,c
 19725  0044CE  6E15               	movwf	i2pad@buf^0,c
 19726  0044D0  0E01               	movlw	high _dbuf
 19727  0044D2  203F               	addwfc	(i2otoa@i+1)^0,w,c
 19728  0044D4  6E16               	movwf	(i2pad@buf+1)^0,c
 19729  0044D6  C034  F017         	movff	i2otoa@w,i2pad@p
 19730  0044DA  C035  F018         	movff	i2otoa@w+1,i2pad@p+1
 19731  0044DE  EC36  F02D         	call	i2_pad	;wreg free
 19732  0044E2  C013  F01E         	movff	?i2_pad,?i2_otoa
 19733  0044E6  C014  F01F         	movff	?i2_pad+1,?i2_otoa+1
 19734  0044EA  0012               	return		;funcret
 19735  0044EC                     __end_ofi2_otoa:
 19736                           	opt callstack 0
 19737                           
 19738 ;; *************** function i2_dtoa *****************
 19739 ;; Defined at:
 19740 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 19741 ;; Parameters:    Size  Location     Type
 19742 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 19743 ;;		 -> vsnprintf@f(6), NULL(0), 
 19744 ;;  d               8   31[COMRAM] long long 
 19745 ;; Auto vars:     Size  Location     Type
 19746 ;;  dtoa            8   55[COMRAM] long long 
 19747 ;;  dtoa            2   63[COMRAM] int 
 19748 ;;  dtoa            2   53[COMRAM] int 
 19749 ;;  dtoa            2   51[COMRAM] int 
 19750 ;;  dtoa            2   49[COMRAM] int 
 19751 ;; Return value:  Size  Location     Type
 19752 ;;                  2   29[COMRAM] int 
 19753 ;; Registers used:
 19754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19755 ;; Tracked objects:
 19756 ;;		On entry : 0/0
 19757 ;;		On exit  : 0/0
 19758 ;;		Unchanged: 0/0
 19759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19760 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19761 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19762 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19763 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19764 ;;Total ram usage:       36 bytes
 19765 ;; Hardware stack levels used:    1
 19766 ;; Hardware stack levels required when called:    5
 19767 ;; This function calls:
 19768 ;;		i2___aodiv
 19769 ;;		i2___aomod
 19770 ;;		i2_abs
 19771 ;;		i2_pad
 19772 ;; This function is called by:
 19773 ;;		i2_vfpfcnvrt
 19774 ;; This function uses a non-reentrant model
 19775 ;;
 19776                           
 19777                           	psect	text86
 19778  003312                     __ptext86:
 19779                           	opt callstack 0
 19780  003312                     i2_dtoa:
 19781                           	opt callstack 8
 19782  003312                     
 19783                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 19784  003312  C020  F038         	movff	i2dtoa@d,i2dtoa@n
 19785  003316  C021  F039         	movff	i2dtoa@d+1,i2dtoa@n+1
 19786  00331A  C022  F03A         	movff	i2dtoa@d+2,i2dtoa@n+2
 19787  00331E  C023  F03B         	movff	i2dtoa@d+3,i2dtoa@n+3
 19788  003322  C024  F03C         	movff	i2dtoa@d+4,i2dtoa@n+4
 19789  003326  C025  F03D         	movff	i2dtoa@d+5,i2dtoa@n+5
 19790  00332A  C026  F03E         	movff	i2dtoa@d+6,i2dtoa@n+6
 19791  00332E  C027  F03F         	movff	i2dtoa@d+7,i2dtoa@n+7
 19792  003332                     
 19793                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 19794  003332  BE3F               	btfsc	(i2dtoa@n+7)^0,7,c
 19795  003334  EF9E  F019         	goto	i2u894_41
 19796  003338  EFA1  F019         	goto	i2u894_40
 19797  00333C                     i2u894_41:
 19798  00333C  0E01               	movlw	1
 19799  00333E  EFA2  F019         	goto	i2u895_40
 19800  003342                     i2u894_40:
 19801  003342  0E00               	movlw	0
 19802  003344                     i2u895_40:
 19803  003344  6E36               	movwf	i2dtoa@s^0,c
 19804  003346  6A37               	clrf	(i2dtoa@s+1)^0,c
 19805                           
 19806                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 19807  003348  5036               	movf	i2dtoa@s^0,w,c
 19808  00334A  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 19809  00334C  B4D8               	btfsc	status,2,c
 19810  00334E  EFAB  F019         	goto	i2u896_41
 19811  003352  EFAD  F019         	goto	i2u896_40
 19812  003356                     i2u896_41:
 19813  003356  EFBD  F019         	goto	i2l7736
 19814  00335A                     i2u896_40:
 19815  00335A                     
 19816                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 19817  00335A  1E3F               	comf	(i2dtoa@n+7)^0,f,c
 19818  00335C  1E3E               	comf	(i2dtoa@n+6)^0,f,c
 19819  00335E  1E3D               	comf	(i2dtoa@n+5)^0,f,c
 19820  003360  1E3C               	comf	(i2dtoa@n+4)^0,f,c
 19821  003362  1E3B               	comf	(i2dtoa@n+3)^0,f,c
 19822  003364  1E3A               	comf	(i2dtoa@n+2)^0,f,c
 19823  003366  1E39               	comf	(i2dtoa@n+1)^0,f,c
 19824  003368  6C38               	negf	i2dtoa@n^0,c
 19825  00336A  0E00               	movlw	0
 19826  00336C  2239               	addwfc	(i2dtoa@n+1)^0,f,c
 19827  00336E  223A               	addwfc	(i2dtoa@n+2)^0,f,c
 19828  003370  223B               	addwfc	(i2dtoa@n+3)^0,f,c
 19829  003372  223C               	addwfc	(i2dtoa@n+4)^0,f,c
 19830  003374  223D               	addwfc	(i2dtoa@n+5)^0,f,c
 19831  003376  223E               	addwfc	(i2dtoa@n+6)^0,f,c
 19832  003378  223F               	addwfc	(i2dtoa@n+7)^0,f,c
 19833  00337A                     i2l7736:
 19834                           
 19835                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 19836  00337A  0100               	movlb	0	; () banked
 19837  00337C  BFB8               	btfsc	(_prec+1)& (0+255),7,b
 19838  00337E  EFC3  F019         	goto	i2u897_41
 19839  003382  EFC5  F019         	goto	i2u897_40
 19840  003386                     i2u897_41:
 19841  003386  EFC6  F019         	goto	i2l7740
 19842  00338A                     i2u897_40:
 19843  00338A                     
 19844                           ; BSR set to: 0
 19845                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 19846  00338A  93B9               	bcf	_flags& (0+255),1,b
 19847  00338C                     i2l7740:
 19848                           
 19849                           ; BSR set to: 0
 19850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 19851  00338C  BFB8               	btfsc	(_prec+1)& (0+255),7,b
 19852  00338E  EFD3  F019         	goto	i2u898_40
 19853  003392  51B8               	movf	(_prec+1)& (0+255),w,b
 19854  003394  E106               	bnz	i2u898_41
 19855  003396  05B7               	decf	_prec& (0+255),w,b
 19856  003398  B0D8               	btfsc	status,0,c
 19857  00339A  EFD1  F019         	goto	i2u898_41
 19858  00339E  EFD3  F019         	goto	i2u898_40
 19859  0033A2                     i2u898_41:
 19860  0033A2  EFD9  F019         	goto	i2l737
 19861  0033A6                     i2u898_40:
 19862  0033A6                     
 19863                           ; BSR set to: 0
 19864  0033A6  0E00               	movlw	0
 19865  0033A8  6E33               	movwf	(i2dtoa@p+1)^0,c
 19866  0033AA  0E01               	movlw	1
 19867  0033AC  6E32               	movwf	i2dtoa@p^0,c
 19868  0033AE  EFDD  F019         	goto	i2l739
 19869  0033B2                     i2l737:
 19870                           
 19871                           ; BSR set to: 0
 19872  0033B2  C0B7  F032         	movff	_prec,i2dtoa@p
 19873  0033B6  C0B8  F033         	movff	_prec+1,i2dtoa@p+1
 19874  0033BA                     i2l739:
 19875                           
 19876                           ; BSR set to: 0
 19877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 19878  0033BA  C0B5  F034         	movff	_width,i2dtoa@w
 19879  0033BE  C0B6  F035         	movff	_width+1,i2dtoa@w+1
 19880  0033C2                     
 19881                           ; BSR set to: 0
 19882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 19883  0033C2  5036               	movf	i2dtoa@s^0,w,c
 19884  0033C4  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 19885  0033C6  A4D8               	btfss	status,2,c
 19886  0033C8  EFE8  F019         	goto	i2u899_41
 19887  0033CC  EFEA  F019         	goto	i2u899_40
 19888  0033D0                     i2u899_41:
 19889  0033D0  EFF1  F019         	goto	i2l7748
 19890  0033D4                     i2u899_40:
 19891  0033D4                     
 19892                           ; BSR set to: 0
 19893  0033D4  A5B9               	btfss	_flags& (0+255),2,b
 19894  0033D6  EFEF  F019         	goto	i2u900_41
 19895  0033DA  EFF1  F019         	goto	i2u900_40
 19896  0033DE                     i2u900_41:
 19897  0033DE  EFF4  F019         	goto	i2l7750
 19898  0033E2                     i2u900_40:
 19899  0033E2                     i2l7748:
 19900                           
 19901                           ; BSR set to: 0
 19902                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 19903  0033E2  0634               	decf	i2dtoa@w^0,f,c
 19904  0033E4  A0D8               	btfss	status,0,c
 19905  0033E6  0635               	decf	(i2dtoa@w+1)^0,f,c
 19906  0033E8                     i2l7750:
 19907                           
 19908                           ; BSR set to: 0
 19909                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 19910  0033E8  0E00               	movlw	0
 19911  0033EA  6E41               	movwf	(i2dtoa@i+1)^0,c
 19912  0033EC  0E1F               	movlw	31
 19913  0033EE  6E40               	movwf	i2dtoa@i^0,c
 19914  0033F0                     
 19915                           ; BSR set to: 0
 19916                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 19917  0033F0  0E00               	movlw	0
 19918  0033F2  0101               	movlb	1	; () banked
 19919  0033F4  6FA8               	movwf	(_dbuf+31)& (0+255),b
 19920                           
 19921                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19922  0033F6  EF79  F01A         	goto	i2l7764
 19923  0033FA                     i2l7754:
 19924                           
 19925                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 19926  0033FA  0640               	decf	i2dtoa@i^0,f,c
 19927  0033FC  A0D8               	btfss	status,0,c
 19928  0033FE  0641               	decf	(i2dtoa@i+1)^0,f,c
 19929  003400                     
 19930                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 19931  003400  0E89               	movlw	low _dbuf
 19932  003402  2440               	addwf	i2dtoa@i^0,w,c
 19933  003404  6ED9               	movwf	fsr2l,c
 19934  003406  0E01               	movlw	high _dbuf
 19935  003408  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 19936  00340A  6EDA               	movwf	fsr2h,c
 19937  00340C  C038  F001         	movff	i2dtoa@n,i2___aomod@dividend
 19938  003410  C039  F002         	movff	i2dtoa@n+1,i2___aomod@dividend+1
 19939  003414  C03A  F003         	movff	i2dtoa@n+2,i2___aomod@dividend+2
 19940  003418  C03B  F004         	movff	i2dtoa@n+3,i2___aomod@dividend+3
 19941  00341C  C03C  F005         	movff	i2dtoa@n+4,i2___aomod@dividend+4
 19942  003420  C03D  F006         	movff	i2dtoa@n+5,i2___aomod@dividend+5
 19943  003424  C03E  F007         	movff	i2dtoa@n+6,i2___aomod@dividend+6
 19944  003428  C03F  F008         	movff	i2dtoa@n+7,i2___aomod@dividend+7
 19945  00342C  0E0A               	movlw	10
 19946  00342E  6E09               	movwf	i2___aomod@divisor^0,c
 19947  003430  0E00               	movlw	0
 19948  003432  6E0A               	movwf	(i2___aomod@divisor+1)^0,c
 19949  003434  0E00               	movlw	0
 19950  003436  6E0B               	movwf	(i2___aomod@divisor+2)^0,c
 19951  003438  0E00               	movlw	0
 19952  00343A  6E0C               	movwf	(i2___aomod@divisor+3)^0,c
 19953  00343C  0E00               	movlw	0
 19954  00343E  6E0D               	movwf	(i2___aomod@divisor+4)^0,c
 19955  003440  0E00               	movlw	0
 19956  003442  6E0E               	movwf	(i2___aomod@divisor+5)^0,c
 19957  003444  0E00               	movlw	0
 19958  003446  6E0F               	movwf	(i2___aomod@divisor+6)^0,c
 19959  003448  0E00               	movlw	0
 19960  00344A  6E10               	movwf	(i2___aomod@divisor+7)^0,c
 19961  00344C  ECFC  F026         	call	i2___aomod	;wreg free
 19962  003450  C001  F028         	movff	?i2___aomod,??i2_dtoa
 19963  003454  C002  F029         	movff	?i2___aomod+1,??i2_dtoa+1
 19964  003458  C003  F02A         	movff	?i2___aomod+2,??i2_dtoa+2
 19965  00345C  C004  F02B         	movff	?i2___aomod+3,??i2_dtoa+3
 19966  003460  C005  F02C         	movff	?i2___aomod+4,??i2_dtoa+4
 19967  003464  C006  F02D         	movff	?i2___aomod+5,??i2_dtoa+5
 19968  003468  C007  F02E         	movff	?i2___aomod+6,??i2_dtoa+6
 19969  00346C  C008  F02F         	movff	?i2___aomod+7,??i2_dtoa+7
 19970  003470  C028  F013         	movff	??i2_dtoa,i2abs@a
 19971  003474  C02A  F014         	movff	??i2_dtoa+2,i2abs@a+1
 19972  003478  ECFC  F031         	call	i2_abs	;wreg free
 19973  00347C  5013               	movf	?i2_abs^0,w,c
 19974  00347E  0F30               	addlw	48
 19975  003480  6EDF               	movwf	indf2,c
 19976  003482                     
 19977                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 19978  003482  0632               	decf	i2dtoa@p^0,f,c
 19979  003484  A0D8               	btfss	status,0,c
 19980  003486  0633               	decf	(i2dtoa@p+1)^0,f,c
 19981  003488                     
 19982                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 19983  003488  0634               	decf	i2dtoa@w^0,f,c
 19984  00348A  A0D8               	btfss	status,0,c
 19985  00348C  0635               	decf	(i2dtoa@w+1)^0,f,c
 19986  00348E                     
 19987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 19988  00348E  C038  F001         	movff	i2dtoa@n,i2___aodiv@dividend
 19989  003492  C039  F002         	movff	i2dtoa@n+1,i2___aodiv@dividend+1
 19990  003496  C03A  F003         	movff	i2dtoa@n+2,i2___aodiv@dividend+2
 19991  00349A  C03B  F004         	movff	i2dtoa@n+3,i2___aodiv@dividend+3
 19992  00349E  C03C  F005         	movff	i2dtoa@n+4,i2___aodiv@dividend+4
 19993  0034A2  C03D  F006         	movff	i2dtoa@n+5,i2___aodiv@dividend+5
 19994  0034A6  C03E  F007         	movff	i2dtoa@n+6,i2___aodiv@dividend+6
 19995  0034AA  C03F  F008         	movff	i2dtoa@n+7,i2___aodiv@dividend+7
 19996  0034AE  0E0A               	movlw	10
 19997  0034B0  6E09               	movwf	i2___aodiv@divisor^0,c
 19998  0034B2  0E00               	movlw	0
 19999  0034B4  6E0A               	movwf	(i2___aodiv@divisor+1)^0,c
 20000  0034B6  0E00               	movlw	0
 20001  0034B8  6E0B               	movwf	(i2___aodiv@divisor+2)^0,c
 20002  0034BA  0E00               	movlw	0
 20003  0034BC  6E0C               	movwf	(i2___aodiv@divisor+3)^0,c
 20004  0034BE  0E00               	movlw	0
 20005  0034C0  6E0D               	movwf	(i2___aodiv@divisor+4)^0,c
 20006  0034C2  0E00               	movlw	0
 20007  0034C4  6E0E               	movwf	(i2___aodiv@divisor+5)^0,c
 20008  0034C6  0E00               	movlw	0
 20009  0034C8  6E0F               	movwf	(i2___aodiv@divisor+6)^0,c
 20010  0034CA  0E00               	movlw	0
 20011  0034CC  6E10               	movwf	(i2___aodiv@divisor+7)^0,c
 20012  0034CE  EC01  F024         	call	i2___aodiv	;wreg free
 20013  0034D2  C001  F038         	movff	?i2___aodiv,i2dtoa@n
 20014  0034D6  C002  F039         	movff	?i2___aodiv+1,i2dtoa@n+1
 20015  0034DA  C003  F03A         	movff	?i2___aodiv+2,i2dtoa@n+2
 20016  0034DE  C004  F03B         	movff	?i2___aodiv+3,i2dtoa@n+3
 20017  0034E2  C005  F03C         	movff	?i2___aodiv+4,i2dtoa@n+4
 20018  0034E6  C006  F03D         	movff	?i2___aodiv+5,i2dtoa@n+5
 20019  0034EA  C007  F03E         	movff	?i2___aodiv+6,i2dtoa@n+6
 20020  0034EE  C008  F03F         	movff	?i2___aodiv+7,i2dtoa@n+7
 20021  0034F2                     i2l7764:
 20022                           
 20023                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 20024  0034F2  BE41               	btfsc	(i2dtoa@i+1)^0,7,c
 20025  0034F4  EF84  F01A         	goto	i2u901_41
 20026  0034F8  5041               	movf	(i2dtoa@i+1)^0,w,c
 20027  0034FA  E108               	bnz	i2u901_40
 20028  0034FC  0440               	decf	i2dtoa@i^0,w,c
 20029  0034FE  A0D8               	btfss	status,0,c
 20030  003500  EF84  F01A         	goto	i2u901_41
 20031  003504  EF86  F01A         	goto	i2u901_40
 20032  003508                     i2u901_41:
 20033  003508  EFB7  F01A         	goto	i2l7774
 20034  00350C                     i2u901_40:
 20035  00350C  5038               	movf	i2dtoa@n^0,w,c
 20036  00350E  1039               	iorwf	(i2dtoa@n+1)^0,w,c
 20037  003510  103A               	iorwf	(i2dtoa@n+2)^0,w,c
 20038  003512  103B               	iorwf	(i2dtoa@n+3)^0,w,c
 20039  003514  103C               	iorwf	(i2dtoa@n+4)^0,w,c
 20040  003516  103D               	iorwf	(i2dtoa@n+5)^0,w,c
 20041  003518  103E               	iorwf	(i2dtoa@n+6)^0,w,c
 20042  00351A  103F               	iorwf	(i2dtoa@n+7)^0,w,c
 20043  00351C  A4D8               	btfss	status,2,c
 20044  00351E  EF93  F01A         	goto	i2u902_41
 20045  003522  EF95  F01A         	goto	i2u902_40
 20046  003526                     i2u902_41:
 20047  003526  EFFD  F019         	goto	i2l7754
 20048  00352A                     i2u902_40:
 20049  00352A  BE33               	btfsc	(i2dtoa@p+1)^0,7,c
 20050  00352C  EFA2  F01A         	goto	i2u903_40
 20051  003530  5033               	movf	(i2dtoa@p+1)^0,w,c
 20052  003532  E106               	bnz	i2u903_41
 20053  003534  0432               	decf	i2dtoa@p^0,w,c
 20054  003536  B0D8               	btfsc	status,0,c
 20055  003538  EFA0  F01A         	goto	i2u903_41
 20056  00353C  EFA2  F01A         	goto	i2u903_40
 20057  003540                     i2u903_41:
 20058  003540  EFFD  F019         	goto	i2l7754
 20059  003544                     i2u903_40:
 20060  003544  BE35               	btfsc	(i2dtoa@w+1)^0,7,c
 20061  003546  EFAD  F01A         	goto	i2u904_41
 20062  00354A  5035               	movf	(i2dtoa@w+1)^0,w,c
 20063  00354C  E108               	bnz	i2u904_40
 20064  00354E  0434               	decf	i2dtoa@w^0,w,c
 20065  003550  A0D8               	btfss	status,0,c
 20066  003552  EFAD  F01A         	goto	i2u904_41
 20067  003556  EFAF  F01A         	goto	i2u904_40
 20068  00355A                     i2u904_41:
 20069  00355A  EFB7  F01A         	goto	i2l7774
 20070  00355E                     i2u904_40:
 20071  00355E  0100               	movlb	0	; () banked
 20072  003560  B3B9               	btfsc	_flags& (0+255),1,b
 20073  003562  EFB5  F01A         	goto	i2u905_41
 20074  003566  EFB7  F01A         	goto	i2u905_40
 20075  00356A                     i2u905_41:
 20076  00356A  EFFD  F019         	goto	i2l7754
 20077  00356E                     i2u905_40:
 20078  00356E                     i2l7774:
 20079                           
 20080                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 20081  00356E  5036               	movf	i2dtoa@s^0,w,c
 20082  003570  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 20083  003572  A4D8               	btfss	status,2,c
 20084  003574  EFBE  F01A         	goto	i2u906_41
 20085  003578  EFC0  F01A         	goto	i2u906_40
 20086  00357C                     i2u906_41:
 20087  00357C  EFC8  F01A         	goto	i2l7778
 20088  003580                     i2u906_40:
 20089  003580  0100               	movlb	0	; () banked
 20090  003582  A5B9               	btfss	_flags& (0+255),2,b
 20091  003584  EFC6  F01A         	goto	i2u907_41
 20092  003588  EFC8  F01A         	goto	i2u907_40
 20093  00358C                     i2u907_41:
 20094  00358C  EFE6  F01A         	goto	i2l7788
 20095  003590                     i2u907_40:
 20096  003590                     i2l7778:
 20097                           
 20098                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 20099  003590  0640               	decf	i2dtoa@i^0,f,c
 20100  003592  A0D8               	btfss	status,0,c
 20101  003594  0641               	decf	(i2dtoa@i+1)^0,f,c
 20102  003596                     
 20103                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 20104  003596  5036               	movf	i2dtoa@s^0,w,c
 20105  003598  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 20106  00359A  A4D8               	btfss	status,2,c
 20107  00359C  EFD2  F01A         	goto	i2u908_41
 20108  0035A0  EFD4  F01A         	goto	i2u908_40
 20109  0035A4                     i2u908_41:
 20110  0035A4  EFDA  F01A         	goto	i2l7784
 20111  0035A8                     i2u908_40:
 20112  0035A8  0E00               	movlw	0
 20113  0035AA  6E31               	movwf	(i2_dtoa$1825+1)^0,c
 20114  0035AC  0E2B               	movlw	43
 20115  0035AE  6E30               	movwf	i2_dtoa$1825^0,c
 20116  0035B0  EFDE  F01A         	goto	i2l7786
 20117  0035B4                     i2l7784:
 20118  0035B4  0E00               	movlw	0
 20119  0035B6  6E31               	movwf	(i2_dtoa$1825+1)^0,c
 20120  0035B8  0E2D               	movlw	45
 20121  0035BA  6E30               	movwf	i2_dtoa$1825^0,c
 20122  0035BC                     i2l7786:
 20123  0035BC  0E89               	movlw	low _dbuf
 20124  0035BE  2440               	addwf	i2dtoa@i^0,w,c
 20125  0035C0  6ED9               	movwf	fsr2l,c
 20126  0035C2  0E01               	movlw	high _dbuf
 20127  0035C4  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 20128  0035C6  6EDA               	movwf	fsr2h,c
 20129  0035C8  C030  FFDF         	movff	i2_dtoa$1825,indf2
 20130  0035CC                     i2l7788:
 20131                           
 20132                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 20133  0035CC  C01E  F013         	movff	i2dtoa@fp,i2pad@fp
 20134  0035D0  C01F  F014         	movff	i2dtoa@fp+1,i2pad@fp+1
 20135  0035D4  0E89               	movlw	low _dbuf
 20136  0035D6  2440               	addwf	i2dtoa@i^0,w,c
 20137  0035D8  6E15               	movwf	i2pad@buf^0,c
 20138  0035DA  0E01               	movlw	high _dbuf
 20139  0035DC  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 20140  0035DE  6E16               	movwf	(i2pad@buf+1)^0,c
 20141  0035E0  C034  F017         	movff	i2dtoa@w,i2pad@p
 20142  0035E4  C035  F018         	movff	i2dtoa@w+1,i2pad@p+1
 20143  0035E8  EC36  F02D         	call	i2_pad	;wreg free
 20144  0035EC  C013  F01E         	movff	?i2_pad,?i2_dtoa
 20145  0035F0  C014  F01F         	movff	?i2_pad+1,?i2_dtoa+1
 20146  0035F4  0012               	return		;funcret
 20147  0035F6                     __end_ofi2_dtoa:
 20148                           	opt callstack 0
 20149                           
 20150 ;; *************** function i2_abs *****************
 20151 ;; Defined at:
 20152 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 20153 ;; Parameters:    Size  Location     Type
 20154 ;;  a               2   18[COMRAM] int 
 20155 ;; Auto vars:     Size  Location     Type
 20156 ;;		None
 20157 ;; Return value:  Size  Location     Type
 20158 ;;                  2   18[COMRAM] int 
 20159 ;; Registers used:
 20160 ;;		wreg, status,2, status,0
 20161 ;; Tracked objects:
 20162 ;;		On entry : 0/0
 20163 ;;		On exit  : 0/0
 20164 ;;		Unchanged: 0/0
 20165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20166 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20168 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20169 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20170 ;;Total ram usage:        4 bytes
 20171 ;; Hardware stack levels used:    1
 20172 ;; This function calls:
 20173 ;;		Nothing
 20174 ;; This function is called by:
 20175 ;;		i2_dtoa
 20176 ;; This function uses a non-reentrant model
 20177 ;;
 20178                           
 20179                           	psect	text87
 20180  0063F8                     __ptext87:
 20181                           	opt callstack 0
 20182  0063F8                     i2_abs:
 20183                           	opt callstack 12
 20184  0063F8  BE14               	btfsc	(i2abs@a+1)^0,7,c
 20185  0063FA  EF09  F032         	goto	i2u877_40
 20186  0063FE  5014               	movf	(i2abs@a+1)^0,w,c
 20187  006400  E106               	bnz	i2u877_41
 20188  006402  0413               	decf	i2abs@a^0,w,c
 20189  006404  B0D8               	btfsc	status,0,c
 20190  006406  EF07  F032         	goto	i2u877_41
 20191  00640A  EF09  F032         	goto	i2u877_40
 20192  00640E                     i2u877_41:
 20193  00640E  EF17  F032         	goto	i2l1601
 20194  006412                     i2u877_40:
 20195  006412  C013  F015         	movff	i2abs@a,??i2_abs
 20196  006416  C014  F016         	movff	i2abs@a+1,??i2_abs+1
 20197  00641A  1E15               	comf	??i2_abs^0,f,c
 20198  00641C  1E16               	comf	(??i2_abs+1)^0,f,c
 20199  00641E  4A15               	infsnz	??i2_abs^0,f,c
 20200  006420  2A16               	incf	(??i2_abs+1)^0,f,c
 20201  006422  C015  F013         	movff	??i2_abs,?i2_abs
 20202  006426  C016  F014         	movff	??i2_abs+1,?i2_abs+1
 20203  00642A  EF1B  F032         	goto	i2l1604
 20204  00642E                     i2l1601:
 20205  00642E  C013  F013         	movff	i2abs@a,?i2_abs
 20206  006432  C014  F014         	movff	i2abs@a+1,?i2_abs+1
 20207  006436                     i2l1604:
 20208  006436  0012               	return		;funcret
 20209  006438                     __end_ofi2_abs:
 20210                           	opt callstack 0
 20211                           
 20212 ;; *************** function i2___aomod *****************
 20213 ;; Defined at:
 20214 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 20215 ;; Parameters:    Size  Location     Type
 20216 ;;  dividend        8    0[COMRAM] long long 
 20217 ;;  divisor         8    8[COMRAM] long long 
 20218 ;; Auto vars:     Size  Location     Type
 20219 ;;  __aomod         1   17[COMRAM] unsigned char 
 20220 ;;  __aomod         1   16[COMRAM] unsigned char 
 20221 ;; Return value:  Size  Location     Type
 20222 ;;                  8    0[COMRAM] long long 
 20223 ;; Registers used:
 20224 ;;		wreg, status,2, status,0
 20225 ;; Tracked objects:
 20226 ;;		On entry : 0/0
 20227 ;;		On exit  : 0/0
 20228 ;;		Unchanged: 0/0
 20229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20230 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20231 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20233 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20234 ;;Total ram usage:       18 bytes
 20235 ;; Hardware stack levels used:    1
 20236 ;; This function calls:
 20237 ;;		Nothing
 20238 ;; This function is called by:
 20239 ;;		i2_dtoa
 20240 ;; This function uses a non-reentrant model
 20241 ;;
 20242                           
 20243                           	psect	text88
 20244  004DF8                     __ptext88:
 20245                           	opt callstack 0
 20246  004DF8                     i2___aomod:
 20247                           	opt callstack 12
 20248  004DF8  0E00               	movlw	0
 20249  004DFA  6E12               	movwf	i2___aomod@sign^0,c
 20250  004DFC  BE08               	btfsc	(i2___aomod@dividend+7)^0,7,c
 20251  004DFE  EF05  F027         	goto	i2u864_40
 20252  004E02  EF03  F027         	goto	i2u864_41
 20253  004E06                     i2u864_41:
 20254  004E06  EF17  F027         	goto	i2l7590
 20255  004E0A                     i2u864_40:
 20256  004E0A  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
 20257  004E0C  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
 20258  004E0E  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
 20259  004E10  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
 20260  004E12  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
 20261  004E14  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
 20262  004E16  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
 20263  004E18  6C01               	negf	i2___aomod@dividend^0,c
 20264  004E1A  0E00               	movlw	0
 20265  004E1C  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
 20266  004E1E  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
 20267  004E20  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
 20268  004E22  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
 20269  004E24  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
 20270  004E26  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
 20271  004E28  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
 20272  004E2A  0E01               	movlw	1
 20273  004E2C  6E12               	movwf	i2___aomod@sign^0,c
 20274  004E2E                     i2l7590:
 20275  004E2E  BE10               	btfsc	(i2___aomod@divisor+7)^0,7,c
 20276  004E30  EF1E  F027         	goto	i2u865_40
 20277  004E34  EF1C  F027         	goto	i2u865_41
 20278  004E38                     i2u865_41:
 20279  004E38  EF2E  F027         	goto	i2l7594
 20280  004E3C                     i2u865_40:
 20281  004E3C  1E10               	comf	(i2___aomod@divisor+7)^0,f,c
 20282  004E3E  1E0F               	comf	(i2___aomod@divisor+6)^0,f,c
 20283  004E40  1E0E               	comf	(i2___aomod@divisor+5)^0,f,c
 20284  004E42  1E0D               	comf	(i2___aomod@divisor+4)^0,f,c
 20285  004E44  1E0C               	comf	(i2___aomod@divisor+3)^0,f,c
 20286  004E46  1E0B               	comf	(i2___aomod@divisor+2)^0,f,c
 20287  004E48  1E0A               	comf	(i2___aomod@divisor+1)^0,f,c
 20288  004E4A  6C09               	negf	i2___aomod@divisor^0,c
 20289  004E4C  0E00               	movlw	0
 20290  004E4E  220A               	addwfc	(i2___aomod@divisor+1)^0,f,c
 20291  004E50  220B               	addwfc	(i2___aomod@divisor+2)^0,f,c
 20292  004E52  220C               	addwfc	(i2___aomod@divisor+3)^0,f,c
 20293  004E54  220D               	addwfc	(i2___aomod@divisor+4)^0,f,c
 20294  004E56  220E               	addwfc	(i2___aomod@divisor+5)^0,f,c
 20295  004E58  220F               	addwfc	(i2___aomod@divisor+6)^0,f,c
 20296  004E5A  2210               	addwfc	(i2___aomod@divisor+7)^0,f,c
 20297  004E5C                     i2l7594:
 20298  004E5C  5009               	movf	i2___aomod@divisor^0,w,c
 20299  004E5E  100A               	iorwf	(i2___aomod@divisor+1)^0,w,c
 20300  004E60  100B               	iorwf	(i2___aomod@divisor+2)^0,w,c
 20301  004E62  100C               	iorwf	(i2___aomod@divisor+3)^0,w,c
 20302  004E64  100D               	iorwf	(i2___aomod@divisor+4)^0,w,c
 20303  004E66  100E               	iorwf	(i2___aomod@divisor+5)^0,w,c
 20304  004E68  100F               	iorwf	(i2___aomod@divisor+6)^0,w,c
 20305  004E6A  1010               	iorwf	(i2___aomod@divisor+7)^0,w,c
 20306  004E6C  B4D8               	btfsc	status,2,c
 20307  004E6E  EF3B  F027         	goto	i2u866_41
 20308  004E72  EF3D  F027         	goto	i2u866_40
 20309  004E76                     i2u866_41:
 20310  004E76  EF85  F027         	goto	i2l7610
 20311  004E7A                     i2u866_40:
 20312  004E7A  0E01               	movlw	1
 20313  004E7C  6E11               	movwf	i2___aomod@counter^0,c
 20314  004E7E  EF4B  F027         	goto	i2l7600
 20315  004E82                     i2l7598:
 20316  004E82  90D8               	bcf	status,0,c
 20317  004E84  3609               	rlcf	i2___aomod@divisor^0,f,c
 20318  004E86  360A               	rlcf	(i2___aomod@divisor+1)^0,f,c
 20319  004E88  360B               	rlcf	(i2___aomod@divisor+2)^0,f,c
 20320  004E8A  360C               	rlcf	(i2___aomod@divisor+3)^0,f,c
 20321  004E8C  360D               	rlcf	(i2___aomod@divisor+4)^0,f,c
 20322  004E8E  360E               	rlcf	(i2___aomod@divisor+5)^0,f,c
 20323  004E90  360F               	rlcf	(i2___aomod@divisor+6)^0,f,c
 20324  004E92  3610               	rlcf	(i2___aomod@divisor+7)^0,f,c
 20325  004E94  2A11               	incf	i2___aomod@counter^0,f,c
 20326  004E96                     i2l7600:
 20327  004E96  AE10               	btfss	(i2___aomod@divisor+7)^0,7,c
 20328  004E98  EF50  F027         	goto	i2u867_41
 20329  004E9C  EF52  F027         	goto	i2u867_40
 20330  004EA0                     i2u867_41:
 20331  004EA0  EF41  F027         	goto	i2l7598
 20332  004EA4                     i2u867_40:
 20333  004EA4                     i2l7602:
 20334  004EA4  5009               	movf	i2___aomod@divisor^0,w,c
 20335  004EA6  5C01               	subwf	i2___aomod@dividend^0,w,c
 20336  004EA8  500A               	movf	(i2___aomod@divisor+1)^0,w,c
 20337  004EAA  5802               	subwfb	(i2___aomod@dividend+1)^0,w,c
 20338  004EAC  500B               	movf	(i2___aomod@divisor+2)^0,w,c
 20339  004EAE  5803               	subwfb	(i2___aomod@dividend+2)^0,w,c
 20340  004EB0  500C               	movf	(i2___aomod@divisor+3)^0,w,c
 20341  004EB2  5804               	subwfb	(i2___aomod@dividend+3)^0,w,c
 20342  004EB4  500D               	movf	(i2___aomod@divisor+4)^0,w,c
 20343  004EB6  5805               	subwfb	(i2___aomod@dividend+4)^0,w,c
 20344  004EB8  500E               	movf	(i2___aomod@divisor+5)^0,w,c
 20345  004EBA  5806               	subwfb	(i2___aomod@dividend+5)^0,w,c
 20346  004EBC  500F               	movf	(i2___aomod@divisor+6)^0,w,c
 20347  004EBE  5807               	subwfb	(i2___aomod@dividend+6)^0,w,c
 20348  004EC0  5010               	movf	(i2___aomod@divisor+7)^0,w,c
 20349  004EC2  5808               	subwfb	(i2___aomod@dividend+7)^0,w,c
 20350  004EC4  A0D8               	btfss	status,0,c
 20351  004EC6  EF67  F027         	goto	i2u868_41
 20352  004ECA  EF69  F027         	goto	i2u868_40
 20353  004ECE                     i2u868_41:
 20354  004ECE  EF79  F027         	goto	i2l7606
 20355  004ED2                     i2u868_40:
 20356  004ED2  5009               	movf	i2___aomod@divisor^0,w,c
 20357  004ED4  5E01               	subwf	i2___aomod@dividend^0,f,c
 20358  004ED6  500A               	movf	(i2___aomod@divisor+1)^0,w,c
 20359  004ED8  5A02               	subwfb	(i2___aomod@dividend+1)^0,f,c
 20360  004EDA  500B               	movf	(i2___aomod@divisor+2)^0,w,c
 20361  004EDC  5A03               	subwfb	(i2___aomod@dividend+2)^0,f,c
 20362  004EDE  500C               	movf	(i2___aomod@divisor+3)^0,w,c
 20363  004EE0  5A04               	subwfb	(i2___aomod@dividend+3)^0,f,c
 20364  004EE2  500D               	movf	(i2___aomod@divisor+4)^0,w,c
 20365  004EE4  5A05               	subwfb	(i2___aomod@dividend+4)^0,f,c
 20366  004EE6  500E               	movf	(i2___aomod@divisor+5)^0,w,c
 20367  004EE8  5A06               	subwfb	(i2___aomod@dividend+5)^0,f,c
 20368  004EEA  500F               	movf	(i2___aomod@divisor+6)^0,w,c
 20369  004EEC  5A07               	subwfb	(i2___aomod@dividend+6)^0,f,c
 20370  004EEE  5010               	movf	(i2___aomod@divisor+7)^0,w,c
 20371  004EF0  5A08               	subwfb	(i2___aomod@dividend+7)^0,f,c
 20372  004EF2                     i2l7606:
 20373  004EF2  90D8               	bcf	status,0,c
 20374  004EF4  3210               	rrcf	(i2___aomod@divisor+7)^0,f,c
 20375  004EF6  320F               	rrcf	(i2___aomod@divisor+6)^0,f,c
 20376  004EF8  320E               	rrcf	(i2___aomod@divisor+5)^0,f,c
 20377  004EFA  320D               	rrcf	(i2___aomod@divisor+4)^0,f,c
 20378  004EFC  320C               	rrcf	(i2___aomod@divisor+3)^0,f,c
 20379  004EFE  320B               	rrcf	(i2___aomod@divisor+2)^0,f,c
 20380  004F00  320A               	rrcf	(i2___aomod@divisor+1)^0,f,c
 20381  004F02  3209               	rrcf	i2___aomod@divisor^0,f,c
 20382  004F04  2E11               	decfsz	i2___aomod@counter^0,f,c
 20383  004F06  EF52  F027         	goto	i2l7602
 20384  004F0A                     i2l7610:
 20385  004F0A  5012               	movf	i2___aomod@sign^0,w,c
 20386  004F0C  B4D8               	btfsc	status,2,c
 20387  004F0E  EF8B  F027         	goto	i2u869_41
 20388  004F12  EF8D  F027         	goto	i2u869_40
 20389  004F16                     i2u869_41:
 20390  004F16  EF9D  F027         	goto	i2l7614
 20391  004F1A                     i2u869_40:
 20392  004F1A  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
 20393  004F1C  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
 20394  004F1E  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
 20395  004F20  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
 20396  004F22  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
 20397  004F24  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
 20398  004F26  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
 20399  004F28  6C01               	negf	i2___aomod@dividend^0,c
 20400  004F2A  0E00               	movlw	0
 20401  004F2C  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
 20402  004F2E  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
 20403  004F30  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
 20404  004F32  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
 20405  004F34  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
 20406  004F36  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
 20407  004F38  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
 20408  004F3A                     i2l7614:
 20409  004F3A  C001  F001         	movff	i2___aomod@dividend,?i2___aomod
 20410  004F3E  C002  F002         	movff	i2___aomod@dividend+1,?i2___aomod+1
 20411  004F42  C003  F003         	movff	i2___aomod@dividend+2,?i2___aomod+2
 20412  004F46  C004  F004         	movff	i2___aomod@dividend+3,?i2___aomod+3
 20413  004F4A  C005  F005         	movff	i2___aomod@dividend+4,?i2___aomod+4
 20414  004F4E  C006  F006         	movff	i2___aomod@dividend+5,?i2___aomod+5
 20415  004F52  C007  F007         	movff	i2___aomod@dividend+6,?i2___aomod+6
 20416  004F56  C008  F008         	movff	i2___aomod@dividend+7,?i2___aomod+7
 20417  004F5A  0012               	return		;funcret
 20418  004F5C                     __end_ofi2___aomod:
 20419                           	opt callstack 0
 20420                           
 20421 ;; *************** function i2___aodiv *****************
 20422 ;; Defined at:
 20423 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 20424 ;; Parameters:    Size  Location     Type
 20425 ;;  dividend        8    0[COMRAM] long long 
 20426 ;;  divisor         8    8[COMRAM] long long 
 20427 ;; Auto vars:     Size  Location     Type
 20428 ;;  __aodiv         8   18[COMRAM] long long 
 20429 ;;  __aodiv         1   17[COMRAM] unsigned char 
 20430 ;;  __aodiv         1   16[COMRAM] unsigned char 
 20431 ;; Return value:  Size  Location     Type
 20432 ;;                  8    0[COMRAM] long long 
 20433 ;; Registers used:
 20434 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20435 ;; Tracked objects:
 20436 ;;		On entry : 0/0
 20437 ;;		On exit  : 0/0
 20438 ;;		Unchanged: 0/0
 20439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20440 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20441 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20443 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20444 ;;Total ram usage:       26 bytes
 20445 ;; Hardware stack levels used:    1
 20446 ;; This function calls:
 20447 ;;		Nothing
 20448 ;; This function is called by:
 20449 ;;		i2_dtoa
 20450 ;; This function uses a non-reentrant model
 20451 ;;
 20452                           
 20453                           	psect	text89
 20454  004802                     __ptext89:
 20455                           	opt callstack 0
 20456  004802                     i2___aodiv:
 20457                           	opt callstack 12
 20458  004802  0E00               	movlw	0
 20459  004804  6E12               	movwf	i2___aodiv@sign^0,c
 20460  004806  BE10               	btfsc	(i2___aodiv@divisor+7)^0,7,c
 20461  004808  EF0A  F024         	goto	i2u857_40
 20462  00480C  EF08  F024         	goto	i2u857_41
 20463  004810                     i2u857_41:
 20464  004810  EF1C  F024         	goto	i2l7546
 20465  004814                     i2u857_40:
 20466  004814  1E10               	comf	(i2___aodiv@divisor+7)^0,f,c
 20467  004816  1E0F               	comf	(i2___aodiv@divisor+6)^0,f,c
 20468  004818  1E0E               	comf	(i2___aodiv@divisor+5)^0,f,c
 20469  00481A  1E0D               	comf	(i2___aodiv@divisor+4)^0,f,c
 20470  00481C  1E0C               	comf	(i2___aodiv@divisor+3)^0,f,c
 20471  00481E  1E0B               	comf	(i2___aodiv@divisor+2)^0,f,c
 20472  004820  1E0A               	comf	(i2___aodiv@divisor+1)^0,f,c
 20473  004822  6C09               	negf	i2___aodiv@divisor^0,c
 20474  004824  0E00               	movlw	0
 20475  004826  220A               	addwfc	(i2___aodiv@divisor+1)^0,f,c
 20476  004828  220B               	addwfc	(i2___aodiv@divisor+2)^0,f,c
 20477  00482A  220C               	addwfc	(i2___aodiv@divisor+3)^0,f,c
 20478  00482C  220D               	addwfc	(i2___aodiv@divisor+4)^0,f,c
 20479  00482E  220E               	addwfc	(i2___aodiv@divisor+5)^0,f,c
 20480  004830  220F               	addwfc	(i2___aodiv@divisor+6)^0,f,c
 20481  004832  2210               	addwfc	(i2___aodiv@divisor+7)^0,f,c
 20482  004834  0E01               	movlw	1
 20483  004836  6E12               	movwf	i2___aodiv@sign^0,c
 20484  004838                     i2l7546:
 20485  004838  BE08               	btfsc	(i2___aodiv@dividend+7)^0,7,c
 20486  00483A  EF23  F024         	goto	i2u858_40
 20487  00483E  EF21  F024         	goto	i2u858_41
 20488  004842                     i2u858_41:
 20489  004842  EF35  F024         	goto	i2l7552
 20490  004846                     i2u858_40:
 20491  004846  1E08               	comf	(i2___aodiv@dividend+7)^0,f,c
 20492  004848  1E07               	comf	(i2___aodiv@dividend+6)^0,f,c
 20493  00484A  1E06               	comf	(i2___aodiv@dividend+5)^0,f,c
 20494  00484C  1E05               	comf	(i2___aodiv@dividend+4)^0,f,c
 20495  00484E  1E04               	comf	(i2___aodiv@dividend+3)^0,f,c
 20496  004850  1E03               	comf	(i2___aodiv@dividend+2)^0,f,c
 20497  004852  1E02               	comf	(i2___aodiv@dividend+1)^0,f,c
 20498  004854  6C01               	negf	i2___aodiv@dividend^0,c
 20499  004856  0E00               	movlw	0
 20500  004858  2202               	addwfc	(i2___aodiv@dividend+1)^0,f,c
 20501  00485A  2203               	addwfc	(i2___aodiv@dividend+2)^0,f,c
 20502  00485C  2204               	addwfc	(i2___aodiv@dividend+3)^0,f,c
 20503  00485E  2205               	addwfc	(i2___aodiv@dividend+4)^0,f,c
 20504  004860  2206               	addwfc	(i2___aodiv@dividend+5)^0,f,c
 20505  004862  2207               	addwfc	(i2___aodiv@dividend+6)^0,f,c
 20506  004864  2208               	addwfc	(i2___aodiv@dividend+7)^0,f,c
 20507  004866  0E01               	movlw	1
 20508  004868  1A12               	xorwf	i2___aodiv@sign^0,f,c
 20509  00486A                     i2l7552:
 20510  00486A  EE20  F013         	lfsr	2,i2___aodiv@quotient
 20511  00486E  0E07               	movlw	7
 20512  004870                     i2u859_41:
 20513  004870  6ADE               	clrf	postinc2,c
 20514  004872  06E8               	decf	wreg,f,c
 20515  004874  E2FD               	bc	i2u859_41
 20516  004876  5009               	movf	i2___aodiv@divisor^0,w,c
 20517  004878  100A               	iorwf	(i2___aodiv@divisor+1)^0,w,c
 20518  00487A  100B               	iorwf	(i2___aodiv@divisor+2)^0,w,c
 20519  00487C  100C               	iorwf	(i2___aodiv@divisor+3)^0,w,c
 20520  00487E  100D               	iorwf	(i2___aodiv@divisor+4)^0,w,c
 20521  004880  100E               	iorwf	(i2___aodiv@divisor+5)^0,w,c
 20522  004882  100F               	iorwf	(i2___aodiv@divisor+6)^0,w,c
 20523  004884  1010               	iorwf	(i2___aodiv@divisor+7)^0,w,c
 20524  004886  B4D8               	btfsc	status,2,c
 20525  004888  EF48  F024         	goto	i2u860_41
 20526  00488C  EF4A  F024         	goto	i2u860_40
 20527  004890                     i2u860_41:
 20528  004890  EF9C  F024         	goto	i2l7574
 20529  004894                     i2u860_40:
 20530  004894  0E01               	movlw	1
 20531  004896  6E11               	movwf	i2___aodiv@counter^0,c
 20532  004898  EF58  F024         	goto	i2l7560
 20533  00489C                     i2l7558:
 20534  00489C  90D8               	bcf	status,0,c
 20535  00489E  3609               	rlcf	i2___aodiv@divisor^0,f,c
 20536  0048A0  360A               	rlcf	(i2___aodiv@divisor+1)^0,f,c
 20537  0048A2  360B               	rlcf	(i2___aodiv@divisor+2)^0,f,c
 20538  0048A4  360C               	rlcf	(i2___aodiv@divisor+3)^0,f,c
 20539  0048A6  360D               	rlcf	(i2___aodiv@divisor+4)^0,f,c
 20540  0048A8  360E               	rlcf	(i2___aodiv@divisor+5)^0,f,c
 20541  0048AA  360F               	rlcf	(i2___aodiv@divisor+6)^0,f,c
 20542  0048AC  3610               	rlcf	(i2___aodiv@divisor+7)^0,f,c
 20543  0048AE  2A11               	incf	i2___aodiv@counter^0,f,c
 20544  0048B0                     i2l7560:
 20545  0048B0  AE10               	btfss	(i2___aodiv@divisor+7)^0,7,c
 20546  0048B2  EF5D  F024         	goto	i2u861_41
 20547  0048B6  EF5F  F024         	goto	i2u861_40
 20548  0048BA                     i2u861_41:
 20549  0048BA  EF4E  F024         	goto	i2l7558
 20550  0048BE                     i2u861_40:
 20551  0048BE                     i2l7562:
 20552  0048BE  90D8               	bcf	status,0,c
 20553  0048C0  3613               	rlcf	i2___aodiv@quotient^0,f,c
 20554  0048C2  3614               	rlcf	(i2___aodiv@quotient+1)^0,f,c
 20555  0048C4  3615               	rlcf	(i2___aodiv@quotient+2)^0,f,c
 20556  0048C6  3616               	rlcf	(i2___aodiv@quotient+3)^0,f,c
 20557  0048C8  3617               	rlcf	(i2___aodiv@quotient+4)^0,f,c
 20558  0048CA  3618               	rlcf	(i2___aodiv@quotient+5)^0,f,c
 20559  0048CC  3619               	rlcf	(i2___aodiv@quotient+6)^0,f,c
 20560  0048CE  361A               	rlcf	(i2___aodiv@quotient+7)^0,f,c
 20561  0048D0  5009               	movf	i2___aodiv@divisor^0,w,c
 20562  0048D2  5C01               	subwf	i2___aodiv@dividend^0,w,c
 20563  0048D4  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
 20564  0048D6  5802               	subwfb	(i2___aodiv@dividend+1)^0,w,c
 20565  0048D8  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
 20566  0048DA  5803               	subwfb	(i2___aodiv@dividend+2)^0,w,c
 20567  0048DC  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
 20568  0048DE  5804               	subwfb	(i2___aodiv@dividend+3)^0,w,c
 20569  0048E0  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
 20570  0048E2  5805               	subwfb	(i2___aodiv@dividend+4)^0,w,c
 20571  0048E4  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
 20572  0048E6  5806               	subwfb	(i2___aodiv@dividend+5)^0,w,c
 20573  0048E8  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
 20574  0048EA  5807               	subwfb	(i2___aodiv@dividend+6)^0,w,c
 20575  0048EC  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
 20576  0048EE  5808               	subwfb	(i2___aodiv@dividend+7)^0,w,c
 20577  0048F0  A0D8               	btfss	status,0,c
 20578  0048F2  EF7D  F024         	goto	i2u862_41
 20579  0048F6  EF7F  F024         	goto	i2u862_40
 20580  0048FA                     i2u862_41:
 20581  0048FA  EF90  F024         	goto	i2l7570
 20582  0048FE                     i2u862_40:
 20583  0048FE  5009               	movf	i2___aodiv@divisor^0,w,c
 20584  004900  5E01               	subwf	i2___aodiv@dividend^0,f,c
 20585  004902  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
 20586  004904  5A02               	subwfb	(i2___aodiv@dividend+1)^0,f,c
 20587  004906  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
 20588  004908  5A03               	subwfb	(i2___aodiv@dividend+2)^0,f,c
 20589  00490A  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
 20590  00490C  5A04               	subwfb	(i2___aodiv@dividend+3)^0,f,c
 20591  00490E  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
 20592  004910  5A05               	subwfb	(i2___aodiv@dividend+4)^0,f,c
 20593  004912  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
 20594  004914  5A06               	subwfb	(i2___aodiv@dividend+5)^0,f,c
 20595  004916  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
 20596  004918  5A07               	subwfb	(i2___aodiv@dividend+6)^0,f,c
 20597  00491A  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
 20598  00491C  5A08               	subwfb	(i2___aodiv@dividend+7)^0,f,c
 20599  00491E  8013               	bsf	i2___aodiv@quotient^0,0,c
 20600  004920                     i2l7570:
 20601  004920  90D8               	bcf	status,0,c
 20602  004922  3210               	rrcf	(i2___aodiv@divisor+7)^0,f,c
 20603  004924  320F               	rrcf	(i2___aodiv@divisor+6)^0,f,c
 20604  004926  320E               	rrcf	(i2___aodiv@divisor+5)^0,f,c
 20605  004928  320D               	rrcf	(i2___aodiv@divisor+4)^0,f,c
 20606  00492A  320C               	rrcf	(i2___aodiv@divisor+3)^0,f,c
 20607  00492C  320B               	rrcf	(i2___aodiv@divisor+2)^0,f,c
 20608  00492E  320A               	rrcf	(i2___aodiv@divisor+1)^0,f,c
 20609  004930  3209               	rrcf	i2___aodiv@divisor^0,f,c
 20610  004932  2E11               	decfsz	i2___aodiv@counter^0,f,c
 20611  004934  EF5F  F024         	goto	i2l7562
 20612  004938                     i2l7574:
 20613  004938  5012               	movf	i2___aodiv@sign^0,w,c
 20614  00493A  B4D8               	btfsc	status,2,c
 20615  00493C  EFA2  F024         	goto	i2u863_41
 20616  004940  EFA4  F024         	goto	i2u863_40
 20617  004944                     i2u863_41:
 20618  004944  EFB4  F024         	goto	i2l7578
 20619  004948                     i2u863_40:
 20620  004948  1E1A               	comf	(i2___aodiv@quotient+7)^0,f,c
 20621  00494A  1E19               	comf	(i2___aodiv@quotient+6)^0,f,c
 20622  00494C  1E18               	comf	(i2___aodiv@quotient+5)^0,f,c
 20623  00494E  1E17               	comf	(i2___aodiv@quotient+4)^0,f,c
 20624  004950  1E16               	comf	(i2___aodiv@quotient+3)^0,f,c
 20625  004952  1E15               	comf	(i2___aodiv@quotient+2)^0,f,c
 20626  004954  1E14               	comf	(i2___aodiv@quotient+1)^0,f,c
 20627  004956  6C13               	negf	i2___aodiv@quotient^0,c
 20628  004958  0E00               	movlw	0
 20629  00495A  2214               	addwfc	(i2___aodiv@quotient+1)^0,f,c
 20630  00495C  2215               	addwfc	(i2___aodiv@quotient+2)^0,f,c
 20631  00495E  2216               	addwfc	(i2___aodiv@quotient+3)^0,f,c
 20632  004960  2217               	addwfc	(i2___aodiv@quotient+4)^0,f,c
 20633  004962  2218               	addwfc	(i2___aodiv@quotient+5)^0,f,c
 20634  004964  2219               	addwfc	(i2___aodiv@quotient+6)^0,f,c
 20635  004966  221A               	addwfc	(i2___aodiv@quotient+7)^0,f,c
 20636  004968                     i2l7578:
 20637  004968  C013  F001         	movff	i2___aodiv@quotient,?i2___aodiv
 20638  00496C  C014  F002         	movff	i2___aodiv@quotient+1,?i2___aodiv+1
 20639  004970  C015  F003         	movff	i2___aodiv@quotient+2,?i2___aodiv+2
 20640  004974  C016  F004         	movff	i2___aodiv@quotient+3,?i2___aodiv+3
 20641  004978  C017  F005         	movff	i2___aodiv@quotient+4,?i2___aodiv+4
 20642  00497C  C018  F006         	movff	i2___aodiv@quotient+5,?i2___aodiv+5
 20643  004980  C019  F007         	movff	i2___aodiv@quotient+6,?i2___aodiv+6
 20644  004984  C01A  F008         	movff	i2___aodiv@quotient+7,?i2___aodiv+7
 20645  004988  0012               	return		;funcret
 20646  00498A                     __end_ofi2___aodiv:
 20647                           	opt callstack 0
 20648                           
 20649 ;; *************** function i2_ctoa *****************
 20650 ;; Defined at:
 20651 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 20652 ;; Parameters:    Size  Location     Type
 20653 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 20654 ;;		 -> vsnprintf@f(6), NULL(0), 
 20655 ;;  c               1   31[COMRAM] unsigned char 
 20656 ;; Auto vars:     Size  Location     Type
 20657 ;;  ctoa            2   32[COMRAM] int 
 20658 ;;  ctoa            2    0        int 
 20659 ;; Return value:  Size  Location     Type
 20660 ;;                  2   29[COMRAM] int 
 20661 ;; Registers used:
 20662 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20663 ;; Tracked objects:
 20664 ;;		On entry : 0/0
 20665 ;;		On exit  : 0/0
 20666 ;;		Unchanged: 0/0
 20667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20668 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20669 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20671 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20672 ;;Total ram usage:        5 bytes
 20673 ;; Hardware stack levels used:    1
 20674 ;; Hardware stack levels required when called:    5
 20675 ;; This function calls:
 20676 ;;		i2_pad
 20677 ;; This function is called by:
 20678 ;;		i2_vfpfcnvrt
 20679 ;; This function uses a non-reentrant model
 20680 ;;
 20681                           
 20682                           	psect	text90
 20683  005FE6                     __ptext90:
 20684                           	opt callstack 0
 20685  005FE6                     i2_ctoa:
 20686                           	opt callstack 8
 20687  005FE6                     
 20688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 20689  005FE6  0100               	movlb	0	; () banked
 20690  005FE8  51B5               	movf	_width& (0+255),w,b
 20691  005FEA  11B6               	iorwf	(_width+1)& (0+255),w,b
 20692  005FEC  A4D8               	btfss	status,2,c
 20693  005FEE  EFFB  F02F         	goto	i2u893_41
 20694  005FF2  EFFD  F02F         	goto	i2u893_40
 20695  005FF6                     i2u893_41:
 20696  005FF6  EF03  F030         	goto	i2l7720
 20697  005FFA                     i2u893_40:
 20698  005FFA                     
 20699                           ; BSR set to: 0
 20700  005FFA  C0B5  F021         	movff	_width,i2ctoa@w
 20701  005FFE  C0B6  F022         	movff	_width+1,i2ctoa@w+1
 20702  006002  EF09  F030         	goto	i2l7722
 20703  006006                     i2l7720:
 20704                           
 20705                           ; BSR set to: 0
 20706  006006  0EFF               	movlw	255
 20707  006008  25B5               	addwf	_width& (0+255),w,b
 20708  00600A  6E21               	movwf	i2ctoa@w^0,c
 20709  00600C  0EFF               	movlw	255
 20710  00600E  21B6               	addwfc	(_width+1)& (0+255),w,b
 20711  006010  6E22               	movwf	(i2ctoa@w+1)^0,c
 20712  006012                     i2l7722:
 20713                           
 20714                           ; BSR set to: 0
 20715                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 20716  006012  C020  F189         	movff	i2ctoa@c,_dbuf
 20717  006016                     
 20718                           ; BSR set to: 0
 20719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 20720  006016  0E00               	movlw	0
 20721  006018  0101               	movlb	1	; () banked
 20722  00601A  6F8A               	movwf	(_dbuf+1)& (0+255),b
 20723  00601C                     
 20724                           ; BSR set to: 1
 20725                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 20726  00601C  C01E  F013         	movff	i2ctoa@fp,i2pad@fp
 20727  006020  C01F  F014         	movff	i2ctoa@fp+1,i2pad@fp+1
 20728  006024  0E89               	movlw	low _dbuf
 20729  006026  6E15               	movwf	i2pad@buf^0,c
 20730  006028  0E01               	movlw	high _dbuf
 20731  00602A  6E16               	movwf	(i2pad@buf+1)^0,c
 20732  00602C  C021  F017         	movff	i2ctoa@w,i2pad@p
 20733  006030  C022  F018         	movff	i2ctoa@w+1,i2pad@p+1
 20734  006034  EC36  F02D         	call	i2_pad	;wreg free
 20735  006038  C013  F01E         	movff	?i2_pad,?i2_ctoa
 20736  00603C  C014  F01F         	movff	?i2_pad+1,?i2_ctoa+1
 20737  006040  0012               	return		;funcret
 20738  006042                     __end_ofi2_ctoa:
 20739                           	opt callstack 0
 20740                           
 20741 ;; *************** function i2_pad *****************
 20742 ;; Defined at:
 20743 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 20744 ;; Parameters:    Size  Location     Type
 20745 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
 20746 ;;		 -> vsnprintf@f(6), NULL(0), 
 20747 ;;  buf             2   20[COMRAM] PTR unsigned char 
 20748 ;;		 -> dbuf(32), 
 20749 ;;  p               2   22[COMRAM] int 
 20750 ;; Auto vars:     Size  Location     Type
 20751 ;;  pad             2   27[COMRAM] int 
 20752 ;;  pad             2   25[COMRAM] int 
 20753 ;; Return value:  Size  Location     Type
 20754 ;;                  2   18[COMRAM] int 
 20755 ;; Registers used:
 20756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20757 ;; Tracked objects:
 20758 ;;		On entry : 0/0
 20759 ;;		On exit  : 0/0
 20760 ;;		Unchanged: 0/0
 20761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20762 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20763 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20764 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20765 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20766 ;;Total ram usage:       11 bytes
 20767 ;; Hardware stack levels used:    1
 20768 ;; Hardware stack levels required when called:    4
 20769 ;; This function calls:
 20770 ;;		i2_fputc
 20771 ;;		i2_fputs
 20772 ;;		i2_strlen
 20773 ;; This function is called by:
 20774 ;;		i2_ctoa
 20775 ;;		i2_dtoa
 20776 ;;		i2_otoa
 20777 ;;		i2_utoa
 20778 ;;		i2_xtoa
 20779 ;; This function uses a non-reentrant model
 20780 ;;
 20781                           
 20782                           	psect	text91
 20783  005A6C                     __ptext91:
 20784                           	opt callstack 0
 20785  005A6C                     i2_pad:
 20786                           	opt callstack 8
 20787  005A6C                     
 20788                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 20789  005A6C  0100               	movlb	0	; () banked
 20790  005A6E  A1B9               	btfss	_flags& (0+255),0,b
 20791  005A70  EF3C  F02D         	goto	i2u853_41
 20792  005A74  EF3E  F02D         	goto	i2u853_40
 20793  005A78                     i2u853_41:
 20794  005A78  EF48  F02D         	goto	i2l7514
 20795  005A7C                     i2u853_40:
 20796  005A7C                     
 20797                           ; BSR set to: 0
 20798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 20799  005A7C  C015  F00C         	movff	i2pad@buf,i2fputs@s
 20800  005A80  C016  F00D         	movff	i2pad@buf+1,i2fputs@s+1
 20801  005A84  C013  F00E         	movff	i2pad@fp,i2fputs@fp
 20802  005A88  C014  F00F         	movff	i2pad@fp+1,i2fputs@fp+1
 20803  005A8C  EC78  F031         	call	i2_fputs	;wreg free
 20804  005A90                     i2l7514:
 20805                           
 20806                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 20807  005A90  BE18               	btfsc	(i2pad@p+1)^0,7,c
 20808  005A92  EF4D  F02D         	goto	i2u854_41
 20809  005A96  EF4F  F02D         	goto	i2u854_40
 20810  005A9A                     i2u854_41:
 20811  005A9A  EF55  F02D         	goto	i2l7518
 20812  005A9E                     i2u854_40:
 20813  005A9E  C017  F01C         	movff	i2pad@p,i2pad@w
 20814  005AA2  C018  F01D         	movff	i2pad@p+1,i2pad@w+1
 20815  005AA6  EF59  F02D         	goto	i2l719
 20816  005AAA                     i2l7518:
 20817  005AAA  0E00               	movlw	0
 20818  005AAC  6E1D               	movwf	(i2pad@w+1)^0,c
 20819  005AAE  0E00               	movlw	0
 20820  005AB0  6E1C               	movwf	i2pad@w^0,c
 20821  005AB2                     i2l719:
 20822                           
 20823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 20824  005AB2  0E00               	movlw	0
 20825  005AB4  6E1B               	movwf	(i2pad@i+1)^0,c
 20826  005AB6  0E00               	movlw	0
 20827  005AB8  6E1A               	movwf	i2pad@i^0,c
 20828                           
 20829                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 20830  005ABA  EF6B  F02D         	goto	i2l7524
 20831  005ABE                     i2l7520:
 20832                           
 20833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 20834  005ABE  0E00               	movlw	0
 20835  005AC0  6E04               	movwf	(i2fputc@c+1)^0,c
 20836  005AC2  0E20               	movlw	32
 20837  005AC4  6E03               	movwf	i2fputc@c^0,c
 20838  005AC6  C013  F005         	movff	i2pad@fp,i2fputc@fp
 20839  005ACA  C014  F006         	movff	i2pad@fp+1,i2fputc@fp+1
 20840  005ACE  ECD1  F02C         	call	i2_fputc	;wreg free
 20841  005AD2                     
 20842                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 20843  005AD2  4A1A               	infsnz	i2pad@i^0,f,c
 20844  005AD4  2A1B               	incf	(i2pad@i+1)^0,f,c
 20845  005AD6                     i2l7524:
 20846                           
 20847                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 20848  005AD6  501C               	movf	i2pad@w^0,w,c
 20849  005AD8  5C1A               	subwf	i2pad@i^0,w,c
 20850  005ADA  501B               	movf	(i2pad@i+1)^0,w,c
 20851  005ADC  0A80               	xorlw	128
 20852  005ADE  6E19               	movwf	??i2_pad^0,c
 20853  005AE0  501D               	movf	(i2pad@w+1)^0,w,c
 20854  005AE2  0A80               	xorlw	128
 20855  005AE4  5819               	subwfb	??i2_pad^0,w,c
 20856  005AE6  A0D8               	btfss	status,0,c
 20857  005AE8  EF78  F02D         	goto	i2u855_41
 20858  005AEC  EF7A  F02D         	goto	i2u855_40
 20859  005AF0                     i2u855_41:
 20860  005AF0  EF5F  F02D         	goto	i2l7520
 20861  005AF4                     i2u855_40:
 20862  005AF4                     
 20863                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 20864  005AF4  0100               	movlb	0	; () banked
 20865  005AF6  B1B9               	btfsc	_flags& (0+255),0,b
 20866  005AF8  EF80  F02D         	goto	i2u856_41
 20867  005AFC  EF82  F02D         	goto	i2u856_40
 20868  005B00                     i2u856_41:
 20869  005B00  EF8C  F02D         	goto	i2l7528
 20870  005B04                     i2u856_40:
 20871  005B04                     
 20872                           ; BSR set to: 0
 20873                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 20874  005B04  C015  F00C         	movff	i2pad@buf,i2fputs@s
 20875  005B08  C016  F00D         	movff	i2pad@buf+1,i2fputs@s+1
 20876  005B0C  C013  F00E         	movff	i2pad@fp,i2fputs@fp
 20877  005B10  C014  F00F         	movff	i2pad@fp+1,i2fputs@fp+1
 20878  005B14  EC78  F031         	call	i2_fputs	;wreg free
 20879  005B18                     i2l7528:
 20880                           
 20881                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 20882  005B18  C015  F001         	movff	i2pad@buf,i2strlen@s
 20883  005B1C  C016  F002         	movff	i2pad@buf+1,i2strlen@s+1
 20884  005B20  EC3D  F033         	call	i2_strlen	;wreg free
 20885  005B24  501C               	movf	i2pad@w^0,w,c
 20886  005B26  2401               	addwf	?i2_strlen^0,w,c
 20887  005B28  6E13               	movwf	?i2_pad^0,c
 20888  005B2A  501D               	movf	(i2pad@w+1)^0,w,c
 20889  005B2C  2002               	addwfc	(?i2_strlen+1)^0,w,c
 20890  005B2E  6E14               	movwf	(?i2_pad+1)^0,c
 20891  005B30  0012               	return		;funcret
 20892  005B32                     __end_ofi2_pad:
 20893                           	opt callstack 0
 20894                           
 20895 ;; *************** function i2_strlen *****************
 20896 ;; Defined at:
 20897 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 20898 ;; Parameters:    Size  Location     Type
 20899 ;;  s               2    0[COMRAM] PTR const unsigned char 
 20900 ;;		 -> i2stoa@nuls(7), ?_snprintf(2), ?_printf(2), stoa@nuls(7), 
 20901 ;;		 -> dbuf(32), 
 20902 ;; Auto vars:     Size  Location     Type
 20903 ;;  strlen          2    2[COMRAM] PTR const unsigned char 
 20904 ;;		 -> i2stoa@nuls(7), ?_snprintf(2), ?_printf(2), stoa@nuls(7), 
 20905 ;;		 -> dbuf(32), 
 20906 ;; Return value:  Size  Location     Type
 20907 ;;                  2    0[COMRAM] unsigned int 
 20908 ;; Registers used:
 20909 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20910 ;; Tracked objects:
 20911 ;;		On entry : 0/0
 20912 ;;		On exit  : 0/0
 20913 ;;		Unchanged: 0/0
 20914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20915 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20916 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20918 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20919 ;;Total ram usage:        4 bytes
 20920 ;; Hardware stack levels used:    1
 20921 ;; This function calls:
 20922 ;;		Nothing
 20923 ;; This function is called by:
 20924 ;;		i2_pad
 20925 ;;		i2_stoa
 20926 ;; This function uses a non-reentrant model
 20927 ;;
 20928                           
 20929                           	psect	text92
 20930  00667A                     __ptext92:
 20931                           	opt callstack 0
 20932  00667A                     i2_strlen:
 20933                           	opt callstack 11
 20934  00667A  C001  F003         	movff	i2strlen@s,i2strlen@a
 20935  00667E  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
 20936  006682  EF45  F033         	goto	i2l7486
 20937  006686                     i2l7484:
 20938  006686  4A01               	infsnz	i2strlen@s^0,f,c
 20939  006688  2A02               	incf	(i2strlen@s+1)^0,f,c
 20940  00668A                     i2l7486:
 20941  00668A  C001  FFD9         	movff	i2strlen@s,fsr2l
 20942  00668E  C002  FFDA         	movff	i2strlen@s+1,fsr2h
 20943  006692  50DF               	movf	indf2,w,c
 20944  006694  A4D8               	btfss	status,2,c
 20945  006696  EF4F  F033         	goto	i2u846_41
 20946  00669A  EF51  F033         	goto	i2u846_40
 20947  00669E                     i2u846_41:
 20948  00669E  EF43  F033         	goto	i2l7484
 20949  0066A2                     i2u846_40:
 20950  0066A2  5003               	movf	i2strlen@a^0,w,c
 20951  0066A4  5C01               	subwf	i2strlen@s^0,w,c
 20952  0066A6  6E01               	movwf	?i2_strlen^0,c
 20953  0066A8  5004               	movf	(i2strlen@a+1)^0,w,c
 20954  0066AA  5802               	subwfb	(i2strlen@s+1)^0,w,c
 20955  0066AC  6E02               	movwf	(?i2_strlen+1)^0,c
 20956  0066AE  0012               	return		;funcret
 20957  0066B0                     __end_ofi2_strlen:
 20958                           	opt callstack 0
 20959                           
 20960 ;; *************** function i2_fputs *****************
 20961 ;; Defined at:
 20962 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 20963 ;; Parameters:    Size  Location     Type
 20964 ;;  s               2   11[COMRAM] PTR const unsigned char 
 20965 ;;		 -> dbuf(32), 
 20966 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
 20967 ;;		 -> vsnprintf@f(6), NULL(0), 
 20968 ;; Auto vars:     Size  Location     Type
 20969 ;;  fputs           2   16[COMRAM] int 
 20970 ;;  fputs           1   15[COMRAM] unsigned char 
 20971 ;; Return value:  Size  Location     Type
 20972 ;;                  2   11[COMRAM] int 
 20973 ;; Registers used:
 20974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20975 ;; Tracked objects:
 20976 ;;		On entry : 0/0
 20977 ;;		On exit  : 0/0
 20978 ;;		Unchanged: 0/0
 20979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20980 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20981 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20983 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20984 ;;Total ram usage:        7 bytes
 20985 ;; Hardware stack levels used:    1
 20986 ;; Hardware stack levels required when called:    3
 20987 ;; This function calls:
 20988 ;;		i2_fputc
 20989 ;; This function is called by:
 20990 ;;		i2_pad
 20991 ;; This function uses a non-reentrant model
 20992 ;;
 20993                           
 20994                           	psect	text93
 20995  0062F0                     __ptext93:
 20996                           	opt callstack 0
 20997  0062F0                     i2_fputs:
 20998                           	opt callstack 8
 20999  0062F0  0E00               	movlw	0
 21000  0062F2  6E12               	movwf	(i2fputs@i+1)^0,c
 21001  0062F4  0E00               	movlw	0
 21002  0062F6  6E11               	movwf	i2fputs@i^0,c
 21003  0062F8  EF89  F031         	goto	i2l7480
 21004  0062FC                     i2l7476:
 21005  0062FC  C010  F003         	movff	i2fputs@c,i2fputc@c
 21006  006300  6A04               	clrf	(i2fputc@c+1)^0,c
 21007  006302  C00E  F005         	movff	i2fputs@fp,i2fputc@fp
 21008  006306  C00F  F006         	movff	i2fputs@fp+1,i2fputc@fp+1
 21009  00630A  ECD1  F02C         	call	i2_fputc	;wreg free
 21010  00630E  4A11               	infsnz	i2fputs@i^0,f,c
 21011  006310  2A12               	incf	(i2fputs@i+1)^0,f,c
 21012  006312                     i2l7480:
 21013  006312  5011               	movf	i2fputs@i^0,w,c
 21014  006314  240C               	addwf	i2fputs@s^0,w,c
 21015  006316  6ED9               	movwf	fsr2l,c
 21016  006318  5012               	movf	(i2fputs@i+1)^0,w,c
 21017  00631A  200D               	addwfc	(i2fputs@s+1)^0,w,c
 21018  00631C  6EDA               	movwf	fsr2h,c
 21019  00631E  50DF               	movf	indf2,w,c
 21020  006320  6E10               	movwf	i2fputs@c^0,c
 21021  006322  5010               	movf	i2fputs@c^0,w,c
 21022  006324  A4D8               	btfss	status,2,c
 21023  006326  EF97  F031         	goto	i2u845_41
 21024  00632A  EF99  F031         	goto	i2u845_40
 21025  00632E                     i2u845_41:
 21026  00632E  EF7E  F031         	goto	i2l7476
 21027  006332                     i2u845_40:
 21028  006332  0012               	return		;funcret
 21029  006334                     __end_ofi2_fputs:
 21030                           	opt callstack 0
 21031                           
 21032 ;; *************** function i2_fputc *****************
 21033 ;; Defined at:
 21034 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 21035 ;; Parameters:    Size  Location     Type
 21036 ;;  c               2    2[COMRAM] int 
 21037 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
 21038 ;;		 -> vsnprintf@f(6), NULL(0), 
 21039 ;; Auto vars:     Size  Location     Type
 21040 ;;		None
 21041 ;; Return value:  Size  Location     Type
 21042 ;;                  2    2[COMRAM] int 
 21043 ;; Registers used:
 21044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21045 ;; Tracked objects:
 21046 ;;		On entry : 0/0
 21047 ;;		On exit  : 0/0
 21048 ;;		Unchanged: 0/0
 21049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21050 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21052 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21053 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21054 ;;Total ram usage:        9 bytes
 21055 ;; Hardware stack levels used:    1
 21056 ;; Hardware stack levels required when called:    2
 21057 ;; This function calls:
 21058 ;;		i2_putch
 21059 ;; This function is called by:
 21060 ;;		i2_pad
 21061 ;;		i2_stoa
 21062 ;;		i2_vfpfcnvrt
 21063 ;;		i2_fputs
 21064 ;; This function uses a non-reentrant model
 21065 ;;
 21066                           
 21067                           	psect	text94
 21068  0059A2                     __ptext94:
 21069                           	opt callstack 0
 21070  0059A2                     i2_fputc:
 21071                           	opt callstack 8
 21072  0059A2  5005               	movf	i2fputc@fp^0,w,c
 21073  0059A4  1006               	iorwf	(i2fputc@fp+1)^0,w,c
 21074  0059A6  B4D8               	btfsc	status,2,c
 21075  0059A8  EFD8  F02C         	goto	i2u841_41
 21076  0059AC  EFDA  F02C         	goto	i2u841_40
 21077  0059B0                     i2u841_41:
 21078  0059B0  EFE3  F02C         	goto	i2l7462
 21079  0059B4                     i2u841_40:
 21080  0059B4  5005               	movf	i2fputc@fp^0,w,c
 21081  0059B6  1006               	iorwf	(i2fputc@fp+1)^0,w,c
 21082  0059B8  A4D8               	btfss	status,2,c
 21083  0059BA  EFE1  F02C         	goto	i2u842_41
 21084  0059BE  EFE3  F02C         	goto	i2u842_40
 21085  0059C2                     i2u842_41:
 21086  0059C2  EFE8  F02C         	goto	i2l7464
 21087  0059C6                     i2u842_40:
 21088  0059C6                     i2l7462:
 21089  0059C6  5003               	movf	i2fputc@c^0,w,c
 21090  0059C8  ECDC  F034         	call	i2_putch
 21091  0059CC  EF35  F02D         	goto	i2l1673
 21092  0059D0                     i2l7464:
 21093  0059D0  EE20 F004          	lfsr	2,4
 21094  0059D4  5005               	movf	i2fputc@fp^0,w,c
 21095  0059D6  26D9               	addwf	fsr2l,f,c
 21096  0059D8  5006               	movf	(i2fputc@fp+1)^0,w,c
 21097  0059DA  22DA               	addwfc	fsr2h,f,c
 21098  0059DC  50DE               	movf	postinc2,w,c
 21099  0059DE  10DE               	iorwf	postinc2,w,c
 21100  0059E0  B4D8               	btfsc	status,2,c
 21101  0059E2  EFF5  F02C         	goto	i2u843_41
 21102  0059E6  EFF7  F02C         	goto	i2u843_40
 21103  0059EA                     i2u843_41:
 21104  0059EA  EF12  F02D         	goto	i2l7468
 21105  0059EE                     i2u843_40:
 21106  0059EE  EE20 F004          	lfsr	2,4
 21107  0059F2  5005               	movf	i2fputc@fp^0,w,c
 21108  0059F4  26D9               	addwf	fsr2l,f,c
 21109  0059F6  5006               	movf	(i2fputc@fp+1)^0,w,c
 21110  0059F8  22DA               	addwfc	fsr2h,f,c
 21111  0059FA  EE10 F002          	lfsr	1,2
 21112  0059FE  5005               	movf	i2fputc@fp^0,w,c
 21113  005A00  26E1               	addwf	fsr1l,f,c
 21114  005A02  5006               	movf	(i2fputc@fp+1)^0,w,c
 21115  005A04  22E2               	addwfc	fsr1h,f,c
 21116  005A06  50DE               	movf	postinc2,w,c
 21117  005A08  5CE6               	subwf	postinc1,w,c
 21118  005A0A  50E6               	movf	postinc1,w,c
 21119  005A0C  0A80               	xorlw	128
 21120  005A0E  6E0B               	movwf	(??i2_fputc+4)^0,c
 21121  005A10  50DE               	movf	postinc2,w,c
 21122  005A12  0A80               	xorlw	128
 21123  005A14  580B               	subwfb	(??i2_fputc+4)^0,w,c
 21124  005A16  B0D8               	btfsc	status,0,c
 21125  005A18  EF10  F02D         	goto	i2u844_41
 21126  005A1C  EF12  F02D         	goto	i2u844_40
 21127  005A20                     i2u844_41:
 21128  005A20  EF35  F02D         	goto	i2l1673
 21129  005A24                     i2u844_40:
 21130  005A24                     i2l7468:
 21131  005A24  EE20 F002          	lfsr	2,2
 21132  005A28  5005               	movf	i2fputc@fp^0,w,c
 21133  005A2A  26D9               	addwf	fsr2l,f,c
 21134  005A2C  5006               	movf	(i2fputc@fp+1)^0,w,c
 21135  005A2E  22DA               	addwfc	fsr2h,f,c
 21136  005A30  CFDE F007          	movff	postinc2,??i2_fputc
 21137  005A34  CFDD F008          	movff	postdec2,??i2_fputc+1
 21138  005A38  C005  FFD9         	movff	i2fputc@fp,fsr2l
 21139  005A3C  C006  FFDA         	movff	i2fputc@fp+1,fsr2h
 21140  005A40  CFDE F009          	movff	postinc2,??i2_fputc+2
 21141  005A44  CFDD F00A          	movff	postdec2,??i2_fputc+3
 21142  005A48  5007               	movf	??i2_fputc^0,w,c
 21143  005A4A  2409               	addwf	(??i2_fputc+2)^0,w,c
 21144  005A4C  6ED9               	movwf	fsr2l,c
 21145  005A4E  5008               	movf	(??i2_fputc+1)^0,w,c
 21146  005A50  200A               	addwfc	(??i2_fputc+3)^0,w,c
 21147  005A52  6EDA               	movwf	fsr2h,c
 21148  005A54  C003  FFDF         	movff	i2fputc@c,indf2
 21149  005A58  EE20 F002          	lfsr	2,2
 21150  005A5C  5005               	movf	i2fputc@fp^0,w,c
 21151  005A5E  26D9               	addwf	fsr2l,f,c
 21152  005A60  5006               	movf	(i2fputc@fp+1)^0,w,c
 21153  005A62  22DA               	addwfc	fsr2h,f,c
 21154  005A64  2ADE               	incf	postinc2,f,c
 21155  005A66  0E00               	movlw	0
 21156  005A68  22DD               	addwfc	postdec2,f,c
 21157  005A6A                     i2l1673:
 21158  005A6A  0012               	return		;funcret
 21159  005A6C                     __end_ofi2_fputc:
 21160                           	opt callstack 0
 21161                           
 21162 ;; *************** function i2_putch *****************
 21163 ;; Defined at:
 21164 ;;		line 146 in file "mcc_generated_files/eusart1.c"
 21165 ;; Parameters:    Size  Location     Type
 21166 ;;  txData          1    wreg     unsigned char 
 21167 ;; Auto vars:     Size  Location     Type
 21168 ;;  txData          1    1[COMRAM] unsigned char 
 21169 ;; Return value:  Size  Location     Type
 21170 ;;                  1    wreg      void 
 21171 ;; Registers used:
 21172 ;;		wreg, status,2, cstack
 21173 ;; Tracked objects:
 21174 ;;		On entry : 0/0
 21175 ;;		On exit  : 0/0
 21176 ;;		Unchanged: 0/0
 21177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21179 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21181 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21182 ;;Total ram usage:        1 bytes
 21183 ;; Hardware stack levels used:    1
 21184 ;; Hardware stack levels required when called:    1
 21185 ;; This function calls:
 21186 ;;		i2_EUSART1_Write
 21187 ;; This function is called by:
 21188 ;;		i2_fputc
 21189 ;; This function uses a non-reentrant model
 21190 ;;
 21191                           
 21192                           	psect	text95
 21193  0069B8                     __ptext95:
 21194                           	opt callstack 0
 21195  0069B8                     i2_putch:
 21196                           	opt callstack 8
 21197                           
 21198                           ;incstack = 0
 21199                           ;i2putch@txData stored from wreg
 21200  0069B8  6E02               	movwf	i2putch@txData^0,c
 21201  0069BA                     
 21202                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
 21203  0069BA  5002               	movf	i2putch@txData^0,w,c
 21204  0069BC  EC94  F034         	call	i2_EUSART1_Write
 21205  0069C0  0012               	return		;funcret
 21206  0069C2                     __end_ofi2_putch:
 21207                           	opt callstack 0
 21208                           
 21209 ;; *************** function i2_EUSART1_Write *****************
 21210 ;; Defined at:
 21211 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 21212 ;; Parameters:    Size  Location     Type
 21213 ;;  txData          1    wreg     unsigned char 
 21214 ;; Auto vars:     Size  Location     Type
 21215 ;;  txData          1    0[COMRAM] unsigned char 
 21216 ;; Return value:  Size  Location     Type
 21217 ;;                  1    wreg      void 
 21218 ;; Registers used:
 21219 ;;		wreg
 21220 ;; Tracked objects:
 21221 ;;		On entry : 0/0
 21222 ;;		On exit  : 0/0
 21223 ;;		Unchanged: 0/0
 21224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21226 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21228 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21229 ;;Total ram usage:        1 bytes
 21230 ;; Hardware stack levels used:    1
 21231 ;; This function calls:
 21232 ;;		Nothing
 21233 ;; This function is called by:
 21234 ;;		i2_putch
 21235 ;; This function uses a non-reentrant model
 21236 ;;
 21237                           
 21238                           	psect	text96
 21239  006928                     __ptext96:
 21240                           	opt callstack 0
 21241  006928                     i2_EUSART1_Write:
 21242                           	opt callstack 8
 21243                           
 21244                           ;incstack = 0
 21245                           ;i2EUSART1_Write@txData stored from wreg
 21246  006928  6E01               	movwf	i2EUSART1_Write@txData^0,c
 21247  00692A                     i2l297:
 21248                           
 21249                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
 21250  00692A  A89E               	btfss	158,4,c	;volatile
 21251  00692C  EF9A  F034         	goto	i2u839_41
 21252  006930  EF9C  F034         	goto	i2u839_40
 21253  006934                     i2u839_41:
 21254  006934  EF95  F034         	goto	i2l297
 21255  006938                     i2u839_40:
 21256  006938                     
 21257                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
 21258  006938  C001  FFAD         	movff	i2EUSART1_Write@txData,4013	;volatile
 21259  00693C  0012               	return		;funcret
 21260  00693E                     __end_ofi2_EUSART1_Write:
 21261                           	opt callstack 0
 21262                           
 21263 ;; *************** function i2_atoi *****************
 21264 ;; Defined at:
 21265 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 21266 ;; Parameters:    Size  Location     Type
 21267 ;;  s               2    7[COMRAM] PTR const unsigned char 
 21268 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
 21269 ;;		 -> STR_4(22), STR_3(12), read_from_usart@data(10), STR_1(13), 
 21270 ;; Auto vars:     Size  Location     Type
 21271 ;;  atoi            2   20[COMRAM] int 
 21272 ;;  atoi            2   13[COMRAM] int 
 21273 ;; Return value:  Size  Location     Type
 21274 ;;                  2    7[COMRAM] int 
 21275 ;; Registers used:
 21276 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21277 ;; Tracked objects:
 21278 ;;		On entry : 0/0
 21279 ;;		On exit  : 0/0
 21280 ;;		Unchanged: 0/0
 21281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21282 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21283 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21284 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21285 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21286 ;;Total ram usage:       15 bytes
 21287 ;; Hardware stack levels used:    1
 21288 ;; Hardware stack levels required when called:    1
 21289 ;; This function calls:
 21290 ;;		i2___wmul
 21291 ;;		i2_isdigit
 21292 ;;		i2_isspace
 21293 ;; This function is called by:
 21294 ;;		i2_vfpfcnvrt
 21295 ;; This function uses a non-reentrant model
 21296 ;;
 21297                           
 21298                           	psect	text97
 21299  003EFC                     __ptext97:
 21300                           	opt callstack 0
 21301  003EFC                     i2_atoi:
 21302                           	opt callstack 12
 21303  003EFC  0E00               	movlw	0
 21304  003EFE  6E16               	movwf	(i2atoi@n+1)^0,c
 21305  003F00  0E00               	movlw	0
 21306  003F02  6E15               	movwf	i2atoi@n^0,c
 21307  003F04  0E00               	movlw	0
 21308  003F06  6E0F               	movwf	(i2atoi@neg+1)^0,c
 21309  003F08  0E00               	movlw	0
 21310  003F0A  6E0E               	movwf	i2atoi@neg^0,c
 21311  003F0C  EF8A  F01F         	goto	i2l7988
 21312  003F10                     i2l7986:
 21313  003F10  4A08               	infsnz	i2atoi@s^0,f,c
 21314  003F12  2A09               	incf	(i2atoi@s+1)^0,f,c
 21315  003F14                     i2l7988:
 21316  003F14  0E01               	movlw	1
 21317  003F16  6E14               	movwf	i2_atoi$2439^0,c
 21318  003F18  C008  FFF6         	movff	i2atoi@s,tblptrl
 21319  003F1C  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 21320  003F20  0E00               	movlw	low (__mediumconst shr (0+16))
 21321  003F22  6EF8               	movwf	tblptru,c
 21322  003F24  0E0E               	movlw	(high __ramtop+-1)
 21323  003F26  64F7               	cpfsgt	tblptrh,c
 21324  003F28  D003               	bra	i2u952_47
 21325  003F2A  0008               	tblrd		*
 21326  003F2C  50F5               	movf	tablat,w,c
 21327  003F2E  D005               	bra	i2u952_40
 21328  003F30                     i2u952_47:
 21329  003F30  CFF6 FFE9          	movff	tblptrl,fsr0l
 21330  003F34  CFF7 FFEA          	movff	tblptrh,fsr0h
 21331  003F38  50EF               	movf	indf0,w,c
 21332  003F3A                     i2u952_40:
 21333  003F3A  0A20               	xorlw	32
 21334  003F3C  B4D8               	btfsc	status,2,c
 21335  003F3E  EFA3  F01F         	goto	i2u953_41
 21336  003F42  EFA5  F01F         	goto	i2u953_40
 21337  003F46                     i2u953_41:
 21338  003F46  EFCD  F01F         	goto	i2l7996
 21339  003F4A                     i2u953_40:
 21340  003F4A  0EF7               	movlw	247
 21341  003F4C  6E0A               	movwf	??i2_atoi^0,c
 21342  003F4E  0EFF               	movlw	255
 21343  003F50  6E0B               	movwf	(??i2_atoi+1)^0,c
 21344  003F52  C008  FFF6         	movff	i2atoi@s,tblptrl
 21345  003F56  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 21346  003F5A  0E00               	movlw	low (__mediumconst shr (0+16))
 21347  003F5C  6EF8               	movwf	tblptru,c
 21348  003F5E  0E0E               	movlw	(high __ramtop+-1)
 21349  003F60  64F7               	cpfsgt	tblptrh,c
 21350  003F62  D003               	bra	i2u954_47
 21351  003F64  0008               	tblrd		*
 21352  003F66  50F5               	movf	tablat,w,c
 21353  003F68  D005               	bra	i2u954_40
 21354  003F6A                     i2u954_47:
 21355  003F6A  CFF6 FFE9          	movff	tblptrl,fsr0l
 21356  003F6E  CFF7 FFEA          	movff	tblptrh,fsr0h
 21357  003F72  50EF               	movf	indf0,w,c
 21358  003F74                     i2u954_40:
 21359  003F74  6E0C               	movwf	(??i2_atoi+2)^0,c
 21360  003F76  6A0D               	clrf	(??i2_atoi+3)^0,c
 21361  003F78  500A               	movf	??i2_atoi^0,w,c
 21362  003F7A  260C               	addwf	(??i2_atoi+2)^0,f,c
 21363  003F7C  500B               	movf	(??i2_atoi+1)^0,w,c
 21364  003F7E  220D               	addwfc	(??i2_atoi+3)^0,f,c
 21365  003F80  500D               	movf	(??i2_atoi+3)^0,w,c
 21366  003F82  E109               	bnz	i2u955_40
 21367  003F84  0E05               	movlw	5
 21368  003F86  5C0C               	subwf	(??i2_atoi+2)^0,w,c
 21369  003F88  A0D8               	btfss	status,0,c
 21370  003F8A  EFC9  F01F         	goto	i2u955_41
 21371  003F8E  EFCB  F01F         	goto	i2u955_40
 21372  003F92                     i2u955_41:
 21373  003F92  EFCD  F01F         	goto	i2l7996
 21374  003F96                     i2u955_40:
 21375  003F96  0E00               	movlw	0
 21376  003F98  6E14               	movwf	i2_atoi$2439^0,c
 21377  003F9A                     i2l7996:
 21378  003F9A  C014  F010         	movff	i2_atoi$2439,i2_atoi$2438
 21379  003F9E  6A11               	clrf	(i2_atoi$2438+1)^0,c
 21380  003FA0  5010               	movf	i2_atoi$2438^0,w,c
 21381  003FA2  1011               	iorwf	(i2_atoi$2438+1)^0,w,c
 21382  003FA4  A4D8               	btfss	status,2,c
 21383  003FA6  EFD7  F01F         	goto	i2u956_41
 21384  003FAA  EFD9  F01F         	goto	i2u956_40
 21385  003FAE                     i2u956_41:
 21386  003FAE  EF88  F01F         	goto	i2l7986
 21387  003FB2                     i2u956_40:
 21388  003FB2  EFE3  F01F         	goto	i2l8006
 21389  003FB6                     i2l8002:
 21390  003FB6  0E00               	movlw	0
 21391  003FB8  6E0F               	movwf	(i2atoi@neg+1)^0,c
 21392  003FBA  0E01               	movlw	1
 21393  003FBC  6E0E               	movwf	i2atoi@neg^0,c
 21394  003FBE                     i2l8004:
 21395  003FBE  4A08               	infsnz	i2atoi@s^0,f,c
 21396  003FC0  2A09               	incf	(i2atoi@s+1)^0,f,c
 21397  003FC2  EF30  F020         	goto	i2l8012
 21398  003FC6                     i2l8006:
 21399  003FC6  C008  FFF6         	movff	i2atoi@s,tblptrl
 21400  003FCA  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 21401  003FCE  0E00               	movlw	low (__mediumconst shr (0+16))
 21402  003FD0  6EF8               	movwf	tblptru,c
 21403  003FD2  0E0E               	movlw	(high __ramtop+-1)
 21404  003FD4  64F7               	cpfsgt	tblptrh,c
 21405  003FD6  D003               	bra	i2u957_47
 21406  003FD8  0008               	tblrd		*
 21407  003FDA  50F5               	movf	tablat,w,c
 21408  003FDC  D005               	bra	i2u957_40
 21409  003FDE                     i2u957_47:
 21410  003FDE  CFF6 FFE9          	movff	tblptrl,fsr0l
 21411  003FE2  CFF7 FFEA          	movff	tblptrh,fsr0h
 21412  003FE6  50EF               	movf	indf0,w,c
 21413  003FE8                     i2u957_40:
 21414  003FE8  6E0A               	movwf	??i2_atoi^0,c
 21415  003FEA  6A0B               	clrf	(??i2_atoi+1)^0,c
 21416                           
 21417                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21418                           ; Switch size 1, requested type "simple"
 21419                           ; Number of cases is 1, Range of values is 0 to 0
 21420                           ; switch strategies available:
 21421                           ; Name         Instructions Cycles
 21422                           ; simple_byte            4     3 (average)
 21423                           ;	Chosen strategy is simple_byte
 21424  003FEC  500B               	movf	(??i2_atoi+1)^0,w,c
 21425  003FEE  0A00               	xorlw	0	; case 0
 21426  003FF0  B4D8               	btfsc	status,2,c
 21427  003FF2  EFFD  F01F         	goto	i2l9988
 21428  003FF6  EF30  F020         	goto	i2l8012
 21429  003FFA                     i2l9988:
 21430                           
 21431                           ; Switch size 1, requested type "simple"
 21432                           ; Number of cases is 2, Range of values is 43 to 45
 21433                           ; switch strategies available:
 21434                           ; Name         Instructions Cycles
 21435                           ; simple_byte            7     4 (average)
 21436                           ;	Chosen strategy is simple_byte
 21437  003FFA  500A               	movf	??i2_atoi^0,w,c
 21438  003FFC  0A2B               	xorlw	43	; case 43
 21439  003FFE  B4D8               	btfsc	status,2,c
 21440  004000  EFDF  F01F         	goto	i2l8004
 21441  004004  0A06               	xorlw	6	; case 45
 21442  004006  B4D8               	btfsc	status,2,c
 21443  004008  EFDB  F01F         	goto	i2l8002
 21444  00400C  EF30  F020         	goto	i2l8012
 21445  004010                     i2l8008:
 21446  004010  C015  F001         	movff	i2atoi@n,i2___wmul@multiplier
 21447  004014  C016  F002         	movff	i2atoi@n+1,i2___wmul@multiplier+1
 21448  004018  0E00               	movlw	0
 21449  00401A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 21450  00401C  0E0A               	movlw	10
 21451  00401E  6E03               	movwf	i2___wmul@multiplicand^0,c
 21452  004020  EC17  F034         	call	i2___wmul	;wreg free
 21453  004024  C008  FFF6         	movff	i2atoi@s,tblptrl
 21454  004028  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 21455  00402C  0E00               	movlw	low (__mediumconst shr (0+16))
 21456  00402E  6EF8               	movwf	tblptru,c
 21457  004030  0E0E               	movlw	(high __ramtop+-1)
 21458  004032  64F7               	cpfsgt	tblptrh,c
 21459  004034  D003               	bra	i2u958_47
 21460  004036  0008               	tblrd		*
 21461  004038  50F5               	movf	tablat,w,c
 21462  00403A  D005               	bra	i2u958_40
 21463  00403C                     i2u958_47:
 21464  00403C  CFF6 FFE9          	movff	tblptrl,fsr0l
 21465  004040  CFF7 FFEA          	movff	tblptrh,fsr0h
 21466  004044  50EF               	movf	indf0,w,c
 21467  004046                     i2u958_40:
 21468  004046  6E0A               	movwf	??i2_atoi^0,c
 21469  004048  500A               	movf	??i2_atoi^0,w,c
 21470  00404A  5E01               	subwf	?i2___wmul^0,f,c
 21471  00404C  0E00               	movlw	0
 21472  00404E  5A02               	subwfb	(?i2___wmul+1)^0,f,c
 21473  004050  0E30               	movlw	48
 21474  004052  2401               	addwf	?i2___wmul^0,w,c
 21475  004054  6E15               	movwf	i2atoi@n^0,c
 21476  004056  0E00               	movlw	0
 21477  004058  2002               	addwfc	(?i2___wmul+1)^0,w,c
 21478  00405A  6E16               	movwf	(i2atoi@n+1)^0,c
 21479  00405C  EFDF  F01F         	goto	i2l8004
 21480  004060                     i2l8012:
 21481  004060  0ED0               	movlw	208
 21482  004062  6E0A               	movwf	??i2_atoi^0,c
 21483  004064  0EFF               	movlw	255
 21484  004066  6E0B               	movwf	(??i2_atoi+1)^0,c
 21485  004068  C008  FFF6         	movff	i2atoi@s,tblptrl
 21486  00406C  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 21487  004070  0E00               	movlw	low (__mediumconst shr (0+16))
 21488  004072  6EF8               	movwf	tblptru,c
 21489  004074  0E0E               	movlw	(high __ramtop+-1)
 21490  004076  64F7               	cpfsgt	tblptrh,c
 21491  004078  D003               	bra	i2u959_47
 21492  00407A  0008               	tblrd		*
 21493  00407C  50F5               	movf	tablat,w,c
 21494  00407E  D005               	bra	i2u959_40
 21495  004080                     i2u959_47:
 21496  004080  CFF6 FFE9          	movff	tblptrl,fsr0l
 21497  004084  CFF7 FFEA          	movff	tblptrh,fsr0h
 21498  004088  50EF               	movf	indf0,w,c
 21499  00408A                     i2u959_40:
 21500  00408A  6E0C               	movwf	(??i2_atoi+2)^0,c
 21501  00408C  6A0D               	clrf	(??i2_atoi+3)^0,c
 21502  00408E  500A               	movf	??i2_atoi^0,w,c
 21503  004090  260C               	addwf	(??i2_atoi+2)^0,f,c
 21504  004092  500B               	movf	(??i2_atoi+1)^0,w,c
 21505  004094  220D               	addwfc	(??i2_atoi+3)^0,f,c
 21506  004096  500D               	movf	(??i2_atoi+3)^0,w,c
 21507  004098  E10A               	bnz	i2u960_40
 21508  00409A  0E0A               	movlw	10
 21509  00409C  5C0C               	subwf	(??i2_atoi+2)^0,w,c
 21510  00409E  A0D8               	btfss	status,0,c
 21511  0040A0  EF54  F020         	goto	i2u960_41
 21512  0040A4  EF57  F020         	goto	i2u960_40
 21513  0040A8                     i2u960_41:
 21514  0040A8  0E01               	movlw	1
 21515  0040AA  EF58  F020         	goto	i2u961_40
 21516  0040AE                     i2u960_40:
 21517  0040AE  0E00               	movlw	0
 21518  0040B0                     i2u961_40:
 21519  0040B0  6E12               	movwf	i2_atoi$2440^0,c
 21520  0040B2  6A13               	clrf	(i2_atoi$2440+1)^0,c
 21521  0040B4  5012               	movf	i2_atoi$2440^0,w,c
 21522  0040B6  1013               	iorwf	(i2_atoi$2440+1)^0,w,c
 21523  0040B8  A4D8               	btfss	status,2,c
 21524  0040BA  EF61  F020         	goto	i2u962_41
 21525  0040BE  EF63  F020         	goto	i2u962_40
 21526  0040C2                     i2u962_41:
 21527  0040C2  EF08  F020         	goto	i2l8008
 21528  0040C6                     i2u962_40:
 21529  0040C6  500E               	movf	i2atoi@neg^0,w,c
 21530  0040C8  100F               	iorwf	(i2atoi@neg+1)^0,w,c
 21531  0040CA  A4D8               	btfss	status,2,c
 21532  0040CC  EF6A  F020         	goto	i2u963_41
 21533  0040D0  EF6C  F020         	goto	i2u963_40
 21534  0040D4                     i2u963_41:
 21535  0040D4  EF7A  F020         	goto	i2l1632
 21536  0040D8                     i2u963_40:
 21537  0040D8  C015  F00A         	movff	i2atoi@n,??i2_atoi
 21538  0040DC  C016  F00B         	movff	i2atoi@n+1,??i2_atoi+1
 21539  0040E0  1E0A               	comf	??i2_atoi^0,f,c
 21540  0040E2  1E0B               	comf	(??i2_atoi+1)^0,f,c
 21541  0040E4  4A0A               	infsnz	??i2_atoi^0,f,c
 21542  0040E6  2A0B               	incf	(??i2_atoi+1)^0,f,c
 21543  0040E8  C00A  F008         	movff	??i2_atoi,?i2_atoi
 21544  0040EC  C00B  F009         	movff	??i2_atoi+1,?i2_atoi+1
 21545  0040F0  EF7E  F020         	goto	i2l1635
 21546  0040F4                     i2l1632:
 21547  0040F4  C015  F008         	movff	i2atoi@n,?i2_atoi
 21548  0040F8  C016  F009         	movff	i2atoi@n+1,?i2_atoi+1
 21549  0040FC                     i2l1635:
 21550  0040FC  0012               	return		;funcret
 21551  0040FE                     __end_ofi2_atoi:
 21552                           	opt callstack 0
 21553                           
 21554 ;; *************** function i2_isspace *****************
 21555 ;; Defined at:
 21556 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 21557 ;; Parameters:    Size  Location     Type
 21558 ;;  c               2    0[COMRAM] int 
 21559 ;; Auto vars:     Size  Location     Type
 21560 ;;		None
 21561 ;; Return value:  Size  Location     Type
 21562 ;;                  2    0[COMRAM] int 
 21563 ;; Registers used:
 21564 ;;		wreg, status,2, status,0
 21565 ;; Tracked objects:
 21566 ;;		On entry : 0/0
 21567 ;;		On exit  : 0/0
 21568 ;;		Unchanged: 0/0
 21569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21570 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21571 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21572 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21573 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21574 ;;Total ram usage:        7 bytes
 21575 ;; Hardware stack levels used:    1
 21576 ;; This function calls:
 21577 ;;		Nothing
 21578 ;; This function is called by:
 21579 ;;		i2_atoi
 21580 ;; This function uses a non-reentrant model
 21581 ;;
 21582                           
 21583                           	psect	text98
 21584  006096                     __ptext98:
 21585                           	opt callstack 0
 21586  006096                     i2_isspace:
 21587                           	opt callstack 12
 21588  006096  0E01               	movlw	1
 21589  006098  6E07               	movwf	i2_isspace$2465^0,c
 21590  00609A  0E20               	movlw	32
 21591  00609C  1801               	xorwf	i2isspace@c^0,w,c
 21592  00609E  1002               	iorwf	(i2isspace@c+1)^0,w,c
 21593  0060A0  B4D8               	btfsc	status,2,c
 21594  0060A2  EF55  F030         	goto	i2u882_41
 21595  0060A6  EF57  F030         	goto	i2u882_40
 21596  0060AA                     i2u882_41:
 21597  0060AA  EF70  F030         	goto	i2l7676
 21598  0060AE                     i2u882_40:
 21599  0060AE  0EF7               	movlw	247
 21600  0060B0  6E03               	movwf	??i2_isspace^0,c
 21601  0060B2  0EFF               	movlw	255
 21602  0060B4  6E04               	movwf	(??i2_isspace+1)^0,c
 21603  0060B6  C001  F005         	movff	i2isspace@c,??i2_isspace+2
 21604  0060BA  C002  F006         	movff	i2isspace@c+1,??i2_isspace+3
 21605  0060BE  5003               	movf	??i2_isspace^0,w,c
 21606  0060C0  2605               	addwf	(??i2_isspace+2)^0,f,c
 21607  0060C2  5004               	movf	(??i2_isspace+1)^0,w,c
 21608  0060C4  2206               	addwfc	(??i2_isspace+3)^0,f,c
 21609  0060C6  5006               	movf	(??i2_isspace+3)^0,w,c
 21610  0060C8  E109               	bnz	i2u883_40
 21611  0060CA  0E05               	movlw	5
 21612  0060CC  5C05               	subwf	(??i2_isspace+2)^0,w,c
 21613  0060CE  A0D8               	btfss	status,0,c
 21614  0060D0  EF6C  F030         	goto	i2u883_41
 21615  0060D4  EF6E  F030         	goto	i2u883_40
 21616  0060D8                     i2u883_41:
 21617  0060D8  EF70  F030         	goto	i2l7676
 21618  0060DC                     i2u883_40:
 21619  0060DC  0E00               	movlw	0
 21620  0060DE  6E07               	movwf	i2_isspace$2465^0,c
 21621  0060E0                     i2l7676:
 21622  0060E0  C007  F001         	movff	i2_isspace$2465,?i2_isspace
 21623  0060E4  6A02               	clrf	(?i2_isspace+1)^0,c
 21624  0060E6  0012               	return		;funcret
 21625  0060E8                     __end_ofi2_isspace:
 21626                           	opt callstack 0
 21627                           
 21628 ;; *************** function i2_isdigit *****************
 21629 ;; Defined at:
 21630 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 21631 ;; Parameters:    Size  Location     Type
 21632 ;;  c               2    0[COMRAM] int 
 21633 ;; Auto vars:     Size  Location     Type
 21634 ;;		None
 21635 ;; Return value:  Size  Location     Type
 21636 ;;                  2    0[COMRAM] int 
 21637 ;; Registers used:
 21638 ;;		wreg, status,2, status,0
 21639 ;; Tracked objects:
 21640 ;;		On entry : 0/0
 21641 ;;		On exit  : 0/0
 21642 ;;		Unchanged: 0/0
 21643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21644 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21646 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21647 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21648 ;;Total ram usage:        6 bytes
 21649 ;; Hardware stack levels used:    1
 21650 ;; This function calls:
 21651 ;;		Nothing
 21652 ;; This function is called by:
 21653 ;;		i2_vfpfcnvrt
 21654 ;;		i2_atoi
 21655 ;; This function uses a non-reentrant model
 21656 ;;
 21657                           
 21658                           	psect	text99
 21659  006642                     __ptext99:
 21660                           	opt callstack 0
 21661  006642                     i2_isdigit:
 21662                           	opt callstack 13
 21663  006642  0ED0               	movlw	208
 21664  006644  6E03               	movwf	??i2_isdigit^0,c
 21665  006646  0EFF               	movlw	255
 21666  006648  6E04               	movwf	(??i2_isdigit+1)^0,c
 21667  00664A  C001  F005         	movff	i2isdigit@c,??i2_isdigit+2
 21668  00664E  C002  F006         	movff	i2isdigit@c+1,??i2_isdigit+3
 21669  006652  5003               	movf	??i2_isdigit^0,w,c
 21670  006654  2605               	addwf	(??i2_isdigit+2)^0,f,c
 21671  006656  5004               	movf	(??i2_isdigit+1)^0,w,c
 21672  006658  2206               	addwfc	(??i2_isdigit+3)^0,f,c
 21673  00665A  5006               	movf	(??i2_isdigit+3)^0,w,c
 21674  00665C  E10A               	bnz	i2u880_40
 21675  00665E  0E0A               	movlw	10
 21676  006660  5C05               	subwf	(??i2_isdigit+2)^0,w,c
 21677  006662  A0D8               	btfss	status,0,c
 21678  006664  EF36  F033         	goto	i2u880_41
 21679  006668  EF39  F033         	goto	i2u880_40
 21680  00666C                     i2u880_41:
 21681  00666C  0E01               	movlw	1
 21682  00666E  EF3A  F033         	goto	i2u881_40
 21683  006672                     i2u880_40:
 21684  006672  0E00               	movlw	0
 21685  006674                     i2u881_40:
 21686  006674  6E01               	movwf	?i2_isdigit^0,c
 21687  006676  6A02               	clrf	(?i2_isdigit+1)^0,c
 21688  006678  0012               	return		;funcret
 21689  00667A                     __end_ofi2_isdigit:
 21690                           	opt callstack 0
 21691                           
 21692 ;; *************** function i2___wmul *****************
 21693 ;; Defined at:
 21694 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 21695 ;; Parameters:    Size  Location     Type
 21696 ;;  multiplier      2    0[COMRAM] unsigned int 
 21697 ;;  multiplicand    2    2[COMRAM] unsigned int 
 21698 ;; Auto vars:     Size  Location     Type
 21699 ;;  __wmul          2    4[COMRAM] unsigned int 
 21700 ;; Return value:  Size  Location     Type
 21701 ;;                  2    0[COMRAM] unsigned int 
 21702 ;; Registers used:
 21703 ;;		wreg, status,2, status,0, prodl, prodh
 21704 ;; Tracked objects:
 21705 ;;		On entry : 0/0
 21706 ;;		On exit  : 0/0
 21707 ;;		Unchanged: 0/0
 21708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21709 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21710 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21712 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21713 ;;Total ram usage:        6 bytes
 21714 ;; Hardware stack levels used:    1
 21715 ;; This function calls:
 21716 ;;		Nothing
 21717 ;; This function is called by:
 21718 ;;		i2_atoi
 21719 ;; This function uses a non-reentrant model
 21720 ;;
 21721                           
 21722                           	psect	text100
 21723  00682E                     __ptext100:
 21724                           	opt callstack 0
 21725  00682E                     i2___wmul:
 21726                           	opt callstack 12
 21727  00682E  5001               	movf	i2___wmul@multiplier^0,w,c
 21728  006830  0203               	mulwf	i2___wmul@multiplicand^0,c
 21729  006832  CFF3 F005          	movff	prodl,i2___wmul@product
 21730  006836  CFF4 F006          	movff	prodh,i2___wmul@product+1
 21731  00683A  5001               	movf	i2___wmul@multiplier^0,w,c
 21732  00683C  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 21733  00683E  50F3               	movf	243,w,c
 21734  006840  2606               	addwf	(i2___wmul@product+1)^0,f,c
 21735  006842  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 21736  006844  0203               	mulwf	i2___wmul@multiplicand^0,c
 21737  006846  50F3               	movf	243,w,c
 21738  006848  2606               	addwf	(i2___wmul@product+1)^0,f,c
 21739  00684A  C005  F001         	movff	i2___wmul@product,?i2___wmul
 21740  00684E  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 21741  006852  0012               	return		;funcret
 21742  006854                     __end_ofi2___wmul:
 21743                           	opt callstack 0
 21744                           
 21745 ;; *************** function i2_TMR0_WriteTimer *****************
 21746 ;; Defined at:
 21747 ;;		line 115 in file "mcc_generated_files/tmr0.c"
 21748 ;; Parameters:    Size  Location     Type
 21749 ;;  timerVal        2    0[COMRAM] unsigned short 
 21750 ;; Auto vars:     Size  Location     Type
 21751 ;;		None
 21752 ;; Return value:  Size  Location     Type
 21753 ;;                  1    wreg      void 
 21754 ;; Registers used:
 21755 ;;		wreg, status,2
 21756 ;; Tracked objects:
 21757 ;;		On entry : 0/0
 21758 ;;		On exit  : 0/0
 21759 ;;		Unchanged: 0/0
 21760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21761 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21764 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21765 ;;Total ram usage:        2 bytes
 21766 ;; Hardware stack levels used:    1
 21767 ;; This function calls:
 21768 ;;		Nothing
 21769 ;; This function is called by:
 21770 ;;		_INTERRUPT_S1_CALLBACK
 21771 ;; This function uses a non-reentrant model
 21772 ;;
 21773                           
 21774                           	psect	text101
 21775  0069C2                     __ptext101:
 21776                           	opt callstack 0
 21777  0069C2                     i2_TMR0_WriteTimer:
 21778                           	opt callstack 16
 21779  0069C2                     
 21780                           ;mcc_generated_files/tmr0.c: 115: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 116: {;mcc_generated_files/tmr0.c: 118:     TMR0H = timerVal >> 8;
 21781  0069C2  5002               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
 21782  0069C4  6ED7               	movwf	215,c	;volatile
 21783  0069C6                     
 21784                           ;mcc_generated_files/tmr0.c: 119:     TMR0L = (uint8_t) timerVal;
 21785  0069C6  C001  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
 21786  0069CA  0012               	return		;funcret
 21787  0069CC                     __end_ofi2_TMR0_WriteTimer:
 21788                           	opt callstack 0
 21789                           
 21790 ;; *************** function _TMR0_StopTimer *****************
 21791 ;; Defined at:
 21792 ;;		line 96 in file "mcc_generated_files/tmr0.c"
 21793 ;; Parameters:    Size  Location     Type
 21794 ;;		None
 21795 ;; Auto vars:     Size  Location     Type
 21796 ;;		None
 21797 ;; Return value:  Size  Location     Type
 21798 ;;                  1    wreg      void 
 21799 ;; Registers used:
 21800 ;;		None
 21801 ;; Tracked objects:
 21802 ;;		On entry : 0/0
 21803 ;;		On exit  : 0/0
 21804 ;;		Unchanged: 0/0
 21805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21810 ;;Total ram usage:        0 bytes
 21811 ;; Hardware stack levels used:    1
 21812 ;; This function calls:
 21813 ;;		Nothing
 21814 ;; This function is called by:
 21815 ;;		_INTERRUPT_S1_CALLBACK
 21816 ;; This function uses a non-reentrant model
 21817 ;;
 21818                           
 21819                           	psect	text102
 21820  0069DC                     __ptext102:
 21821                           	opt callstack 0
 21822  0069DC                     _TMR0_StopTimer:
 21823                           	opt callstack 16
 21824  0069DC                     
 21825                           ;mcc_generated_files/tmr0.c: 99:     T0CONbits.TMR0ON = 0;
 21826  0069DC  9ED5               	bcf	213,7,c	;volatile
 21827  0069DE  0012               	return		;funcret
 21828  0069E0                     __end_of_TMR0_StopTimer:
 21829                           	opt callstack 0
 21830                           
 21831 ;; *************** function _TMR0_StartTimer *****************
 21832 ;; Defined at:
 21833 ;;		line 90 in file "mcc_generated_files/tmr0.c"
 21834 ;; Parameters:    Size  Location     Type
 21835 ;;		None
 21836 ;; Auto vars:     Size  Location     Type
 21837 ;;		None
 21838 ;; Return value:  Size  Location     Type
 21839 ;;                  1    wreg      void 
 21840 ;; Registers used:
 21841 ;;		None
 21842 ;; Tracked objects:
 21843 ;;		On entry : 0/0
 21844 ;;		On exit  : 0/0
 21845 ;;		Unchanged: 0/0
 21846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21851 ;;Total ram usage:        0 bytes
 21852 ;; Hardware stack levels used:    1
 21853 ;; This function calls:
 21854 ;;		Nothing
 21855 ;; This function is called by:
 21856 ;;		_INTERRUPT_S1_CALLBACK
 21857 ;; This function uses a non-reentrant model
 21858 ;;
 21859                           
 21860                           	psect	text103
 21861  0069E0                     __ptext103:
 21862                           	opt callstack 0
 21863  0069E0                     _TMR0_StartTimer:
 21864                           	opt callstack 16
 21865  0069E0                     
 21866                           ;mcc_generated_files/tmr0.c: 93:     T0CONbits.TMR0ON = 1;
 21867  0069E0  8ED5               	bsf	213,7,c	;volatile
 21868  0069E2  0012               	return		;funcret
 21869  0069E4                     __end_of_TMR0_StartTimer:
 21870                           	opt callstack 0
 21871                           
 21872                           	psect	text104
 21873  000000                     __ptext104:
 21874                           	opt callstack 0
 21875  000000                     
 21876                           	psect	rparam
 21877  0000                     
 21878                           	psect	temp
 21879  00005F                     btemp:
 21880                           	opt callstack 0
 21881  00005F                     	ds	1
 21882  0000                     int$flags	set	btemp
 21883  0000                     wtemp8	set	btemp+1
 21884  0000                     ttemp5	set	btemp+1
 21885  0000                     ttemp6	set	btemp+4
 21886  0000                     ttemp7	set	btemp+8
 21887                           tosu	equ	0xFFF
 21888                           tosh	equ	0xFFE
 21889                           tosl	equ	0xFFD
 21890                           stkptr	equ	0xFFC
 21891                           pclatu	equ	0xFFB
 21892                           pclath	equ	0xFFA
 21893                           pcl	equ	0xFF9
 21894                           tblptru	equ	0xFF8
 21895                           tblptrh	equ	0xFF7
 21896                           tblptrl	equ	0xFF6
 21897                           tablat	equ	0xFF5
 21898                           prodh	equ	0xFF4
 21899                           prodl	equ	0xFF3
 21900                           indf0	equ	0xFEF
 21901                           postinc0	equ	0xFEE
 21902                           postdec0	equ	0xFED
 21903                           preinc0	equ	0xFEC
 21904                           plusw0	equ	0xFEB
 21905                           fsr0h	equ	0xFEA
 21906                           fsr0l	equ	0xFE9
 21907                           wreg	equ	0xFE8
 21908                           indf1	equ	0xFE7
 21909                           postinc1	equ	0xFE6
 21910                           postdec1	equ	0xFE5
 21911                           preinc1	equ	0xFE4
 21912                           plusw1	equ	0xFE3
 21913                           fsr1h	equ	0xFE2
 21914                           fsr1l	equ	0xFE1
 21915                           bsr	equ	0xFE0
 21916                           indf2	equ	0xFDF
 21917                           postinc2	equ	0xFDE
 21918                           postdec2	equ	0xFDD
 21919                           preinc2	equ	0xFDC
 21920                           plusw2	equ	0xFDB
 21921                           fsr2h	equ	0xFDA
 21922                           fsr2l	equ	0xFD9
 21923                           status	equ	0xFD8


Data Sizes:
    Strings     249
    Constant    3536
    Data        11
    BSS         91
    Persistent  12
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      94
    BANK0           160     81     113
    BANK1           256    127     205
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[12]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_105(CODE[3]), STR_101(CODE[3]), STR_96(CODE[3]), STR_92(CODE[3]), 
		 -> STR_87(CODE[4]), STR_83(CODE[4]), STR_78(CODE[3]), STR_73(CODE[3]), 
		 -> STR_68(CODE[4]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[4]), 
		 -> STR_48(CODE[3]), STR_43(CODE[3]), STR_38(CODE[4]), STR_33(CODE[3]), 
		 -> STR_29(CODE[3]), STR_24(CODE[3]), STR_20(CODE[3]), STR_15(CODE[4]), 
		 -> STR_11(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_105(CODE[3]), STR_101(CODE[3]), STR_96(CODE[3]), STR_92(CODE[3]), 
		 -> STR_87(CODE[4]), STR_83(CODE[4]), STR_78(CODE[3]), STR_73(CODE[3]), 
		 -> STR_68(CODE[4]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[4]), 
		 -> STR_48(CODE[3]), STR_43(CODE[3]), STR_38(CODE[4]), STR_33(CODE[3]), 
		 -> STR_29(CODE[3]), STR_24(CODE[3]), STR_20(CODE[3]), STR_15(CODE[4]), 
		 -> STR_11(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_8(CODE[40]), STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[39]), 
		 -> STR_4(CODE[22]), STR_3(CODE[12]), STR_1(CODE[13]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_8(CODE[40]), STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[39]), 
		 -> STR_4(CODE[22]), STR_3(CODE[12]), STR_1(CODE[13]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK1[32]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[12]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_8(CODE[40]), STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[39]), 
		 -> STR_4(CODE[22]), STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    S2478_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_8(CODE[40]), STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[39]), 
		 -> STR_4(CODE[22]), STR_3(CODE[12]), read_from_usart@data(BANK1[10]), STR_1(CODE[13]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_8(CODE[40]), STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[39]), 
		 -> STR_4(CODE[22]), STR_3(CODE[12]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 40
		 -> STR_8(CODE[40]), STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[39]), 
		 -> STR_4(CODE[22]), STR_3(CODE[12]), STR_1(CODE[13]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    lcd_draw_string@pS	PTR const unsigned char  size(2) Largest target is 33
		 -> string(BANK1[30]), STR_2(CODE[33]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INTERRUPT_S1_CALLBACK(), IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INTERRUPT_S1_CALLBACK(), Absolute function(), IOCB4_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_S1_CALLBACK->i2_printf
    i2_printf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_xtoa
    i2_xtoa->i2_pad
    i2_toupper->i2_islower
    i2_utoa->i2_pad
    i2_stoa->i2_fputc
    i2_otoa->i2_pad
    i2_dtoa->i2_pad
    i2_abs->i2___aomod
    i2_ctoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_fputc->i2_putch
    i2_putch->i2_EUSART1_Write
    i2_atoi->i2_isspace

Critical Paths under _main in BANK0

    _read_from_usart->_atoi
    _vfpfcnvrt->_ctoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace
    _lcd_init->_lcd_fill
    _lcd_fill->_lcd_set_cursor
    _lcd_draw_string->_lcd_draw_char
    _lcd_draw_char->_lcd_set_cursor
    _lcd_set_cursor->_lcd_set_cursor_x
    _lcd_set_cursor->_lcd_set_cursor_y
    _lcd_set_cursor_y->_lcd_send
    _lcd_set_cursor_x->_lcd_send
    _lcd_draw_pixel->_lcd_send
    _lcd_send->_SPI_ExchangeByte
    ___aldiv->___lmul
    _SYSTEM_Initialize->_TMR0_Initialize
    _SYSTEM_Initialize->_TMR1_Initialize
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_S1_CALLBACK->i2_printf
    i2_vfprintf->i2_vfpfcnvrt

Critical Paths under _main in BANK1

    _main->_snprintf
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0  192279
                                            120 BANK1      7     7      0
                  _ADC_GetConversion
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                       _EUSART1_Read
          _IOCB4_SetInterruptHandler
                           _SPI_Open
                  _SYSTEM_Initialize
                    _TMR0_WriteTimer
                            ___aldiv
                             ___lmul
                    _lcd_draw_string
                           _lcd_init
                             _printf
                    _read_from_usart
                           _snprintf
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            14     4     10   59971
                                            106 BANK1     14     4     10
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   59264
                                             84 BANK1     22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _read_from_usart                                     17    15      2    3141
                                             69 BANK0      3     1      2
                                              0 BANK1     14    14      0
                       _EUSART1_Read
                      _EUSART1_Write
                _EUSART1_is_rx_ready
                _EUSART1_is_tx_ready
                    _TMR0_WriteTimer
                               _atoi
 ---------------------------------------------------------------------------------
 (2) _TMR0_WriteTimer                                      2     0      2     297
                                             47 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_tx_ready                                  1     1      0      37
                                             47 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   59086
                                             84 BANK1     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   58206
                                             76 BANK1      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   56776
                                             39 BANK1     37    31      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    8901
                                              0 BANK1     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                             53 BANK0      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                             47 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                             47 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                             47 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    7743
                                              0 BANK1     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                             47 BANK0     17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                             47 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    5995
                                             47 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2800
                                             58 BANK0     22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    7015
                                              0 BANK1     34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    8597
                                              0 BANK1     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             65 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                             47 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                             47 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    6070
                                             76 BANK0      5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    5791
                                             65 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     310
                                             47 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2139
                                             58 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1639
                                             49 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      62
                                             48 BANK0      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Write                                       1     1      0      31
                                             47 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2285
                                             54 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                             47 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     371
                                             47 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     912
                                             47 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0   37190
                           _lcd_fill
                           _lcd_send
                            _msDelay
 ---------------------------------------------------------------------------------
 (2) _msDelay                                              3     3      0      46
                                             47 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _lcd_fill                                             6     4      2   28321
                                             56 BANK0      6     4      2
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_draw_string                                     18     8     10   30352
                                              0 BANK1     18     8     10
                      _lcd_draw_char
 ---------------------------------------------------------------------------------
 (2) _lcd_draw_char                                       22    12     10   29124
                                             56 BANK0     22    12     10
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       4     0      4   18794
                                             52 BANK0      4     0      4
                   _lcd_set_cursor_x
                   _lcd_set_cursor_y
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_y                                     2     0      2    9006
                                             50 BANK0      2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_x                                     2     0      2    9006
                                             50 BANK0      2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_draw_pixel                                       2     0      2    9335
                                             50 BANK0      2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_send                                             2     1      1    8823
                                             48 BANK0      2     1      1
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI_ExchangeByte                                     1     1      0      31
                                             47 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     370
                                             47 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     452
                                             59 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                             47 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                             47 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     174
                                             47 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             47 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             47 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             47 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Open                                             2     2      0      88
                                             47 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_WriteByte                                     4     1      3     393
                                             47 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      2     0      2     272
                                             47 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      22
                                             47 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                         14    14      0   34209
                                             33 BANK0     14    14      0
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (12) _PIN_MANAGER_IOC                                     0     0      0   34209
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (13) _IOCB4_ISR                                           0     0      0   34209
                   Absolute function *
              _INTERRUPT_S1_CALLBACK *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_S1_CALLBACK                               0     0      0   34209
                    _TMR0_StartTimer
                     _TMR0_StopTimer
                  i2_TMR0_WriteTimer
                           i2_printf
 ---------------------------------------------------------------------------------
 (15) i2_printf                                           10     4      6   34139
                                             86 COMRAM     4     4      0
                                             27 BANK0      6     0      6
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (16) i2_vfprintf                                          8     2      6   33879
                                             78 COMRAM     8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (17) i2_vfpfcnvrt                                        46    40      6   33250
                                             68 COMRAM    10     4      6
                                              0 BANK0     27    27      0
                             i2_atoi
                             i2_ctoa
                             i2_dtoa
                            i2_fputc
                          i2_isdigit
                             i2_otoa
                             i2_stoa
                          i2_strncmp
                             i2_utoa
                             i2_xtoa
 ---------------------------------------------------------------------------------
 (18) i2_xtoa                                             39    28     11    4881
                                             29 COMRAM    39    28     11
                          i2_isalpha
                          i2_isupper
                              i2_pad
                          i2_toupper
 ---------------------------------------------------------------------------------
 (19) i2_toupper                                           8     6      2     262
                                              6 COMRAM     8     6      2
                          i2_islower
 ---------------------------------------------------------------------------------
 (20) i2_islower                                           6     4      2      66
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (19) i2_isupper                                           6     4      2      66
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (19) i2_isalpha                                           6     4      2      66
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (18) i2_utoa                                             32    22     10    4388
                                             29 COMRAM    32    22     10
                          i2___lodiv
                          i2___lomod
                              i2_pad
 ---------------------------------------------------------------------------------
 (19) i2___lomod                                          17     1     16     302
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (19) i2___lodiv                                          25     9     16     311
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (18) i2_strncmp                                          11     5      6    2530
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (18) i2_stoa                                             22    18      4    1804
                                             11 COMRAM    22    18      4
                            i2_fputc
                           i2_strlen
 ---------------------------------------------------------------------------------
 (18) i2_otoa                                             34    24     10    3880
                                             29 COMRAM    34    24     10
                              i2_pad
 ---------------------------------------------------------------------------------
 (18) i2_dtoa                                             36    26     10    5187
                                             29 COMRAM    36    26     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (19) i2_abs                                               4     2      2     128
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (19) i2___aomod                                          18     2     16     503
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (19) i2___aodiv                                          26    10     16     515
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (18) i2_ctoa                                              7     4      3    3265
                                             29 COMRAM     5     2      3
                              i2_pad
 ---------------------------------------------------------------------------------
 (19) i2_pad                                              11     5      6    3096
                                             18 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (20) i2_strlen                                            4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (20) i2_fputs                                             7     3      4    1149
                                             11 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (21) i2_fputc                                             9     5      4     869
                                              2 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (22) i2_putch                                             1     1      0      62
                                              1 COMRAM     1     1      0
                    i2_EUSART1_Write
 ---------------------------------------------------------------------------------
 (23) i2_EUSART1_Write                                     1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (18) i2_atoi                                             15    13      2    1115
                                              7 COMRAM    15    13      2
                           i2___wmul
                          i2_isdigit
                          i2_isspace
 ---------------------------------------------------------------------------------
 (19) i2_isspace                                           7     5      2     134
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (18) i2_isdigit                                           6     4      2     136
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (19) i2___wmul                                            6     2      4     302
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (15) i2_TMR0_WriteTimer                                   2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR0_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _EUSART1_Read
   _IOCB4_SetInterruptHandler
   _SPI_Open
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
   _TMR0_WriteTimer
   ___aldiv
     ___lmul (ARG)
   ___lmul
   _lcd_draw_string
     _lcd_draw_char
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
   _lcd_init
     _lcd_fill
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
     _lcd_send
       _SPI_ExchangeByte
     _msDelay
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
         _isdigit
         _otoa
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _stoa
           _fputc
             _putch
               _EUSART1_Write
           _strlen
         _strncmp
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
           _toupper
             _islower
   _read_from_usart
     _EUSART1_Read
     _EUSART1_Write
     _EUSART1_is_rx_ready
     _EUSART1_is_tx_ready
     _TMR0_WriteTimer
     _atoi
       ___wmul
       _isdigit
       _isspace
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _stoa
             _fputc
               _putch
                 _EUSART1_Write
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _INTERRUPT_S1_CALLBACK *
         _TMR0_StartTimer
         _TMR0_StopTimer
         i2_TMR0_WriteTimer
         i2_printf
           i2_vfprintf
             i2_vfpfcnvrt
               i2_atoi
                 i2___wmul
                 i2_isdigit
                 i2_isspace
               i2_ctoa
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_EUSART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                   i2_strlen
               i2_dtoa
                 i2___aodiv
                 i2___aomod
                 i2_abs
                   i2___aomod (ARG)
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_EUSART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                   i2_strlen
               i2_fputc
                 i2_putch
                   i2_EUSART1_Write
               i2_isdigit
               i2_otoa
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_EUSART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                   i2_strlen
               i2_stoa
                 i2_fputc
                   i2_putch
                     i2_EUSART1_Write
                 i2_strlen
               i2_strncmp
               i2_utoa
                 i2___lodiv
                 i2___lomod
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_EUSART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                   i2_strlen
               i2_xtoa
                 i2_isalpha
                 i2_isupper
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_EUSART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                   i2_strlen
                 i2_toupper
                   i2_islower
       _IOCB4_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     7F      CD       8       80.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     51      71       5       70.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5E       1      100.0%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     19C       6        0.0%
DATA                 0      0     19C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Dec 09 13:56:10 2020

                                _SPI_Initialize 6952                                               _a 0185  
                                             _b 0183                                     _SSPSTATbits 000FC7  
                                            l30 6974                                              l51 6962  
                                            l27 6874                                              l61 689C  
                                            l55 5CA6                                              l63 68AA  
                                            l64 68AE                             ___wmul@multiplicand 0091  
            __size_of_IOCB4_SetInterruptHandler 000A                                     __CFG_BORV$3 000000  
                               _timer0ReloadVal 005B                      ?_IOCB4_SetInterruptHandler 008F  
                                  __CFG_CP0$OFF 000000                                    __CFG_CP1$OFF 000000  
                                  __CFG_CP2$OFF 000000                                    __CFG_CP3$OFF 000000  
                                           l204 6738                                             l300 68E0  
                                           l134 62A8                                             l321 69A2  
                                           l145 6998                                             l306 6982  
                                           l324 69B6                                             l333 69DA  
                                           l182 63F6                                             l318 69AC  
                                           l431 6254                                             l167 6926  
                                           l432 6262                                             l520 5BF2  
                                           l273 62EE                                             l281 6950  
                                           l602 5D2E                                             l290 6764  
                                           l514 5B40                                             l179 63D4  
                                           l435 68C8                                             l355 67B6  
                                           l531 2C0E                                             l429 6246  
                                           l277 6760                                             l294 678C  
                                           l278 6762                                             l526 2AB8  
                                           l367 698E                                             l535 2C5C  
                                           l528 2BC4                                             l297 68CE  
                                           l801 390A                                             l722 5964  
                                           l731 5F86                                             l811 3AE6  
                                           l803 3912                                             l724 59A0  
                                           l581 6892                                             l591 61D2  
                                           l671 4C90                                             l719 5920  
                                           l680 5092                                             l816 305E  
                                           l569 65D0                                             l737 2DC2  
                                           l841 3310                                             l825 3102  
                                           l578 2A0C                                             l762 4138  
                                           l818 3066                                             l922 5E5C  
                                           l595 6184                                             l587 63B6  
                                           l739 2DCA                                             l771 428A  
                                           l923 5E64                                             l764 4140  
                                           l780 4570                                             l757 3022  
                                           l773 42FA                                             l598 68F8  
                                           l926 6806                                             l782 4578  
                                           l791 4624                                             l839 32A2  
                                           l855 01A6                                             l792 466E  
                                           l937 5D8A                                             l938 5D9A  
                                           l796 4676                                             l878 135E  
                                  __CFG_CPB$OFF 000000                                    __CFG_CPD$OFF 000000  
                            i2___aodiv@quotient 0013                                 _timer1ReloadVal 00C6  
                                           _abs 6334                                             _pad 58D8  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                             __end_ofi2_vfpfcnvrt 25D8  
                               ?_lcd_set_cursor 0094                              __size_of_IOCB4_ISR 002E  
                                          l1005 52B0                                            l1040 4800  
                                          ?_abs 00A1                                            l1053 4DF6  
                                          l1601 636C                                            l1371 53A2  
                                          l1604 6374                                            l1364 5382  
                                          l1701 655E                                            l1381 573A  
                                          l1374 571A                                            l1632 3CEE  
                                          l1720 5F28                                            l1705 557E  
                                          l1635 3CF6                                            l1715 5F20  
                                          l1644 6598                                            l1652 6094  
                                          l1638 6474                                            l1726 64EA  
                                          l1742 5182                                            l1673 58D6  
                                          l1681 621A                                            l1737 51A2  
                                          l1658 6524                                            l1695 66DE  
                                          l1688 67DE                                            ?_pad 00A1  
                                          l7120 5D6A                                            l7112 5D30  
                                          l7130 51CC                                            l7122 51A4  
                                          l7114 5D42                                            l7140 5214  
                                          l7132 51DA                                            l7124 51AA  
                                          l7116 5D50                                            l7150 525E  
                                          l7142 521C                                            l7134 51EA  
                                          l7126 51B8                                            l7118 5D60  
                                          l8110 46B0                                            l8102 4678  
                                          l6520 699A                                            l6600 6798  
                                          l7160 5290                                            l7152 526E  
                                          l7144 5228                                            l7136 51EE  
                                          l7128 51C8                                            l8120 470C  
                                          l8112 46BE                                            l8104 467E  
                                          l8200 536A                                            l9000 031E  
                                          l6522 69AE                                            l6610 62CC  
                                          l6602 67B0                                            l7162 52A0  
                                          l7154 5270                                            l7146 5236  
                                          l7138 51FE                                            l8050 58E8  
                                          l8130 4776                                            l8122 4714  
                                          l8114 46DE                                            l8106 468C  
                                          l8202 537C                                            l8210 56A6  
                                          l9010 03D0                                            l9002 0358  
                                          l6612 62DA                                            l6516 6990  
                                          l6604 67B2                                            l7156 527A  
                                          l7148 5240                                            l8220 6042  
                                          l7500 5832                                            l8060 5940  
                                          l8052 58FC                                            l8140 47C0  
                                          l8132 4796                                            l8124 4728  
                                          l8116 46E2                                            l8108 46AC  
                                          l8212 56B4                                            l8204 566A  
                                          l9020 0458                                            l9004 0378  
                                          l9012 03E2                                            l6518 69A4  
                                          l6614 62E8                                            l6606 62AA  
                                          l7158 5280                                            l8046 6898  
                                          l8222 6048                                            l7502 583C  
                                          l8062 5946                                            l8054 590C  
                                          l8142 47E0                                            l8134 4798  
                                          l8126 4736                                            l8118 46EE  
                                          l8150 4CA6                                            l8070 6334  
                                          l8214 56E2                                            l8206 568A  
                                          l9102 0A34                                            l9030 054C  
                                          l9022 0492                                            l9014 0408  
                                          l9006 0386                                            l6608 62BE  
                                          l6560 69D8                                            l8224 605C  
                                          l7504 585A                                            l8064 5972  
                                          l8056 5918                                            l8048 58D8  
                                          l8136 47AA                                            l8128 4748  
                                          l8160 4D16                                            l8152 4CC6  
                                          l8072 6350                                            l8216 5702  
                                          l8208 5692                                            l9200 10CE  
                                          l9104 0A6C                                            l9112 0AB8  
                                          l9040 060C                                            l9032 0584  
                                          l9024 04CA                                            l9016 043C  
                                          l6810 6234                                            l6802 621C  
                                          l6570 6280                                            l6562 6952  
                                          l6650 659E                                            l8226 608A  
                                          l7506 5890                                            l8066 5986  
                                          l8058 592C                                            l8138 47B0  
                                          l8170 4D8E                                            l8162 4D1E  
                                          l8154 4CCA                                            l8146 4C92  
                                          l8218 5714                                            l8074 64EC  
                                          l8082 5ECA                                            l9210 1144  
                                          l9202 10DE                                            l9114 0ADE  
                                          l9122 0B28                                            l9106 0AA4  
                                          l9050 06A6                                            l9042 0632  
                                          l9034 05BC                                            l9026 0514  
                                          l6820 6240                                            l6812 6236  
                                          l6804 6226                                            l6580 6298  
                                          l6572 6286                                            l6564 695E  
                                          l6652 65A8                                            l8092 6560  
                                          l8228 608E                                            l7700 61FA  
                                          l8172 4DA0                                            l8164 4D32  
                                          l8156 4CD8                                            l8148 4C98  
                                          l9212 116A                                            l9140 0C5A  
                                          l9124 0B60                                            l9132 0BAC  
                                          l9116 0B14                                            l9060 0768  
                                          l9052 06DE                                            l9044 0658  
                                          l9300 5E02                                            l6830 68BE  
                                          l6822 6244                                            l6814 6238  
                                          l6806 622C                                            l6582 62A6  
                                          l6574 6288                                            l6566 6960  
                                          l6590 671A                                            l6750 6864  
                                          l6742 6854                                            l6654 65BA  
                                          l7454 68CE                                            l7702 6526  
                                          l8166 4D40                                            l8174 4DA6  
                                          l8158 4CF8                                            l8190 52FA  
                                          l8182 52B2                                            l8078 6438  
                                          l8086 5F02                                            l9230 127C  
                                          l9214 1182                                            l9222 11D2  
                                          l9150 0D0E                                            l9142 0C80  
                                          l9134 0BD2                                            l9126 0B98  
                                          l9070 0858                                            l9062 07A0  
                                          l9054 0716                                            l9302 5E0A  
                                          l6832 68C0                                            l6824 68B0  
                                          l6816 623A                                            l6808 6230  
                                          l6760 5C06                                            l6584 6964  
                                          l6576 6294                                            l6568 6264  
                                          l6592 671C                                            l6752 6868  
                                          l6744 6858                                            l6656 65BE  
                                          l8096 67E0                                            l8600 3CD2  
                                          l7456 68DC                                            l7472 697A  
                                          l7704 6532                                            l8176 4DB6  
                                          l8168 4D6E                                            l8192 5308  
                                          l8184 52BE                                            l7712 64B2  
                                          l8088 5F14                                            l9240 12F0  
                                          l9224 120A                                            l9216 1190  
                                          l9208 111E                                            l9152 0D56  
                                          l9144 0CB6                                            l9136 0C1E  
                                          l9064 07E8                                            l9304 5E18  
                                          l9312 673A                                            l6834 68C2  
                                          l6826 68B8                                            l6818 623C  
                                          l6762 5C48                                            l6586 6912  
                                          l6578 6296                                            l6594 6734  
                                          l6754 686C                                            l6746 685C  
                                          l8610 6888                                            l8098 67FE  
                                          l7706 6538                                            l8178 4DD6  
                                          l8194 531A                                            l8186 52DE  
                                          l9242 1304                                            l9226 1242  
                                          l9306 5E3E                                            l9330 6778  
                                          l9322 693E                                            l9314 6740  
                                          l9410 50FE                                            l9402 50B8  
                                          l6780 63D0                                            l6836 68C4  
                                          l6828 68BC                                            l6764 5C4C  
                                          l6596 678E                                            l6588 670E  
                                          l6756 6870                                            l6748 6860  
                                          l8612 6890                                            l9500 26C2  
                                          l7708 6550                                            l8620 5F56  
                                          l8700 4172                                            l8196 5348  
                                          l8188 52E6                                            l9228 126C  
                                          l9236 12BC                                            l9180 0F18  
                                          l9172 0E8E                                            l9164 0E18  
                                          l9156 0D8E                                            l9148 0CD6  
                                          l9092 09AA                                            l9084 0920  
                                          l9076 08AA                                            l9068 0820  
                                          l9252 1324                                            l9332 6786  
                                          l9316 674E                                            l9340 698A  
                                          l9420 518A                                            l9412 5122  
                                          l9404 50D6                                            l6782 63D2  
                                          l6838 68C6                                            l6766 5C70  
                                          l6758 5BF8                                            l6598 6790  
                                          l8606 687A                                            l9350 5CEE  
                                          l9342 5CA8                                            l9510 26FE  
                                          l9502 26CE                                            l8622 5F5A  
                                          l8614 5F2A                                            l8630 2D3E  
                                          l8710 41A4                                            l8702 4176  
                                          l8198 5368                                            l9254 134C  
                                          l9238 12E2                                            l9246 1312  
                                          l9190 0FF8                                            l9182 0F50  
                                          l9174 0EC6                                            l9166 0E3E  
                                          l9158 0DC6                                            l9094 09E2  
                                          l9086 0958                                            l9078 08D0  
                                          l9334 678A                                            l9326 6764  
                                          l9318 675C                                            l9414 5136  
                                          l9422 519A                                            l9406 50E2  
                                          l6784 63E2                                            l6768 5CA4  
                                          l8608 6886                                            l9360 4B10  
                                          l9352 5D0A                                            l9344 5CBA  
                                          l9600 291A                                            l9520 273A  
                                          l9512 270A                                            l9504 26DA  
                                          l7496 580C                                            l8624 5F60  
                                          l8616 5F3E                                            l8640 2DB4  
                                          l8632 2D68                                            l8720 4246  
                                          l8712 41AA                                            l8704 4182  
                                          l8800 39DA                                            l9184 0F88  
                                          l9096 0A1A                                            l9432 67B8  
                                          l9328 6772                                            l9440 5B4E  
                                          l9416 5144                                            l9408 50EE  
                                          l6778 63BC                                            l9370 4B64  
                                          l9362 4B1A                                            l9354 5D12  
                                          l9610 2956                                            l9602 2926  
                                          l9530 2776                                            l9522 2746  
                                          l9514 2716                                            l9506 26E6  
                                          l8570 3B06                                            l7498 5820  
                                          l8618 5F4A                                            l8650 2E08  
                                          l8642 2DD2                                            l8634 2D88  
                                          l8730 42B4                                            l8722 4260  
                                          l8714 41B0                                            l8706 418A  
                                          l8810 3AA6                                            l8802 3A40  
                                          l9186 0FB2                                            l9194 1034  
                                          l9098 0A26                                            l9434 67C2  
                                          l9338 6984                                            l9442 5B62  
                                          l9450 5BAC                                            l9418 5172  
                                          l9292 63B4                                            l9284 6376  
                                          l9380 4C24                                            l9364 4B5E  
                                          l9348 5CE2                                            l9620 2992  
                                          l9612 2962                                            l9604 2932  
                                          l9540 27B2                                            l9532 2782  
                                          l9524 2752                                            l9516 2722  
                                          l9508 26F2                                            l9460 25D8  
                                          l8580 3B94                                            l8572 3B38  
                                          l8564 3AE8                                            l8660 2EAC  
                                          l8652 2E10                                            l8644 2DE6  
                                          l8636 2D98                                            l8628 2D1E  
                                          l8732 42C4                                            l8724 427A  
                                          l8708 4192                                            l8716 420E  
                                          l8740 44FE                                            l8804 3A54  
                                          l8812 3AB6                                            l8820 3036  
                                          l9196 106C                                            l9188 0FC2  
                                          l9444 5B76                                            l9452 5BB2  
                                          l8910 6186                                            l9286 6392  
                                          l9390 4C56                                            l9382 4C30  
                                          l9630 29CE                                            l9622 299E  
                                          l9614 296E                                            l9606 293E  
                                          l9550 27EE                                            l9542 27BE  
                                          l9534 278E                                            l9526 275E  
                                          l9518 272E                                            l9470 260E  
                                          l9462 25E4                                            l8582 3BAA  
                                          l8574 3B88                                            l8566 3AFE  
                                          l7694 61D4                                            l8670 2F80  
                                          l8654 2E18                                            l8662 2F12  
                                          l8646 2DF6                                            l8638 2D9A  
                                          l8726 429A                                            l8734 42CA  
                                          l8718 4228                                            l8750 453E  
                                          l8742 4506                                            l8806 3A72  
                                          l8830 30B2                                            l8822 3050  
                                          l9198 10A4                                            l9454 5BD6  
                                          l9446 5B8A                                            l9438 5B32  
                                          l9296 68E2                                            l8912 619E  
                                          l9288 63AE                                            l9384 4C34  
                                          l9376 4B68                                            l9392 4C58  
                                          l9640 4F5C                                            l9632 29DA  
                                          l9624 29AA                                            l9616 297A  
                                          l9608 294A                                            l9560 282A  
                                          l9552 27FA                                            l9544 27CA  
                                          l9536 279A                                            l9528 276A  
                                          l9480 264A                                            l9472 261A  
                                          l9464 25EA                                            l8592 3C58  
                                          l8584 3BB2                                            l8576 3B8C  
                                          l8568 3B02                                            l7696 61E2  
                                          l8680 2FCE                                            l8664 2F2E  
                                          l8672 2F90                                            l8656 2E9E  
                                          l8648 2DFE                                            l8728 42AE  
                                          l8760 45B4                                            l8752 454E  
                                          l8744 451A                                            l8808 3A8C  
                                          l8840 30F6                                            l8832 30BA  
                                          l8824 307E                                            l8816 3024  
                                          l9456 5BEA                                            l9448 5B9E  
                                          l8930 6182                                            l8922 6138  
                                          l9386 4C44                                            l9378 4C14  
                                          l9650 5002                                            l9642 4F60  
                                          l9634 29EC                                            l9626 29B6  
                                          l9618 2986                                            l9570 2866  
                                          l9562 2836                                            l9554 2806  
                                          l9546 27D6                                            l9538 27A6  
                                          l9490 2686                                            l9482 2656  
                                          l9474 2626                                            l9466 25F6  
                                          l8586 3BBA                                            l7698 61F4  
                                          l8682 2FDA                                            l8674 2FA4  
                                          l8666 2F4C                                            l8658 2EA6  
                                          l8690 40FE                                            l8770 4606  
                                          l8762 45D2                                            l8746 4522  
                                          l8738 44EC                                            l8850 3182  
                                          l8834 30C2                                            l8826 3088  
                                          l8818 3034                                            l9394 5094  
                                          l9730 2A12                                            l8916 61A4  
                                          l8924 6150                                            l9388 4C46  
                                          l9652 502E                                            l9644 4F76  
                                          l9636 29F8                                            l9628 29C2  
                                          l9580 28A2                                            l9572 2872  
                                          l9564 2842                                            l9556 2812  
                                          l9548 27E2                                            l9492 2692  
                                          l9484 2662                                            l9476 2632  
                                          l9468 2602                                            l8596 3CAE  
                                          l8588 3C06                                            l8684 2FE2  
                                          l8676 2FB4                                            l8668 2F66  
                                          l8692 410E                                            l8764 45DE  
                                          l8756 459A                                            l8748 4536  
                                          l8780 38D0                                            l8860 31C6  
                                          l8852 3194                                            l8844 3136  
                                          l8836 30CA                                            l8828 30A8  
                                          l8940 00E8                                            l9396 50A8  
                                          l9660 66BA                                            l9740 2A2E  
                                          l9732 2A18                                            l8918 61D0  
                                          l9654 505C                                            l9646 4FB0  
                                          l9638 29FE                                            l9590 28DE  
                                          l9582 28AE                                            l9574 287E  
                                          l9566 284E                                            l9558 281E  
                                          l9494 269E                                            l9486 266E  
                                          l9478 263E                                            l8598 3CC0  
                                          l8678 2FBC                                            l8686 2FF2  
                                          l8694 4110                                            l8774 4636  
                                          l8766 45FC                                            l8758 45AE  
                                          l8790 3944                                            l8782 38E0  
                                          l8870 3292                                            l8846 3148  
                                          l8854 31A8                                            l8838 30E6  
                                          l8862 3224                                            l8942 00EC  
                                          l8934 00A2                                            l9398 50B0  
                                          l9750 2B24                                            l9742 2A30  
                                          l9734 2A1C                                            l8928 6156  
                                          l9648 4FB4                                            l9656 5060  
                                          l9592 28EA                                            l9584 28BA  
                                          l9576 288A                                            l9568 285A  
                                          l9496 26AA                                            l9488 267A  
                                          l8696 412A                                            l8776 464A  
                                          l8768 4602                                            l8792 394C  
                                          l8784 38E2                                            l8872 32B2  
                                          l8864 3240                                            l8856 31BA  
                                          l8960 0128                                            l8952 0118  
                                          l8944 00FA                                            l8936 00C8  
                                          l9760 2C1E                                            l9752 2B52  
                                          l9744 2A5C                                            l9736 2A1E  
                                          l9728 2A0E                                            l9594 28F6  
                                          l9586 28C6                                            l9578 2896  
                                          l9498 26B6                                            l8698 4168  
                                          l8778 4650                                            l8890 54DA  
                                          l8882 5494                                            l8794 3954  
                                          l8786 38FC                                            l8874 32BA  
                                          l8866 325E                                            l8858 31C0  
                                          l8946 00FE                                            l8970 0192  
                                          l8938 00D6                                            l9658 66B0  
                                          l9770 2CAC                                            l9762 2C32  
                                          l9754 2B7E                                            l9746 2A6A  
                                          l9738 2A20                                            l9596 2902  
                                          l9588 28D2                                            l8892 54F8  
                                          l8884 54C0                                            l8796 39CE  
                                          l8788 393A                                            l8876 32CA  
                                          l8868 3278                                            l8980 0222  
                                          l8972 01B6                                            l8964 0130  
                                          l8956 0120                                            l8948 0110  
                                          l9772 2CB4                                            l9764 2C6A  
                                          l9756 2BC6                                            l9748 2A88  
                                          l9598 290E                                            l8894 5516  
                                          l8798 39D4                                            l8878 32E0  
                                          l8990 02A8                                            l8982 0230  
                                          l8974 01B8                                            l9774 2CD4  
                                          l9766 2C80                                            l9758 2C10  
                                          STR_1 FFB4                                            l8896 5528  
                                          l8888 54CC                                            l8984 0250  
                                          l8992 02BA                                            l8976 01DE  
                                          l8968 013C                                            l9776 2CF8  
                                          l9768 2C88                                            STR_2 FF54  
                                          STR_3 FFC1                                            l8898 5556  
                                          l8994 02E0                                            l8986 025E  
                                          l8978 0214                                            STR_4 FF75  
                                          STR_5 FF2D                                            l8996 02EA  
                                          STR_6 FFA0                                            STR_7 FF8B  
                                          l8998 02F8                                            l9982 0164  
                                          STR_8 FF05                                            STR_9 FFD1  
                                          l9984 3BF0                                            _LATA 000F89  
                                          _LATB 000F8A                                            _LATC 000F8B  
                                          _LATD 000F8C                                            _LATE 000F8D  
                                          u8120 5D50                                            u8121 5D4C  
                                          u8130 5D8A                                            u8131 5D86  
                                          u8140 51B8                                            u8141 51B4  
                                          u8150 51DA                                            u8151 51D6  
                                          u8160 5214                                            u8400 68DC  
                                          u8161 5210                                            u8401 68D8  
                                          u8170 5236                                            u8171 5232  
                                          u8180 525E                                            u8500 5832  
                                          u8181 525A                                            u8501 582E  
                                          u8190 5290                                            u8510 585A  
                                          u8191 528C                                            u8511 5856  
                                          u8520 5890                                            u8521 588C  
                                          u7900 5C06                                            u7901 5C02  
                                          u7750 65D0                                            u7751 65CC  
                                          u7920 63E2                                            u7921 63DE  
                                          u8490 5820                                            u8491 581C  
                                          u7940 6254                                            u8900 6550  
                                          u9700 58E8                                            u7941 6250  
                                          u8901 654C                                            u9701 58E4  
                                          u9710 590C                                            u8910 64E4  
                                          u9711 5908                                            u8911 64DE  
                                          u9720 5964                                            u8920 64E6  
                                          u9800 5EFE                                            u9721 5960  
                                          u9730 5972                                            u9810 5F14  
                                          u7955 6260                                            u9731 596E  
                                          u9811 5F10                                            u7956 6262  
                                          u9820 6592                                            u9900 47C0  
                                          u9740 6350                                            u9821 658C  
                                          u9901 47BC                                            u9741 634C  
                                          u9830 6594                                            u9910 4CA6  
                                          u9750 651E                                            u9911 4CA2  
                                          u9751 6518                                            u9840 468C  
                                          u9920 4CD8                                            u9760 6520  
                                          u9841 4688                                            u9921 4CD4  
                                          u9690 68AA                                            u8890 621A  
                                          u9850 46BE                                            u9930 4D16  
                                          u9770 646E                                            u9691 68A6  
                                          u8891 6216                                            u9851 46BA  
                                          u9931 4D12                                            u9771 6468  
                                          u9940 4D40                                            u9780 6470  
                                          u9861 46E8                                            u9941 4D3C  
                                          u9870 470C                                            u9950 4D6E  
                                          u9790 5EFC                                            u9871 4708  
                                          u9951 4D6A                                            u9791 5EF6  
                                          u9880 4736                                            u9960 4DB6  
                                          u9881 4732                                            u9961 4DB2  
                                          u9890 4776                                            u9891 4772  
                                          u9971 52B8                                            u9980 52DE  
                                          u9981 52DA                                            u9990 5308  
                                          u9991 5304                                            _WPUB 000F5B  
                                 _EUSART1_Write 68CA                                            abs@a 00A1  
                                          _dbuf 0189                                            _atoi 3AE8  
                                          _ctoa 5F2A                                            _main 2A0E  
                                          _dtoa 2D1E                                            _font F135  
                                 ?_EUSART1_Read 0001                                            _prec 00B7  
                               _TMR0_StartTimer 69E0                                            _otoa 40FE  
                                          _nout 017F                                            pad@i 00A8  
                                          pad@p 00A5                                            fsr0h 000FEA  
                                          fsr1h 000FE2                                            indf0 000FEF  
                                          fsr2h 000FDA                                            fsr0l 000FE9  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 00AA                                            fsr2l 000FD9  
                                          _stoa 44EC                                            btemp 005F  
                                          _utoa 38D0                                            _xtoa 3024  
                                   i2_atoi$2440 0012                                     i2_atoi$2438 0010  
                                   i2_atoi$2439 0014                                            prodh 000FF4  
                                          prodl 000FF3                                            start 009E  
                                 __CFG_IESO$OFF 000000                                 __end_ofi2_fputc 5A6C  
                               __end_ofi2_fputs 6334                          __end_of_SPI_Initialize 6964  
                               __end_ofi2_putch 69C2                                   lcd_fill@width 009C  
                                 __CFG_MCLRE$ON 000000                                     i2_dtoa$1825 0030  
                                  ___param_bank 000000                        __size_ofi2_EUSART1_Write 0016  
                                         ??_abs 00A3                                           ??_pad 00A7  
                     __size_of_DATAEE_WriteByte 0048                                      i2_vfprintf 5E66  
                       __end_of_TMR0_Initialize 67B8                  __size_of_OSCILLATOR_Initialize 0012  
                 __end_of_OSCILLATOR_Initialize 6976                                 __end_of___aldiv 52B2  
                               __end_of___aodiv 4802                                           ?_atoi 0096  
                                         ?_ctoa 00AC                                           ?_main 0001  
                                         ?_dtoa 0100                                 __end_of___aomod 4DF8  
                                         _EEADR 000F74                                           STR_11 FFD1  
                                         STR_20 FFD2                                           STR_13 FFD5  
                                         STR_15 FFD5                                           STR_31 FFEF  
                                         STR_24 FFD6                                           STR_33 FFEF  
                                         STR_43 FFDE                                           STR_27 FFEC  
                                         STR_51 FFD9                                           STR_36 FFDD  
                                         STR_29 FFEC                                           STR_53 FFD9  
                                         STR_61 FFF2                                           STR_38 FFDD  
                                         STR_46 FFF5                                           STR_63 FFF2  
                                         STR_48 FFF5                                           STR_73 FFE2  
                                         STR_81 FFE5                                           STR_58 FFDA  
                                         STR_66 FFE1                                           STR_83 FFE5  
                                         STR_68 FFE1                                           STR_92 FFE6  
                                         STR_76 FFF8                                           STR_85 FFCD  
                                         STR_78 FFF8                                           STR_87 FFCD  
                                         STR_96 FFCE                                           ?_otoa 0100  
                                         STR_99 FFFB               __end_of_IOCB4_SetInterruptHandler 699A  
                                         ?_stoa 009A                                           u10000 5348  
                                         u10001 5344                                           u10010 568A  
                                         u10011 5686                                           u10020 56B4  
                                         u10021 56B0                                           u10030 56E2  
                                         u10031 56DE                                           ?_utoa 0100  
                                         u10040 605C                                           u11000 38FC  
                                         u10041 6058                                           u11001 38F8  
                                         u10050 608A                                           u11010 3A54  
                                         u10051 6086                                           u11011 3A50  
                                         u11020 3A72                                           u11100 3130  
                                         u11021 3A6E                                           u11101 312A  
                                         u11030 3A8C                                           u11110 3132  
                                         u11031 3A88                                           u11040 3AA6  
                                         u11200 3292                                           u11120 3148  
                                         u12000 5144                                           u11041 3AA2  
                                         u11201 328E                                           u11121 3144  
                                         u12001 5140                                           u11050 3AB6  
                                         u11210 32A2                                           u11130 317C  
                                         u12010 5172                                           u11051 3AB2  
                                         u11211 329E                                           u11131 3176  
                                         u12011 516E                                           u11300 6150  
                                         u12100 5092                                           u11220 32B2  
                                         u11140 317E                                           u11060 3034  
                                         u11301 614C                                           u12101 508E  
                                         u11221 32AE                                           u11061 3030  
                                         u10510 3B28                                           u11230 54C0  
                                         u11150 3194                                           u11070 3050  
                                         u11310 00C8                                           u12030 5B4E  
                                         u11231 54BC                                           u11151 3190  
                                         u11071 304C                                           u11311 00C4  
                                         u12031 5B4A                                           u10600 3CAA  
                                         u10520 3B38                                           u11240 54F8  
                                         u11160 31FE                                           u11080 307E  
                                         u11400 031E                                           u11320 01A6  
                                         u12040 5B62                                           _T0CON 000FD5  
                                         u10521 3B34                                           u11241 54F4  
                                         u11081 307A                                           u11401 031A  
                                         u11321 01A2                                           u12041 5B5E  
                                         u10610 3CC0                                           u10530 3B64  
                                         u11250 5516                                           u11170 3240  
                                         u11090 30E6                                           u11410 03CA  
                                         u11330 01B6                                           u12050 5B8A  
                                         u10611 3CBC                                           u11251 5512  
                               __end_of___lodiv 53A4                                           u11171 323C  
                                         u11091 30E2                                           u11411 03C4  
                                         u11331 01B2                                           u12051 5B86  
                                         u10620 3CD2                                           u10540 3B88  
                                         u10700 2DE6                                           u11260 5528  
                                         u11180 325E                                           u11500 0658  
                                         u11420 03CC                                           u11340 01DE  
                                         u12060 5BD6                                           u10621 3CCE  
                                         u10541 3B84                                           u10517 3B1E  
                                         u10701 2DE2                                           u11261 5524  
                                         u11181 325A                                           u11165 31EC  
                                         u11501 0654                                           u11341 01DA  
                                         u12061 5BD2                                           u12070 4FDE  
                                         u10550 3BA6                                           u10710 2DF6  
                                         u11270 5556                                           u11190 3278  
                                         u11510 06DE                                           u11430 03E2  
                                         u11350 0222                                           u12230 2A88  
                                         u10551 3BA2                                           u10711 2DF2  
                                         u11271 5552                                           u11191 3274  
                                         u11511 06DA                                           u11431 03DE  
                                         u11351 021E                                           u12231 2A84  
                                         ?_xtoa 0100                                           u12080 5002  
                                         u10560 3BDC                                           u10640 5F3E  
                                         u10720 2F2E                                           u10800 410E  
                                         u11600 0B60                                           u11520 0716  
                                         u11440 0408                                           u11360 02A2  
                                         u12240 2BC4                                           _T1CON 000FCD  
                                         u12081 4FFE                                           u10537 3B5A  
                                         u10641 5F3A                                           u10721 2F2A  
                                         u10801 410A                                           u11601 0B5C  
                                         u11521 0712                                           u11441 0404  
                                         u11361 029C                                           u12241 2BC0  
                                         u11290 619E                                           u12090 5082  
                                         u10570 3C3C                                           u10730 2F4C  
                                         u10650 2D50                                           u10810 412A  
                                         u11610 0BD2                                           u11530 07A0  
                                         u11450 0492                                           u11370 02A4  
                                         u12250 2C0E                                           u10635 6884  
                                         u11291 619A                                           u10731 2F48  
                                         u10651 2D4A                                           u10811 4126  
                                         u11611 0BCE                                           u11531 079C  
                                         u11451 048E                                           u12251 2C0A  
                                         u10636 6886                                           u10580 3C82  
                                         u10740 2F66                                           u10660 2D52  
                                         u10820 41E8                                           u11700 10A4  
                                         u11620 0C80                                           u11540 0858  
                                         u11460 04CA                                           u11380 02BA  
                                         u12260 2C32                                           u12077 4FD4  
                                         u10741 2F62                                           u10901 44F6  
                                         u11701 10A0                                           u11621 0C7C  
                                         u11541 0854                                           u11461 04C6  
                                         u11381 02B6                                           u12261 2C2E  
                                         u10590 3CA8                                           u10750 2F80  
                                         u10670 2D68                                           u10830 4228  
                                         u10910 451A                                           u11710 1144  
                                         u11630 0D0E                                           u11550 08D0  
                                         u11470 0584                                           u11390 02E0  
                                         u12270 2CD4                                           u10591 3CA2  
                                         u10567 3BD2                                           u10751 2F7C  
                                         u10671 2D64                                           u10831 4224  
                                         u10911 4516                                           u11711 1140  
                                         u11631 0D0A                                           u11551 08CC  
                                         u11471 0580                                           u11391 02DC  
                                         u12271 2CD0                                           u10760 2F90  
                                         u10680 2D98                                           u10840 4246  
                                         u10920 454E                                           u11720 116A  
                                         u11640 0DC6                                           u11560 0958  
                                         u11480 05BC                                           u11800 5E5C  
                                         u12097 5078                                           u10577 3C32  
                                         u10761 2F8C                                           u10681 2D94  
                                         u10841 4242                                           u10825 41D6  
                                         u10921 454A                                           u11721 1166  
                                         u11641 0DC2                                           u11561 0954  
                                         u11481 05B8                                           u11801 5E58  
                                         u10770 2FA4                                           u10690 2DB4  
                                         u10850 4260                                           u10930 456C  
                                         u11730 120A                                           u11650 0E3E  
                                         u11570 09E2                                           u11490 0632  
                                         u10587 3C78                                           u10771 2FA0  
                                         u10691 2DB0                                           u10851 425C  
                                         u10931 4568                                           u11731 1206  
                                         u11651 0E3A                                           u11571 09DE  
                                         u11491 062E                                           u11900 5D2E  
                                         u10780 2FB4                                           u10860 427A  
                                         u10940 4596                                           u11740 1242  
                                         u11660 0EC6                                           u11580 0A6C  
                                         u11901 5D2A                                           u10781 2FB0  
                                         u10861 4276                                           u10941 4592  
                                         u11741 123E                                           u11661 0EC2  
                                         u11581 0A68                                           u10790 2FCE  
                                         u10870 428A                                           u10950 45D2  
                                         u11750 12E2                                           u11670 0F50  
                                         u11590 0ADE                                           u11830 674E  
                                         u10791 2FCA                                           u10871 4286  
                                         u10951 45CE                                           u11751 12DE  
                                         u11671 0F4C                                           u11591 0ADA  
                                         u11831 674A                                           u10880 429A  
                                         u10960 4624                                           u11680 0F88  
                                         u11840 675C                                           u10881 4296  
                                         u10961 4620                                           u11681 0F84  
                                         u11841 6758                                           u11930 4C14  
                                         u10890 42AE                                           u10970 4632  
                                         u11690 106C                                           u11850 694E  
                                         u11931 4C10                                           u12387 65B0  
                                         u10891 42AA                                           u10971 462E  
                                         u11691 1068                                           u11851 6948  
                                         u11780 6392                                           u11940 4C44  
                                         u11924 4BF2                                           u10980 466E  
                                         u11860 6772                                           u11781 638E  
                                         u11941 4C40                                           u11925 4BEC  
                                         u10981 466A                                           u11861 676E  
                                         u11790 63AE                                           u11950 4C56  
                                         u10990 38E0                                           u11870 6786  
                                         u11791 63AA                                           u11951 4C52  
                                         u10991 38DC                                           u11871 6782  
                                         u11960 4C90                                           u11880 5CDE  
                                         u11856 6950                                           u11961 4C8C  
                                         u11881 5CDA                                 __end_of___lomod 573C  
                                         u11890 5D0A                                           u11970 50A8  
                                         u11891 5D06                                           u11971 50A4  
                                         u11980 50D6                                           u11981 50D2  
                                         u11990 5136                                           u11991 5132  
                                         i2l300 693C                                           i2l142 670C  
                                         i2l306 69C0                                           i2l138 6910  
                                         i2l148 69E4                                           i2l340 0062  
                               _TMR0_WriteTimer 6984                                           i2l361 69DE  
                                         i2l509 6136                                           i2l358 69E2  
                                         i2l367 69CA                                           i2l297 692A  
                                         i2l801 3D30                                           i2l722 5AF4  
                                         i2l731 6040                                           i2l811 3EFA  
                                         i2l803 3D38                                           i2l724 5B30  
                                         i2l719 5AB2                                           i2l816 362E  
                                         i2l737 33B2                                           i2l841 38CE  
                                         i2l825 36CC                                           i2l762 4334  
                                         i2l818 3636                                           i2l922 5EC0  
                                         i2l739 33BA                                           i2l771 4484  
                                         i2l923 5EC8                                           i2l764 433C  
                                         i2l780 4A0A                                           i2l757 35F4  
                                         i2l773 44EA                                           i2l926 6852  
                                         i2l782 4A12                                           i2l791 4ABC  
                                         i2l839 386A                                           i2l855 1456  
                                         i2l792 4B06                                           i2l796 4B0E  
                                         i2l878 25D6                                    vfpfcnvrt@fmt 0129  
                                         _TMR0H 000FD7                                    vfpfcnvrt@llu 0144  
                                         _TMR1H 000FCF                                           _TMR0L 000FD6  
                                         _TMR1L 000FCE                                           _PORTB 000F81  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           _TRISD 000F95  
                                         _TRISE 000F96                                           i2_abs 63F8  
                                         i2_pad 5A6C                                   __CFG_WRT0$OFF 000000  
                               ??_lcd_draw_char 00A2                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                             ___lmul@multiplicand 0093  
                                 __CFG_WRT3$OFF 000000                                  __CFG_EBTR0$OFF 000000  
                                __CFG_FCMEN$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                                 __CFG_WRTB$OFF 000000                                   __CFG_WRTC$OFF 000000  
                                 __CFG_WRTD$OFF 000000                                 __end_of_msDelay 65D2  
                                         _acess 00BD                                      i2isalpha@c 0001  
                               _DATAEE_ReadByte 68B0                                  __CFG_EBTRB$OFF 000000  
                                    i2isdigit@c 0001                         __end_of_PIN_MANAGER_IOC 6912  
                                         _flags 00B9                                           _errno 017D  
                                         _fputc 580C                                 __end_of_isalpha 6476  
                                         _fputs 61D4                                 __end_of_isdigit 659A  
                                         atoi@n 00A3                                           pad@fp 00A1  
                                         atoi@s 0096                                           _width 00B5  
                                         ctoa@c 00AE                                           _putch 6976  
                                         ctoa@w 00AF                                           dtoa@d 0102  
                                         dtoa@i 0122                                           dtoa@n 011A  
                                         dtoa@p 0114                                           dtoa@s 0118  
                                         dtoa@w 0116                                __end_of_SPI_Open 5CA8  
                               __end_of_islower 64EC                                 __end_of_isspace 6096  
                                ?_EUSART1_Write 0001                         __end_of_TMR1_Initialize 673A  
                               __end_of_isupper 6526                                           pclath 000FFA  
                                         tablat 000FF5                                           otoa@d 0102  
                                         otoa@i 0120                                           otoa@n 0118  
                                         otoa@p 0112                                           otoa@t 0114  
                                         otoa@w 0116                                __end_ofi2___wmul 6854  
                                ??_EUSART1_Read 008F                                           plusw1 000FE3  
                                         plusw2 000FDB                                           stoa@i 00A6  
                                         stoa@l 00AE                                           stoa@p 00AC  
                                         stoa@s 009C                                           stoa@w 00A8  
                                         ttemp5 0060                                           ttemp6 0063  
                                         ttemp7 0067                                      i2islower@c 0001  
                                         utoa@d 0102                                           utoa@i 011E  
                                         utoa@n 0116                                           utoa@p 0112  
                                         utoa@w 0114                                           status 000FD8  
                                    i2isspace@c 0001                                           wtemp8 0060  
                                         xtoa@c 0125                                           xtoa@d 0102  
                                         xtoa@i 0123                                           xtoa@n 011B  
                                         xtoa@p 0117                                           xtoa@w 0119  
                                         xtoa@x 010A                                 __end_of_strncmp 5580  
                               __end_of_toupper 5F2A                                  lcd_fill@height 009A  
                              ___lodiv@dividend 008F              _EUSART1_DefaultFramingErrorHandler 000000  
                            __size_ofi2___aodiv 0188                              __size_ofi2___aomod 0164  
                                    i2isupper@c 0001                              __size_ofi2___lodiv 00F0  
                            __size_ofi2___lomod 00D0                                __end_ofi2_printf 682E  
                               ?_SPI_Initialize 0001                 ??_IOCB4_DefaultInterruptHandler 0001  
                                  _toupper$2552 009B                                __end_ofi2_strlen 66B0  
                               __initialization 5D9C                               ??_read_from_usart 00A7  
                                  __end_of_atoi 3CF8                                    __end_of_ctoa 5F88  
                    __end_of_EUSART1_Initialize 62F0                                    __end_of_main 2D1E  
                                  __end_of_dtoa 3024                                    __end_of_font FF01  
                                  __end_of_otoa 42FC                                    __end_of_stoa 4678  
                                    i2printf@ap 0059                                    __end_of_utoa 3AE8  
                                  __end_of_xtoa 3312                               __end_of_IOCB4_ISR 670E  
                            __size_ofi2_isalpha 003C                              __size_ofi2_isdigit 0038  
                   ?_INTERRUPT_InterruptManager 0001                                      i2stoa@nuls 0011  
                                   i2_vfpfcnvrt 1360                              __size_ofi2_islower 0038  
                            __size_ofi2_isspace 0052                                   i2vfpfcnvrt@ap 0049  
                                 i2vfpfcnvrt@cp 0060                                   i2vfpfcnvrt@fp 0045  
                                 i2vfpfcnvrt@ll 0068                                     i2_xtoa$1861 0031  
                                 i2vfpfcnvrt@vp 0070                                     i2_xtoa$1862 0033  
                            __size_ofi2_isupper 0038                                          ??_atoi 0098  
                                        ??_ctoa 00AF                                          ??_main 0178  
                                        ??_dtoa 010A                               ?_lcd_set_cursor_x 0092  
                             ?_lcd_set_cursor_y 0092                                   lcd_send@value 0090  
                                        ??_otoa 010A                                          ??_stoa 009E  
                                        ??_utoa 010A                                          ??_xtoa 010B  
                                 __activetblptr 000003                              ??_lcd_set_cursor_x 0094  
                            ??_lcd_set_cursor_y 0094                                          ?i2_abs 0013  
                                __CFG_RETEN$OFF 000000                              __size_ofi2_strncmp 00EA  
                            __size_ofi2_toupper 005E                                          ?i2_pad 0013  
                              ___lodiv@quotient 009F                                      i2strncmp@l 0008  
                                    i2strncmp@n 0005                                      i2strncmp@r 000A  
                                    i2toupper@c 0007                                  lcd_draw_char@i 00AD  
                                lcd_draw_char@j 00AB                                  lcd_draw_char@k 00AC  
                      __end_of_SPI_ExchangeByte 68B0                         __end_of_TMR0_StartTimer 69E4  
                                lcd_draw_char@x 0098                                  lcd_draw_char@y 009A  
                                        _ADCON0 000FC2                                          _ADCON1 000FC1  
                                        _ADCON2 000FC0                                          ?_fputc 0091  
                                        STR_101 FFFB                                          ?_fputs 009A  
                                        STR_103 FFE9                                          STR_105 FFE9  
                                        _ADRESH 000FC4                                          _EEADRH 000F75  
                                        _ADRESL 000FC3                                          _EEDATA 000F73  
                                        _EECON2 000F7E                                          _ANCON0 000F5D  
                                        _ANCON1 000F5C                                          ?_putch 0001  
                                        _T1GCON 000FAA                    __size_of_EUSART1_is_rx_ready 0014  
                                        i2l1040 4988                                          i2l1053 4F5A  
                               __CFG_BBSIZ$BB2K 000000                                          i2l1601 642E  
                                        i2l1371 5492                                          i2l1604 6436  
                                        i2l1364 5472                                          i2l1701 66AE  
                                        i2l1381 580A                                          i2l1374 57EA  
                                        i2l1632 40F4                                          i2l1720 5FE4  
                                        i2l1705 5668                                          i2l1635 40FC  
                                        i2l1715 5FDC                                          i2l1644 6678  
                                        i2l1652 60E6                                          i2l1638 64B0  
                                        i2l1726 6608                                  __CFG_WDTEN$OFF 000000  
                                        i2l1673 5A6A                                          i2l1681 6332  
                                        i2l1658 6640                                          i2l1688 682C  
                                        i2l8000 3FA0                                          i2l6146 69E0  
                                        i2l8002 3FB6                                          i2l6148 69DC  
                                        i2l8020 40D8                                          i2l8012 4060  
                                        i2l8004 3FBE                                          i2l8006 3FC6  
                                        i2l8016 40B4                                          i2l8008 4010  
                                        i2l8040 5612                                          i2l8032 55B6  
                                        i2l6506 69C2                                          i2l8018 40C6  
                                        i2l8042 5640                                          i2l8034 55C4  
                                        i2l8026 5580                                          i2l6508 69C6  
                                        i2l8036 55E2                                          i2l8028 55AA  
                                        i2l8300 1604                                          i2l7510 5A6C  
                                        i2l8038 5600                                          i2l8302 1624  
                                        i2l8310 168E                                          i2l7520 5ABE  
                                        i2l7512 5A7C                                          i2l7600 4E96  
                                        i2l8400 1CC6                                          i2l8320 1738  
                                        i2l8312 16B4                                          i2l8304 1632  
                                        i2l8240 13AA                                          i2l8232 1360  
                                        i2l7450 6938                                          i2l7522 5AD2  
                                        i2l7514 5A90                                          i2l7602 4EA4  
                                        i2l7610 4F0A                                          i2l8402 1CFC  
                                        i2l8410 1D48                                          i2l8330 1826  
                                        i2l8322 176E                                          i2l8314 16E6  
                                        i2l8250 13D0                                          i2l8242 13B6  
                                        i2l8234 1386                                          i2l7532 682E  
                                        i2l7452 69BA                                          i2l7460 59B4  
                                        i2l7524 5AD6                                          i2l7516 5A9E  
                                        i2l7540 4806                                          i2l7612 4F1A  
                                        i2l7604 4ED2                                          i2l7620 53B0  
                                        i2l8500 235C                                          i2l8412 1D6E  
                                        i2l8420 1DB8                                          i2l8404 1D34  
                                        i2l8340 18D2                                          i2l8332 185C  
                                        i2l8324 17B8                                          i2l8308 167C  
                                        i2l8244 13B8                                          i2l8236 1394  
                                        i2l7534 684A                                          i2l7462 59C6  
                                        i2l7526 5B04                                          i2l7518 5AAA  
                                        i2l7550 4866                                          i2l7542 4814  
                                        i2l7614 4F3A                                          i2l7606 4EF2  
                                        i2l7630 540A                                          i2l7622 53CE  
                                        i2l8510 23EA                                          i2l8422 1DEE  
                                        i2l8430 1E3A                                          i2l8414 1DA4  
                                        i2l8350 197C                                          i2l8342 18F8  
                                        i2l8318 1702                                          i2l8270 1464  
                                        i2l8262 13E2                                          i2l8254 13D6  
                                        i2l8246 13CA                                          i2l8238 13A6  
                                        i2l9310 66F4                                          _TABLAT 000FF5  
                                        i2l7448 692A                                          i2l7464 59D0  
                                        i2l7480 6312                                          i2l7528 5B18  
                                        i2l7720 6006                                          i2l7560 48B0  
                                        i2l7552 486A                                          i2l7544 4834  
                                        i2l7608 4F04                                          i2l7800 4364  
                                        i2l7632 5438                                          i2l7624 53D6  
                                        i2l7640 573C                                          i2l8512 2402  
                                        i2l8520 2452                                          i2l8440 1F0E  
                                        i2l8432 1E60                                          i2l8424 1E26  
                                        i2l8360 1A3A                                          i2l8352 19B2  
                                        i2l8328 17F0                                          i2l8280 14DE  
                                        i2l8272 1466                                   i2putch@txData 0002  
                                        i2l7466 59EE                                          i2l7458 59A2  
                                        i2l7474 62F0                                          i2l7482 667A  
                                        i2l7722 6012                                          i2l7570 4920  
                                        i2l7562 48BE                                          i2l7554 4876  
                                        i2l7546 4838                                          i2l7538 4802  
                                        i2l7730 3312                                          i2l7810 438C  
                                        i2l7802 436C                                          i2l7634 5458  
                                        i2l7626 53EA                                          i2l7618 53A4  
                                        i2l7650 57B2                                          i2l7642 575A  
                                        i2l8522 2488                                          i2l8514 2410  
                                        i2l8506 239E                                          i2l8450 1FE2  
                                        i2l8442 1F44                                          i2l8434 1EAC  
                                        i2l8362 1A82                                          i2l8338 18AC  
                                        i2l8282 14FE                                          i2l8290 1568  
                                        i2l8274 148C                                          i2l8266 13EE  
                                        i2l8258 13DC                                          i2l7468 5A24  
                                        i2l7476 62FC                                          i2l7484 6686  
                                        i2l7724 6016                                          i2l7716 5FE6  
                                        i2l7572 4932                                          i2l7564 48D0  
                                        i2l7556 4894                                          i2l7548 4846  
                                        i2l7740 338C                                          i2l7732 3332  
                                        i2l7820 4422                                          i2l7812 439E  
                                        i2l7804 4372                                          i2l7636 545A  
                                        i2l7628 53F8                                          i2l7652 57D2  
                                        i2l7644 5762                                          i2l7900 3DF4  
                                        i2l7660 6476                                          i2l7492 65D2  
                                        i2l8540 2580                                          i2l8524 24BE  
                                        i2l8508 23C4                                          i2l8348 1946  
                                        i2l8292 158E                                          i2l8284 150C  
                                        i2l8276 14C2                                          i2l8268 1444  
                                        i2l9308 66E0                                          i2l7670 609A  
                                        i2l7478 630E                                          i2l7486 668A  
                                        i2l7726 601C                                          i2l7718 5FFA  
                                        i2l7566 48FE                                          i2l7558 489C  
                                        i2l7574 4938                                          i2l7590 4E2E  
                                        i2l7582 4DF8                                          i2l7750 33E8  
                                        i2l7742 33A6                                          i2l7734 335A  
                                        i2l7830 44A6                                          i2l7822 4440  
                                        i2l7814 43A4                                          i2l7806 437E  
                                        i2l7638 546C                                          i2l7654 57E4  
                                        i2l7646 5776                                          i2l7910 3EA8  
                                        i2l7902 3DFA                                          i2l8526 24E6  
                                        i2l8534 2538                                          i2l8470 2118  
                                        i2l8462 20A2                                          i2l8454 201A  
                                        i2l8446 1F64                                          i2l8438 1EE8  
                                        i2l8390 1C40                                          i2l8382 1BB8  
                                        i2l8374 1B42                                          i2l8366 1ABA  
                                        i2l8358 1A04                                          i2l8294 1596  
                                        i2l8278 14D0                                          i2l8550 259E  
                                        i2l9430 690E                                          i2l7664 6642  
                                        i2l7672 60AE                                          i2l7488 66A2  
                                        i2l7576 4948                                          i2l7568 491E  
                                        i2l7592 4E3C                                          i2l7584 4DFC  
                                        i2l7656 63F8                                          i2l7760 3488  
                                        i2l7752 33F0                                          i2l7744 33C2  
                                        i2l7736 337A                                          i2l7832 44AC  
                                        i2l7824 445A                                          i2l7816 43AA  
                                        i2l7808 4384                                          i2l7840 498A  
                                        i2l7648 5784                                          i2l7912 3EC2  
                                        i2l7904 3E5E                                          i2l7680 660A  
                                        i2l7920 3606                                          i2l8552 25C4  
                                        i2l8536 255E                                          i2l8544 258C  
                                        i2l8528 24F6                                          i2l8480 21D6  
                                        i2l8472 214E                                          i2l8464 20C8  
                                        i2l8456 2050                                          i2l8448 1F9A  
                                        i2l8392 1C76                                          i2l8384 1BEE  
                                        i2l8376 1B68                                          i2l8368 1AF0  
                                        i2l8296 15A4                                          i2l8288 1556  
                                        i2l9280 6124                                          i2l9272 60E8  
                                        i2l7674 60DC                                          i2l7578 4968  
                                        i2l7594 4E5C                                          i2l7586 4E0A  
                                        i2l7658 6412                                          i2l7770 3544  
                                        i2l7762 348E                                          i2l7754 33FA  
                                        i2l7746 33D4                                          i2l7738 338A  
                                        i2l7834 44BC                                          i2l7826 4474  
                                        i2l7818 4408                                          i2l7850 49D2  
                                        i2l7842 499C                                          i2l7906 3E70  
                                        i2l7914 3ED2                                          i2l7690 5FD0  
                                        i2l7930 3674                                          i2l7922 3608  
                                        i2l8538 256C                                          i2l8482 220C  
                                        i2l8394 1CAE                                          i2l8298 15CA  
                                        i2l9266 6808                                          i2l9282 6132  
                                        i2l9274 60F6                                          i2l9426 68FA  
                                        i2l7676 60E0                                          i2l7668 6096  
                                        i2l7596 4E7A                                          i2l7588 4E2A  
                                        i2l7780 3596                                          i2l7772 355E  
                                        i2l7756 3400                                          i2l7764 34F2  
                                        i2l7748 33E2                                          i2l7828 4494  
                                        i2l7836 44C2                                          i2l7860 4A4A  
                                        i2l7852 49DA                                          i2l7844 49A4  
                                        i2l7908 3E8E                                          i2l7684 5F88  
                                        i2l7940 36B0                                          i2l7932 367C  
                                        i2l7924 3622                                          i2l8484 2234  
                                        i2l8492 22B8                                          i2l8396 1CBA  
                                        i2l9268 6810                                          i2l9276 6114  
                                        i2l9428 690A                                          i2l7598 4E82  
                                        i2l7782 35A8                                          i2l7766 350C  
                                        i2l7774 356E                                          i2l7758 3482  
                                        i2l7870 4A9A                                          i2l7862 4A4E  
                                        i2l7854 49E8                                          i2l7846 49B6  
                                        i2l7942 36C0                                          i2l7934 3686  
                                        i2l7926 364C                                          i2l7918 35F6  
                                        i2l8494 22EE                                          i2l8486 2244  
                                        i2l8478 21A0                                          i2l8902 5E66  
                                        i2l9278 6120                                          i2l7784 35B4  
                                        i2l7776 3580                                          i2l7768 352A  
                                        i2l7792 42FC                                          i2l7880 4AE8  
                                        i2l7872 4A9E                                          i2l7864 4A6C  
                                        i2l7848 49BE                                          i2l7688 5FBE  
                                        i2l7960 3788                                          i2l7952 374C  
                                        i2l7936 368C                                          i2l7928 3654  
                                        i2l8496 2324                                          i2l8488 227C  
                                        i2l8904 5E6E                                          i2l7786 35BC  
                                        i2l7778 3590                                          i2l7794 430C  
                                        i2l7866 4A78                                          i2l7858 4A36  
                                        i2l7890 3D60                                          i2l7882 3CF8  
                                        i2l7970 3840                                          i2l7962 378E  
                                        i2l7954 375E                                          i2l7946 3700  
                                        i2l7938 3694                                          i2l8498 234C  
                                        i2l8906 5E7C                                          i2l9722 0042  
                                        i2l7788 35CC                                          i2l7796 430E  
                                        i2l7876 4AD0                                          i2l7868 4A96  
                                        i2l7892 3D68                                          i2l7884 3D08  
                                        i2l7980 38A6                                          i2l7972 385A  
                                        i2l7948 3712                                          i2l7956 3772  
                                        i2l7964 37EC                                          i2l8908 5EA2  
                                        i2l9724 0050                                          i2l7990 3F18  
                                        i2l7798 4328                                          i2l7878 4AE4  
                                        i2l7894 3D72                                          i2l7886 3D0A  
                                        i2l7974 387A                                          i2l7966 3808  
                                        i2l7958 3782                                          i2l9726 005E  
                                        i2l7992 3F4A                                          i2l7984 3EFC  
                                        i2l7896 3D78                                          i2l7888 3D24  
                                        i2l7976 3880                                          i2l7968 3826  
                                        i2l7994 3F96                                          i2l7986 3F10  
                                        i2l7898 3DEE                                          i2l7978 3890  
                                        i2l7996 3F9A                                          i2l7988 3F14  
                                        i2l9986 1416                                       ??i2_fputc 0007  
                                        _RCREG1 000FAE                                          i2l9988 3FFA  
                                     ??i2_fputs 0010                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                   vfpfcnvrt@done 0133  
                  __size_of_EUSART1_is_tx_ready 002A                                          _SPBRG1 000FAF  
                                     ??i2_putch 0002                                          _SSPADD 000FC8  
                                        _SSPBUF 000FC9                                  i2___aodiv@sign 0012  
                                        _TXREG1 000FAD                                          i2abs@a 0013  
                                        _TXSTA1 000FAC                                          i2_atoi 3EFC  
                                        i2_ctoa 5FE6                                          i2_dtoa 3312  
                                        i2_otoa 42FC                                          i2pad@i 001A  
                                        i2pad@p 0017                                          i2pad@w 001C  
                                        i2_stoa 498A                                          i2_utoa 3CF8  
                                        i2_xtoa 35F6                                 _global_bg_color 00BB  
                                __CFG_XINST$OFF 000000                                ??_lcd_draw_pixel 0094  
                              __end_of_lcd_fill 5D30                                    vfprintf@cfmt 0152  
                              __end_of_lcd_init 2A0E                                __end_of_lcd_send 6894  
                                i2___aomod@sign 0012                                          ___lmul 5D30  
                                     ??___aldiv 00A3                                       ??___aodiv 009F  
                                 i2vfprintf@fmt 0051                                       ??___aomod 009F  
                                        ___wmul 67E0                                  __CFG_STVREN$ON 000000  
                       __end_of_TMR0_WriteTimer 6990                                       ??___lodiv 009F  
                                     ??___lomod 009F                                     ?i2_vfprintf 004F  
                     i2TMR0_WriteTimer@timerVal 0001                        ?_EUSART1_SetErrorHandler 008F  
                              ?_TMR0_Initialize 0001                                          clear_0 5DE2  
                                        clear_1 5DEE                                          _printf 67B8  
                                        pad@buf 00A3                ??_EUSART1_SetOverrunErrorHandler 0091  
               ?_EUSART1_SetOverrunErrorHandler 008F                                          ctoa@fp 00AC  
                                        dtoa@fp 0100                         __end_of_DATAEE_ReadByte 68CA  
                                        _string 01A9                                          _strlen 6526  
                                     ??_msDelay 008F                               ??i2_EUSART1_Write 0001  
                                        fputc@c 0091                                          fputs@c 009E  
                                        fputs@i 009F                               __end_ofi2___aodiv 498A  
                                        fputs@s 009A                                       ??_isalpha 0091  
                                     ??_isdigit 0091                               __end_ofi2___aomod 4F5C  
                             __end_ofi2___lodiv 5494                               __end_ofi2___lomod 580C  
                                     ??_islower 0091                                    __mediumconst F134  
                                     ??_isspace 0091                                          otoa@fp 0100  
                                        tblptrh 000FF7                                       ??_isupper 0091  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                      ADC_GetConversion@channel 0093                                          stoa@cp 00AA  
                                        stoa@fp 009A                              i2___aomod@dividend 0001  
                              __end_of_vfprintf 5E66                               i2___lodiv@divisor 0009  
                               ??_EUSART1_Write 008F                                          utoa@fp 0100  
     IOCB4_SetInterruptHandler@InterruptHandler 008F                                ?_PIN_MANAGER_IOC 0001  
                              __end_of_snprintf 66E0                               i2___lodiv@counter 0019  
                                        xtoa@fp 0100                         ??_INTERRUPT_S1_CALLBACK 005B  
                                     ??_strncmp 0095                                       ??_toupper 0097  
                 __size_of_INTERRUPT_Initialize 0004                                ?_TMR1_Initialize 0001  
                             __end_ofi2_isalpha 64B2                               __end_ofi2_isdigit 667A  
                             _SYSTEM_Initialize 6854                                      __accesstop 0060  
                      __size_of_lcd_draw_string 0138                         __end_of__initialization 5DF8  
                             __end_ofi2_islower 660A                               __end_ofi2_isspace 60E8  
                             __end_ofi2_isupper 6642                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                               __end_ofi2_strncmp 566A  
                             __end_ofi2_toupper 5FE6                                   __end_ofi2_abs 6438  
                                 __end_ofi2_pad 5B32                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 69CC                                    __pidataBANK1 69D3  
                           ??_SYSTEM_Initialize 0091                                _DATAEE_WriteByte 621C  
                                 __end_of_fputc 58D8                                   __end_of_fputs 621C  
         __end_of_IOCB4_DefaultInterruptHandler 69E6          __size_of_IOCB4_DefaultInterruptHandler 0002  
                 _IOCB4_DefaultInterruptHandler 69E4                                   __end_of_putch 6984  
                                   i2printf@fmt 007B                                       ?_SPI_Open 0001  
                   ??_IOCB4_SetInterruptHandler 0091                            __end_of_EUSART1_Read 678E  
                                     ?i2___wmul 0001                                ??_lcd_set_cursor 0098  
                                       ??i2_abs 0015                                         ??i2_pad 0019  
                                i2vfpfcnvrt@fmt 0047                                       ?i2_printf 007B  
                                i2vfpfcnvrt@llu 0073                                       ?i2_strlen 0001  
                         i2EUSART1_Write@txData 0001                                ?_TMR0_StartTimer 0001  
                                       ??_fputc 0095                       __end_of_SYSTEM_Initialize 6876  
                                       ??_fputs 009E                                         ??_putch 0090  
                                    __pbssBANK0 00B1                                      __pbssBANK1 017D  
                           __size_ofi2_vfprintf 0064                                 __CFG_PLLCFG$OFF 000000  
                                    __pnvCOMRAM 005B                                         ?i2_atoi 0008  
                                       ?i2_ctoa 001E                                         ?i2_dtoa 001E  
                                       ?i2_otoa 001E                                         ?i2_stoa 000C  
                                       ?i2_utoa 001E                                         ?i2_xtoa 001E  
                                   i2strncmp@_l 0001                                     i2strncmp@_r 0003  
               __end_of_EUSART1_SetErrorHandler 69B8                         __size_of_TMR0_StopTimer 0004  
                                       ?___lmul 008F                                         ?___wmul 008F  
                                i2_toupper$2552 000D                                ?_TMR0_WriteTimer 008F  
                                ___lmul@product 0097                                      ??_SPI_Open 008F  
                                       ?_printf 0154                         __size_of_ADC_Initialize 0016  
                                       ?_strlen 008F          __end_of_EUSART1_SetFramingErrorHandler 69AE  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 69A4  
                              ?_DATAEE_ReadByte 008F                                      ??i2___wmul 0005  
                              __CFG_CANMX$PORTB 000000                                         _REFOCON 000F9A  
                             i2___lomod@divisor 0009                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 12BE                                         _TBLPTRH 000FF7  
                                       _TBLPTRL 000FF6                                         _TBLPTRU 000FF8  
                             i2___lomod@counter 0011                                      ??i2_printf 0057  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000F7D  
                                    ??i2_strlen 0003                                         _SSPCON1 000FC6  
                                       _SSPCON2 000FC5                                       ?_lcd_fill 0098  
                                     ?_lcd_init 0001                                       ?_lcd_send 0090  
                                       _SSPSTAT 000FC7                                ___lomod@dividend 008F  
                               _read_from_usart 5B32                                         i2_fputc 59A2  
                              ??_SPI_Initialize 008F                                         i2_fputs 62F0  
                     _IOCB4_SetInterruptHandler 6990                            DATAEE_WriteByte@bAdd 008F  
                                       i2atoi@n 0015                                         i2pad@fp 0013  
                                       i2atoi@s 0008                                         i2ctoa@c 0020  
                                       i2_putch 69B8                                         i2ctoa@w 0021  
                                       i2dtoa@d 0020                                         i2dtoa@i 0040  
                                       i2dtoa@n 0038                                         i2dtoa@p 0032  
                                       i2dtoa@s 0036                                         i2dtoa@w 0034  
                                       i2otoa@d 0020                                         i2otoa@i 003E  
                                       i2otoa@n 0036                                         i2otoa@p 0030  
                                       i2otoa@t 0032                                         i2otoa@w 0034  
                               __size_ofi2_atoi 0202                                 __size_ofi2_ctoa 005C  
                               __size_ofi2_dtoa 02E4                                         i2stoa@i 0018  
                                       i2stoa@l 0020                                         i2stoa@p 001E  
                                       i2stoa@s 000E                                         i2stoa@w 001A  
                                       i2utoa@d 0020                                         i2utoa@i 003C  
                               __size_ofi2_otoa 01F0                                         i2utoa@n 0034  
                                       i2utoa@p 0030                                 __CFG_PWRTEN$OFF 000000  
                                       i2utoa@w 0032                                 __size_ofi2_stoa 0186  
                               __size_ofi2_utoa 0204                                 __size_ofi2_xtoa 02DA  
                                       i2xtoa@c 0043                                         i2xtoa@d 0020  
                                       i2xtoa@i 0041                                         i2xtoa@n 0039  
                                       i2xtoa@p 0035                                         i2xtoa@w 0037  
                                       i2xtoa@x 0028                            _ADC_InterruptHandler 005D  
                                       __Hparam 0000                                         __Lparam 0000  
                            __size_of_vsnprintf 0110                               ??_lcd_draw_string 010A  
                                 _turn_on_value 01C9                                         ___aldiv 51A4  
                                       ___aodiv 4678                                         ___aomod 4C92  
                               __size_of___lmul 006C                                 __size_of___wmul 0028  
                                       ___lodiv 52B2                                         ___lomod 566A  
                                     ?_vfprintf 014C                                  i2vfprintf@cfmt 0055  
                                     ?_snprintf 016A                             _EUSART1_is_rx_ready 693E  
                                  ?i2_vfpfcnvrt 0045                                         __pcinit 5D9C  
                                       __ramtop 0F00                             _EUSART1_is_tx_ready 673A  
                                       __ptext0 2A0E                                         __ptext1 66B0  
                                       __ptext2 5094                                         __ptext3 5B32  
                                       __ptext4 6984                                         __ptext5 673A  
                                       __ptext6 693E                                         __ptext7 6764  
                                       __ptext8 67B8                                         __ptext9 5E02  
                               __size_of_printf 0028                                       _T0CONbits 000FD5  
                                       _msDelay 659A                                       _IOCB4_ISR 66E0  
                               __size_of_strlen 003A                                       _T1CONbits 000FCD  
                         _OSCILLATOR_Initialize 6964                                    __size_of_abs 0042  
                                  __size_of_pad 00CA                                         _isalpha 6438  
                                       _isdigit 6560                                ___aldiv@dividend 009B  
                            _EUSART1_Initialize 62AA                                         _islower 64B2  
                      ??_PIN_MANAGER_Initialize 0091                                         _isspace 6042  
                             __CFG_MSSPMSK$MSK7 000000                                         _isupper 64EC  
                                       atoi@neg 009C                                         _rx_data 0181  
                         __end_of_lcd_draw_char 4C92                      __size_of_SYSTEM_Initialize 0022  
                                    ??_lcd_fill 009A                               ?_SPI_ExchangeByte 0001  
                                    ??_lcd_init 009E                                      ??_lcd_send 0091  
                                       _strncmp 5494                                         _toupper 5ECA  
                          end_of_initialization 5DF8                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                              ??_SPI_ExchangeByte 008F  
                          ?_EUSART1_is_tx_ready 0001                       __size_of_lcd_set_cursor_x 004E  
                     __size_of_lcd_set_cursor_y 004E                                         fputc@fp 0093  
                   _EUSART1_OverrunErrorHandler 00C2                                         fputs@fp 009C  
                           i2___wmul@multiplier 0001                                       i2u1010_40 14D0  
                                     i2u1010_41 14CC                                       i2u1011_40 154E  
                                     i2u1011_41 1548                                       i2u1020_40 1738  
                                     i2u1012_40 1550                                       i2u1020_41 1734  
                                     i2u1021_40 176E                                       i2u1013_40 1568  
                                     i2u1021_41 176A                                       i2u1013_41 1564  
                                     i2u1030_40 1B68                                       i2u1022_40 1826  
                                     i2u1014_40 158E                                       i2u1006_40 1386  
                                     i2u1030_41 1B64                                       i2u1022_41 1822  
                                     i2u1014_41 158A                                       i2u1006_41 1382  
                                     i2u1031_40 1BEE                                       i2u1023_40 185C  
                                     i2u1015_40 15CA                                       i2u1007_40 1456  
                                     i2u1031_41 1BEA                                       i2u1023_41 1858  
                                     i2u1015_41 15C6                                       i2u1007_41 1452  
                                     i2u1040_40 20C8                                       i2u1032_40 1C76  
                                     i2u1024_40 18D2                                       i2u1016_40 1674  
                                     i2u1008_40 1464                                       i2u1040_41 20C4  
                                     i2u1032_41 1C72                                       i2u1024_41 18CE  
                                     i2u1016_41 166E                                       i2u1008_41 1460  
                                     i2u1041_40 214E                                       i2u1033_40 1CFC  
                                     i2u1025_40 18F8                                       i2u1017_40 1676  
                                     i2u1009_40 148C                                       i2u1041_41 214A  
                                     i2u1033_41 1CF8                                       i2u1025_41 18F4  
                                     i2u1009_41 1488                                       i2u1050_40 255E  
                                     i2u1042_40 21D6                                       i2u1034_40 1D6E  
                                     i2u1026_40 197C                                       i2u1018_40 168E  
                                     i2u1202_40 690A                                       i2u1050_41 255A  
                                     i2u1042_41 21D2                                       i2u1034_41 1D6A  
                                     i2u1026_41 1978                                       i2u1018_41 168A  
                                     i2u1202_41 6906                                       i2u1043_40 220C  
                                     i2u1035_40 1DEE                                       i2u1027_40 19B2  
                                     i2u1019_40 16B4                                       i2u1043_41 2208  
                                     i2u1035_41 1DEA                                       i2u1027_41 19AE  
                                     i2u1019_41 16B0                                       i2u1044_40 22EE  
                                     i2u1036_40 1E60                                       i2u1028_40 1A3A  
                                     i2u1044_41 22EA                                       i2u1036_41 1E5C  
                                     i2u1028_41 1A36                                       i2u1045_40 2324  
                                     i2u1037_40 1F0E                                       i2u1029_40 1AF0  
                                     i2u1221_40 0050                                       i2u1045_41 2320  
                                     i2u1037_41 1F0A                                       i2u1029_41 1AEC  
                                     i2u1221_41 004C                                       i2u1046_40 23C4  
                                     i2u1038_40 1F9A                                       i2u1222_40 005E  
                                     i2u1046_41 23C0                                       i2u1038_41 1F96  
                                     i2u1222_41 005A                                       i2u1047_40 23EA  
                                     i2u1039_40 2050                                       i2u1047_41 23E6  
                                     i2u1039_41 204C                                       i2u1048_40 2488  
                                     i2u1128_40 5EC0                                       i2u1048_41 2484  
                                     i2u1128_41 5EBC                                       i2u1049_40 24BE  
                                     i2u1049_41 24BA                                       i2u1181_40 66F4  
                                     i2u1181_41 66F0                                       i2u1182_48 66FA  
                                     i2u1182_49 670C                                       i2u1176_40 60F6  
                                     i2u1176_41 60F2                                       i2u1177_40 6132  
                                     i2u1177_41 612E                             lcd_draw_char@fIndex 009C  
                           read_from_usart@data 0100                                 i2_EUSART1_Write 6928  
                             __end_of_vfpfcnvrt 1360                                ___aldiv@quotient 00A5  
                                       postdec1 000FE5                                         postdec2 000FDD  
                            i2___lodiv@dividend 0001                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 002A                                lcd_fill@bg_color 0098  
                                  ??i2_vfprintf 0055                                      ??_vfprintf 00B1  
                          ??_EUSART1_Initialize 0091                                      ??_snprintf 00B1  
                                       strlen@a 0091                                         strlen@s 008F  
                             lcd_draw_string@pS 0104                                       _PORTBbits 000F81  
                             _spi_configuration FF01                                      ?_IOCB4_ISR 0001  
                             i2___aodiv@divisor 0009                                __CFG_FOSC$INTIO2 000000  
                             i2___aodiv@counter 0011                         __end_of_read_from_usart 5BF4  
                                     _TRISCbits 000F94                               __end_of_vsnprintf 51A4  
                                     i2___aodiv 4802                __size_of_EUSART1_SetErrorHandler 000A  
                                     i2___aomod 4DF8                             EUSART1_Write@txData 008F  
                                     i2___lodiv 53A4                           ??_EUSART1_is_rx_ready 008F  
                                     i2___lomod 573C                        __end_of_DATAEE_WriteByte 6264  
                            i2___lodiv@quotient 0011                           ??_EUSART1_is_tx_ready 008F  
                __size_of_INTERRUPT_S1_CALLBACK 0050                   __end_of_INTERRUPT_S1_CALLBACK 6138  
                                    lcd_send@dc 0091                              __end_ofi2_vfprintf 5ECA  
                                  _EUSART1_Read 6764                                       i2_isalpha 6476  
                                     i2_isdigit 6642                                  __end_ofi2_atoi 40FE  
                                __end_ofi2_ctoa 6042                                  __end_ofi2_dtoa 35F6  
                                     i2_islower 65D2                                       i2_isspace 6096  
                                __end_ofi2_otoa 44EC                                  __end_ofi2_stoa 4B10  
                                __end_ofi2_utoa 3EFC                                  __end_ofi2_xtoa 38D0  
                                     i2_isupper 660A                                  _TMR0_StopTimer 69DC  
                                     i2atoi@neg 000E                    __end_of_INTERRUPT_Initialize 69DC  
                          SPI_ExchangeByte@data 008F                                       i2_strncmp 5580  
                                     i2_toupper 5F88                       __end_of_spi_configuration FF05  
                                __end_of___lmul 5D9C                                     vfpfcnvrt@ap 012B  
                                   vfpfcnvrt@cp 0131                                     vfpfcnvrt@fp 0127  
                                   vfpfcnvrt@ll 0139                                  __end_of___wmul 6808  
                                   vfpfcnvrt@vp 0141                                  _ADC_Initialize 6912  
                                     i2fputc@fp 0005                          ?_OSCILLATOR_Initialize 0001  
                                     i2fputs@fp 000E                                i2___wmul@product 0005  
                                __end_of_printf 67E0                               __size_of_SPI_Open 00B4  
                                __end_of_strlen 6560                             start_initialization 5D9C  
                               ___lodiv@divisor 0097                                 ___lodiv@counter 00A7  
                             __size_ofi2___wmul 0026                        __size_of_TMR0_Initialize 002A  
               __size_of_PIN_MANAGER_Initialize 0046                                     __end_of_abs 6376  
                                   __end_of_pad 59A2                                      ?i2___aodiv 0001  
                                    ?i2___aomod 0001                                    i2vfpfcnvrt@c 0072  
                                    ?i2___lodiv 0001                                      ?i2___lomod 0001  
                                   putch@txData 0090                               __size_ofi2_printf 0026  
                         __end_of_EUSART1_Write 68E2                               __size_ofi2_strlen 0036  
                                     i2strlen@a 0003                                       i2strlen@s 0001  
                       __end_ofi2_EUSART1_Write 693E                                        ??i2_atoi 000A  
                                      ??i2_ctoa 0021                                        ??i2_dtoa 0028  
                           DATAEE_ReadByte@bAdd 008F                                        ??i2_otoa 0028  
                                      ??i2_stoa 0010                                        ??i2_utoa 0028  
                      __size_of_PIN_MANAGER_IOC 0018                                        ??i2_xtoa 0029  
                                    ?i2_isalpha 0001                          __end_of_TMR0_StopTimer 69E0  
                                    ?i2_isdigit 0001                                      ?i2_islower 0001  
                                    ?i2_isspace 0001                  SPI_Open@spiUniqueConfiguration 0090  
                                    ?i2_isupper 0001                        __size_of_TMR1_Initialize 002C  
                                   vfprintf@fmt 014E                                    i2vfprintf@ap 0053  
                               i2vfpfcnvrt@done 0062                                    i2vfprintf@fp 004F  
                                      ??___lmul 0097                                        ??___wmul 0093  
                                    ?i2_strncmp 0001                                      ?i2_toupper 0007  
                        __end_of_ADC_Initialize 6928                                     __pdataBANK0 00CA  
                                   __pdataBANK1 01C7                                        ??_printf 00B1  
                             i2___aomod@divisor 0009                                        ??_strlen 0091  
                             i2___aomod@counter 0011                                     ??_IOCB4_ISR 005B  
                       __size_of_lcd_draw_pixel 0018                            __size_ofi2_vfpfcnvrt 1278  
                                  vsnprintf@cnt 0162                                    vsnprintf@fmt 0158  
                                   __pbssCOMRAM 005D                                   __pcstackBANK0 0060  
                                 __pcstackBANK1 0100                                ?_read_from_usart 00A5  
                              ___aodiv@dividend 008F                                     snprintf@fmt 016E  
                                     _adc_value 0187                                 _lcd_draw_string 4F5C  
                                      ?i2_fputc 0003                                        ?i2_fputs 000C  
                              _lcd_set_cursor_x 6186                                _lcd_set_cursor_y 6138  
              ??_EUSART1_SetFramingErrorHandler 0091                 ?_EUSART1_SetFramingErrorHandler 008F  
                             __size_of_lcd_fill 0088                               __size_of_lcd_init 0436  
                                      ?i2_putch 0001                               __size_of_lcd_send 001E  
                                     _atoi$2440 00A0                                       _atoi$2438 009E  
                                     _atoi$2439 00A2                                       __pnvBANK0 00C0  
                      __size_of_TMR0_StartTimer 0004                                 ?_TMR0_StopTimer 0001  
                        _PIN_MANAGER_Initialize 6264                                       _dtoa$1825 0112  
                      fp__INTERRUPT_S1_CALLBACK 0000                         _EUSART1_is_tx_ready$859 008F  
                                     __pintcode 0008                                   __pmediumconst F134  
                                      ?___aldiv 009B                                        ?___aodiv 008F  
                                      ?___aomod 008F                                       __ptext100 682E  
                                     __ptext101 69C2                                       __ptext102 69DC  
                              ___aodiv@quotient 00A1                                       __ptext103 69E0  
                                     __ptext104 0000                                        ?___lodiv 008F  
                                      ?___lomod 008F                                 ?_ADC_Initialize 0001  
                              read_from_usart@i 010C                    ??_INTERRUPT_InterruptManager 0081  
                             __size_of_vfprintf 0064                               __size_of_snprintf 0030  
                                      ?_msDelay 0001                                 ___lomod@divisor 0097  
                               ___lomod@counter 009F                                        _BAUDCON1 000FA7  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        ?_isalpha 008F  
                                      ?_isdigit 008F                                  __size_ofi2_abs 0040  
                      __size_of_TMR0_WriteTimer 000C                            _EUSART1_ErrorHandler 00C0  
                                __size_ofi2_pad 00C6                                        ?_islower 008F  
                                      ?_isspace 008F                                        ?_isupper 008F  
                       _EUSART1_SetErrorHandler 69AE                                     ??i2___aodiv 0011  
                                   ??i2___aomod 0011                                  __size_of_fputc 00CC  
                                   ??i2___lodiv 0011                                  __size_of_fputs 0048  
                                   ??i2___lomod 0011                        __size_of_DATAEE_ReadByte 001A  
                                      ?_strncmp 008F                                        ?_toupper 0095  
                                __size_of_putch 000E                            _INTERRUPT_Initialize 69D8  
                       __size_of_lcd_set_cursor 0042                                 ___aldiv@divisor 009F  
                             ??_TMR0_Initialize 008F                                 ___aldiv@counter 00A3  
                              ?i2_EUSART1_Write 0001                                  ___wmul@product 0093  
                                      _IOCBbits 000F5A                                        _LATAbits 000F89  
       EUSART1_SetErrorHandler@interruptHandler 008F                                        _LATEbits 000F8D  
                                   ??i2_isalpha 0003                              i2___lomod@dividend 0001  
                                   ??i2_isdigit 0003                                 lcd_set_cursor@x 0094  
                               lcd_set_cursor@y 0096                                     ??i2_islower 0003  
                                   ??i2_isspace 0003             __size_of_INTERRUPT_InterruptManager 0096  
                              i2_vfpfcnvrt$1876 0064                                i2_vfpfcnvrt$1877 0066  
                                      _PIR1bits 000F9E                                     ??i2_isupper 0003  
                                      _PIR4bits 000FB7                           lcd_draw_string@lIndex 0110  
                                      i2u900_40 33E2                                        i2u900_41 33DE  
                                      i2u901_40 350C                                        i2u901_41 3508  
                                      i2u902_40 352A                                        i2u910_40 4328  
                                      i2u902_41 3526                                        i2u910_41 4324  
                                      i2u903_40 3544                                        i2u911_40 43E2  
                                      i2u903_41 3540                                        i2u911_45 43D0  
                                      i2u904_40 355E                                        i2u912_40 4422  
                                      i2u920_40 49B6                                        i2u904_41 355A  
                                      i2u912_41 441E                                        i2u920_41 49B2  
                                      i2u841_40 59B4                                        i2u905_40 356E  
                                      i2u913_40 4440                                        i2u921_40 49E8  
                                      i2u841_41 59B0                                        i2u905_41 356A  
                                      i2u913_41 443C                                        i2u921_41 49E4  
                                      i2u842_40 59C6                                        i2u906_40 3580  
                                      i2u914_40 445A                                        i2u922_40 4A06  
                                      i2u930_40 3E70                                        i2u842_41 59C2  
                                      i2u906_41 357C                                        i2u914_41 4456  
                                      i2u922_41 4A02                                        i2u930_41 3E6C  
                                      i2u843_40 59EE                                        i2u907_40 3590  
                                      i2u915_40 4474                                        i2u923_40 4A32  
                                      i2u931_40 3E8E                                        i2u843_41 59EA  
                                      i2u907_41 358C                                        i2u915_41 4470  
                                      i2u923_41 4A2E                                        i2u931_41 3E8A  
                                      i2u844_40 5A24                                        i2u860_40 4894  
                                      i2u908_40 35A8                                        i2u916_40 4484  
                                      i2u924_40 4A6C                                        i2u932_40 3EA8  
                                      i2u940_40 36FC                                        i2u844_41 5A20  
                                      i2u860_41 4890                                        i2u908_41 35A4  
                                      i2u916_41 4480                                        i2u924_41 4A68  
                                      i2u932_41 3EA4                                        i2u845_40 6332  
                                      i2u853_40 5A7C                                        i2u861_40 48BE  
                                      i2u917_40 4494                                        i2u909_40 430C  
                                      i2u925_40 4ABC                                        i2u933_40 3EC2  
                                      i2u941_40 3712                                        i2u845_41 632E  
                                      i2u853_41 5A78                                        i2u861_41 48BA  
                                      i2u917_41 4490                                        i2u909_41 4308  
                                      i2u925_41 4AB8                                        i2u933_41 3EBE  
                                      i2u941_41 370E                                        i2u846_40 66A2  
                                      i2u854_40 5A9E                                        i2u862_40 48FE  
                                      i2u918_40 44A6                                        i2u926_40 4ACC  
                                      i2u934_40 3ED2                                        i2u950_40 386A  
                                      i2u942_40 3746                                        i2u846_41 669E  
                                      i2u854_41 5A9A                                        i2u862_41 48FA  
                                      i2u918_41 44A2                                        i2u926_41 4AC8  
                                      i2u870_41 53AA                                        i2u934_41 3ECE  
                                      i2u950_41 3866                                        i2u942_41 3740  
                                      i2u839_40 6938                                        i2u855_40 5AF4  
                                      i2u863_40 4948                                        i2u927_40 4B06  
                                      i2u871_40 53CE                                        i2u847_40 6602  
                                      i2u951_40 387A                                        i2u943_40 3748  
                                      i2u935_40 3606                                        i2u839_41 6934  
                                      i2u855_41 5AF0                                        i2u863_41 4944  
                                      i2u927_41 4B02                                        i2u919_41 4994  
                                      i2u871_41 53CA                                        i2u847_41 65FC  
                                      i2u951_41 3876                                        i2u935_41 3602  
                                      i2u880_40 6672                                        i2u960_40 40AE  
                                      i2u952_40 3F3A                                        i2u856_40 5B04  
                                      i2u864_40 4E0A                                        i2u872_40 53F8  
                                      i2u928_40 3D08                                        i2u848_40 6604  
                                      i2u944_40 375E                                        i2u936_40 3622  
                                      i2u880_41 666C                                        i2u960_41 40A8  
                                      i2u856_41 5B00                                        i2u864_41 4E06  
                                      i2u872_41 53F4                                        i2u928_41 3D04  
                                      i2u944_41 375A                                        i2u936_41 361E  
                                      i2u952_47 3F30                                        i2u881_40 6674  
                                      i2u961_40 40B0                                        i2u953_40 3F4A  
                                      i2u857_40 4814                                        i2u865_40 4E3C  
                                      i2u873_40 5438                                        i2u929_40 3D24  
                                      i2u945_40 37C6                                        i2u937_40 364C  
                                      i2u953_41 3F46                                        i2u857_41 4810  
                                      i2u865_41 4E38                                        i2u873_41 5434  
                                      i2u929_41 3D20                                        i2u937_41 3648  
                                      i2u945_45 37B4                                        i2u882_40 60AE  
                                      i2u962_40 40C6                                        i2u954_40 3F74  
                                      i2u858_40 4846                                        i2u866_40 4E7A  
                                      i2u874_40 575A                                        i2u946_40 3808  
                                      i2u938_40 36B0                                        i2u882_41 60AA  
                                      i2u962_41 40C2                                        i2u858_41 4842  
                                      i2u866_41 4E76                                        i2u874_41 5756  
                                      i2u946_41 3804                                        i2u938_41 36AC  
                                      i2u954_47 3F6A                                        i2u883_40 60DC  
                                      i2u963_40 40D8                                        i2u955_40 3F96  
                                      i2u867_40 4EA4                                        i2u875_40 5784  
                                      i2u947_40 3826                                        i2u939_40 36FA  
                                      i2u883_41 60D8                                        i2u963_41 40D4  
                                      i2u955_41 3F92                                        i2u859_41 4870  
                                      i2u867_41 4EA0                                        i2u875_41 5780  
                                      i2u947_41 3822                                        i2u939_41 36F4  
                                      i2u956_40 3FB2                                        i2u868_40 4ED2  
                                      i2u964_40 55AA                                        i2u876_40 57B2  
                                      i2u884_40 663A                                        i2u948_40 3840  
                                      i2u956_41 3FAE                                        i2u868_41 4ECE  
                                      i2u964_41 55A6                                        i2u876_41 57AE  
                                      i2u884_41 6634                                        i2u948_41 383C  
                                      i2u957_40 3FE8                                        i2u893_40 5FFA  
                                      i2u869_40 4F1A                                        i2u877_40 6412  
                                      i2u965_40 55E2                                        i2u885_40 663C  
                                      i2u949_40 385A                                        i2u893_41 5FF6  
                                      i2u869_41 4F16                                        i2u877_41 640E  
                                      i2u965_41 55DE                                        i2u949_41 3856  
                                      i2u957_47 3FDE                                        i2u958_40 4046  
                                      i2u894_40 3342                                        i2u966_40 5600  
                                      i2u878_40 64AA                                        i2u886_40 5FB8  
                                      i2u894_41 333C                                        i2u966_41 55FC  
                                      i2u878_41 64A4                                        i2u886_41 5FB2  
                                      i2u958_47 403C                                        i2u959_40 408A  
                                      i2u895_40 3344                                        i2u967_40 5612  
                                      i2u879_40 64AC                                        i2u887_40 5FBA  
                                      i2u967_41 560E                                        _RCONbits 000FD0  
                                      i2u959_47 4080                                        i2u896_40 335A  
                                      i2u968_40 5640                                        i2u888_40 5FD0  
                                      i2u896_41 3356                                        i2u968_41 563C  
                                      i2u888_41 5FCC                                        i2u897_40 338A  
                                      i2u897_41 3386                                        i2u898_40 33A6  
                                      i2u898_41 33A2                                        i2u899_40 33D4  
                                      i2u899_41 33D0                       __size_of_SPI_ExchangeByte 001C  
                              lcd_draw_string@k 010E                                     ??i2_strncmp 0007  
                              lcd_draw_string@x 0100                                lcd_draw_string@y 0102  
                                   ??i2_toupper 0009                               ??_PIN_MANAGER_IOC 005B  
                                     _vfpfcnvrt 00A2                                       _xtoa$1861 0113  
                                     _xtoa$1862 0115                                        _SPI_Open 5BF4  
                             ??_TMR1_Initialize 008F                                      _ADCON0bits 000FC2  
                             ___wmul@multiplier 008F                                __CFG_SOSCSEL$DIG 000000  
                                      i2___wmul 682E                         __end_of_lcd_draw_string 5094  
                             i2_TMR0_WriteTimer 69C2                           DATAEE_WriteByte@bData 0091  
                                      i2_printf 6808                                        i2pad@buf 0015  
                                  _isspace$2465 0095                                        i2ctoa@fp 001E  
                                     msDelay@ms 0090                                        i2dtoa@fp 001E  
                                      i2_strlen 667A                                      vfpfcnvrt@c 0143  
                            ?i2_TMR0_WriteTimer 0001                               ___lmul@multiplier 008F  
                                   _INTCON2bits 000FF1                                       copy_data0 5DB0  
                                     copy_data1 5DD0                                        i2fputc@c 0003  
                         ?_INTERRUPT_Initialize 0001                                        i2fputs@c 0010  
                                      i2fputs@i 0011                                        i2fputs@s 000C  
                             ?_DATAEE_WriteByte 008F                                       _vsnprintf 5094  
                                      i2otoa@fp 001E                                        i2stoa@cp 001C  
                                      i2stoa@fp 000C                                __size_ofi2_fputc 00CA  
                              __size_ofi2_fputs 0044                              ??_DATAEE_WriteByte 0092  
                                _turn_off_value 01C7                                        i2utoa@fp 001E  
                              __size_ofi2_putch 000A                             ??i2_TMR0_WriteTimer 0003  
                                    _EECON1bits 000F7F                                        i2xtoa@fp 001E  
                           lcd_draw_pixel@color 0092                                        __Hrparam 0000  
                                    vfprintf@ap 0150                                        __Lrparam 0000  
                                    vfprintf@fp 014C                               _ADC_GetConversion 63B8  
                            __CFG_BOREN$SBORDIS 000000                         __size_of_SPI_Initialize 0012  
                       ??_OSCILLATOR_Initialize 008F                          __size_of_lcd_draw_char 0182  
                            ?_ADC_GetConversion 008F                               ??_TMR0_StartTimer 0001  
                              __size_of___aldiv 010E                                __size_of___aodiv 018A  
                              __size_of___aomod 0166                                     vsnprintf@ap 015A  
                         i2___wmul@multiplicand 0003                                __size_of___lodiv 00F2  
                   __size_of_EUSART1_Initialize 0046                                __size_of___lomod 00D2  
                                    ?_vfpfcnvrt 0127                                      snprintf@ap 0176  
                               ___aodiv@divisor 0097                                        _adc_perc 00B1  
                               ___aodiv@counter 009F                          _IOCB4_InterruptHandler 00C8  
                                _lcd_draw_pixel 68E2                       __end_ofi2_TMR0_WriteTimer 69CC  
                     ??_EUSART1_SetErrorHandler 0091                     _EUSART1_DefaultErrorHandler 000000  
                           ??_ADC_GetConversion 0091                                __size_of_msDelay 0038  
                   __end_of_EUSART1_is_rx_ready 6952                                __size_of_isalpha 003E  
                              __size_of_isdigit 003A                     __end_of_EUSART1_is_tx_ready 6764  
              fp__IOCB4_DefaultInterruptHandler 0000                  ?_IOCB4_DefaultInterruptHandler 0001  
                              __size_of_islower 003A                                __size_of_isspace 0054  
                                      __ptext10 00A2                                        __ptext11 3024  
                                      __ptext20 44EC                                        __ptext12 5ECA  
                                      __ptext21 40FE                                        __ptext13 64B2  
                                    _T1GCONbits 000FAA                                        __ptext30 580C  
                                      __ptext22 2D1E                                        __ptext14 64EC  
                                      __ptext31 6976                                        __ptext23 6334  
                                      __ptext15 6438                                        __ptext40 4F5C  
                                      __ptext32 68CA                                        __ptext24 4C92  
                                      __ptext16 38D0                                        __ptext41 4B10  
                                      __ptext33 3AE8                                        __ptext25 4678  
                                      __ptext17 566A                                        __ptext50 6854  
                                      __ptext42 6376                                        __ptext34 6042  
                                      __ptext26 5F2A                                        __ptext18 52B2  
                                      __ptext51 670E                                        __ptext43 6138  
                                      __ptext35 6560                                        __ptext27 58D8  
                                      __ptext19 5494                                        __ptext60 69A4  
                                      __ptext52 678E                                        __ptext44 6186  
                                      __ptext36 67E0                                        __ptext28 6526  
                                      __ptext61 69AE                                        __ptext53 6952  
                                      __ptext45 68E2                                        __ptext37 25D8  
                                      __ptext29 61D4                                        __ptext70 60E8  
                                      __ptext62 6912                                        __ptext54 6264  
                                      __ptext46 6876                                        __ptext38 659A  
                                      __ptext71 69E4                                        __ptext63 5BF4  
                                      __ptext55 6990                                        __ptext47 6894  
                                      __ptext39 5CA8                                        __ptext80 3CF8  
                                      __ptext72 6808                                        __ptext64 621C  
                                      __ptext56 6964                                        __ptext48 5D30  
                                      __ptext81 573C                                        __ptext73 5E66  
                                      __ptext65 68B0                                        __ptext57 69D8  
                                      __ptext49 51A4                                        __ptext90 5FE6  
                                      __ptext82 53A4                                        __ptext74 1360  
                                      __ptext66 63B8                                        __ptext58 62AA  
                                      __ptext91 5A6C                                        __ptext83 5580  
                                      __ptext75 35F6                                        __ptext59 699A  
                                      __ptext92 667A                                        __ptext84 498A  
                                      __ptext76 5F88                                        __ptext68 68FA  
                                      __ptext93 62F0                                        __ptext85 42FC  
                                      __ptext77 65D2                                        __ptext69 66E0  
                                      __ptext94 59A2                                        __ptext86 3312  
                                      __ptext78 660A                                        __ptext95 69B8  
                                      __ptext87 63F8                                        __ptext79 6476  
                                      __ptext96 6928                                        __ptext88 4DF8  
                                      __ptext97 3EFC                                        __ptext89 4802  
                                      __ptext98 6096                                        __ptext99 6642  
                              __size_of_isupper 003A                                        _lcd_fill 5CA8  
                                      _lcd_init 25D8                                        _lcd_send 6876  
                       TMR0_WriteTimer@timerVal 008F                     DATAEE_WriteByte@GIEBitValue 0092  
                             ??_TMR0_WriteTimer 0091                                __size_of_strncmp 00EC  
                              __size_of_toupper 0060                                      ?_vsnprintf 0154  
                                 __size_of_atoi 0210                                   __size_of_ctoa 005E  
                                 __size_of_main 0310                                   __size_of_dtoa 0306  
                                 __size_of_otoa 01FE                                   __size_of_stoa 018C  
                                 __size_of_utoa 0218                                   __size_of_xtoa 02EE  
                         _INTERRUPT_S1_CALLBACK 60E8                           read_from_usart@length 00A5  
                             ??_DATAEE_ReadByte 0091                       __end_of_ADC_GetConversion 63F8  
                                     stoa@F1152 00CA  EUSART1_SetOverrunErrorHandler@interruptHandler 008F  
                         lcd_draw_char@bg_color 00A0                                        int$flags 005F  
                                      _vfprintf 5E02                           lcd_draw_char@fg_color 009E  
            __end_of_INTERRUPT_InterruptManager 009E                      _INTERRUPT_InterruptManager 0008  
                        __end_of_lcd_draw_pixel 68FA                                        _snprintf 66B0  
                                     printf@fmt 0154                        __end_of_lcd_set_cursor_x 61D4  
                      __end_of_lcd_set_cursor_y 6186                     _EUSART1_FramingErrorHandler 00C4  
                           __CFG_INTOSCSEL$HIGH 000000                                        msDelay@k 0091  
                              ___aomod@dividend 008F                                  _vfpfcnvrt$1876 0135  
                                _vfpfcnvrt$1877 0137                                      _INTCONbits 000FF2  
                              ?_lcd_draw_string 0100                                        isalpha@c 008F  
                                      isdigit@c 008F                          ??_INTERRUPT_Initialize 008F  
                                    vsnprintf@f 0164                                      vsnprintf@n 0156  
                                    vsnprintf@s 0154                                   _lcd_draw_char 4B10  
                                     snprintf@n 016C                                       snprintf@s 016A  
                                      intlevel2 0000                                  _lcd_set_cursor 6376  
                              ??_TMR0_StopTimer 0001                               lcd_set_cursor_x@x 0092  
                             lcd_set_cursor_y@y 0092                                        islower@c 008F  
                                      isspace@c 008F                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 69A4         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 699A                                      _RCSTA1bits 000FAB  
                                      isupper@c 008F                                       strncmp@_l 008F  
                                     strncmp@_r 0091                                ??_ADC_Initialize 008F  
                          read_from_usart@value 010A                                _SPI_ExchangeByte 6894  
                       lcd_draw_string@bg_color 0108                                        printf@ap 015C  
                            __CFG_WDTPS$1048576 000000  EUSART1_SetFramingErrorHandler@interruptHandler 008F  
                               ___aomod@divisor 0097                         lcd_draw_string@fg_color 0106  
                                 ??i2_vfpfcnvrt 004B                                 ?_lcd_draw_pixel 0092  
                                   ??_vfpfcnvrt 012D                                        stoa@nuls 009F  
                               ___aomod@counter 009F                          __size_of_EUSART1_Write 0018  
                            _eusart1RxLastError 00BF                      __size_ofi2_TMR0_WriteTimer 000A  
                                _vsnprintf$2583 0160                                 _TMR0_Initialize 678E  
                                      strncmp@l 0096                                        strncmp@n 0093  
                                      strncmp@r 0098                                        toupper@c 0095  
                                  ___aldiv@sign 00A4                                     _SSPCON1bits 000FC6  
                        __end_of_lcd_set_cursor 63B8                                  ?_lcd_draw_char 0098  
                                i2_isspace$2465 0007                                    ___aodiv@sign 00A0  
                __end_of_PIN_MANAGER_Initialize 62AA                                     ??_vsnprintf 015C  
                            i2___aodiv@dividend 0001                             __CFG_BORPWR$ZPBORMV 000000  
                      __size_of_read_from_usart 00C2                          ?_INTERRUPT_S1_CALLBACK 0001  
                               _PIN_MANAGER_IOC 68FA                      __size_of_ADC_GetConversion 0040  
                                  ___aomod@sign 00A0                                 _TMR1_Initialize 670E  
