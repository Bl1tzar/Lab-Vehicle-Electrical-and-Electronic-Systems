

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Dec 08 15:34:31 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	text100,global,reloc=2,class=CODE,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1
   122                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   123                           	psect	text103,global,reloc=2,class=CODE,delta=1
   124                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   125                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   126  0000                     
   127                           ; Version 2.10
   128                           ; Generated 31/07/2019 GMT
   129                           ; 
   130                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   131                           ; All rights reserved.
   132                           ; 
   133                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   134                           ; 
   135                           ; Redistribution and use in source and binary forms, with or without modification, are
   136                           ; permitted provided that the following conditions are met:
   137                           ; 
   138                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   139                           ;        conditions and the following disclaimer.
   140                           ; 
   141                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   142                           ;        of conditions and the following disclaimer in the documentation and/or other
   143                           ;        materials provided with the distribution.
   144                           ; 
   145                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   146                           ;        software without specific prior written permission.
   147                           ; 
   148                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   149                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   150                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   151                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   152                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   153                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   154                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   155                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   156                           ; 
   157                           ; 
   158                           ; Code-generator required, PIC18F46K80 Definitions
   159                           ; 
   160                           ; SFR Addresses
   161  0000                     
   162 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   163  0000                     
   164 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   165  0000                     
   166 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   167  0000                     
   168                           	psect	idataBANK0
   169  0068DA                     __pidataBANK0:
   170                           	opt callstack 0
   171                           
   172                           ;initializer for stoa@F1152
   173  0068DA  28                 	db	40
   174  0068DB  6E                 	db	110
   175  0068DC  75                 	db	117
   176  0068DD  6C                 	db	108
   177  0068DE  6C                 	db	108
   178  0068DF  29                 	db	41
   179  0068E0  00                 	db	0
   180                           
   181                           	psect	idataBANK1
   182  0068E1                     __pidataBANK1:
   183                           	opt callstack 0
   184                           
   185                           ;initializer for _turn_off_value
   186  0068E1  0050               	dw	80
   187                           
   188                           ;initializer for _turn_on_value
   189  0068E3  005A               	dw	90
   190                           
   191                           	psect	mediumconst
   192  00F134                     __pmediumconst:
   193                           	opt callstack 0
   194  00F134  00                 	db	0
   195  00F135                     _font:
   196                           	opt callstack 0
   197  00F135  0004               	dw	4
   198  00F137  0000               	dw	0
   199  00F139  0000               	dw	0
   200  00F13B  0000               	dw	0
   201  00F13D  0000               	dw	0
   202  00F13F  0000               	dw	0
   203  00F141  0000               	dw	0
   204  00F143  0000               	dw	0
   205  00F145  0000               	dw	0
   206  00F147  0003               	dw	3
   207  00F149  0000               	dw	0
   208  00F14B  0000               	dw	0
   209  00F14D  00FE               	dw	254
   210  00F14F  001B               	dw	27
   211  00F151  0000               	dw	0
   212  00F153  0000               	dw	0
   213  00F155  0005               	dw	5
   214  00F157  001E               	dw	30
   215  00F159  0000               	dw	0
   216  00F15B  0000               	dw	0
   217  00F15D  0000               	dw	0
   218  00F15F  0000               	dw	0
   219  00F161  0000               	dw	0
   220  00F163  001E               	dw	30
   221  00F165  0000               	dw	0
   222  00F167  0000               	dw	0
   223  00F169  0000               	dw	0
   224  00F16B  000B               	dw	11
   225  00F16D  0000               	dw	0
   226  00F16F  0000               	dw	0
   227  00F171  0010               	dw	16
   228  00F173  0001               	dw	1
   229  00F175  0010               	dw	16
   230  00F177  001D               	dw	29
   231  00F179  00F0               	dw	240
   232  00F17B  0003               	dw	3
   233  00F17D  001E               	dw	30
   234  00F17F  0001               	dw	1
   235  00F181  0010               	dw	16
   236  00F183  0001               	dw	1
   237  00F185  0010               	dw	16
   238  00F187  001D               	dw	29
   239  00F189  00F0               	dw	240
   240  00F18B  0003               	dw	3
   241  00F18D  001E               	dw	30
   242  00F18F  0001               	dw	1
   243  00F191  0010               	dw	16
   244  00F193  0001               	dw	1
   245  00F195  0000               	dw	0
   246  00F197  0000               	dw	0
   247  00F199  0009               	dw	9
   248  00F19B  0000               	dw	0
   249  00F19D  0004               	dw	4
   250  00F19F  001C               	dw	28
   251  00F1A1  0008               	dw	8
   252  00F1A3  0022               	dw	34
   253  00F1A5  0010               	dw	16
   254  00F1A7  0042               	dw	66
   255  00F1A9  0010               	dw	16
   256  00F1AB  00FF               	dw	255
   257  00F1AD  007F               	dw	127
   258  00F1AF  0042               	dw	66
   259  00F1B1  0010               	dw	16
   260  00F1B3  0084               	dw	132
   261  00F1B5  0010               	dw	16
   262  00F1B7  0000               	dw	0
   263  00F1B9  000F               	dw	15
   264  00F1BB  0000               	dw	0
   265  00F1BD  0000               	dw	0
   266  00F1BF  000C               	dw	12
   267  00F1C1  001C               	dw	28
   268  00F1C3  0000               	dw	0
   269  00F1C5  0022               	dw	34
   270  00F1C7  0010               	dw	16
   271  00F1C9  0022               	dw	34
   272  00F1CB  0008               	dw	8
   273  00F1CD  0022               	dw	34
   274  00F1CF  0006               	dw	6
   275  00F1D1  001C               	dw	28
   276  00F1D3  0001               	dw	1
   277  00F1D5  00C0               	dw	192
   278  00F1D7  0000               	dw	0
   279  00F1D9  0020               	dw	32
   280  00F1DB  000E               	dw	14
   281  00F1DD  0018               	dw	24
   282  00F1DF  0011               	dw	17
   283  00F1E1  0004               	dw	4
   284  00F1E3  0011               	dw	17
   285  00F1E5  0002               	dw	2
   286  00F1E7  0011               	dw	17
   287  00F1E9  0000               	dw	0
   288  00F1EB  000E               	dw	14
   289  00F1ED  0000               	dw	0
   290  00F1EF  0000               	dw	0
   291  00F1F1  000B               	dw	11
   292  00F1F3  0000               	dw	0
   293  00F1F5  0000               	dw	0
   294  00F1F7  0000               	dw	0
   295  00F1F9  000E               	dw	14
   296  00F1FB  001C               	dw	28
   297  00F1FD  0011               	dw	17
   298  00F1FF  00A2               	dw	162
   299  00F201  0010               	dw	16
   300  00F203  00C2               	dw	194
   301  00F205  0010               	dw	16
   302  00F207  0022               	dw	34
   303  00F209  0011               	dw	17
   304  00F20B  001C               	dw	28
   305  00F20D  000A               	dw	10
   306  00F20F  0000               	dw	0
   307  00F211  000C               	dw	12
   308  00F213  0000               	dw	0
   309  00F215  000C               	dw	12
   310  00F217  0000               	dw	0
   311  00F219  0012               	dw	18
   312  00F21B  0000               	dw	0
   313  00F21D  0000               	dw	0
   314  00F21F  0003               	dw	3
   315  00F221  0000               	dw	0
   316  00F223  0000               	dw	0
   317  00F225  001E               	dw	30
   318  00F227  0000               	dw	0
   319  00F229  0000               	dw	0
   320  00F22B  0000               	dw	0
   321  00F22D  0006               	dw	6
   322  00F22F  0000               	dw	0
   323  00F231  0000               	dw	0
   324  00F233  0000               	dw	0
   325  00F235  0000               	dw	0
   326  00F237  00E0               	dw	224
   327  00F239  001F               	dw	31
   328  00F23B  001C               	dw	28
   329  00F23D  0060               	dw	96
   330  00F23F  0002               	dw	2
   331  00F241  0080               	dw	128
   332  00F243  0000               	dw	0
   333  00F245  0000               	dw	0
   334  00F247  0004               	dw	4
   335  00F249  0000               	dw	0
   336  00F24B  0000               	dw	0
   337  00F24D  0006               	dw	6
   338  00F24F  00C0               	dw	192
   339  00F251  00F8               	dw	248
   340  00F253  003F               	dw	63
   341  00F255  0000               	dw	0
   342  00F257  0000               	dw	0
   343  00F259  0006               	dw	6
   344  00F25B  0024               	dw	36
   345  00F25D  0000               	dw	0
   346  00F25F  0018               	dw	24
   347  00F261  0000               	dw	0
   348  00F263  007E               	dw	126
   349  00F265  0000               	dw	0
   350  00F267  0018               	dw	24
   351  00F269  0000               	dw	0
   352  00F26B  0024               	dw	36
   353  00F26D  0000               	dw	0
   354  00F26F  0000               	dw	0
   355  00F271  0000               	dw	0
   356  00F273  0009               	dw	9
   357  00F275  0000               	dw	0
   358  00F277  0000               	dw	0
   359  00F279  0080               	dw	128
   360  00F27B  0000               	dw	0
   361  00F27D  0080               	dw	128
   362  00F27F  0000               	dw	0
   363  00F281  0080               	dw	128
   364  00F283  0000               	dw	0
   365  00F285  00F0               	dw	240
   366  00F287  0007               	dw	7
   367  00F289  0080               	dw	128
   368  00F28B  0000               	dw	0
   369  00F28D  0080               	dw	128
   370  00F28F  0000               	dw	0
   371  00F291  0080               	dw	128
   372  00F293  0000               	dw	0
   373  00F295  0000               	dw	0
   374  00F297  0000               	dw	0
   375  00F299  0004               	dw	4
   376  00F29B  0000               	dw	0
   377  00F29D  0000               	dw	0
   378  00F29F  0000               	dw	0
   379  00F2A1  0060               	dw	96
   380  00F2A3  0000               	dw	0
   381  00F2A5  0018               	dw	24
   382  00F2A7  0000               	dw	0
   383  00F2A9  0000               	dw	0
   384  00F2AB  0005               	dw	5
   385  00F2AD  0000               	dw	0
   386  00F2AF  0001               	dw	1
   387  00F2B1  0000               	dw	0
   388  00F2B3  0001               	dw	1
   389  00F2B5  0000               	dw	0
   390  00F2B7  0001               	dw	1
   391  00F2B9  0000               	dw	0
   392  00F2BB  0001               	dw	1
   393  00F2BD  0000               	dw	0
   394  00F2BF  0000               	dw	0
   395  00F2C1  0004               	dw	4
   396  00F2C3  0000               	dw	0
   397  00F2C5  0000               	dw	0
   398  00F2C7  0000               	dw	0
   399  00F2C9  0018               	dw	24
   400  00F2CB  0000               	dw	0
   401  00F2CD  0018               	dw	24
   402  00F2CF  0000               	dw	0
   403  00F2D1  0000               	dw	0
   404  00F2D3  0008               	dw	8
   405  00F2D5  0000               	dw	0
   406  00F2D7  0000               	dw	0
   407  00F2D9  0000               	dw	0
   408  00F2DB  0040               	dw	64
   409  00F2DD  0000               	dw	0
   410  00F2DF  0038               	dw	56
   411  00F2E1  0000               	dw	0
   412  00F2E3  0007               	dw	7
   413  00F2E5  00E0               	dw	224
   414  00F2E7  0000               	dw	0
   415  00F2E9  001C               	dw	28
   416  00F2EB  0000               	dw	0
   417  00F2ED  0002               	dw	2
   418  00F2EF  0000               	dw	0
   419  00F2F1  0000               	dw	0
   420  00F2F3  0000               	dw	0
   421  00F2F5  0009               	dw	9
   422  00F2F7  00F8               	dw	248
   423  00F2F9  0007               	dw	7
   424  00F2FB  0004               	dw	4
   425  00F2FD  0008               	dw	8
   426  00F2FF  0002               	dw	2
   427  00F301  0010               	dw	16
   428  00F303  0002               	dw	2
   429  00F305  0010               	dw	16
   430  00F307  0002               	dw	2
   431  00F309  0010               	dw	16
   432  00F30B  0002               	dw	2
   433  00F30D  0010               	dw	16
   434  00F30F  0004               	dw	4
   435  00F311  0008               	dw	8
   436  00F313  00F8               	dw	248
   437  00F315  0007               	dw	7
   438  00F317  0000               	dw	0
   439  00F319  0000               	dw	0
   440  00F31B  0006               	dw	6
   441  00F31D  0000               	dw	0
   442  00F31F  0000               	dw	0
   443  00F321  0000               	dw	0
   444  00F323  0000               	dw	0
   445  00F325  0002               	dw	2
   446  00F327  0000               	dw	0
   447  00F329  0002               	dw	2
   448  00F32B  0000               	dw	0
   449  00F32D  00FE               	dw	254
   450  00F32F  001F               	dw	31
   451  00F331  0000               	dw	0
   452  00F333  0000               	dw	0
   453  00F335  0009               	dw	9
   454  00F337  0018               	dw	24
   455  00F339  0010               	dw	16
   456  00F33B  0004               	dw	4
   457  00F33D  0018               	dw	24
   458  00F33F  0002               	dw	2
   459  00F341  0014               	dw	20
   460  00F343  0002               	dw	2
   461  00F345  0012               	dw	18
   462  00F347  0002               	dw	2
   463  00F349  0011               	dw	17
   464  00F34B  0082               	dw	130
   465  00F34D  0010               	dw	16
   466  00F34F  0044               	dw	68
   467  00F351  0010               	dw	16
   468  00F353  0038               	dw	56
   469  00F355  0010               	dw	16
   470  00F357  0000               	dw	0
   471  00F359  0000               	dw	0
   472  00F35B  0009               	dw	9
   473  00F35D  0008               	dw	8
   474  00F35F  000C               	dw	12
   475  00F361  0004               	dw	4
   476  00F363  0010               	dw	16
   477  00F365  0002               	dw	2
   478  00F367  0010               	dw	16
   479  00F369  0042               	dw	66
   480  00F36B  0010               	dw	16
   481  00F36D  0042               	dw	66
   482  00F36F  0010               	dw	16
   483  00F371  0044               	dw	68
   484  00F373  0010               	dw	16
   485  00F375  00B8               	dw	184
   486  00F377  0008               	dw	8
   487  00F379  0000               	dw	0
   488  00F37B  0007               	dw	7
   489  00F37D  0000               	dw	0
   490  00F37F  0000               	dw	0
   491  00F381  0009               	dw	9
   492  00F383  0000               	dw	0
   493  00F385  0002               	dw	2
   494  00F387  0000               	dw	0
   495  00F389  0003               	dw	3
   496  00F38B  0080               	dw	128
   497  00F38D  0002               	dw	2
   498  00F38F  0060               	dw	96
   499  00F391  0002               	dw	2
   500  00F393  0010               	dw	16
   501  00F395  0002               	dw	2
   502  00F397  0008               	dw	8
   503  00F399  0002               	dw	2
   504  00F39B  00FE               	dw	254
   505  00F39D  001F               	dw	31
   506  00F39F  0000               	dw	0
   507  00F3A1  0002               	dw	2
   508  00F3A3  0000               	dw	0
   509  00F3A5  0000               	dw	0
   510  00F3A7  0009               	dw	9
   511  00F3A9  0000               	dw	0
   512  00F3AB  0004               	dw	4
   513  00F3AD  0070               	dw	112
   514  00F3AF  0008               	dw	8
   515  00F3B1  002E               	dw	46
   516  00F3B3  0010               	dw	16
   517  00F3B5  0022               	dw	34
   518  00F3B7  0010               	dw	16
   519  00F3B9  0022               	dw	34
   520  00F3BB  0010               	dw	16
   521  00F3BD  0022               	dw	34
   522  00F3BF  0010               	dw	16
   523  00F3C1  0042               	dw	66
   524  00F3C3  0008               	dw	8
   525  00F3C5  0082               	dw	130
   526  00F3C7  0007               	dw	7
   527  00F3C9  0000               	dw	0
   528  00F3CB  0000               	dw	0
   529  00F3CD  0009               	dw	9
   530  00F3CF  0000               	dw	0
   531  00F3D1  0000               	dw	0
   532  00F3D3  0000               	dw	0
   533  00F3D5  0007               	dw	7
   534  00F3D7  00C0               	dw	192
   535  00F3D9  0008               	dw	8
   536  00F3DB  0060               	dw	96
   537  00F3DD  0010               	dw	16
   538  00F3DF  0058               	dw	88
   539  00F3E1  0010               	dw	16
   540  00F3E3  0044               	dw	68
   541  00F3E5  0010               	dw	16
   542  00F3E7  0082               	dw	130
   543  00F3E9  0008               	dw	8
   544  00F3EB  0000               	dw	0
   545  00F3ED  0007               	dw	7
   546  00F3EF  0000               	dw	0
   547  00F3F1  0000               	dw	0
   548  00F3F3  0009               	dw	9
   549  00F3F5  0000               	dw	0
   550  00F3F7  0000               	dw	0
   551  00F3F9  0002               	dw	2
   552  00F3FB  0010               	dw	16
   553  00F3FD  0002               	dw	2
   554  00F3FF  000C               	dw	12
   555  00F401  0002               	dw	2
   556  00F403  0003               	dw	3
   557  00F405  00C2               	dw	194
   558  00F407  0000               	dw	0
   559  00F409  0032               	dw	50
   560  00F40B  0000               	dw	0
   561  00F40D  000E               	dw	14
   562  00F40F  0000               	dw	0
   563  00F411  0002               	dw	2
   564  00F413  0000               	dw	0
   565  00F415  0000               	dw	0
   566  00F417  0000               	dw	0
   567  00F419  0009               	dw	9
   568  00F41B  0000               	dw	0
   569  00F41D  0007               	dw	7
   570  00F41F  0098               	dw	152
   571  00F421  0008               	dw	8
   572  00F423  0064               	dw	100
   573  00F425  0010               	dw	16
   574  00F427  0042               	dw	66
   575  00F429  0010               	dw	16
   576  00F42B  0042               	dw	66
   577  00F42D  0010               	dw	16
   578  00F42F  0064               	dw	100
   579  00F431  0010               	dw	16
   580  00F433  0098               	dw	152
   581  00F435  0008               	dw	8
   582  00F437  0000               	dw	0
   583  00F439  0007               	dw	7
   584  00F43B  0000               	dw	0
   585  00F43D  0000               	dw	0
   586  00F43F  0009               	dw	9
   587  00F441  0000               	dw	0
   588  00F443  0000               	dw	0
   589  00F445  0038               	dw	56
   590  00F447  0000               	dw	0
   591  00F449  0044               	dw	68
   592  00F44B  0010               	dw	16
   593  00F44D  0082               	dw	130
   594  00F44F  0008               	dw	8
   595  00F451  0082               	dw	130
   596  00F453  0004               	dw	4
   597  00F455  0082               	dw	130
   598  00F457  0003               	dw	3
   599  00F459  0084               	dw	132
   600  00F45B  0000               	dw	0
   601  00F45D  0078               	dw	120
   602  00F45F  0000               	dw	0
   603  00F461  0000               	dw	0
   604  00F463  0000               	dw	0
   605  00F465  0004               	dw	4
   606  00F467  0000               	dw	0
   607  00F469  0000               	dw	0
   608  00F46B  0030               	dw	48
   609  00F46D  0018               	dw	24
   610  00F46F  0030               	dw	48
   611  00F471  0018               	dw	24
   612  00F473  0000               	dw	0
   613  00F475  0000               	dw	0
   614  00F477  0004               	dw	4
   615  00F479  0000               	dw	0
   616  00F47B  0000               	dw	0
   617  00F47D  0030               	dw	48
   618  00F47F  0060               	dw	96
   619  00F481  0030               	dw	48
   620  00F483  0018               	dw	24
   621  00F485  0000               	dw	0
   622  00F487  0000               	dw	0
   623  00F489  000A               	dw	10
   624  00F48B  0000               	dw	0
   625  00F48D  0000               	dw	0
   626  00F48F  0080               	dw	128
   627  00F491  0000               	dw	0
   628  00F493  0080               	dw	128
   629  00F495  0000               	dw	0
   630  00F497  0040               	dw	64
   631  00F499  0001               	dw	1
   632  00F49B  0020               	dw	32
   633  00F49D  0002               	dw	2
   634  00F49F  0020               	dw	32
   635  00F4A1  0002               	dw	2
   636  00F4A3  0010               	dw	16
   637  00F4A5  0004               	dw	4
   638  00F4A7  0010               	dw	16
   639  00F4A9  0004               	dw	4
   640  00F4AB  0008               	dw	8
   641  00F4AD  0008               	dw	8
   642  00F4AF  0000               	dw	0
   643  00F4B1  0000               	dw	0
   644  00F4B3  000A               	dw	10
   645  00F4B5  0000               	dw	0
   646  00F4B7  0000               	dw	0
   647  00F4B9  0020               	dw	32
   648  00F4BB  0001               	dw	1
   649  00F4BD  0020               	dw	32
   650  00F4BF  0001               	dw	1
   651  00F4C1  0020               	dw	32
   652  00F4C3  0001               	dw	1
   653  00F4C5  0020               	dw	32
   654  00F4C7  0001               	dw	1
   655  00F4C9  0020               	dw	32
   656  00F4CB  0001               	dw	1
   657  00F4CD  0020               	dw	32
   658  00F4CF  0001               	dw	1
   659  00F4D1  0020               	dw	32
   660  00F4D3  0001               	dw	1
   661  00F4D5  0020               	dw	32
   662  00F4D7  0001               	dw	1
   663  00F4D9  0000               	dw	0
   664  00F4DB  0000               	dw	0
   665  00F4DD  000A               	dw	10
   666  00F4DF  0000               	dw	0
   667  00F4E1  0000               	dw	0
   668  00F4E3  0008               	dw	8
   669  00F4E5  0008               	dw	8
   670  00F4E7  0010               	dw	16
   671  00F4E9  0004               	dw	4
   672  00F4EB  0010               	dw	16
   673  00F4ED  0004               	dw	4
   674  00F4EF  0020               	dw	32
   675  00F4F1  0002               	dw	2
   676  00F4F3  0020               	dw	32
   677  00F4F5  0002               	dw	2
   678  00F4F7  0040               	dw	64
   679  00F4F9  0001               	dw	1
   680  00F4FB  0080               	dw	128
   681  00F4FD  0000               	dw	0
   682  00F4FF  0080               	dw	128
   683  00F501  0000               	dw	0
   684  00F503  0000               	dw	0
   685  00F505  0000               	dw	0
   686  00F507  0008               	dw	8
   687  00F509  0000               	dw	0
   688  00F50B  0000               	dw	0
   689  00F50D  000C               	dw	12
   690  00F50F  0000               	dw	0
   691  00F511  0082               	dw	130
   692  00F513  0001               	dw	1
   693  00F515  0042               	dw	66
   694  00F517  0002               	dw	2
   695  00F519  0022               	dw	34
   696  00F51B  001A               	dw	26
   697  00F51D  0022               	dw	34
   698  00F51F  001A               	dw	26
   699  00F521  009C               	dw	156
   700  00F523  0001               	dw	1
   701  00F525  0000               	dw	0
   702  00F527  0000               	dw	0
   703  00F529  000E               	dw	14
   704  00F52B  0000               	dw	0
   705  00F52D  0000               	dw	0
   706  00F52F  00F0               	dw	240
   707  00F531  0003               	dw	3
   708  00F533  0008               	dw	8
   709  00F535  0004               	dw	4
   710  00F537  0004               	dw	4
   711  00F539  0008               	dw	8
   712  00F53B  00C2               	dw	194
   713  00F53D  0011               	dw	17
   714  00F53F  0022               	dw	34
   715  00F541  0012               	dw	18
   716  00F543  0012               	dw	18
   717  00F545  0012               	dw	18
   718  00F547  0012               	dw	18
   719  00F549  0012               	dw	18
   720  00F54B  00E2               	dw	226
   721  00F54D  0011               	dw	17
   722  00F54F  0012               	dw	18
   723  00F551  0012               	dw	18
   724  00F553  0004               	dw	4
   725  00F555  0012               	dw	18
   726  00F557  0008               	dw	8
   727  00F559  0009               	dw	9
   728  00F55B  00F0               	dw	240
   729  00F55D  0004               	dw	4
   730  00F55F  0000               	dw	0
   731  00F561  0000               	dw	0
   732  00F563  000D               	dw	13
   733  00F565  0000               	dw	0
   734  00F567  0000               	dw	0
   735  00F569  0000               	dw	0
   736  00F56B  0010               	dw	16
   737  00F56D  0000               	dw	0
   738  00F56F  000E               	dw	14
   739  00F571  0080               	dw	128
   740  00F573  0001               	dw	1
   741  00F575  0060               	dw	96
   742  00F577  0001               	dw	1
   743  00F579  001C               	dw	28
   744  00F57B  0001               	dw	1
   745  00F57D  0002               	dw	2
   746  00F57F  0001               	dw	1
   747  00F581  001C               	dw	28
   748  00F583  0001               	dw	1
   749  00F585  0060               	dw	96
   750  00F587  0001               	dw	1
   751  00F589  0080               	dw	128
   752  00F58B  0001               	dw	1
   753  00F58D  0000               	dw	0
   754  00F58F  000E               	dw	14
   755  00F591  0000               	dw	0
   756  00F593  0010               	dw	16
   757  00F595  0000               	dw	0
   758  00F597  0000               	dw	0
   759  00F599  0009               	dw	9
   760  00F59B  0000               	dw	0
   761  00F59D  0000               	dw	0
   762  00F59F  0000               	dw	0
   763  00F5A1  0000               	dw	0
   764  00F5A3  00FE               	dw	254
   765  00F5A5  001F               	dw	31
   766  00F5A7  0042               	dw	66
   767  00F5A9  0010               	dw	16
   768  00F5AB  0042               	dw	66
   769  00F5AD  0010               	dw	16
   770  00F5AF  0064               	dw	100
   771  00F5B1  0010               	dw	16
   772  00F5B3  0098               	dw	152
   773  00F5B5  0008               	dw	8
   774  00F5B7  0000               	dw	0
   775  00F5B9  0007               	dw	7
   776  00F5BB  0000               	dw	0
   777  00F5BD  0000               	dw	0
   778  00F5BF  000D               	dw	13
   779  00F5C1  0000               	dw	0
   780  00F5C3  0000               	dw	0
   781  00F5C5  00F0               	dw	240
   782  00F5C7  0003               	dw	3
   783  00F5C9  0008               	dw	8
   784  00F5CB  0004               	dw	4
   785  00F5CD  0004               	dw	4
   786  00F5CF  0008               	dw	8
   787  00F5D1  0002               	dw	2
   788  00F5D3  0010               	dw	16
   789  00F5D5  0002               	dw	2
   790  00F5D7  0010               	dw	16
   791  00F5D9  0002               	dw	2
   792  00F5DB  0010               	dw	16
   793  00F5DD  0002               	dw	2
   794  00F5DF  0010               	dw	16
   795  00F5E1  0002               	dw	2
   796  00F5E3  0010               	dw	16
   797  00F5E5  0004               	dw	4
   798  00F5E7  0008               	dw	8
   799  00F5E9  0004               	dw	4
   800  00F5EB  0008               	dw	8
   801  00F5ED  0008               	dw	8
   802  00F5EF  0004               	dw	4
   803  00F5F1  0000               	dw	0
   804  00F5F3  0000               	dw	0
   805  00F5F5  000C               	dw	12
   806  00F5F7  0000               	dw	0
   807  00F5F9  0000               	dw	0
   808  00F5FB  0000               	dw	0
   809  00F5FD  0000               	dw	0
   810  00F5FF  00FE               	dw	254
   811  00F601  001F               	dw	31
   812  00F603  0002               	dw	2
   813  00F605  0010               	dw	16
   814  00F607  0002               	dw	2
   815  00F609  0010               	dw	16
   816  00F60B  0002               	dw	2
   817  00F60D  0010               	dw	16
   818  00F60F  0002               	dw	2
   819  00F611  0010               	dw	16
   820  00F613  0002               	dw	2
   821  00F615  0010               	dw	16
   822  00F617  0004               	dw	4
   823  00F619  0008               	dw	8
   824  00F61B  0008               	dw	8
   825  00F61D  0004               	dw	4
   826  00F61F  00F0               	dw	240
   827  00F621  0003               	dw	3
   828  00F623  0000               	dw	0
   829  00F625  0000               	dw	0
   830  00F627  0009               	dw	9
   831  00F629  0000               	dw	0
   832  00F62B  0000               	dw	0
   833  00F62D  0000               	dw	0
   834  00F62F  0000               	dw	0
   835  00F631  00FE               	dw	254
   836  00F633  001F               	dw	31
   837  00F635  0042               	dw	66
   838  00F637  0010               	dw	16
   839  00F639  0042               	dw	66
   840  00F63B  0010               	dw	16
   841  00F63D  0042               	dw	66
   842  00F63F  0010               	dw	16
   843  00F641  0042               	dw	66
   844  00F643  0010               	dw	16
   845  00F645  0042               	dw	66
   846  00F647  0010               	dw	16
   847  00F649  0000               	dw	0
   848  00F64B  0000               	dw	0
   849  00F64D  0008               	dw	8
   850  00F64F  0000               	dw	0
   851  00F651  0000               	dw	0
   852  00F653  0000               	dw	0
   853  00F655  0000               	dw	0
   854  00F657  00FE               	dw	254
   855  00F659  001F               	dw	31
   856  00F65B  0042               	dw	66
   857  00F65D  0000               	dw	0
   858  00F65F  0042               	dw	66
   859  00F661  0000               	dw	0
   860  00F663  0042               	dw	66
   861  00F665  0000               	dw	0
   862  00F667  0042               	dw	66
   863  00F669  0000               	dw	0
   864  00F66B  0000               	dw	0
   865  00F66D  0000               	dw	0
   866  00F66F  000E               	dw	14
   867  00F671  0000               	dw	0
   868  00F673  0000               	dw	0
   869  00F675  00F0               	dw	240
   870  00F677  0003               	dw	3
   871  00F679  0008               	dw	8
   872  00F67B  0004               	dw	4
   873  00F67D  0004               	dw	4
   874  00F67F  0008               	dw	8
   875  00F681  0002               	dw	2
   876  00F683  0010               	dw	16
   877  00F685  0002               	dw	2
   878  00F687  0010               	dw	16
   879  00F689  0002               	dw	2
   880  00F68B  0010               	dw	16
   881  00F68D  0002               	dw	2
   882  00F68F  0010               	dw	16
   883  00F691  0082               	dw	130
   884  00F693  0010               	dw	16
   885  00F695  0084               	dw	132
   886  00F697  0010               	dw	16
   887  00F699  0084               	dw	132
   888  00F69B  0008               	dw	8
   889  00F69D  0088               	dw	136
   890  00F69F  0004               	dw	4
   891  00F6A1  0080               	dw	128
   892  00F6A3  0003               	dw	3
   893  00F6A5  0000               	dw	0
   894  00F6A7  0000               	dw	0
   895  00F6A9  000A               	dw	10
   896  00F6AB  0000               	dw	0
   897  00F6AD  0000               	dw	0
   898  00F6AF  0000               	dw	0
   899  00F6B1  0000               	dw	0
   900  00F6B3  00FE               	dw	254
   901  00F6B5  001F               	dw	31
   902  00F6B7  0040               	dw	64
   903  00F6B9  0000               	dw	0
   904  00F6BB  0040               	dw	64
   905  00F6BD  0000               	dw	0
   906  00F6BF  0040               	dw	64
   907  00F6C1  0000               	dw	0
   908  00F6C3  0040               	dw	64
   909  00F6C5  0000               	dw	0
   910  00F6C7  0040               	dw	64
   911  00F6C9  0000               	dw	0
   912  00F6CB  00FE               	dw	254
   913  00F6CD  001F               	dw	31
   914  00F6CF  0000               	dw	0
   915  00F6D1  0000               	dw	0
   916  00F6D3  0004               	dw	4
   917  00F6D5  0000               	dw	0
   918  00F6D7  0000               	dw	0
   919  00F6D9  0000               	dw	0
   920  00F6DB  0000               	dw	0
   921  00F6DD  00FE               	dw	254
   922  00F6DF  001F               	dw	31
   923  00F6E1  0000               	dw	0
   924  00F6E3  0000               	dw	0
   925  00F6E5  0007               	dw	7
   926  00F6E7  0000               	dw	0
   927  00F6E9  0000               	dw	0
   928  00F6EB  0000               	dw	0
   929  00F6ED  0008               	dw	8
   930  00F6EF  0000               	dw	0
   931  00F6F1  0010               	dw	16
   932  00F6F3  0000               	dw	0
   933  00F6F5  0010               	dw	16
   934  00F6F7  0000               	dw	0
   935  00F6F9  0008               	dw	8
   936  00F6FB  00FE               	dw	254
   937  00F6FD  0007               	dw	7
   938  00F6FF  0000               	dw	0
   939  00F701  0000               	dw	0
   940  00F703  0009               	dw	9
   941  00F705  0000               	dw	0
   942  00F707  0000               	dw	0
   943  00F709  0000               	dw	0
   944  00F70B  0000               	dw	0
   945  00F70D  00FE               	dw	254
   946  00F70F  001F               	dw	31
   947  00F711  0060               	dw	96
   948  00F713  0000               	dw	0
   949  00F715  0090               	dw	144
   950  00F717  0001               	dw	1
   951  00F719  0008               	dw	8
   952  00F71B  0002               	dw	2
   953  00F71D  0004               	dw	4
   954  00F71F  000C               	dw	12
   955  00F721  0002               	dw	2
   956  00F723  0010               	dw	16
   957  00F725  0000               	dw	0
   958  00F727  0000               	dw	0
   959  00F729  0008               	dw	8
   960  00F72B  0000               	dw	0
   961  00F72D  0000               	dw	0
   962  00F72F  0000               	dw	0
   963  00F731  0000               	dw	0
   964  00F733  00FE               	dw	254
   965  00F735  001F               	dw	31
   966  00F737  0000               	dw	0
   967  00F739  0010               	dw	16
   968  00F73B  0000               	dw	0
   969  00F73D  0010               	dw	16
   970  00F73F  0000               	dw	0
   971  00F741  0010               	dw	16
   972  00F743  0000               	dw	0
   973  00F745  0010               	dw	16
   974  00F747  0000               	dw	0
   975  00F749  0000               	dw	0
   976  00F74B  000F               	dw	15
   977  00F74D  0000               	dw	0
   978  00F74F  0000               	dw	0
   979  00F751  0000               	dw	0
   980  00F753  001C               	dw	28
   981  00F755  00F8               	dw	248
   982  00F757  0003               	dw	3
   983  00F759  0006               	dw	6
   984  00F75B  0000               	dw	0
   985  00F75D  0038               	dw	56
   986  00F75F  0000               	dw	0
   987  00F761  00C0               	dw	192
   988  00F763  0001               	dw	1
   989  00F765  0000               	dw	0
   990  00F767  000E               	dw	14
   991  00F769  0000               	dw	0
   992  00F76B  0010               	dw	16
   993  00F76D  0000               	dw	0
   994  00F76F  000E               	dw	14
   995  00F771  00C0               	dw	192
   996  00F773  0001               	dw	1
   997  00F775  0038               	dw	56
   998  00F777  0000               	dw	0
   999  00F779  0006               	dw	6
  1000  00F77B  0000               	dw	0
  1001  00F77D  00F8               	dw	248
  1002  00F77F  0003               	dw	3
  1003  00F781  0000               	dw	0
  1004  00F783  001C               	dw	28
  1005  00F785  0000               	dw	0
  1006  00F787  0000               	dw	0
  1007  00F789  000B               	dw	11
  1008  00F78B  0000               	dw	0
  1009  00F78D  0000               	dw	0
  1010  00F78F  0000               	dw	0
  1011  00F791  0000               	dw	0
  1012  00F793  00FE               	dw	254
  1013  00F795  001F               	dw	31
  1014  00F797  0008               	dw	8
  1015  00F799  0000               	dw	0
  1016  00F79B  0030               	dw	48
  1017  00F79D  0000               	dw	0
  1018  00F79F  0040               	dw	64
  1019  00F7A1  0000               	dw	0
  1020  00F7A3  0080               	dw	128
  1021  00F7A5  0000               	dw	0
  1022  00F7A7  0000               	dw	0
  1023  00F7A9  0003               	dw	3
  1024  00F7AB  0000               	dw	0
  1025  00F7AD  0004               	dw	4
  1026  00F7AF  00FE               	dw	254
  1027  00F7B1  001F               	dw	31
  1028  00F7B3  0000               	dw	0
  1029  00F7B5  0000               	dw	0
  1030  00F7B7  000E               	dw	14
  1031  00F7B9  0000               	dw	0
  1032  00F7BB  0000               	dw	0
  1033  00F7BD  00F0               	dw	240
  1034  00F7BF  0003               	dw	3
  1035  00F7C1  0008               	dw	8
  1036  00F7C3  0004               	dw	4
  1037  00F7C5  0004               	dw	4
  1038  00F7C7  0008               	dw	8
  1039  00F7C9  0002               	dw	2
  1040  00F7CB  0010               	dw	16
  1041  00F7CD  0002               	dw	2
  1042  00F7CF  0010               	dw	16
  1043  00F7D1  0002               	dw	2
  1044  00F7D3  0010               	dw	16
  1045  00F7D5  0002               	dw	2
  1046  00F7D7  0010               	dw	16
  1047  00F7D9  0002               	dw	2
  1048  00F7DB  0010               	dw	16
  1049  00F7DD  0002               	dw	2
  1050  00F7DF  0010               	dw	16
  1051  00F7E1  0004               	dw	4
  1052  00F7E3  0008               	dw	8
  1053  00F7E5  0008               	dw	8
  1054  00F7E7  0004               	dw	4
  1055  00F7E9  00F0               	dw	240
  1056  00F7EB  0003               	dw	3
  1057  00F7ED  0000               	dw	0
  1058  00F7EF  0000               	dw	0
  1059  00F7F1  0009               	dw	9
  1060  00F7F3  0000               	dw	0
  1061  00F7F5  0000               	dw	0
  1062  00F7F7  0000               	dw	0
  1063  00F7F9  0000               	dw	0
  1064  00F7FB  00FE               	dw	254
  1065  00F7FD  001F               	dw	31
  1066  00F7FF  0042               	dw	66
  1067  00F801  0000               	dw	0
  1068  00F803  0042               	dw	66
  1069  00F805  0000               	dw	0
  1070  00F807  0042               	dw	66
  1071  00F809  0000               	dw	0
  1072  00F80B  0024               	dw	36
  1073  00F80D  0000               	dw	0
  1074  00F80F  0018               	dw	24
  1075  00F811  0000               	dw	0
  1076  00F813  0000               	dw	0
  1077  00F815  0000               	dw	0
  1078  00F817  000E               	dw	14
  1079  00F819  0000               	dw	0
  1080  00F81B  0000               	dw	0
  1081  00F81D  00F0               	dw	240
  1082  00F81F  0003               	dw	3
  1083  00F821  0008               	dw	8
  1084  00F823  0004               	dw	4
  1085  00F825  0004               	dw	4
  1086  00F827  0008               	dw	8
  1087  00F829  0002               	dw	2
  1088  00F82B  0010               	dw	16
  1089  00F82D  0002               	dw	2
  1090  00F82F  0010               	dw	16
  1091  00F831  0002               	dw	2
  1092  00F833  0010               	dw	16
  1093  00F835  0002               	dw	2
  1094  00F837  0011               	dw	17
  1095  00F839  0002               	dw	2
  1096  00F83B  0012               	dw	18
  1097  00F83D  0002               	dw	2
  1098  00F83F  000C               	dw	12
  1099  00F841  0004               	dw	4
  1100  00F843  0008               	dw	8
  1101  00F845  0008               	dw	8
  1102  00F847  0016               	dw	22
  1103  00F849  00F0               	dw	240
  1104  00F84B  0021               	dw	33
  1105  00F84D  0000               	dw	0
  1106  00F84F  0000               	dw	0
  1107  00F851  000A               	dw	10
  1108  00F853  0000               	dw	0
  1109  00F855  0000               	dw	0
  1110  00F857  0000               	dw	0
  1111  00F859  0000               	dw	0
  1112  00F85B  00FE               	dw	254
  1113  00F85D  001F               	dw	31
  1114  00F85F  0042               	dw	66
  1115  00F861  0000               	dw	0
  1116  00F863  00C2               	dw	194
  1117  00F865  0000               	dw	0
  1118  00F867  0042               	dw	66
  1119  00F869  0001               	dw	1
  1120  00F86B  0042               	dw	66
  1121  00F86D  0006               	dw	6
  1122  00F86F  0024               	dw	36
  1123  00F871  0008               	dw	8
  1124  00F873  0018               	dw	24
  1125  00F875  0010               	dw	16
  1126  00F877  0000               	dw	0
  1127  00F879  0000               	dw	0
  1128  00F87B  0008               	dw	8
  1129  00F87D  0000               	dw	0
  1130  00F87F  0004               	dw	4
  1131  00F881  0018               	dw	24
  1132  00F883  0008               	dw	8
  1133  00F885  0024               	dw	36
  1134  00F887  0010               	dw	16
  1135  00F889  0042               	dw	66
  1136  00F88B  0010               	dw	16
  1137  00F88D  0042               	dw	66
  1138  00F88F  0010               	dw	16
  1139  00F891  0084               	dw	132
  1140  00F893  0008               	dw	8
  1141  00F895  0008               	dw	8
  1142  00F897  0007               	dw	7
  1143  00F899  0000               	dw	0
  1144  00F89B  0000               	dw	0
  1145  00F89D  0008               	dw	8
  1146  00F89F  0002               	dw	2
  1147  00F8A1  0000               	dw	0
  1148  00F8A3  0002               	dw	2
  1149  00F8A5  0000               	dw	0
  1150  00F8A7  0002               	dw	2
  1151  00F8A9  0000               	dw	0
  1152  00F8AB  00FE               	dw	254
  1153  00F8AD  001F               	dw	31
  1154  00F8AF  0002               	dw	2
  1155  00F8B1  0000               	dw	0
  1156  00F8B3  0002               	dw	2
  1157  00F8B5  0000               	dw	0
  1158  00F8B7  0002               	dw	2
  1159  00F8B9  0000               	dw	0
  1160  00F8BB  0000               	dw	0
  1161  00F8BD  0000               	dw	0
  1162  00F8BF  000A               	dw	10
  1163  00F8C1  0000               	dw	0
  1164  00F8C3  0000               	dw	0
  1165  00F8C5  0000               	dw	0
  1166  00F8C7  0000               	dw	0
  1167  00F8C9  00FE               	dw	254
  1168  00F8CB  0007               	dw	7
  1169  00F8CD  0000               	dw	0
  1170  00F8CF  0008               	dw	8
  1171  00F8D1  0000               	dw	0
  1172  00F8D3  0010               	dw	16
  1173  00F8D5  0000               	dw	0
  1174  00F8D7  0010               	dw	16
  1175  00F8D9  0000               	dw	0
  1176  00F8DB  0010               	dw	16
  1177  00F8DD  0000               	dw	0
  1178  00F8DF  0008               	dw	8
  1179  00F8E1  00FE               	dw	254
  1180  00F8E3  0007               	dw	7
  1181  00F8E5  0000               	dw	0
  1182  00F8E7  0000               	dw	0
  1183  00F8E9  000C               	dw	12
  1184  00F8EB  0002               	dw	2
  1185  00F8ED  0000               	dw	0
  1186  00F8EF  001C               	dw	28
  1187  00F8F1  0000               	dw	0
  1188  00F8F3  0060               	dw	96
  1189  00F8F5  0000               	dw	0
  1190  00F8F7  0080               	dw	128
  1191  00F8F9  0001               	dw	1
  1192  00F8FB  0000               	dw	0
  1193  00F8FD  000E               	dw	14
  1194  00F8FF  0000               	dw	0
  1195  00F901  0010               	dw	16
  1196  00F903  0000               	dw	0
  1197  00F905  000E               	dw	14
  1198  00F907  0080               	dw	128
  1199  00F909  0001               	dw	1
  1200  00F90B  0060               	dw	96
  1201  00F90D  0000               	dw	0
  1202  00F90F  001C               	dw	28
  1203  00F911  0000               	dw	0
  1204  00F913  0002               	dw	2
  1205  00F915  0000               	dw	0
  1206  00F917  0000               	dw	0
  1207  00F919  0000               	dw	0
  1208  00F91B  000F               	dw	15
  1209  00F91D  0000               	dw	0
  1210  00F91F  0000               	dw	0
  1211  00F921  0006               	dw	6
  1212  00F923  0000               	dw	0
  1213  00F925  0078               	dw	120
  1214  00F927  0000               	dw	0
  1215  00F929  0080               	dw	128
  1216  00F92B  0007               	dw	7
  1217  00F92D  0000               	dw	0
  1218  00F92F  0018               	dw	24
  1219  00F931  0080               	dw	128
  1220  00F933  0007               	dw	7
  1221  00F935  0078               	dw	120
  1222  00F937  0000               	dw	0
  1223  00F939  0006               	dw	6
  1224  00F93B  0000               	dw	0
  1225  00F93D  0078               	dw	120
  1226  00F93F  0000               	dw	0
  1227  00F941  0080               	dw	128
  1228  00F943  0007               	dw	7
  1229  00F945  0000               	dw	0
  1230  00F947  0018               	dw	24
  1231  00F949  0080               	dw	128
  1232  00F94B  0007               	dw	7
  1233  00F94D  0078               	dw	120
  1234  00F94F  0000               	dw	0
  1235  00F951  0006               	dw	6
  1236  00F953  0000               	dw	0
  1237  00F955  0000               	dw	0
  1238  00F957  0000               	dw	0
  1239  00F959  0009               	dw	9
  1240  00F95B  0000               	dw	0
  1241  00F95D  0000               	dw	0
  1242  00F95F  0006               	dw	6
  1243  00F961  0018               	dw	24
  1244  00F963  0008               	dw	8
  1245  00F965  0004               	dw	4
  1246  00F967  0030               	dw	48
  1247  00F969  0003               	dw	3
  1248  00F96B  00C0               	dw	192
  1249  00F96D  0000               	dw	0
  1250  00F96F  0030               	dw	48
  1251  00F971  0003               	dw	3
  1252  00F973  0008               	dw	8
  1253  00F975  0004               	dw	4
  1254  00F977  0006               	dw	6
  1255  00F979  0018               	dw	24
  1256  00F97B  0000               	dw	0
  1257  00F97D  0000               	dw	0
  1258  00F97F  000B               	dw	11
  1259  00F981  0000               	dw	0
  1260  00F983  0000               	dw	0
  1261  00F985  0002               	dw	2
  1262  00F987  0000               	dw	0
  1263  00F989  0004               	dw	4
  1264  00F98B  0000               	dw	0
  1265  00F98D  0018               	dw	24
  1266  00F98F  0000               	dw	0
  1267  00F991  0060               	dw	96
  1268  00F993  0000               	dw	0
  1269  00F995  0080               	dw	128
  1270  00F997  001F               	dw	31
  1271  00F999  0060               	dw	96
  1272  00F99B  0000               	dw	0
  1273  00F99D  0018               	dw	24
  1274  00F99F  0000               	dw	0
  1275  00F9A1  0004               	dw	4
  1276  00F9A3  0000               	dw	0
  1277  00F9A5  0002               	dw	2
  1278  00F9A7  0000               	dw	0
  1279  00F9A9  0000               	dw	0
  1280  00F9AB  0000               	dw	0
  1281  00F9AD  0008               	dw	8
  1282  00F9AF  0002               	dw	2
  1283  00F9B1  0010               	dw	16
  1284  00F9B3  0002               	dw	2
  1285  00F9B5  001C               	dw	28
  1286  00F9B7  0002               	dw	2
  1287  00F9B9  0013               	dw	19
  1288  00F9BB  00C2               	dw	194
  1289  00F9BD  0010               	dw	16
  1290  00F9BF  0032               	dw	50
  1291  00F9C1  0010               	dw	16
  1292  00F9C3  000E               	dw	14
  1293  00F9C5  0010               	dw	16
  1294  00F9C7  0002               	dw	2
  1295  00F9C9  0010               	dw	16
  1296  00F9CB  0000               	dw	0
  1297  00F9CD  0000               	dw	0
  1298  00F9CF  0006               	dw	6
  1299  00F9D1  0000               	dw	0
  1300  00F9D3  0000               	dw	0
  1301  00F9D5  0000               	dw	0
  1302  00F9D7  0000               	dw	0
  1303  00F9D9  00FE               	dw	254
  1304  00F9DB  00FF               	dw	255
  1305  00F9DD  0002               	dw	2
  1306  00F9DF  0080               	dw	128
  1307  00F9E1  0002               	dw	2
  1308  00F9E3  0080               	dw	128
  1309  00F9E5  0000               	dw	0
  1310  00F9E7  0000               	dw	0
  1311  00F9E9  000A               	dw	10
  1312  00F9EB  0002               	dw	2
  1313  00F9ED  0000               	dw	0
  1314  00F9EF  000C               	dw	12
  1315  00F9F1  0000               	dw	0
  1316  00F9F3  0010               	dw	16
  1317  00F9F5  0000               	dw	0
  1318  00F9F7  0060               	dw	96
  1319  00F9F9  0000               	dw	0
  1320  00F9FB  0080               	dw	128
  1321  00F9FD  0001               	dw	1
  1322  00F9FF  0000               	dw	0
  1323  00FA01  0006               	dw	6
  1324  00FA03  0000               	dw	0
  1325  00FA05  0008               	dw	8
  1326  00FA07  0000               	dw	0
  1327  00FA09  0030               	dw	48
  1328  00FA0B  0000               	dw	0
  1329  00FA0D  0040               	dw	64
  1330  00FA0F  0000               	dw	0
  1331  00FA11  0000               	dw	0
  1332  00FA13  0005               	dw	5
  1333  00FA15  0000               	dw	0
  1334  00FA17  0000               	dw	0
  1335  00FA19  0002               	dw	2
  1336  00FA1B  0080               	dw	128
  1337  00FA1D  0002               	dw	2
  1338  00FA1F  0080               	dw	128
  1339  00FA21  00FE               	dw	254
  1340  00FA23  00FF               	dw	255
  1341  00FA25  0000               	dw	0
  1342  00FA27  0000               	dw	0
  1343  00FA29  000B               	dw	11
  1344  00FA2B  0000               	dw	0
  1345  00FA2D  0000               	dw	0
  1346  00FA2F  0000               	dw	0
  1347  00FA31  0002               	dw	2
  1348  00FA33  0080               	dw	128
  1349  00FA35  0001               	dw	1
  1350  00FA37  0070               	dw	112
  1351  00FA39  0000               	dw	0
  1352  00FA3B  000C               	dw	12
  1353  00FA3D  0000               	dw	0
  1354  00FA3F  0002               	dw	2
  1355  00FA41  0000               	dw	0
  1356  00FA43  000C               	dw	12
  1357  00FA45  0000               	dw	0
  1358  00FA47  0070               	dw	112
  1359  00FA49  0000               	dw	0
  1360  00FA4B  0080               	dw	128
  1361  00FA4D  0001               	dw	1
  1362  00FA4F  0000               	dw	0
  1363  00FA51  0002               	dw	2
  1364  00FA53  0000               	dw	0
  1365  00FA55  0000               	dw	0
  1366  00FA57  0009               	dw	9
  1367  00FA59  0000               	dw	0
  1368  00FA5B  0040               	dw	64
  1369  00FA5D  0000               	dw	0
  1370  00FA5F  0040               	dw	64
  1371  00FA61  0000               	dw	0
  1372  00FA63  0040               	dw	64
  1373  00FA65  0000               	dw	0
  1374  00FA67  0040               	dw	64
  1375  00FA69  0000               	dw	0
  1376  00FA6B  0040               	dw	64
  1377  00FA6D  0000               	dw	0
  1378  00FA6F  0040               	dw	64
  1379  00FA71  0000               	dw	0
  1380  00FA73  0040               	dw	64
  1381  00FA75  0000               	dw	0
  1382  00FA77  0040               	dw	64
  1383  00FA79  0000               	dw	0
  1384  00FA7B  0000               	dw	0
  1385  00FA7D  0005               	dw	5
  1386  00FA7F  0000               	dw	0
  1387  00FA81  0000               	dw	0
  1388  00FA83  0000               	dw	0
  1389  00FA85  0000               	dw	0
  1390  00FA87  0002               	dw	2
  1391  00FA89  0000               	dw	0
  1392  00FA8B  0004               	dw	4
  1393  00FA8D  0000               	dw	0
  1394  00FA8F  0000               	dw	0
  1395  00FA91  0000               	dw	0
  1396  00FA93  000B               	dw	11
  1397  00FA95  0000               	dw	0
  1398  00FA97  0000               	dw	0
  1399  00FA99  00C0               	dw	192
  1400  00FA9B  0007               	dw	7
  1401  00FA9D  0020               	dw	32
  1402  00FA9F  0008               	dw	8
  1403  00FAA1  0010               	dw	16
  1404  00FAA3  0010               	dw	16
  1405  00FAA5  0010               	dw	16
  1406  00FAA7  0010               	dw	16
  1407  00FAA9  0010               	dw	16
  1408  00FAAB  0010               	dw	16
  1409  00FAAD  0010               	dw	16
  1410  00FAAF  0010               	dw	16
  1411  00FAB1  0010               	dw	16
  1412  00FAB3  0010               	dw	16
  1413  00FAB5  0020               	dw	32
  1414  00FAB7  0008               	dw	8
  1415  00FAB9  00F0               	dw	240
  1416  00FABB  001F               	dw	31
  1417  00FABD  0000               	dw	0
  1418  00FABF  0000               	dw	0
  1419  00FAC1  000B               	dw	11
  1420  00FAC3  0000               	dw	0
  1421  00FAC5  0000               	dw	0
  1422  00FAC7  00FE               	dw	254
  1423  00FAC9  001F               	dw	31
  1424  00FACB  0020               	dw	32
  1425  00FACD  0008               	dw	8
  1426  00FACF  0010               	dw	16
  1427  00FAD1  0010               	dw	16
  1428  00FAD3  0010               	dw	16
  1429  00FAD5  0010               	dw	16
  1430  00FAD7  0010               	dw	16
  1431  00FAD9  0010               	dw	16
  1432  00FADB  0010               	dw	16
  1433  00FADD  0010               	dw	16
  1434  00FADF  0010               	dw	16
  1435  00FAE1  0010               	dw	16
  1436  00FAE3  0020               	dw	32
  1437  00FAE5  0008               	dw	8
  1438  00FAE7  00C0               	dw	192
  1439  00FAE9  0007               	dw	7
  1440  00FAEB  0000               	dw	0
  1441  00FAED  0000               	dw	0
  1442  00FAEF  000A               	dw	10
  1443  00FAF1  0000               	dw	0
  1444  00FAF3  0000               	dw	0
  1445  00FAF5  00C0               	dw	192
  1446  00FAF7  0007               	dw	7
  1447  00FAF9  0020               	dw	32
  1448  00FAFB  0008               	dw	8
  1449  00FAFD  0010               	dw	16
  1450  00FAFF  0010               	dw	16
  1451  00FB01  0010               	dw	16
  1452  00FB03  0010               	dw	16
  1453  00FB05  0010               	dw	16
  1454  00FB07  0010               	dw	16
  1455  00FB09  0010               	dw	16
  1456  00FB0B  0010               	dw	16
  1457  00FB0D  0020               	dw	32
  1458  00FB0F  0008               	dw	8
  1459  00FB11  0040               	dw	64
  1460  00FB13  0004               	dw	4
  1461  00FB15  0000               	dw	0
  1462  00FB17  0000               	dw	0
  1463  00FB19  000B               	dw	11
  1464  00FB1B  0000               	dw	0
  1465  00FB1D  0000               	dw	0
  1466  00FB1F  00C0               	dw	192
  1467  00FB21  0007               	dw	7
  1468  00FB23  0020               	dw	32
  1469  00FB25  0008               	dw	8
  1470  00FB27  0010               	dw	16
  1471  00FB29  0010               	dw	16
  1472  00FB2B  0010               	dw	16
  1473  00FB2D  0010               	dw	16
  1474  00FB2F  0010               	dw	16
  1475  00FB31  0010               	dw	16
  1476  00FB33  0010               	dw	16
  1477  00FB35  0010               	dw	16
  1478  00FB37  0010               	dw	16
  1479  00FB39  0010               	dw	16
  1480  00FB3B  0020               	dw	32
  1481  00FB3D  0008               	dw	8
  1482  00FB3F  00FE               	dw	254
  1483  00FB41  001F               	dw	31
  1484  00FB43  0000               	dw	0
  1485  00FB45  0000               	dw	0
  1486  00FB47  000A               	dw	10
  1487  00FB49  0000               	dw	0
  1488  00FB4B  0000               	dw	0
  1489  00FB4D  00C0               	dw	192
  1490  00FB4F  0007               	dw	7
  1491  00FB51  0020               	dw	32
  1492  00FB53  0009               	dw	9
  1493  00FB55  0010               	dw	16
  1494  00FB57  0011               	dw	17
  1495  00FB59  0010               	dw	16
  1496  00FB5B  0011               	dw	17
  1497  00FB5D  0010               	dw	16
  1498  00FB5F  0011               	dw	17
  1499  00FB61  0010               	dw	16
  1500  00FB63  0011               	dw	17
  1501  00FB65  0020               	dw	32
  1502  00FB67  0009               	dw	9
  1503  00FB69  00C0               	dw	192
  1504  00FB6B  0005               	dw	5
  1505  00FB6D  0000               	dw	0
  1506  00FB6F  0000               	dw	0
  1507  00FB71  0006               	dw	6
  1508  00FB73  0000               	dw	0
  1509  00FB75  0000               	dw	0
  1510  00FB77  0010               	dw	16
  1511  00FB79  0000               	dw	0
  1512  00FB7B  00FC               	dw	252
  1513  00FB7D  001F               	dw	31
  1514  00FB7F  0012               	dw	18
  1515  00FB81  0000               	dw	0
  1516  00FB83  0012               	dw	18
  1517  00FB85  0000               	dw	0
  1518  00FB87  0000               	dw	0
  1519  00FB89  0000               	dw	0
  1520  00FB8B  000B               	dw	11
  1521  00FB8D  0000               	dw	0
  1522  00FB8F  0000               	dw	0
  1523  00FB91  00C0               	dw	192
  1524  00FB93  0027               	dw	39
  1525  00FB95  0020               	dw	32
  1526  00FB97  0048               	dw	72
  1527  00FB99  0010               	dw	16
  1528  00FB9B  0090               	dw	144
  1529  00FB9D  0010               	dw	16
  1530  00FB9F  0090               	dw	144
  1531  00FBA1  0010               	dw	16
  1532  00FBA3  0090               	dw	144
  1533  00FBA5  0010               	dw	16
  1534  00FBA7  0090               	dw	144
  1535  00FBA9  0010               	dw	16
  1536  00FBAB  0090               	dw	144
  1537  00FBAD  0020               	dw	32
  1538  00FBAF  0048               	dw	72
  1539  00FBB1  00F0               	dw	240
  1540  00FBB3  003F               	dw	63
  1541  00FBB5  0000               	dw	0
  1542  00FBB7  0000               	dw	0
  1543  00FBB9  000A               	dw	10
  1544  00FBBB  0000               	dw	0
  1545  00FBBD  0000               	dw	0
  1546  00FBBF  00FE               	dw	254
  1547  00FBC1  001F               	dw	31
  1548  00FBC3  0020               	dw	32
  1549  00FBC5  0000               	dw	0
  1550  00FBC7  0010               	dw	16
  1551  00FBC9  0000               	dw	0
  1552  00FBCB  0010               	dw	16
  1553  00FBCD  0000               	dw	0
  1554  00FBCF  0010               	dw	16
  1555  00FBD1  0000               	dw	0
  1556  00FBD3  0010               	dw	16
  1557  00FBD5  0000               	dw	0
  1558  00FBD7  0020               	dw	32
  1559  00FBD9  0000               	dw	0
  1560  00FBDB  00C0               	dw	192
  1561  00FBDD  001F               	dw	31
  1562  00FBDF  0000               	dw	0
  1563  00FBE1  0000               	dw	0
  1564  00FBE3  0003               	dw	3
  1565  00FBE5  0000               	dw	0
  1566  00FBE7  0000               	dw	0
  1567  00FBE9  00F6               	dw	246
  1568  00FBEB  001F               	dw	31
  1569  00FBED  0000               	dw	0
  1570  00FBEF  0000               	dw	0
  1571  00FBF1  0003               	dw	3
  1572  00FBF3  0000               	dw	0
  1573  00FBF5  0080               	dw	128
  1574  00FBF7  00F6               	dw	246
  1575  00FBF9  007F               	dw	127
  1576  00FBFB  0000               	dw	0
  1577  00FBFD  0000               	dw	0
  1578  00FBFF  0008               	dw	8
  1579  00FC01  0000               	dw	0
  1580  00FC03  0000               	dw	0
  1581  00FC05  00FE               	dw	254
  1582  00FC07  001F               	dw	31
  1583  00FC09  0000               	dw	0
  1584  00FC0B  0001               	dw	1
  1585  00FC0D  0080               	dw	128
  1586  00FC0F  0002               	dw	2
  1587  00FC11  0040               	dw	64
  1588  00FC13  0004               	dw	4
  1589  00FC15  0020               	dw	32
  1590  00FC17  0008               	dw	8
  1591  00FC19  0010               	dw	16
  1592  00FC1B  0010               	dw	16
  1593  00FC1D  0000               	dw	0
  1594  00FC1F  0000               	dw	0
  1595  00FC21  0003               	dw	3
  1596  00FC23  0000               	dw	0
  1597  00FC25  0000               	dw	0
  1598  00FC27  00FE               	dw	254
  1599  00FC29  001F               	dw	31
  1600  00FC2B  0000               	dw	0
  1601  00FC2D  0000               	dw	0
  1602  00FC2F  000F               	dw	15
  1603  00FC31  0000               	dw	0
  1604  00FC33  0000               	dw	0
  1605  00FC35  00F0               	dw	240
  1606  00FC37  001F               	dw	31
  1607  00FC39  0020               	dw	32
  1608  00FC3B  0000               	dw	0
  1609  00FC3D  0010               	dw	16
  1610  00FC3F  0000               	dw	0
  1611  00FC41  0010               	dw	16
  1612  00FC43  0000               	dw	0
  1613  00FC45  0010               	dw	16
  1614  00FC47  0000               	dw	0
  1615  00FC49  0020               	dw	32
  1616  00FC4B  0000               	dw	0
  1617  00FC4D  00C0               	dw	192
  1618  00FC4F  001F               	dw	31
  1619  00FC51  0020               	dw	32
  1620  00FC53  0000               	dw	0
  1621  00FC55  0010               	dw	16
  1622  00FC57  0000               	dw	0
  1623  00FC59  0010               	dw	16
  1624  00FC5B  0000               	dw	0
  1625  00FC5D  0010               	dw	16
  1626  00FC5F  0000               	dw	0
  1627  00FC61  0020               	dw	32
  1628  00FC63  0000               	dw	0
  1629  00FC65  00C0               	dw	192
  1630  00FC67  001F               	dw	31
  1631  00FC69  0000               	dw	0
  1632  00FC6B  0000               	dw	0
  1633  00FC6D  000A               	dw	10
  1634  00FC6F  0000               	dw	0
  1635  00FC71  0000               	dw	0
  1636  00FC73  00F0               	dw	240
  1637  00FC75  001F               	dw	31
  1638  00FC77  0020               	dw	32
  1639  00FC79  0000               	dw	0
  1640  00FC7B  0010               	dw	16
  1641  00FC7D  0000               	dw	0
  1642  00FC7F  0010               	dw	16
  1643  00FC81  0000               	dw	0
  1644  00FC83  0010               	dw	16
  1645  00FC85  0000               	dw	0
  1646  00FC87  0010               	dw	16
  1647  00FC89  0000               	dw	0
  1648  00FC8B  0020               	dw	32
  1649  00FC8D  0000               	dw	0
  1650  00FC8F  00C0               	dw	192
  1651  00FC91  001F               	dw	31
  1652  00FC93  0000               	dw	0
  1653  00FC95  0000               	dw	0
  1654  00FC97  000A               	dw	10
  1655  00FC99  0000               	dw	0
  1656  00FC9B  0000               	dw	0
  1657  00FC9D  00C0               	dw	192
  1658  00FC9F  0007               	dw	7
  1659  00FCA1  0020               	dw	32
  1660  00FCA3  0008               	dw	8
  1661  00FCA5  0010               	dw	16
  1662  00FCA7  0010               	dw	16
  1663  00FCA9  0010               	dw	16
  1664  00FCAB  0010               	dw	16
  1665  00FCAD  0010               	dw	16
  1666  00FCAF  0010               	dw	16
  1667  00FCB1  0010               	dw	16
  1668  00FCB3  0010               	dw	16
  1669  00FCB5  0020               	dw	32
  1670  00FCB7  0008               	dw	8
  1671  00FCB9  00C0               	dw	192
  1672  00FCBB  0007               	dw	7
  1673  00FCBD  0000               	dw	0
  1674  00FCBF  0000               	dw	0
  1675  00FCC1  000B               	dw	11
  1676  00FCC3  0000               	dw	0
  1677  00FCC5  0000               	dw	0
  1678  00FCC7  00F0               	dw	240
  1679  00FCC9  00FF               	dw	255
  1680  00FCCB  0020               	dw	32
  1681  00FCCD  0008               	dw	8
  1682  00FCCF  0010               	dw	16
  1683  00FCD1  0010               	dw	16
  1684  00FCD3  0010               	dw	16
  1685  00FCD5  0010               	dw	16
  1686  00FCD7  0010               	dw	16
  1687  00FCD9  0010               	dw	16
  1688  00FCDB  0010               	dw	16
  1689  00FCDD  0010               	dw	16
  1690  00FCDF  0010               	dw	16
  1691  00FCE1  0010               	dw	16
  1692  00FCE3  0020               	dw	32
  1693  00FCE5  0008               	dw	8
  1694  00FCE7  00C0               	dw	192
  1695  00FCE9  0007               	dw	7
  1696  00FCEB  0000               	dw	0
  1697  00FCED  0000               	dw	0
  1698  00FCEF  000B               	dw	11
  1699  00FCF1  0000               	dw	0
  1700  00FCF3  0000               	dw	0
  1701  00FCF5  00C0               	dw	192
  1702  00FCF7  0007               	dw	7
  1703  00FCF9  0020               	dw	32
  1704  00FCFB  0008               	dw	8
  1705  00FCFD  0010               	dw	16
  1706  00FCFF  0010               	dw	16
  1707  00FD01  0010               	dw	16
  1708  00FD03  0010               	dw	16
  1709  00FD05  0010               	dw	16
  1710  00FD07  0010               	dw	16
  1711  00FD09  0010               	dw	16
  1712  00FD0B  0010               	dw	16
  1713  00FD0D  0010               	dw	16
  1714  00FD0F  0010               	dw	16
  1715  00FD11  0020               	dw	32
  1716  00FD13  0008               	dw	8
  1717  00FD15  00F0               	dw	240
  1718  00FD17  00FF               	dw	255
  1719  00FD19  0000               	dw	0
  1720  00FD1B  0000               	dw	0
  1721  00FD1D  0006               	dw	6
  1722  00FD1F  0000               	dw	0
  1723  00FD21  0000               	dw	0
  1724  00FD23  00F0               	dw	240
  1725  00FD25  001F               	dw	31
  1726  00FD27  0020               	dw	32
  1727  00FD29  0000               	dw	0
  1728  00FD2B  0010               	dw	16
  1729  00FD2D  0000               	dw	0
  1730  00FD2F  0010               	dw	16
  1731  00FD31  0000               	dw	0
  1732  00FD33  0000               	dw	0
  1733  00FD35  0000               	dw	0
  1734  00FD37  0006               	dw	6
  1735  00FD39  0060               	dw	96
  1736  00FD3B  0008               	dw	8
  1737  00FD3D  0090               	dw	144
  1738  00FD3F  0010               	dw	16
  1739  00FD41  0010               	dw	16
  1740  00FD43  0011               	dw	17
  1741  00FD45  0010               	dw	16
  1742  00FD47  0011               	dw	17
  1743  00FD49  0020               	dw	32
  1744  00FD4B  000E               	dw	14
  1745  00FD4D  0000               	dw	0
  1746  00FD4F  0000               	dw	0
  1747  00FD51  0007               	dw	7
  1748  00FD53  0000               	dw	0
  1749  00FD55  0000               	dw	0
  1750  00FD57  0010               	dw	16
  1751  00FD59  0000               	dw	0
  1752  00FD5B  0010               	dw	16
  1753  00FD5D  0000               	dw	0
  1754  00FD5F  00FE               	dw	254
  1755  00FD61  001F               	dw	31
  1756  00FD63  0010               	dw	16
  1757  00FD65  0000               	dw	0
  1758  00FD67  0010               	dw	16
  1759  00FD69  0000               	dw	0
  1760  00FD6B  0000               	dw	0
  1761  00FD6D  0000               	dw	0
  1762  00FD6F  000A               	dw	10
  1763  00FD71  0000               	dw	0
  1764  00FD73  0000               	dw	0
  1765  00FD75  00F0               	dw	240
  1766  00FD77  0007               	dw	7
  1767  00FD79  0000               	dw	0
  1768  00FD7B  0008               	dw	8
  1769  00FD7D  0000               	dw	0
  1770  00FD7F  0010               	dw	16
  1771  00FD81  0000               	dw	0
  1772  00FD83  0010               	dw	16
  1773  00FD85  0000               	dw	0
  1774  00FD87  0010               	dw	16
  1775  00FD89  0000               	dw	0
  1776  00FD8B  0010               	dw	16
  1777  00FD8D  0000               	dw	0
  1778  00FD8F  0008               	dw	8
  1779  00FD91  00F0               	dw	240
  1780  00FD93  0007               	dw	7
  1781  00FD95  0000               	dw	0
  1782  00FD97  0000               	dw	0
  1783  00FD99  000A               	dw	10
  1784  00FD9B  0010               	dw	16
  1785  00FD9D  0000               	dw	0
  1786  00FD9F  0060               	dw	96
  1787  00FDA1  0000               	dw	0
  1788  00FDA3  0080               	dw	128
  1789  00FDA5  0003               	dw	3
  1790  00FDA7  0000               	dw	0
  1791  00FDA9  000C               	dw	12
  1792  00FDAB  0000               	dw	0
  1793  00FDAD  0010               	dw	16
  1794  00FDAF  0000               	dw	0
  1795  00FDB1  000C               	dw	12
  1796  00FDB3  0080               	dw	128
  1797  00FDB5  0003               	dw	3
  1798  00FDB7  0060               	dw	96
  1799  00FDB9  0000               	dw	0
  1800  00FDBB  0010               	dw	16
  1801  00FDBD  0000               	dw	0
  1802  00FDBF  0000               	dw	0
  1803  00FDC1  0000               	dw	0
  1804  00FDC3  000E               	dw	14
  1805  00FDC5  0010               	dw	16
  1806  00FDC7  0000               	dw	0
  1807  00FDC9  00E0               	dw	224
  1808  00FDCB  0000               	dw	0
  1809  00FDCD  0000               	dw	0
  1810  00FDCF  0007               	dw	7
  1811  00FDD1  0000               	dw	0
  1812  00FDD3  0018               	dw	24
  1813  00FDD5  0000               	dw	0
  1814  00FDD7  0007               	dw	7
  1815  00FDD9  00E0               	dw	224
  1816  00FDDB  0000               	dw	0
  1817  00FDDD  0010               	dw	16
  1818  00FDDF  0000               	dw	0
  1819  00FDE1  00E0               	dw	224
  1820  00FDE3  0000               	dw	0
  1821  00FDE5  0000               	dw	0
  1822  00FDE7  0007               	dw	7
  1823  00FDE9  0000               	dw	0
  1824  00FDEB  0018               	dw	24
  1825  00FDED  0000               	dw	0
  1826  00FDEF  0007               	dw	7
  1827  00FDF1  00E0               	dw	224
  1828  00FDF3  0000               	dw	0
  1829  00FDF5  0010               	dw	16
  1830  00FDF7  0000               	dw	0
  1831  00FDF9  0000               	dw	0
  1832  00FDFB  0000               	dw	0
  1833  00FDFD  0009               	dw	9
  1834  00FDFF  0010               	dw	16
  1835  00FE01  0010               	dw	16
  1836  00FE03  0020               	dw	32
  1837  00FE05  0008               	dw	8
  1838  00FE07  0040               	dw	64
  1839  00FE09  0004               	dw	4
  1840  00FE0B  0080               	dw	128
  1841  00FE0D  0003               	dw	3
  1842  00FE0F  0080               	dw	128
  1843  00FE11  0003               	dw	3
  1844  00FE13  0040               	dw	64
  1845  00FE15  0004               	dw	4
  1846  00FE17  0020               	dw	32
  1847  00FE19  0008               	dw	8
  1848  00FE1B  0010               	dw	16
  1849  00FE1D  0010               	dw	16
  1850  00FE1F  0000               	dw	0
  1851  00FE21  0000               	dw	0
  1852  00FE23  0009               	dw	9
  1853  00FE25  0010               	dw	16
  1854  00FE27  0000               	dw	0
  1855  00FE29  00E0               	dw	224
  1856  00FE2B  0000               	dw	0
  1857  00FE2D  0000               	dw	0
  1858  00FE2F  0083               	dw	131
  1859  00FE31  0000               	dw	0
  1860  00FE33  007C               	dw	124
  1861  00FE35  0000               	dw	0
  1862  00FE37  000C               	dw	12
  1863  00FE39  0000               	dw	0
  1864  00FE3B  0003               	dw	3
  1865  00FE3D  00E0               	dw	224
  1866  00FE3F  0000               	dw	0
  1867  00FE41  0010               	dw	16
  1868  00FE43  0000               	dw	0
  1869  00FE45  0000               	dw	0
  1870  00FE47  0000               	dw	0
  1871  00FE49  0008               	dw	8
  1872  00FE4B  0010               	dw	16
  1873  00FE4D  0010               	dw	16
  1874  00FE4F  0010               	dw	16
  1875  00FE51  0018               	dw	24
  1876  00FE53  0010               	dw	16
  1877  00FE55  0016               	dw	22
  1878  00FE57  0010               	dw	16
  1879  00FE59  0011               	dw	17
  1880  00FE5B  00D0               	dw	208
  1881  00FE5D  0010               	dw	16
  1882  00FE5F  0030               	dw	48
  1883  00FE61  0010               	dw	16
  1884  00FE63  0010               	dw	16
  1885  00FE65  0010               	dw	16
  1886  00FE67  0000               	dw	0
  1887  00FE69  0000               	dw	0
  1888  00FE6B  0007               	dw	7
  1889  00FE6D  0000               	dw	0
  1890  00FE6F  0000               	dw	0
  1891  00FE71  0000               	dw	0
  1892  00FE73  0001               	dw	1
  1893  00FE75  0080               	dw	128
  1894  00FE77  0002               	dw	2
  1895  00FE79  00FC               	dw	252
  1896  00FE7B  007E               	dw	126
  1897  00FE7D  0002               	dw	2
  1898  00FE7F  0080               	dw	128
  1899  00FE81  0002               	dw	2
  1900  00FE83  0080               	dw	128
  1901  00FE85  0000               	dw	0
  1902  00FE87  0000               	dw	0
  1903  00FE89  0007               	dw	7
  1904  00FE8B  0000               	dw	0
  1905  00FE8D  0000               	dw	0
  1906  00FE8F  0000               	dw	0
  1907  00FE91  0000               	dw	0
  1908  00FE93  0000               	dw	0
  1909  00FE95  0000               	dw	0
  1910  00FE97  0000               	dw	0
  1911  00FE99  0000               	dw	0
  1912  00FE9B  0000               	dw	0
  1913  00FE9D  0000               	dw	0
  1914  00FE9F  00FE               	dw	254
  1915  00FEA1  00FF               	dw	255
  1916  00FEA3  0000               	dw	0
  1917  00FEA5  0000               	dw	0
  1918  00FEA7  0006               	dw	6
  1919  00FEA9  0002               	dw	2
  1920  00FEAB  0080               	dw	128
  1921  00FEAD  0002               	dw	2
  1922  00FEAF  0080               	dw	128
  1923  00FEB1  00FC               	dw	252
  1924  00FEB3  007E               	dw	126
  1925  00FEB5  0080               	dw	128
  1926  00FEB7  0002               	dw	2
  1927  00FEB9  0000               	dw	0
  1928  00FEBB  0001               	dw	1
  1929  00FEBD  0000               	dw	0
  1930  00FEBF  0000               	dw	0
  1931  00FEC1  000A               	dw	10
  1932  00FEC3  0000               	dw	0
  1933  00FEC5  0000               	dw	0
  1934  00FEC7  0080               	dw	128
  1935  00FEC9  0000               	dw	0
  1936  00FECB  0040               	dw	64
  1937  00FECD  0000               	dw	0
  1938  00FECF  0040               	dw	64
  1939  00FED1  0000               	dw	0
  1940  00FED3  0040               	dw	64
  1941  00FED5  0000               	dw	0
  1942  00FED7  0080               	dw	128
  1943  00FED9  0000               	dw	0
  1944  00FEDB  0080               	dw	128
  1945  00FEDD  0000               	dw	0
  1946  00FEDF  0080               	dw	128
  1947  00FEE1  0000               	dw	0
  1948  00FEE3  0040               	dw	64
  1949  00FEE5  0000               	dw	0
  1950  00FEE7  0000               	dw	0
  1951  00FEE9  0000               	dw	0
  1952  00FEEB  0005               	dw	5
  1953  00FEED  00FF               	dw	255
  1954  00FEEF  000F               	dw	15
  1955  00FEF1  0001               	dw	1
  1956  00FEF3  0008               	dw	8
  1957  00FEF5  0001               	dw	1
  1958  00FEF7  0008               	dw	8
  1959  00FEF9  00FF               	dw	255
  1960  00FEFB  000F               	dw	15
  1961  00FEFD  0000               	dw	0
  1962  00FEFF  0000               	dw	0
  1963  00FF01                     __end_of_font:
  1964                           	opt callstack 0
  1965  00FF01                     _spi_configuration:
  1966                           	opt callstack 0
  1967  00FF01  00                 	db	0
  1968  00FF02  40                 	db	64
  1969  00FF03  01                 	db	1
  1970  00FF04  00                 	db	0
  1971  00FF05                     __end_of_spi_configuration:
  1972                           	opt callstack 0
  1973  00FF05                     STR_8:
  1974  00FF05  0A                 	db	10
  1975  00FF06  0A                 	db	10
  1976  00FF07  0D                 	db	13
  1977  00FF08  54                 	db	84	;'T'
  1978  00FF09  55                 	db	85	;'U'
  1979  00FF0A  52                 	db	82	;'R'
  1980  00FF0B  4E                 	db	78	;'N'
  1981  00FF0C  20                 	db	32
  1982  00FF0D  56                 	db	86	;'V'
  1983  00FF0E  41                 	db	65	;'A'
  1984  00FF0F  4C                 	db	76	;'L'
  1985  00FF10  55                 	db	85	;'U'
  1986  00FF11  45                 	db	69	;'E'
  1987  00FF12  53                 	db	83	;'S'
  1988  00FF13  20                 	db	32
  1989  00FF14  53                 	db	83	;'S'
  1990  00FF15  41                 	db	65	;'A'
  1991  00FF16  56                 	db	86	;'V'
  1992  00FF17  45                 	db	69	;'E'
  1993  00FF18  44                 	db	68	;'D'
  1994  00FF19  20                 	db	32
  1995  00FF1A  20                 	db	32
  1996  00FF1B  20                 	db	32
  1997  00FF1C  4F                 	db	79	;'O'
  1998  00FF1D  4E                 	db	78	;'N'
  1999  00FF1E  3A                 	db	58	;':'
  2000  00FF1F  20                 	db	32
  2001  00FF20  25                 	db	37
  2002  00FF21  64                 	db	100	;'d'
  2003  00FF22  20                 	db	32
  2004  00FF23  4F                 	db	79	;'O'
  2005  00FF24  46                 	db	70	;'F'
  2006  00FF25  46                 	db	70	;'F'
  2007  00FF26  3A                 	db	58	;':'
  2008  00FF27  20                 	db	32
  2009  00FF28  25                 	db	37
  2010  00FF29  64                 	db	100	;'d'
  2011  00FF2A  0A                 	db	10
  2012  00FF2B  0D                 	db	13
  2013  00FF2C  00                 	db	0
  2014  00FF2D                     STR_5:
  2015  00FF2D  0A                 	db	10
  2016  00FF2E  0D                 	db	13
  2017  00FF2F  41                 	db	65	;'A'
  2018  00FF30  43                 	db	67	;'C'
  2019  00FF31  54                 	db	84	;'T'
  2020  00FF32  55                 	db	85	;'U'
  2021  00FF33  41                 	db	65	;'A'
  2022  00FF34  4C                 	db	76	;'L'
  2023  00FF35  20                 	db	32
  2024  00FF36  54                 	db	84	;'T'
  2025  00FF37  55                 	db	85	;'U'
  2026  00FF38  52                 	db	82	;'R'
  2027  00FF39  4E                 	db	78	;'N'
  2028  00FF3A  20                 	db	32
  2029  00FF3B  56                 	db	86	;'V'
  2030  00FF3C  41                 	db	65	;'A'
  2031  00FF3D  4C                 	db	76	;'L'
  2032  00FF3E  55                 	db	85	;'U'
  2033  00FF3F  45                 	db	69	;'E'
  2034  00FF40  53                 	db	83	;'S'
  2035  00FF41  20                 	db	32
  2036  00FF42  20                 	db	32
  2037  00FF43  4F                 	db	79	;'O'
  2038  00FF44  4E                 	db	78	;'N'
  2039  00FF45  3A                 	db	58	;':'
  2040  00FF46  20                 	db	32
  2041  00FF47  25                 	db	37
  2042  00FF48  64                 	db	100	;'d'
  2043  00FF49  20                 	db	32
  2044  00FF4A  4F                 	db	79	;'O'
  2045  00FF4B  46                 	db	70	;'F'
  2046  00FF4C  46                 	db	70	;'F'
  2047  00FF4D  3A                 	db	58	;':'
  2048  00FF4E  20                 	db	32
  2049  00FF4F  25                 	db	37
  2050  00FF50  64                 	db	100	;'d'
  2051  00FF51  0A                 	db	10
  2052  00FF52  0D                 	db	13
  2053  00FF53  00                 	db	0
  2054  00FF54                     STR_2:
  2055  00FF54  45                 	db	69	;'E'
  2056  00FF55  41                 	db	65	;'A'
  2057  00FF56  55                 	db	85	;'U'
  2058  00FF57  20                 	db	32
  2059  00FF58  20                 	db	32
  2060  00FF59  20                 	db	32
  2061  00FF5A  20                 	db	32
  2062  00FF5B  20                 	db	32
  2063  00FF5C  20                 	db	32
  2064  00FF5D  20                 	db	32
  2065  00FF5E  20                 	db	32
  2066  00FF5F  20                 	db	32
  2067  00FF60  20                 	db	32
  2068  00FF61  53                 	db	83	;'S'
  2069  00FF62  45                 	db	69	;'E'
  2070  00FF63  45                 	db	69	;'E'
  2071  00FF64  56                 	db	86	;'V'
  2072  00FF65  20                 	db	32
  2073  00FF66  20                 	db	32
  2074  00FF67  20                 	db	32
  2075  00FF68  20                 	db	32
  2076  00FF69  20                 	db	32
  2077  00FF6A  20                 	db	32
  2078  00FF6B  20                 	db	32
  2079  00FF6C  20                 	db	32
  2080  00FF6D  20                 	db	32
  2081  00FF6E  41                 	db	65	;'A'
  2082  00FF6F  55                 	db	85	;'U'
  2083  00FF70  4C                 	db	76	;'L'
  2084  00FF71  41                 	db	65	;'A'
  2085  00FF72  5F                 	db	95	;'_'
  2086  00FF73  35                 	db	53	;'5'
  2087  00FF74  00                 	db	0
  2088  00FF75                     STR_4:
  2089  00FF75  43                 	db	67	;'C'
  2090  00FF76  6F                 	db	111	;'o'
  2091  00FF77  6E                 	db	110	;'n'
  2092  00FF78  66                 	db	102	;'f'
  2093  00FF79  69                 	db	105	;'i'
  2094  00FF7A  67                 	db	103	;'g'
  2095  00FF7B  75                 	db	117	;'u'
  2096  00FF7C  72                 	db	114	;'r'
  2097  00FF7D  61                 	db	97	;'a'
  2098  00FF7E  74                 	db	116	;'t'
  2099  00FF7F  69                 	db	105	;'i'
  2100  00FF80  6F                 	db	111	;'o'
  2101  00FF81  6E                 	db	110	;'n'
  2102  00FF82  20                 	db	32
  2103  00FF83  4D                 	db	77	;'M'
  2104  00FF84  4F                 	db	79	;'O'
  2105  00FF85  44                 	db	68	;'D'
  2106  00FF86  45                 	db	69	;'E'
  2107  00FF87  20                 	db	32
  2108  00FF88  0A                 	db	10
  2109  00FF89  0D                 	db	13
  2110  00FF8A  00                 	db	0
  2111  00FF8B                     STR_7:
  2112  00FF8B  0A                 	db	10
  2113  00FF8C  0D                 	db	13
  2114  00FF8D  54                 	db	84	;'T'
  2115  00FF8E  75                 	db	117	;'u'
  2116  00FF8F  72                 	db	114	;'r'
  2117  00FF90  6E                 	db	110	;'n'
  2118  00FF91  20                 	db	32
  2119  00FF92  4F                 	db	79	;'O'
  2120  00FF93  46                 	db	70	;'F'
  2121  00FF94  46                 	db	70	;'F'
  2122  00FF95  20                 	db	32
  2123  00FF96  56                 	db	86	;'V'
  2124  00FF97  61                 	db	97	;'a'
  2125  00FF98  6C                 	db	108	;'l'
  2126  00FF99  75                 	db	117	;'u'
  2127  00FF9A  65                 	db	101	;'e'
  2128  00FF9B  3A                 	db	58	;':'
  2129  00FF9C  20                 	db	32
  2130  00FF9D  0A                 	db	10
  2131  00FF9E  0D                 	db	13
  2132  00FF9F  00                 	db	0
  2133  00FFA0                     STR_6:
  2134  00FFA0  0A                 	db	10
  2135  00FFA1  0D                 	db	13
  2136  00FFA2  54                 	db	84	;'T'
  2137  00FFA3  75                 	db	117	;'u'
  2138  00FFA4  72                 	db	114	;'r'
  2139  00FFA5  6E                 	db	110	;'n'
  2140  00FFA6  20                 	db	32
  2141  00FFA7  4F                 	db	79	;'O'
  2142  00FFA8  4E                 	db	78	;'N'
  2143  00FFA9  20                 	db	32
  2144  00FFAA  56                 	db	86	;'V'
  2145  00FFAB  61                 	db	97	;'a'
  2146  00FFAC  6C                 	db	108	;'l'
  2147  00FFAD  75                 	db	117	;'u'
  2148  00FFAE  65                 	db	101	;'e'
  2149  00FFAF  3A                 	db	58	;':'
  2150  00FFB0  20                 	db	32
  2151  00FFB1  0A                 	db	10
  2152  00FFB2  0D                 	db	13
  2153  00FFB3  00                 	db	0
  2154  00FFB4                     STR_1:
  2155  00FFB4  0C                 	db	12
  2156  00FFB5  0D                 	db	13
  2157  00FFB6  50                 	db	80	;'P'
  2158  00FFB7  4F                 	db	79	;'O'
  2159  00FFB8  54                 	db	84	;'T'
  2160  00FFB9  3A                 	db	58	;':'
  2161  00FFBA  20                 	db	32
  2162  00FFBB  25                 	db	37
  2163  00FFBC  33                 	db	51	;'3'
  2164  00FFBD  64                 	db	100	;'d'
  2165  00FFBE  20                 	db	32
  2166  00FFBF  0D                 	db	13
  2167  00FFC0  00                 	db	0
  2168  00FFC1                     STR_3:
  2169  00FFC1  50                 	db	80	;'P'
  2170  00FFC2  4F                 	db	79	;'O'
  2171  00FFC3  54                 	db	84	;'T'
  2172  00FFC4  3A                 	db	58	;':'
  2173  00FFC5  20                 	db	32
  2174  00FFC6  25                 	db	37
  2175  00FFC7  33                 	db	51	;'3'
  2176  00FFC8  64                 	db	100	;'d'
  2177  00FFC9  20                 	db	32
  2178  00FFCA  25                 	db	37
  2179  00FFCB  25                 	db	37
  2180  00FFCC  00                 	db	0
  2181  00FFCD                     STR_85:
  2182  00FFCD  68                 	db	104	;'h'
  2183  00FFCE  68                 	db	104	;'h'
  2184  00FFCF  58                 	db	88	;'X'
  2185  00FFD0  00                 	db	0
  2186  00FFD1                     STR_9:
  2187  00FFD1  68                 	db	104	;'h'
  2188  00FFD2  68                 	db	104	;'h'
  2189  00FFD3  64                 	db	100	;'d'
  2190  00FFD4  00                 	db	0
  2191  00FFD5                     STR_13:
  2192  00FFD5  68                 	db	104	;'h'
  2193  00FFD6  68                 	db	104	;'h'
  2194  00FFD7  69                 	db	105	;'i'
  2195  00FFD8  00                 	db	0
  2196  00FFD9                     STR_51:
  2197  00FFD9  68                 	db	104	;'h'
  2198  00FFDA  68                 	db	104	;'h'
  2199  00FFDB  6E                 	db	110	;'n'
  2200  00FFDC  00                 	db	0
  2201  00FFDD                     STR_36:
  2202  00FFDD  68                 	db	104	;'h'
  2203  00FFDE  68                 	db	104	;'h'
  2204  00FFDF  6F                 	db	111	;'o'
  2205  00FFE0  00                 	db	0
  2206  00FFE1                     STR_66:
  2207  00FFE1  68                 	db	104	;'h'
  2208  00FFE2  68                 	db	104	;'h'
  2209  00FFE3  75                 	db	117	;'u'
  2210  00FFE4  00                 	db	0
  2211  00FFE5                     STR_81:
  2212  00FFE5  68                 	db	104	;'h'
  2213  00FFE6  68                 	db	104	;'h'
  2214  00FFE7  78                 	db	120	;'x'
  2215  00FFE8  00                 	db	0
  2216  00FFE9                     STR_103:
  2217  00FFE9  7A                 	db	122	;'z'
  2218  00FFEA  58                 	db	88	;'X'
  2219  00FFEB  00                 	db	0
  2220  00FFEC                     STR_27:
  2221  00FFEC  7A                 	db	122	;'z'
  2222  00FFED  64                 	db	100	;'d'
  2223  00FFEE  00                 	db	0
  2224  00FFEF                     STR_31:
  2225  00FFEF  7A                 	db	122	;'z'
  2226  00FFF0  69                 	db	105	;'i'
  2227  00FFF1  00                 	db	0
  2228  00FFF2                     STR_61:
  2229  00FFF2  7A                 	db	122	;'z'
  2230  00FFF3  6E                 	db	110	;'n'
  2231  00FFF4  00                 	db	0
  2232  00FFF5                     STR_46:
  2233  00FFF5  7A                 	db	122	;'z'
  2234  00FFF6  6F                 	db	111	;'o'
  2235  00FFF7  00                 	db	0
  2236  00FFF8                     STR_76:
  2237  00FFF8  7A                 	db	122	;'z'
  2238  00FFF9  75                 	db	117	;'u'
  2239  00FFFA  00                 	db	0
  2240  00FFFB                     STR_99:
  2241  00FFFB  7A                 	db	122	;'z'
  2242  00FFFC  78                 	db	120	;'x'
  2243  00FFFD  00                 	db	0
  2244  0000                     
  2245                           ; #config settings
  2246  00FFFE  00                 	db	0	; dummy byte at the end
  2247  0000                     
  2248                           	psect	nvCOMRAM
  2249  00005B                     __pnvCOMRAM:
  2250                           	opt callstack 0
  2251  00005B                     _timer0ReloadVal:
  2252                           	opt callstack 0
  2253  00005B                     	ds	2
  2254                           
  2255                           	psect	nvBANK0
  2256  0000C2                     __pnvBANK0:
  2257                           	opt callstack 0
  2258  0000C2                     _EUSART1_ErrorHandler:
  2259                           	opt callstack 0
  2260  0000C2                     	ds	2
  2261  0000C4                     _EUSART1_OverrunErrorHandler:
  2262                           	opt callstack 0
  2263  0000C4                     	ds	2
  2264  0000C6                     _EUSART1_FramingErrorHandler:
  2265                           	opt callstack 0
  2266  0000C6                     	ds	2
  2267  0000C8                     _timer1ReloadVal:
  2268                           	opt callstack 0
  2269  0000C8                     	ds	2
  2270  0000CA                     _IOCB4_InterruptHandler:
  2271                           	opt callstack 0
  2272  0000CA                     	ds	2
  2273  0000                     _IOCBbits	set	3930
  2274  0000                     _WPUB	set	3931
  2275  0000                     _ANCON1	set	3932
  2276  0000                     _ANCON0	set	3933
  2277  0000                     _LATEbits	set	3981
  2278  0000                     _SSPSTATbits	set	4039
  2279  0000                     _LATAbits	set	3977
  2280  0000                     _PORTB	set	3969
  2281  0000                     _PORTBbits	set	3969
  2282  0000                     _T0CON	set	4053
  2283  0000                     _TMR0L	set	4054
  2284  0000                     _TMR0H	set	4055
  2285  0000                     _T0CONbits	set	4053
  2286  0000                     _RCONbits	set	4048
  2287  0000                     _TXREG1	set	4013
  2288  0000                     _RCREG1	set	4014
  2289  0000                     _RCSTA1bits	set	4011
  2290  0000                     _TXSTA1bits	set	4012
  2291  0000                     _SPBRGH1	set	3965
  2292  0000                     _SPBRG1	set	4015
  2293  0000                     _TXSTA1	set	4012
  2294  0000                     _RCSTA1	set	4011
  2295  0000                     _BAUDCON1	set	4007
  2296  0000                     _T1GCONbits	set	4010
  2297  0000                     _T1CONbits	set	4045
  2298  0000                     _T1CON	set	4045
  2299  0000                     _TMR1L	set	4046
  2300  0000                     _TMR1H	set	4047
  2301  0000                     _T1GCON	set	4010
  2302  0000                     _ADCON0bits	set	4034
  2303  0000                     _ADRESL	set	4035
  2304  0000                     _ADRESH	set	4036
  2305  0000                     _ADCON2	set	4032
  2306  0000                     _ADCON1	set	4033
  2307  0000                     _ADCON0	set	4034
  2308  0000                     _INTCONbits	set	4082
  2309  0000                     _INTCON2bits	set	4081
  2310  0000                     _TRISD	set	3989
  2311  0000                     _TRISC	set	3988
  2312  0000                     _TRISB	set	3987
  2313  0000                     _TRISA	set	3986
  2314  0000                     _TRISE	set	3990
  2315  0000                     _LATC	set	3979
  2316  0000                     _LATB	set	3978
  2317  0000                     _LATA	set	3977
  2318  0000                     _LATD	set	3980
  2319  0000                     _LATE	set	3981
  2320  0000                     _PIR1bits	set	3998
  2321  0000                     _SSPBUF	set	4041
  2322  0000                     _SSPCON2	set	4037
  2323  0000                     _SSPCON1bits	set	4038
  2324  0000                     _TRISCbits	set	3988
  2325  0000                     _SSPADD	set	4040
  2326  0000                     _SSPCON1	set	4038
  2327  0000                     _SSPSTAT	set	4039
  2328  0000                     _REFOCON	set	3994
  2329  0000                     _OSCTUNE	set	3995
  2330  0000                     _OSCCON2	set	4050
  2331  0000                     _OSCCON	set	4051
  2332                           
  2333                           	psect	cinit
  2334  005CEC                     __pcinit:
  2335                           	opt callstack 0
  2336  005CEC                     start_initialization:
  2337                           	opt callstack 0
  2338  005CEC                     __initialization:
  2339                           	opt callstack 0
  2340                           
  2341                           ; Initialize objects allocated to BANK1 (4 bytes)
  2342                           ; load TBLPTR registers with __pidataBANK1
  2343  005CEC  0EE1               	movlw	low __pidataBANK1
  2344  005CEE  6EF6               	movwf	tblptrl,c
  2345  005CF0  0E68               	movlw	high __pidataBANK1
  2346  005CF2  6EF7               	movwf	tblptrh,c
  2347  005CF4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2348  005CF6  6EF8               	movwf	tblptru,c
  2349  005CF8  EE01  F0B6         	lfsr	0,__pdataBANK1
  2350  005CFC  EE10 F004          	lfsr	1,4
  2351  005D00                     copy_data0:
  2352  005D00  0009               	tblrd		*+
  2353  005D02  CFF5 FFEE          	movff	tablat,postinc0
  2354  005D06  50E5               	movf	postdec1,w,c
  2355  005D08  50E1               	movf	fsr1l,w,c
  2356  005D0A  E1FA               	bnz	copy_data0
  2357                           
  2358                           ; Initialize objects allocated to BANK0 (7 bytes)
  2359                           ; load TBLPTR registers with __pidataBANK0
  2360  005D0C  0EDA               	movlw	low __pidataBANK0
  2361  005D0E  6EF6               	movwf	tblptrl,c
  2362  005D10  0E68               	movlw	high __pidataBANK0
  2363  005D12  6EF7               	movwf	tblptrh,c
  2364  005D14  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2365  005D16  6EF8               	movwf	tblptru,c
  2366  005D18  EE00  F0CC         	lfsr	0,__pdataBANK0
  2367  005D1C  EE10 F007          	lfsr	1,7
  2368  005D20                     copy_data1:
  2369  005D20  0009               	tblrd		*+
  2370  005D22  CFF5 FFEE          	movff	tablat,postinc0
  2371  005D26  50E5               	movf	postdec1,w,c
  2372  005D28  50E1               	movf	fsr1l,w,c
  2373  005D2A  E1FA               	bnz	copy_data1
  2374                           
  2375                           ; Clear objects allocated to BANK1 (68 bytes)
  2376  005D2C  EE01  F072         	lfsr	0,__pbssBANK1
  2377  005D30  0E44               	movlw	68
  2378  005D32                     clear_0:
  2379  005D32  6AEE               	clrf	postinc0,c
  2380  005D34  06E8               	decf	wreg,f,c
  2381  005D36  E1FD               	bnz	clear_0
  2382                           
  2383                           ; Clear objects allocated to BANK0 (13 bytes)
  2384  005D38  EE00  F0B5         	lfsr	0,__pbssBANK0
  2385  005D3C  0E0D               	movlw	13
  2386  005D3E                     clear_1:
  2387  005D3E  6AEE               	clrf	postinc0,c
  2388  005D40  06E8               	decf	wreg,f,c
  2389  005D42  E1FD               	bnz	clear_1
  2390                           
  2391                           ; Clear objects allocated to COMRAM (2 bytes)
  2392  005D44  6A5E               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2393  005D46  6A5D               	clrf	__pbssCOMRAM& (0+255),c
  2394  005D48                     end_of_initialization:
  2395                           	opt callstack 0
  2396  005D48                     __end_of__initialization:
  2397                           	opt callstack 0
  2398  005D48  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2399  005D4A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2400  005D4C  0100               	movlb	0
  2401  005D4E  EFDB  F01A         	goto	_main	;jump to C main() function
  2402                           
  2403                           	psect	bssCOMRAM
  2404  00005D                     __pbssCOMRAM:
  2405                           	opt callstack 0
  2406  00005D                     _ADC_InterruptHandler:
  2407                           	opt callstack 0
  2408  00005D                     	ds	2
  2409                           
  2410                           	psect	bssBANK0
  2411  0000B5                     __pbssBANK0:
  2412                           	opt callstack 0
  2413  0000B5                     _adc_perc:
  2414                           	opt callstack 0
  2415  0000B5                     	ds	4
  2416  0000B9                     _width:
  2417                           	opt callstack 0
  2418  0000B9                     	ds	2
  2419  0000BB                     _prec:
  2420                           	opt callstack 0
  2421  0000BB                     	ds	2
  2422  0000BD                     _flags:
  2423                           	opt callstack 0
  2424  0000BD                     	ds	2
  2425  0000BF                     _global_bg_color:
  2426                           	opt callstack 0
  2427  0000BF                     	ds	2
  2428  0000C1                     _eusart1RxLastError:
  2429                           	opt callstack 0
  2430  0000C1                     	ds	1
  2431                           
  2432                           	psect	dataBANK0
  2433  0000CC                     __pdataBANK0:
  2434                           	opt callstack 0
  2435  0000CC                     stoa@F1152:
  2436                           	opt callstack 0
  2437  0000CC                     	ds	7
  2438                           
  2439                           	psect	bssBANK1
  2440  000172                     __pbssBANK1:
  2441                           	opt callstack 0
  2442  000172                     _errno:
  2443                           	opt callstack 0
  2444  000172                     	ds	2
  2445  000174                     _nout:
  2446                           	opt callstack 0
  2447  000174                     	ds	2
  2448  000176                     _adc_value:
  2449                           	opt callstack 0
  2450  000176                     	ds	2
  2451  000178                     _dbuf:
  2452                           	opt callstack 0
  2453  000178                     	ds	32
  2454  000198                     _string:
  2455                           	opt callstack 0
  2456  000198                     	ds	30
  2457                           
  2458                           	psect	dataBANK1
  2459  0001B6                     __pdataBANK1:
  2460                           	opt callstack 0
  2461  0001B6                     _turn_off_value:
  2462                           	opt callstack 0
  2463  0001B6                     	ds	2
  2464  0001B8                     _turn_on_value:
  2465                           	opt callstack 0
  2466  0001B8                     	ds	2
  2467                           
  2468                           	psect	cstackBANK1
  2469  000100                     __pcstackBANK1:
  2470                           	opt callstack 0
  2471  000100                     ??_dtoa:
  2472  000100                     ??_otoa:
  2473  000100                     ??_utoa:
  2474  000100                     ??_xtoa:
  2475  000100                     lcd_draw_string@x:
  2476                           	opt callstack 0
  2477                           
  2478                           ; 2 bytes @ 0x0
  2479  000100                     	ds	2
  2480  000102                     lcd_draw_string@y:
  2481                           	opt callstack 0
  2482                           
  2483                           ; 2 bytes @ 0x2
  2484  000102                     	ds	2
  2485  000104                     lcd_draw_string@pS:
  2486                           	opt callstack 0
  2487                           
  2488                           ; 2 bytes @ 0x4
  2489  000104                     	ds	2
  2490  000106                     lcd_draw_string@fg_color:
  2491                           	opt callstack 0
  2492                           
  2493                           ; 2 bytes @ 0x6
  2494  000106                     	ds	2
  2495  000108                     lcd_draw_string@bg_color:
  2496                           	opt callstack 0
  2497  000108                     _dtoa$1672:
  2498                           	opt callstack 0
  2499  000108                     otoa@p:
  2500                           	opt callstack 0
  2501  000108                     utoa@p:
  2502                           	opt callstack 0
  2503  000108                     _xtoa$1708:
  2504                           	opt callstack 0
  2505                           
  2506                           ; 2 bytes @ 0x8
  2507  000108                     	ds	2
  2508  00010A                     dtoa@p:
  2509                           	opt callstack 0
  2510  00010A                     otoa@t:
  2511                           	opt callstack 0
  2512  00010A                     utoa@w:
  2513                           	opt callstack 0
  2514  00010A                     _xtoa$1709:
  2515                           	opt callstack 0
  2516                           
  2517                           ; 2 bytes @ 0xA
  2518  00010A                     	ds	2
  2519  00010C                     dtoa@w:
  2520                           	opt callstack 0
  2521  00010C                     otoa@w:
  2522                           	opt callstack 0
  2523  00010C                     xtoa@p:
  2524                           	opt callstack 0
  2525  00010C                     utoa@n:
  2526                           	opt callstack 0
  2527                           
  2528                           ; 8 bytes @ 0xC
  2529  00010C                     	ds	2
  2530  00010E                     dtoa@s:
  2531                           	opt callstack 0
  2532  00010E                     xtoa@w:
  2533                           	opt callstack 0
  2534  00010E                     otoa@n:
  2535                           	opt callstack 0
  2536                           
  2537                           ; 8 bytes @ 0xE
  2538  00010E                     	ds	2
  2539  000110                     dtoa@n:
  2540                           	opt callstack 0
  2541  000110                     xtoa@n:
  2542                           	opt callstack 0
  2543                           
  2544                           ; 8 bytes @ 0x10
  2545  000110                     	ds	4
  2546  000114                     utoa@i:
  2547                           	opt callstack 0
  2548                           
  2549                           ; 2 bytes @ 0x14
  2550  000114                     	ds	2
  2551  000116                     otoa@i:
  2552                           	opt callstack 0
  2553                           
  2554                           ; 2 bytes @ 0x16
  2555  000116                     	ds	2
  2556  000118                     dtoa@i:
  2557                           	opt callstack 0
  2558  000118                     xtoa@i:
  2559                           	opt callstack 0
  2560                           
  2561                           ; 2 bytes @ 0x18
  2562  000118                     	ds	2
  2563  00011A                     xtoa@c:
  2564                           	opt callstack 0
  2565                           
  2566                           ; 2 bytes @ 0x1A
  2567  00011A                     	ds	2
  2568  00011C                     ?_vfpfcnvrt:
  2569                           	opt callstack 0
  2570  00011C                     vfpfcnvrt@fp:
  2571                           	opt callstack 0
  2572                           
  2573                           ; 2 bytes @ 0x1C
  2574  00011C                     	ds	2
  2575  00011E                     vfpfcnvrt@fmt:
  2576                           	opt callstack 0
  2577                           
  2578                           ; 2 bytes @ 0x1E
  2579  00011E                     	ds	2
  2580  000120                     vfpfcnvrt@ap:
  2581                           	opt callstack 0
  2582                           
  2583                           ; 2 bytes @ 0x20
  2584  000120                     	ds	2
  2585  000122                     ??_vfpfcnvrt:
  2586                           
  2587                           ; 1 bytes @ 0x22
  2588  000122                     	ds	4
  2589  000126                     vfpfcnvrt@cp:
  2590                           	opt callstack 0
  2591                           
  2592                           ; 2 bytes @ 0x26
  2593  000126                     	ds	2
  2594  000128                     vfpfcnvrt@done:
  2595                           	opt callstack 0
  2596                           
  2597                           ; 2 bytes @ 0x28
  2598  000128                     	ds	2
  2599  00012A                     _vfpfcnvrt$1723:
  2600                           	opt callstack 0
  2601                           
  2602                           ; 2 bytes @ 0x2A
  2603  00012A                     	ds	2
  2604  00012C                     _vfpfcnvrt$1724:
  2605                           	opt callstack 0
  2606                           
  2607                           ; 2 bytes @ 0x2C
  2608  00012C                     	ds	2
  2609  00012E                     vfpfcnvrt@ll:
  2610                           	opt callstack 0
  2611                           
  2612                           ; 8 bytes @ 0x2E
  2613  00012E                     	ds	8
  2614  000136                     vfpfcnvrt@vp:
  2615                           	opt callstack 0
  2616                           
  2617                           ; 2 bytes @ 0x36
  2618  000136                     	ds	2
  2619  000138                     vfpfcnvrt@c:
  2620                           	opt callstack 0
  2621                           
  2622                           ; 1 bytes @ 0x38
  2623  000138                     	ds	1
  2624  000139                     vfpfcnvrt@llu:
  2625                           	opt callstack 0
  2626                           
  2627                           ; 8 bytes @ 0x39
  2628  000139                     	ds	8
  2629  000141                     ?_vfprintf:
  2630                           	opt callstack 0
  2631  000141                     vfprintf@fp:
  2632                           	opt callstack 0
  2633                           
  2634                           ; 2 bytes @ 0x41
  2635  000141                     	ds	2
  2636  000143                     vfprintf@fmt:
  2637                           	opt callstack 0
  2638                           
  2639                           ; 2 bytes @ 0x43
  2640  000143                     	ds	2
  2641  000145                     vfprintf@ap:
  2642                           	opt callstack 0
  2643                           
  2644                           ; 2 bytes @ 0x45
  2645  000145                     	ds	2
  2646  000147                     vfprintf@cfmt:
  2647                           	opt callstack 0
  2648                           
  2649                           ; 2 bytes @ 0x47
  2650  000147                     	ds	2
  2651  000149                     ?_printf:
  2652                           	opt callstack 0
  2653  000149                     ?_vsnprintf:
  2654                           	opt callstack 0
  2655  000149                     printf@fmt:
  2656                           	opt callstack 0
  2657  000149                     vsnprintf@s:
  2658                           	opt callstack 0
  2659                           
  2660                           ; 2 bytes @ 0x49
  2661  000149                     	ds	2
  2662  00014B                     vsnprintf@n:
  2663                           	opt callstack 0
  2664                           
  2665                           ; 2 bytes @ 0x4B
  2666  00014B                     	ds	2
  2667  00014D                     vsnprintf@fmt:
  2668                           	opt callstack 0
  2669                           
  2670                           ; 2 bytes @ 0x4D
  2671  00014D                     	ds	2
  2672  00014F                     vsnprintf@ap:
  2673                           	opt callstack 0
  2674                           
  2675                           ; 2 bytes @ 0x4F
  2676  00014F                     	ds	2
  2677  000151                     ??_vsnprintf:
  2678  000151                     printf@ap:
  2679                           	opt callstack 0
  2680                           
  2681                           ; 2 bytes @ 0x51
  2682  000151                     	ds	4
  2683  000155                     _vsnprintf$2430:
  2684                           	opt callstack 0
  2685                           
  2686                           ; 2 bytes @ 0x55
  2687  000155                     	ds	2
  2688  000157                     vsnprintf@cnt:
  2689                           	opt callstack 0
  2690                           
  2691                           ; 2 bytes @ 0x57
  2692  000157                     	ds	2
  2693  000159                     vsnprintf@f:
  2694                           	opt callstack 0
  2695                           
  2696                           ; 6 bytes @ 0x59
  2697  000159                     	ds	6
  2698  00015F                     ?_snprintf:
  2699                           	opt callstack 0
  2700  00015F                     snprintf@s:
  2701                           	opt callstack 0
  2702                           
  2703                           ; 2 bytes @ 0x5F
  2704  00015F                     	ds	2
  2705  000161                     snprintf@n:
  2706                           	opt callstack 0
  2707                           
  2708                           ; 2 bytes @ 0x61
  2709  000161                     	ds	2
  2710  000163                     snprintf@fmt:
  2711                           	opt callstack 0
  2712                           
  2713                           ; 2 bytes @ 0x63
  2714  000163                     	ds	8
  2715  00016B                     snprintf@ap:
  2716                           	opt callstack 0
  2717                           
  2718                           ; 2 bytes @ 0x6B
  2719  00016B                     	ds	2
  2720  00016D                     ??_main:
  2721                           
  2722                           ; 1 bytes @ 0x6D
  2723  00016D                     	ds	5
  2724                           
  2725                           	psect	cstackBANK0
  2726  000060                     __pcstackBANK0:
  2727                           	opt callstack 0
  2728  000060                     i2vfpfcnvrt@cp:
  2729                           	opt callstack 0
  2730                           
  2731                           ; 2 bytes @ 0x0
  2732  000060                     	ds	2
  2733  000062                     i2vfpfcnvrt@done:
  2734                           	opt callstack 0
  2735                           
  2736                           ; 2 bytes @ 0x2
  2737  000062                     	ds	2
  2738  000064                     i2_vfpfcnvrt$1723:
  2739                           	opt callstack 0
  2740                           
  2741                           ; 2 bytes @ 0x4
  2742  000064                     	ds	2
  2743  000066                     i2_vfpfcnvrt$1724:
  2744                           	opt callstack 0
  2745                           
  2746                           ; 2 bytes @ 0x6
  2747  000066                     	ds	2
  2748  000068                     i2vfpfcnvrt@ll:
  2749                           	opt callstack 0
  2750                           
  2751                           ; 8 bytes @ 0x8
  2752  000068                     	ds	8
  2753  000070                     i2vfpfcnvrt@vp:
  2754                           	opt callstack 0
  2755                           
  2756                           ; 2 bytes @ 0x10
  2757  000070                     	ds	2
  2758  000072                     i2vfpfcnvrt@c:
  2759                           	opt callstack 0
  2760                           
  2761                           ; 1 bytes @ 0x12
  2762  000072                     	ds	1
  2763  000073                     i2vfpfcnvrt@llu:
  2764                           	opt callstack 0
  2765                           
  2766                           ; 8 bytes @ 0x13
  2767  000073                     	ds	8
  2768  00007B                     ?i2_printf:
  2769                           	opt callstack 0
  2770  00007B                     i2printf@fmt:
  2771                           	opt callstack 0
  2772                           
  2773                           ; 2 bytes @ 0x1B
  2774  00007B                     	ds	6
  2775  000081                     ??_INTERRUPT_InterruptManager:
  2776                           
  2777                           ; 1 bytes @ 0x21
  2778  000081                     	ds	12
  2779  00008D                     ??_TMR1_Initialize:
  2780  00008D                     ??_TMR0_Initialize:
  2781  00008D                     ??_SPI_Open:
  2782  00008D                     ??_msDelay:
  2783  00008D                     ?_strlen:
  2784                           	opt callstack 0
  2785  00008D                     ?_isupper:
  2786                           	opt callstack 0
  2787  00008D                     ?_isalpha:
  2788                           	opt callstack 0
  2789  00008D                     ?_isdigit:
  2790                           	opt callstack 0
  2791  00008D                     ?_strncmp:
  2792                           	opt callstack 0
  2793  00008D                     ?_isspace:
  2794                           	opt callstack 0
  2795  00008D                     ?_islower:
  2796                           	opt callstack 0
  2797  00008D                     ?_ADC_GetConversion:
  2798                           	opt callstack 0
  2799  00008D                     ?_TMR0_ReadTimer:
  2800                           	opt callstack 0
  2801  00008D                     ?___wmul:
  2802                           	opt callstack 0
  2803  00008D                     ?___lmul:
  2804                           	opt callstack 0
  2805  00008D                     ?___aodiv:
  2806                           	opt callstack 0
  2807  00008D                     ?___aomod:
  2808                           	opt callstack 0
  2809  00008D                     ?___lodiv:
  2810                           	opt callstack 0
  2811  00008D                     ?___lomod:
  2812                           	opt callstack 0
  2813  00008D                     SPI_ExchangeByte@data:
  2814                           	opt callstack 0
  2815  00008D                     _EUSART1_is_tx_ready$859:
  2816                           	opt callstack 0
  2817  00008D                     EUSART1_Write@txData:
  2818                           	opt callstack 0
  2819  00008D                     IOCB4_SetInterruptHandler@InterruptHandler:
  2820                           	opt callstack 0
  2821  00008D                     EUSART1_SetFramingErrorHandler@interruptHandler:
  2822                           	opt callstack 0
  2823  00008D                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  2824                           	opt callstack 0
  2825  00008D                     EUSART1_SetErrorHandler@interruptHandler:
  2826                           	opt callstack 0
  2827  00008D                     TMR0_WriteTimer@timerVal:
  2828                           	opt callstack 0
  2829  00008D                     ___wmul@multiplier:
  2830                           	opt callstack 0
  2831  00008D                     isalpha@c:
  2832                           	opt callstack 0
  2833  00008D                     isdigit@c:
  2834                           	opt callstack 0
  2835  00008D                     isspace@c:
  2836                           	opt callstack 0
  2837  00008D                     isupper@c:
  2838                           	opt callstack 0
  2839  00008D                     strlen@s:
  2840                           	opt callstack 0
  2841  00008D                     strncmp@_l:
  2842                           	opt callstack 0
  2843  00008D                     islower@c:
  2844                           	opt callstack 0
  2845  00008D                     ___lmul@multiplier:
  2846                           	opt callstack 0
  2847  00008D                     ___aodiv@dividend:
  2848                           	opt callstack 0
  2849  00008D                     ___aomod@dividend:
  2850                           	opt callstack 0
  2851  00008D                     ___lodiv@dividend:
  2852                           	opt callstack 0
  2853  00008D                     ___lomod@dividend:
  2854                           	opt callstack 0
  2855                           
  2856                           ; 8 bytes @ 0x2D
  2857  00008D                     	ds	1
  2858  00008E                     SPI_Open@spiUniqueConfiguration:
  2859                           	opt callstack 0
  2860  00008E                     putch@txData:
  2861                           	opt callstack 0
  2862  00008E                     msDelay@ms:
  2863                           	opt callstack 0
  2864  00008E                     lcd_send@value:
  2865                           	opt callstack 0
  2866                           
  2867                           ; 1 bytes @ 0x2E
  2868  00008E                     	ds	1
  2869  00008F                     ??_isupper:
  2870  00008F                     ??_isalpha:
  2871  00008F                     ??_isdigit:
  2872  00008F                     ??_isspace:
  2873  00008F                     ??_islower:
  2874  00008F                     ??_ADC_GetConversion:
  2875  00008F                     ??_TMR0_ReadTimer:
  2876  00008F                     msDelay@k:
  2877                           	opt callstack 0
  2878  00008F                     lcd_send@dc:
  2879                           	opt callstack 0
  2880  00008F                     ___wmul@multiplicand:
  2881                           	opt callstack 0
  2882  00008F                     fputc@c:
  2883                           	opt callstack 0
  2884  00008F                     strlen@a:
  2885                           	opt callstack 0
  2886  00008F                     strncmp@_r:
  2887                           	opt callstack 0
  2888                           
  2889                           ; 2 bytes @ 0x2F
  2890  00008F                     	ds	1
  2891  000090                     lcd_set_cursor_x@x:
  2892                           	opt callstack 0
  2893  000090                     lcd_set_cursor_y@y:
  2894                           	opt callstack 0
  2895  000090                     lcd_draw_pixel@color:
  2896                           	opt callstack 0
  2897                           
  2898                           ; 2 bytes @ 0x30
  2899  000090                     	ds	1
  2900  000091                     ADC_GetConversion@channel:
  2901                           	opt callstack 0
  2902  000091                     TMR0_ReadTimer@readVal:
  2903                           	opt callstack 0
  2904  000091                     ___wmul@product:
  2905                           	opt callstack 0
  2906  000091                     fputc@fp:
  2907                           	opt callstack 0
  2908  000091                     strncmp@n:
  2909                           	opt callstack 0
  2910  000091                     ___lmul@multiplicand:
  2911                           	opt callstack 0
  2912                           
  2913                           ; 4 bytes @ 0x31
  2914  000091                     	ds	1
  2915  000092                     lcd_set_cursor@x:
  2916                           	opt callstack 0
  2917                           
  2918                           ; 2 bytes @ 0x32
  2919  000092                     	ds	1
  2920  000093                     ??_fputc:
  2921  000093                     ??_strncmp:
  2922  000093                     ?_toupper:
  2923                           	opt callstack 0
  2924  000093                     TMR0_ReadTimer@readValLow:
  2925                           	opt callstack 0
  2926  000093                     _isspace$2312:
  2927                           	opt callstack 0
  2928  000093                     toupper@c:
  2929                           	opt callstack 0
  2930                           
  2931                           ; 2 bytes @ 0x33
  2932  000093                     	ds	1
  2933  000094                     ?_atoi:
  2934                           	opt callstack 0
  2935  000094                     TMR0_ReadTimer@readValHigh:
  2936                           	opt callstack 0
  2937  000094                     lcd_set_cursor@y:
  2938                           	opt callstack 0
  2939  000094                     atoi@s:
  2940                           	opt callstack 0
  2941  000094                     strncmp@l:
  2942                           	opt callstack 0
  2943                           
  2944                           ; 2 bytes @ 0x34
  2945  000094                     	ds	1
  2946  000095                     ??_toupper:
  2947  000095                     ___lmul@product:
  2948                           	opt callstack 0
  2949  000095                     ___aodiv@divisor:
  2950                           	opt callstack 0
  2951  000095                     ___aomod@divisor:
  2952                           	opt callstack 0
  2953  000095                     ___lodiv@divisor:
  2954                           	opt callstack 0
  2955  000095                     ___lomod@divisor:
  2956                           	opt callstack 0
  2957                           
  2958                           ; 8 bytes @ 0x35
  2959  000095                     	ds	1
  2960  000096                     ??_atoi:
  2961  000096                     lcd_fill@bg_color:
  2962                           	opt callstack 0
  2963  000096                     lcd_draw_char@x:
  2964                           	opt callstack 0
  2965  000096                     strncmp@r:
  2966                           	opt callstack 0
  2967                           
  2968                           ; 2 bytes @ 0x36
  2969  000096                     	ds	2
  2970  000098                     ?_stoa:
  2971                           	opt callstack 0
  2972  000098                     lcd_fill@height:
  2973                           	opt callstack 0
  2974  000098                     lcd_draw_char@y:
  2975                           	opt callstack 0
  2976  000098                     stoa@fp:
  2977                           	opt callstack 0
  2978  000098                     fputs@s:
  2979                           	opt callstack 0
  2980                           
  2981                           ; 2 bytes @ 0x38
  2982  000098                     	ds	1
  2983  000099                     ?___aldiv:
  2984                           	opt callstack 0
  2985  000099                     _toupper$2399:
  2986                           	opt callstack 0
  2987  000099                     ___aldiv@dividend:
  2988                           	opt callstack 0
  2989                           
  2990                           ; 4 bytes @ 0x39
  2991  000099                     	ds	1
  2992  00009A                     lcd_fill@width:
  2993                           	opt callstack 0
  2994  00009A                     lcd_draw_char@fIndex:
  2995                           	opt callstack 0
  2996  00009A                     stoa@s:
  2997                           	opt callstack 0
  2998  00009A                     atoi@neg:
  2999                           	opt callstack 0
  3000  00009A                     fputs@fp:
  3001                           	opt callstack 0
  3002                           
  3003                           ; 2 bytes @ 0x3A
  3004  00009A                     	ds	2
  3005  00009C                     ??_stoa:
  3006  00009C                     fputs@c:
  3007                           	opt callstack 0
  3008  00009C                     lcd_draw_char@fg_color:
  3009                           	opt callstack 0
  3010  00009C                     _atoi$2285:
  3011                           	opt callstack 0
  3012                           
  3013                           ; 2 bytes @ 0x3C
  3014  00009C                     	ds	1
  3015  00009D                     ___aodiv@counter:
  3016                           	opt callstack 0
  3017  00009D                     ___aomod@counter:
  3018                           	opt callstack 0
  3019  00009D                     ___lomod@counter:
  3020                           	opt callstack 0
  3021  00009D                     fputs@i:
  3022                           	opt callstack 0
  3023  00009D                     ___aldiv@divisor:
  3024                           	opt callstack 0
  3025  00009D                     stoa@nuls:
  3026                           	opt callstack 0
  3027  00009D                     ___lodiv@quotient:
  3028                           	opt callstack 0
  3029                           
  3030                           ; 8 bytes @ 0x3D
  3031  00009D                     	ds	1
  3032  00009E                     ___aodiv@sign:
  3033                           	opt callstack 0
  3034  00009E                     ___aomod@sign:
  3035                           	opt callstack 0
  3036  00009E                     lcd_draw_char@bg_color:
  3037                           	opt callstack 0
  3038  00009E                     _atoi$2287:
  3039                           	opt callstack 0
  3040                           
  3041                           ; 2 bytes @ 0x3E
  3042  00009E                     	ds	1
  3043  00009F                     ?_abs:
  3044                           	opt callstack 0
  3045  00009F                     ?_pad:
  3046                           	opt callstack 0
  3047  00009F                     pad@fp:
  3048                           	opt callstack 0
  3049  00009F                     abs@a:
  3050                           	opt callstack 0
  3051  00009F                     ___aodiv@quotient:
  3052                           	opt callstack 0
  3053                           
  3054                           ; 8 bytes @ 0x3F
  3055  00009F                     	ds	1
  3056  0000A0                     ??_lcd_draw_char:
  3057  0000A0                     _atoi$2286:
  3058                           	opt callstack 0
  3059                           
  3060                           ; 1 bytes @ 0x40
  3061  0000A0                     	ds	1
  3062  0000A1                     ??_abs:
  3063  0000A1                     ___aldiv@counter:
  3064                           	opt callstack 0
  3065  0000A1                     pad@buf:
  3066                           	opt callstack 0
  3067  0000A1                     atoi@n:
  3068                           	opt callstack 0
  3069                           
  3070                           ; 2 bytes @ 0x41
  3071  0000A1                     	ds	1
  3072  0000A2                     ___aldiv@sign:
  3073                           	opt callstack 0
  3074                           
  3075                           ; 1 bytes @ 0x42
  3076  0000A2                     	ds	1
  3077  0000A3                     ?_read_from_usart:
  3078                           	opt callstack 0
  3079  0000A3                     read_from_usart@length:
  3080                           	opt callstack 0
  3081  0000A3                     pad@p:
  3082                           	opt callstack 0
  3083  0000A3                     ___aldiv@quotient:
  3084                           	opt callstack 0
  3085                           
  3086                           ; 4 bytes @ 0x43
  3087  0000A3                     	ds	1
  3088  0000A4                     stoa@i:
  3089                           	opt callstack 0
  3090                           
  3091                           ; 2 bytes @ 0x44
  3092  0000A4                     	ds	1
  3093  0000A5                     ??_read_from_usart:
  3094  0000A5                     ??_pad:
  3095  0000A5                     ___lodiv@counter:
  3096                           	opt callstack 0
  3097                           
  3098                           ; 1 bytes @ 0x45
  3099  0000A5                     	ds	1
  3100  0000A6                     pad@i:
  3101                           	opt callstack 0
  3102  0000A6                     stoa@w:
  3103                           	opt callstack 0
  3104  0000A6                     read_from_usart@data:
  3105                           	opt callstack 0
  3106                           
  3107                           ; 10 bytes @ 0x46
  3108  0000A6                     	ds	2
  3109  0000A8                     pad@w:
  3110                           	opt callstack 0
  3111  0000A8                     stoa@cp:
  3112                           	opt callstack 0
  3113                           
  3114                           ; 2 bytes @ 0x48
  3115  0000A8                     	ds	1
  3116  0000A9                     lcd_draw_char@j:
  3117                           	opt callstack 0
  3118                           
  3119                           ; 1 bytes @ 0x49
  3120  0000A9                     	ds	1
  3121  0000AA                     ?_ctoa:
  3122                           	opt callstack 0
  3123  0000AA                     ?_dtoa:
  3124                           	opt callstack 0
  3125  0000AA                     ?_otoa:
  3126                           	opt callstack 0
  3127  0000AA                     ?_utoa:
  3128                           	opt callstack 0
  3129  0000AA                     ?_xtoa:
  3130                           	opt callstack 0
  3131  0000AA                     lcd_draw_char@k:
  3132                           	opt callstack 0
  3133  0000AA                     ctoa@fp:
  3134                           	opt callstack 0
  3135  0000AA                     dtoa@fp:
  3136                           	opt callstack 0
  3137  0000AA                     otoa@fp:
  3138                           	opt callstack 0
  3139  0000AA                     stoa@p:
  3140                           	opt callstack 0
  3141  0000AA                     utoa@fp:
  3142                           	opt callstack 0
  3143  0000AA                     xtoa@fp:
  3144                           	opt callstack 0
  3145                           
  3146                           ; 2 bytes @ 0x4A
  3147  0000AA                     	ds	1
  3148  0000AB                     lcd_draw_char@i:
  3149                           	opt callstack 0
  3150                           
  3151                           ; 1 bytes @ 0x4B
  3152  0000AB                     	ds	1
  3153  0000AC                     ??_lcd_draw_string:
  3154  0000AC                     ctoa@c:
  3155                           	opt callstack 0
  3156  0000AC                     stoa@l:
  3157                           	opt callstack 0
  3158  0000AC                     dtoa@d:
  3159                           	opt callstack 0
  3160  0000AC                     otoa@d:
  3161                           	opt callstack 0
  3162  0000AC                     utoa@d:
  3163                           	opt callstack 0
  3164  0000AC                     xtoa@d:
  3165                           	opt callstack 0
  3166                           
  3167                           ; 8 bytes @ 0x4C
  3168  0000AC                     	ds	1
  3169  0000AD                     ctoa@w:
  3170                           	opt callstack 0
  3171                           
  3172                           ; 2 bytes @ 0x4D
  3173  0000AD                     	ds	3
  3174  0000B0                     read_from_usart@value:
  3175                           	opt callstack 0
  3176  0000B0                     lcd_draw_string@k:
  3177                           	opt callstack 0
  3178                           
  3179                           ; 2 bytes @ 0x50
  3180  0000B0                     	ds	2
  3181  0000B2                     read_from_usart@i:
  3182                           	opt callstack 0
  3183  0000B2                     lcd_draw_string@lIndex:
  3184                           	opt callstack 0
  3185                           
  3186                           ; 2 bytes @ 0x52
  3187  0000B2                     	ds	2
  3188  0000B4                     xtoa@x:
  3189                           	opt callstack 0
  3190                           
  3191                           ; 1 bytes @ 0x54
  3192  0000B4                     	ds	1
  3193  0000B5                     
  3194                           ; 1 bytes @ 0x55
  3195                           
  3196                           	psect	cstackCOMRAM
  3197  000001                     __pcstackCOMRAM:
  3198                           	opt callstack 0
  3199  000001                     ?i2___wmul:
  3200                           	opt callstack 0
  3201  000001                     ?i2_isalpha:
  3202                           	opt callstack 0
  3203  000001                     ?i2_isdigit:
  3204                           	opt callstack 0
  3205  000001                     ?i2_isspace:
  3206                           	opt callstack 0
  3207  000001                     ?i2_isupper:
  3208                           	opt callstack 0
  3209  000001                     ?i2_strlen:
  3210                           	opt callstack 0
  3211  000001                     ?i2_strncmp:
  3212                           	opt callstack 0
  3213  000001                     ?i2_islower:
  3214                           	opt callstack 0
  3215  000001                     ?i2___aodiv:
  3216                           	opt callstack 0
  3217  000001                     ?i2___aomod:
  3218                           	opt callstack 0
  3219  000001                     ?i2___lodiv:
  3220                           	opt callstack 0
  3221  000001                     ?i2___lomod:
  3222                           	opt callstack 0
  3223  000001                     i2EUSART1_Write@txData:
  3224                           	opt callstack 0
  3225  000001                     i2TMR0_WriteTimer@timerVal:
  3226                           	opt callstack 0
  3227  000001                     i2___wmul@multiplier:
  3228                           	opt callstack 0
  3229  000001                     i2isalpha@c:
  3230                           	opt callstack 0
  3231  000001                     i2isdigit@c:
  3232                           	opt callstack 0
  3233  000001                     i2isspace@c:
  3234                           	opt callstack 0
  3235  000001                     i2isupper@c:
  3236                           	opt callstack 0
  3237  000001                     i2strlen@s:
  3238                           	opt callstack 0
  3239  000001                     i2strncmp@_l:
  3240                           	opt callstack 0
  3241  000001                     i2islower@c:
  3242                           	opt callstack 0
  3243  000001                     i2___aodiv@dividend:
  3244                           	opt callstack 0
  3245  000001                     i2___aomod@dividend:
  3246                           	opt callstack 0
  3247  000001                     i2___lodiv@dividend:
  3248                           	opt callstack 0
  3249  000001                     i2___lomod@dividend:
  3250                           	opt callstack 0
  3251                           
  3252                           ; 8 bytes @ 0x0
  3253  000001                     	ds	1
  3254  000002                     i2putch@txData:
  3255                           	opt callstack 0
  3256                           
  3257                           ; 1 bytes @ 0x1
  3258  000002                     	ds	1
  3259  000003                     ??i2_isalpha:
  3260  000003                     ??i2_isdigit:
  3261  000003                     ??i2_isspace:
  3262  000003                     ??i2_isupper:
  3263  000003                     ??i2_islower:
  3264  000003                     i2___wmul@multiplicand:
  3265                           	opt callstack 0
  3266  000003                     i2fputc@c:
  3267                           	opt callstack 0
  3268  000003                     i2strlen@a:
  3269                           	opt callstack 0
  3270  000003                     i2strncmp@_r:
  3271                           	opt callstack 0
  3272                           
  3273                           ; 2 bytes @ 0x2
  3274  000003                     	ds	2
  3275  000005                     i2___wmul@product:
  3276                           	opt callstack 0
  3277  000005                     i2fputc@fp:
  3278                           	opt callstack 0
  3279  000005                     i2strncmp@n:
  3280                           	opt callstack 0
  3281                           
  3282                           ; 2 bytes @ 0x4
  3283  000005                     	ds	2
  3284  000007                     ??i2_fputc:
  3285  000007                     ??i2_strncmp:
  3286  000007                     ?i2_toupper:
  3287                           	opt callstack 0
  3288  000007                     i2_isspace$2312:
  3289                           	opt callstack 0
  3290  000007                     i2toupper@c:
  3291                           	opt callstack 0
  3292                           
  3293                           ; 2 bytes @ 0x6
  3294  000007                     	ds	1
  3295  000008                     ?i2_atoi:
  3296                           	opt callstack 0
  3297  000008                     i2atoi@s:
  3298                           	opt callstack 0
  3299  000008                     i2strncmp@l:
  3300                           	opt callstack 0
  3301                           
  3302                           ; 2 bytes @ 0x7
  3303  000008                     	ds	1
  3304  000009                     ??i2_toupper:
  3305  000009                     i2___aodiv@divisor:
  3306                           	opt callstack 0
  3307  000009                     i2___aomod@divisor:
  3308                           	opt callstack 0
  3309  000009                     i2___lodiv@divisor:
  3310                           	opt callstack 0
  3311  000009                     i2___lomod@divisor:
  3312                           	opt callstack 0
  3313                           
  3314                           ; 8 bytes @ 0x8
  3315  000009                     	ds	1
  3316  00000A                     ??i2_atoi:
  3317  00000A                     i2strncmp@r:
  3318                           	opt callstack 0
  3319                           
  3320                           ; 2 bytes @ 0x9
  3321  00000A                     	ds	2
  3322  00000C                     ?i2_stoa:
  3323                           	opt callstack 0
  3324  00000C                     i2stoa@fp:
  3325                           	opt callstack 0
  3326  00000C                     i2fputs@s:
  3327                           	opt callstack 0
  3328                           
  3329                           ; 2 bytes @ 0xB
  3330  00000C                     	ds	1
  3331  00000D                     i2_toupper$2399:
  3332                           	opt callstack 0
  3333                           
  3334                           ; 2 bytes @ 0xC
  3335  00000D                     	ds	1
  3336  00000E                     i2stoa@s:
  3337                           	opt callstack 0
  3338  00000E                     i2atoi@neg:
  3339                           	opt callstack 0
  3340  00000E                     i2fputs@fp:
  3341                           	opt callstack 0
  3342                           
  3343                           ; 2 bytes @ 0xD
  3344  00000E                     	ds	2
  3345  000010                     ??i2_stoa:
  3346  000010                     i2fputs@c:
  3347                           	opt callstack 0
  3348  000010                     i2_atoi$2285:
  3349                           	opt callstack 0
  3350                           
  3351                           ; 2 bytes @ 0xF
  3352  000010                     	ds	1
  3353  000011                     i2___aodiv@counter:
  3354                           	opt callstack 0
  3355  000011                     i2___aomod@counter:
  3356                           	opt callstack 0
  3357  000011                     i2___lomod@counter:
  3358                           	opt callstack 0
  3359  000011                     i2fputs@i:
  3360                           	opt callstack 0
  3361  000011                     i2stoa@nuls:
  3362                           	opt callstack 0
  3363  000011                     i2___lodiv@quotient:
  3364                           	opt callstack 0
  3365                           
  3366                           ; 8 bytes @ 0x10
  3367  000011                     	ds	1
  3368  000012                     i2___aodiv@sign:
  3369                           	opt callstack 0
  3370  000012                     i2___aomod@sign:
  3371                           	opt callstack 0
  3372  000012                     i2_atoi$2287:
  3373                           	opt callstack 0
  3374                           
  3375                           ; 2 bytes @ 0x11
  3376  000012                     	ds	1
  3377  000013                     ?i2_pad:
  3378                           	opt callstack 0
  3379  000013                     ?i2_abs:
  3380                           	opt callstack 0
  3381  000013                     i2pad@fp:
  3382                           	opt callstack 0
  3383  000013                     i2abs@a:
  3384                           	opt callstack 0
  3385  000013                     i2___aodiv@quotient:
  3386                           	opt callstack 0
  3387                           
  3388                           ; 8 bytes @ 0x12
  3389  000013                     	ds	1
  3390  000014                     i2_atoi$2286:
  3391                           	opt callstack 0
  3392                           
  3393                           ; 1 bytes @ 0x13
  3394  000014                     	ds	1
  3395  000015                     ??i2_abs:
  3396  000015                     i2pad@buf:
  3397                           	opt callstack 0
  3398  000015                     i2atoi@n:
  3399                           	opt callstack 0
  3400                           
  3401                           ; 2 bytes @ 0x14
  3402  000015                     	ds	2
  3403  000017                     i2pad@p:
  3404                           	opt callstack 0
  3405                           
  3406                           ; 2 bytes @ 0x16
  3407  000017                     	ds	1
  3408  000018                     i2stoa@i:
  3409                           	opt callstack 0
  3410                           
  3411                           ; 2 bytes @ 0x17
  3412  000018                     	ds	1
  3413  000019                     ??i2_pad:
  3414  000019                     i2___lodiv@counter:
  3415                           	opt callstack 0
  3416                           
  3417                           ; 1 bytes @ 0x18
  3418  000019                     	ds	1
  3419  00001A                     i2pad@i:
  3420                           	opt callstack 0
  3421  00001A                     i2stoa@w:
  3422                           	opt callstack 0
  3423                           
  3424                           ; 2 bytes @ 0x19
  3425  00001A                     	ds	2
  3426  00001C                     i2pad@w:
  3427                           	opt callstack 0
  3428  00001C                     i2stoa@cp:
  3429                           	opt callstack 0
  3430                           
  3431                           ; 2 bytes @ 0x1B
  3432  00001C                     	ds	2
  3433  00001E                     ?i2_ctoa:
  3434                           	opt callstack 0
  3435  00001E                     ?i2_dtoa:
  3436                           	opt callstack 0
  3437  00001E                     ?i2_otoa:
  3438                           	opt callstack 0
  3439  00001E                     ?i2_utoa:
  3440                           	opt callstack 0
  3441  00001E                     ?i2_xtoa:
  3442                           	opt callstack 0
  3443  00001E                     i2ctoa@fp:
  3444                           	opt callstack 0
  3445  00001E                     i2dtoa@fp:
  3446                           	opt callstack 0
  3447  00001E                     i2otoa@fp:
  3448                           	opt callstack 0
  3449  00001E                     i2stoa@p:
  3450                           	opt callstack 0
  3451  00001E                     i2utoa@fp:
  3452                           	opt callstack 0
  3453  00001E                     i2xtoa@fp:
  3454                           	opt callstack 0
  3455                           
  3456                           ; 2 bytes @ 0x1D
  3457  00001E                     	ds	2
  3458  000020                     i2ctoa@c:
  3459                           	opt callstack 0
  3460  000020                     i2stoa@l:
  3461                           	opt callstack 0
  3462  000020                     i2dtoa@d:
  3463                           	opt callstack 0
  3464  000020                     i2otoa@d:
  3465                           	opt callstack 0
  3466  000020                     i2utoa@d:
  3467                           	opt callstack 0
  3468  000020                     i2xtoa@d:
  3469                           	opt callstack 0
  3470                           
  3471                           ; 8 bytes @ 0x1F
  3472  000020                     	ds	1
  3473  000021                     i2ctoa@w:
  3474                           	opt callstack 0
  3475                           
  3476                           ; 2 bytes @ 0x20
  3477  000021                     	ds	7
  3478  000028                     ??i2_dtoa:
  3479  000028                     ??i2_otoa:
  3480  000028                     ??i2_utoa:
  3481  000028                     i2xtoa@x:
  3482                           	opt callstack 0
  3483                           
  3484                           ; 1 bytes @ 0x27
  3485  000028                     	ds	1
  3486  000029                     ??i2_xtoa:
  3487                           
  3488                           ; 1 bytes @ 0x28
  3489  000029                     	ds	7
  3490  000030                     i2_dtoa$1672:
  3491                           	opt callstack 0
  3492  000030                     i2otoa@p:
  3493                           	opt callstack 0
  3494  000030                     i2utoa@p:
  3495                           	opt callstack 0
  3496                           
  3497                           ; 2 bytes @ 0x2F
  3498  000030                     	ds	1
  3499  000031                     i2_xtoa$1708:
  3500                           	opt callstack 0
  3501                           
  3502                           ; 2 bytes @ 0x30
  3503  000031                     	ds	1
  3504  000032                     i2dtoa@p:
  3505                           	opt callstack 0
  3506  000032                     i2otoa@t:
  3507                           	opt callstack 0
  3508  000032                     i2utoa@w:
  3509                           	opt callstack 0
  3510                           
  3511                           ; 2 bytes @ 0x31
  3512  000032                     	ds	1
  3513  000033                     i2_xtoa$1709:
  3514                           	opt callstack 0
  3515                           
  3516                           ; 2 bytes @ 0x32
  3517  000033                     	ds	1
  3518  000034                     i2dtoa@w:
  3519                           	opt callstack 0
  3520  000034                     i2otoa@w:
  3521                           	opt callstack 0
  3522  000034                     i2utoa@n:
  3523                           	opt callstack 0
  3524                           
  3525                           ; 8 bytes @ 0x33
  3526  000034                     	ds	1
  3527  000035                     i2xtoa@p:
  3528                           	opt callstack 0
  3529                           
  3530                           ; 2 bytes @ 0x34
  3531  000035                     	ds	1
  3532  000036                     i2dtoa@s:
  3533                           	opt callstack 0
  3534  000036                     i2otoa@n:
  3535                           	opt callstack 0
  3536                           
  3537                           ; 8 bytes @ 0x35
  3538  000036                     	ds	1
  3539  000037                     i2xtoa@w:
  3540                           	opt callstack 0
  3541                           
  3542                           ; 2 bytes @ 0x36
  3543  000037                     	ds	1
  3544  000038                     i2dtoa@n:
  3545                           	opt callstack 0
  3546                           
  3547                           ; 8 bytes @ 0x37
  3548  000038                     	ds	1
  3549  000039                     i2xtoa@n:
  3550                           	opt callstack 0
  3551                           
  3552                           ; 8 bytes @ 0x38
  3553  000039                     	ds	3
  3554  00003C                     i2utoa@i:
  3555                           	opt callstack 0
  3556                           
  3557                           ; 2 bytes @ 0x3B
  3558  00003C                     	ds	2
  3559  00003E                     i2otoa@i:
  3560                           	opt callstack 0
  3561                           
  3562                           ; 2 bytes @ 0x3D
  3563  00003E                     	ds	2
  3564  000040                     i2dtoa@i:
  3565                           	opt callstack 0
  3566                           
  3567                           ; 2 bytes @ 0x3F
  3568  000040                     	ds	1
  3569  000041                     i2xtoa@i:
  3570                           	opt callstack 0
  3571                           
  3572                           ; 2 bytes @ 0x40
  3573  000041                     	ds	2
  3574  000043                     i2xtoa@c:
  3575                           	opt callstack 0
  3576                           
  3577                           ; 2 bytes @ 0x42
  3578  000043                     	ds	2
  3579  000045                     ?i2_vfpfcnvrt:
  3580                           	opt callstack 0
  3581  000045                     i2vfpfcnvrt@fp:
  3582                           	opt callstack 0
  3583                           
  3584                           ; 2 bytes @ 0x44
  3585  000045                     	ds	2
  3586  000047                     i2vfpfcnvrt@fmt:
  3587                           	opt callstack 0
  3588                           
  3589                           ; 2 bytes @ 0x46
  3590  000047                     	ds	2
  3591  000049                     i2vfpfcnvrt@ap:
  3592                           	opt callstack 0
  3593                           
  3594                           ; 2 bytes @ 0x48
  3595  000049                     	ds	2
  3596  00004B                     ??i2_vfpfcnvrt:
  3597                           
  3598                           ; 1 bytes @ 0x4A
  3599  00004B                     	ds	4
  3600  00004F                     ?i2_vfprintf:
  3601                           	opt callstack 0
  3602  00004F                     i2vfprintf@fp:
  3603                           	opt callstack 0
  3604                           
  3605                           ; 2 bytes @ 0x4E
  3606  00004F                     	ds	2
  3607  000051                     i2vfprintf@fmt:
  3608                           	opt callstack 0
  3609                           
  3610                           ; 2 bytes @ 0x50
  3611  000051                     	ds	2
  3612  000053                     i2vfprintf@ap:
  3613                           	opt callstack 0
  3614                           
  3615                           ; 2 bytes @ 0x52
  3616  000053                     	ds	2
  3617  000055                     i2vfprintf@cfmt:
  3618                           	opt callstack 0
  3619                           
  3620                           ; 2 bytes @ 0x54
  3621  000055                     	ds	2
  3622  000057                     
  3623                           ; 1 bytes @ 0x56
  3624  000057                     	ds	2
  3625  000059                     i2printf@ap:
  3626                           	opt callstack 0
  3627                           
  3628                           ; 2 bytes @ 0x58
  3629  000059                     	ds	2
  3630  00005B                     
  3631                           ; 1 bytes @ 0x5A
  3632 ;;
  3633 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  3634 ;;
  3635 ;; *************** function _main *****************
  3636 ;; Defined at:
  3637 ;;		line 44 in file "main.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;		None
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;  dummy           2    0        int 
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  1    wreg      void 
  3644 ;; Registers used:
  3645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3652 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3653 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3654 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3655 ;;Total ram usage:        7 bytes
  3656 ;; Hardware stack levels required when called:   23
  3657 ;; This function calls:
  3658 ;;		_ADC_GetConversion
  3659 ;;		_IOCB4_SetInterruptHandler
  3660 ;;		_SPI_Open
  3661 ;;		_SYSTEM_Initialize
  3662 ;;		_TMR0_ReadTimer
  3663 ;;		_TMR0_WriteTimer
  3664 ;;		___aldiv
  3665 ;;		___lmul
  3666 ;;		_lcd_draw_string
  3667 ;;		_lcd_init
  3668 ;;		_printf
  3669 ;;		_read_from_usart
  3670 ;;		_snprintf
  3671 ;; This function is called by:
  3672 ;;		Startup code after reset
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           
  3676                           	psect	text0
  3677  0035B6                     __ptext0:
  3678                           	opt callstack 0
  3679  0035B6                     _main:
  3680                           	opt callstack 8
  3681  0035B6                     
  3682                           ;main.c: 45:     int dummy;;main.c: 48:     SYSTEM_Initialize();
  3683  0035B6  ECAE  F033         	call	_SYSTEM_Initialize	;wreg free
  3684  0035BA                     
  3685                           ;main.c: 49:     SPI_Open(SPI_DEFAULT);
  3686  0035BA  0E00               	movlw	0
  3687  0035BC  ECA2  F02D         	call	_SPI_Open
  3688  0035C0                     
  3689                           ;main.c: 50:     lcd_init();
  3690  0035C0  ECE5  F012         	call	_lcd_init	;wreg free
  3691  0035C4  5081               	movf	129,w,c	;volatile
  3692  0035C6                     
  3693                           ;main.c: 54:     INTCONbits.RBIF = 0;
  3694  0035C6  90F2               	bcf	242,0,c	;volatile
  3695  0035C8                     
  3696                           ;main.c: 57:     IOCB4_SetInterruptHandler(INTERRUPT_S1_CALLBACK);
  3697  0035C8  0E38               	movlw	low _INTERRUPT_S1_CALLBACK
  3698  0035CA  0100               	movlb	0	; () banked
  3699  0035CC  6F8D               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  3700  0035CE  0E60               	movlw	high _INTERRUPT_S1_CALLBACK
  3701  0035D0  6F8E               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3702  0035D2  EC4F  F034         	call	_IOCB4_SetInterruptHandler	;wreg free
  3703  0035D6                     
  3704                           ;main.c: 64:     (INTCONbits.GIE = 1);
  3705  0035D6  8EF2               	bsf	242,7,c	;volatile
  3706  0035D8                     
  3707                           ;main.c: 74:     lcd_draw_string(60, 220, "EAU          SEEV         AULA_5", 0xFFFF, 0x
      +                          0000);
  3708  0035D8  0E00               	movlw	0
  3709  0035DA  0101               	movlb	1	; () banked
  3710  0035DC  6F01               	movwf	(lcd_draw_string@x+1)& (0+255),b
  3711  0035DE  0E3C               	movlw	60
  3712  0035E0  6F00               	movwf	lcd_draw_string@x& (0+255),b
  3713  0035E2  0E00               	movlw	0
  3714  0035E4  6F03               	movwf	(lcd_draw_string@y+1)& (0+255),b
  3715  0035E6  0EDC               	movlw	220
  3716  0035E8  6F02               	movwf	lcd_draw_string@y& (0+255),b
  3717  0035EA  0E54               	movlw	low STR_2
  3718  0035EC  6F04               	movwf	lcd_draw_string@pS& (0+255),b
  3719  0035EE  0EFF               	movlw	high STR_2
  3720  0035F0  6F05               	movwf	(lcd_draw_string@pS+1)& (0+255),b
  3721  0035F2  0EFF               	movlw	255
  3722  0035F4  6F07               	movwf	(lcd_draw_string@fg_color+1)& (0+255),b
  3723  0035F6  6906               	setf	lcd_draw_string@fg_color& (0+255),b
  3724  0035F8  0E00               	movlw	0
  3725  0035FA  6F09               	movwf	(lcd_draw_string@bg_color+1)& (0+255),b
  3726  0035FC  0E00               	movlw	0
  3727  0035FE  6F08               	movwf	lcd_draw_string@bg_color& (0+255),b
  3728  003600  EC56  F027         	call	_lcd_draw_string	;wreg free
  3729  003604                     
  3730                           ;main.c: 75:     TMR0_WriteTimer(0x00);
  3731  003604  0E00               	movlw	0
  3732  003606  0100               	movlb	0	; () banked
  3733  003608  6F8E               	movwf	(TMR0_WriteTimer@timerVal+1)& (0+255),b
  3734  00360A  0E00               	movlw	0
  3735  00360C  6F8D               	movwf	TMR0_WriteTimer@timerVal& (0+255),b
  3736  00360E  EC49  F034         	call	_TMR0_WriteTimer	;wreg free
  3737  003612                     l9097:
  3738                           
  3739                           ;main.c: 79:         adc_value = ADC_GetConversion(POT_PIN);
  3740  003612  0E00               	movlw	0
  3741  003614  EC60  F031         	call	_ADC_GetConversion
  3742  003618  C08D  F176         	movff	?_ADC_GetConversion,_adc_value
  3743  00361C  C08E  F177         	movff	?_ADC_GetConversion+1,_adc_value+1
  3744  003620                     
  3745                           ;main.c: 80:         adc_perc = (long int) adc_value * 100 / 4095;
  3746  003620  C176  F08D         	movff	_adc_value,___lmul@multiplier
  3747  003624  C177  F08E         	movff	_adc_value+1,___lmul@multiplier+1
  3748  003628  0100               	movlb	0	; () banked
  3749  00362A  0E00               	movlw	0
  3750  00362C  BF8E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
  3751  00362E  0EFF               	movlw	-1
  3752  003630  6F8F               	movwf	(___lmul@multiplier+2)& (0+255),b
  3753  003632  6F90               	movwf	(___lmul@multiplier+3)& (0+255),b
  3754  003634  0E64               	movlw	100
  3755  003636  6F91               	movwf	___lmul@multiplicand& (0+255),b
  3756  003638  0E00               	movlw	0
  3757  00363A  6F92               	movwf	(___lmul@multiplicand+1)& (0+255),b
  3758  00363C  0E00               	movlw	0
  3759  00363E  6F93               	movwf	(___lmul@multiplicand+2)& (0+255),b
  3760  003640  0E00               	movlw	0
  3761  003642  6F94               	movwf	(___lmul@multiplicand+3)& (0+255),b
  3762  003644  EC40  F02E         	call	___lmul	;wreg free
  3763  003648  C08D  F099         	movff	?___lmul,___aldiv@dividend
  3764  00364C  C08E  F09A         	movff	?___lmul+1,___aldiv@dividend+1
  3765  003650  C08F  F09B         	movff	?___lmul+2,___aldiv@dividend+2
  3766  003654  C090  F09C         	movff	?___lmul+3,___aldiv@dividend+3
  3767  003658  0EFF               	movlw	255
  3768  00365A  0100               	movlb	0	; () banked
  3769  00365C  6F9D               	movwf	___aldiv@divisor& (0+255),b
  3770  00365E  0E0F               	movlw	15
  3771  003660  6F9E               	movwf	(___aldiv@divisor+1)& (0+255),b
  3772  003662  0E00               	movlw	0
  3773  003664  6F9F               	movwf	(___aldiv@divisor+2)& (0+255),b
  3774  003666  0E00               	movlw	0
  3775  003668  6FA0               	movwf	(___aldiv@divisor+3)& (0+255),b
  3776  00366A  EC7D  F028         	call	___aldiv	;wreg free
  3777  00366E  C099  F0B5         	movff	?___aldiv,_adc_perc
  3778  003672  C09A  F0B6         	movff	?___aldiv+1,_adc_perc+1
  3779  003676  C09B  F0B7         	movff	?___aldiv+2,_adc_perc+2
  3780  00367A  C09C  F0B8         	movff	?___aldiv+3,_adc_perc+3
  3781  00367E                     
  3782                           ;main.c: 81:         snprintf(string, sizeof (string), "POT: %3d %%", adc_perc);
  3783  00367E  0E98               	movlw	low _string
  3784  003680  0101               	movlb	1	; () banked
  3785  003682  6F5F               	movwf	snprintf@s& (0+255),b
  3786  003684  0E01               	movlw	high _string
  3787  003686  6F60               	movwf	(snprintf@s+1)& (0+255),b
  3788  003688  0E00               	movlw	0
  3789  00368A  6F62               	movwf	(snprintf@n+1)& (0+255),b
  3790  00368C  0E1E               	movlw	30
  3791  00368E  6F61               	movwf	snprintf@n& (0+255),b
  3792  003690  0EC1               	movlw	low STR_3
  3793  003692  6F63               	movwf	snprintf@fmt& (0+255),b
  3794  003694  0EFF               	movlw	high STR_3
  3795  003696  6F64               	movwf	(snprintf@fmt+1)& (0+255),b
  3796  003698  C0B5  F165         	movff	_adc_perc,?_snprintf+6
  3797  00369C  C0B6  F166         	movff	_adc_perc+1,?_snprintf+7
  3798  0036A0  C0B7  F167         	movff	_adc_perc+2,?_snprintf+8
  3799  0036A4  C0B8  F168         	movff	_adc_perc+3,?_snprintf+9
  3800  0036A8  ECDC  F032         	call	_snprintf	;wreg free
  3801  0036AC                     
  3802                           ;main.c: 82:         lcd_draw_string(100, 100, string, 0xFFFF, 0x0000);
  3803  0036AC  0E00               	movlw	0
  3804  0036AE  0101               	movlb	1	; () banked
  3805  0036B0  6F01               	movwf	(lcd_draw_string@x+1)& (0+255),b
  3806  0036B2  0E64               	movlw	100
  3807  0036B4  6F00               	movwf	lcd_draw_string@x& (0+255),b
  3808  0036B6  0E00               	movlw	0
  3809  0036B8  6F03               	movwf	(lcd_draw_string@y+1)& (0+255),b
  3810  0036BA  0E64               	movlw	100
  3811  0036BC  6F02               	movwf	lcd_draw_string@y& (0+255),b
  3812  0036BE  0E98               	movlw	low _string
  3813  0036C0  6F04               	movwf	lcd_draw_string@pS& (0+255),b
  3814  0036C2  0E01               	movlw	high _string
  3815  0036C4  6F05               	movwf	(lcd_draw_string@pS+1)& (0+255),b
  3816  0036C6  0EFF               	movlw	255
  3817  0036C8  6F07               	movwf	(lcd_draw_string@fg_color+1)& (0+255),b
  3818  0036CA  6906               	setf	lcd_draw_string@fg_color& (0+255),b
  3819  0036CC  0E00               	movlw	0
  3820  0036CE  6F09               	movwf	(lcd_draw_string@bg_color+1)& (0+255),b
  3821  0036D0  0E00               	movlw	0
  3822  0036D2  6F08               	movwf	lcd_draw_string@bg_color& (0+255),b
  3823  0036D4  EC56  F027         	call	_lcd_draw_string	;wreg free
  3824  0036D8                     
  3825                           ;main.c: 85:         if (adc_perc >= turn_on_value) {
  3826  0036D8  C1B8  F16D         	movff	_turn_on_value,??_main
  3827  0036DC  C1B9  F16E         	movff	_turn_on_value+1,??_main+1
  3828  0036E0  0E00               	movlw	0
  3829  0036E2  0101               	movlb	1	; () banked
  3830  0036E4  BF6E               	btfsc	(??_main+1)& (0+255),7,b
  3831  0036E6  0EFF               	movlw	255
  3832  0036E8  6F6F               	movwf	(??_main+2)& (0+255),b
  3833  0036EA  6F70               	movwf	(??_main+3)& (0+255),b
  3834  0036EC  516D               	movf	??_main& (0+255),w,b
  3835  0036EE  0100               	movlb	0	; () banked
  3836  0036F0  5DB5               	subwf	_adc_perc& (0+255),w,b
  3837  0036F2  0101               	movlb	1	; () banked
  3838  0036F4  516E               	movf	(??_main+1)& (0+255),w,b
  3839  0036F6  0100               	movlb	0	; () banked
  3840  0036F8  59B6               	subwfb	(_adc_perc+1)& (0+255),w,b
  3841  0036FA  0101               	movlb	1	; () banked
  3842  0036FC  516F               	movf	(??_main+2)& (0+255),w,b
  3843  0036FE  0100               	movlb	0	; () banked
  3844  003700  59B7               	subwfb	(_adc_perc+2)& (0+255),w,b
  3845  003702  51B8               	movf	(_adc_perc+3)& (0+255),w,b
  3846  003704  0A80               	xorlw	128
  3847  003706  0101               	movlb	1	; () banked
  3848  003708  6F71               	movwf	(??_main+4)& (0+255),b
  3849  00370A  5170               	movf	(??_main+3)& (0+255),w,b
  3850  00370C  0A80               	xorlw	128
  3851  00370E  5971               	subwfb	(??_main+4)& (0+255),w,b
  3852  003710  A0D8               	btfss	status,0,c
  3853  003712  EF8D  F01B         	goto	u11761
  3854  003716  EF8F  F01B         	goto	u11760
  3855  00371A                     u11761:
  3856  00371A  EF90  F01B         	goto	l9107
  3857  00371E                     u11760:
  3858  00371E                     
  3859                           ; BSR set to: 1
  3860  00371E  8A89               	bsf	137,5,c	;volatile
  3861  003720                     l9107:
  3862                           
  3863                           ; BSR set to: 1
  3864                           ;main.c: 88:         if (adc_perc <= turn_off_value) {
  3865  003720  C1B6  F16D         	movff	_turn_off_value,??_main
  3866  003724  C1B7  F16E         	movff	_turn_off_value+1,??_main+1
  3867  003728  0E00               	movlw	0
  3868  00372A  BF6E               	btfsc	(??_main+1)& (0+255),7,b
  3869  00372C  0EFF               	movlw	255
  3870  00372E  6F6F               	movwf	(??_main+2)& (0+255),b
  3871  003730  6F70               	movwf	(??_main+3)& (0+255),b
  3872  003732  0100               	movlb	0	; () banked
  3873  003734  51B5               	movf	_adc_perc& (0+255),w,b
  3874  003736  0101               	movlb	1	; () banked
  3875  003738  5D6D               	subwf	??_main& (0+255),w,b
  3876  00373A  0100               	movlb	0	; () banked
  3877  00373C  51B6               	movf	(_adc_perc+1)& (0+255),w,b
  3878  00373E  0101               	movlb	1	; () banked
  3879  003740  596E               	subwfb	(??_main+1)& (0+255),w,b
  3880  003742  0100               	movlb	0	; () banked
  3881  003744  51B7               	movf	(_adc_perc+2)& (0+255),w,b
  3882  003746  0101               	movlb	1	; () banked
  3883  003748  596F               	subwfb	(??_main+2)& (0+255),w,b
  3884  00374A  5170               	movf	(??_main+3)& (0+255),w,b
  3885  00374C  0A80               	xorlw	128
  3886  00374E  6F71               	movwf	(??_main+4)& (0+255),b
  3887  003750  0100               	movlb	0	; () banked
  3888  003752  51B8               	movf	(_adc_perc+3)& (0+255),w,b
  3889  003754  0A80               	xorlw	128
  3890  003756  0101               	movlb	1	; () banked
  3891  003758  5971               	subwfb	(??_main+4)& (0+255),w,b
  3892  00375A  A0D8               	btfss	status,0,c
  3893  00375C  EFB2  F01B         	goto	u11771
  3894  003760  EFB4  F01B         	goto	u11770
  3895  003764                     u11771:
  3896  003764  EFB5  F01B         	goto	l9109
  3897  003768                     u11770:
  3898  003768                     
  3899                           ; BSR set to: 1
  3900  003768  9A89               	bcf	137,5,c	;volatile
  3901  00376A                     l9109:
  3902                           
  3903                           ; BSR set to: 1
  3904                           ;main.c: 93:         if (TMR0_ReadTimer() > 23500) {
  3905  00376A  ECBF  F033         	call	_TMR0_ReadTimer	;wreg free
  3906  00376E  0ECD               	movlw	205
  3907  003770  0100               	movlb	0	; () banked
  3908  003772  5D8D               	subwf	?_TMR0_ReadTimer& (0+255),w,b
  3909  003774  0E5B               	movlw	91
  3910  003776  598E               	subwfb	(?_TMR0_ReadTimer+1)& (0+255),w,b
  3911  003778  A0D8               	btfss	status,0,c
  3912  00377A  EFC1  F01B         	goto	u11781
  3913  00377E  EFC3  F01B         	goto	u11780
  3914  003782                     u11781:
  3915  003782  EF09  F01B         	goto	l9097
  3916  003786                     u11780:
  3917  003786                     
  3918                           ; BSR set to: 0
  3919                           ;main.c: 95:             printf("Configuration MODE \n\r");
  3920  003786  0E75               	movlw	low STR_4
  3921  003788  0101               	movlb	1	; () banked
  3922  00378A  6F49               	movwf	printf@fmt& (0+255),b
  3923  00378C  0EFF               	movlw	high STR_4
  3924  00378E  6F4A               	movwf	(printf@fmt+1)& (0+255),b
  3925  003790  EC60  F033         	call	_printf	;wreg free
  3926                           
  3927                           ;main.c: 96:             printf("\n\rACTUAL TURN VALUES  ON: %d OFF: %d\n\r", turn_on_va
      +                          lue, turn_off_value);
  3928  003794  0E2D               	movlw	low STR_5
  3929  003796  0101               	movlb	1	; () banked
  3930  003798  6F49               	movwf	printf@fmt& (0+255),b
  3931  00379A  0EFF               	movlw	high STR_5
  3932  00379C  6F4A               	movwf	(printf@fmt+1)& (0+255),b
  3933  00379E  C1B8  F14B         	movff	_turn_on_value,?_printf+2
  3934  0037A2  C1B9  F14C         	movff	_turn_on_value+1,?_printf+3
  3935  0037A6  C1B6  F14D         	movff	_turn_off_value,?_printf+4
  3936  0037AA  C1B7  F14E         	movff	_turn_off_value+1,?_printf+5
  3937  0037AE  EC60  F033         	call	_printf	;wreg free
  3938                           
  3939                           ;main.c: 98:             printf("\n\rTurn ON Value: \n\r");
  3940  0037B2  0EA0               	movlw	low STR_6
  3941  0037B4  0101               	movlb	1	; () banked
  3942  0037B6  6F49               	movwf	printf@fmt& (0+255),b
  3943  0037B8  0EFF               	movlw	high STR_6
  3944  0037BA  6F4A               	movwf	(printf@fmt+1)& (0+255),b
  3945  0037BC  EC60  F033         	call	_printf	;wreg free
  3946                           
  3947                           ;main.c: 99:             turn_on_value = read_from_usart(2);
  3948  0037C0  0E00               	movlw	0
  3949  0037C2  0100               	movlb	0	; () banked
  3950  0037C4  6FA4               	movwf	(read_from_usart@length+1)& (0+255),b
  3951  0037C6  0E02               	movlw	2
  3952  0037C8  6FA3               	movwf	read_from_usart@length& (0+255),b
  3953  0037CA  EC44  F02D         	call	_read_from_usart	;wreg free
  3954  0037CE  C0A3  F1B8         	movff	?_read_from_usart,_turn_on_value
  3955  0037D2  C0A4  F1B9         	movff	?_read_from_usart+1,_turn_on_value+1
  3956                           
  3957                           ;main.c: 100:             printf("\n\rTurn OFF Value: \n\r");
  3958  0037D6  0E8B               	movlw	low STR_7
  3959  0037D8  0101               	movlb	1	; () banked
  3960  0037DA  6F49               	movwf	printf@fmt& (0+255),b
  3961  0037DC  0EFF               	movlw	high STR_7
  3962  0037DE  6F4A               	movwf	(printf@fmt+1)& (0+255),b
  3963  0037E0  EC60  F033         	call	_printf	;wreg free
  3964                           
  3965                           ;main.c: 101:             turn_off_value = read_from_usart(2);
  3966  0037E4  0E00               	movlw	0
  3967  0037E6  0100               	movlb	0	; () banked
  3968  0037E8  6FA4               	movwf	(read_from_usart@length+1)& (0+255),b
  3969  0037EA  0E02               	movlw	2
  3970  0037EC  6FA3               	movwf	read_from_usart@length& (0+255),b
  3971  0037EE  EC44  F02D         	call	_read_from_usart	;wreg free
  3972  0037F2  C0A3  F1B6         	movff	?_read_from_usart,_turn_off_value
  3973  0037F6  C0A4  F1B7         	movff	?_read_from_usart+1,_turn_off_value+1
  3974                           
  3975                           ;main.c: 103:             printf("\n\n\rTURN VALUES SAVED   ON: %d OFF: %d\n\r", turn_on
      +                          _value, turn_off_value);
  3976  0037FA  0E05               	movlw	low STR_8
  3977  0037FC  0101               	movlb	1	; () banked
  3978  0037FE  6F49               	movwf	printf@fmt& (0+255),b
  3979  003800  0EFF               	movlw	high STR_8
  3980  003802  6F4A               	movwf	(printf@fmt+1)& (0+255),b
  3981  003804  C1B8  F14B         	movff	_turn_on_value,?_printf+2
  3982  003808  C1B9  F14C         	movff	_turn_on_value+1,?_printf+3
  3983  00380C  C1B6  F14D         	movff	_turn_off_value,?_printf+4
  3984  003810  C1B7  F14E         	movff	_turn_off_value+1,?_printf+5
  3985  003814  EC60  F033         	call	_printf	;wreg free
  3986  003818  EF09  F01B         	goto	l9097
  3987  00381C  EF47  F000         	goto	start
  3988  003820                     __end_of_main:
  3989                           	opt callstack 0
  3990                           
  3991 ;; *************** function _snprintf *****************
  3992 ;; Defined at:
  3993 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\snprintf.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;  s               2   95[BANK1 ] PTR unsigned char 
  3996 ;;		 -> string(30), 
  3997 ;;  n               2   97[BANK1 ] unsigned int 
  3998 ;;  fmt             2   99[BANK1 ] PTR const unsigned char 
  3999 ;;		 -> STR_3(12), 
  4000 ;; Auto vars:     Size  Location     Type
  4001 ;;  ap              2  107[BANK1 ] PTR void [1]
  4002 ;;		 -> ?_snprintf(2), ?_printf(2), 
  4003 ;;  ret             2    0        int 
  4004 ;; Return value:  Size  Location     Type
  4005 ;;                  2   95[BANK1 ] int 
  4006 ;; Registers used:
  4007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4008 ;; Tracked objects:
  4009 ;;		On entry : 0/0
  4010 ;;		On exit  : 0/0
  4011 ;;		Unchanged: 0/0
  4012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4013 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4014 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4016 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4017 ;;Total ram usage:       14 bytes
  4018 ;; Hardware stack levels used:    1
  4019 ;; Hardware stack levels required when called:   22
  4020 ;; This function calls:
  4021 ;;		_vsnprintf
  4022 ;; This function is called by:
  4023 ;;		_main
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           	psect	text1
  4028  0065B8                     __ptext1:
  4029                           	opt callstack 0
  4030  0065B8                     _snprintf:
  4031                           	opt callstack 8
  4032  0065B8  0E65               	movlw	low (?_snprintf+6)
  4033  0065BA  0101               	movlb	1	; () banked
  4034  0065BC  6F6B               	movwf	snprintf@ap& (0+255),b
  4035  0065BE  0E01               	movlw	high (?_snprintf+6)
  4036  0065C0  6F6C               	movwf	(snprintf@ap+1)& (0+255),b
  4037  0065C2                     
  4038                           ; BSR set to: 1
  4039  0065C2  C15F  F149         	movff	snprintf@s,vsnprintf@s
  4040  0065C6  C160  F14A         	movff	snprintf@s+1,vsnprintf@s+1
  4041  0065CA  C161  F14B         	movff	snprintf@n,vsnprintf@n
  4042  0065CE  C162  F14C         	movff	snprintf@n+1,vsnprintf@n+1
  4043  0065D2  C163  F14D         	movff	snprintf@fmt,vsnprintf@fmt
  4044  0065D6  C164  F14E         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  4045  0065DA  0E6B               	movlw	low snprintf@ap
  4046  0065DC  6F4F               	movwf	vsnprintf@ap& (0+255),b
  4047  0065DE  0E01               	movlw	high snprintf@ap
  4048  0065E0  6F50               	movwf	(vsnprintf@ap+1)& (0+255),b
  4049  0065E2  ECF5  F027         	call	_vsnprintf	;wreg free
  4050  0065E6  0012               	return		;funcret
  4051  0065E8                     __end_of_snprintf:
  4052                           	opt callstack 0
  4053                           
  4054 ;; *************** function _vsnprintf *****************
  4055 ;; Defined at:
  4056 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_vsnprintf.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;  s               2   73[BANK1 ] PTR unsigned char 
  4059 ;;		 -> string(30), 
  4060 ;;  n               2   75[BANK1 ] unsigned int 
  4061 ;;  fmt             2   77[BANK1 ] PTR const unsigned char 
  4062 ;;		 -> STR_3(12), 
  4063 ;;  ap              2   79[BANK1 ] PTR PTR void 
  4064 ;;		 -> snprintf@ap(2), 
  4065 ;; Auto vars:     Size  Location     Type
  4066 ;;  f               6   89[BANK1 ] struct _IO_FILE
  4067 ;;  cnt             2   87[BANK1 ] int 
  4068 ;; Return value:  Size  Location     Type
  4069 ;;                  2   73[BANK1 ] int 
  4070 ;; Registers used:
  4071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4072 ;; Tracked objects:
  4073 ;;		On entry : 0/0
  4074 ;;		On exit  : 0/0
  4075 ;;		Unchanged: 0/0
  4076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4077 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4078 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4079 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4080 ;;      Totals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4081 ;;Total ram usage:       22 bytes
  4082 ;; Hardware stack levels used:    1
  4083 ;; Hardware stack levels required when called:   21
  4084 ;; This function calls:
  4085 ;;		_vfprintf
  4086 ;; This function is called by:
  4087 ;;		_snprintf
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090                           
  4091                           	psect	text2
  4092  004FEA                     __ptext2:
  4093                           	opt callstack 0
  4094  004FEA                     _vsnprintf:
  4095                           	opt callstack 8
  4096  004FEA  0E80               	movlw	128
  4097  004FEC  0101               	movlb	1	; () banked
  4098  004FEE  5D4C               	subwf	(vsnprintf@n+1)& (0+255),w,b
  4099  004FF0  A0D8               	btfss	status,0,c
  4100  004FF2  EFFD  F027         	goto	u11601
  4101  004FF6  EFFF  F027         	goto	u11600
  4102  004FFA                     u11601:
  4103  004FFA  EF07  F028         	goto	l8991
  4104  004FFE                     u11600:
  4105  004FFE                     
  4106                           ; BSR set to: 1
  4107  004FFE  0E00               	movlw	0
  4108  005000  6F73               	movwf	(_errno+1)& (0+255),b
  4109  005002  0E4B               	movlw	75
  4110  005004  6F72               	movwf	_errno& (0+255),b
  4111  005006                     
  4112                           ; BSR set to: 1
  4113  005006  6949               	setf	?_vsnprintf& (0+255),b
  4114  005008  694A               	setf	(?_vsnprintf+1)& (0+255),b
  4115  00500A  EF7C  F028         	goto	l1658
  4116  00500E                     l8991:
  4117                           
  4118                           ; BSR set to: 1
  4119  00500E  C149  F159         	movff	vsnprintf@s,vsnprintf@f
  4120  005012  C14A  F15A         	movff	vsnprintf@s+1,vsnprintf@f+1
  4121  005016  514C               	movf	(vsnprintf@n+1)& (0+255),w,b
  4122  005018  E109               	bnz	u11610
  4123  00501A  0E02               	movlw	2
  4124  00501C  5D4B               	subwf	vsnprintf@n& (0+255),w,b
  4125  00501E  A0D8               	btfss	status,0,c
  4126  005020  EF14  F028         	goto	u11611
  4127  005024  EF16  F028         	goto	u11610
  4128  005028                     u11611:
  4129  005028  EF22  F028         	goto	l8997
  4130  00502C                     u11610:
  4131  00502C                     
  4132                           ; BSR set to: 1
  4133  00502C  0EFF               	movlw	255
  4134  00502E  254B               	addwf	vsnprintf@n& (0+255),w,b
  4135  005030  6F5D               	movwf	(vsnprintf@f+4)& (0+255),b
  4136  005032  0EFF               	movlw	255
  4137  005034  214C               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  4138  005036  6F5E               	movwf	(vsnprintf@f+5)& (0+255),b
  4139  005038                     
  4140                           ; BSR set to: 1
  4141  005038  0E00               	movlw	0
  4142  00503A  6F5C               	movwf	(vsnprintf@f+3)& (0+255),b
  4143  00503C  0E00               	movlw	0
  4144  00503E  6F5B               	movwf	(vsnprintf@f+2)& (0+255),b
  4145  005040  EF2A  F028         	goto	l8999
  4146  005044                     l8997:
  4147                           
  4148                           ; BSR set to: 1
  4149  005044  0E00               	movlw	0
  4150  005046  6F5E               	movwf	(vsnprintf@f+5)& (0+255),b
  4151  005048  0E01               	movlw	1
  4152  00504A  6F5D               	movwf	(vsnprintf@f+4)& (0+255),b
  4153  00504C  0E00               	movlw	0
  4154  00504E  6F5C               	movwf	(vsnprintf@f+3)& (0+255),b
  4155  005050  0E01               	movlw	1
  4156  005052  6F5B               	movwf	(vsnprintf@f+2)& (0+255),b
  4157  005054                     l8999:
  4158                           
  4159                           ; BSR set to: 1
  4160  005054  0E59               	movlw	low vsnprintf@f
  4161  005056  6F41               	movwf	vfprintf@fp& (0+255),b
  4162  005058  0E01               	movlw	high vsnprintf@f
  4163  00505A  6F42               	movwf	(vfprintf@fp+1)& (0+255),b
  4164  00505C  C14D  F143         	movff	vsnprintf@fmt,vfprintf@fmt
  4165  005060  C14E  F144         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  4166  005064  C14F  F145         	movff	vsnprintf@ap,vfprintf@ap
  4167  005068  C150  F146         	movff	vsnprintf@ap+1,vfprintf@ap+1
  4168  00506C  ECA9  F02E         	call	_vfprintf	;wreg free
  4169  005070  C141  F157         	movff	?_vfprintf,vsnprintf@cnt
  4170  005074  C142  F158         	movff	?_vfprintf+1,vsnprintf@cnt+1
  4171  005078  0101               	movlb	1	; () banked
  4172  00507A  514B               	movf	vsnprintf@n& (0+255),w,b
  4173  00507C  114C               	iorwf	(vsnprintf@n+1)& (0+255),w,b
  4174  00507E  B4D8               	btfsc	status,2,c
  4175  005080  EF44  F028         	goto	u11621
  4176  005084  EF46  F028         	goto	u11620
  4177  005088                     u11621:
  4178  005088  EF78  F028         	goto	l9011
  4179  00508C                     u11620:
  4180  00508C                     
  4181                           ; BSR set to: 1
  4182  00508C  BF58               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  4183  00508E  EF4B  F028         	goto	u11631
  4184  005092  EF4D  F028         	goto	u11630
  4185  005096                     u11631:
  4186  005096  EF78  F028         	goto	l9011
  4187  00509A                     u11630:
  4188  00509A                     
  4189                           ; BSR set to: 1
  4190  00509A  0EFF               	movlw	255
  4191  00509C  6F51               	movwf	??_vsnprintf& (0+255),b
  4192  00509E  0EFF               	movlw	255
  4193  0050A0  6F52               	movwf	(??_vsnprintf+1)& (0+255),b
  4194  0050A2  C14B  F153         	movff	vsnprintf@n,??_vsnprintf+2
  4195  0050A6  C14C  F154         	movff	vsnprintf@n+1,??_vsnprintf+3
  4196  0050AA  5151               	movf	??_vsnprintf& (0+255),w,b
  4197  0050AC  2753               	addwf	(??_vsnprintf+2)& (0+255),f,b
  4198  0050AE  5152               	movf	(??_vsnprintf+1)& (0+255),w,b
  4199  0050B0  2354               	addwfc	(??_vsnprintf+3)& (0+255),f,b
  4200  0050B2  5153               	movf	(??_vsnprintf+2)& (0+255),w,b
  4201  0050B4  5D57               	subwf	vsnprintf@cnt& (0+255),w,b
  4202  0050B6  5154               	movf	(??_vsnprintf+3)& (0+255),w,b
  4203  0050B8  5958               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  4204  0050BA  A0D8               	btfss	status,0,c
  4205  0050BC  EF62  F028         	goto	u11641
  4206  0050C0  EF64  F028         	goto	u11640
  4207  0050C4                     u11641:
  4208  0050C4  EF6C  F028         	goto	l1663
  4209  0050C8                     u11640:
  4210  0050C8                     
  4211                           ; BSR set to: 1
  4212  0050C8  0EFF               	movlw	255
  4213  0050CA  254B               	addwf	vsnprintf@n& (0+255),w,b
  4214  0050CC  6F55               	movwf	_vsnprintf$2430& (0+255),b
  4215  0050CE  0EFF               	movlw	255
  4216  0050D0  214C               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  4217  0050D2  6F56               	movwf	(_vsnprintf$2430+1)& (0+255),b
  4218  0050D4  EF70  F028         	goto	l9009
  4219  0050D8                     l1663:
  4220                           
  4221                           ; BSR set to: 1
  4222  0050D8  C157  F155         	movff	vsnprintf@cnt,_vsnprintf$2430
  4223  0050DC  C158  F156         	movff	vsnprintf@cnt+1,_vsnprintf$2430+1
  4224  0050E0                     l9009:
  4225                           
  4226                           ; BSR set to: 1
  4227  0050E0  5155               	movf	_vsnprintf$2430& (0+255),w,b
  4228  0050E2  2549               	addwf	vsnprintf@s& (0+255),w,b
  4229  0050E4  6ED9               	movwf	fsr2l,c
  4230  0050E6  5156               	movf	(_vsnprintf$2430+1)& (0+255),w,b
  4231  0050E8  214A               	addwfc	(vsnprintf@s+1)& (0+255),w,b
  4232  0050EA  6EDA               	movwf	fsr2h,c
  4233  0050EC  0E00               	movlw	0
  4234  0050EE  6EDF               	movwf	indf2,c
  4235  0050F0                     l9011:
  4236                           
  4237                           ; BSR set to: 1
  4238  0050F0  C157  F149         	movff	vsnprintf@cnt,?_vsnprintf
  4239  0050F4  C158  F14A         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  4240  0050F8                     l1658:
  4241                           
  4242                           ; BSR set to: 1
  4243  0050F8  0012               	return		;funcret
  4244  0050FA                     __end_of_vsnprintf:
  4245                           	opt callstack 0
  4246                           
  4247 ;; *************** function _read_from_usart *****************
  4248 ;; Defined at:
  4249 ;;		line 23 in file "main.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;  length          2   67[BANK0 ] int 
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;  i               2   82[BANK0 ] int 
  4254 ;;  data           10   70[BANK0 ] unsigned char [10]
  4255 ;;  value           2   80[BANK0 ] int 
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  2   67[BANK0 ] int 
  4258 ;; Registers used:
  4259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4265 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4266 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4267 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4268 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4269 ;;Total ram usage:       17 bytes
  4270 ;; Hardware stack levels used:    1
  4271 ;; Hardware stack levels required when called:   15
  4272 ;; This function calls:
  4273 ;;		_EUSART1_Read
  4274 ;;		_EUSART1_Write
  4275 ;;		_EUSART1_is_rx_ready
  4276 ;;		_EUSART1_is_tx_ready
  4277 ;;		_TMR0_WriteTimer
  4278 ;;		_atoi
  4279 ;; This function is called by:
  4280 ;;		_main
  4281 ;; This function uses a non-reentrant model
  4282 ;;
  4283                           
  4284                           	psect	text3
  4285  005A88                     __ptext3:
  4286                           	opt callstack 0
  4287  005A88                     _read_from_usart:
  4288                           	opt callstack 15
  4289  005A88                     
  4290                           ;main.c: 27:     for (int i = 0; i < length; i++) {
  4291  005A88  0E00               	movlw	0
  4292  005A8A  0100               	movlb	0	; () banked
  4293  005A8C  6FB3               	movwf	(read_from_usart@i+1)& (0+255),b
  4294  005A8E  0E00               	movlw	0
  4295  005A90  6FB2               	movwf	read_from_usart@i& (0+255),b
  4296  005A92  EF84  F02D         	goto	l9041
  4297  005A96                     l439:
  4298  005A96  AA9E               	btfss	158,5,c	;volatile
  4299  005A98  EF50  F02D         	goto	u11661
  4300  005A9C  EF52  F02D         	goto	u11660
  4301  005AA0                     u11661:
  4302  005AA0  EF4B  F02D         	goto	l439
  4303  005AA4                     u11660:
  4304  005AA4                     
  4305                           ;main.c: 29:         if (EUSART1_is_rx_ready()) {
  4306  005AA4  EC26  F034         	call	_EUSART1_is_rx_ready	;wreg free
  4307  005AA8  0900               	iorlw	0
  4308  005AAA  B4D8               	btfsc	status,2,c
  4309  005AAC  EF5A  F02D         	goto	u11671
  4310  005AB0  EF5C  F02D         	goto	u11670
  4311  005AB4                     u11671:
  4312  005AB4  EF81  F02D         	goto	l9039
  4313  005AB8                     u11670:
  4314  005AB8                     
  4315                           ;main.c: 30:             data[i] = EUSART1_Read();
  4316  005AB8  0EA6               	movlw	low read_from_usart@data
  4317  005ABA  0100               	movlb	0	; () banked
  4318  005ABC  25B2               	addwf	read_from_usart@i& (0+255),w,b
  4319  005ABE  6ED9               	movwf	fsr2l,c
  4320  005AC0  0E00               	movlw	high read_from_usart@data
  4321  005AC2  21B3               	addwfc	(read_from_usart@i+1)& (0+255),w,b
  4322  005AC4  6EDA               	movwf	fsr2h,c
  4323  005AC6  EC36  F033         	call	_EUSART1_Read	;wreg free
  4324  005ACA  6EDF               	movwf	indf2,c
  4325  005ACC                     
  4326                           ;main.c: 31:             if (EUSART1_is_tx_ready()) {
  4327  005ACC  EC21  F033         	call	_EUSART1_is_tx_ready	;wreg free
  4328  005AD0  0900               	iorlw	0
  4329  005AD2  B4D8               	btfsc	status,2,c
  4330  005AD4  EF6E  F02D         	goto	u11681
  4331  005AD8  EF70  F02D         	goto	u11680
  4332  005ADC                     u11681:
  4333  005ADC  EF81  F02D         	goto	l9039
  4334  005AE0                     u11680:
  4335  005AE0                     
  4336                           ;main.c: 32:                 EUSART1_Write(data[i]);
  4337  005AE0  0EA6               	movlw	low read_from_usart@data
  4338  005AE2  0100               	movlb	0	; () banked
  4339  005AE4  25B2               	addwf	read_from_usart@i& (0+255),w,b
  4340  005AE6  6ED9               	movwf	fsr2l,c
  4341  005AE8  0E00               	movlw	high read_from_usart@data
  4342  005AEA  21B3               	addwfc	(read_from_usart@i+1)& (0+255),w,b
  4343  005AEC  6EDA               	movwf	fsr2h,c
  4344  005AEE  50DF               	movf	indf2,w,c
  4345  005AF0  ECEC  F033         	call	_EUSART1_Write
  4346  005AF4                     
  4347                           ;main.c: 33:                 TMR0_WriteTimer(0x00);
  4348  005AF4  0E00               	movlw	0
  4349  005AF6  0100               	movlb	0	; () banked
  4350  005AF8  6F8E               	movwf	(TMR0_WriteTimer@timerVal+1)& (0+255),b
  4351  005AFA  0E00               	movlw	0
  4352  005AFC  6F8D               	movwf	TMR0_WriteTimer@timerVal& (0+255),b
  4353  005AFE  EC49  F034         	call	_TMR0_WriteTimer	;wreg free
  4354  005B02                     l9039:
  4355                           
  4356                           ;main.c: 36:     }
  4357  005B02  0100               	movlb	0	; () banked
  4358  005B04  4BB2               	infsnz	read_from_usart@i& (0+255),f,b
  4359  005B06  2BB3               	incf	(read_from_usart@i+1)& (0+255),f,b
  4360  005B08                     l9041:
  4361                           
  4362                           ; BSR set to: 0
  4363  005B08  51A3               	movf	read_from_usart@length& (0+255),w,b
  4364  005B0A  5DB2               	subwf	read_from_usart@i& (0+255),w,b
  4365  005B0C  51B3               	movf	(read_from_usart@i+1)& (0+255),w,b
  4366  005B0E  0A80               	xorlw	128
  4367  005B10  6FA5               	movwf	??_read_from_usart& (0+255),b
  4368  005B12  51A4               	movf	(read_from_usart@length+1)& (0+255),w,b
  4369  005B14  0A80               	xorlw	128
  4370  005B16  59A5               	subwfb	??_read_from_usart& (0+255),w,b
  4371  005B18  A0D8               	btfss	status,0,c
  4372  005B1A  EF91  F02D         	goto	u11691
  4373  005B1E  EF93  F02D         	goto	u11690
  4374  005B22                     u11691:
  4375  005B22  EF4B  F02D         	goto	l439
  4376  005B26                     u11690:
  4377  005B26                     
  4378                           ; BSR set to: 0
  4379                           ;main.c: 37:     value = atoi(data);
  4380  005B26  0EA6               	movlw	low read_from_usart@data
  4381  005B28  6F94               	movwf	atoi@s& (0+255),b
  4382  005B2A  0E00               	movlw	high read_from_usart@data
  4383  005B2C  6F95               	movwf	(atoi@s+1)& (0+255),b
  4384  005B2E  EC1C  F01D         	call	_atoi	;wreg free
  4385  005B32  C094  F0B0         	movff	?_atoi,read_from_usart@value
  4386  005B36  C095  F0B1         	movff	?_atoi+1,read_from_usart@value+1
  4387  005B3A                     
  4388                           ;main.c: 38:     return value;
  4389  005B3A  C0B0  F0A3         	movff	read_from_usart@value,?_read_from_usart
  4390  005B3E  C0B1  F0A4         	movff	read_from_usart@value+1,?_read_from_usart+1
  4391  005B42  0012               	return		;funcret
  4392  005B44                     __end_of_read_from_usart:
  4393                           	opt callstack 0
  4394                           
  4395 ;; *************** function _TMR0_WriteTimer *****************
  4396 ;; Defined at:
  4397 ;;		line 115 in file "mcc_generated_files/tmr0.c"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;  timerVal        2   45[BANK0 ] unsigned short 
  4400 ;; Auto vars:     Size  Location     Type
  4401 ;;		None
  4402 ;; Return value:  Size  Location     Type
  4403 ;;                  1    wreg      void 
  4404 ;; Registers used:
  4405 ;;		wreg, status,2
  4406 ;; Tracked objects:
  4407 ;;		On entry : 0/0
  4408 ;;		On exit  : 0/0
  4409 ;;		Unchanged: 0/0
  4410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4411 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4414 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4415 ;;Total ram usage:        2 bytes
  4416 ;; Hardware stack levels used:    1
  4417 ;; Hardware stack levels required when called:   13
  4418 ;; This function calls:
  4419 ;;		Nothing
  4420 ;; This function is called by:
  4421 ;;		_read_from_usart
  4422 ;;		_main
  4423 ;; This function uses a non-reentrant model
  4424 ;;
  4425                           
  4426                           	psect	text4
  4427  006892                     __ptext4:
  4428                           	opt callstack 0
  4429  006892                     _TMR0_WriteTimer:
  4430                           	opt callstack 16
  4431  006892                     
  4432                           ;mcc_generated_files/tmr0.c: 115: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 116: {;mcc_generated_files/tmr0.c: 118:     TMR0H = timerVal >> 8;
  4433  006892  0100               	movlb	0	; () banked
  4434  006894  518E               	movf	(TMR0_WriteTimer@timerVal+1)& (0+255),w,b
  4435  006896  6ED7               	movwf	215,c	;volatile
  4436  006898                     
  4437                           ; BSR set to: 0
  4438                           ;mcc_generated_files/tmr0.c: 119:     TMR0L = (uint8_t) timerVal;
  4439  006898  C08D  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  4440  00689C                     
  4441                           ; BSR set to: 0
  4442  00689C  0012               	return		;funcret
  4443  00689E                     __end_of_TMR0_WriteTimer:
  4444                           	opt callstack 0
  4445                           
  4446 ;; *************** function _EUSART1_is_tx_ready *****************
  4447 ;; Defined at:
  4448 ;;		line 94 in file "mcc_generated_files/eusart1.c"
  4449 ;; Parameters:    Size  Location     Type
  4450 ;;		None
  4451 ;; Auto vars:     Size  Location     Type
  4452 ;;		None
  4453 ;; Return value:  Size  Location     Type
  4454 ;;                  1    wreg      _Bool 
  4455 ;; Registers used:
  4456 ;;		wreg, status,2
  4457 ;; Tracked objects:
  4458 ;;		On entry : 0/0
  4459 ;;		On exit  : 0/0
  4460 ;;		Unchanged: 0/0
  4461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4463 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4465 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4466 ;;Total ram usage:        1 bytes
  4467 ;; Hardware stack levels used:    1
  4468 ;; Hardware stack levels required when called:   13
  4469 ;; This function calls:
  4470 ;;		Nothing
  4471 ;; This function is called by:
  4472 ;;		_read_from_usart
  4473 ;; This function uses a non-reentrant model
  4474 ;;
  4475                           
  4476                           	psect	text5
  4477  006642                     __ptext5:
  4478                           	opt callstack 0
  4479  006642                     _EUSART1_is_tx_ready:
  4480                           	opt callstack 16
  4481  006642                     
  4482                           ;mcc_generated_files/eusart1.c: 96:     return (_Bool)(PIR1bits.TX1IF && TXSTA1bits.TXEN
      +                          );
  4483  006642  0E00               	movlw	0
  4484  006644  0100               	movlb	0	; () banked
  4485  006646  6F8D               	movwf	_EUSART1_is_tx_ready$859& (0+255),b
  4486  006648                     
  4487                           ; BSR set to: 0
  4488  006648  A89E               	btfss	158,4,c	;volatile
  4489  00664A  EF29  F033         	goto	u7571
  4490  00664E  EF2B  F033         	goto	u7570
  4491  006652                     u7571:
  4492  006652  EF34  F033         	goto	l277
  4493  006656                     u7570:
  4494  006656                     
  4495                           ; BSR set to: 0
  4496  006656  AAAC               	btfss	172,5,c	;volatile
  4497  006658  EF30  F033         	goto	u7581
  4498  00665C  EF32  F033         	goto	u7580
  4499  006660                     u7581:
  4500  006660  EF34  F033         	goto	l277
  4501  006664                     u7580:
  4502  006664                     
  4503                           ; BSR set to: 0
  4504  006664  0E01               	movlw	1
  4505  006666  6F8D               	movwf	_EUSART1_is_tx_ready$859& (0+255),b
  4506  006668                     l277:
  4507                           
  4508                           ; BSR set to: 0
  4509  006668  518D               	movf	_EUSART1_is_tx_ready$859& (0+255),w,b
  4510  00666A                     
  4511                           ; BSR set to: 0
  4512  00666A  0012               	return		;funcret
  4513  00666C                     __end_of_EUSART1_is_tx_ready:
  4514                           	opt callstack 0
  4515                           
  4516 ;; *************** function _EUSART1_is_rx_ready *****************
  4517 ;; Defined at:
  4518 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  4519 ;; Parameters:    Size  Location     Type
  4520 ;;		None
  4521 ;; Auto vars:     Size  Location     Type
  4522 ;;		None
  4523 ;; Return value:  Size  Location     Type
  4524 ;;                  1    wreg      _Bool 
  4525 ;; Registers used:
  4526 ;;		wreg
  4527 ;; Tracked objects:
  4528 ;;		On entry : 0/0
  4529 ;;		On exit  : 0/0
  4530 ;;		Unchanged: 0/0
  4531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4536 ;;Total ram usage:        0 bytes
  4537 ;; Hardware stack levels used:    1
  4538 ;; Hardware stack levels required when called:   13
  4539 ;; This function calls:
  4540 ;;		Nothing
  4541 ;; This function is called by:
  4542 ;;		_read_from_usart
  4543 ;; This function uses a non-reentrant model
  4544 ;;
  4545                           
  4546                           	psect	text6
  4547  00684C                     __ptext6:
  4548                           	opt callstack 0
  4549  00684C                     _EUSART1_is_rx_ready:
  4550                           	opt callstack 16
  4551  00684C                     
  4552                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  4553  00684C  BA9E               	btfsc	158,5,c	;volatile
  4554  00684E  EF2B  F034         	goto	u7591
  4555  006852  EF2E  F034         	goto	u7590
  4556  006856                     u7591:
  4557  006856  0E01               	movlw	1
  4558  006858  EF2F  F034         	goto	u7596
  4559  00685C                     u7590:
  4560  00685C  0E00               	movlw	0
  4561  00685E                     u7596:
  4562  00685E  0012               	return		;funcret
  4563  006860                     __end_of_EUSART1_is_rx_ready:
  4564                           	opt callstack 0
  4565                           
  4566 ;; *************** function _EUSART1_Read *****************
  4567 ;; Defined at:
  4568 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;		None
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;		None
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  1    wreg      unsigned char 
  4575 ;; Registers used:
  4576 ;;		wreg, status,2
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4586 ;;Total ram usage:        0 bytes
  4587 ;; Hardware stack levels used:    1
  4588 ;; Hardware stack levels required when called:   13
  4589 ;; This function calls:
  4590 ;;		Nothing
  4591 ;; This function is called by:
  4592 ;;		_read_from_usart
  4593 ;;		_getch
  4594 ;; This function uses a non-reentrant model
  4595 ;;
  4596                           
  4597                           	psect	text7
  4598  00666C                     __ptext7:
  4599                           	opt callstack 0
  4600  00666C                     _EUSART1_Read:
  4601                           	opt callstack 16
  4602  00666C                     l290:
  4603                           
  4604                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  4605  00666C  AA9E               	btfss	158,5,c	;volatile
  4606  00666E  EF3B  F033         	goto	u7601
  4607  006672  EF3D  F033         	goto	u7600
  4608  006676                     u7601:
  4609  006676  EF36  F033         	goto	l290
  4610  00667A                     u7600:
  4611  00667A                     
  4612                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  4613  00667A  0E00               	movlw	0
  4614  00667C  0100               	movlb	0	; () banked
  4615  00667E  6FC1               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  4616  006680                     
  4617                           ; BSR set to: 0
  4618                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  4619  006680  A2AB               	btfss	171,1,c	;volatile
  4620  006682  EF45  F033         	goto	u7611
  4621  006686  EF47  F033         	goto	u7610
  4622  00668A                     u7611:
  4623  00668A  EF49  F033         	goto	l6411
  4624  00668E                     u7610:
  4625  00668E                     
  4626                           ; BSR set to: 0
  4627                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  4628  00668E  98AB               	bcf	171,4,c	;volatile
  4629                           
  4630                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  4631  006690  88AB               	bsf	171,4,c	;volatile
  4632  006692                     l6411:
  4633                           
  4634                           ; BSR set to: 0
  4635                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  4636  006692  50AE               	movf	174,w,c	;volatile
  4637  006694                     
  4638                           ; BSR set to: 0
  4639  006694  0012               	return		;funcret
  4640  006696                     __end_of_EUSART1_Read:
  4641                           	opt callstack 0
  4642                           
  4643 ;; *************** function _printf *****************
  4644 ;; Defined at:
  4645 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;  fmt             2   73[BANK1 ] PTR const unsigned char 
  4648 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
  4649 ;;		 -> STR_4(22), STR_1(13), 
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;  ap              2   81[BANK1 ] PTR void [1]
  4652 ;;		 -> ?_snprintf(2), ?_printf(2), 
  4653 ;;  ret             2    0        int 
  4654 ;; Return value:  Size  Location     Type
  4655 ;;                  2   73[BANK1 ] int 
  4656 ;; Registers used:
  4657 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4658 ;; Tracked objects:
  4659 ;;		On entry : 0/0
  4660 ;;		On exit  : 0/0
  4661 ;;		Unchanged: 0/0
  4662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4663 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4664 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4666 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4667 ;;Total ram usage:       10 bytes
  4668 ;; Hardware stack levels used:    1
  4669 ;; Hardware stack levels required when called:   21
  4670 ;; This function calls:
  4671 ;;		_vfprintf
  4672 ;; This function is called by:
  4673 ;;		_main
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           	psect	text8
  4678  0066C0                     __ptext8:
  4679                           	opt callstack 0
  4680  0066C0                     _printf:
  4681                           	opt callstack 9
  4682  0066C0  0E4B               	movlw	low (?_printf+2)
  4683  0066C2  0101               	movlb	1	; () banked
  4684  0066C4  6F51               	movwf	printf@ap& (0+255),b
  4685  0066C6  0E01               	movlw	high (?_printf+2)
  4686  0066C8  6F52               	movwf	(printf@ap+1)& (0+255),b
  4687  0066CA                     
  4688                           ; BSR set to: 1
  4689  0066CA  0E00               	movlw	0
  4690  0066CC  6F41               	movwf	vfprintf@fp& (0+255),b
  4691  0066CE  0E00               	movlw	0
  4692  0066D0  6F42               	movwf	(vfprintf@fp+1)& (0+255),b
  4693  0066D2  C149  F143         	movff	printf@fmt,vfprintf@fmt
  4694  0066D6  C14A  F144         	movff	printf@fmt+1,vfprintf@fmt+1
  4695  0066DA  0E51               	movlw	low printf@ap
  4696  0066DC  6F45               	movwf	vfprintf@ap& (0+255),b
  4697  0066DE  0E01               	movlw	high printf@ap
  4698  0066E0  6F46               	movwf	(vfprintf@ap+1)& (0+255),b
  4699  0066E2  ECA9  F02E         	call	_vfprintf	;wreg free
  4700  0066E6  0012               	return		;funcret
  4701  0066E8                     __end_of_printf:
  4702                           	opt callstack 0
  4703                           
  4704 ;; *************** function _vfprintf *****************
  4705 ;; Defined at:
  4706 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4707 ;; Parameters:    Size  Location     Type
  4708 ;;  fp              2   65[BANK1 ] PTR struct _IO_FILE
  4709 ;;		 -> vsnprintf@f(6), NULL(0), 
  4710 ;;  fmt             2   67[BANK1 ] PTR const unsigned char 
  4711 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
  4712 ;;		 -> STR_4(22), STR_3(12), STR_1(13), 
  4713 ;;  ap              2   69[BANK1 ] PTR PTR void 
  4714 ;;		 -> snprintf@ap(2), printf@ap(2), 
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;  cfmt            2   71[BANK1 ] PTR unsigned char 
  4717 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
  4718 ;;		 -> STR_4(22), STR_3(12), STR_1(13), 
  4719 ;; Return value:  Size  Location     Type
  4720 ;;                  2   65[BANK1 ] int 
  4721 ;; Registers used:
  4722 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4723 ;; Tracked objects:
  4724 ;;		On entry : 0/0
  4725 ;;		On exit  : 0/0
  4726 ;;		Unchanged: 0/0
  4727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4728 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4729 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4731 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4732 ;;Total ram usage:        8 bytes
  4733 ;; Hardware stack levels used:    1
  4734 ;; Hardware stack levels required when called:   20
  4735 ;; This function calls:
  4736 ;;		_vfpfcnvrt
  4737 ;; This function is called by:
  4738 ;;		_printf
  4739 ;;		_vsnprintf
  4740 ;; This function uses a non-reentrant model
  4741 ;;
  4742                           
  4743                           	psect	text9
  4744  005D52                     __ptext9:
  4745                           	opt callstack 0
  4746  005D52                     _vfprintf:
  4747                           	opt callstack 8
  4748  005D52                     
  4749                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4750  005D52  C143  F147         	movff	vfprintf@fmt,vfprintf@cfmt
  4751  005D56  C144  F148         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4752  005D5A                     
  4753                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  4754  005D5A  0E00               	movlw	0
  4755  005D5C  0101               	movlb	1	; () banked
  4756  005D5E  6F75               	movwf	(_nout+1)& (0+255),b
  4757  005D60  0E00               	movlw	0
  4758  005D62  6F74               	movwf	_nout& (0+255),b
  4759                           
  4760                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4761  005D64  EFC7  F02E         	goto	l8977
  4762  005D68                     l8975:
  4763                           
  4764                           ; BSR set to: 1
  4765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4766  005D68  C141  F11C         	movff	vfprintf@fp,vfpfcnvrt@fp
  4767  005D6C  C142  F11D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4768  005D70  0E47               	movlw	low vfprintf@cfmt
  4769  005D72  6F1E               	movwf	vfpfcnvrt@fmt& (0+255),b
  4770  005D74  0E01               	movlw	high vfprintf@cfmt
  4771  005D76  6F1F               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  4772  005D78  C145  F120         	movff	vfprintf@ap,vfpfcnvrt@ap
  4773  005D7C  C146  F121         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4774  005D80  EC49  F000         	call	_vfpfcnvrt	;wreg free
  4775  005D84  0101               	movlb	1	; () banked
  4776  005D86  511C               	movf	?_vfpfcnvrt& (0+255),w,b
  4777  005D88  2774               	addwf	_nout& (0+255),f,b
  4778  005D8A  511D               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  4779  005D8C  2375               	addwfc	(_nout+1)& (0+255),f,b
  4780  005D8E                     l8977:
  4781                           
  4782                           ; BSR set to: 1
  4783                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4784  005D8E  C147  FFF6         	movff	vfprintf@cfmt,tblptrl
  4785  005D92  C148  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4786  005D96                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4787  005D96  6AF8               	clrf	tblptru,c
  4788  005D98                     	endif
  4789  005D98                     	if	0	;tblptru may be non-zero
  4790  005D98                     	endif
  4791  005D98  0008               	tblrd		*
  4792  005D9A  50F5               	movf	tablat,w,c
  4793  005D9C  0900               	iorlw	0
  4794  005D9E  A4D8               	btfss	status,2,c
  4795  005DA0  EFD4  F02E         	goto	u11571
  4796  005DA4  EFD6  F02E         	goto	u11570
  4797  005DA8                     u11571:
  4798  005DA8  EFB4  F02E         	goto	l8975
  4799  005DAC                     u11570:
  4800  005DAC                     
  4801                           ; BSR set to: 1
  4802                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4803  005DAC  C174  F141         	movff	_nout,?_vfprintf
  4804  005DB0  C175  F142         	movff	_nout+1,?_vfprintf+1
  4805  005DB4                     
  4806                           ; BSR set to: 1
  4807  005DB4  0012               	return		;funcret
  4808  005DB6                     __end_of_vfprintf:
  4809                           	opt callstack 0
  4810                           
  4811 ;; *************** function _vfpfcnvrt *****************
  4812 ;; Defined at:
  4813 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;  fp              2   28[BANK1 ] PTR struct _IO_FILE
  4816 ;;		 -> vsnprintf@f(6), NULL(0), 
  4817 ;;  fmt             2   30[BANK1 ] PTR PTR unsigned char 
  4818 ;;		 -> vfprintf@cfmt(2), 
  4819 ;;  ap              2   32[BANK1 ] PTR PTR void 
  4820 ;;		 -> snprintf@ap(2), printf@ap(2), 
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;  llu             8   57[BANK1 ] unsigned long long 
  4823 ;;  ll              8   46[BANK1 ] long long 
  4824 ;;  f               4    0        long long 
  4825 ;;  ct              3    0        unsigned char [3]
  4826 ;;  vp              2   54[BANK1 ] PTR void 
  4827 ;;		 -> ?_snprintf(2), ?_printf(2), 
  4828 ;;  done            2   40[BANK1 ] int 
  4829 ;;  cp              2   38[BANK1 ] PTR unsigned char 
  4830 ;;		 -> ?_snprintf(2), ?_printf(2), 
  4831 ;;  i               2    0        int 
  4832 ;;  c               1   56[BANK1 ] unsigned char 
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  2   28[BANK1 ] int 
  4835 ;; Registers used:
  4836 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/0
  4839 ;;		On exit  : 0/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4842 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4843 ;;      Locals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4844 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4845 ;;      Totals:         0       0      37       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4846 ;;Total ram usage:       37 bytes
  4847 ;; Hardware stack levels used:    1
  4848 ;; Hardware stack levels required when called:   19
  4849 ;; This function calls:
  4850 ;;		_atoi
  4851 ;;		_ctoa
  4852 ;;		_dtoa
  4853 ;;		_fputc
  4854 ;;		_isdigit
  4855 ;;		_otoa
  4856 ;;		_stoa
  4857 ;;		_strncmp
  4858 ;;		_utoa
  4859 ;;		_xtoa
  4860 ;; This function is called by:
  4861 ;;		_vfprintf
  4862 ;; This function uses a non-reentrant model
  4863 ;;
  4864                           
  4865                           	psect	text10
  4866  000092                     __ptext10:
  4867                           	opt callstack 0
  4868  000092                     _vfpfcnvrt:
  4869                           	opt callstack 8
  4870  000092                     
  4871                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4872  000092  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4873  000096  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4874  00009A  CFDE FFF6          	movff	postinc2,tblptrl
  4875  00009E  CFDD FFF7          	movff	postdec2,tblptrh
  4876  0000A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4877  0000A2  6AF8               	clrf	tblptru,c
  4878  0000A4                     	endif
  4879  0000A4                     	if	0	;tblptru may be non-zero
  4880  0000A4                     	endif
  4881  0000A4  0008               	tblrd		*
  4882  0000A6  50F5               	movf	tablat,w,c
  4883  0000A8  0A25               	xorlw	37
  4884  0000AA  A4D8               	btfss	status,2,c
  4885  0000AC  EF5A  F000         	goto	u11101
  4886  0000B0  EF5C  F000         	goto	u11100
  4887  0000B4                     u11101:
  4888  0000B4  EF8B  F009         	goto	l8939
  4889  0000B8                     u11100:
  4890  0000B8                     
  4891                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4892  0000B8  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4893  0000BC  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4894  0000C0  2ADE               	incf	postinc2,f,c
  4895  0000C2  0E00               	movlw	0
  4896  0000C4  22DD               	addwfc	postdec2,f,c
  4897  0000C6                     
  4898                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4899  0000C6  0E00               	movlw	0
  4900  0000C8  0100               	movlb	0	; () banked
  4901  0000CA  6FBA               	movwf	(_width+1)& (0+255),b
  4902  0000CC  0E00               	movlw	0
  4903  0000CE  6FB9               	movwf	_width& (0+255),b
  4904  0000D0  C0B9  F0BD         	movff	_width,_flags
  4905  0000D4  C0BA  F0BE         	movff	_width+1,_flags+1
  4906  0000D8                     
  4907                           ; BSR set to: 0
  4908                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4909  0000D8  69BB               	setf	_prec& (0+255),b
  4910  0000DA  69BC               	setf	(_prec+1)& (0+255),b
  4911  0000DC                     
  4912                           ; BSR set to: 0
  4913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  4914  0000DC  0E00               	movlw	0
  4915  0000DE  0101               	movlb	1	; () banked
  4916  0000E0  6F29               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4917  0000E2  0E00               	movlw	0
  4918  0000E4  6F28               	movwf	vfpfcnvrt@done& (0+255),b
  4919                           
  4920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4921  0000E6  EFC1  F000         	goto	l8657
  4922  0000EA                     l8631:
  4923                           
  4924                           ; BSR set to: 1
  4925                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  4926  0000EA  0100               	movlb	0	; () banked
  4927  0000EC  81BD               	bsf	_flags& (0+255),0,b
  4928  0000EE                     l8633:
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  4932  0000EE  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4933  0000F2  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4934  0000F6  2ADE               	incf	postinc2,f,c
  4935  0000F8  0E00               	movlw	0
  4936  0000FA  22DD               	addwfc	postdec2,f,c
  4937                           
  4938                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  4939  0000FC  EFC1  F000         	goto	l8657
  4940  000100                     l8635:
  4941                           
  4942                           ; BSR set to: 1
  4943                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  4944  000100  0100               	movlb	0	; () banked
  4945  000102  83BD               	bsf	_flags& (0+255),1,b
  4946  000104  EF77  F000         	goto	l8633
  4947  000108                     l8639:
  4948                           
  4949                           ; BSR set to: 1
  4950                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  4951  000108  0100               	movlb	0	; () banked
  4952  00010A  85BD               	bsf	_flags& (0+255),2,b
  4953  00010C  EF77  F000         	goto	l8633
  4954  000110                     l8643:
  4955                           
  4956                           ; BSR set to: 1
  4957                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  4958  000110  0100               	movlb	0	; () banked
  4959  000112  87BD               	bsf	_flags& (0+255),3,b
  4960  000114  EF77  F000         	goto	l8633
  4961  000118                     l8647:
  4962                           
  4963                           ; BSR set to: 1
  4964                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  4965  000118  0100               	movlb	0	; () banked
  4966  00011A  89BD               	bsf	_flags& (0+255),4,b
  4967  00011C  EF77  F000         	goto	l8633
  4968  000120                     l8651:
  4969                           
  4970                           ; BSR set to: 1
  4971                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  4972  000120  0E00               	movlw	0
  4973  000122  6F29               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4974  000124  0E01               	movlw	1
  4975  000126  6F28               	movwf	vfpfcnvrt@done& (0+255),b
  4976                           
  4977                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  4978  000128  EFC1  F000         	goto	l8657
  4979  00012C                     l8655:
  4980                           
  4981                           ; BSR set to: 1
  4982  00012C  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4983  000130  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4984  000134  CFDE FFF6          	movff	postinc2,tblptrl
  4985  000138  CFDD FFF7          	movff	postdec2,tblptrh
  4986  00013C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4987  00013C  6AF8               	clrf	tblptru,c
  4988  00013E                     	endif
  4989  00013E                     	if	0	;tblptru may be non-zero
  4990  00013E                     	endif
  4991  00013E  0008               	tblrd		*
  4992  000140  50F5               	movf	tablat,w,c
  4993  000142  6F22               	movwf	??_vfpfcnvrt& (0+255),b
  4994  000144  6B23               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  4995                           
  4996                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4997                           ; Switch size 1, requested type "simple"
  4998                           ; Number of cases is 1, Range of values is 0 to 0
  4999                           ; switch strategies available:
  5000                           ; Name         Instructions Cycles
  5001                           ; simple_byte            4     3 (average)
  5002                           ;	Chosen strategy is simple_byte
  5003  000146  5123               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5004  000148  0A00               	xorlw	0	; case 0
  5005  00014A  B4D8               	btfsc	status,2,c
  5006  00014C  EFAA  F000         	goto	l9213
  5007  000150  EF90  F000         	goto	l8651
  5008  000154                     l9213:
  5009                           
  5010                           ; BSR set to: 1
  5011                           ; Switch size 1, requested type "simple"
  5012                           ; Number of cases is 5, Range of values is 32 to 48
  5013                           ; switch strategies available:
  5014                           ; Name         Instructions Cycles
  5015                           ; simple_byte           16     9 (average)
  5016                           ;	Chosen strategy is simple_byte
  5017  000154  5122               	movf	??_vfpfcnvrt& (0+255),w,b
  5018  000156  0A20               	xorlw	32	; case 32
  5019  000158  B4D8               	btfsc	status,2,c
  5020  00015A  EF88  F000         	goto	l8643
  5021  00015E  0A03               	xorlw	3	; case 35
  5022  000160  B4D8               	btfsc	status,2,c
  5023  000162  EF8C  F000         	goto	l8647
  5024  000166  0A08               	xorlw	8	; case 43
  5025  000168  B4D8               	btfsc	status,2,c
  5026  00016A  EF84  F000         	goto	l8639
  5027  00016E  0A06               	xorlw	6	; case 45
  5028  000170  B4D8               	btfsc	status,2,c
  5029  000172  EF75  F000         	goto	l8631
  5030  000176  0A1D               	xorlw	29	; case 48
  5031  000178  B4D8               	btfsc	status,2,c
  5032  00017A  EF80  F000         	goto	l8635
  5033  00017E  EF90  F000         	goto	l8651
  5034  000182                     l8657:
  5035                           
  5036                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  5037  000182  0101               	movlb	1	; () banked
  5038  000184  5128               	movf	vfpfcnvrt@done& (0+255),w,b
  5039  000186  1129               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  5040  000188  B4D8               	btfsc	status,2,c
  5041  00018A  EFC9  F000         	goto	u11111
  5042  00018E  EFCB  F000         	goto	u11110
  5043  000192                     u11111:
  5044  000192  EF96  F000         	goto	l8655
  5045  000196                     u11110:
  5046  000196                     
  5047                           ; BSR set to: 1
  5048                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  5049  000196  0100               	movlb	0	; () banked
  5050  000198  A1BD               	btfss	_flags& (0+255),0,b
  5051  00019A  EFD1  F000         	goto	u11121
  5052  00019E  EFD3  F000         	goto	u11120
  5053  0001A2                     u11121:
  5054  0001A2  EFD4  F000         	goto	l8661
  5055  0001A6                     u11120:
  5056  0001A6                     
  5057                           ; BSR set to: 0
  5058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  5059  0001A6  93BD               	bcf	_flags& (0+255),1,b
  5060  0001A8                     l8661:
  5061                           
  5062                           ; BSR set to: 0
  5063                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  5064  0001A8  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5065  0001AC  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5066  0001B0  CFDE FFF6          	movff	postinc2,tblptrl
  5067  0001B4  CFDD FFF7          	movff	postdec2,tblptrh
  5068  0001B8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5069  0001B8  6AF8               	clrf	tblptru,c
  5070  0001BA                     	endif
  5071  0001BA                     	if	0	;tblptru may be non-zero
  5072  0001BA                     	endif
  5073  0001BA  0008               	tblrd		*
  5074  0001BC  50F5               	movf	tablat,w,c
  5075  0001BE  0A2A               	xorlw	42
  5076  0001C0  A4D8               	btfss	status,2,c
  5077  0001C2  EFE5  F000         	goto	u11131
  5078  0001C6  EFE7  F000         	goto	u11130
  5079  0001CA                     u11131:
  5080  0001CA  EF10  F001         	goto	l8669
  5081  0001CE                     u11130:
  5082  0001CE                     
  5083                           ; BSR set to: 0
  5084                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  5085  0001CE  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5086  0001D2  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5087  0001D6  2ADE               	incf	postinc2,f,c
  5088  0001D8  0E00               	movlw	0
  5089  0001DA  22DD               	addwfc	postdec2,f,c
  5090                           
  5091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  5092  0001DC  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5093  0001E0  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5094  0001E4  CFDF F122          	movff	indf2,??_vfpfcnvrt
  5095  0001E8  0E02               	movlw	2
  5096  0001EA  26DE               	addwf	postinc2,f,c
  5097  0001EC  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  5098  0001F0  0E00               	movlw	0
  5099  0001F2  22DD               	addwfc	postdec2,f,c
  5100  0001F4  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5101  0001F8  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5102  0001FC  CFDE F0B9          	movff	postinc2,_width
  5103  000200  CFDD F0BA          	movff	postdec2,_width+1
  5104  000204                     
  5105                           ; BSR set to: 0
  5106                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  5107  000204  BFBA               	btfsc	(_width+1)& (0+255),7,b
  5108  000206  EF09  F001         	goto	u11140
  5109  00020A  EF07  F001         	goto	u11141
  5110  00020E                     u11141:
  5111  00020E  EF55  F001         	goto	l8679
  5112  000212                     u11140:
  5113  000212                     
  5114                           ; BSR set to: 0
  5115                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  5116  000212  81BD               	bsf	_flags& (0+255),0,b
  5117                           
  5118                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  5119  000214  6DB9               	negf	_width& (0+255),b
  5120  000216  1FBA               	comf	(_width+1)& (0+255),f,b
  5121  000218  B0D8               	btfsc	status,0,c
  5122  00021A  2BBA               	incf	(_width+1)& (0+255),f,b
  5123  00021C  EF55  F001         	goto	l8679
  5124  000220                     l8669:
  5125                           
  5126                           ; BSR set to: 0
  5127                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  5128  000220  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5129  000224  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5130  000228  CFDE F094          	movff	postinc2,atoi@s
  5131  00022C  CFDD F095          	movff	postdec2,atoi@s+1
  5132  000230  EC1C  F01D         	call	_atoi	;wreg free
  5133  000234  C094  F0B9         	movff	?_atoi,_width
  5134  000238  C095  F0BA         	movff	?_atoi+1,_width+1
  5135                           
  5136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5137  00023C  EF27  F001         	goto	l8673
  5138  000240                     l8671:
  5139                           
  5140                           ; BSR set to: 1
  5141                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  5142  000240  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5143  000244  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5144  000248  2ADE               	incf	postinc2,f,c
  5145  00024A  0E00               	movlw	0
  5146  00024C  22DD               	addwfc	postdec2,f,c
  5147  00024E                     l8673:
  5148  00024E  0ED0               	movlw	208
  5149  000250  0101               	movlb	1	; () banked
  5150  000252  6F22               	movwf	??_vfpfcnvrt& (0+255),b
  5151  000254  0EFF               	movlw	255
  5152  000256  6F23               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5153  000258  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5154  00025C  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5155  000260  CFDE FFF6          	movff	postinc2,tblptrl
  5156  000264  CFDD FFF7          	movff	postdec2,tblptrh
  5157  000268                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5158  000268  6AF8               	clrf	tblptru,c
  5159  00026A                     	endif
  5160  00026A                     	if	0	;tblptru may be non-zero
  5161  00026A                     	endif
  5162  00026A  0008               	tblrd		*
  5163  00026C  50F5               	movf	tablat,w,c
  5164  00026E  6F24               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5165  000270  6B25               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5166  000272  5122               	movf	??_vfpfcnvrt& (0+255),w,b
  5167  000274  2724               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5168  000276  5123               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5169  000278  2325               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5170  00027A  5125               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5171  00027C  E10A               	bnz	u11150
  5172  00027E  0E0A               	movlw	10
  5173  000280  5D24               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5174  000282  A0D8               	btfss	status,0,c
  5175  000284  EF46  F001         	goto	u11151
  5176  000288  EF49  F001         	goto	u11150
  5177  00028C                     u11151:
  5178  00028C  0E01               	movlw	1
  5179  00028E  EF4A  F001         	goto	u11160
  5180  000292                     u11150:
  5181  000292  0E00               	movlw	0
  5182  000294                     u11160:
  5183  000294  6F2A               	movwf	_vfpfcnvrt$1723& (0+255),b
  5184  000296  6B2B               	clrf	(_vfpfcnvrt$1723+1)& (0+255),b
  5185  000298                     
  5186                           ; BSR set to: 1
  5187  000298  512A               	movf	_vfpfcnvrt$1723& (0+255),w,b
  5188  00029A  112B               	iorwf	(_vfpfcnvrt$1723+1)& (0+255),w,b
  5189  00029C  A4D8               	btfss	status,2,c
  5190  00029E  EF53  F001         	goto	u11171
  5191  0002A2  EF55  F001         	goto	u11170
  5192  0002A6                     u11171:
  5193  0002A6  EF20  F001         	goto	l8671
  5194  0002AA                     u11170:
  5195  0002AA                     l8679:
  5196                           
  5197                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  5198  0002AA  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5199  0002AE  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5200  0002B2  CFDE FFF6          	movff	postinc2,tblptrl
  5201  0002B6  CFDD FFF7          	movff	postdec2,tblptrh
  5202  0002BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5203  0002BA  6AF8               	clrf	tblptru,c
  5204  0002BC                     	endif
  5205  0002BC                     	if	0	;tblptru may be non-zero
  5206  0002BC                     	endif
  5207  0002BC  0008               	tblrd		*
  5208  0002BE  50F5               	movf	tablat,w,c
  5209  0002C0  0A2E               	xorlw	46
  5210  0002C2  A4D8               	btfss	status,2,c
  5211  0002C4  EF66  F001         	goto	u11181
  5212  0002C8  EF68  F001         	goto	u11180
  5213  0002CC                     u11181:
  5214  0002CC  EFE9  F001         	goto	l8699
  5215  0002D0                     u11180:
  5216  0002D0                     
  5217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  5218  0002D0  0E00               	movlw	0
  5219  0002D2  0100               	movlb	0	; () banked
  5220  0002D4  6FBC               	movwf	(_prec+1)& (0+255),b
  5221  0002D6  0E00               	movlw	0
  5222  0002D8  6FBB               	movwf	_prec& (0+255),b
  5223  0002DA                     
  5224                           ; BSR set to: 0
  5225                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  5226  0002DA  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5227  0002DE  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5228  0002E2  2ADE               	incf	postinc2,f,c
  5229  0002E4  0E00               	movlw	0
  5230  0002E6  22DD               	addwfc	postdec2,f,c
  5231  0002E8                     
  5232                           ; BSR set to: 0
  5233                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  5234  0002E8  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5235  0002EC  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5236  0002F0  CFDE FFF6          	movff	postinc2,tblptrl
  5237  0002F4  CFDD FFF7          	movff	postdec2,tblptrh
  5238  0002F8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5239  0002F8  6AF8               	clrf	tblptru,c
  5240  0002FA                     	endif
  5241  0002FA                     	if	0	;tblptru may be non-zero
  5242  0002FA                     	endif
  5243  0002FA  0008               	tblrd		*
  5244  0002FC  50F5               	movf	tablat,w,c
  5245  0002FE  0A2A               	xorlw	42
  5246  000300  A4D8               	btfss	status,2,c
  5247  000302  EF85  F001         	goto	u11191
  5248  000306  EF87  F001         	goto	u11190
  5249  00030A                     u11191:
  5250  00030A  EFA4  F001         	goto	l8689
  5251  00030E                     u11190:
  5252  00030E                     
  5253                           ; BSR set to: 0
  5254                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  5255  00030E  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5256  000312  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5257  000316  2ADE               	incf	postinc2,f,c
  5258  000318  0E00               	movlw	0
  5259  00031A  22DD               	addwfc	postdec2,f,c
  5260                           
  5261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  5262  00031C  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5263  000320  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5264  000324  CFDF F122          	movff	indf2,??_vfpfcnvrt
  5265  000328  0E02               	movlw	2
  5266  00032A  26DE               	addwf	postinc2,f,c
  5267  00032C  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  5268  000330  0E00               	movlw	0
  5269  000332  22DD               	addwfc	postdec2,f,c
  5270  000334  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5271  000338  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5272  00033C  CFDE F0BB          	movff	postinc2,_prec
  5273  000340  CFDD F0BC          	movff	postdec2,_prec+1
  5274                           
  5275                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  5276  000344  EFE9  F001         	goto	l8699
  5277  000348                     l8689:
  5278                           
  5279                           ; BSR set to: 0
  5280                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  5281  000348  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5282  00034C  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5283  000350  CFDE F094          	movff	postinc2,atoi@s
  5284  000354  CFDD F095          	movff	postdec2,atoi@s+1
  5285  000358  EC1C  F01D         	call	_atoi	;wreg free
  5286  00035C  C094  F0BB         	movff	?_atoi,_prec
  5287  000360  C095  F0BC         	movff	?_atoi+1,_prec+1
  5288                           
  5289                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5290  000364  EFBB  F001         	goto	l8693
  5291  000368                     l8691:
  5292                           
  5293                           ; BSR set to: 1
  5294                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  5295  000368  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5296  00036C  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5297  000370  2ADE               	incf	postinc2,f,c
  5298  000372  0E00               	movlw	0
  5299  000374  22DD               	addwfc	postdec2,f,c
  5300  000376                     l8693:
  5301  000376  0ED0               	movlw	208
  5302  000378  0101               	movlb	1	; () banked
  5303  00037A  6F22               	movwf	??_vfpfcnvrt& (0+255),b
  5304  00037C  0EFF               	movlw	255
  5305  00037E  6F23               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5306  000380  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5307  000384  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5308  000388  CFDE FFF6          	movff	postinc2,tblptrl
  5309  00038C  CFDD FFF7          	movff	postdec2,tblptrh
  5310  000390                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5311  000390  6AF8               	clrf	tblptru,c
  5312  000392                     	endif
  5313  000392                     	if	0	;tblptru may be non-zero
  5314  000392                     	endif
  5315  000392  0008               	tblrd		*
  5316  000394  50F5               	movf	tablat,w,c
  5317  000396  6F24               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5318  000398  6B25               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5319  00039A  5122               	movf	??_vfpfcnvrt& (0+255),w,b
  5320  00039C  2724               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5321  00039E  5123               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5322  0003A0  2325               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5323  0003A2  5125               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5324  0003A4  E10A               	bnz	u11200
  5325  0003A6  0E0A               	movlw	10
  5326  0003A8  5D24               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5327  0003AA  A0D8               	btfss	status,0,c
  5328  0003AC  EFDA  F001         	goto	u11201
  5329  0003B0  EFDD  F001         	goto	u11200
  5330  0003B4                     u11201:
  5331  0003B4  0E01               	movlw	1
  5332  0003B6  EFDE  F001         	goto	u11210
  5333  0003BA                     u11200:
  5334  0003BA  0E00               	movlw	0
  5335  0003BC                     u11210:
  5336  0003BC  6F2C               	movwf	_vfpfcnvrt$1724& (0+255),b
  5337  0003BE  6B2D               	clrf	(_vfpfcnvrt$1724+1)& (0+255),b
  5338  0003C0                     
  5339                           ; BSR set to: 1
  5340  0003C0  512C               	movf	_vfpfcnvrt$1724& (0+255),w,b
  5341  0003C2  112D               	iorwf	(_vfpfcnvrt$1724+1)& (0+255),w,b
  5342  0003C4  A4D8               	btfss	status,2,c
  5343  0003C6  EFE7  F001         	goto	u11221
  5344  0003CA  EFE9  F001         	goto	u11220
  5345  0003CE                     u11221:
  5346  0003CE  EFB4  F001         	goto	l8691
  5347  0003D2                     u11220:
  5348  0003D2                     l8699:
  5349                           
  5350                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  5351  0003D2  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5352  0003D6  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5353  0003DA  CFDE FFF6          	movff	postinc2,tblptrl
  5354  0003DE  CFDD FFF7          	movff	postdec2,tblptrh
  5355  0003E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5356  0003E2  6AF8               	clrf	tblptru,c
  5357  0003E4                     	endif
  5358  0003E4                     	if	0	;tblptru may be non-zero
  5359  0003E4                     	endif
  5360  0003E4  0008               	tblrd		*
  5361  0003E6  50F5               	movf	tablat,w,c
  5362  0003E8  0A63               	xorlw	99
  5363  0003EA  A4D8               	btfss	status,2,c
  5364  0003EC  EFFA  F001         	goto	u11231
  5365  0003F0  EFFC  F001         	goto	u11230
  5366  0003F4                     u11231:
  5367  0003F4  EF24  F002         	goto	l8707
  5368  0003F8                     u11230:
  5369  0003F8                     
  5370                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  5371  0003F8  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5372  0003FC  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5373  000400  2ADE               	incf	postinc2,f,c
  5374  000402  0E00               	movlw	0
  5375  000404  22DD               	addwfc	postdec2,f,c
  5376                           
  5377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5378  000406  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5379  00040A  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5380  00040E  CFDF F122          	movff	indf2,??_vfpfcnvrt
  5381  000412  0E02               	movlw	2
  5382  000414  26DE               	addwf	postinc2,f,c
  5383  000416  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  5384  00041A  0E00               	movlw	0
  5385  00041C  22DD               	addwfc	postdec2,f,c
  5386  00041E  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5387  000422  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5388  000426  50DF               	movf	indf2,w,c
  5389  000428  0101               	movlb	1	; () banked
  5390  00042A  6F38               	movwf	vfpfcnvrt@c& (0+255),b
  5391  00042C                     
  5392                           ; BSR set to: 1
  5393                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  5394  00042C  C11C  F0AA         	movff	vfpfcnvrt@fp,ctoa@fp
  5395  000430  C11D  F0AB         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  5396  000434  C138  F0AC         	movff	vfpfcnvrt@c,ctoa@c
  5397  000438  EC3D  F02F         	call	_ctoa	;wreg free
  5398  00043C  C0AA  F11C         	movff	?_ctoa,?_vfpfcnvrt
  5399  000440  C0AB  F11D         	movff	?_ctoa+1,?_vfpfcnvrt+1
  5400  000444  EFA8  F009         	goto	l799
  5401  000448                     l8707:
  5402                           
  5403                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
  5404  000448  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5405  00044C  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5406  000450  CFDE F08D          	movff	postinc2,strncmp@_l
  5407  000454  CFDD F08E          	movff	postdec2,strncmp@_l+1
  5408  000458  0ED1               	movlw	low STR_9
  5409  00045A  0100               	movlb	0	; () banked
  5410  00045C  6F8F               	movwf	strncmp@_r& (0+255),b
  5411  00045E  0EFF               	movlw	high STR_9
  5412  000460  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  5413  000462  0E00               	movlw	0
  5414  000464  6F92               	movwf	(strncmp@n+1)& (0+255),b
  5415  000466  0E03               	movlw	3
  5416  000468  6F91               	movwf	strncmp@n& (0+255),b
  5417  00046A  ECF5  F029         	call	_strncmp	;wreg free
  5418  00046E  0100               	movlb	0	; () banked
  5419  000470  518D               	movf	?_strncmp& (0+255),w,b
  5420  000472  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  5421  000474  B4D8               	btfsc	status,2,c
  5422  000476  EF3F  F002         	goto	u11241
  5423  00047A  EF41  F002         	goto	u11240
  5424  00047E                     u11241:
  5425  00047E  EF5D  F002         	goto	l8711
  5426  000482                     u11240:
  5427  000482                     
  5428                           ; BSR set to: 0
  5429  000482  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5430  000486  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5431  00048A  CFDE F08D          	movff	postinc2,strncmp@_l
  5432  00048E  CFDD F08E          	movff	postdec2,strncmp@_l+1
  5433  000492  0ED5               	movlw	low STR_13
  5434  000494  6F8F               	movwf	strncmp@_r& (0+255),b
  5435  000496  0EFF               	movlw	high STR_13
  5436  000498  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  5437  00049A  0E00               	movlw	0
  5438  00049C  6F92               	movwf	(strncmp@n+1)& (0+255),b
  5439  00049E  0E03               	movlw	3
  5440  0004A0  6F91               	movwf	strncmp@n& (0+255),b
  5441  0004A2  ECF5  F029         	call	_strncmp	;wreg free
  5442  0004A6  0100               	movlb	0	; () banked
  5443  0004A8  518D               	movf	?_strncmp& (0+255),w,b
  5444  0004AA  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  5445  0004AC  A4D8               	btfss	status,2,c
  5446  0004AE  EF5B  F002         	goto	u11251
  5447  0004B2  EF5D  F002         	goto	u11250
  5448  0004B6                     u11251:
  5449  0004B6  EF9E  F002         	goto	l8717
  5450  0004BA                     u11250:
  5451  0004BA                     l8711:
  5452                           
  5453                           ; BSR set to: 0
  5454                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
  5455  0004BA  0E03               	movlw	3
  5456  0004BC  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5457  0004C0  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5458  0004C4  26DE               	addwf	postinc2,f,c
  5459  0004C6  0E00               	movlw	0
  5460  0004C8  22DD               	addwfc	postdec2,f,c
  5461                           
  5462                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5463  0004CA  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5464  0004CE  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5465  0004D2  CFDF F122          	movff	indf2,??_vfpfcnvrt
  5466  0004D6  0E02               	movlw	2
  5467  0004D8  26DE               	addwf	postinc2,f,c
  5468  0004DA  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  5469  0004DE  0E00               	movlw	0
  5470  0004E0  22DD               	addwfc	postdec2,f,c
  5471  0004E2  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5472  0004E6  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5473  0004EA  50DF               	movf	indf2,w,c
  5474  0004EC  0101               	movlb	1	; () banked
  5475  0004EE  6F2E               	movwf	vfpfcnvrt@ll& (0+255),b
  5476  0004F0  0E00               	movlw	0
  5477  0004F2  BF2E               	btfsc	vfpfcnvrt@ll& (0+255),7,b
  5478  0004F4  0EFF               	movlw	-1
  5479  0004F6  6F2F               	movwf	(vfpfcnvrt@ll+1)& (0+255),b
  5480  0004F8  6F30               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  5481  0004FA  6F31               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  5482  0004FC  6F32               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  5483  0004FE  6F33               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  5484  000500  6F34               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  5485  000502  6F35               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  5486  000504                     l8713:
  5487                           
  5488                           ; BSR set to: 1
  5489                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
  5490  000504  C11C  F0AA         	movff	vfpfcnvrt@fp,dtoa@fp
  5491  000508  C11D  F0AB         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5492  00050C  C12E  F0AC         	movff	vfpfcnvrt@ll,dtoa@d
  5493  000510  C12F  F0AD         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5494  000514  C130  F0AE         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5495  000518  C131  F0AF         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5496  00051C  C132  F0B0         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5497  000520  C133  F0B1         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5498  000524  C134  F0B2         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5499  000528  C135  F0B3         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5500  00052C  EC00  F015         	call	_dtoa	;wreg free
  5501  000530  C0AA  F11C         	movff	?_dtoa,?_vfpfcnvrt
  5502  000534  C0AB  F11D         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5503  000538  EFA8  F009         	goto	l799
  5504  00053C                     l8717:
  5505                           
  5506                           ; BSR set to: 0
  5507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
  5508  00053C  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5509  000540  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5510  000544  CFDE F08D          	movff	postinc2,strncmp@_l
  5511  000548  CFDD F08E          	movff	postdec2,strncmp@_l+1
  5512  00054C  0ED2               	movlw	low (STR_9+1)
  5513  00054E  6F8F               	movwf	strncmp@_r& (0+255),b
  5514  000550  0EFF               	movlw	high (STR_9+1)
  5515  000552  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  5516  000554  0E00               	movlw	0
  5517  000556  6F92               	movwf	(strncmp@n+1)& (0+255),b
  5518  000558  0E02               	movlw	2
  5519  00055A  6F91               	movwf	strncmp@n& (0+255),b
  5520  00055C  ECF5  F029         	call	_strncmp	;wreg free
  5521  000560  0100               	movlb	0	; () banked
  5522  000562  518D               	movf	?_strncmp& (0+255),w,b
  5523  000564  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  5524  000566  B4D8               	btfsc	status,2,c
  5525  000568  EFB8  F002         	goto	u11261
  5526  00056C  EFBA  F002         	goto	u11260
  5527  000570                     u11261:
  5528  000570  EFD6  F002         	goto	l8721
  5529  000574                     u11260:
  5530  000574                     
  5531                           ; BSR set to: 0
  5532  000574  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5533  000578  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5534  00057C  CFDE F08D          	movff	postinc2,strncmp@_l
  5535  000580  CFDD F08E          	movff	postdec2,strncmp@_l+1
  5536  000584  0ED6               	movlw	low (STR_13+1)
  5537  000586  6F8F               	movwf	strncmp@_r& (0+255),b
  5538  000588  0EFF               	movlw	high (STR_13+1)
  5539  00058A  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  5540  00058C  0E00               	movlw	0
  5541  00058E  6F92               	movwf	(strncmp@n+1)& (0+255),b
  5542  000590  0E02               	movlw	2
  5543  000592  6F91               	movwf	strncmp@n& (0+255),b
  5544  000594  ECF5  F029         	call	_strncmp	;wreg free
  5545  000598  0100               	movlb	0	; () banked
  5546  00059A  518D               	movf	?_strncmp& (0+255),w,b
  5547  00059C  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  5548  00059E  A4D8               	btfss	status,2,c
  5549  0005A0  EFD4  F002         	goto	u11271
  5550  0005A4  EFD6  F002         	goto	u11270
  5551  0005A8                     u11271:
  5552  0005A8  EFFE  F002         	goto	l8727
  5553  0005AC                     u11270:
  5554  0005AC                     l8721:
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
  5558  0005AC  0E02               	movlw	2
  5559  0005AE  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5560  0005B2  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5561  0005B6  26DE               	addwf	postinc2,f,c
  5562  0005B8  0E00               	movlw	0
  5563  0005BA  22DD               	addwfc	postdec2,f,c
  5564                           
  5565                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5566  0005BC  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5567  0005C0  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5568  0005C4  CFDF F122          	movff	indf2,??_vfpfcnvrt
  5569  0005C8  0E02               	movlw	2
  5570  0005CA  26DE               	addwf	postinc2,f,c
  5571  0005CC  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  5572  0005D0  0E00               	movlw	0
  5573  0005D2  22DD               	addwfc	postdec2,f,c
  5574  0005D4  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5575  0005D8  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5576  0005DC  CFDE F12E          	movff	postinc2,vfpfcnvrt@ll
  5577  0005E0  CFDD F12F          	movff	postdec2,vfpfcnvrt@ll+1
  5578  0005E4  0101               	movlb	1	; () banked
  5579  0005E6  0E00               	movlw	0
  5580  0005E8  BF2F               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  5581  0005EA  0EFF               	movlw	-1
  5582  0005EC  6F30               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  5583  0005EE  6F31               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  5584  0005F0  6F32               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  5585  0005F2  6F33               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  5586  0005F4  6F34               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  5587  0005F6  6F35               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  5588  0005F8  EF82  F002         	goto	l8713
  5589  0005FC                     l8727:
  5590                           
  5591                           ; BSR set to: 0
  5592                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5593  0005FC  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5594  000600  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5595  000604  CFDE FFF6          	movff	postinc2,tblptrl
  5596  000608  CFDD FFF7          	movff	postdec2,tblptrh
  5597  00060C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5598  00060C  6AF8               	clrf	tblptru,c
  5599  00060E                     	endif
  5600  00060E                     	if	0	;tblptru may be non-zero
  5601  00060E                     	endif
  5602  00060E  0008               	tblrd		*
  5603  000610  50F5               	movf	tablat,w,c
  5604  000612  0A64               	xorlw	100
  5605  000614  B4D8               	btfsc	status,2,c
  5606  000616  EF0F  F003         	goto	u11281
  5607  00061A  EF11  F003         	goto	u11280
  5608  00061E                     u11281:
  5609  00061E  EF24  F003         	goto	l8731
  5610  000622                     u11280:
  5611  000622                     
  5612                           ; BSR set to: 0
  5613  000622  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5614  000626  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5615  00062A  CFDE FFF6          	movff	postinc2,tblptrl
  5616  00062E  CFDD FFF7          	movff	postdec2,tblptrh
  5617  000632                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5618  000632  6AF8               	clrf	tblptru,c
  5619  000634                     	endif
  5620  000634                     	if	0	;tblptru may be non-zero
  5621  000634                     	endif
  5622  000634  0008               	tblrd		*
  5623  000636  50F5               	movf	tablat,w,c
  5624  000638  0A69               	xorlw	105
  5625  00063A  A4D8               	btfss	status,2,c
  5626  00063C  EF22  F003         	goto	u11291
  5627  000640  EF24  F003         	goto	u11290
  5628  000644                     u11291:
  5629  000644  EF4B  F003         	goto	l8737
  5630  000648                     u11290:
  5631  000648                     l8731:
  5632                           
  5633                           ; BSR set to: 0
  5634                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  5635  000648  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5636  00064C  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5637  000650  2ADE               	incf	postinc2,f,c
  5638  000652  0E00               	movlw	0
  5639  000654  22DD               	addwfc	postdec2,f,c
  5640                           
  5641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5642  000656  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5643  00065A  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5644  00065E  CFDF F122          	movff	indf2,??_vfpfcnvrt
  5645  000662  0E02               	movlw	2
  5646  000664  26DE               	addwf	postinc2,f,c
  5647  000666  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  5648  00066A  0E00               	movlw	0
  5649  00066C  22DD               	addwfc	postdec2,f,c
  5650  00066E  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5651  000672  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5652  000676  CFDE F12E          	movff	postinc2,vfpfcnvrt@ll
  5653  00067A  CFDD F12F          	movff	postdec2,vfpfcnvrt@ll+1
  5654  00067E  0101               	movlb	1	; () banked
  5655  000680  0E00               	movlw	0
  5656  000682  BF2F               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  5657  000684  0EFF               	movlw	-1
  5658  000686  6F30               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  5659  000688  6F31               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  5660  00068A  6F32               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  5661  00068C  6F33               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  5662  00068E  6F34               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  5663  000690  6F35               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  5664  000692  EF82  F002         	goto	l8713
  5665  000696                     l8737:
  5666                           
  5667                           ; BSR set to: 0
  5668                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
  5669  000696  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5670  00069A  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5671  00069E  CFDE F08D          	movff	postinc2,strncmp@_l
  5672  0006A2  CFDD F08E          	movff	postdec2,strncmp@_l+1
  5673  0006A6  0EEC               	movlw	low STR_27
  5674  0006A8  6F8F               	movwf	strncmp@_r& (0+255),b
  5675  0006AA  0EFF               	movlw	high STR_27
  5676  0006AC  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  5677  0006AE  0E00               	movlw	0
  5678  0006B0  6F92               	movwf	(strncmp@n+1)& (0+255),b
  5679  0006B2  0E02               	movlw	2
  5680  0006B4  6F91               	movwf	strncmp@n& (0+255),b
  5681  0006B6  ECF5  F029         	call	_strncmp	;wreg free
  5682  0006BA  0100               	movlb	0	; () banked
  5683  0006BC  518D               	movf	?_strncmp& (0+255),w,b
  5684  0006BE  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  5685  0006C0  B4D8               	btfsc	status,2,c
  5686  0006C2  EF65  F003         	goto	u11301
  5687  0006C6  EF67  F003         	goto	u11300
  5688  0006CA                     u11301:
  5689  0006CA  EF83  F003         	goto	l8741
  5690  0006CE                     u11300:
  5691  0006CE                     
  5692                           ; BSR set to: 0
  5693  0006CE  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5694  0006D2  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5695  0006D6  CFDE F08D          	movff	postinc2,strncmp@_l
  5696  0006DA  CFDD F08E          	movff	postdec2,strncmp@_l+1
  5697  0006DE  0EEF               	movlw	low STR_31
  5698  0006E0  6F8F               	movwf	strncmp@_r& (0+255),b
  5699  0006E2  0EFF               	movlw	high STR_31
  5700  0006E4  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  5701  0006E6  0E00               	movlw	0
  5702  0006E8  6F92               	movwf	(strncmp@n+1)& (0+255),b
  5703  0006EA  0E02               	movlw	2
  5704  0006EC  6F91               	movwf	strncmp@n& (0+255),b
  5705  0006EE  ECF5  F029         	call	_strncmp	;wreg free
  5706  0006F2  0100               	movlb	0	; () banked
  5707  0006F4  518D               	movf	?_strncmp& (0+255),w,b
  5708  0006F6  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  5709  0006F8  A4D8               	btfss	status,2,c
  5710  0006FA  EF81  F003         	goto	u11311
  5711  0006FE  EF83  F003         	goto	u11310
  5712  000702                     u11311:
  5713  000702  EFAC  F003         	goto	l8747
  5714  000706                     u11310:
  5715  000706                     l8741:
  5716                           
  5717                           ; BSR set to: 0
  5718                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
  5719  000706  0E02               	movlw	2
  5720  000708  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5721  00070C  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5722  000710  26DE               	addwf	postinc2,f,c
  5723  000712  0E00               	movlw	0
  5724  000714  22DD               	addwfc	postdec2,f,c
  5725                           
  5726                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5727  000716  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5728  00071A  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5729  00071E  CFDF F122          	movff	indf2,??_vfpfcnvrt
  5730  000722  0E02               	movlw	2
  5731  000724  26DE               	addwf	postinc2,f,c
  5732  000726  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  5733  00072A  0E00               	movlw	0
  5734  00072C  22DD               	addwfc	postdec2,f,c
  5735  00072E  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5736  000732  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5737  000736  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  5738  00073A  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  5739  00073E  C124  F12E         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  5740  000742  C125  F12F         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  5741  000746  0101               	movlb	1	; () banked
  5742  000748  6B30               	clrf	(vfpfcnvrt@ll+2)& (0+255),b
  5743  00074A  6B31               	clrf	(vfpfcnvrt@ll+3)& (0+255),b
  5744  00074C  6B32               	clrf	(vfpfcnvrt@ll+4)& (0+255),b
  5745  00074E  6B33               	clrf	(vfpfcnvrt@ll+5)& (0+255),b
  5746  000750  6B34               	clrf	(vfpfcnvrt@ll+6)& (0+255),b
  5747  000752  6B35               	clrf	(vfpfcnvrt@ll+7)& (0+255),b
  5748  000754  EF82  F002         	goto	l8713
  5749  000758                     l8747:
  5750                           
  5751                           ; BSR set to: 0
  5752                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  5753  000758  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5754  00075C  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5755  000760  CFDE F08D          	movff	postinc2,strncmp@_l
  5756  000764  CFDD F08E          	movff	postdec2,strncmp@_l+1
  5757  000768  0EDD               	movlw	low STR_36
  5758  00076A  6F8F               	movwf	strncmp@_r& (0+255),b
  5759  00076C  0EFF               	movlw	high STR_36
  5760  00076E  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  5761  000770  0E00               	movlw	0
  5762  000772  6F92               	movwf	(strncmp@n+1)& (0+255),b
  5763  000774  0E03               	movlw	3
  5764  000776  6F91               	movwf	strncmp@n& (0+255),b
  5765  000778  ECF5  F029         	call	_strncmp	;wreg free
  5766  00077C  0100               	movlb	0	; () banked
  5767  00077E  518D               	movf	?_strncmp& (0+255),w,b
  5768  000780  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  5769  000782  A4D8               	btfss	status,2,c
  5770  000784  EFC6  F003         	goto	u11321
  5771  000788  EFC8  F003         	goto	u11320
  5772  00078C                     u11321:
  5773  00078C  EF08  F004         	goto	l8755
  5774  000790                     u11320:
  5775  000790                     
  5776                           ; BSR set to: 0
  5777                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  5778  000790  0E03               	movlw	3
  5779  000792  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5780  000796  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5781  00079A  26DE               	addwf	postinc2,f,c
  5782  00079C  0E00               	movlw	0
  5783  00079E  22DD               	addwfc	postdec2,f,c
  5784                           
  5785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5786  0007A0  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5787  0007A4  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5788  0007A8  CFDF F122          	movff	indf2,??_vfpfcnvrt
  5789  0007AC  0E02               	movlw	2
  5790  0007AE  26DE               	addwf	postinc2,f,c
  5791  0007B0  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  5792  0007B4  0E00               	movlw	0
  5793  0007B6  22DD               	addwfc	postdec2,f,c
  5794  0007B8  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5795  0007BC  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5796  0007C0  50DF               	movf	indf2,w,c
  5797  0007C2  0101               	movlb	1	; () banked
  5798  0007C4  6F24               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5799  0007C6  5124               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  5800  0007C8  6F39               	movwf	vfpfcnvrt@llu& (0+255),b
  5801  0007CA  6B3A               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  5802  0007CC  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5803  0007CE  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5804  0007D0  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5805  0007D2  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5806  0007D4  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5807  0007D6  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5808  0007D8                     l8751:
  5809                           
  5810                           ; BSR set to: 1
  5811                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
  5812  0007D8  C11C  F0AA         	movff	vfpfcnvrt@fp,otoa@fp
  5813  0007DC  C11D  F0AB         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  5814  0007E0  C139  F0AC         	movff	vfpfcnvrt@llu,otoa@d
  5815  0007E4  C13A  F0AD         	movff	vfpfcnvrt@llu+1,otoa@d+1
  5816  0007E8  C13B  F0AE         	movff	vfpfcnvrt@llu+2,otoa@d+2
  5817  0007EC  C13C  F0AF         	movff	vfpfcnvrt@llu+3,otoa@d+3
  5818  0007F0  C13D  F0B0         	movff	vfpfcnvrt@llu+4,otoa@d+4
  5819  0007F4  C13E  F0B1         	movff	vfpfcnvrt@llu+5,otoa@d+5
  5820  0007F8  C13F  F0B2         	movff	vfpfcnvrt@llu+6,otoa@d+6
  5821  0007FC  C140  F0B3         	movff	vfpfcnvrt@llu+7,otoa@d+7
  5822  000800  EC27  F020         	call	_otoa	;wreg free
  5823  000804  C0AA  F11C         	movff	?_otoa,?_vfpfcnvrt
  5824  000808  C0AB  F11D         	movff	?_otoa+1,?_vfpfcnvrt+1
  5825  00080C  EFA8  F009         	goto	l799
  5826  000810                     l8755:
  5827                           
  5828                           ; BSR set to: 0
  5829                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  5830  000810  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5831  000814  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5832  000818  CFDE F08D          	movff	postinc2,strncmp@_l
  5833  00081C  CFDD F08E          	movff	postdec2,strncmp@_l+1
  5834  000820  0EDE               	movlw	low (STR_36+1)
  5835  000822  6F8F               	movwf	strncmp@_r& (0+255),b
  5836  000824  0EFF               	movlw	high (STR_36+1)
  5837  000826  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  5838  000828  0E00               	movlw	0
  5839  00082A  6F92               	movwf	(strncmp@n+1)& (0+255),b
  5840  00082C  0E02               	movlw	2
  5841  00082E  6F91               	movwf	strncmp@n& (0+255),b
  5842  000830  ECF5  F029         	call	_strncmp	;wreg free
  5843  000834  0100               	movlb	0	; () banked
  5844  000836  518D               	movf	?_strncmp& (0+255),w,b
  5845  000838  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  5846  00083A  A4D8               	btfss	status,2,c
  5847  00083C  EF22  F004         	goto	u11331
  5848  000840  EF24  F004         	goto	u11330
  5849  000844                     u11331:
  5850  000844  EF4D  F004         	goto	l8763
  5851  000848                     u11330:
  5852  000848                     
  5853                           ; BSR set to: 0
  5854                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  5855  000848  0E02               	movlw	2
  5856  00084A  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5857  00084E  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5858  000852  26DE               	addwf	postinc2,f,c
  5859  000854  0E00               	movlw	0
  5860  000856  22DD               	addwfc	postdec2,f,c
  5861                           
  5862                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5863  000858  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5864  00085C  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5865  000860  CFDF F122          	movff	indf2,??_vfpfcnvrt
  5866  000864  0E02               	movlw	2
  5867  000866  26DE               	addwf	postinc2,f,c
  5868  000868  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  5869  00086C  0E00               	movlw	0
  5870  00086E  22DD               	addwfc	postdec2,f,c
  5871  000870  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5872  000874  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5873  000878  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  5874  00087C  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  5875  000880  C124  F139         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5876  000884  C125  F13A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5877  000888  0101               	movlb	1	; () banked
  5878  00088A  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5879  00088C  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5880  00088E  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5881  000890  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5882  000892  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5883  000894  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5884  000896  EFEC  F003         	goto	l8751
  5885  00089A                     l8763:
  5886                           
  5887                           ; BSR set to: 0
  5888                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
  5889  00089A  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5890  00089E  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5891  0008A2  CFDE FFF6          	movff	postinc2,tblptrl
  5892  0008A6  CFDD FFF7          	movff	postdec2,tblptrh
  5893  0008AA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5894  0008AA  6AF8               	clrf	tblptru,c
  5895  0008AC                     	endif
  5896  0008AC                     	if	0	;tblptru may be non-zero
  5897  0008AC                     	endif
  5898  0008AC  0008               	tblrd		*
  5899  0008AE  50F5               	movf	tablat,w,c
  5900  0008B0  0A6F               	xorlw	111
  5901  0008B2  A4D8               	btfss	status,2,c
  5902  0008B4  EF5E  F004         	goto	u11341
  5903  0008B8  EF60  F004         	goto	u11340
  5904  0008BC                     u11341:
  5905  0008BC  EF88  F004         	goto	l8771
  5906  0008C0                     u11340:
  5907  0008C0                     
  5908                           ; BSR set to: 0
  5909                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
  5910  0008C0  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5911  0008C4  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5912  0008C8  2ADE               	incf	postinc2,f,c
  5913  0008CA  0E00               	movlw	0
  5914  0008CC  22DD               	addwfc	postdec2,f,c
  5915                           
  5916                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
  5917  0008CE  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5918  0008D2  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5919  0008D6  CFDF F122          	movff	indf2,??_vfpfcnvrt
  5920  0008DA  0E02               	movlw	2
  5921  0008DC  26DE               	addwf	postinc2,f,c
  5922  0008DE  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  5923  0008E2  0E00               	movlw	0
  5924  0008E4  22DD               	addwfc	postdec2,f,c
  5925  0008E6  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5926  0008EA  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5927  0008EE  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  5928  0008F2  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  5929  0008F6  C124  F139         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5930  0008FA  C125  F13A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5931  0008FE  0101               	movlb	1	; () banked
  5932  000900  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5933  000902  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5934  000904  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5935  000906  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5936  000908  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5937  00090A  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5938  00090C  EFEC  F003         	goto	l8751
  5939  000910                     l8771:
  5940                           
  5941                           ; BSR set to: 0
  5942                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  5943  000910  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5944  000914  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5945  000918  CFDE F08D          	movff	postinc2,strncmp@_l
  5946  00091C  CFDD F08E          	movff	postdec2,strncmp@_l+1
  5947  000920  0EF5               	movlw	low STR_46
  5948  000922  6F8F               	movwf	strncmp@_r& (0+255),b
  5949  000924  0EFF               	movlw	high STR_46
  5950  000926  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  5951  000928  0E00               	movlw	0
  5952  00092A  6F92               	movwf	(strncmp@n+1)& (0+255),b
  5953  00092C  0E02               	movlw	2
  5954  00092E  6F91               	movwf	strncmp@n& (0+255),b
  5955  000930  ECF5  F029         	call	_strncmp	;wreg free
  5956  000934  0100               	movlb	0	; () banked
  5957  000936  518D               	movf	?_strncmp& (0+255),w,b
  5958  000938  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  5959  00093A  A4D8               	btfss	status,2,c
  5960  00093C  EFA2  F004         	goto	u11351
  5961  000940  EFA4  F004         	goto	u11350
  5962  000944                     u11351:
  5963  000944  EFCD  F004         	goto	l8779
  5964  000948                     u11350:
  5965  000948                     
  5966                           ; BSR set to: 0
  5967                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  5968  000948  0E02               	movlw	2
  5969  00094A  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5970  00094E  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5971  000952  26DE               	addwf	postinc2,f,c
  5972  000954  0E00               	movlw	0
  5973  000956  22DD               	addwfc	postdec2,f,c
  5974                           
  5975                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5976  000958  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5977  00095C  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5978  000960  CFDF F122          	movff	indf2,??_vfpfcnvrt
  5979  000964  0E02               	movlw	2
  5980  000966  26DE               	addwf	postinc2,f,c
  5981  000968  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  5982  00096C  0E00               	movlw	0
  5983  00096E  22DD               	addwfc	postdec2,f,c
  5984  000970  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5985  000974  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5986  000978  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  5987  00097C  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  5988  000980  C124  F139         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5989  000984  C125  F13A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5990  000988  0101               	movlb	1	; () banked
  5991  00098A  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5992  00098C  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5993  00098E  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5994  000990  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5995  000992  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5996  000994  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5997  000996  EFEC  F003         	goto	l8751
  5998  00099A                     l8779:
  5999                           
  6000                           ; BSR set to: 0
  6001                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  6002  00099A  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6003  00099E  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6004  0009A2  CFDE F08D          	movff	postinc2,strncmp@_l
  6005  0009A6  CFDD F08E          	movff	postdec2,strncmp@_l+1
  6006  0009AA  0ED9               	movlw	low STR_51
  6007  0009AC  6F8F               	movwf	strncmp@_r& (0+255),b
  6008  0009AE  0EFF               	movlw	high STR_51
  6009  0009B0  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  6010  0009B2  0E00               	movlw	0
  6011  0009B4  6F92               	movwf	(strncmp@n+1)& (0+255),b
  6012  0009B6  0E03               	movlw	3
  6013  0009B8  6F91               	movwf	strncmp@n& (0+255),b
  6014  0009BA  ECF5  F029         	call	_strncmp	;wreg free
  6015  0009BE  0100               	movlb	0	; () banked
  6016  0009C0  518D               	movf	?_strncmp& (0+255),w,b
  6017  0009C2  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  6018  0009C4  A4D8               	btfss	status,2,c
  6019  0009C6  EFE7  F004         	goto	u11361
  6020  0009CA  EFE9  F004         	goto	u11360
  6021  0009CE                     u11361:
  6022  0009CE  EF12  F005         	goto	l8789
  6023  0009D2                     u11360:
  6024  0009D2                     
  6025                           ; BSR set to: 0
  6026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  6027  0009D2  0E03               	movlw	3
  6028  0009D4  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6029  0009D8  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6030  0009DC  26DE               	addwf	postinc2,f,c
  6031  0009DE  0E00               	movlw	0
  6032  0009E0  22DD               	addwfc	postdec2,f,c
  6033                           
  6034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  6035  0009E2  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6036  0009E6  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6037  0009EA  CFDF F122          	movff	indf2,??_vfpfcnvrt
  6038  0009EE  0E02               	movlw	2
  6039  0009F0  26DE               	addwf	postinc2,f,c
  6040  0009F2  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  6041  0009F6  0E00               	movlw	0
  6042  0009F8  22DD               	addwfc	postdec2,f,c
  6043  0009FA  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6044  0009FE  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6045  000A02  CFDE F136          	movff	postinc2,vfpfcnvrt@vp
  6046  000A06  CFDD F137          	movff	postdec2,vfpfcnvrt@vp+1
  6047  000A0A                     
  6048                           ; BSR set to: 0
  6049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
  6050  000A0A  C136  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  6051  000A0E  C137  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  6052  000A12  C174  FFDF         	movff	_nout,indf2
  6053  000A16                     l8785:
  6054                           
  6055                           ; BSR set to: 0
  6056                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
  6057  000A16  0E00               	movlw	0
  6058  000A18  0101               	movlb	1	; () banked
  6059  000A1A  6F1D               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  6060  000A1C  0E00               	movlw	0
  6061  000A1E  6F1C               	movwf	?_vfpfcnvrt& (0+255),b
  6062  000A20  EFA8  F009         	goto	l799
  6063  000A24                     l8789:
  6064                           
  6065                           ; BSR set to: 0
  6066                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  6067  000A24  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6068  000A28  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6069  000A2C  CFDE F08D          	movff	postinc2,strncmp@_l
  6070  000A30  CFDD F08E          	movff	postdec2,strncmp@_l+1
  6071  000A34  0EDA               	movlw	low (STR_51+1)
  6072  000A36  6F8F               	movwf	strncmp@_r& (0+255),b
  6073  000A38  0EFF               	movlw	high (STR_51+1)
  6074  000A3A  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  6075  000A3C  0E00               	movlw	0
  6076  000A3E  6F92               	movwf	(strncmp@n+1)& (0+255),b
  6077  000A40  0E02               	movlw	2
  6078  000A42  6F91               	movwf	strncmp@n& (0+255),b
  6079  000A44  ECF5  F029         	call	_strncmp	;wreg free
  6080  000A48  0100               	movlb	0	; () banked
  6081  000A4A  518D               	movf	?_strncmp& (0+255),w,b
  6082  000A4C  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  6083  000A4E  A4D8               	btfss	status,2,c
  6084  000A50  EF2C  F005         	goto	u11371
  6085  000A54  EF2E  F005         	goto	u11370
  6086  000A58                     u11371:
  6087  000A58  EF54  F005         	goto	l8799
  6088  000A5C                     u11370:
  6089  000A5C                     
  6090                           ; BSR set to: 0
  6091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  6092  000A5C  0E02               	movlw	2
  6093  000A5E  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6094  000A62  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6095  000A66  26DE               	addwf	postinc2,f,c
  6096  000A68  0E00               	movlw	0
  6097  000A6A  22DD               	addwfc	postdec2,f,c
  6098                           
  6099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  6100  000A6C  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6101  000A70  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6102  000A74  CFDF F122          	movff	indf2,??_vfpfcnvrt
  6103  000A78  0E02               	movlw	2
  6104  000A7A  26DE               	addwf	postinc2,f,c
  6105  000A7C  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  6106  000A80  0E00               	movlw	0
  6107  000A82  22DD               	addwfc	postdec2,f,c
  6108  000A84  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6109  000A88  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6110  000A8C  CFDE F136          	movff	postinc2,vfpfcnvrt@vp
  6111  000A90  CFDD F137          	movff	postdec2,vfpfcnvrt@vp+1
  6112  000A94                     
  6113                           ; BSR set to: 0
  6114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
  6115  000A94  C136  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  6116  000A98  C137  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  6117  000A9C  C174  FFDE         	movff	_nout,postinc2
  6118  000AA0  C175  FFDD         	movff	_nout+1,postdec2
  6119  000AA4  EF0B  F005         	goto	l8785
  6120  000AA8                     l8799:
  6121                           
  6122                           ; BSR set to: 0
  6123                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  6124  000AA8  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6125  000AAC  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6126  000AB0  CFDE FFF6          	movff	postinc2,tblptrl
  6127  000AB4  CFDD FFF7          	movff	postdec2,tblptrh
  6128  000AB8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6129  000AB8  6AF8               	clrf	tblptru,c
  6130  000ABA                     	endif
  6131  000ABA                     	if	0	;tblptru may be non-zero
  6132  000ABA                     	endif
  6133  000ABA  0008               	tblrd		*
  6134  000ABC  50F5               	movf	tablat,w,c
  6135  000ABE  0A6E               	xorlw	110
  6136  000AC0  A4D8               	btfss	status,2,c
  6137  000AC2  EF65  F005         	goto	u11381
  6138  000AC6  EF67  F005         	goto	u11380
  6139  000ACA                     u11381:
  6140  000ACA  EF8C  F005         	goto	l8809
  6141  000ACE                     u11380:
  6142  000ACE                     
  6143                           ; BSR set to: 0
  6144                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  6145  000ACE  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6146  000AD2  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6147  000AD6  2ADE               	incf	postinc2,f,c
  6148  000AD8  0E00               	movlw	0
  6149  000ADA  22DD               	addwfc	postdec2,f,c
  6150                           
  6151                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  6152  000ADC  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6153  000AE0  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6154  000AE4  CFDF F122          	movff	indf2,??_vfpfcnvrt
  6155  000AE8  0E02               	movlw	2
  6156  000AEA  26DE               	addwf	postinc2,f,c
  6157  000AEC  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  6158  000AF0  0E00               	movlw	0
  6159  000AF2  22DD               	addwfc	postdec2,f,c
  6160  000AF4  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6161  000AF8  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6162  000AFC  CFDE F136          	movff	postinc2,vfpfcnvrt@vp
  6163  000B00  CFDD F137          	movff	postdec2,vfpfcnvrt@vp+1
  6164  000B04                     
  6165                           ; BSR set to: 0
  6166                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  6167  000B04  C136  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  6168  000B08  C137  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  6169  000B0C  C174  FFDE         	movff	_nout,postinc2
  6170  000B10  C175  FFDD         	movff	_nout+1,postdec2
  6171  000B14  EF0B  F005         	goto	l8785
  6172  000B18                     l8809:
  6173                           
  6174                           ; BSR set to: 0
  6175                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  6176  000B18  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6177  000B1C  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6178  000B20  CFDE F08D          	movff	postinc2,strncmp@_l
  6179  000B24  CFDD F08E          	movff	postdec2,strncmp@_l+1
  6180  000B28  0EF2               	movlw	low STR_61
  6181  000B2A  6F8F               	movwf	strncmp@_r& (0+255),b
  6182  000B2C  0EFF               	movlw	high STR_61
  6183  000B2E  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  6184  000B30  0E00               	movlw	0
  6185  000B32  6F92               	movwf	(strncmp@n+1)& (0+255),b
  6186  000B34  0E02               	movlw	2
  6187  000B36  6F91               	movwf	strncmp@n& (0+255),b
  6188  000B38  ECF5  F029         	call	_strncmp	;wreg free
  6189  000B3C  0100               	movlb	0	; () banked
  6190  000B3E  518D               	movf	?_strncmp& (0+255),w,b
  6191  000B40  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  6192  000B42  A4D8               	btfss	status,2,c
  6193  000B44  EFA6  F005         	goto	u11391
  6194  000B48  EFA8  F005         	goto	u11390
  6195  000B4C                     u11391:
  6196  000B4C  EFCE  F005         	goto	l8819
  6197  000B50                     u11390:
  6198  000B50                     
  6199                           ; BSR set to: 0
  6200                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  6201  000B50  0E02               	movlw	2
  6202  000B52  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6203  000B56  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6204  000B5A  26DE               	addwf	postinc2,f,c
  6205  000B5C  0E00               	movlw	0
  6206  000B5E  22DD               	addwfc	postdec2,f,c
  6207                           
  6208                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  6209  000B60  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6210  000B64  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6211  000B68  CFDF F122          	movff	indf2,??_vfpfcnvrt
  6212  000B6C  0E02               	movlw	2
  6213  000B6E  26DE               	addwf	postinc2,f,c
  6214  000B70  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  6215  000B74  0E00               	movlw	0
  6216  000B76  22DD               	addwfc	postdec2,f,c
  6217  000B78  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6218  000B7C  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6219  000B80  CFDE F136          	movff	postinc2,vfpfcnvrt@vp
  6220  000B84  CFDD F137          	movff	postdec2,vfpfcnvrt@vp+1
  6221  000B88                     
  6222                           ; BSR set to: 0
  6223                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
  6224  000B88  C136  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  6225  000B8C  C137  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  6226  000B90  C174  FFDE         	movff	_nout,postinc2
  6227  000B94  C175  FFDD         	movff	_nout+1,postdec2
  6228  000B98  EF0B  F005         	goto	l8785
  6229  000B9C                     l8819:
  6230                           
  6231                           ; BSR set to: 0
  6232                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
  6233  000B9C  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6234  000BA0  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6235  000BA4  CFDE FFF6          	movff	postinc2,tblptrl
  6236  000BA8  CFDD FFF7          	movff	postdec2,tblptrh
  6237  000BAC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6238  000BAC  6AF8               	clrf	tblptru,c
  6239  000BAE                     	endif
  6240  000BAE                     	if	0	;tblptru may be non-zero
  6241  000BAE                     	endif
  6242  000BAE  0008               	tblrd		*
  6243  000BB0  50F5               	movf	tablat,w,c
  6244  000BB2  0A70               	xorlw	112
  6245  000BB4  A4D8               	btfss	status,2,c
  6246  000BB6  EFDF  F005         	goto	u11401
  6247  000BBA  EFE1  F005         	goto	u11400
  6248  000BBE                     u11401:
  6249  000BBE  EF26  F006         	goto	l8827
  6250  000BC2                     u11400:
  6251  000BC2                     
  6252                           ; BSR set to: 0
  6253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
  6254  000BC2  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6255  000BC6  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6256  000BCA  2ADE               	incf	postinc2,f,c
  6257  000BCC  0E00               	movlw	0
  6258  000BCE  22DD               	addwfc	postdec2,f,c
  6259                           
  6260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
  6261  000BD0  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6262  000BD4  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6263  000BD8  CFDF F122          	movff	indf2,??_vfpfcnvrt
  6264  000BDC  0E02               	movlw	2
  6265  000BDE  26DE               	addwf	postinc2,f,c
  6266  000BE0  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  6267  000BE4  0E00               	movlw	0
  6268  000BE6  22DD               	addwfc	postdec2,f,c
  6269  000BE8  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6270  000BEC  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6271  000BF0  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  6272  000BF4  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  6273  000BF8  C124  F139         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6274  000BFC  C125  F13A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6275  000C00  0101               	movlb	1	; () banked
  6276  000C02  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6277  000C04  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6278  000C06  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6279  000C08  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6280  000C0A  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6281  000C0C  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6282  000C0E                     
  6283                           ; BSR set to: 1
  6284                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
  6285  000C0E  C11C  F0AA         	movff	vfpfcnvrt@fp,xtoa@fp
  6286  000C12  C11D  F0AB         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6287  000C16  C139  F0AC         	movff	vfpfcnvrt@llu,xtoa@d
  6288  000C1A  C13A  F0AD         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6289  000C1E  C13B  F0AE         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6290  000C22  C13C  F0AF         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6291  000C26  C13D  F0B0         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6292  000C2A  C13E  F0B1         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6293  000C2E  C13F  F0B2         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6294  000C32  C140  F0B3         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6295  000C36  0E78               	movlw	120
  6296  000C38  0100               	movlb	0	; () banked
  6297  000C3A  6FB4               	movwf	xtoa@x& (0+255),b
  6298  000C3C  EC83  F016         	call	_xtoa	;wreg free
  6299  000C40  C0AA  F11C         	movff	?_xtoa,?_vfpfcnvrt
  6300  000C44  C0AB  F11D         	movff	?_xtoa+1,?_vfpfcnvrt+1
  6301  000C48  EFA8  F009         	goto	l799
  6302  000C4C                     l8827:
  6303                           
  6304                           ; BSR set to: 0
  6305                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  6306  000C4C  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6307  000C50  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6308  000C54  CFDE FFF6          	movff	postinc2,tblptrl
  6309  000C58  CFDD FFF7          	movff	postdec2,tblptrh
  6310  000C5C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6311  000C5C  6AF8               	clrf	tblptru,c
  6312  000C5E                     	endif
  6313  000C5E                     	if	0	;tblptru may be non-zero
  6314  000C5E                     	endif
  6315  000C5E  0008               	tblrd		*
  6316  000C60  50F5               	movf	tablat,w,c
  6317  000C62  0A73               	xorlw	115
  6318  000C64  A4D8               	btfss	status,2,c
  6319  000C66  EF37  F006         	goto	u11411
  6320  000C6A  EF39  F006         	goto	u11410
  6321  000C6E                     u11411:
  6322  000C6E  EF64  F006         	goto	l8835
  6323  000C72                     u11410:
  6324  000C72                     
  6325                           ; BSR set to: 0
  6326                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  6327  000C72  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6328  000C76  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6329  000C7A  2ADE               	incf	postinc2,f,c
  6330  000C7C  0E00               	movlw	0
  6331  000C7E  22DD               	addwfc	postdec2,f,c
  6332                           
  6333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  6334  000C80  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6335  000C84  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6336  000C88  CFDF F122          	movff	indf2,??_vfpfcnvrt
  6337  000C8C  0E02               	movlw	2
  6338  000C8E  26DE               	addwf	postinc2,f,c
  6339  000C90  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  6340  000C94  0E00               	movlw	0
  6341  000C96  22DD               	addwfc	postdec2,f,c
  6342  000C98  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6343  000C9C  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6344  000CA0  CFDE F126          	movff	postinc2,vfpfcnvrt@cp
  6345  000CA4  CFDD F127          	movff	postdec2,vfpfcnvrt@cp+1
  6346  000CA8                     
  6347                           ; BSR set to: 0
  6348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  6349  000CA8  C11C  F098         	movff	vfpfcnvrt@fp,stoa@fp
  6350  000CAC  C11D  F099         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  6351  000CB0  C126  F09A         	movff	vfpfcnvrt@cp,stoa@s
  6352  000CB4  C127  F09B         	movff	vfpfcnvrt@cp+1,stoa@s+1
  6353  000CB8  EC1E  F022         	call	_stoa	;wreg free
  6354  000CBC  C098  F11C         	movff	?_stoa,?_vfpfcnvrt
  6355  000CC0  C099  F11D         	movff	?_stoa+1,?_vfpfcnvrt+1
  6356  000CC4  EFA8  F009         	goto	l799
  6357  000CC8                     l8835:
  6358                           
  6359                           ; BSR set to: 0
  6360                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  6361  000CC8  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6362  000CCC  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6363  000CD0  CFDE F08D          	movff	postinc2,strncmp@_l
  6364  000CD4  CFDD F08E          	movff	postdec2,strncmp@_l+1
  6365  000CD8  0EE1               	movlw	low STR_66
  6366  000CDA  6F8F               	movwf	strncmp@_r& (0+255),b
  6367  000CDC  0EFF               	movlw	high STR_66
  6368  000CDE  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  6369  000CE0  0E00               	movlw	0
  6370  000CE2  6F92               	movwf	(strncmp@n+1)& (0+255),b
  6371  000CE4  0E03               	movlw	3
  6372  000CE6  6F91               	movwf	strncmp@n& (0+255),b
  6373  000CE8  ECF5  F029         	call	_strncmp	;wreg free
  6374  000CEC  0100               	movlb	0	; () banked
  6375  000CEE  518D               	movf	?_strncmp& (0+255),w,b
  6376  000CF0  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  6377  000CF2  A4D8               	btfss	status,2,c
  6378  000CF4  EF7E  F006         	goto	u11421
  6379  000CF8  EF80  F006         	goto	u11420
  6380  000CFC                     u11421:
  6381  000CFC  EFC0  F006         	goto	l8843
  6382  000D00                     u11420:
  6383  000D00                     
  6384                           ; BSR set to: 0
  6385                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  6386  000D00  0E03               	movlw	3
  6387  000D02  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6388  000D06  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6389  000D0A  26DE               	addwf	postinc2,f,c
  6390  000D0C  0E00               	movlw	0
  6391  000D0E  22DD               	addwfc	postdec2,f,c
  6392                           
  6393                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6394  000D10  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6395  000D14  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6396  000D18  CFDF F122          	movff	indf2,??_vfpfcnvrt
  6397  000D1C  0E02               	movlw	2
  6398  000D1E  26DE               	addwf	postinc2,f,c
  6399  000D20  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  6400  000D24  0E00               	movlw	0
  6401  000D26  22DD               	addwfc	postdec2,f,c
  6402  000D28  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6403  000D2C  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6404  000D30  50DF               	movf	indf2,w,c
  6405  000D32  0101               	movlb	1	; () banked
  6406  000D34  6F24               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6407  000D36  5124               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  6408  000D38  6F39               	movwf	vfpfcnvrt@llu& (0+255),b
  6409  000D3A  6B3A               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  6410  000D3C  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6411  000D3E  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6412  000D40  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6413  000D42  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6414  000D44  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6415  000D46  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6416  000D48                     l8839:
  6417                           
  6418                           ; BSR set to: 1
  6419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
  6420  000D48  C11C  F0AA         	movff	vfpfcnvrt@fp,utoa@fp
  6421  000D4C  C11D  F0AB         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  6422  000D50  C139  F0AC         	movff	vfpfcnvrt@llu,utoa@d
  6423  000D54  C13A  F0AD         	movff	vfpfcnvrt@llu+1,utoa@d+1
  6424  000D58  C13B  F0AE         	movff	vfpfcnvrt@llu+2,utoa@d+2
  6425  000D5C  C13C  F0AF         	movff	vfpfcnvrt@llu+3,utoa@d+3
  6426  000D60  C13D  F0B0         	movff	vfpfcnvrt@llu+4,utoa@d+4
  6427  000D64  C13E  F0B1         	movff	vfpfcnvrt@llu+5,utoa@d+5
  6428  000D68  C13F  F0B2         	movff	vfpfcnvrt@llu+6,utoa@d+6
  6429  000D6C  C140  F0B3         	movff	vfpfcnvrt@llu+7,utoa@d+7
  6430  000D70  EC10  F01C         	call	_utoa	;wreg free
  6431  000D74  C0AA  F11C         	movff	?_utoa,?_vfpfcnvrt
  6432  000D78  C0AB  F11D         	movff	?_utoa+1,?_vfpfcnvrt+1
  6433  000D7C  EFA8  F009         	goto	l799
  6434  000D80                     l8843:
  6435                           
  6436                           ; BSR set to: 0
  6437                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  6438  000D80  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6439  000D84  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6440  000D88  CFDE F08D          	movff	postinc2,strncmp@_l
  6441  000D8C  CFDD F08E          	movff	postdec2,strncmp@_l+1
  6442  000D90  0EE2               	movlw	low (STR_66+1)
  6443  000D92  6F8F               	movwf	strncmp@_r& (0+255),b
  6444  000D94  0EFF               	movlw	high (STR_66+1)
  6445  000D96  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  6446  000D98  0E00               	movlw	0
  6447  000D9A  6F92               	movwf	(strncmp@n+1)& (0+255),b
  6448  000D9C  0E02               	movlw	2
  6449  000D9E  6F91               	movwf	strncmp@n& (0+255),b
  6450  000DA0  ECF5  F029         	call	_strncmp	;wreg free
  6451  000DA4  0100               	movlb	0	; () banked
  6452  000DA6  518D               	movf	?_strncmp& (0+255),w,b
  6453  000DA8  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  6454  000DAA  A4D8               	btfss	status,2,c
  6455  000DAC  EFDA  F006         	goto	u11431
  6456  000DB0  EFDC  F006         	goto	u11430
  6457  000DB4                     u11431:
  6458  000DB4  EF05  F007         	goto	l8851
  6459  000DB8                     u11430:
  6460  000DB8                     
  6461                           ; BSR set to: 0
  6462                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  6463  000DB8  0E02               	movlw	2
  6464  000DBA  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6465  000DBE  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6466  000DC2  26DE               	addwf	postinc2,f,c
  6467  000DC4  0E00               	movlw	0
  6468  000DC6  22DD               	addwfc	postdec2,f,c
  6469                           
  6470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  6471  000DC8  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6472  000DCC  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6473  000DD0  CFDF F122          	movff	indf2,??_vfpfcnvrt
  6474  000DD4  0E02               	movlw	2
  6475  000DD6  26DE               	addwf	postinc2,f,c
  6476  000DD8  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  6477  000DDC  0E00               	movlw	0
  6478  000DDE  22DD               	addwfc	postdec2,f,c
  6479  000DE0  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6480  000DE4  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6481  000DE8  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  6482  000DEC  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  6483  000DF0  C124  F139         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6484  000DF4  C125  F13A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6485  000DF8  0101               	movlb	1	; () banked
  6486  000DFA  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6487  000DFC  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6488  000DFE  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6489  000E00  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6490  000E02  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6491  000E04  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6492  000E06  EFA4  F006         	goto	l8839
  6493  000E0A                     l8851:
  6494                           
  6495                           ; BSR set to: 0
  6496                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  6497  000E0A  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6498  000E0E  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6499  000E12  CFDE FFF6          	movff	postinc2,tblptrl
  6500  000E16  CFDD FFF7          	movff	postdec2,tblptrh
  6501  000E1A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6502  000E1A  6AF8               	clrf	tblptru,c
  6503  000E1C                     	endif
  6504  000E1C                     	if	0	;tblptru may be non-zero
  6505  000E1C                     	endif
  6506  000E1C  0008               	tblrd		*
  6507  000E1E  50F5               	movf	tablat,w,c
  6508  000E20  0A75               	xorlw	117
  6509  000E22  A4D8               	btfss	status,2,c
  6510  000E24  EF16  F007         	goto	u11441
  6511  000E28  EF18  F007         	goto	u11440
  6512  000E2C                     u11441:
  6513  000E2C  EF40  F007         	goto	l8859
  6514  000E30                     u11440:
  6515  000E30                     
  6516                           ; BSR set to: 0
  6517                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  6518  000E30  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6519  000E34  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6520  000E38  2ADE               	incf	postinc2,f,c
  6521  000E3A  0E00               	movlw	0
  6522  000E3C  22DD               	addwfc	postdec2,f,c
  6523                           
  6524                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  6525  000E3E  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6526  000E42  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6527  000E46  CFDF F122          	movff	indf2,??_vfpfcnvrt
  6528  000E4A  0E02               	movlw	2
  6529  000E4C  26DE               	addwf	postinc2,f,c
  6530  000E4E  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  6531  000E52  0E00               	movlw	0
  6532  000E54  22DD               	addwfc	postdec2,f,c
  6533  000E56  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6534  000E5A  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6535  000E5E  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  6536  000E62  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  6537  000E66  C124  F139         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6538  000E6A  C125  F13A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6539  000E6E  0101               	movlb	1	; () banked
  6540  000E70  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6541  000E72  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6542  000E74  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6543  000E76  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6544  000E78  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6545  000E7A  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6546  000E7C  EFA4  F006         	goto	l8839
  6547  000E80                     l8859:
  6548                           
  6549                           ; BSR set to: 0
  6550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  6551  000E80  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6552  000E84  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6553  000E88  CFDE F08D          	movff	postinc2,strncmp@_l
  6554  000E8C  CFDD F08E          	movff	postdec2,strncmp@_l+1
  6555  000E90  0EF8               	movlw	low STR_76
  6556  000E92  6F8F               	movwf	strncmp@_r& (0+255),b
  6557  000E94  0EFF               	movlw	high STR_76
  6558  000E96  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  6559  000E98  0E00               	movlw	0
  6560  000E9A  6F92               	movwf	(strncmp@n+1)& (0+255),b
  6561  000E9C  0E02               	movlw	2
  6562  000E9E  6F91               	movwf	strncmp@n& (0+255),b
  6563  000EA0  ECF5  F029         	call	_strncmp	;wreg free
  6564  000EA4  0100               	movlb	0	; () banked
  6565  000EA6  518D               	movf	?_strncmp& (0+255),w,b
  6566  000EA8  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  6567  000EAA  A4D8               	btfss	status,2,c
  6568  000EAC  EF5A  F007         	goto	u11451
  6569  000EB0  EF5C  F007         	goto	u11450
  6570  000EB4                     u11451:
  6571  000EB4  EF85  F007         	goto	l8867
  6572  000EB8                     u11450:
  6573  000EB8                     
  6574                           ; BSR set to: 0
  6575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  6576  000EB8  0E02               	movlw	2
  6577  000EBA  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6578  000EBE  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6579  000EC2  26DE               	addwf	postinc2,f,c
  6580  000EC4  0E00               	movlw	0
  6581  000EC6  22DD               	addwfc	postdec2,f,c
  6582                           
  6583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6584  000EC8  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6585  000ECC  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6586  000ED0  CFDF F122          	movff	indf2,??_vfpfcnvrt
  6587  000ED4  0E02               	movlw	2
  6588  000ED6  26DE               	addwf	postinc2,f,c
  6589  000ED8  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  6590  000EDC  0E00               	movlw	0
  6591  000EDE  22DD               	addwfc	postdec2,f,c
  6592  000EE0  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6593  000EE4  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6594  000EE8  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  6595  000EEC  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  6596  000EF0  C124  F139         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6597  000EF4  C125  F13A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6598  000EF8  0101               	movlb	1	; () banked
  6599  000EFA  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6600  000EFC  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6601  000EFE  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6602  000F00  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6603  000F02  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6604  000F04  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6605  000F06  EFA4  F006         	goto	l8839
  6606  000F0A                     l8867:
  6607                           
  6608                           ; BSR set to: 0
  6609                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  6610  000F0A  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6611  000F0E  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6612  000F12  CFDE F08D          	movff	postinc2,strncmp@_l
  6613  000F16  CFDD F08E          	movff	postdec2,strncmp@_l+1
  6614  000F1A  0EE5               	movlw	low STR_81
  6615  000F1C  6F8F               	movwf	strncmp@_r& (0+255),b
  6616  000F1E  0EFF               	movlw	high STR_81
  6617  000F20  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  6618  000F22  0E00               	movlw	0
  6619  000F24  6F92               	movwf	(strncmp@n+1)& (0+255),b
  6620  000F26  0E03               	movlw	3
  6621  000F28  6F91               	movwf	strncmp@n& (0+255),b
  6622  000F2A  ECF5  F029         	call	_strncmp	;wreg free
  6623  000F2E  0100               	movlb	0	; () banked
  6624  000F30  518D               	movf	?_strncmp& (0+255),w,b
  6625  000F32  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  6626  000F34  B4D8               	btfsc	status,2,c
  6627  000F36  EF9F  F007         	goto	u11461
  6628  000F3A  EFA1  F007         	goto	u11460
  6629  000F3E                     u11461:
  6630  000F3E  EFBD  F007         	goto	l8871
  6631  000F42                     u11460:
  6632  000F42                     
  6633                           ; BSR set to: 0
  6634  000F42  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6635  000F46  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6636  000F4A  CFDE F08D          	movff	postinc2,strncmp@_l
  6637  000F4E  CFDD F08E          	movff	postdec2,strncmp@_l+1
  6638  000F52  0ECD               	movlw	low STR_85
  6639  000F54  6F8F               	movwf	strncmp@_r& (0+255),b
  6640  000F56  0EFF               	movlw	high STR_85
  6641  000F58  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  6642  000F5A  0E00               	movlw	0
  6643  000F5C  6F92               	movwf	(strncmp@n+1)& (0+255),b
  6644  000F5E  0E03               	movlw	3
  6645  000F60  6F91               	movwf	strncmp@n& (0+255),b
  6646  000F62  ECF5  F029         	call	_strncmp	;wreg free
  6647  000F66  0100               	movlb	0	; () banked
  6648  000F68  518D               	movf	?_strncmp& (0+255),w,b
  6649  000F6A  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  6650  000F6C  A4D8               	btfss	status,2,c
  6651  000F6E  EFBB  F007         	goto	u11471
  6652  000F72  EFBD  F007         	goto	u11470
  6653  000F76                     u11471:
  6654  000F76  EF13  F008         	goto	l8881
  6655  000F7A                     u11470:
  6656  000F7A                     l8871:
  6657                           
  6658                           ; BSR set to: 0
  6659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
  6660  000F7A  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6661  000F7E  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6662  000F82  CFDE F122          	movff	postinc2,??_vfpfcnvrt
  6663  000F86  CFDD F123          	movff	postdec2,??_vfpfcnvrt+1
  6664  000F8A  0E02               	movlw	2
  6665  000F8C  0101               	movlb	1	; () banked
  6666  000F8E  2722               	addwf	??_vfpfcnvrt& (0+255),f,b
  6667  000F90  0E00               	movlw	0
  6668  000F92  2323               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6669  000F94  C122  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6670  000F98  C123  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6671  000F9C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6672  000F9C  6AF8               	clrf	tblptru,c
  6673  000F9E                     	endif
  6674  000F9E                     	if	0	;tblptru may be non-zero
  6675  000F9E                     	endif
  6676  000F9E  0008               	tblrd		*
  6677  000FA0  CFF5 F138          	movff	tablat,vfpfcnvrt@c
  6678  000FA4                     
  6679                           ; BSR set to: 1
  6680                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  6681  000FA4  0E03               	movlw	3
  6682  000FA6  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6683  000FAA  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6684  000FAE  26DE               	addwf	postinc2,f,c
  6685  000FB0  0E00               	movlw	0
  6686  000FB2  22DD               	addwfc	postdec2,f,c
  6687  000FB4                     
  6688                           ; BSR set to: 1
  6689                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6690  000FB4  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6691  000FB8  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6692  000FBC  CFDF F122          	movff	indf2,??_vfpfcnvrt
  6693  000FC0  0E02               	movlw	2
  6694  000FC2  26DE               	addwf	postinc2,f,c
  6695  000FC4  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  6696  000FC8  0E00               	movlw	0
  6697  000FCA  22DD               	addwfc	postdec2,f,c
  6698  000FCC  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6699  000FD0  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6700  000FD4  50DF               	movf	indf2,w,c
  6701  000FD6  6F24               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6702  000FD8  5124               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  6703  000FDA  6F39               	movwf	vfpfcnvrt@llu& (0+255),b
  6704  000FDC  6B3A               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  6705  000FDE  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6706  000FE0  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6707  000FE2  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6708  000FE4  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6709  000FE6  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6710  000FE8  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6711  000FEA                     l8877:
  6712                           
  6713                           ; BSR set to: 1
  6714                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
  6715  000FEA  C11C  F0AA         	movff	vfpfcnvrt@fp,xtoa@fp
  6716  000FEE  C11D  F0AB         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6717  000FF2  C139  F0AC         	movff	vfpfcnvrt@llu,xtoa@d
  6718  000FF6  C13A  F0AD         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6719  000FFA  C13B  F0AE         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6720  000FFE  C13C  F0AF         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6721  001002  C13D  F0B0         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6722  001006  C13E  F0B1         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6723  00100A  C13F  F0B2         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6724  00100E  C140  F0B3         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6725  001012  C138  F0B4         	movff	vfpfcnvrt@c,xtoa@x
  6726  001016  EC83  F016         	call	_xtoa	;wreg free
  6727  00101A  C0AA  F11C         	movff	?_xtoa,?_vfpfcnvrt
  6728  00101E  C0AB  F11D         	movff	?_xtoa+1,?_vfpfcnvrt+1
  6729  001022  EFA8  F009         	goto	l799
  6730  001026                     l8881:
  6731                           
  6732                           ; BSR set to: 0
  6733                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
  6734  001026  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6735  00102A  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6736  00102E  CFDE F08D          	movff	postinc2,strncmp@_l
  6737  001032  CFDD F08E          	movff	postdec2,strncmp@_l+1
  6738  001036  0EE6               	movlw	low (STR_81+1)
  6739  001038  6F8F               	movwf	strncmp@_r& (0+255),b
  6740  00103A  0EFF               	movlw	high (STR_81+1)
  6741  00103C  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  6742  00103E  0E00               	movlw	0
  6743  001040  6F92               	movwf	(strncmp@n+1)& (0+255),b
  6744  001042  0E02               	movlw	2
  6745  001044  6F91               	movwf	strncmp@n& (0+255),b
  6746  001046  ECF5  F029         	call	_strncmp	;wreg free
  6747  00104A  0100               	movlb	0	; () banked
  6748  00104C  518D               	movf	?_strncmp& (0+255),w,b
  6749  00104E  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  6750  001050  B4D8               	btfsc	status,2,c
  6751  001052  EF2D  F008         	goto	u11481
  6752  001056  EF2F  F008         	goto	u11480
  6753  00105A                     u11481:
  6754  00105A  EF4B  F008         	goto	l8885
  6755  00105E                     u11480:
  6756  00105E                     
  6757                           ; BSR set to: 0
  6758  00105E  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6759  001062  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6760  001066  CFDE F08D          	movff	postinc2,strncmp@_l
  6761  00106A  CFDD F08E          	movff	postdec2,strncmp@_l+1
  6762  00106E  0ECE               	movlw	low (STR_85+1)
  6763  001070  6F8F               	movwf	strncmp@_r& (0+255),b
  6764  001072  0EFF               	movlw	high (STR_85+1)
  6765  001074  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  6766  001076  0E00               	movlw	0
  6767  001078  6F92               	movwf	(strncmp@n+1)& (0+255),b
  6768  00107A  0E02               	movlw	2
  6769  00107C  6F91               	movwf	strncmp@n& (0+255),b
  6770  00107E  ECF5  F029         	call	_strncmp	;wreg free
  6771  001082  0100               	movlb	0	; () banked
  6772  001084  518D               	movf	?_strncmp& (0+255),w,b
  6773  001086  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  6774  001088  A4D8               	btfss	status,2,c
  6775  00108A  EF49  F008         	goto	u11491
  6776  00108E  EF4B  F008         	goto	u11490
  6777  001092                     u11491:
  6778  001092  EF88  F008         	goto	l8895
  6779  001096                     u11490:
  6780  001096                     l8885:
  6781                           
  6782                           ; BSR set to: 0
  6783                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
  6784  001096  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6785  00109A  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6786  00109E  CFDE F122          	movff	postinc2,??_vfpfcnvrt
  6787  0010A2  CFDD F123          	movff	postdec2,??_vfpfcnvrt+1
  6788  0010A6  0E01               	movlw	1
  6789  0010A8  0101               	movlb	1	; () banked
  6790  0010AA  2722               	addwf	??_vfpfcnvrt& (0+255),f,b
  6791  0010AC  0E00               	movlw	0
  6792  0010AE  2323               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6793  0010B0  C122  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6794  0010B4  C123  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6795  0010B8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6796  0010B8  6AF8               	clrf	tblptru,c
  6797  0010BA                     	endif
  6798  0010BA                     	if	0	;tblptru may be non-zero
  6799  0010BA                     	endif
  6800  0010BA  0008               	tblrd		*
  6801  0010BC  CFF5 F138          	movff	tablat,vfpfcnvrt@c
  6802  0010C0                     
  6803                           ; BSR set to: 1
  6804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  6805  0010C0  0E02               	movlw	2
  6806  0010C2  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6807  0010C6  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6808  0010CA  26DE               	addwf	postinc2,f,c
  6809  0010CC  0E00               	movlw	0
  6810  0010CE  22DD               	addwfc	postdec2,f,c
  6811  0010D0                     
  6812                           ; BSR set to: 1
  6813                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  6814  0010D0  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6815  0010D4  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6816  0010D8  CFDF F122          	movff	indf2,??_vfpfcnvrt
  6817  0010DC  0E02               	movlw	2
  6818  0010DE  26DE               	addwf	postinc2,f,c
  6819  0010E0  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  6820  0010E4  0E00               	movlw	0
  6821  0010E6  22DD               	addwfc	postdec2,f,c
  6822  0010E8  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6823  0010EC  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6824  0010F0  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  6825  0010F4  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  6826  0010F8  C124  F139         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6827  0010FC  C125  F13A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6828  001100  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6829  001102  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6830  001104  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6831  001106  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6832  001108  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6833  00110A  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6834  00110C  EFF5  F007         	goto	l8877
  6835  001110                     l8895:
  6836                           
  6837                           ; BSR set to: 0
  6838                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  6839  001110  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6840  001114  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6841  001118  CFDE FFF6          	movff	postinc2,tblptrl
  6842  00111C  CFDD FFF7          	movff	postdec2,tblptrh
  6843  001120                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6844  001120  6AF8               	clrf	tblptru,c
  6845  001122                     	endif
  6846  001122                     	if	0	;tblptru may be non-zero
  6847  001122                     	endif
  6848  001122  0008               	tblrd		*
  6849  001124  50F5               	movf	tablat,w,c
  6850  001126  0A78               	xorlw	120
  6851  001128  B4D8               	btfsc	status,2,c
  6852  00112A  EF99  F008         	goto	u11501
  6853  00112E  EF9B  F008         	goto	u11500
  6854  001132                     u11501:
  6855  001132  EFAE  F008         	goto	l8899
  6856  001136                     u11500:
  6857  001136                     
  6858                           ; BSR set to: 0
  6859  001136  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6860  00113A  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6861  00113E  CFDE FFF6          	movff	postinc2,tblptrl
  6862  001142  CFDD FFF7          	movff	postdec2,tblptrh
  6863  001146                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6864  001146  6AF8               	clrf	tblptru,c
  6865  001148                     	endif
  6866  001148                     	if	0	;tblptru may be non-zero
  6867  001148                     	endif
  6868  001148  0008               	tblrd		*
  6869  00114A  50F5               	movf	tablat,w,c
  6870  00114C  0A58               	xorlw	88
  6871  00114E  A4D8               	btfss	status,2,c
  6872  001150  EFAC  F008         	goto	u11511
  6873  001154  EFAE  F008         	goto	u11510
  6874  001158                     u11511:
  6875  001158  EFE2  F008         	goto	l8909
  6876  00115C                     u11510:
  6877  00115C                     l8899:
  6878                           
  6879                           ; BSR set to: 0
  6880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  6881  00115C  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6882  001160  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6883  001164  CFDE FFF6          	movff	postinc2,tblptrl
  6884  001168  CFDD FFF7          	movff	postdec2,tblptrh
  6885  00116C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6886  00116C  6AF8               	clrf	tblptru,c
  6887  00116E                     	endif
  6888  00116E                     	if	0	;tblptru may be non-zero
  6889  00116E                     	endif
  6890  00116E  0008               	tblrd		*
  6891  001170  CFF5 F138          	movff	tablat,vfpfcnvrt@c
  6892  001174                     
  6893                           ; BSR set to: 0
  6894                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  6895  001174  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6896  001178  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6897  00117C  2ADE               	incf	postinc2,f,c
  6898  00117E  0E00               	movlw	0
  6899  001180  22DD               	addwfc	postdec2,f,c
  6900  001182                     
  6901                           ; BSR set to: 0
  6902                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  6903  001182  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6904  001186  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6905  00118A  CFDF F122          	movff	indf2,??_vfpfcnvrt
  6906  00118E  0E02               	movlw	2
  6907  001190  26DE               	addwf	postinc2,f,c
  6908  001192  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  6909  001196  0E00               	movlw	0
  6910  001198  22DD               	addwfc	postdec2,f,c
  6911  00119A  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6912  00119E  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6913  0011A2  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  6914  0011A6  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  6915  0011AA  C124  F139         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6916  0011AE  C125  F13A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6917  0011B2  0101               	movlb	1	; () banked
  6918  0011B4  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6919  0011B6  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6920  0011B8  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6921  0011BA  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6922  0011BC  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6923  0011BE  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6924  0011C0  EFF5  F007         	goto	l8877
  6925  0011C4                     l8909:
  6926                           
  6927                           ; BSR set to: 0
  6928                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
  6929  0011C4  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6930  0011C8  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6931  0011CC  CFDE F08D          	movff	postinc2,strncmp@_l
  6932  0011D0  CFDD F08E          	movff	postdec2,strncmp@_l+1
  6933  0011D4  0EFB               	movlw	low STR_99
  6934  0011D6  6F8F               	movwf	strncmp@_r& (0+255),b
  6935  0011D8  0EFF               	movlw	high STR_99
  6936  0011DA  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  6937  0011DC  0E00               	movlw	0
  6938  0011DE  6F92               	movwf	(strncmp@n+1)& (0+255),b
  6939  0011E0  0E02               	movlw	2
  6940  0011E2  6F91               	movwf	strncmp@n& (0+255),b
  6941  0011E4  ECF5  F029         	call	_strncmp	;wreg free
  6942  0011E8  0100               	movlb	0	; () banked
  6943  0011EA  518D               	movf	?_strncmp& (0+255),w,b
  6944  0011EC  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  6945  0011EE  B4D8               	btfsc	status,2,c
  6946  0011F0  EFFC  F008         	goto	u11521
  6947  0011F4  EFFE  F008         	goto	u11520
  6948  0011F8                     u11521:
  6949  0011F8  EF1A  F009         	goto	l8913
  6950  0011FC                     u11520:
  6951  0011FC                     
  6952                           ; BSR set to: 0
  6953  0011FC  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6954  001200  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6955  001204  CFDE F08D          	movff	postinc2,strncmp@_l
  6956  001208  CFDD F08E          	movff	postdec2,strncmp@_l+1
  6957  00120C  0EE9               	movlw	low STR_103
  6958  00120E  6F8F               	movwf	strncmp@_r& (0+255),b
  6959  001210  0EFF               	movlw	high STR_103
  6960  001212  6F90               	movwf	(strncmp@_r+1)& (0+255),b
  6961  001214  0E00               	movlw	0
  6962  001216  6F92               	movwf	(strncmp@n+1)& (0+255),b
  6963  001218  0E02               	movlw	2
  6964  00121A  6F91               	movwf	strncmp@n& (0+255),b
  6965  00121C  ECF5  F029         	call	_strncmp	;wreg free
  6966  001220  0100               	movlb	0	; () banked
  6967  001222  518D               	movf	?_strncmp& (0+255),w,b
  6968  001224  118E               	iorwf	(?_strncmp+1)& (0+255),w,b
  6969  001226  A4D8               	btfss	status,2,c
  6970  001228  EF18  F009         	goto	u11531
  6971  00122C  EF1A  F009         	goto	u11530
  6972  001230                     u11531:
  6973  001230  EF57  F009         	goto	l8923
  6974  001234                     u11530:
  6975  001234                     l8913:
  6976                           
  6977                           ; BSR set to: 0
  6978                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
  6979  001234  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6980  001238  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6981  00123C  CFDE F122          	movff	postinc2,??_vfpfcnvrt
  6982  001240  CFDD F123          	movff	postdec2,??_vfpfcnvrt+1
  6983  001244  0E01               	movlw	1
  6984  001246  0101               	movlb	1	; () banked
  6985  001248  2722               	addwf	??_vfpfcnvrt& (0+255),f,b
  6986  00124A  0E00               	movlw	0
  6987  00124C  2323               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6988  00124E  C122  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6989  001252  C123  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6990  001256                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6991  001256  6AF8               	clrf	tblptru,c
  6992  001258                     	endif
  6993  001258                     	if	0	;tblptru may be non-zero
  6994  001258                     	endif
  6995  001258  0008               	tblrd		*
  6996  00125A  CFF5 F138          	movff	tablat,vfpfcnvrt@c
  6997  00125E                     
  6998                           ; BSR set to: 1
  6999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  7000  00125E  0E02               	movlw	2
  7001  001260  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7002  001264  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7003  001268  26DE               	addwf	postinc2,f,c
  7004  00126A  0E00               	movlw	0
  7005  00126C  22DD               	addwfc	postdec2,f,c
  7006  00126E                     
  7007                           ; BSR set to: 1
  7008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  7009  00126E  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7010  001272  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7011  001276  CFDF F122          	movff	indf2,??_vfpfcnvrt
  7012  00127A  0E02               	movlw	2
  7013  00127C  26DE               	addwf	postinc2,f,c
  7014  00127E  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  7015  001282  0E00               	movlw	0
  7016  001284  22DD               	addwfc	postdec2,f,c
  7017  001286  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7018  00128A  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7019  00128E  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  7020  001292  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  7021  001296  C124  F139         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  7022  00129A  C125  F13A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  7023  00129E  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  7024  0012A0  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  7025  0012A2  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  7026  0012A4  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  7027  0012A6  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  7028  0012A8  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  7029  0012AA  EFF5  F007         	goto	l8877
  7030  0012AE                     l8923:
  7031                           
  7032                           ; BSR set to: 0
  7033                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  7034  0012AE  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7035  0012B2  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7036  0012B6  CFDE FFF6          	movff	postinc2,tblptrl
  7037  0012BA  CFDD FFF7          	movff	postdec2,tblptrh
  7038  0012BE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7039  0012BE  6AF8               	clrf	tblptru,c
  7040  0012C0                     	endif
  7041  0012C0                     	if	0	;tblptru may be non-zero
  7042  0012C0                     	endif
  7043  0012C0  0008               	tblrd		*
  7044  0012C2  50F5               	movf	tablat,w,c
  7045  0012C4  0A25               	xorlw	37
  7046  0012C6  A4D8               	btfss	status,2,c
  7047  0012C8  EF68  F009         	goto	u11541
  7048  0012CC  EF6A  F009         	goto	u11540
  7049  0012D0                     u11541:
  7050  0012D0  EF82  F009         	goto	l8933
  7051  0012D4                     u11540:
  7052  0012D4                     
  7053                           ; BSR set to: 0
  7054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  7055  0012D4  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7056  0012D8  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7057  0012DC  2ADE               	incf	postinc2,f,c
  7058  0012DE  0E00               	movlw	0
  7059  0012E0  22DD               	addwfc	postdec2,f,c
  7060  0012E2                     
  7061                           ; BSR set to: 0
  7062                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  7063  0012E2  0E00               	movlw	0
  7064  0012E4  6F90               	movwf	(fputc@c+1)& (0+255),b
  7065  0012E6  0E25               	movlw	37
  7066  0012E8  6F8F               	movwf	fputc@c& (0+255),b
  7067  0012EA  C11C  F091         	movff	vfpfcnvrt@fp,fputc@fp
  7068  0012EE  C11D  F092         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7069  0012F2  ECB1  F02B         	call	_fputc	;wreg free
  7070  0012F6                     l8929:
  7071                           
  7072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  7073  0012F6  0E00               	movlw	0
  7074  0012F8  0101               	movlb	1	; () banked
  7075  0012FA  6F1D               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7076  0012FC  0E01               	movlw	1
  7077  0012FE  6F1C               	movwf	?_vfpfcnvrt& (0+255),b
  7078  001300  EFA8  F009         	goto	l799
  7079  001304                     l8933:
  7080                           
  7081                           ; BSR set to: 0
  7082                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  7083  001304  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7084  001308  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7085  00130C  2ADE               	incf	postinc2,f,c
  7086  00130E  0E00               	movlw	0
  7087  001310  22DD               	addwfc	postdec2,f,c
  7088  001312  EF0B  F005         	goto	l8785
  7089  001316                     l8939:
  7090                           
  7091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  7092  001316  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7093  00131A  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7094  00131E  CFDE FFF6          	movff	postinc2,tblptrl
  7095  001322  CFDD FFF7          	movff	postdec2,tblptrh
  7096  001326                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7097  001326  6AF8               	clrf	tblptru,c
  7098  001328                     	endif
  7099  001328                     	if	0	;tblptru may be non-zero
  7100  001328                     	endif
  7101  001328  0008               	tblrd		*
  7102  00132A  50F5               	movf	tablat,w,c
  7103  00132C  0100               	movlb	0	; () banked
  7104  00132E  6F8F               	movwf	fputc@c& (0+255),b
  7105  001330  6B90               	clrf	(fputc@c+1)& (0+255),b
  7106  001332  C11C  F091         	movff	vfpfcnvrt@fp,fputc@fp
  7107  001336  C11D  F092         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7108  00133A  ECB1  F02B         	call	_fputc	;wreg free
  7109  00133E                     
  7110                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  7111  00133E  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7112  001342  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7113  001346  2ADE               	incf	postinc2,f,c
  7114  001348  0E00               	movlw	0
  7115  00134A  22DD               	addwfc	postdec2,f,c
  7116  00134C  EF7B  F009         	goto	l8929
  7117  001350                     l799:
  7118  001350  0012               	return		;funcret
  7119  001352                     __end_of_vfpfcnvrt:
  7120                           	opt callstack 0
  7121                           
  7122 ;; *************** function _xtoa *****************
  7123 ;; Defined at:
  7124 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7125 ;; Parameters:    Size  Location     Type
  7126 ;;  fp              2   74[BANK0 ] PTR struct _IO_FILE
  7127 ;;		 -> vsnprintf@f(6), NULL(0), 
  7128 ;;  d               8   76[BANK0 ] unsigned long long 
  7129 ;;  x               1   84[BANK0 ] unsigned char 
  7130 ;; Auto vars:     Size  Location     Type
  7131 ;;  n               8   16[BANK1 ] unsigned long long 
  7132 ;;  c               2   26[BANK1 ] int 
  7133 ;;  i               2   24[BANK1 ] int 
  7134 ;;  w               2   14[BANK1 ] int 
  7135 ;;  p               2   12[BANK1 ] int 
  7136 ;; Return value:  Size  Location     Type
  7137 ;;                  2   74[BANK0 ] int 
  7138 ;; Registers used:
  7139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7140 ;; Tracked objects:
  7141 ;;		On entry : 0/0
  7142 ;;		On exit  : 0/0
  7143 ;;		Unchanged: 0/0
  7144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7145 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7146 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7147 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7148 ;;      Totals:         0      11      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7149 ;;Total ram usage:       39 bytes
  7150 ;; Hardware stack levels used:    1
  7151 ;; Hardware stack levels required when called:   18
  7152 ;; This function calls:
  7153 ;;		_isalpha
  7154 ;;		_isupper
  7155 ;;		_pad
  7156 ;;		_toupper
  7157 ;; This function is called by:
  7158 ;;		_vfpfcnvrt
  7159 ;; This function uses a non-reentrant model
  7160 ;;
  7161                           
  7162                           	psect	text11
  7163  002D06                     __ptext11:
  7164                           	opt callstack 0
  7165  002D06                     _xtoa:
  7166                           	opt callstack 8
  7167  002D06                     
  7168                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  7169  002D06  0100               	movlb	0	; () banked
  7170  002D08  BFBC               	btfsc	(_prec+1)& (0+255),7,b
  7171  002D0A  EF89  F016         	goto	u10871
  7172  002D0E  EF8B  F016         	goto	u10870
  7173  002D12                     u10871:
  7174  002D12  EF8C  F016         	goto	l8531
  7175  002D16                     u10870:
  7176  002D16                     
  7177                           ; BSR set to: 0
  7178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  7179  002D16  93BD               	bcf	_flags& (0+255),1,b
  7180  002D18                     l8531:
  7181                           
  7182                           ; BSR set to: 0
  7183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  7184  002D18  BFBC               	btfsc	(_prec+1)& (0+255),7,b
  7185  002D1A  EF99  F016         	goto	u10880
  7186  002D1E  51BC               	movf	(_prec+1)& (0+255),w,b
  7187  002D20  E106               	bnz	u10881
  7188  002D22  05BB               	decf	_prec& (0+255),w,b
  7189  002D24  B0D8               	btfsc	status,0,c
  7190  002D26  EF97  F016         	goto	u10881
  7191  002D2A  EF99  F016         	goto	u10880
  7192  002D2E                     u10881:
  7193  002D2E  EFA0  F016         	goto	l737
  7194  002D32                     u10880:
  7195  002D32                     
  7196                           ; BSR set to: 0
  7197  002D32  0E00               	movlw	0
  7198  002D34  0101               	movlb	1	; () banked
  7199  002D36  6F0D               	movwf	(xtoa@p+1)& (0+255),b
  7200  002D38  0E01               	movlw	1
  7201  002D3A  6F0C               	movwf	xtoa@p& (0+255),b
  7202  002D3C  EFA4  F016         	goto	l739
  7203  002D40                     l737:
  7204                           
  7205                           ; BSR set to: 0
  7206  002D40  C0BB  F10C         	movff	_prec,xtoa@p
  7207  002D44  C0BC  F10D         	movff	_prec+1,xtoa@p+1
  7208  002D48                     l739:
  7209                           
  7210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  7211  002D48  C0B9  F10E         	movff	_width,xtoa@w
  7212  002D4C  C0BA  F10F         	movff	_width+1,xtoa@w+1
  7213                           
  7214                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  7215  002D50  0100               	movlb	0	; () banked
  7216  002D52  A9BD               	btfss	_flags& (0+255),4,b
  7217  002D54  EFAE  F016         	goto	u10891
  7218  002D58  EFB0  F016         	goto	u10890
  7219  002D5C                     u10891:
  7220  002D5C  EFB5  F016         	goto	l8537
  7221  002D60                     u10890:
  7222  002D60                     
  7223                           ; BSR set to: 0
  7224                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  7225  002D60  0101               	movlb	1	; () banked
  7226  002D62  0EFE               	movlw	254
  7227  002D64  270E               	addwf	xtoa@w& (0+255),f,b
  7228  002D66  0EFF               	movlw	255
  7229  002D68  230F               	addwfc	(xtoa@w+1)& (0+255),f,b
  7230  002D6A                     l8537:
  7231                           
  7232                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  7233  002D6A  C0AC  F110         	movff	xtoa@d,xtoa@n
  7234  002D6E  C0AD  F111         	movff	xtoa@d+1,xtoa@n+1
  7235  002D72  C0AE  F112         	movff	xtoa@d+2,xtoa@n+2
  7236  002D76  C0AF  F113         	movff	xtoa@d+3,xtoa@n+3
  7237  002D7A  C0B0  F114         	movff	xtoa@d+4,xtoa@n+4
  7238  002D7E  C0B1  F115         	movff	xtoa@d+5,xtoa@n+5
  7239  002D82  C0B2  F116         	movff	xtoa@d+6,xtoa@n+6
  7240  002D86  C0B3  F117         	movff	xtoa@d+7,xtoa@n+7
  7241  002D8A                     
  7242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  7243  002D8A  0E00               	movlw	0
  7244  002D8C  0101               	movlb	1	; () banked
  7245  002D8E  6F19               	movwf	(xtoa@i+1)& (0+255),b
  7246  002D90  0E1F               	movlw	31
  7247  002D92  6F18               	movwf	xtoa@i& (0+255),b
  7248  002D94                     
  7249                           ; BSR set to: 1
  7250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  7251  002D94  0E00               	movlw	0
  7252  002D96  6F97               	movwf	(_dbuf+31)& (0+255),b
  7253                           
  7254                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7255  002D98  EF85  F017         	goto	l8573
  7256  002D9C                     l8543:
  7257                           
  7258                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  7259  002D9C  0101               	movlb	1	; () banked
  7260  002D9E  0718               	decf	xtoa@i& (0+255),f,b
  7261  002DA0  A0D8               	btfss	status,0,c
  7262  002DA2  0719               	decf	(xtoa@i+1)& (0+255),f,b
  7263  002DA4                     
  7264                           ; BSR set to: 1
  7265                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  7266  002DA4  0E0F               	movlw	15
  7267  002DA6  1510               	andwf	xtoa@n& (0+255),w,b
  7268  002DA8  6F1A               	movwf	xtoa@c& (0+255),b
  7269  002DAA  6B1B               	clrf	(xtoa@c+1)& (0+255),b
  7270  002DAC                     
  7271                           ; BSR set to: 1
  7272                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  7273  002DAC  BF1B               	btfsc	(xtoa@c+1)& (0+255),7,b
  7274  002DAE  EFE2  F016         	goto	u10901
  7275  002DB2  511B               	movf	(xtoa@c+1)& (0+255),w,b
  7276  002DB4  E109               	bnz	u10900
  7277  002DB6  0E0A               	movlw	10
  7278  002DB8  5D1A               	subwf	xtoa@c& (0+255),w,b
  7279  002DBA  A0D8               	btfss	status,0,c
  7280  002DBC  EFE2  F016         	goto	u10901
  7281  002DC0  EFE4  F016         	goto	u10900
  7282  002DC4                     u10901:
  7283  002DC4  EFEC  F016         	goto	l8551
  7284  002DC8                     u10900:
  7285  002DC8                     
  7286                           ; BSR set to: 1
  7287  002DC8  0E57               	movlw	87
  7288  002DCA  251A               	addwf	xtoa@c& (0+255),w,b
  7289  002DCC  6F1A               	movwf	xtoa@c& (0+255),b
  7290  002DCE  0E00               	movlw	0
  7291  002DD0  211B               	addwfc	(xtoa@c+1)& (0+255),w,b
  7292  002DD2  6F1B               	movwf	(xtoa@c+1)& (0+255),b
  7293  002DD4  EFF2  F016         	goto	l746
  7294  002DD8                     l8551:
  7295                           
  7296                           ; BSR set to: 1
  7297  002DD8  0E30               	movlw	48
  7298  002DDA  251A               	addwf	xtoa@c& (0+255),w,b
  7299  002DDC  6F1A               	movwf	xtoa@c& (0+255),b
  7300  002DDE  0E00               	movlw	0
  7301  002DE0  211B               	addwfc	(xtoa@c+1)& (0+255),w,b
  7302  002DE2  6F1B               	movwf	(xtoa@c+1)& (0+255),b
  7303  002DE4                     l746:
  7304                           
  7305                           ; BSR set to: 1
  7306  002DE4  0EBF               	movlw	191
  7307  002DE6  6F00               	movwf	??_xtoa& (0+255),b
  7308  002DE8  0EFF               	movlw	255
  7309  002DEA  6F01               	movwf	(??_xtoa+1)& (0+255),b
  7310  002DEC  0100               	movlb	0	; () banked
  7311  002DEE  51B4               	movf	xtoa@x& (0+255),w,b
  7312  002DF0  0101               	movlb	1	; () banked
  7313  002DF2  6F02               	movwf	(??_xtoa+2)& (0+255),b
  7314  002DF4  6B03               	clrf	(??_xtoa+3)& (0+255),b
  7315  002DF6  5100               	movf	??_xtoa& (0+255),w,b
  7316  002DF8  2702               	addwf	(??_xtoa+2)& (0+255),f,b
  7317  002DFA  5101               	movf	(??_xtoa+1)& (0+255),w,b
  7318  002DFC  2303               	addwfc	(??_xtoa+3)& (0+255),f,b
  7319  002DFE  5103               	movf	(??_xtoa+3)& (0+255),w,b
  7320  002E00  E10A               	bnz	u10910
  7321  002E02  0E1A               	movlw	26
  7322  002E04  5D02               	subwf	(??_xtoa+2)& (0+255),w,b
  7323  002E06  A0D8               	btfss	status,0,c
  7324  002E08  EF08  F017         	goto	u10911
  7325  002E0C  EF0B  F017         	goto	u10910
  7326  002E10                     u10911:
  7327  002E10  0E01               	movlw	1
  7328  002E12  EF0C  F017         	goto	u10920
  7329  002E16                     u10910:
  7330  002E16  0E00               	movlw	0
  7331  002E18                     u10920:
  7332  002E18  6F08               	movwf	_xtoa$1708& (0+255),b
  7333  002E1A  6B09               	clrf	(_xtoa$1708+1)& (0+255),b
  7334  002E1C                     
  7335                           ; BSR set to: 1
  7336  002E1C  5108               	movf	_xtoa$1708& (0+255),w,b
  7337  002E1E  1109               	iorwf	(_xtoa$1708+1)& (0+255),w,b
  7338  002E20  B4D8               	btfsc	status,2,c
  7339  002E22  EF15  F017         	goto	u10931
  7340  002E26  EF17  F017         	goto	u10930
  7341  002E2A                     u10931:
  7342  002E2A  EF47  F017         	goto	l8565
  7343  002E2E                     u10930:
  7344  002E2E                     
  7345                           ; BSR set to: 1
  7346  002E2E  0E9F               	movlw	159
  7347  002E30  6F00               	movwf	??_xtoa& (0+255),b
  7348  002E32  0EFF               	movlw	255
  7349  002E34  6F01               	movwf	(??_xtoa+1)& (0+255),b
  7350  002E36  0E20               	movlw	32
  7351  002E38  111A               	iorwf	xtoa@c& (0+255),w,b
  7352  002E3A  6F02               	movwf	(??_xtoa+2)& (0+255),b
  7353  002E3C  0E00               	movlw	0
  7354  002E3E  111B               	iorwf	(xtoa@c+1)& (0+255),w,b
  7355  002E40  6F03               	movwf	(??_xtoa+3)& (0+255),b
  7356  002E42  5100               	movf	??_xtoa& (0+255),w,b
  7357  002E44  2702               	addwf	(??_xtoa+2)& (0+255),f,b
  7358  002E46  5101               	movf	(??_xtoa+1)& (0+255),w,b
  7359  002E48  2303               	addwfc	(??_xtoa+3)& (0+255),f,b
  7360  002E4A  5103               	movf	(??_xtoa+3)& (0+255),w,b
  7361  002E4C  E10A               	bnz	u10940
  7362  002E4E  0E1A               	movlw	26
  7363  002E50  5D02               	subwf	(??_xtoa+2)& (0+255),w,b
  7364  002E52  A0D8               	btfss	status,0,c
  7365  002E54  EF2E  F017         	goto	u10941
  7366  002E58  EF31  F017         	goto	u10940
  7367  002E5C                     u10941:
  7368  002E5C  0E01               	movlw	1
  7369  002E5E  EF32  F017         	goto	u10950
  7370  002E62                     u10940:
  7371  002E62  0E00               	movlw	0
  7372  002E64                     u10950:
  7373  002E64  6F0A               	movwf	_xtoa$1709& (0+255),b
  7374  002E66  6B0B               	clrf	(_xtoa$1709+1)& (0+255),b
  7375  002E68                     
  7376                           ; BSR set to: 1
  7377  002E68  510A               	movf	_xtoa$1709& (0+255),w,b
  7378  002E6A  110B               	iorwf	(_xtoa$1709+1)& (0+255),w,b
  7379  002E6C  B4D8               	btfsc	status,2,c
  7380  002E6E  EF3B  F017         	goto	u10961
  7381  002E72  EF3D  F017         	goto	u10960
  7382  002E76                     u10961:
  7383  002E76  EF47  F017         	goto	l8565
  7384  002E7A                     u10960:
  7385  002E7A                     
  7386                           ; BSR set to: 1
  7387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  7388  002E7A  C11A  F093         	movff	xtoa@c,toupper@c
  7389  002E7E  C11B  F094         	movff	xtoa@c+1,toupper@c+1
  7390  002E82  EC0D  F02F         	call	_toupper	;wreg free
  7391  002E86  C093  F11A         	movff	?_toupper,xtoa@c
  7392  002E8A  C094  F11B         	movff	?_toupper+1,xtoa@c+1
  7393  002E8E                     l8565:
  7394                           
  7395                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  7396  002E8E  0E78               	movlw	low _dbuf
  7397  002E90  0101               	movlb	1	; () banked
  7398  002E92  2518               	addwf	xtoa@i& (0+255),w,b
  7399  002E94  6ED9               	movwf	fsr2l,c
  7400  002E96  0E01               	movlw	high _dbuf
  7401  002E98  2119               	addwfc	(xtoa@i+1)& (0+255),w,b
  7402  002E9A  6EDA               	movwf	fsr2h,c
  7403  002E9C  C11A  FFDF         	movff	xtoa@c,indf2
  7404  002EA0                     
  7405                           ; BSR set to: 1
  7406                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  7407  002EA0  070C               	decf	xtoa@p& (0+255),f,b
  7408  002EA2  A0D8               	btfss	status,0,c
  7409  002EA4  070D               	decf	(xtoa@p+1)& (0+255),f,b
  7410  002EA6                     
  7411                           ; BSR set to: 1
  7412                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  7413  002EA6  070E               	decf	xtoa@w& (0+255),f,b
  7414  002EA8  A0D8               	btfss	status,0,c
  7415  002EAA  070F               	decf	(xtoa@w+1)& (0+255),f,b
  7416  002EAC                     
  7417                           ; BSR set to: 1
  7418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  7419  002EAC  C110  F100         	movff	xtoa@n,??_xtoa
  7420  002EB0  C111  F101         	movff	xtoa@n+1,??_xtoa+1
  7421  002EB4  C112  F102         	movff	xtoa@n+2,??_xtoa+2
  7422  002EB8  C113  F103         	movff	xtoa@n+3,??_xtoa+3
  7423  002EBC  C114  F104         	movff	xtoa@n+4,??_xtoa+4
  7424  002EC0  C115  F105         	movff	xtoa@n+5,??_xtoa+5
  7425  002EC4  C116  F106         	movff	xtoa@n+6,??_xtoa+6
  7426  002EC8  C117  F107         	movff	xtoa@n+7,??_xtoa+7
  7427  002ECC  0E05               	movlw	5
  7428  002ECE  EF72  F017         	goto	u10970
  7429  002ED2                     u10975:
  7430  002ED2  90D8               	bcf	status,0,c
  7431  002ED4  3307               	rrcf	(??_xtoa+7)& (0+255),f,b
  7432  002ED6  3306               	rrcf	(??_xtoa+6)& (0+255),f,b
  7433  002ED8  3305               	rrcf	(??_xtoa+5)& (0+255),f,b
  7434  002EDA  3304               	rrcf	(??_xtoa+4)& (0+255),f,b
  7435  002EDC  3303               	rrcf	(??_xtoa+3)& (0+255),f,b
  7436  002EDE  3302               	rrcf	(??_xtoa+2)& (0+255),f,b
  7437  002EE0  3301               	rrcf	(??_xtoa+1)& (0+255),f,b
  7438  002EE2  3300               	rrcf	??_xtoa& (0+255),f,b
  7439  002EE4                     u10970:
  7440  002EE4  2EE8               	decfsz	wreg,f,c
  7441  002EE6  EF69  F017         	goto	u10975
  7442  002EEA  C100  F110         	movff	??_xtoa,xtoa@n
  7443  002EEE  C101  F111         	movff	??_xtoa+1,xtoa@n+1
  7444  002EF2  C102  F112         	movff	??_xtoa+2,xtoa@n+2
  7445  002EF6  C103  F113         	movff	??_xtoa+3,xtoa@n+3
  7446  002EFA  C104  F114         	movff	??_xtoa+4,xtoa@n+4
  7447  002EFE  C105  F115         	movff	??_xtoa+5,xtoa@n+5
  7448  002F02  C106  F116         	movff	??_xtoa+6,xtoa@n+6
  7449  002F06  C107  F117         	movff	??_xtoa+7,xtoa@n+7
  7450  002F0A                     l8573:
  7451                           
  7452                           ; BSR set to: 1
  7453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7454  002F0A  BF19               	btfsc	(xtoa@i+1)& (0+255),7,b
  7455  002F0C  EF91  F017         	goto	u10981
  7456  002F10  5119               	movf	(xtoa@i+1)& (0+255),w,b
  7457  002F12  E109               	bnz	u10980
  7458  002F14  0E02               	movlw	2
  7459  002F16  5D18               	subwf	xtoa@i& (0+255),w,b
  7460  002F18  A0D8               	btfss	status,0,c
  7461  002F1A  EF91  F017         	goto	u10981
  7462  002F1E  EF93  F017         	goto	u10980
  7463  002F22                     u10981:
  7464  002F22  EFC4  F017         	goto	l760
  7465  002F26                     u10980:
  7466  002F26                     
  7467                           ; BSR set to: 1
  7468  002F26  5110               	movf	xtoa@n& (0+255),w,b
  7469  002F28  1111               	iorwf	(xtoa@n+1)& (0+255),w,b
  7470  002F2A  1112               	iorwf	(xtoa@n+2)& (0+255),w,b
  7471  002F2C  1113               	iorwf	(xtoa@n+3)& (0+255),w,b
  7472  002F2E  1114               	iorwf	(xtoa@n+4)& (0+255),w,b
  7473  002F30  1115               	iorwf	(xtoa@n+5)& (0+255),w,b
  7474  002F32  1116               	iorwf	(xtoa@n+6)& (0+255),w,b
  7475  002F34  1117               	iorwf	(xtoa@n+7)& (0+255),w,b
  7476  002F36  A4D8               	btfss	status,2,c
  7477  002F38  EFA0  F017         	goto	u10991
  7478  002F3C  EFA2  F017         	goto	u10990
  7479  002F40                     u10991:
  7480  002F40  EFCE  F016         	goto	l8543
  7481  002F44                     u10990:
  7482  002F44                     
  7483                           ; BSR set to: 1
  7484  002F44  BF0D               	btfsc	(xtoa@p+1)& (0+255),7,b
  7485  002F46  EFAF  F017         	goto	u11000
  7486  002F4A  510D               	movf	(xtoa@p+1)& (0+255),w,b
  7487  002F4C  E106               	bnz	u11001
  7488  002F4E  050C               	decf	xtoa@p& (0+255),w,b
  7489  002F50  B0D8               	btfsc	status,0,c
  7490  002F52  EFAD  F017         	goto	u11001
  7491  002F56  EFAF  F017         	goto	u11000
  7492  002F5A                     u11001:
  7493  002F5A  EFCE  F016         	goto	l8543
  7494  002F5E                     u11000:
  7495  002F5E                     
  7496                           ; BSR set to: 1
  7497  002F5E  BF0F               	btfsc	(xtoa@w+1)& (0+255),7,b
  7498  002F60  EFBA  F017         	goto	u11011
  7499  002F64  510F               	movf	(xtoa@w+1)& (0+255),w,b
  7500  002F66  E108               	bnz	u11010
  7501  002F68  050E               	decf	xtoa@w& (0+255),w,b
  7502  002F6A  A0D8               	btfss	status,0,c
  7503  002F6C  EFBA  F017         	goto	u11011
  7504  002F70  EFBC  F017         	goto	u11010
  7505  002F74                     u11011:
  7506  002F74  EFC4  F017         	goto	l760
  7507  002F78                     u11010:
  7508  002F78                     
  7509                           ; BSR set to: 1
  7510  002F78  0100               	movlb	0	; () banked
  7511  002F7A  B3BD               	btfsc	_flags& (0+255),1,b
  7512  002F7C  EFC2  F017         	goto	u11021
  7513  002F80  EFC4  F017         	goto	u11020
  7514  002F84                     u11021:
  7515  002F84  EFCE  F016         	goto	l8543
  7516  002F88                     u11020:
  7517  002F88                     l760:
  7518                           
  7519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  7520  002F88  0100               	movlb	0	; () banked
  7521  002F8A  A9BD               	btfss	_flags& (0+255),4,b
  7522  002F8C  EFCA  F017         	goto	u11031
  7523  002F90  EFCC  F017         	goto	u11030
  7524  002F94                     u11031:
  7525  002F94  EFE3  F017         	goto	l8589
  7526  002F98                     u11030:
  7527  002F98                     
  7528                           ; BSR set to: 0
  7529                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  7530  002F98  0101               	movlb	1	; () banked
  7531  002F9A  0718               	decf	xtoa@i& (0+255),f,b
  7532  002F9C  A0D8               	btfss	status,0,c
  7533  002F9E  0719               	decf	(xtoa@i+1)& (0+255),f,b
  7534  002FA0                     
  7535                           ; BSR set to: 1
  7536                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  7537  002FA0  0E78               	movlw	low _dbuf
  7538  002FA2  2518               	addwf	xtoa@i& (0+255),w,b
  7539  002FA4  6ED9               	movwf	fsr2l,c
  7540  002FA6  0E01               	movlw	high _dbuf
  7541  002FA8  2119               	addwfc	(xtoa@i+1)& (0+255),w,b
  7542  002FAA  6EDA               	movwf	fsr2h,c
  7543  002FAC  C0B4  FFDF         	movff	xtoa@x,indf2
  7544  002FB0                     
  7545                           ; BSR set to: 1
  7546                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  7547  002FB0  0718               	decf	xtoa@i& (0+255),f,b
  7548  002FB2  A0D8               	btfss	status,0,c
  7549  002FB4  0719               	decf	(xtoa@i+1)& (0+255),f,b
  7550                           
  7551                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  7552  002FB6  0E78               	movlw	low _dbuf
  7553  002FB8  2518               	addwf	xtoa@i& (0+255),w,b
  7554  002FBA  6ED9               	movwf	fsr2l,c
  7555  002FBC  0E01               	movlw	high _dbuf
  7556  002FBE  2119               	addwfc	(xtoa@i+1)& (0+255),w,b
  7557  002FC0  6EDA               	movwf	fsr2h,c
  7558  002FC2  0E30               	movlw	48
  7559  002FC4  6EDF               	movwf	indf2,c
  7560  002FC6                     l8589:
  7561                           
  7562                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  7563  002FC6  C0AA  F09F         	movff	xtoa@fp,pad@fp
  7564  002FCA  C0AB  F0A0         	movff	xtoa@fp+1,pad@fp+1
  7565  002FCE  0E78               	movlw	low _dbuf
  7566  002FD0  0101               	movlb	1	; () banked
  7567  002FD2  2518               	addwf	xtoa@i& (0+255),w,b
  7568  002FD4  0100               	movlb	0	; () banked
  7569  002FD6  6FA1               	movwf	pad@buf& (0+255),b
  7570  002FD8  0E01               	movlw	high _dbuf
  7571  002FDA  0101               	movlb	1	; () banked
  7572  002FDC  2119               	addwfc	(xtoa@i+1)& (0+255),w,b
  7573  002FDE  0100               	movlb	0	; () banked
  7574  002FE0  6FA2               	movwf	(pad@buf+1)& (0+255),b
  7575  002FE2  C10E  F0A3         	movff	xtoa@w,pad@p
  7576  002FE6  C10F  F0A4         	movff	xtoa@w+1,pad@p+1
  7577  002FEA  EC17  F02C         	call	_pad	;wreg free
  7578  002FEE  C09F  F0AA         	movff	?_pad,?_xtoa
  7579  002FF2  C0A0  F0AB         	movff	?_pad+1,?_xtoa+1
  7580  002FF6  0012               	return		;funcret
  7581  002FF8                     __end_of_xtoa:
  7582                           	opt callstack 0
  7583                           
  7584 ;; *************** function _toupper *****************
  7585 ;; Defined at:
  7586 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  7587 ;; Parameters:    Size  Location     Type
  7588 ;;  c               2   51[BANK0 ] int 
  7589 ;; Auto vars:     Size  Location     Type
  7590 ;;		None
  7591 ;; Return value:  Size  Location     Type
  7592 ;;                  2   51[BANK0 ] int 
  7593 ;; Registers used:
  7594 ;;		wreg, status,2, status,0
  7595 ;; Tracked objects:
  7596 ;;		On entry : 0/0
  7597 ;;		On exit  : 0/0
  7598 ;;		Unchanged: 0/0
  7599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7600 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7601 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7602 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7603 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7604 ;;Total ram usage:        8 bytes
  7605 ;; Hardware stack levels used:    1
  7606 ;; Hardware stack levels required when called:   14
  7607 ;; This function calls:
  7608 ;;		_islower
  7609 ;; This function is called by:
  7610 ;;		_xtoa
  7611 ;; This function uses a non-reentrant model
  7612 ;;
  7613                           
  7614                           	psect	text12
  7615  005E1A                     __ptext12:
  7616                           	opt callstack 0
  7617  005E1A                     _toupper:
  7618                           	opt callstack 11
  7619  005E1A  0E9F               	movlw	159
  7620  005E1C  0100               	movlb	0	; () banked
  7621  005E1E  6F95               	movwf	??_toupper& (0+255),b
  7622  005E20  0EFF               	movlw	255
  7623  005E22  6F96               	movwf	(??_toupper+1)& (0+255),b
  7624  005E24  C093  F097         	movff	toupper@c,??_toupper+2
  7625  005E28  C094  F098         	movff	toupper@c+1,??_toupper+3
  7626  005E2C  5195               	movf	??_toupper& (0+255),w,b
  7627  005E2E  2797               	addwf	(??_toupper+2)& (0+255),f,b
  7628  005E30  5196               	movf	(??_toupper+1)& (0+255),w,b
  7629  005E32  2398               	addwfc	(??_toupper+3)& (0+255),f,b
  7630  005E34  5198               	movf	(??_toupper+3)& (0+255),w,b
  7631  005E36  E10A               	bnz	u9610
  7632  005E38  0E1A               	movlw	26
  7633  005E3A  5D97               	subwf	(??_toupper+2)& (0+255),w,b
  7634  005E3C  A0D8               	btfss	status,0,c
  7635  005E3E  EF23  F02F         	goto	u9611
  7636  005E42  EF26  F02F         	goto	u9610
  7637  005E46                     u9611:
  7638  005E46  0E01               	movlw	1
  7639  005E48  EF27  F02F         	goto	u9620
  7640  005E4C                     u9610:
  7641  005E4C  0E00               	movlw	0
  7642  005E4E                     u9620:
  7643  005E4E  6F99               	movwf	_toupper$2399& (0+255),b
  7644  005E50  6B9A               	clrf	(_toupper$2399+1)& (0+255),b
  7645  005E52                     
  7646                           ; BSR set to: 0
  7647  005E52  5199               	movf	_toupper$2399& (0+255),w,b
  7648  005E54  119A               	iorwf	(_toupper$2399+1)& (0+255),w,b
  7649  005E56  B4D8               	btfsc	status,2,c
  7650  005E58  EF30  F02F         	goto	u9631
  7651  005E5C  EF32  F02F         	goto	u9630
  7652  005E60                     u9631:
  7653  005E60  EF38  F02F         	goto	l1636
  7654  005E64                     u9630:
  7655  005E64                     
  7656                           ; BSR set to: 0
  7657  005E64  0E5F               	movlw	95
  7658  005E66  1593               	andwf	toupper@c& (0+255),w,b
  7659  005E68  6F93               	movwf	?_toupper& (0+255),b
  7660  005E6A  6B94               	clrf	(?_toupper+1)& (0+255),b
  7661  005E6C  EF3C  F02F         	goto	l1641
  7662  005E70                     l1636:
  7663                           
  7664                           ; BSR set to: 0
  7665  005E70  C093  F093         	movff	toupper@c,?_toupper
  7666  005E74  C094  F094         	movff	toupper@c+1,?_toupper+1
  7667  005E78                     l1641:
  7668                           
  7669                           ; BSR set to: 0
  7670  005E78  0012               	return		;funcret
  7671  005E7A                     __end_of_toupper:
  7672                           	opt callstack 0
  7673                           
  7674 ;; *************** function _islower *****************
  7675 ;; Defined at:
  7676 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  7677 ;; Parameters:    Size  Location     Type
  7678 ;;  c               2   45[BANK0 ] int 
  7679 ;; Auto vars:     Size  Location     Type
  7680 ;;		None
  7681 ;; Return value:  Size  Location     Type
  7682 ;;                  2   45[BANK0 ] int 
  7683 ;; Registers used:
  7684 ;;		wreg, status,2, status,0
  7685 ;; Tracked objects:
  7686 ;;		On entry : 0/0
  7687 ;;		On exit  : 0/0
  7688 ;;		Unchanged: 0/0
  7689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7690 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7692 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7693 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7694 ;;Total ram usage:        6 bytes
  7695 ;; Hardware stack levels used:    1
  7696 ;; Hardware stack levels required when called:   13
  7697 ;; This function calls:
  7698 ;;		Nothing
  7699 ;; This function is called by:
  7700 ;;		_toupper
  7701 ;; This function uses a non-reentrant model
  7702 ;;
  7703                           
  7704                           	psect	text13
  7705  0063BA                     __ptext13:
  7706                           	opt callstack 0
  7707  0063BA                     _islower:
  7708                           	opt callstack 11
  7709  0063BA  0E9F               	movlw	159
  7710  0063BC  0100               	movlb	0	; () banked
  7711  0063BE  6F8F               	movwf	??_islower& (0+255),b
  7712  0063C0  0EFF               	movlw	255
  7713  0063C2  6F90               	movwf	(??_islower+1)& (0+255),b
  7714  0063C4  C08D  F091         	movff	islower@c,??_islower+2
  7715  0063C8  C08E  F092         	movff	islower@c+1,??_islower+3
  7716  0063CC  518F               	movf	??_islower& (0+255),w,b
  7717  0063CE  2791               	addwf	(??_islower+2)& (0+255),f,b
  7718  0063D0  5190               	movf	(??_islower+1)& (0+255),w,b
  7719  0063D2  2392               	addwfc	(??_islower+3)& (0+255),f,b
  7720  0063D4  5192               	movf	(??_islower+3)& (0+255),w,b
  7721  0063D6  E10A               	bnz	u8740
  7722  0063D8  0E1A               	movlw	26
  7723  0063DA  5D91               	subwf	(??_islower+2)& (0+255),w,b
  7724  0063DC  A0D8               	btfss	status,0,c
  7725  0063DE  EFF3  F031         	goto	u8741
  7726  0063E2  EFF6  F031         	goto	u8740
  7727  0063E6                     u8741:
  7728  0063E6  0E01               	movlw	1
  7729  0063E8  EFF7  F031         	goto	u8750
  7730  0063EC                     u8740:
  7731  0063EC  0E00               	movlw	0
  7732  0063EE                     u8750:
  7733  0063EE  6F8D               	movwf	?_islower& (0+255),b
  7734  0063F0  6B8E               	clrf	(?_islower+1)& (0+255),b
  7735  0063F2                     
  7736                           ; BSR set to: 0
  7737  0063F2  0012               	return		;funcret
  7738  0063F4                     __end_of_islower:
  7739                           	opt callstack 0
  7740                           
  7741 ;; *************** function _isupper *****************
  7742 ;; Defined at:
  7743 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  7744 ;; Parameters:    Size  Location     Type
  7745 ;;  c               2   45[BANK0 ] int 
  7746 ;; Auto vars:     Size  Location     Type
  7747 ;;		None
  7748 ;; Return value:  Size  Location     Type
  7749 ;;                  2   45[BANK0 ] int 
  7750 ;; Registers used:
  7751 ;;		wreg, status,2, status,0
  7752 ;; Tracked objects:
  7753 ;;		On entry : 0/0
  7754 ;;		On exit  : 0/0
  7755 ;;		Unchanged: 0/0
  7756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7757 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7759 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7760 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7761 ;;Total ram usage:        6 bytes
  7762 ;; Hardware stack levels used:    1
  7763 ;; Hardware stack levels required when called:   13
  7764 ;; This function calls:
  7765 ;;		Nothing
  7766 ;; This function is called by:
  7767 ;;		_xtoa
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771                           	psect	text14
  7772  0063F4                     __ptext14:
  7773                           	opt callstack 0
  7774  0063F4                     _isupper:
  7775                           	opt callstack 12
  7776  0063F4  0EBF               	movlw	191
  7777  0063F6  0100               	movlb	0	; () banked
  7778  0063F8  6F8F               	movwf	??_isupper& (0+255),b
  7779  0063FA  0EFF               	movlw	255
  7780  0063FC  6F90               	movwf	(??_isupper+1)& (0+255),b
  7781  0063FE  C08D  F091         	movff	isupper@c,??_isupper+2
  7782  006402  C08E  F092         	movff	isupper@c+1,??_isupper+3
  7783  006406  518F               	movf	??_isupper& (0+255),w,b
  7784  006408  2791               	addwf	(??_isupper+2)& (0+255),f,b
  7785  00640A  5190               	movf	(??_isupper+1)& (0+255),w,b
  7786  00640C  2392               	addwfc	(??_isupper+3)& (0+255),f,b
  7787  00640E  5192               	movf	(??_isupper+3)& (0+255),w,b
  7788  006410  E10A               	bnz	u9570
  7789  006412  0E1A               	movlw	26
  7790  006414  5D91               	subwf	(??_isupper+2)& (0+255),w,b
  7791  006416  A0D8               	btfss	status,0,c
  7792  006418  EF10  F032         	goto	u9571
  7793  00641C  EF13  F032         	goto	u9570
  7794  006420                     u9571:
  7795  006420  0E01               	movlw	1
  7796  006422  EF14  F032         	goto	u9580
  7797  006426                     u9570:
  7798  006426  0E00               	movlw	0
  7799  006428                     u9580:
  7800  006428  6F8D               	movwf	?_isupper& (0+255),b
  7801  00642A  6B8E               	clrf	(?_isupper+1)& (0+255),b
  7802  00642C                     
  7803                           ; BSR set to: 0
  7804  00642C  0012               	return		;funcret
  7805  00642E                     __end_of_isupper:
  7806                           	opt callstack 0
  7807                           
  7808 ;; *************** function _isalpha *****************
  7809 ;; Defined at:
  7810 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  7811 ;; Parameters:    Size  Location     Type
  7812 ;;  c               2   45[BANK0 ] int 
  7813 ;; Auto vars:     Size  Location     Type
  7814 ;;		None
  7815 ;; Return value:  Size  Location     Type
  7816 ;;                  2   45[BANK0 ] int 
  7817 ;; Registers used:
  7818 ;;		wreg, status,2, status,0
  7819 ;; Tracked objects:
  7820 ;;		On entry : 0/0
  7821 ;;		On exit  : 0/0
  7822 ;;		Unchanged: 0/0
  7823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7824 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7826 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7827 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7828 ;;Total ram usage:        6 bytes
  7829 ;; Hardware stack levels used:    1
  7830 ;; Hardware stack levels required when called:   13
  7831 ;; This function calls:
  7832 ;;		Nothing
  7833 ;; This function is called by:
  7834 ;;		_xtoa
  7835 ;; This function uses a non-reentrant model
  7836 ;;
  7837                           
  7838                           	psect	text15
  7839  006340                     __ptext15:
  7840                           	opt callstack 0
  7841  006340                     _isalpha:
  7842                           	opt callstack 12
  7843  006340  0E9F               	movlw	159
  7844  006342  0100               	movlb	0	; () banked
  7845  006344  6F8F               	movwf	??_isalpha& (0+255),b
  7846  006346  0EFF               	movlw	255
  7847  006348  6F90               	movwf	(??_isalpha+1)& (0+255),b
  7848  00634A  0E20               	movlw	32
  7849  00634C  118D               	iorwf	isalpha@c& (0+255),w,b
  7850  00634E  6F91               	movwf	(??_isalpha+2)& (0+255),b
  7851  006350  0E00               	movlw	0
  7852  006352  118E               	iorwf	(isalpha@c+1)& (0+255),w,b
  7853  006354  6F92               	movwf	(??_isalpha+3)& (0+255),b
  7854  006356  518F               	movf	??_isalpha& (0+255),w,b
  7855  006358  2791               	addwf	(??_isalpha+2)& (0+255),f,b
  7856  00635A  5190               	movf	(??_isalpha+1)& (0+255),w,b
  7857  00635C  2392               	addwfc	(??_isalpha+3)& (0+255),f,b
  7858  00635E  5192               	movf	(??_isalpha+3)& (0+255),w,b
  7859  006360  E10A               	bnz	u9590
  7860  006362  0E1A               	movlw	26
  7861  006364  5D91               	subwf	(??_isalpha+2)& (0+255),w,b
  7862  006366  A0D8               	btfss	status,0,c
  7863  006368  EFB8  F031         	goto	u9591
  7864  00636C  EFBB  F031         	goto	u9590
  7865  006370                     u9591:
  7866  006370  0E01               	movlw	1
  7867  006372  EFBC  F031         	goto	u9600
  7868  006376                     u9590:
  7869  006376  0E00               	movlw	0
  7870  006378                     u9600:
  7871  006378  6F8D               	movwf	?_isalpha& (0+255),b
  7872  00637A  6B8E               	clrf	(?_isalpha+1)& (0+255),b
  7873  00637C                     
  7874                           ; BSR set to: 0
  7875  00637C  0012               	return		;funcret
  7876  00637E                     __end_of_isalpha:
  7877                           	opt callstack 0
  7878                           
  7879 ;; *************** function _utoa *****************
  7880 ;; Defined at:
  7881 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7882 ;; Parameters:    Size  Location     Type
  7883 ;;  fp              2   74[BANK0 ] PTR struct _IO_FILE
  7884 ;;		 -> vsnprintf@f(6), NULL(0), 
  7885 ;;  d               8   76[BANK0 ] unsigned long long 
  7886 ;; Auto vars:     Size  Location     Type
  7887 ;;  n               8   12[BANK1 ] unsigned long long 
  7888 ;;  i               2   20[BANK1 ] int 
  7889 ;;  w               2   10[BANK1 ] int 
  7890 ;;  p               2    8[BANK1 ] int 
  7891 ;; Return value:  Size  Location     Type
  7892 ;;                  2   74[BANK0 ] int 
  7893 ;; Registers used:
  7894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7895 ;; Tracked objects:
  7896 ;;		On entry : 0/0
  7897 ;;		On exit  : 0/0
  7898 ;;		Unchanged: 0/0
  7899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7900 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7901 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7902 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7903 ;;      Totals:         0      10      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7904 ;;Total ram usage:       32 bytes
  7905 ;; Hardware stack levels used:    1
  7906 ;; Hardware stack levels required when called:   18
  7907 ;; This function calls:
  7908 ;;		___lodiv
  7909 ;;		___lomod
  7910 ;;		_pad
  7911 ;; This function is called by:
  7912 ;;		_vfpfcnvrt
  7913 ;; This function uses a non-reentrant model
  7914 ;;
  7915                           
  7916                           	psect	text16
  7917  003820                     __ptext16:
  7918                           	opt callstack 0
  7919  003820                     _utoa:
  7920                           	opt callstack 8
  7921  003820                     
  7922                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  7923  003820  0100               	movlb	0	; () banked
  7924  003822  BFBC               	btfsc	(_prec+1)& (0+255),7,b
  7925  003824  EF16  F01C         	goto	u10801
  7926  003828  EF18  F01C         	goto	u10800
  7927  00382C                     u10801:
  7928  00382C  EF19  F01C         	goto	l8495
  7929  003830                     u10800:
  7930  003830                     
  7931                           ; BSR set to: 0
  7932                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  7933  003830  93BD               	bcf	_flags& (0+255),1,b
  7934  003832                     l8495:
  7935                           
  7936                           ; BSR set to: 0
  7937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  7938  003832  BFBC               	btfsc	(_prec+1)& (0+255),7,b
  7939  003834  EF26  F01C         	goto	u10810
  7940  003838  51BC               	movf	(_prec+1)& (0+255),w,b
  7941  00383A  E106               	bnz	u10811
  7942  00383C  05BB               	decf	_prec& (0+255),w,b
  7943  00383E  B0D8               	btfsc	status,0,c
  7944  003840  EF24  F01C         	goto	u10811
  7945  003844  EF26  F01C         	goto	u10810
  7946  003848                     u10811:
  7947  003848  EF2D  F01C         	goto	l722
  7948  00384C                     u10810:
  7949  00384C                     
  7950                           ; BSR set to: 0
  7951  00384C  0E00               	movlw	0
  7952  00384E  0101               	movlb	1	; () banked
  7953  003850  6F09               	movwf	(utoa@p+1)& (0+255),b
  7954  003852  0E01               	movlw	1
  7955  003854  6F08               	movwf	utoa@p& (0+255),b
  7956  003856  EF31  F01C         	goto	l724
  7957  00385A                     l722:
  7958                           
  7959                           ; BSR set to: 0
  7960  00385A  C0BB  F108         	movff	_prec,utoa@p
  7961  00385E  C0BC  F109         	movff	_prec+1,utoa@p+1
  7962  003862                     l724:
  7963                           
  7964                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  7965  003862  C0B9  F10A         	movff	_width,utoa@w
  7966  003866  C0BA  F10B         	movff	_width+1,utoa@w+1
  7967                           
  7968                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  7969  00386A  C0AC  F10C         	movff	utoa@d,utoa@n
  7970  00386E  C0AD  F10D         	movff	utoa@d+1,utoa@n+1
  7971  003872  C0AE  F10E         	movff	utoa@d+2,utoa@n+2
  7972  003876  C0AF  F10F         	movff	utoa@d+3,utoa@n+3
  7973  00387A  C0B0  F110         	movff	utoa@d+4,utoa@n+4
  7974  00387E  C0B1  F111         	movff	utoa@d+5,utoa@n+5
  7975  003882  C0B2  F112         	movff	utoa@d+6,utoa@n+6
  7976  003886  C0B3  F113         	movff	utoa@d+7,utoa@n+7
  7977  00388A                     
  7978                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  7979  00388A  0E00               	movlw	0
  7980  00388C  0101               	movlb	1	; () banked
  7981  00388E  6F15               	movwf	(utoa@i+1)& (0+255),b
  7982  003890  0E1F               	movlw	31
  7983  003892  6F14               	movwf	utoa@i& (0+255),b
  7984  003894                     
  7985                           ; BSR set to: 1
  7986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  7987  003894  0E00               	movlw	0
  7988  003896  6F97               	movwf	(_dbuf+31)& (0+255),b
  7989                           
  7990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7991  003898  EFC8  F01C         	goto	l8513
  7992  00389C                     l8503:
  7993                           
  7994                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  7995  00389C  0101               	movlb	1	; () banked
  7996  00389E  0714               	decf	utoa@i& (0+255),f,b
  7997  0038A0  A0D8               	btfss	status,0,c
  7998  0038A2  0715               	decf	(utoa@i+1)& (0+255),f,b
  7999  0038A4                     
  8000                           ; BSR set to: 1
  8001                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  8002  0038A4  0E78               	movlw	low _dbuf
  8003  0038A6  2514               	addwf	utoa@i& (0+255),w,b
  8004  0038A8  6ED9               	movwf	fsr2l,c
  8005  0038AA  0E01               	movlw	high _dbuf
  8006  0038AC  2115               	addwfc	(utoa@i+1)& (0+255),w,b
  8007  0038AE  6EDA               	movwf	fsr2h,c
  8008  0038B0  C10C  F08D         	movff	utoa@n,___lomod@dividend
  8009  0038B4  C10D  F08E         	movff	utoa@n+1,___lomod@dividend+1
  8010  0038B8  C10E  F08F         	movff	utoa@n+2,___lomod@dividend+2
  8011  0038BC  C10F  F090         	movff	utoa@n+3,___lomod@dividend+3
  8012  0038C0  C110  F091         	movff	utoa@n+4,___lomod@dividend+4
  8013  0038C4  C111  F092         	movff	utoa@n+5,___lomod@dividend+5
  8014  0038C8  C112  F093         	movff	utoa@n+6,___lomod@dividend+6
  8015  0038CC  C113  F094         	movff	utoa@n+7,___lomod@dividend+7
  8016  0038D0  0E0A               	movlw	10
  8017  0038D2  0100               	movlb	0	; () banked
  8018  0038D4  6F95               	movwf	___lomod@divisor& (0+255),b
  8019  0038D6  0E00               	movlw	0
  8020  0038D8  6F96               	movwf	(___lomod@divisor+1)& (0+255),b
  8021  0038DA  0E00               	movlw	0
  8022  0038DC  6F97               	movwf	(___lomod@divisor+2)& (0+255),b
  8023  0038DE  0E00               	movlw	0
  8024  0038E0  6F98               	movwf	(___lomod@divisor+3)& (0+255),b
  8025  0038E2  0E00               	movlw	0
  8026  0038E4  6F99               	movwf	(___lomod@divisor+4)& (0+255),b
  8027  0038E6  0E00               	movlw	0
  8028  0038E8  6F9A               	movwf	(___lomod@divisor+5)& (0+255),b
  8029  0038EA  0E00               	movlw	0
  8030  0038EC  6F9B               	movwf	(___lomod@divisor+6)& (0+255),b
  8031  0038EE  0E00               	movlw	0
  8032  0038F0  6F9C               	movwf	(___lomod@divisor+7)& (0+255),b
  8033  0038F2  ECE0  F02A         	call	___lomod	;wreg free
  8034  0038F6  C08D  F100         	movff	?___lomod,??_utoa
  8035  0038FA  C08E  F101         	movff	?___lomod+1,??_utoa+1
  8036  0038FE  C08F  F102         	movff	?___lomod+2,??_utoa+2
  8037  003902  C090  F103         	movff	?___lomod+3,??_utoa+3
  8038  003906  C091  F104         	movff	?___lomod+4,??_utoa+4
  8039  00390A  C092  F105         	movff	?___lomod+5,??_utoa+5
  8040  00390E  C093  F106         	movff	?___lomod+6,??_utoa+6
  8041  003912  C094  F107         	movff	?___lomod+7,??_utoa+7
  8042  003916  0101               	movlb	1	; () banked
  8043  003918  5100               	movf	??_utoa& (0+255),w,b
  8044  00391A  0F30               	addlw	48
  8045  00391C  6EDF               	movwf	indf2,c
  8046  00391E                     
  8047                           ; BSR set to: 1
  8048                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  8049  00391E  0708               	decf	utoa@p& (0+255),f,b
  8050  003920  A0D8               	btfss	status,0,c
  8051  003922  0709               	decf	(utoa@p+1)& (0+255),f,b
  8052  003924                     
  8053                           ; BSR set to: 1
  8054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  8055  003924  070A               	decf	utoa@w& (0+255),f,b
  8056  003926  A0D8               	btfss	status,0,c
  8057  003928  070B               	decf	(utoa@w+1)& (0+255),f,b
  8058  00392A                     
  8059                           ; BSR set to: 1
  8060                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  8061  00392A  C10C  F08D         	movff	utoa@n,___lodiv@dividend
  8062  00392E  C10D  F08E         	movff	utoa@n+1,___lodiv@dividend+1
  8063  003932  C10E  F08F         	movff	utoa@n+2,___lodiv@dividend+2
  8064  003936  C10F  F090         	movff	utoa@n+3,___lodiv@dividend+3
  8065  00393A  C110  F091         	movff	utoa@n+4,___lodiv@dividend+4
  8066  00393E  C111  F092         	movff	utoa@n+5,___lodiv@dividend+5
  8067  003942  C112  F093         	movff	utoa@n+6,___lodiv@dividend+6
  8068  003946  C113  F094         	movff	utoa@n+7,___lodiv@dividend+7
  8069  00394A  0E0A               	movlw	10
  8070  00394C  0100               	movlb	0	; () banked
  8071  00394E  6F95               	movwf	___lodiv@divisor& (0+255),b
  8072  003950  0E00               	movlw	0
  8073  003952  6F96               	movwf	(___lodiv@divisor+1)& (0+255),b
  8074  003954  0E00               	movlw	0
  8075  003956  6F97               	movwf	(___lodiv@divisor+2)& (0+255),b
  8076  003958  0E00               	movlw	0
  8077  00395A  6F98               	movwf	(___lodiv@divisor+3)& (0+255),b
  8078  00395C  0E00               	movlw	0
  8079  00395E  6F99               	movwf	(___lodiv@divisor+4)& (0+255),b
  8080  003960  0E00               	movlw	0
  8081  003962  6F9A               	movwf	(___lodiv@divisor+5)& (0+255),b
  8082  003964  0E00               	movlw	0
  8083  003966  6F9B               	movwf	(___lodiv@divisor+6)& (0+255),b
  8084  003968  0E00               	movlw	0
  8085  00396A  6F9C               	movwf	(___lodiv@divisor+7)& (0+255),b
  8086  00396C  EC04  F029         	call	___lodiv	;wreg free
  8087  003970  C08D  F10C         	movff	?___lodiv,utoa@n
  8088  003974  C08E  F10D         	movff	?___lodiv+1,utoa@n+1
  8089  003978  C08F  F10E         	movff	?___lodiv+2,utoa@n+2
  8090  00397C  C090  F10F         	movff	?___lodiv+3,utoa@n+3
  8091  003980  C091  F110         	movff	?___lodiv+4,utoa@n+4
  8092  003984  C092  F111         	movff	?___lodiv+5,utoa@n+5
  8093  003988  C093  F112         	movff	?___lodiv+6,utoa@n+6
  8094  00398C  C094  F113         	movff	?___lodiv+7,utoa@n+7
  8095  003990                     l8513:
  8096                           
  8097                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8098  003990  0101               	movlb	1	; () banked
  8099  003992  5114               	movf	utoa@i& (0+255),w,b
  8100  003994  1115               	iorwf	(utoa@i+1)& (0+255),w,b
  8101  003996  B4D8               	btfsc	status,2,c
  8102  003998  EFD0  F01C         	goto	u10821
  8103  00399C  EFD2  F01C         	goto	u10820
  8104  0039A0                     u10821:
  8105  0039A0  EF03  F01D         	goto	l8523
  8106  0039A4                     u10820:
  8107  0039A4                     
  8108                           ; BSR set to: 1
  8109  0039A4  510C               	movf	utoa@n& (0+255),w,b
  8110  0039A6  110D               	iorwf	(utoa@n+1)& (0+255),w,b
  8111  0039A8  110E               	iorwf	(utoa@n+2)& (0+255),w,b
  8112  0039AA  110F               	iorwf	(utoa@n+3)& (0+255),w,b
  8113  0039AC  1110               	iorwf	(utoa@n+4)& (0+255),w,b
  8114  0039AE  1111               	iorwf	(utoa@n+5)& (0+255),w,b
  8115  0039B0  1112               	iorwf	(utoa@n+6)& (0+255),w,b
  8116  0039B2  1113               	iorwf	(utoa@n+7)& (0+255),w,b
  8117  0039B4  A4D8               	btfss	status,2,c
  8118  0039B6  EFDF  F01C         	goto	u10831
  8119  0039BA  EFE1  F01C         	goto	u10830
  8120  0039BE                     u10831:
  8121  0039BE  EF4E  F01C         	goto	l8503
  8122  0039C2                     u10830:
  8123  0039C2                     
  8124                           ; BSR set to: 1
  8125  0039C2  BF09               	btfsc	(utoa@p+1)& (0+255),7,b
  8126  0039C4  EFEE  F01C         	goto	u10840
  8127  0039C8  5109               	movf	(utoa@p+1)& (0+255),w,b
  8128  0039CA  E106               	bnz	u10841
  8129  0039CC  0508               	decf	utoa@p& (0+255),w,b
  8130  0039CE  B0D8               	btfsc	status,0,c
  8131  0039D0  EFEC  F01C         	goto	u10841
  8132  0039D4  EFEE  F01C         	goto	u10840
  8133  0039D8                     u10841:
  8134  0039D8  EF4E  F01C         	goto	l8503
  8135  0039DC                     u10840:
  8136  0039DC                     
  8137                           ; BSR set to: 1
  8138  0039DC  BF0B               	btfsc	(utoa@w+1)& (0+255),7,b
  8139  0039DE  EFF9  F01C         	goto	u10851
  8140  0039E2  510B               	movf	(utoa@w+1)& (0+255),w,b
  8141  0039E4  E108               	bnz	u10850
  8142  0039E6  050A               	decf	utoa@w& (0+255),w,b
  8143  0039E8  A0D8               	btfss	status,0,c
  8144  0039EA  EFF9  F01C         	goto	u10851
  8145  0039EE  EFFB  F01C         	goto	u10850
  8146  0039F2                     u10851:
  8147  0039F2  EF03  F01D         	goto	l8523
  8148  0039F6                     u10850:
  8149  0039F6                     
  8150                           ; BSR set to: 1
  8151  0039F6  0100               	movlb	0	; () banked
  8152  0039F8  B3BD               	btfsc	_flags& (0+255),1,b
  8153  0039FA  EF01  F01D         	goto	u10861
  8154  0039FE  EF03  F01D         	goto	u10860
  8155  003A02                     u10861:
  8156  003A02  EF4E  F01C         	goto	l8503
  8157  003A06                     u10860:
  8158  003A06                     l8523:
  8159                           
  8160                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  8161  003A06  C0AA  F09F         	movff	utoa@fp,pad@fp
  8162  003A0A  C0AB  F0A0         	movff	utoa@fp+1,pad@fp+1
  8163  003A0E  0E78               	movlw	low _dbuf
  8164  003A10  0101               	movlb	1	; () banked
  8165  003A12  2514               	addwf	utoa@i& (0+255),w,b
  8166  003A14  0100               	movlb	0	; () banked
  8167  003A16  6FA1               	movwf	pad@buf& (0+255),b
  8168  003A18  0E01               	movlw	high _dbuf
  8169  003A1A  0101               	movlb	1	; () banked
  8170  003A1C  2115               	addwfc	(utoa@i+1)& (0+255),w,b
  8171  003A1E  0100               	movlb	0	; () banked
  8172  003A20  6FA2               	movwf	(pad@buf+1)& (0+255),b
  8173  003A22  C10A  F0A3         	movff	utoa@w,pad@p
  8174  003A26  C10B  F0A4         	movff	utoa@w+1,pad@p+1
  8175  003A2A  EC17  F02C         	call	_pad	;wreg free
  8176  003A2E  C09F  F0AA         	movff	?_pad,?_utoa
  8177  003A32  C0A0  F0AB         	movff	?_pad+1,?_utoa+1
  8178  003A36  0012               	return		;funcret
  8179  003A38                     __end_of_utoa:
  8180                           	opt callstack 0
  8181                           
  8182 ;; *************** function ___lomod *****************
  8183 ;; Defined at:
  8184 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  8185 ;; Parameters:    Size  Location     Type
  8186 ;;  dividend        8   45[BANK0 ] unsigned long long 
  8187 ;;  divisor         8   53[BANK0 ] unsigned long long 
  8188 ;; Auto vars:     Size  Location     Type
  8189 ;;  counter         1   61[BANK0 ] unsigned char 
  8190 ;; Return value:  Size  Location     Type
  8191 ;;                  8   45[BANK0 ] unsigned long long 
  8192 ;; Registers used:
  8193 ;;		wreg, status,2, status,0
  8194 ;; Tracked objects:
  8195 ;;		On entry : 0/0
  8196 ;;		On exit  : 0/0
  8197 ;;		Unchanged: 0/0
  8198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8199 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8200 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8202 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8203 ;;Total ram usage:       17 bytes
  8204 ;; Hardware stack levels used:    1
  8205 ;; Hardware stack levels required when called:   13
  8206 ;; This function calls:
  8207 ;;		Nothing
  8208 ;; This function is called by:
  8209 ;;		_utoa
  8210 ;; This function uses a non-reentrant model
  8211 ;;
  8212                           
  8213                           	psect	text17
  8214  0055C0                     __ptext17:
  8215                           	opt callstack 0
  8216  0055C0                     ___lomod:
  8217                           	opt callstack 12
  8218  0055C0  0100               	movlb	0	; () banked
  8219  0055C2  5195               	movf	___lomod@divisor& (0+255),w,b
  8220  0055C4  1196               	iorwf	(___lomod@divisor+1)& (0+255),w,b
  8221  0055C6  1197               	iorwf	(___lomod@divisor+2)& (0+255),w,b
  8222  0055C8  1198               	iorwf	(___lomod@divisor+3)& (0+255),w,b
  8223  0055CA  1199               	iorwf	(___lomod@divisor+4)& (0+255),w,b
  8224  0055CC  119A               	iorwf	(___lomod@divisor+5)& (0+255),w,b
  8225  0055CE  119B               	iorwf	(___lomod@divisor+6)& (0+255),w,b
  8226  0055D0  119C               	iorwf	(___lomod@divisor+7)& (0+255),w,b
  8227  0055D2  B4D8               	btfsc	status,2,c
  8228  0055D4  EFEE  F02A         	goto	u9831
  8229  0055D8  EFF0  F02A         	goto	u9830
  8230  0055DC                     u9831:
  8231  0055DC  EF38  F02B         	goto	l1295
  8232  0055E0                     u9830:
  8233  0055E0                     
  8234                           ; BSR set to: 0
  8235  0055E0  0E01               	movlw	1
  8236  0055E2  6F9D               	movwf	___lomod@counter& (0+255),b
  8237  0055E4  EFFE  F02A         	goto	l7929
  8238  0055E8                     l7927:
  8239                           
  8240                           ; BSR set to: 0
  8241  0055E8  90D8               	bcf	status,0,c
  8242  0055EA  3795               	rlcf	___lomod@divisor& (0+255),f,b
  8243  0055EC  3796               	rlcf	(___lomod@divisor+1)& (0+255),f,b
  8244  0055EE  3797               	rlcf	(___lomod@divisor+2)& (0+255),f,b
  8245  0055F0  3798               	rlcf	(___lomod@divisor+3)& (0+255),f,b
  8246  0055F2  3799               	rlcf	(___lomod@divisor+4)& (0+255),f,b
  8247  0055F4  379A               	rlcf	(___lomod@divisor+5)& (0+255),f,b
  8248  0055F6  379B               	rlcf	(___lomod@divisor+6)& (0+255),f,b
  8249  0055F8  379C               	rlcf	(___lomod@divisor+7)& (0+255),f,b
  8250  0055FA  2B9D               	incf	___lomod@counter& (0+255),f,b
  8251  0055FC                     l7929:
  8252                           
  8253                           ; BSR set to: 0
  8254  0055FC  AF9C               	btfss	(___lomod@divisor+7)& (0+255),7,b
  8255  0055FE  EF03  F02B         	goto	u9841
  8256  005602  EF05  F02B         	goto	u9840
  8257  005606                     u9841:
  8258  005606  EFF4  F02A         	goto	l7927
  8259  00560A                     u9840:
  8260  00560A                     l7931:
  8261                           
  8262                           ; BSR set to: 0
  8263  00560A  5195               	movf	___lomod@divisor& (0+255),w,b
  8264  00560C  5D8D               	subwf	___lomod@dividend& (0+255),w,b
  8265  00560E  5196               	movf	(___lomod@divisor+1)& (0+255),w,b
  8266  005610  598E               	subwfb	(___lomod@dividend+1)& (0+255),w,b
  8267  005612  5197               	movf	(___lomod@divisor+2)& (0+255),w,b
  8268  005614  598F               	subwfb	(___lomod@dividend+2)& (0+255),w,b
  8269  005616  5198               	movf	(___lomod@divisor+3)& (0+255),w,b
  8270  005618  5990               	subwfb	(___lomod@dividend+3)& (0+255),w,b
  8271  00561A  5199               	movf	(___lomod@divisor+4)& (0+255),w,b
  8272  00561C  5991               	subwfb	(___lomod@dividend+4)& (0+255),w,b
  8273  00561E  519A               	movf	(___lomod@divisor+5)& (0+255),w,b
  8274  005620  5992               	subwfb	(___lomod@dividend+5)& (0+255),w,b
  8275  005622  519B               	movf	(___lomod@divisor+6)& (0+255),w,b
  8276  005624  5993               	subwfb	(___lomod@dividend+6)& (0+255),w,b
  8277  005626  519C               	movf	(___lomod@divisor+7)& (0+255),w,b
  8278  005628  5994               	subwfb	(___lomod@dividend+7)& (0+255),w,b
  8279  00562A  A0D8               	btfss	status,0,c
  8280  00562C  EF1A  F02B         	goto	u9851
  8281  005630  EF1C  F02B         	goto	u9850
  8282  005634                     u9851:
  8283  005634  EF2C  F02B         	goto	l7935
  8284  005638                     u9850:
  8285  005638                     
  8286                           ; BSR set to: 0
  8287  005638  5195               	movf	___lomod@divisor& (0+255),w,b
  8288  00563A  5F8D               	subwf	___lomod@dividend& (0+255),f,b
  8289  00563C  5196               	movf	(___lomod@divisor+1)& (0+255),w,b
  8290  00563E  5B8E               	subwfb	(___lomod@dividend+1)& (0+255),f,b
  8291  005640  5197               	movf	(___lomod@divisor+2)& (0+255),w,b
  8292  005642  5B8F               	subwfb	(___lomod@dividend+2)& (0+255),f,b
  8293  005644  5198               	movf	(___lomod@divisor+3)& (0+255),w,b
  8294  005646  5B90               	subwfb	(___lomod@dividend+3)& (0+255),f,b
  8295  005648  5199               	movf	(___lomod@divisor+4)& (0+255),w,b
  8296  00564A  5B91               	subwfb	(___lomod@dividend+4)& (0+255),f,b
  8297  00564C  519A               	movf	(___lomod@divisor+5)& (0+255),w,b
  8298  00564E  5B92               	subwfb	(___lomod@dividend+5)& (0+255),f,b
  8299  005650  519B               	movf	(___lomod@divisor+6)& (0+255),w,b
  8300  005652  5B93               	subwfb	(___lomod@dividend+6)& (0+255),f,b
  8301  005654  519C               	movf	(___lomod@divisor+7)& (0+255),w,b
  8302  005656  5B94               	subwfb	(___lomod@dividend+7)& (0+255),f,b
  8303  005658                     l7935:
  8304                           
  8305                           ; BSR set to: 0
  8306  005658  90D8               	bcf	status,0,c
  8307  00565A  339C               	rrcf	(___lomod@divisor+7)& (0+255),f,b
  8308  00565C  339B               	rrcf	(___lomod@divisor+6)& (0+255),f,b
  8309  00565E  339A               	rrcf	(___lomod@divisor+5)& (0+255),f,b
  8310  005660  3399               	rrcf	(___lomod@divisor+4)& (0+255),f,b
  8311  005662  3398               	rrcf	(___lomod@divisor+3)& (0+255),f,b
  8312  005664  3397               	rrcf	(___lomod@divisor+2)& (0+255),f,b
  8313  005666  3396               	rrcf	(___lomod@divisor+1)& (0+255),f,b
  8314  005668  3395               	rrcf	___lomod@divisor& (0+255),f,b
  8315  00566A                     
  8316                           ; BSR set to: 0
  8317  00566A  2F9D               	decfsz	___lomod@counter& (0+255),f,b
  8318  00566C  EF05  F02B         	goto	l7931
  8319  005670                     l1295:
  8320                           
  8321                           ; BSR set to: 0
  8322  005670  C08D  F08D         	movff	___lomod@dividend,?___lomod
  8323  005674  C08E  F08E         	movff	___lomod@dividend+1,?___lomod+1
  8324  005678  C08F  F08F         	movff	___lomod@dividend+2,?___lomod+2
  8325  00567C  C090  F090         	movff	___lomod@dividend+3,?___lomod+3
  8326  005680  C091  F091         	movff	___lomod@dividend+4,?___lomod+4
  8327  005684  C092  F092         	movff	___lomod@dividend+5,?___lomod+5
  8328  005688  C093  F093         	movff	___lomod@dividend+6,?___lomod+6
  8329  00568C  C094  F094         	movff	___lomod@dividend+7,?___lomod+7
  8330  005690                     
  8331                           ; BSR set to: 0
  8332  005690  0012               	return		;funcret
  8333  005692                     __end_of___lomod:
  8334                           	opt callstack 0
  8335                           
  8336 ;; *************** function ___lodiv *****************
  8337 ;; Defined at:
  8338 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  8339 ;; Parameters:    Size  Location     Type
  8340 ;;  dividend        8   45[BANK0 ] unsigned long long 
  8341 ;;  divisor         8   53[BANK0 ] unsigned long long 
  8342 ;; Auto vars:     Size  Location     Type
  8343 ;;  quotient        8   61[BANK0 ] unsigned long long 
  8344 ;;  counter         1   69[BANK0 ] unsigned char 
  8345 ;; Return value:  Size  Location     Type
  8346 ;;                  8   45[BANK0 ] unsigned long long 
  8347 ;; Registers used:
  8348 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8349 ;; Tracked objects:
  8350 ;;		On entry : 0/0
  8351 ;;		On exit  : 0/0
  8352 ;;		Unchanged: 0/0
  8353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8354 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8355 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8357 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8358 ;;Total ram usage:       25 bytes
  8359 ;; Hardware stack levels used:    1
  8360 ;; Hardware stack levels required when called:   13
  8361 ;; This function calls:
  8362 ;;		Nothing
  8363 ;; This function is called by:
  8364 ;;		_utoa
  8365 ;; This function uses a non-reentrant model
  8366 ;;
  8367                           
  8368                           	psect	text18
  8369  005208                     __ptext18:
  8370                           	opt callstack 0
  8371  005208                     ___lodiv:
  8372                           	opt callstack 12
  8373  005208  EE20  F09D         	lfsr	2,___lodiv@quotient
  8374  00520C  0E07               	movlw	7
  8375  00520E                     u9791:
  8376  00520E  6ADE               	clrf	postinc2,c
  8377  005210  06E8               	decf	wreg,f,c
  8378  005212  E2FD               	bc	u9791
  8379  005214  0100               	movlb	0	; () banked
  8380  005216  5195               	movf	___lodiv@divisor& (0+255),w,b
  8381  005218  1196               	iorwf	(___lodiv@divisor+1)& (0+255),w,b
  8382  00521A  1197               	iorwf	(___lodiv@divisor+2)& (0+255),w,b
  8383  00521C  1198               	iorwf	(___lodiv@divisor+3)& (0+255),w,b
  8384  00521E  1199               	iorwf	(___lodiv@divisor+4)& (0+255),w,b
  8385  005220  119A               	iorwf	(___lodiv@divisor+5)& (0+255),w,b
  8386  005222  119B               	iorwf	(___lodiv@divisor+6)& (0+255),w,b
  8387  005224  119C               	iorwf	(___lodiv@divisor+7)& (0+255),w,b
  8388  005226  B4D8               	btfsc	status,2,c
  8389  005228  EF18  F029         	goto	u9801
  8390  00522C  EF1A  F029         	goto	u9800
  8391  005230                     u9801:
  8392  005230  EF6C  F029         	goto	l1285
  8393  005234                     u9800:
  8394  005234                     
  8395                           ; BSR set to: 0
  8396  005234  0E01               	movlw	1
  8397  005236  6FA5               	movwf	___lodiv@counter& (0+255),b
  8398  005238  EF28  F029         	goto	l7909
  8399  00523C                     l7907:
  8400                           
  8401                           ; BSR set to: 0
  8402  00523C  90D8               	bcf	status,0,c
  8403  00523E  3795               	rlcf	___lodiv@divisor& (0+255),f,b
  8404  005240  3796               	rlcf	(___lodiv@divisor+1)& (0+255),f,b
  8405  005242  3797               	rlcf	(___lodiv@divisor+2)& (0+255),f,b
  8406  005244  3798               	rlcf	(___lodiv@divisor+3)& (0+255),f,b
  8407  005246  3799               	rlcf	(___lodiv@divisor+4)& (0+255),f,b
  8408  005248  379A               	rlcf	(___lodiv@divisor+5)& (0+255),f,b
  8409  00524A  379B               	rlcf	(___lodiv@divisor+6)& (0+255),f,b
  8410  00524C  379C               	rlcf	(___lodiv@divisor+7)& (0+255),f,b
  8411  00524E  2BA5               	incf	___lodiv@counter& (0+255),f,b
  8412  005250                     l7909:
  8413                           
  8414                           ; BSR set to: 0
  8415  005250  AF9C               	btfss	(___lodiv@divisor+7)& (0+255),7,b
  8416  005252  EF2D  F029         	goto	u9811
  8417  005256  EF2F  F029         	goto	u9810
  8418  00525A                     u9811:
  8419  00525A  EF1E  F029         	goto	l7907
  8420  00525E                     u9810:
  8421  00525E                     l7911:
  8422                           
  8423                           ; BSR set to: 0
  8424  00525E  90D8               	bcf	status,0,c
  8425  005260  379D               	rlcf	___lodiv@quotient& (0+255),f,b
  8426  005262  379E               	rlcf	(___lodiv@quotient+1)& (0+255),f,b
  8427  005264  379F               	rlcf	(___lodiv@quotient+2)& (0+255),f,b
  8428  005266  37A0               	rlcf	(___lodiv@quotient+3)& (0+255),f,b
  8429  005268  37A1               	rlcf	(___lodiv@quotient+4)& (0+255),f,b
  8430  00526A  37A2               	rlcf	(___lodiv@quotient+5)& (0+255),f,b
  8431  00526C  37A3               	rlcf	(___lodiv@quotient+6)& (0+255),f,b
  8432  00526E  37A4               	rlcf	(___lodiv@quotient+7)& (0+255),f,b
  8433  005270                     
  8434                           ; BSR set to: 0
  8435  005270  5195               	movf	___lodiv@divisor& (0+255),w,b
  8436  005272  5D8D               	subwf	___lodiv@dividend& (0+255),w,b
  8437  005274  5196               	movf	(___lodiv@divisor+1)& (0+255),w,b
  8438  005276  598E               	subwfb	(___lodiv@dividend+1)& (0+255),w,b
  8439  005278  5197               	movf	(___lodiv@divisor+2)& (0+255),w,b
  8440  00527A  598F               	subwfb	(___lodiv@dividend+2)& (0+255),w,b
  8441  00527C  5198               	movf	(___lodiv@divisor+3)& (0+255),w,b
  8442  00527E  5990               	subwfb	(___lodiv@dividend+3)& (0+255),w,b
  8443  005280  5199               	movf	(___lodiv@divisor+4)& (0+255),w,b
  8444  005282  5991               	subwfb	(___lodiv@dividend+4)& (0+255),w,b
  8445  005284  519A               	movf	(___lodiv@divisor+5)& (0+255),w,b
  8446  005286  5992               	subwfb	(___lodiv@dividend+5)& (0+255),w,b
  8447  005288  519B               	movf	(___lodiv@divisor+6)& (0+255),w,b
  8448  00528A  5993               	subwfb	(___lodiv@dividend+6)& (0+255),w,b
  8449  00528C  519C               	movf	(___lodiv@divisor+7)& (0+255),w,b
  8450  00528E  5994               	subwfb	(___lodiv@dividend+7)& (0+255),w,b
  8451  005290  A0D8               	btfss	status,0,c
  8452  005292  EF4D  F029         	goto	u9821
  8453  005296  EF4F  F029         	goto	u9820
  8454  00529A                     u9821:
  8455  00529A  EF60  F029         	goto	l7919
  8456  00529E                     u9820:
  8457  00529E                     
  8458                           ; BSR set to: 0
  8459  00529E  5195               	movf	___lodiv@divisor& (0+255),w,b
  8460  0052A0  5F8D               	subwf	___lodiv@dividend& (0+255),f,b
  8461  0052A2  5196               	movf	(___lodiv@divisor+1)& (0+255),w,b
  8462  0052A4  5B8E               	subwfb	(___lodiv@dividend+1)& (0+255),f,b
  8463  0052A6  5197               	movf	(___lodiv@divisor+2)& (0+255),w,b
  8464  0052A8  5B8F               	subwfb	(___lodiv@dividend+2)& (0+255),f,b
  8465  0052AA  5198               	movf	(___lodiv@divisor+3)& (0+255),w,b
  8466  0052AC  5B90               	subwfb	(___lodiv@dividend+3)& (0+255),f,b
  8467  0052AE  5199               	movf	(___lodiv@divisor+4)& (0+255),w,b
  8468  0052B0  5B91               	subwfb	(___lodiv@dividend+4)& (0+255),f,b
  8469  0052B2  519A               	movf	(___lodiv@divisor+5)& (0+255),w,b
  8470  0052B4  5B92               	subwfb	(___lodiv@dividend+5)& (0+255),f,b
  8471  0052B6  519B               	movf	(___lodiv@divisor+6)& (0+255),w,b
  8472  0052B8  5B93               	subwfb	(___lodiv@dividend+6)& (0+255),f,b
  8473  0052BA  519C               	movf	(___lodiv@divisor+7)& (0+255),w,b
  8474  0052BC  5B94               	subwfb	(___lodiv@dividend+7)& (0+255),f,b
  8475  0052BE                     
  8476                           ; BSR set to: 0
  8477  0052BE  819D               	bsf	___lodiv@quotient& (0+255),0,b
  8478  0052C0                     l7919:
  8479                           
  8480                           ; BSR set to: 0
  8481  0052C0  90D8               	bcf	status,0,c
  8482  0052C2  339C               	rrcf	(___lodiv@divisor+7)& (0+255),f,b
  8483  0052C4  339B               	rrcf	(___lodiv@divisor+6)& (0+255),f,b
  8484  0052C6  339A               	rrcf	(___lodiv@divisor+5)& (0+255),f,b
  8485  0052C8  3399               	rrcf	(___lodiv@divisor+4)& (0+255),f,b
  8486  0052CA  3398               	rrcf	(___lodiv@divisor+3)& (0+255),f,b
  8487  0052CC  3397               	rrcf	(___lodiv@divisor+2)& (0+255),f,b
  8488  0052CE  3396               	rrcf	(___lodiv@divisor+1)& (0+255),f,b
  8489  0052D0  3395               	rrcf	___lodiv@divisor& (0+255),f,b
  8490  0052D2                     
  8491                           ; BSR set to: 0
  8492  0052D2  2FA5               	decfsz	___lodiv@counter& (0+255),f,b
  8493  0052D4  EF2F  F029         	goto	l7911
  8494  0052D8                     l1285:
  8495                           
  8496                           ; BSR set to: 0
  8497  0052D8  C09D  F08D         	movff	___lodiv@quotient,?___lodiv
  8498  0052DC  C09E  F08E         	movff	___lodiv@quotient+1,?___lodiv+1
  8499  0052E0  C09F  F08F         	movff	___lodiv@quotient+2,?___lodiv+2
  8500  0052E4  C0A0  F090         	movff	___lodiv@quotient+3,?___lodiv+3
  8501  0052E8  C0A1  F091         	movff	___lodiv@quotient+4,?___lodiv+4
  8502  0052EC  C0A2  F092         	movff	___lodiv@quotient+5,?___lodiv+5
  8503  0052F0  C0A3  F093         	movff	___lodiv@quotient+6,?___lodiv+6
  8504  0052F4  C0A4  F094         	movff	___lodiv@quotient+7,?___lodiv+7
  8505  0052F8                     
  8506                           ; BSR set to: 0
  8507  0052F8  0012               	return		;funcret
  8508  0052FA                     __end_of___lodiv:
  8509                           	opt callstack 0
  8510                           
  8511 ;; *************** function _strncmp *****************
  8512 ;; Defined at:
  8513 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  8514 ;; Parameters:    Size  Location     Type
  8515 ;;  _l              2   45[BANK0 ] PTR const unsigned char 
  8516 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
  8517 ;;		 -> STR_4(22), STR_3(12), STR_1(13), 
  8518 ;;  _r              2   47[BANK0 ] PTR const unsigned char 
  8519 ;;		 -> STR_105(3), STR_101(3), STR_96(3), STR_92(3), 
  8520 ;;		 -> STR_87(4), STR_83(4), STR_78(3), STR_73(3), 
  8521 ;;		 -> STR_68(4), STR_63(3), STR_58(3), STR_53(4), 
  8522 ;;		 -> STR_48(3), STR_43(3), STR_38(4), STR_33(3), 
  8523 ;;		 -> STR_29(3), STR_24(3), STR_20(3), STR_15(4), 
  8524 ;;		 -> STR_11(4), 
  8525 ;;  n               2   49[BANK0 ] unsigned int 
  8526 ;; Auto vars:     Size  Location     Type
  8527 ;;  r               2   54[BANK0 ] PTR const unsigned char 
  8528 ;;		 -> STR_105(3), STR_101(3), STR_96(3), STR_92(3), 
  8529 ;;		 -> STR_87(4), STR_83(4), STR_78(3), STR_73(3), 
  8530 ;;		 -> STR_68(4), STR_63(3), STR_58(3), STR_53(4), 
  8531 ;;		 -> STR_48(3), STR_43(3), STR_38(4), STR_33(3), 
  8532 ;;		 -> STR_29(3), STR_24(3), STR_20(3), STR_15(4), 
  8533 ;;		 -> STR_11(4), 
  8534 ;;  l               2   52[BANK0 ] PTR const unsigned char 
  8535 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
  8536 ;;		 -> STR_4(22), STR_3(12), STR_1(13), 
  8537 ;; Return value:  Size  Location     Type
  8538 ;;                  2   45[BANK0 ] int 
  8539 ;; Registers used:
  8540 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  8541 ;; Tracked objects:
  8542 ;;		On entry : 0/0
  8543 ;;		On exit  : 0/0
  8544 ;;		Unchanged: 0/0
  8545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8546 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8547 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8548 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8549 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8550 ;;Total ram usage:       11 bytes
  8551 ;; Hardware stack levels used:    1
  8552 ;; Hardware stack levels required when called:   13
  8553 ;; This function calls:
  8554 ;;		Nothing
  8555 ;; This function is called by:
  8556 ;;		_vfpfcnvrt
  8557 ;; This function uses a non-reentrant model
  8558 ;;
  8559                           
  8560                           	psect	text19
  8561  0053EA                     __ptext19:
  8562                           	opt callstack 0
  8563  0053EA                     _strncmp:
  8564                           	opt callstack 13
  8565  0053EA  C08D  F094         	movff	strncmp@_l,strncmp@l
  8566  0053EE  C08E  F095         	movff	strncmp@_l+1,strncmp@l+1
  8567  0053F2  C08F  F096         	movff	strncmp@_r,strncmp@r
  8568  0053F6  C090  F097         	movff	strncmp@_r+1,strncmp@r+1
  8569  0053FA  0100               	movlb	0	; () banked
  8570  0053FC  0791               	decf	strncmp@n& (0+255),f,b
  8571  0053FE  A0D8               	btfss	status,0,c
  8572  005400  0792               	decf	(strncmp@n+1)& (0+255),f,b
  8573  005402  2991               	incf	strncmp@n& (0+255),w,b
  8574  005404  E106               	bnz	u11041
  8575  005406  2992               	incf	(strncmp@n+1)& (0+255),w,b
  8576  005408  A4D8               	btfss	status,2,c
  8577  00540A  EF09  F02A         	goto	u11041
  8578  00540E  EF0B  F02A         	goto	u11040
  8579  005412                     u11041:
  8580  005412  EF18  F02A         	goto	l8601
  8581  005416                     u11040:
  8582  005416                     
  8583                           ; BSR set to: 0
  8584  005416  0E00               	movlw	0
  8585  005418  6F8E               	movwf	(?_strncmp+1)& (0+255),b
  8586  00541A  0E00               	movlw	0
  8587  00541C  6F8D               	movwf	?_strncmp& (0+255),b
  8588  00541E  EF6A  F02A         	goto	l1626
  8589  005422                     l8599:
  8590                           
  8591                           ; BSR set to: 0
  8592  005422  4B94               	infsnz	strncmp@l& (0+255),f,b
  8593  005424  2B95               	incf	(strncmp@l+1)& (0+255),f,b
  8594  005426  4B96               	infsnz	strncmp@r& (0+255),f,b
  8595  005428  2B97               	incf	(strncmp@r+1)& (0+255),f,b
  8596  00542A  0791               	decf	strncmp@n& (0+255),f,b
  8597  00542C  A0D8               	btfss	status,0,c
  8598  00542E  0792               	decf	(strncmp@n+1)& (0+255),f,b
  8599  005430                     l8601:
  8600                           
  8601                           ; BSR set to: 0
  8602  005430  C094  FFF6         	movff	strncmp@l,tblptrl
  8603  005434  C095  FFF7         	movff	strncmp@l+1,tblptrh
  8604  005438                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8605  005438  6AF8               	clrf	tblptru,c
  8606  00543A                     	endif
  8607  00543A                     	if	0	;tblptru may be non-zero
  8608  00543A                     	endif
  8609  00543A  0008               	tblrd		*
  8610  00543C  50F5               	movf	tablat,w,c
  8611  00543E  0900               	iorlw	0
  8612  005440  B4D8               	btfsc	status,2,c
  8613  005442  EF25  F02A         	goto	u11051
  8614  005446  EF27  F02A         	goto	u11050
  8615  00544A                     u11051:
  8616  00544A  EF56  F02A         	goto	l8609
  8617  00544E                     u11050:
  8618  00544E                     
  8619                           ; BSR set to: 0
  8620  00544E  C096  FFF6         	movff	strncmp@r,tblptrl
  8621  005452  C097  FFF7         	movff	strncmp@r+1,tblptrh
  8622  005456                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8623  005456  6AF8               	clrf	tblptru,c
  8624  005458                     	endif
  8625  005458                     	if	0	;tblptru may be non-zero
  8626  005458                     	endif
  8627  005458  0008               	tblrd		*
  8628  00545A  50F5               	movf	tablat,w,c
  8629  00545C  0900               	iorlw	0
  8630  00545E  B4D8               	btfsc	status,2,c
  8631  005460  EF34  F02A         	goto	u11061
  8632  005464  EF36  F02A         	goto	u11060
  8633  005468                     u11061:
  8634  005468  EF56  F02A         	goto	l8609
  8635  00546C                     u11060:
  8636  00546C                     
  8637                           ; BSR set to: 0
  8638  00546C  5191               	movf	strncmp@n& (0+255),w,b
  8639  00546E  1192               	iorwf	(strncmp@n+1)& (0+255),w,b
  8640  005470  B4D8               	btfsc	status,2,c
  8641  005472  EF3D  F02A         	goto	u11071
  8642  005476  EF3F  F02A         	goto	u11070
  8643  00547A                     u11071:
  8644  00547A  EF56  F02A         	goto	l8609
  8645  00547E                     u11070:
  8646  00547E                     
  8647                           ; BSR set to: 0
  8648  00547E  C094  FFF6         	movff	strncmp@l,tblptrl
  8649  005482  C095  FFF7         	movff	strncmp@l+1,tblptrh
  8650  005486                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8651  005486  6AF8               	clrf	tblptru,c
  8652  005488                     	endif
  8653  005488                     	if	0	;tblptru may be non-zero
  8654  005488                     	endif
  8655  005488  0008               	tblrd		*
  8656  00548A  CFF5 F093          	movff	tablat,??_strncmp
  8657  00548E  C096  FFF6         	movff	strncmp@r,tblptrl
  8658  005492  C097  FFF7         	movff	strncmp@r+1,tblptrh
  8659  005496                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8660  005496  6AF8               	clrf	tblptru,c
  8661  005498                     	endif
  8662  005498                     	if	0	;tblptru may be non-zero
  8663  005498                     	endif
  8664  005498  0008               	tblrd		*
  8665  00549A  50F5               	movf	tablat,w,c
  8666  00549C  1993               	xorwf	??_strncmp& (0+255),w,b
  8667  00549E  B4D8               	btfsc	status,2,c
  8668  0054A0  EF54  F02A         	goto	u11081
  8669  0054A4  EF56  F02A         	goto	u11080
  8670  0054A8                     u11081:
  8671  0054A8  EF11  F02A         	goto	l8599
  8672  0054AC                     u11080:
  8673  0054AC                     l8609:
  8674                           
  8675                           ; BSR set to: 0
  8676  0054AC  C094  FFF6         	movff	strncmp@l,tblptrl
  8677  0054B0  C095  FFF7         	movff	strncmp@l+1,tblptrh
  8678  0054B4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8679  0054B4  6AF8               	clrf	tblptru,c
  8680  0054B6                     	endif
  8681  0054B6                     	if	0	;tblptru may be non-zero
  8682  0054B6                     	endif
  8683  0054B6  0008               	tblrd		*
  8684  0054B8  CFF5 F093          	movff	tablat,??_strncmp
  8685  0054BC  C096  FFF6         	movff	strncmp@r,tblptrl
  8686  0054C0  C097  FFF7         	movff	strncmp@r+1,tblptrh
  8687  0054C4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8688  0054C4  6AF8               	clrf	tblptru,c
  8689  0054C6                     	endif
  8690  0054C6                     	if	0	;tblptru may be non-zero
  8691  0054C6                     	endif
  8692  0054C6  0008               	tblrd		*
  8693  0054C8  50F5               	movf	tablat,w,c
  8694  0054CA  5D93               	subwf	??_strncmp& (0+255),w,b
  8695  0054CC  6F8D               	movwf	?_strncmp& (0+255),b
  8696  0054CE  6B8E               	clrf	(?_strncmp+1)& (0+255),b
  8697  0054D0  A0D8               	btfss	status,0,c
  8698  0054D2  078E               	decf	(?_strncmp+1)& (0+255),f,b
  8699  0054D4                     l1626:
  8700                           
  8701                           ; BSR set to: 0
  8702  0054D4  0012               	return		;funcret
  8703  0054D6                     __end_of_strncmp:
  8704                           	opt callstack 0
  8705                           
  8706 ;; *************** function _stoa *****************
  8707 ;; Defined at:
  8708 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8709 ;; Parameters:    Size  Location     Type
  8710 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  8711 ;;		 -> vsnprintf@f(6), NULL(0), 
  8712 ;;  s               2   58[BANK0 ] PTR unsigned char 
  8713 ;;		 -> ?_snprintf(2), ?_printf(2), 
  8714 ;; Auto vars:     Size  Location     Type
  8715 ;;  nuls            7   61[BANK0 ] unsigned char [7]
  8716 ;;  l               2   76[BANK0 ] int 
  8717 ;;  p               2   74[BANK0 ] int 
  8718 ;;  cp              2   72[BANK0 ] PTR unsigned char 
  8719 ;;		 -> ?_snprintf(2), ?_printf(2), stoa@nuls(7), 
  8720 ;;  w               2   70[BANK0 ] int 
  8721 ;;  i               2   68[BANK0 ] int 
  8722 ;; Return value:  Size  Location     Type
  8723 ;;                  2   56[BANK0 ] int 
  8724 ;; Registers used:
  8725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8726 ;; Tracked objects:
  8727 ;;		On entry : 0/0
  8728 ;;		On exit  : 0/0
  8729 ;;		Unchanged: 0/0
  8730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8731 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8732 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8733 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8734 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8735 ;;Total ram usage:       22 bytes
  8736 ;; Hardware stack levels used:    1
  8737 ;; Hardware stack levels required when called:   16
  8738 ;; This function calls:
  8739 ;;		_fputc
  8740 ;;		_strlen
  8741 ;; This function is called by:
  8742 ;;		_vfpfcnvrt
  8743 ;; This function uses a non-reentrant model
  8744 ;;
  8745                           
  8746                           	psect	text20
  8747  00443C                     __ptext20:
  8748                           	opt callstack 0
  8749  00443C                     _stoa:
  8750                           	opt callstack 10
  8751  00443C                     
  8752                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8753  00443C  EE20  F0CC         	lfsr	2,stoa@F1152
  8754  004440  EE10  F09D         	lfsr	1,stoa@nuls
  8755  004444  0E06               	movlw	6
  8756  004446                     u10711:
  8757  004446  CFDB FFE3          	movff	plusw2,plusw1
  8758  00444A  06E8               	decf	wreg,f,c
  8759  00444C  E2FC               	bc	u10711
  8760  00444E                     
  8761                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  8762  00444E  C09A  F0A8         	movff	stoa@s,stoa@cp
  8763  004452  C09B  F0A9         	movff	stoa@s+1,stoa@cp+1
  8764  004456                     
  8765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  8766  004456  0100               	movlb	0	; () banked
  8767  004458  51A8               	movf	stoa@cp& (0+255),w,b
  8768  00445A  11A9               	iorwf	(stoa@cp+1)& (0+255),w,b
  8769  00445C  A4D8               	btfss	status,2,c
  8770  00445E  EF33  F022         	goto	u10721
  8771  004462  EF35  F022         	goto	u10720
  8772  004466                     u10721:
  8773  004466  EF39  F022         	goto	l8457
  8774  00446A                     u10720:
  8775  00446A                     
  8776                           ; BSR set to: 0
  8777                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  8778  00446A  0E9D               	movlw	low stoa@nuls
  8779  00446C  6FA8               	movwf	stoa@cp& (0+255),b
  8780  00446E  0E00               	movlw	high stoa@nuls
  8781  004470  6FA9               	movwf	(stoa@cp+1)& (0+255),b
  8782  004472                     l8457:
  8783                           
  8784                           ; BSR set to: 0
  8785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  8786  004472  C0A8  F08D         	movff	stoa@cp,strlen@s
  8787  004476  C0A9  F08E         	movff	stoa@cp+1,strlen@s+1
  8788  00447A  EC17  F032         	call	_strlen	;wreg free
  8789  00447E  C08D  F0AC         	movff	?_strlen,stoa@l
  8790  004482  C08E  F0AD         	movff	?_strlen+1,stoa@l+1
  8791  004486                     
  8792                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8793  004486  C0BB  F0AA         	movff	_prec,stoa@p
  8794  00448A  C0BC  F0AB         	movff	_prec+1,stoa@p+1
  8795  00448E                     
  8796                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8797  00448E  0100               	movlb	0	; () banked
  8798  004490  BFAB               	btfsc	(stoa@p+1)& (0+255),7,b
  8799  004492  EF4D  F022         	goto	u10731
  8800  004496  EF4F  F022         	goto	u10730
  8801  00449A                     u10731:
  8802  00449A  EF64  F022         	goto	l703
  8803  00449E                     u10730:
  8804  00449E                     
  8805                           ; BSR set to: 0
  8806  00449E  51AC               	movf	stoa@l& (0+255),w,b
  8807  0044A0  5DAA               	subwf	stoa@p& (0+255),w,b
  8808  0044A2  51AB               	movf	(stoa@p+1)& (0+255),w,b
  8809  0044A4  0A80               	xorlw	128
  8810  0044A6  6F9C               	movwf	??_stoa& (0+255),b
  8811  0044A8  51AD               	movf	(stoa@l+1)& (0+255),w,b
  8812  0044AA  0A80               	xorlw	128
  8813  0044AC  599C               	subwfb	??_stoa& (0+255),w,b
  8814  0044AE  A0D8               	btfss	status,0,c
  8815  0044B0  EF5C  F022         	goto	u10741
  8816  0044B4  EF5E  F022         	goto	u10740
  8817  0044B8                     u10741:
  8818  0044B8  EF60  F022         	goto	l701
  8819  0044BC                     u10740:
  8820  0044BC  EF64  F022         	goto	l703
  8821  0044C0                     l701:
  8822                           
  8823                           ; BSR set to: 0
  8824  0044C0  C0AA  F0AC         	movff	stoa@p,stoa@l
  8825  0044C4  C0AB  F0AD         	movff	stoa@p+1,stoa@l+1
  8826  0044C8                     l703:
  8827                           
  8828                           ; BSR set to: 0
  8829                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8830  0044C8  C0AC  F0AA         	movff	stoa@l,stoa@p
  8831  0044CC  C0AD  F0AB         	movff	stoa@l+1,stoa@p+1
  8832                           
  8833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8834  0044D0  C0B9  F0A6         	movff	_width,stoa@w
  8835  0044D4  C0BA  F0A7         	movff	_width+1,stoa@w+1
  8836                           
  8837                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8838  0044D8  B1BD               	btfsc	_flags& (0+255),0,b
  8839  0044DA  EF71  F022         	goto	u10751
  8840  0044DE  EF73  F022         	goto	u10750
  8841  0044E2                     u10751:
  8842  0044E2  EF91  F022         	goto	l8473
  8843  0044E6                     u10750:
  8844  0044E6  EF82  F022         	goto	l8471
  8845  0044EA                     l8467:
  8846                           
  8847                           ; BSR set to: 0
  8848                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8849  0044EA  0E00               	movlw	0
  8850  0044EC  6F90               	movwf	(fputc@c+1)& (0+255),b
  8851  0044EE  0E20               	movlw	32
  8852  0044F0  6F8F               	movwf	fputc@c& (0+255),b
  8853  0044F2  C098  F091         	movff	stoa@fp,fputc@fp
  8854  0044F6  C099  F092         	movff	stoa@fp+1,fputc@fp+1
  8855  0044FA  ECB1  F02B         	call	_fputc	;wreg free
  8856  0044FE                     
  8857                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8858  0044FE  0100               	movlb	0	; () banked
  8859  004500  4BAC               	infsnz	stoa@l& (0+255),f,b
  8860  004502  2BAD               	incf	(stoa@l+1)& (0+255),f,b
  8861  004504                     l8471:
  8862                           
  8863                           ; BSR set to: 0
  8864                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8865  004504  51A6               	movf	stoa@w& (0+255),w,b
  8866  004506  5DAC               	subwf	stoa@l& (0+255),w,b
  8867  004508  51AD               	movf	(stoa@l+1)& (0+255),w,b
  8868  00450A  0A80               	xorlw	128
  8869  00450C  6F9C               	movwf	??_stoa& (0+255),b
  8870  00450E  51A7               	movf	(stoa@w+1)& (0+255),w,b
  8871  004510  0A80               	xorlw	128
  8872  004512  599C               	subwfb	??_stoa& (0+255),w,b
  8873  004514  A0D8               	btfss	status,0,c
  8874  004516  EF8F  F022         	goto	u10761
  8875  00451A  EF91  F022         	goto	u10760
  8876  00451E                     u10761:
  8877  00451E  EF75  F022         	goto	l8467
  8878  004522                     u10760:
  8879  004522                     l8473:
  8880                           
  8881                           ; BSR set to: 0
  8882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  8883  004522  0E00               	movlw	0
  8884  004524  6FA5               	movwf	(stoa@i+1)& (0+255),b
  8885  004526  0E00               	movlw	0
  8886  004528  6FA4               	movwf	stoa@i& (0+255),b
  8887                           
  8888                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8889  00452A  EFAB  F022         	goto	l8481
  8890  00452E                     l8475:
  8891                           
  8892                           ; BSR set to: 0
  8893                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  8894  00452E  C0A8  FFD9         	movff	stoa@cp,fsr2l
  8895  004532  C0A9  FFDA         	movff	stoa@cp+1,fsr2h
  8896  004536  50DF               	movf	indf2,w,c
  8897  004538  6F9C               	movwf	??_stoa& (0+255),b
  8898  00453A  519C               	movf	??_stoa& (0+255),w,b
  8899  00453C  6F8F               	movwf	fputc@c& (0+255),b
  8900  00453E  6B90               	clrf	(fputc@c+1)& (0+255),b
  8901  004540  C098  F091         	movff	stoa@fp,fputc@fp
  8902  004544  C099  F092         	movff	stoa@fp+1,fputc@fp+1
  8903  004548  ECB1  F02B         	call	_fputc	;wreg free
  8904  00454C                     
  8905                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  8906  00454C  0100               	movlb	0	; () banked
  8907  00454E  4BA8               	infsnz	stoa@cp& (0+255),f,b
  8908  004550  2BA9               	incf	(stoa@cp+1)& (0+255),f,b
  8909  004552                     
  8910                           ; BSR set to: 0
  8911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  8912  004552  4BA4               	infsnz	stoa@i& (0+255),f,b
  8913  004554  2BA5               	incf	(stoa@i+1)& (0+255),f,b
  8914  004556                     l8481:
  8915                           
  8916                           ; BSR set to: 0
  8917                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8918  004556  51AA               	movf	stoa@p& (0+255),w,b
  8919  004558  5DA4               	subwf	stoa@i& (0+255),w,b
  8920  00455A  51A5               	movf	(stoa@i+1)& (0+255),w,b
  8921  00455C  0A80               	xorlw	128
  8922  00455E  6F9C               	movwf	??_stoa& (0+255),b
  8923  004560  51AB               	movf	(stoa@p+1)& (0+255),w,b
  8924  004562  0A80               	xorlw	128
  8925  004564  599C               	subwfb	??_stoa& (0+255),w,b
  8926  004566  A0D8               	btfss	status,0,c
  8927  004568  EFB8  F022         	goto	u10771
  8928  00456C  EFBA  F022         	goto	u10770
  8929  004570                     u10771:
  8930  004570  EF97  F022         	goto	l8475
  8931  004574                     u10770:
  8932  004574                     
  8933                           ; BSR set to: 0
  8934                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  8935  004574  A1BD               	btfss	_flags& (0+255),0,b
  8936  004576  EFBF  F022         	goto	u10781
  8937  00457A  EFC1  F022         	goto	u10780
  8938  00457E                     u10781:
  8939  00457E  EFDF  F022         	goto	l713
  8940  004582                     u10780:
  8941  004582  EFD0  F022         	goto	l8489
  8942  004586                     l8485:
  8943                           
  8944                           ; BSR set to: 0
  8945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  8946  004586  0E00               	movlw	0
  8947  004588  6F90               	movwf	(fputc@c+1)& (0+255),b
  8948  00458A  0E20               	movlw	32
  8949  00458C  6F8F               	movwf	fputc@c& (0+255),b
  8950  00458E  C098  F091         	movff	stoa@fp,fputc@fp
  8951  004592  C099  F092         	movff	stoa@fp+1,fputc@fp+1
  8952  004596  ECB1  F02B         	call	_fputc	;wreg free
  8953  00459A                     
  8954                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  8955  00459A  0100               	movlb	0	; () banked
  8956  00459C  4BAC               	infsnz	stoa@l& (0+255),f,b
  8957  00459E  2BAD               	incf	(stoa@l+1)& (0+255),f,b
  8958  0045A0                     l8489:
  8959                           
  8960                           ; BSR set to: 0
  8961                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  8962  0045A0  51A6               	movf	stoa@w& (0+255),w,b
  8963  0045A2  5DAC               	subwf	stoa@l& (0+255),w,b
  8964  0045A4  51AD               	movf	(stoa@l+1)& (0+255),w,b
  8965  0045A6  0A80               	xorlw	128
  8966  0045A8  6F9C               	movwf	??_stoa& (0+255),b
  8967  0045AA  51A7               	movf	(stoa@w+1)& (0+255),w,b
  8968  0045AC  0A80               	xorlw	128
  8969  0045AE  599C               	subwfb	??_stoa& (0+255),w,b
  8970  0045B0  A0D8               	btfss	status,0,c
  8971  0045B2  EFDD  F022         	goto	u10791
  8972  0045B6  EFDF  F022         	goto	u10790
  8973  0045BA                     u10791:
  8974  0045BA  EFC3  F022         	goto	l8485
  8975  0045BE                     u10790:
  8976  0045BE                     l713:
  8977                           
  8978                           ; BSR set to: 0
  8979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  8980  0045BE  C0AC  F098         	movff	stoa@l,?_stoa
  8981  0045C2  C0AD  F099         	movff	stoa@l+1,?_stoa+1
  8982  0045C6                     
  8983                           ; BSR set to: 0
  8984  0045C6  0012               	return		;funcret
  8985  0045C8                     __end_of_stoa:
  8986                           	opt callstack 0
  8987                           
  8988 ;; *************** function _otoa *****************
  8989 ;; Defined at:
  8990 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8991 ;; Parameters:    Size  Location     Type
  8992 ;;  fp              2   74[BANK0 ] PTR struct _IO_FILE
  8993 ;;		 -> vsnprintf@f(6), NULL(0), 
  8994 ;;  d               8   76[BANK0 ] unsigned long long 
  8995 ;; Auto vars:     Size  Location     Type
  8996 ;;  n               8   14[BANK1 ] unsigned long long 
  8997 ;;  i               2   22[BANK1 ] int 
  8998 ;;  w               2   12[BANK1 ] int 
  8999 ;;  t               2   10[BANK1 ] int 
  9000 ;;  p               2    8[BANK1 ] int 
  9001 ;; Return value:  Size  Location     Type
  9002 ;;                  2   74[BANK0 ] int 
  9003 ;; Registers used:
  9004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9005 ;; Tracked objects:
  9006 ;;		On entry : 0/0
  9007 ;;		On exit  : 0/0
  9008 ;;		Unchanged: 0/0
  9009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9010 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9011 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9012 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9013 ;;      Totals:         0      10      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9014 ;;Total ram usage:       34 bytes
  9015 ;; Hardware stack levels used:    1
  9016 ;; Hardware stack levels required when called:   18
  9017 ;; This function calls:
  9018 ;;		_pad
  9019 ;; This function is called by:
  9020 ;;		_vfpfcnvrt
  9021 ;; This function uses a non-reentrant model
  9022 ;;
  9023                           
  9024                           	psect	text21
  9025  00404E                     __ptext21:
  9026                           	opt callstack 0
  9027  00404E                     _otoa:
  9028                           	opt callstack 8
  9029  00404E                     
  9030                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  9031  00404E  0100               	movlb	0	; () banked
  9032  004050  BFBC               	btfsc	(_prec+1)& (0+255),7,b
  9033  004052  EF2D  F020         	goto	u10611
  9034  004056  EF2F  F020         	goto	u10610
  9035  00405A                     u10611:
  9036  00405A  EF30  F020         	goto	l8405
  9037  00405E                     u10610:
  9038  00405E                     
  9039                           ; BSR set to: 0
  9040                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  9041  00405E  93BD               	bcf	_flags& (0+255),1,b
  9042  004060                     l8405:
  9043                           
  9044                           ; BSR set to: 0
  9045                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  9046  004060  BFBC               	btfsc	(_prec+1)& (0+255),7,b
  9047  004062  EF3D  F020         	goto	u10620
  9048  004066  51BC               	movf	(_prec+1)& (0+255),w,b
  9049  004068  E106               	bnz	u10621
  9050  00406A  05BB               	decf	_prec& (0+255),w,b
  9051  00406C  B0D8               	btfsc	status,0,c
  9052  00406E  EF3B  F020         	goto	u10621
  9053  004072  EF3D  F020         	goto	u10620
  9054  004076                     u10621:
  9055  004076  EF44  F020         	goto	l683
  9056  00407A                     u10620:
  9057  00407A                     
  9058                           ; BSR set to: 0
  9059  00407A  0E00               	movlw	0
  9060  00407C  0101               	movlb	1	; () banked
  9061  00407E  6F09               	movwf	(otoa@p+1)& (0+255),b
  9062  004080  0E01               	movlw	1
  9063  004082  6F08               	movwf	otoa@p& (0+255),b
  9064  004084  EF48  F020         	goto	l685
  9065  004088                     l683:
  9066                           
  9067                           ; BSR set to: 0
  9068  004088  C0BB  F108         	movff	_prec,otoa@p
  9069  00408C  C0BC  F109         	movff	_prec+1,otoa@p+1
  9070  004090                     l685:
  9071                           
  9072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  9073  004090  C0B9  F10C         	movff	_width,otoa@w
  9074  004094  C0BA  F10D         	movff	_width+1,otoa@w+1
  9075                           
  9076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  9077  004098  C0AC  F10E         	movff	otoa@d,otoa@n
  9078  00409C  C0AD  F10F         	movff	otoa@d+1,otoa@n+1
  9079  0040A0  C0AE  F110         	movff	otoa@d+2,otoa@n+2
  9080  0040A4  C0AF  F111         	movff	otoa@d+3,otoa@n+3
  9081  0040A8  C0B0  F112         	movff	otoa@d+4,otoa@n+4
  9082  0040AC  C0B1  F113         	movff	otoa@d+5,otoa@n+5
  9083  0040B0  C0B2  F114         	movff	otoa@d+6,otoa@n+6
  9084  0040B4  C0B3  F115         	movff	otoa@d+7,otoa@n+7
  9085  0040B8                     
  9086                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  9087  0040B8  0E00               	movlw	0
  9088  0040BA  0101               	movlb	1	; () banked
  9089  0040BC  6F17               	movwf	(otoa@i+1)& (0+255),b
  9090  0040BE  0E1F               	movlw	31
  9091  0040C0  6F16               	movwf	otoa@i& (0+255),b
  9092  0040C2                     
  9093                           ; BSR set to: 1
  9094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  9095  0040C2  0E00               	movlw	0
  9096  0040C4  6F97               	movwf	(_dbuf+31)& (0+255),b
  9097  0040C6                     
  9098                           ; BSR set to: 1
  9099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  9100  0040C6  0E00               	movlw	0
  9101  0040C8  6F0B               	movwf	(otoa@t+1)& (0+255),b
  9102  0040CA  0E00               	movlw	0
  9103  0040CC  6F0A               	movwf	otoa@t& (0+255),b
  9104                           
  9105                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9106  0040CE  EFAF  F020         	goto	l8427
  9107  0040D2                     l8415:
  9108                           
  9109                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  9110  0040D2  0101               	movlb	1	; () banked
  9111  0040D4  0716               	decf	otoa@i& (0+255),f,b
  9112  0040D6  A0D8               	btfss	status,0,c
  9113  0040D8  0717               	decf	(otoa@i+1)& (0+255),f,b
  9114  0040DA                     
  9115                           ; BSR set to: 1
  9116                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  9117  0040DA  0E07               	movlw	7
  9118  0040DC  150E               	andwf	otoa@n& (0+255),w,b
  9119  0040DE  6F0A               	movwf	otoa@t& (0+255),b
  9120  0040E0  6B0B               	clrf	(otoa@t+1)& (0+255),b
  9121  0040E2                     
  9122                           ; BSR set to: 1
  9123                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  9124  0040E2  0E78               	movlw	low _dbuf
  9125  0040E4  2516               	addwf	otoa@i& (0+255),w,b
  9126  0040E6  6ED9               	movwf	fsr2l,c
  9127  0040E8  0E01               	movlw	high _dbuf
  9128  0040EA  2117               	addwfc	(otoa@i+1)& (0+255),w,b
  9129  0040EC  6EDA               	movwf	fsr2h,c
  9130  0040EE  510A               	movf	otoa@t& (0+255),w,b
  9131  0040F0  0F30               	addlw	48
  9132  0040F2  6EDF               	movwf	indf2,c
  9133  0040F4                     
  9134                           ; BSR set to: 1
  9135                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  9136  0040F4  0708               	decf	otoa@p& (0+255),f,b
  9137  0040F6  A0D8               	btfss	status,0,c
  9138  0040F8  0709               	decf	(otoa@p+1)& (0+255),f,b
  9139  0040FA                     
  9140                           ; BSR set to: 1
  9141                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  9142  0040FA  070C               	decf	otoa@w& (0+255),f,b
  9143  0040FC  A0D8               	btfss	status,0,c
  9144  0040FE  070D               	decf	(otoa@w+1)& (0+255),f,b
  9145  004100                     
  9146                           ; BSR set to: 1
  9147                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  9148  004100  C10E  F100         	movff	otoa@n,??_otoa
  9149  004104  C10F  F101         	movff	otoa@n+1,??_otoa+1
  9150  004108  C110  F102         	movff	otoa@n+2,??_otoa+2
  9151  00410C  C111  F103         	movff	otoa@n+3,??_otoa+3
  9152  004110  C112  F104         	movff	otoa@n+4,??_otoa+4
  9153  004114  C113  F105         	movff	otoa@n+5,??_otoa+5
  9154  004118  C114  F106         	movff	otoa@n+6,??_otoa+6
  9155  00411C  C115  F107         	movff	otoa@n+7,??_otoa+7
  9156  004120  0E04               	movlw	4
  9157  004122  EF9C  F020         	goto	u10630
  9158  004126                     u10635:
  9159  004126  90D8               	bcf	status,0,c
  9160  004128  3307               	rrcf	(??_otoa+7)& (0+255),f,b
  9161  00412A  3306               	rrcf	(??_otoa+6)& (0+255),f,b
  9162  00412C  3305               	rrcf	(??_otoa+5)& (0+255),f,b
  9163  00412E  3304               	rrcf	(??_otoa+4)& (0+255),f,b
  9164  004130  3303               	rrcf	(??_otoa+3)& (0+255),f,b
  9165  004132  3302               	rrcf	(??_otoa+2)& (0+255),f,b
  9166  004134  3301               	rrcf	(??_otoa+1)& (0+255),f,b
  9167  004136  3300               	rrcf	??_otoa& (0+255),f,b
  9168  004138                     u10630:
  9169  004138  2EE8               	decfsz	wreg,f,c
  9170  00413A  EF93  F020         	goto	u10635
  9171  00413E  C100  F10E         	movff	??_otoa,otoa@n
  9172  004142  C101  F10F         	movff	??_otoa+1,otoa@n+1
  9173  004146  C102  F110         	movff	??_otoa+2,otoa@n+2
  9174  00414A  C103  F111         	movff	??_otoa+3,otoa@n+3
  9175  00414E  C104  F112         	movff	??_otoa+4,otoa@n+4
  9176  004152  C105  F113         	movff	??_otoa+5,otoa@n+5
  9177  004156  C106  F114         	movff	??_otoa+6,otoa@n+6
  9178  00415A  C107  F115         	movff	??_otoa+7,otoa@n+7
  9179  00415E                     l8427:
  9180                           
  9181                           ; BSR set to: 1
  9182                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9183  00415E  BF17               	btfsc	(otoa@i+1)& (0+255),7,b
  9184  004160  EFBA  F020         	goto	u10641
  9185  004164  5117               	movf	(otoa@i+1)& (0+255),w,b
  9186  004166  E108               	bnz	u10640
  9187  004168  0516               	decf	otoa@i& (0+255),w,b
  9188  00416A  A0D8               	btfss	status,0,c
  9189  00416C  EFBA  F020         	goto	u10641
  9190  004170  EFBC  F020         	goto	u10640
  9191  004174                     u10641:
  9192  004174  EFED  F020         	goto	l692
  9193  004178                     u10640:
  9194  004178                     
  9195                           ; BSR set to: 1
  9196  004178  510E               	movf	otoa@n& (0+255),w,b
  9197  00417A  110F               	iorwf	(otoa@n+1)& (0+255),w,b
  9198  00417C  1110               	iorwf	(otoa@n+2)& (0+255),w,b
  9199  00417E  1111               	iorwf	(otoa@n+3)& (0+255),w,b
  9200  004180  1112               	iorwf	(otoa@n+4)& (0+255),w,b
  9201  004182  1113               	iorwf	(otoa@n+5)& (0+255),w,b
  9202  004184  1114               	iorwf	(otoa@n+6)& (0+255),w,b
  9203  004186  1115               	iorwf	(otoa@n+7)& (0+255),w,b
  9204  004188  A4D8               	btfss	status,2,c
  9205  00418A  EFC9  F020         	goto	u10651
  9206  00418E  EFCB  F020         	goto	u10650
  9207  004192                     u10651:
  9208  004192  EF69  F020         	goto	l8415
  9209  004196                     u10650:
  9210  004196                     
  9211                           ; BSR set to: 1
  9212  004196  BF09               	btfsc	(otoa@p+1)& (0+255),7,b
  9213  004198  EFD8  F020         	goto	u10660
  9214  00419C  5109               	movf	(otoa@p+1)& (0+255),w,b
  9215  00419E  E106               	bnz	u10661
  9216  0041A0  0508               	decf	otoa@p& (0+255),w,b
  9217  0041A2  B0D8               	btfsc	status,0,c
  9218  0041A4  EFD6  F020         	goto	u10661
  9219  0041A8  EFD8  F020         	goto	u10660
  9220  0041AC                     u10661:
  9221  0041AC  EF69  F020         	goto	l8415
  9222  0041B0                     u10660:
  9223  0041B0                     
  9224                           ; BSR set to: 1
  9225  0041B0  BF0D               	btfsc	(otoa@w+1)& (0+255),7,b
  9226  0041B2  EFE3  F020         	goto	u10671
  9227  0041B6  510D               	movf	(otoa@w+1)& (0+255),w,b
  9228  0041B8  E108               	bnz	u10670
  9229  0041BA  050C               	decf	otoa@w& (0+255),w,b
  9230  0041BC  A0D8               	btfss	status,0,c
  9231  0041BE  EFE3  F020         	goto	u10671
  9232  0041C2  EFE5  F020         	goto	u10670
  9233  0041C6                     u10671:
  9234  0041C6  EFED  F020         	goto	l692
  9235  0041CA                     u10670:
  9236  0041CA                     
  9237                           ; BSR set to: 1
  9238  0041CA  0100               	movlb	0	; () banked
  9239  0041CC  B3BD               	btfsc	_flags& (0+255),1,b
  9240  0041CE  EFEB  F020         	goto	u10681
  9241  0041D2  EFED  F020         	goto	u10680
  9242  0041D6                     u10681:
  9243  0041D6  EF69  F020         	goto	l8415
  9244  0041DA                     u10680:
  9245  0041DA                     l692:
  9246                           
  9247                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  9248  0041DA  0100               	movlb	0	; () banked
  9249  0041DC  A9BD               	btfss	_flags& (0+255),4,b
  9250  0041DE  EFF3  F020         	goto	u10691
  9251  0041E2  EFF5  F020         	goto	u10690
  9252  0041E6                     u10691:
  9253  0041E6  EF0D  F021         	goto	l8445
  9254  0041EA                     u10690:
  9255  0041EA                     
  9256                           ; BSR set to: 0
  9257  0041EA  0101               	movlb	1	; () banked
  9258  0041EC  510A               	movf	otoa@t& (0+255),w,b
  9259  0041EE  110B               	iorwf	(otoa@t+1)& (0+255),w,b
  9260  0041F0  B4D8               	btfsc	status,2,c
  9261  0041F2  EFFD  F020         	goto	u10701
  9262  0041F6  EFFF  F020         	goto	u10700
  9263  0041FA                     u10701:
  9264  0041FA  EF0D  F021         	goto	l8445
  9265  0041FE                     u10700:
  9266  0041FE                     
  9267                           ; BSR set to: 1
  9268                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  9269  0041FE  0716               	decf	otoa@i& (0+255),f,b
  9270  004200  A0D8               	btfss	status,0,c
  9271  004202  0717               	decf	(otoa@i+1)& (0+255),f,b
  9272  004204                     
  9273                           ; BSR set to: 1
  9274                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  9275  004204  0E78               	movlw	low _dbuf
  9276  004206  2516               	addwf	otoa@i& (0+255),w,b
  9277  004208  6ED9               	movwf	fsr2l,c
  9278  00420A  0E01               	movlw	high _dbuf
  9279  00420C  2117               	addwfc	(otoa@i+1)& (0+255),w,b
  9280  00420E  6EDA               	movwf	fsr2h,c
  9281  004210  0E30               	movlw	48
  9282  004212  6EDF               	movwf	indf2,c
  9283  004214                     
  9284                           ; BSR set to: 1
  9285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  9286  004214  070C               	decf	otoa@w& (0+255),f,b
  9287  004216  A0D8               	btfss	status,0,c
  9288  004218  070D               	decf	(otoa@w+1)& (0+255),f,b
  9289  00421A                     l8445:
  9290                           
  9291                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  9292  00421A  C0AA  F09F         	movff	otoa@fp,pad@fp
  9293  00421E  C0AB  F0A0         	movff	otoa@fp+1,pad@fp+1
  9294  004222  0E78               	movlw	low _dbuf
  9295  004224  0101               	movlb	1	; () banked
  9296  004226  2516               	addwf	otoa@i& (0+255),w,b
  9297  004228  0100               	movlb	0	; () banked
  9298  00422A  6FA1               	movwf	pad@buf& (0+255),b
  9299  00422C  0E01               	movlw	high _dbuf
  9300  00422E  0101               	movlb	1	; () banked
  9301  004230  2117               	addwfc	(otoa@i+1)& (0+255),w,b
  9302  004232  0100               	movlb	0	; () banked
  9303  004234  6FA2               	movwf	(pad@buf+1)& (0+255),b
  9304  004236  C10C  F0A3         	movff	otoa@w,pad@p
  9305  00423A  C10D  F0A4         	movff	otoa@w+1,pad@p+1
  9306  00423E  EC17  F02C         	call	_pad	;wreg free
  9307  004242  C09F  F0AA         	movff	?_pad,?_otoa
  9308  004246  C0A0  F0AB         	movff	?_pad+1,?_otoa+1
  9309  00424A  0012               	return		;funcret
  9310  00424C                     __end_of_otoa:
  9311                           	opt callstack 0
  9312                           
  9313 ;; *************** function _dtoa *****************
  9314 ;; Defined at:
  9315 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9316 ;; Parameters:    Size  Location     Type
  9317 ;;  fp              2   74[BANK0 ] PTR struct _IO_FILE
  9318 ;;		 -> vsnprintf@f(6), NULL(0), 
  9319 ;;  d               8   76[BANK0 ] long long 
  9320 ;; Auto vars:     Size  Location     Type
  9321 ;;  n               8   16[BANK1 ] long long 
  9322 ;;  i               2   24[BANK1 ] int 
  9323 ;;  s               2   14[BANK1 ] int 
  9324 ;;  w               2   12[BANK1 ] int 
  9325 ;;  p               2   10[BANK1 ] int 
  9326 ;; Return value:  Size  Location     Type
  9327 ;;                  2   74[BANK0 ] int 
  9328 ;; Registers used:
  9329 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9330 ;; Tracked objects:
  9331 ;;		On entry : 0/0
  9332 ;;		On exit  : 0/0
  9333 ;;		Unchanged: 0/0
  9334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9335 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9336 ;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9337 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9338 ;;      Totals:         0      10      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9339 ;;Total ram usage:       36 bytes
  9340 ;; Hardware stack levels used:    1
  9341 ;; Hardware stack levels required when called:   18
  9342 ;; This function calls:
  9343 ;;		___aodiv
  9344 ;;		___aomod
  9345 ;;		_abs
  9346 ;;		_pad
  9347 ;; This function is called by:
  9348 ;;		_vfpfcnvrt
  9349 ;; This function uses a non-reentrant model
  9350 ;;
  9351                           
  9352                           	psect	text22
  9353  002A00                     __ptext22:
  9354                           	opt callstack 0
  9355  002A00                     _dtoa:
  9356                           	opt callstack 8
  9357  002A00                     
  9358                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  9359  002A00  C0AC  F110         	movff	dtoa@d,dtoa@n
  9360  002A04  C0AD  F111         	movff	dtoa@d+1,dtoa@n+1
  9361  002A08  C0AE  F112         	movff	dtoa@d+2,dtoa@n+2
  9362  002A0C  C0AF  F113         	movff	dtoa@d+3,dtoa@n+3
  9363  002A10  C0B0  F114         	movff	dtoa@d+4,dtoa@n+4
  9364  002A14  C0B1  F115         	movff	dtoa@d+5,dtoa@n+5
  9365  002A18  C0B2  F116         	movff	dtoa@d+6,dtoa@n+6
  9366  002A1C  C0B3  F117         	movff	dtoa@d+7,dtoa@n+7
  9367  002A20                     
  9368                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  9369  002A20  0101               	movlb	1	; () banked
  9370  002A22  BF17               	btfsc	(dtoa@n+7)& (0+255),7,b
  9371  002A24  EF16  F015         	goto	u10461
  9372  002A28  EF19  F015         	goto	u10460
  9373  002A2C                     u10461:
  9374  002A2C  0E01               	movlw	1
  9375  002A2E  EF1A  F015         	goto	u10470
  9376  002A32                     u10460:
  9377  002A32  0E00               	movlw	0
  9378  002A34                     u10470:
  9379  002A34  6F0E               	movwf	dtoa@s& (0+255),b
  9380  002A36  6B0F               	clrf	(dtoa@s+1)& (0+255),b
  9381                           
  9382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  9383  002A38  510E               	movf	dtoa@s& (0+255),w,b
  9384  002A3A  110F               	iorwf	(dtoa@s+1)& (0+255),w,b
  9385  002A3C  B4D8               	btfsc	status,2,c
  9386  002A3E  EF23  F015         	goto	u10481
  9387  002A42  EF25  F015         	goto	u10480
  9388  002A46                     u10481:
  9389  002A46  EF35  F015         	goto	l8345
  9390  002A4A                     u10480:
  9391  002A4A                     
  9392                           ; BSR set to: 1
  9393                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  9394  002A4A  1F17               	comf	(dtoa@n+7)& (0+255),f,b
  9395  002A4C  1F16               	comf	(dtoa@n+6)& (0+255),f,b
  9396  002A4E  1F15               	comf	(dtoa@n+5)& (0+255),f,b
  9397  002A50  1F14               	comf	(dtoa@n+4)& (0+255),f,b
  9398  002A52  1F13               	comf	(dtoa@n+3)& (0+255),f,b
  9399  002A54  1F12               	comf	(dtoa@n+2)& (0+255),f,b
  9400  002A56  1F11               	comf	(dtoa@n+1)& (0+255),f,b
  9401  002A58  6D10               	negf	dtoa@n& (0+255),b
  9402  002A5A  0E00               	movlw	0
  9403  002A5C  2311               	addwfc	(dtoa@n+1)& (0+255),f,b
  9404  002A5E  2312               	addwfc	(dtoa@n+2)& (0+255),f,b
  9405  002A60  2313               	addwfc	(dtoa@n+3)& (0+255),f,b
  9406  002A62  2314               	addwfc	(dtoa@n+4)& (0+255),f,b
  9407  002A64  2315               	addwfc	(dtoa@n+5)& (0+255),f,b
  9408  002A66  2316               	addwfc	(dtoa@n+6)& (0+255),f,b
  9409  002A68  2317               	addwfc	(dtoa@n+7)& (0+255),f,b
  9410  002A6A                     l8345:
  9411                           
  9412                           ; BSR set to: 1
  9413                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  9414  002A6A  0100               	movlb	0	; () banked
  9415  002A6C  BFBC               	btfsc	(_prec+1)& (0+255),7,b
  9416  002A6E  EF3B  F015         	goto	u10491
  9417  002A72  EF3D  F015         	goto	u10490
  9418  002A76                     u10491:
  9419  002A76  EF3E  F015         	goto	l8349
  9420  002A7A                     u10490:
  9421  002A7A                     
  9422                           ; BSR set to: 0
  9423                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  9424  002A7A  93BD               	bcf	_flags& (0+255),1,b
  9425  002A7C                     l8349:
  9426                           
  9427                           ; BSR set to: 0
  9428                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  9429  002A7C  BFBC               	btfsc	(_prec+1)& (0+255),7,b
  9430  002A7E  EF4B  F015         	goto	u10500
  9431  002A82  51BC               	movf	(_prec+1)& (0+255),w,b
  9432  002A84  E106               	bnz	u10501
  9433  002A86  05BB               	decf	_prec& (0+255),w,b
  9434  002A88  B0D8               	btfsc	status,0,c
  9435  002A8A  EF49  F015         	goto	u10501
  9436  002A8E  EF4B  F015         	goto	u10500
  9437  002A92                     u10501:
  9438  002A92  EF52  F015         	goto	l658
  9439  002A96                     u10500:
  9440  002A96                     
  9441                           ; BSR set to: 0
  9442  002A96  0E00               	movlw	0
  9443  002A98  0101               	movlb	1	; () banked
  9444  002A9A  6F0B               	movwf	(dtoa@p+1)& (0+255),b
  9445  002A9C  0E01               	movlw	1
  9446  002A9E  6F0A               	movwf	dtoa@p& (0+255),b
  9447  002AA0  EF56  F015         	goto	l660
  9448  002AA4                     l658:
  9449                           
  9450                           ; BSR set to: 0
  9451  002AA4  C0BB  F10A         	movff	_prec,dtoa@p
  9452  002AA8  C0BC  F10B         	movff	_prec+1,dtoa@p+1
  9453  002AAC                     l660:
  9454                           
  9455                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  9456  002AAC  C0B9  F10C         	movff	_width,dtoa@w
  9457  002AB0  C0BA  F10D         	movff	_width+1,dtoa@w+1
  9458  002AB4                     
  9459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  9460  002AB4  0101               	movlb	1	; () banked
  9461  002AB6  510E               	movf	dtoa@s& (0+255),w,b
  9462  002AB8  110F               	iorwf	(dtoa@s+1)& (0+255),w,b
  9463  002ABA  A4D8               	btfss	status,2,c
  9464  002ABC  EF62  F015         	goto	u10511
  9465  002AC0  EF64  F015         	goto	u10510
  9466  002AC4                     u10511:
  9467  002AC4  EF6C  F015         	goto	l8357
  9468  002AC8                     u10510:
  9469  002AC8                     
  9470                           ; BSR set to: 1
  9471  002AC8  0100               	movlb	0	; () banked
  9472  002ACA  A5BD               	btfss	_flags& (0+255),2,b
  9473  002ACC  EF6A  F015         	goto	u10521
  9474  002AD0  EF6C  F015         	goto	u10520
  9475  002AD4                     u10521:
  9476  002AD4  EF70  F015         	goto	l8359
  9477  002AD8                     u10520:
  9478  002AD8                     l8357:
  9479                           
  9480                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  9481  002AD8  0101               	movlb	1	; () banked
  9482  002ADA  070C               	decf	dtoa@w& (0+255),f,b
  9483  002ADC  A0D8               	btfss	status,0,c
  9484  002ADE  070D               	decf	(dtoa@w+1)& (0+255),f,b
  9485  002AE0                     l8359:
  9486                           
  9487                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  9488  002AE0  0E00               	movlw	0
  9489  002AE2  0101               	movlb	1	; () banked
  9490  002AE4  6F19               	movwf	(dtoa@i+1)& (0+255),b
  9491  002AE6  0E1F               	movlw	31
  9492  002AE8  6F18               	movwf	dtoa@i& (0+255),b
  9493  002AEA                     
  9494                           ; BSR set to: 1
  9495                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  9496  002AEA  0E00               	movlw	0
  9497  002AEC  6F97               	movwf	(_dbuf+31)& (0+255),b
  9498                           
  9499                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9500  002AEE  EFFA  F015         	goto	l8373
  9501  002AF2                     l8363:
  9502                           
  9503                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  9504  002AF2  0101               	movlb	1	; () banked
  9505  002AF4  0718               	decf	dtoa@i& (0+255),f,b
  9506  002AF6  A0D8               	btfss	status,0,c
  9507  002AF8  0719               	decf	(dtoa@i+1)& (0+255),f,b
  9508  002AFA                     
  9509                           ; BSR set to: 1
  9510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  9511  002AFA  0E78               	movlw	low _dbuf
  9512  002AFC  2518               	addwf	dtoa@i& (0+255),w,b
  9513  002AFE  6ED9               	movwf	fsr2l,c
  9514  002B00  0E01               	movlw	high _dbuf
  9515  002B02  2119               	addwfc	(dtoa@i+1)& (0+255),w,b
  9516  002B04  6EDA               	movwf	fsr2h,c
  9517  002B06  C110  F08D         	movff	dtoa@n,___aomod@dividend
  9518  002B0A  C111  F08E         	movff	dtoa@n+1,___aomod@dividend+1
  9519  002B0E  C112  F08F         	movff	dtoa@n+2,___aomod@dividend+2
  9520  002B12  C113  F090         	movff	dtoa@n+3,___aomod@dividend+3
  9521  002B16  C114  F091         	movff	dtoa@n+4,___aomod@dividend+4
  9522  002B1A  C115  F092         	movff	dtoa@n+5,___aomod@dividend+5
  9523  002B1E  C116  F093         	movff	dtoa@n+6,___aomod@dividend+6
  9524  002B22  C117  F094         	movff	dtoa@n+7,___aomod@dividend+7
  9525  002B26  0E0A               	movlw	10
  9526  002B28  0100               	movlb	0	; () banked
  9527  002B2A  6F95               	movwf	___aomod@divisor& (0+255),b
  9528  002B2C  0E00               	movlw	0
  9529  002B2E  6F96               	movwf	(___aomod@divisor+1)& (0+255),b
  9530  002B30  0E00               	movlw	0
  9531  002B32  6F97               	movwf	(___aomod@divisor+2)& (0+255),b
  9532  002B34  0E00               	movlw	0
  9533  002B36  6F98               	movwf	(___aomod@divisor+3)& (0+255),b
  9534  002B38  0E00               	movlw	0
  9535  002B3A  6F99               	movwf	(___aomod@divisor+4)& (0+255),b
  9536  002B3C  0E00               	movlw	0
  9537  002B3E  6F9A               	movwf	(___aomod@divisor+5)& (0+255),b
  9538  002B40  0E00               	movlw	0
  9539  002B42  6F9B               	movwf	(___aomod@divisor+6)& (0+255),b
  9540  002B44  0E00               	movlw	0
  9541  002B46  6F9C               	movwf	(___aomod@divisor+7)& (0+255),b
  9542  002B48  ECF1  F025         	call	___aomod	;wreg free
  9543  002B4C  C08D  F100         	movff	?___aomod,??_dtoa
  9544  002B50  C08E  F101         	movff	?___aomod+1,??_dtoa+1
  9545  002B54  C08F  F102         	movff	?___aomod+2,??_dtoa+2
  9546  002B58  C090  F103         	movff	?___aomod+3,??_dtoa+3
  9547  002B5C  C091  F104         	movff	?___aomod+4,??_dtoa+4
  9548  002B60  C092  F105         	movff	?___aomod+5,??_dtoa+5
  9549  002B64  C093  F106         	movff	?___aomod+6,??_dtoa+6
  9550  002B68  C094  F107         	movff	?___aomod+7,??_dtoa+7
  9551  002B6C  C100  F09F         	movff	??_dtoa,abs@a
  9552  002B70  C102  F0A0         	movff	??_dtoa+2,abs@a+1
  9553  002B74  EC1E  F031         	call	_abs	;wreg free
  9554  002B78  0100               	movlb	0	; () banked
  9555  002B7A  519F               	movf	?_abs& (0+255),w,b
  9556  002B7C  0F30               	addlw	48
  9557  002B7E  6EDF               	movwf	indf2,c
  9558  002B80                     
  9559                           ; BSR set to: 0
  9560                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  9561  002B80  0101               	movlb	1	; () banked
  9562  002B82  070A               	decf	dtoa@p& (0+255),f,b
  9563  002B84  A0D8               	btfss	status,0,c
  9564  002B86  070B               	decf	(dtoa@p+1)& (0+255),f,b
  9565  002B88                     
  9566                           ; BSR set to: 1
  9567                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  9568  002B88  070C               	decf	dtoa@w& (0+255),f,b
  9569  002B8A  A0D8               	btfss	status,0,c
  9570  002B8C  070D               	decf	(dtoa@w+1)& (0+255),f,b
  9571  002B8E                     
  9572                           ; BSR set to: 1
  9573                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  9574  002B8E  C110  F08D         	movff	dtoa@n,___aodiv@dividend
  9575  002B92  C111  F08E         	movff	dtoa@n+1,___aodiv@dividend+1
  9576  002B96  C112  F08F         	movff	dtoa@n+2,___aodiv@dividend+2
  9577  002B9A  C113  F090         	movff	dtoa@n+3,___aodiv@dividend+3
  9578  002B9E  C114  F091         	movff	dtoa@n+4,___aodiv@dividend+4
  9579  002BA2  C115  F092         	movff	dtoa@n+5,___aodiv@dividend+5
  9580  002BA6  C116  F093         	movff	dtoa@n+6,___aodiv@dividend+6
  9581  002BAA  C117  F094         	movff	dtoa@n+7,___aodiv@dividend+7
  9582  002BAE  0E0A               	movlw	10
  9583  002BB0  0100               	movlb	0	; () banked
  9584  002BB2  6F95               	movwf	___aodiv@divisor& (0+255),b
  9585  002BB4  0E00               	movlw	0
  9586  002BB6  6F96               	movwf	(___aodiv@divisor+1)& (0+255),b
  9587  002BB8  0E00               	movlw	0
  9588  002BBA  6F97               	movwf	(___aodiv@divisor+2)& (0+255),b
  9589  002BBC  0E00               	movlw	0
  9590  002BBE  6F98               	movwf	(___aodiv@divisor+3)& (0+255),b
  9591  002BC0  0E00               	movlw	0
  9592  002BC2  6F99               	movwf	(___aodiv@divisor+4)& (0+255),b
  9593  002BC4  0E00               	movlw	0
  9594  002BC6  6F9A               	movwf	(___aodiv@divisor+5)& (0+255),b
  9595  002BC8  0E00               	movlw	0
  9596  002BCA  6F9B               	movwf	(___aodiv@divisor+6)& (0+255),b
  9597  002BCC  0E00               	movlw	0
  9598  002BCE  6F9C               	movwf	(___aodiv@divisor+7)& (0+255),b
  9599  002BD0  ECE4  F022         	call	___aodiv	;wreg free
  9600  002BD4  C08D  F110         	movff	?___aodiv,dtoa@n
  9601  002BD8  C08E  F111         	movff	?___aodiv+1,dtoa@n+1
  9602  002BDC  C08F  F112         	movff	?___aodiv+2,dtoa@n+2
  9603  002BE0  C090  F113         	movff	?___aodiv+3,dtoa@n+3
  9604  002BE4  C091  F114         	movff	?___aodiv+4,dtoa@n+4
  9605  002BE8  C092  F115         	movff	?___aodiv+5,dtoa@n+5
  9606  002BEC  C093  F116         	movff	?___aodiv+6,dtoa@n+6
  9607  002BF0  C094  F117         	movff	?___aodiv+7,dtoa@n+7
  9608  002BF4                     l8373:
  9609                           
  9610                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9611  002BF4  0101               	movlb	1	; () banked
  9612  002BF6  BF19               	btfsc	(dtoa@i+1)& (0+255),7,b
  9613  002BF8  EF06  F016         	goto	u10531
  9614  002BFC  5119               	movf	(dtoa@i+1)& (0+255),w,b
  9615  002BFE  E108               	bnz	u10530
  9616  002C00  0518               	decf	dtoa@i& (0+255),w,b
  9617  002C02  A0D8               	btfss	status,0,c
  9618  002C04  EF06  F016         	goto	u10531
  9619  002C08  EF08  F016         	goto	u10530
  9620  002C0C                     u10531:
  9621  002C0C  EF39  F016         	goto	l8383
  9622  002C10                     u10530:
  9623  002C10                     
  9624                           ; BSR set to: 1
  9625  002C10  5110               	movf	dtoa@n& (0+255),w,b
  9626  002C12  1111               	iorwf	(dtoa@n+1)& (0+255),w,b
  9627  002C14  1112               	iorwf	(dtoa@n+2)& (0+255),w,b
  9628  002C16  1113               	iorwf	(dtoa@n+3)& (0+255),w,b
  9629  002C18  1114               	iorwf	(dtoa@n+4)& (0+255),w,b
  9630  002C1A  1115               	iorwf	(dtoa@n+5)& (0+255),w,b
  9631  002C1C  1116               	iorwf	(dtoa@n+6)& (0+255),w,b
  9632  002C1E  1117               	iorwf	(dtoa@n+7)& (0+255),w,b
  9633  002C20  A4D8               	btfss	status,2,c
  9634  002C22  EF15  F016         	goto	u10541
  9635  002C26  EF17  F016         	goto	u10540
  9636  002C2A                     u10541:
  9637  002C2A  EF79  F015         	goto	l8363
  9638  002C2E                     u10540:
  9639  002C2E                     
  9640                           ; BSR set to: 1
  9641  002C2E  BF0B               	btfsc	(dtoa@p+1)& (0+255),7,b
  9642  002C30  EF24  F016         	goto	u10550
  9643  002C34  510B               	movf	(dtoa@p+1)& (0+255),w,b
  9644  002C36  E106               	bnz	u10551
  9645  002C38  050A               	decf	dtoa@p& (0+255),w,b
  9646  002C3A  B0D8               	btfsc	status,0,c
  9647  002C3C  EF22  F016         	goto	u10551
  9648  002C40  EF24  F016         	goto	u10550
  9649  002C44                     u10551:
  9650  002C44  EF79  F015         	goto	l8363
  9651  002C48                     u10550:
  9652  002C48                     
  9653                           ; BSR set to: 1
  9654  002C48  BF0D               	btfsc	(dtoa@w+1)& (0+255),7,b
  9655  002C4A  EF2F  F016         	goto	u10561
  9656  002C4E  510D               	movf	(dtoa@w+1)& (0+255),w,b
  9657  002C50  E108               	bnz	u10560
  9658  002C52  050C               	decf	dtoa@w& (0+255),w,b
  9659  002C54  A0D8               	btfss	status,0,c
  9660  002C56  EF2F  F016         	goto	u10561
  9661  002C5A  EF31  F016         	goto	u10560
  9662  002C5E                     u10561:
  9663  002C5E  EF39  F016         	goto	l8383
  9664  002C62                     u10560:
  9665  002C62                     
  9666                           ; BSR set to: 1
  9667  002C62  0100               	movlb	0	; () banked
  9668  002C64  B3BD               	btfsc	_flags& (0+255),1,b
  9669  002C66  EF37  F016         	goto	u10571
  9670  002C6A  EF39  F016         	goto	u10570
  9671  002C6E                     u10571:
  9672  002C6E  EF79  F015         	goto	l8363
  9673  002C72                     u10570:
  9674  002C72                     l8383:
  9675                           
  9676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  9677  002C72  0101               	movlb	1	; () banked
  9678  002C74  510E               	movf	dtoa@s& (0+255),w,b
  9679  002C76  110F               	iorwf	(dtoa@s+1)& (0+255),w,b
  9680  002C78  A4D8               	btfss	status,2,c
  9681  002C7A  EF41  F016         	goto	u10581
  9682  002C7E  EF43  F016         	goto	u10580
  9683  002C82                     u10581:
  9684  002C82  EF4B  F016         	goto	l8387
  9685  002C86                     u10580:
  9686  002C86                     
  9687                           ; BSR set to: 1
  9688  002C86  0100               	movlb	0	; () banked
  9689  002C88  A5BD               	btfss	_flags& (0+255),2,b
  9690  002C8A  EF49  F016         	goto	u10591
  9691  002C8E  EF4B  F016         	goto	u10590
  9692  002C92                     u10591:
  9693  002C92  EF6A  F016         	goto	l8397
  9694  002C96                     u10590:
  9695  002C96                     l8387:
  9696                           
  9697                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  9698  002C96  0101               	movlb	1	; () banked
  9699  002C98  0718               	decf	dtoa@i& (0+255),f,b
  9700  002C9A  A0D8               	btfss	status,0,c
  9701  002C9C  0719               	decf	(dtoa@i+1)& (0+255),f,b
  9702  002C9E                     
  9703                           ; BSR set to: 1
  9704                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  9705  002C9E  510E               	movf	dtoa@s& (0+255),w,b
  9706  002CA0  110F               	iorwf	(dtoa@s+1)& (0+255),w,b
  9707  002CA2  A4D8               	btfss	status,2,c
  9708  002CA4  EF56  F016         	goto	u10601
  9709  002CA8  EF58  F016         	goto	u10600
  9710  002CAC                     u10601:
  9711  002CAC  EF5E  F016         	goto	l8393
  9712  002CB0                     u10600:
  9713  002CB0                     
  9714                           ; BSR set to: 1
  9715  002CB0  0E00               	movlw	0
  9716  002CB2  6F09               	movwf	(_dtoa$1672+1)& (0+255),b
  9717  002CB4  0E2B               	movlw	43
  9718  002CB6  6F08               	movwf	_dtoa$1672& (0+255),b
  9719  002CB8  EF62  F016         	goto	l8395
  9720  002CBC                     l8393:
  9721                           
  9722                           ; BSR set to: 1
  9723  002CBC  0E00               	movlw	0
  9724  002CBE  6F09               	movwf	(_dtoa$1672+1)& (0+255),b
  9725  002CC0  0E2D               	movlw	45
  9726  002CC2  6F08               	movwf	_dtoa$1672& (0+255),b
  9727  002CC4                     l8395:
  9728                           
  9729                           ; BSR set to: 1
  9730  002CC4  0E78               	movlw	low _dbuf
  9731  002CC6  2518               	addwf	dtoa@i& (0+255),w,b
  9732  002CC8  6ED9               	movwf	fsr2l,c
  9733  002CCA  0E01               	movlw	high _dbuf
  9734  002CCC  2119               	addwfc	(dtoa@i+1)& (0+255),w,b
  9735  002CCE  6EDA               	movwf	fsr2h,c
  9736  002CD0  C108  FFDF         	movff	_dtoa$1672,indf2
  9737  002CD4                     l8397:
  9738                           
  9739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  9740  002CD4  C0AA  F09F         	movff	dtoa@fp,pad@fp
  9741  002CD8  C0AB  F0A0         	movff	dtoa@fp+1,pad@fp+1
  9742  002CDC  0E78               	movlw	low _dbuf
  9743  002CDE  0101               	movlb	1	; () banked
  9744  002CE0  2518               	addwf	dtoa@i& (0+255),w,b
  9745  002CE2  0100               	movlb	0	; () banked
  9746  002CE4  6FA1               	movwf	pad@buf& (0+255),b
  9747  002CE6  0E01               	movlw	high _dbuf
  9748  002CE8  0101               	movlb	1	; () banked
  9749  002CEA  2119               	addwfc	(dtoa@i+1)& (0+255),w,b
  9750  002CEC  0100               	movlb	0	; () banked
  9751  002CEE  6FA2               	movwf	(pad@buf+1)& (0+255),b
  9752  002CF0  C10C  F0A3         	movff	dtoa@w,pad@p
  9753  002CF4  C10D  F0A4         	movff	dtoa@w+1,pad@p+1
  9754  002CF8  EC17  F02C         	call	_pad	;wreg free
  9755  002CFC  C09F  F0AA         	movff	?_pad,?_dtoa
  9756  002D00  C0A0  F0AB         	movff	?_pad+1,?_dtoa+1
  9757  002D04  0012               	return		;funcret
  9758  002D06                     __end_of_dtoa:
  9759                           	opt callstack 0
  9760                           
  9761 ;; *************** function _abs *****************
  9762 ;; Defined at:
  9763 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  9764 ;; Parameters:    Size  Location     Type
  9765 ;;  a               2   63[BANK0 ] int 
  9766 ;; Auto vars:     Size  Location     Type
  9767 ;;		None
  9768 ;; Return value:  Size  Location     Type
  9769 ;;                  2   63[BANK0 ] int 
  9770 ;; Registers used:
  9771 ;;		wreg, status,2, status,0
  9772 ;; Tracked objects:
  9773 ;;		On entry : 0/0
  9774 ;;		On exit  : 0/0
  9775 ;;		Unchanged: 0/0
  9776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9777 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9779 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9780 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9781 ;;Total ram usage:        4 bytes
  9782 ;; Hardware stack levels used:    1
  9783 ;; Hardware stack levels required when called:   13
  9784 ;; This function calls:
  9785 ;;		Nothing
  9786 ;; This function is called by:
  9787 ;;		_dtoa
  9788 ;; This function uses a non-reentrant model
  9789 ;;
  9790                           
  9791                           	psect	text23
  9792  00623C                     __ptext23:
  9793                           	opt callstack 0
  9794  00623C                     _abs:
  9795                           	opt callstack 12
  9796  00623C  0100               	movlb	0	; () banked
  9797  00623E  BFA0               	btfsc	(abs@a+1)& (0+255),7,b
  9798  006240  EF2C  F031         	goto	u9560
  9799  006244  51A0               	movf	(abs@a+1)& (0+255),w,b
  9800  006246  E106               	bnz	u9561
  9801  006248  059F               	decf	abs@a& (0+255),w,b
  9802  00624A  B0D8               	btfsc	status,0,c
  9803  00624C  EF2A  F031         	goto	u9561
  9804  006250  EF2C  F031         	goto	u9560
  9805  006254                     u9561:
  9806  006254  EF3A  F031         	goto	l1522
  9807  006258                     u9560:
  9808  006258                     
  9809                           ; BSR set to: 0
  9810  006258  C09F  F0A1         	movff	abs@a,??_abs
  9811  00625C  C0A0  F0A2         	movff	abs@a+1,??_abs+1
  9812  006260  1FA1               	comf	??_abs& (0+255),f,b
  9813  006262  1FA2               	comf	(??_abs+1)& (0+255),f,b
  9814  006264  4BA1               	infsnz	??_abs& (0+255),f,b
  9815  006266  2BA2               	incf	(??_abs+1)& (0+255),f,b
  9816  006268  C0A1  F09F         	movff	??_abs,?_abs
  9817  00626C  C0A2  F0A0         	movff	??_abs+1,?_abs+1
  9818  006270  EF3E  F031         	goto	l1525
  9819  006274                     l1522:
  9820                           
  9821                           ; BSR set to: 0
  9822  006274  C09F  F09F         	movff	abs@a,?_abs
  9823  006278  C0A0  F0A0         	movff	abs@a+1,?_abs+1
  9824  00627C                     l1525:
  9825                           
  9826                           ; BSR set to: 0
  9827  00627C  0012               	return		;funcret
  9828  00627E                     __end_of_abs:
  9829                           	opt callstack 0
  9830                           
  9831 ;; *************** function ___aomod *****************
  9832 ;; Defined at:
  9833 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  9834 ;; Parameters:    Size  Location     Type
  9835 ;;  dividend        8   45[BANK0 ] long long 
  9836 ;;  divisor         8   53[BANK0 ] long long 
  9837 ;; Auto vars:     Size  Location     Type
  9838 ;;  sign            1   62[BANK0 ] unsigned char 
  9839 ;;  counter         1   61[BANK0 ] unsigned char 
  9840 ;; Return value:  Size  Location     Type
  9841 ;;                  8   45[BANK0 ] long long 
  9842 ;; Registers used:
  9843 ;;		wreg, status,2, status,0
  9844 ;; Tracked objects:
  9845 ;;		On entry : 0/0
  9846 ;;		On exit  : 0/0
  9847 ;;		Unchanged: 0/0
  9848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9849 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9850 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9852 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9853 ;;Total ram usage:       18 bytes
  9854 ;; Hardware stack levels used:    1
  9855 ;; Hardware stack levels required when called:   13
  9856 ;; This function calls:
  9857 ;;		Nothing
  9858 ;; This function is called by:
  9859 ;;		_dtoa
  9860 ;; This function uses a non-reentrant model
  9861 ;;
  9862                           
  9863                           	psect	text24
  9864  004BE2                     __ptext24:
  9865                           	opt callstack 0
  9866  004BE2                     ___aomod:
  9867                           	opt callstack 12
  9868  004BE2  0E00               	movlw	0
  9869  004BE4  0100               	movlb	0	; () banked
  9870  004BE6  6F9E               	movwf	___aomod@sign& (0+255),b
  9871  004BE8                     
  9872                           ; BSR set to: 0
  9873  004BE8  BF94               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  9874  004BEA  EFFB  F025         	goto	u9730
  9875  004BEE  EFF9  F025         	goto	u9731
  9876  004BF2                     u9731:
  9877  004BF2  EF0D  F026         	goto	l7873
  9878  004BF6                     u9730:
  9879  004BF6                     
  9880                           ; BSR set to: 0
  9881  004BF6  1F94               	comf	(___aomod@dividend+7)& (0+255),f,b
  9882  004BF8  1F93               	comf	(___aomod@dividend+6)& (0+255),f,b
  9883  004BFA  1F92               	comf	(___aomod@dividend+5)& (0+255),f,b
  9884  004BFC  1F91               	comf	(___aomod@dividend+4)& (0+255),f,b
  9885  004BFE  1F90               	comf	(___aomod@dividend+3)& (0+255),f,b
  9886  004C00  1F8F               	comf	(___aomod@dividend+2)& (0+255),f,b
  9887  004C02  1F8E               	comf	(___aomod@dividend+1)& (0+255),f,b
  9888  004C04  6D8D               	negf	___aomod@dividend& (0+255),b
  9889  004C06  0E00               	movlw	0
  9890  004C08  238E               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  9891  004C0A  238F               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  9892  004C0C  2390               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  9893  004C0E  2391               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  9894  004C10  2392               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  9895  004C12  2393               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  9896  004C14  2394               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  9897  004C16                     
  9898                           ; BSR set to: 0
  9899  004C16  0E01               	movlw	1
  9900  004C18  6F9E               	movwf	___aomod@sign& (0+255),b
  9901  004C1A                     l7873:
  9902                           
  9903                           ; BSR set to: 0
  9904  004C1A  BF9C               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  9905  004C1C  EF14  F026         	goto	u9740
  9906  004C20  EF12  F026         	goto	u9741
  9907  004C24                     u9741:
  9908  004C24  EF24  F026         	goto	l7877
  9909  004C28                     u9740:
  9910  004C28                     
  9911                           ; BSR set to: 0
  9912  004C28  1F9C               	comf	(___aomod@divisor+7)& (0+255),f,b
  9913  004C2A  1F9B               	comf	(___aomod@divisor+6)& (0+255),f,b
  9914  004C2C  1F9A               	comf	(___aomod@divisor+5)& (0+255),f,b
  9915  004C2E  1F99               	comf	(___aomod@divisor+4)& (0+255),f,b
  9916  004C30  1F98               	comf	(___aomod@divisor+3)& (0+255),f,b
  9917  004C32  1F97               	comf	(___aomod@divisor+2)& (0+255),f,b
  9918  004C34  1F96               	comf	(___aomod@divisor+1)& (0+255),f,b
  9919  004C36  6D95               	negf	___aomod@divisor& (0+255),b
  9920  004C38  0E00               	movlw	0
  9921  004C3A  2396               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  9922  004C3C  2397               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  9923  004C3E  2398               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  9924  004C40  2399               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  9925  004C42  239A               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  9926  004C44  239B               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  9927  004C46  239C               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  9928  004C48                     l7877:
  9929                           
  9930                           ; BSR set to: 0
  9931  004C48  5195               	movf	___aomod@divisor& (0+255),w,b
  9932  004C4A  1196               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  9933  004C4C  1197               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  9934  004C4E  1198               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  9935  004C50  1199               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  9936  004C52  119A               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  9937  004C54  119B               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  9938  004C56  119C               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  9939  004C58  B4D8               	btfsc	status,2,c
  9940  004C5A  EF31  F026         	goto	u9751
  9941  004C5E  EF33  F026         	goto	u9750
  9942  004C62                     u9751:
  9943  004C62  EF7B  F026         	goto	l7893
  9944  004C66                     u9750:
  9945  004C66                     
  9946                           ; BSR set to: 0
  9947  004C66  0E01               	movlw	1
  9948  004C68  6F9D               	movwf	___aomod@counter& (0+255),b
  9949  004C6A  EF41  F026         	goto	l7883
  9950  004C6E                     l7881:
  9951                           
  9952                           ; BSR set to: 0
  9953  004C6E  90D8               	bcf	status,0,c
  9954  004C70  3795               	rlcf	___aomod@divisor& (0+255),f,b
  9955  004C72  3796               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  9956  004C74  3797               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  9957  004C76  3798               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  9958  004C78  3799               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  9959  004C7A  379A               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  9960  004C7C  379B               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  9961  004C7E  379C               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  9962  004C80  2B9D               	incf	___aomod@counter& (0+255),f,b
  9963  004C82                     l7883:
  9964                           
  9965                           ; BSR set to: 0
  9966  004C82  AF9C               	btfss	(___aomod@divisor+7)& (0+255),7,b
  9967  004C84  EF46  F026         	goto	u9761
  9968  004C88  EF48  F026         	goto	u9760
  9969  004C8C                     u9761:
  9970  004C8C  EF37  F026         	goto	l7881
  9971  004C90                     u9760:
  9972  004C90                     l7885:
  9973                           
  9974                           ; BSR set to: 0
  9975  004C90  5195               	movf	___aomod@divisor& (0+255),w,b
  9976  004C92  5D8D               	subwf	___aomod@dividend& (0+255),w,b
  9977  004C94  5196               	movf	(___aomod@divisor+1)& (0+255),w,b
  9978  004C96  598E               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  9979  004C98  5197               	movf	(___aomod@divisor+2)& (0+255),w,b
  9980  004C9A  598F               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  9981  004C9C  5198               	movf	(___aomod@divisor+3)& (0+255),w,b
  9982  004C9E  5990               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  9983  004CA0  5199               	movf	(___aomod@divisor+4)& (0+255),w,b
  9984  004CA2  5991               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  9985  004CA4  519A               	movf	(___aomod@divisor+5)& (0+255),w,b
  9986  004CA6  5992               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  9987  004CA8  519B               	movf	(___aomod@divisor+6)& (0+255),w,b
  9988  004CAA  5993               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  9989  004CAC  519C               	movf	(___aomod@divisor+7)& (0+255),w,b
  9990  004CAE  5994               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  9991  004CB0  A0D8               	btfss	status,0,c
  9992  004CB2  EF5D  F026         	goto	u9771
  9993  004CB6  EF5F  F026         	goto	u9770
  9994  004CBA                     u9771:
  9995  004CBA  EF6F  F026         	goto	l7889
  9996  004CBE                     u9770:
  9997  004CBE                     
  9998                           ; BSR set to: 0
  9999  004CBE  5195               	movf	___aomod@divisor& (0+255),w,b
 10000  004CC0  5F8D               	subwf	___aomod@dividend& (0+255),f,b
 10001  004CC2  5196               	movf	(___aomod@divisor+1)& (0+255),w,b
 10002  004CC4  5B8E               	subwfb	(___aomod@dividend+1)& (0+255),f,b
 10003  004CC6  5197               	movf	(___aomod@divisor+2)& (0+255),w,b
 10004  004CC8  5B8F               	subwfb	(___aomod@dividend+2)& (0+255),f,b
 10005  004CCA  5198               	movf	(___aomod@divisor+3)& (0+255),w,b
 10006  004CCC  5B90               	subwfb	(___aomod@dividend+3)& (0+255),f,b
 10007  004CCE  5199               	movf	(___aomod@divisor+4)& (0+255),w,b
 10008  004CD0  5B91               	subwfb	(___aomod@dividend+4)& (0+255),f,b
 10009  004CD2  519A               	movf	(___aomod@divisor+5)& (0+255),w,b
 10010  004CD4  5B92               	subwfb	(___aomod@dividend+5)& (0+255),f,b
 10011  004CD6  519B               	movf	(___aomod@divisor+6)& (0+255),w,b
 10012  004CD8  5B93               	subwfb	(___aomod@dividend+6)& (0+255),f,b
 10013  004CDA  519C               	movf	(___aomod@divisor+7)& (0+255),w,b
 10014  004CDC  5B94               	subwfb	(___aomod@dividend+7)& (0+255),f,b
 10015  004CDE                     l7889:
 10016                           
 10017                           ; BSR set to: 0
 10018  004CDE  90D8               	bcf	status,0,c
 10019  004CE0  339C               	rrcf	(___aomod@divisor+7)& (0+255),f,b
 10020  004CE2  339B               	rrcf	(___aomod@divisor+6)& (0+255),f,b
 10021  004CE4  339A               	rrcf	(___aomod@divisor+5)& (0+255),f,b
 10022  004CE6  3399               	rrcf	(___aomod@divisor+4)& (0+255),f,b
 10023  004CE8  3398               	rrcf	(___aomod@divisor+3)& (0+255),f,b
 10024  004CEA  3397               	rrcf	(___aomod@divisor+2)& (0+255),f,b
 10025  004CEC  3396               	rrcf	(___aomod@divisor+1)& (0+255),f,b
 10026  004CEE  3395               	rrcf	___aomod@divisor& (0+255),f,b
 10027  004CF0                     
 10028                           ; BSR set to: 0
 10029  004CF0  2F9D               	decfsz	___aomod@counter& (0+255),f,b
 10030  004CF2  EF48  F026         	goto	l7885
 10031  004CF6                     l7893:
 10032                           
 10033                           ; BSR set to: 0
 10034  004CF6  519E               	movf	___aomod@sign& (0+255),w,b
 10035  004CF8  B4D8               	btfsc	status,2,c
 10036  004CFA  EF81  F026         	goto	u9781
 10037  004CFE  EF83  F026         	goto	u9780
 10038  004D02                     u9781:
 10039  004D02  EF93  F026         	goto	l7897
 10040  004D06                     u9780:
 10041  004D06                     
 10042                           ; BSR set to: 0
 10043  004D06  1F94               	comf	(___aomod@dividend+7)& (0+255),f,b
 10044  004D08  1F93               	comf	(___aomod@dividend+6)& (0+255),f,b
 10045  004D0A  1F92               	comf	(___aomod@dividend+5)& (0+255),f,b
 10046  004D0C  1F91               	comf	(___aomod@dividend+4)& (0+255),f,b
 10047  004D0E  1F90               	comf	(___aomod@dividend+3)& (0+255),f,b
 10048  004D10  1F8F               	comf	(___aomod@dividend+2)& (0+255),f,b
 10049  004D12  1F8E               	comf	(___aomod@dividend+1)& (0+255),f,b
 10050  004D14  6D8D               	negf	___aomod@dividend& (0+255),b
 10051  004D16  0E00               	movlw	0
 10052  004D18  238E               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 10053  004D1A  238F               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 10054  004D1C  2390               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 10055  004D1E  2391               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 10056  004D20  2392               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 10057  004D22  2393               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 10058  004D24  2394               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 10059  004D26                     l7897:
 10060                           
 10061                           ; BSR set to: 0
 10062  004D26  C08D  F08D         	movff	___aomod@dividend,?___aomod
 10063  004D2A  C08E  F08E         	movff	___aomod@dividend+1,?___aomod+1
 10064  004D2E  C08F  F08F         	movff	___aomod@dividend+2,?___aomod+2
 10065  004D32  C090  F090         	movff	___aomod@dividend+3,?___aomod+3
 10066  004D36  C091  F091         	movff	___aomod@dividend+4,?___aomod+4
 10067  004D3A  C092  F092         	movff	___aomod@dividend+5,?___aomod+5
 10068  004D3E  C093  F093         	movff	___aomod@dividend+6,?___aomod+6
 10069  004D42  C094  F094         	movff	___aomod@dividend+7,?___aomod+7
 10070  004D46                     
 10071                           ; BSR set to: 0
 10072  004D46  0012               	return		;funcret
 10073  004D48                     __end_of___aomod:
 10074                           	opt callstack 0
 10075                           
 10076 ;; *************** function ___aodiv *****************
 10077 ;; Defined at:
 10078 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 10079 ;; Parameters:    Size  Location     Type
 10080 ;;  dividend        8   45[BANK0 ] long long 
 10081 ;;  divisor         8   53[BANK0 ] long long 
 10082 ;; Auto vars:     Size  Location     Type
 10083 ;;  quotient        8   63[BANK0 ] long long 
 10084 ;;  sign            1   62[BANK0 ] unsigned char 
 10085 ;;  counter         1   61[BANK0 ] unsigned char 
 10086 ;; Return value:  Size  Location     Type
 10087 ;;                  8   45[BANK0 ] long long 
 10088 ;; Registers used:
 10089 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10090 ;; Tracked objects:
 10091 ;;		On entry : 0/0
 10092 ;;		On exit  : 0/0
 10093 ;;		Unchanged: 0/0
 10094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10095 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10096 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10098 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10099 ;;Total ram usage:       26 bytes
 10100 ;; Hardware stack levels used:    1
 10101 ;; Hardware stack levels required when called:   13
 10102 ;; This function calls:
 10103 ;;		Nothing
 10104 ;; This function is called by:
 10105 ;;		_dtoa
 10106 ;; This function uses a non-reentrant model
 10107 ;;
 10108                           
 10109                           	psect	text25
 10110  0045C8                     __ptext25:
 10111                           	opt callstack 0
 10112  0045C8                     ___aodiv:
 10113                           	opt callstack 12
 10114  0045C8  0E00               	movlw	0
 10115  0045CA  0100               	movlb	0	; () banked
 10116  0045CC  6F9E               	movwf	___aodiv@sign& (0+255),b
 10117  0045CE                     
 10118                           ; BSR set to: 0
 10119  0045CE  BF9C               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
 10120  0045D0  EFEE  F022         	goto	u9660
 10121  0045D4  EFEC  F022         	goto	u9661
 10122  0045D8                     u9661:
 10123  0045D8  EF00  F023         	goto	l7829
 10124  0045DC                     u9660:
 10125  0045DC                     
 10126                           ; BSR set to: 0
 10127  0045DC  1F9C               	comf	(___aodiv@divisor+7)& (0+255),f,b
 10128  0045DE  1F9B               	comf	(___aodiv@divisor+6)& (0+255),f,b
 10129  0045E0  1F9A               	comf	(___aodiv@divisor+5)& (0+255),f,b
 10130  0045E2  1F99               	comf	(___aodiv@divisor+4)& (0+255),f,b
 10131  0045E4  1F98               	comf	(___aodiv@divisor+3)& (0+255),f,b
 10132  0045E6  1F97               	comf	(___aodiv@divisor+2)& (0+255),f,b
 10133  0045E8  1F96               	comf	(___aodiv@divisor+1)& (0+255),f,b
 10134  0045EA  6D95               	negf	___aodiv@divisor& (0+255),b
 10135  0045EC  0E00               	movlw	0
 10136  0045EE  2396               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 10137  0045F0  2397               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 10138  0045F2  2398               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 10139  0045F4  2399               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 10140  0045F6  239A               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 10141  0045F8  239B               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 10142  0045FA  239C               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 10143  0045FC                     
 10144                           ; BSR set to: 0
 10145  0045FC  0E01               	movlw	1
 10146  0045FE  6F9E               	movwf	___aodiv@sign& (0+255),b
 10147  004600                     l7829:
 10148                           
 10149                           ; BSR set to: 0
 10150  004600  BF94               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
 10151  004602  EF07  F023         	goto	u9670
 10152  004606  EF05  F023         	goto	u9671
 10153  00460A                     u9671:
 10154  00460A  EF19  F023         	goto	l7835
 10155  00460E                     u9670:
 10156  00460E                     
 10157                           ; BSR set to: 0
 10158  00460E  1F94               	comf	(___aodiv@dividend+7)& (0+255),f,b
 10159  004610  1F93               	comf	(___aodiv@dividend+6)& (0+255),f,b
 10160  004612  1F92               	comf	(___aodiv@dividend+5)& (0+255),f,b
 10161  004614  1F91               	comf	(___aodiv@dividend+4)& (0+255),f,b
 10162  004616  1F90               	comf	(___aodiv@dividend+3)& (0+255),f,b
 10163  004618  1F8F               	comf	(___aodiv@dividend+2)& (0+255),f,b
 10164  00461A  1F8E               	comf	(___aodiv@dividend+1)& (0+255),f,b
 10165  00461C  6D8D               	negf	___aodiv@dividend& (0+255),b
 10166  00461E  0E00               	movlw	0
 10167  004620  238E               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 10168  004622  238F               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 10169  004624  2390               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 10170  004626  2391               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 10171  004628  2392               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 10172  00462A  2393               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 10173  00462C  2394               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 10174  00462E                     
 10175                           ; BSR set to: 0
 10176  00462E  0E01               	movlw	1
 10177  004630  1B9E               	xorwf	___aodiv@sign& (0+255),f,b
 10178  004632                     l7835:
 10179                           
 10180                           ; BSR set to: 0
 10181  004632  EE20  F09F         	lfsr	2,___aodiv@quotient
 10182  004636  0E07               	movlw	7
 10183  004638                     u9681:
 10184  004638  6ADE               	clrf	postinc2,c
 10185  00463A  06E8               	decf	wreg,f,c
 10186  00463C  E2FD               	bc	u9681
 10187  00463E                     
 10188                           ; BSR set to: 0
 10189  00463E  5195               	movf	___aodiv@divisor& (0+255),w,b
 10190  004640  1196               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 10191  004642  1197               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 10192  004644  1198               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 10193  004646  1199               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 10194  004648  119A               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 10195  00464A  119B               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 10196  00464C  119C               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 10197  00464E  B4D8               	btfsc	status,2,c
 10198  004650  EF2C  F023         	goto	u9691
 10199  004654  EF2E  F023         	goto	u9690
 10200  004658                     u9691:
 10201  004658  EF80  F023         	goto	l7857
 10202  00465C                     u9690:
 10203  00465C                     
 10204                           ; BSR set to: 0
 10205  00465C  0E01               	movlw	1
 10206  00465E  6F9D               	movwf	___aodiv@counter& (0+255),b
 10207  004660  EF3C  F023         	goto	l7843
 10208  004664                     l7841:
 10209                           
 10210                           ; BSR set to: 0
 10211  004664  90D8               	bcf	status,0,c
 10212  004666  3795               	rlcf	___aodiv@divisor& (0+255),f,b
 10213  004668  3796               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 10214  00466A  3797               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 10215  00466C  3798               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 10216  00466E  3799               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 10217  004670  379A               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 10218  004672  379B               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 10219  004674  379C               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 10220  004676  2B9D               	incf	___aodiv@counter& (0+255),f,b
 10221  004678                     l7843:
 10222                           
 10223                           ; BSR set to: 0
 10224  004678  AF9C               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 10225  00467A  EF41  F023         	goto	u9701
 10226  00467E  EF43  F023         	goto	u9700
 10227  004682                     u9701:
 10228  004682  EF32  F023         	goto	l7841
 10229  004686                     u9700:
 10230  004686                     l7845:
 10231                           
 10232                           ; BSR set to: 0
 10233  004686  90D8               	bcf	status,0,c
 10234  004688  379F               	rlcf	___aodiv@quotient& (0+255),f,b
 10235  00468A  37A0               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 10236  00468C  37A1               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 10237  00468E  37A2               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 10238  004690  37A3               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 10239  004692  37A4               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 10240  004694  37A5               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 10241  004696  37A6               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 10242  004698                     
 10243                           ; BSR set to: 0
 10244  004698  5195               	movf	___aodiv@divisor& (0+255),w,b
 10245  00469A  5D8D               	subwf	___aodiv@dividend& (0+255),w,b
 10246  00469C  5196               	movf	(___aodiv@divisor+1)& (0+255),w,b
 10247  00469E  598E               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 10248  0046A0  5197               	movf	(___aodiv@divisor+2)& (0+255),w,b
 10249  0046A2  598F               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 10250  0046A4  5198               	movf	(___aodiv@divisor+3)& (0+255),w,b
 10251  0046A6  5990               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 10252  0046A8  5199               	movf	(___aodiv@divisor+4)& (0+255),w,b
 10253  0046AA  5991               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 10254  0046AC  519A               	movf	(___aodiv@divisor+5)& (0+255),w,b
 10255  0046AE  5992               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 10256  0046B0  519B               	movf	(___aodiv@divisor+6)& (0+255),w,b
 10257  0046B2  5993               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 10258  0046B4  519C               	movf	(___aodiv@divisor+7)& (0+255),w,b
 10259  0046B6  5994               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 10260  0046B8  A0D8               	btfss	status,0,c
 10261  0046BA  EF61  F023         	goto	u9711
 10262  0046BE  EF63  F023         	goto	u9710
 10263  0046C2                     u9711:
 10264  0046C2  EF74  F023         	goto	l7853
 10265  0046C6                     u9710:
 10266  0046C6                     
 10267                           ; BSR set to: 0
 10268  0046C6  5195               	movf	___aodiv@divisor& (0+255),w,b
 10269  0046C8  5F8D               	subwf	___aodiv@dividend& (0+255),f,b
 10270  0046CA  5196               	movf	(___aodiv@divisor+1)& (0+255),w,b
 10271  0046CC  5B8E               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 10272  0046CE  5197               	movf	(___aodiv@divisor+2)& (0+255),w,b
 10273  0046D0  5B8F               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 10274  0046D2  5198               	movf	(___aodiv@divisor+3)& (0+255),w,b
 10275  0046D4  5B90               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 10276  0046D6  5199               	movf	(___aodiv@divisor+4)& (0+255),w,b
 10277  0046D8  5B91               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 10278  0046DA  519A               	movf	(___aodiv@divisor+5)& (0+255),w,b
 10279  0046DC  5B92               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 10280  0046DE  519B               	movf	(___aodiv@divisor+6)& (0+255),w,b
 10281  0046E0  5B93               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 10282  0046E2  519C               	movf	(___aodiv@divisor+7)& (0+255),w,b
 10283  0046E4  5B94               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 10284  0046E6                     
 10285                           ; BSR set to: 0
 10286  0046E6  819F               	bsf	___aodiv@quotient& (0+255),0,b
 10287  0046E8                     l7853:
 10288                           
 10289                           ; BSR set to: 0
 10290  0046E8  90D8               	bcf	status,0,c
 10291  0046EA  339C               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 10292  0046EC  339B               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 10293  0046EE  339A               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 10294  0046F0  3399               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 10295  0046F2  3398               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 10296  0046F4  3397               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 10297  0046F6  3396               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 10298  0046F8  3395               	rrcf	___aodiv@divisor& (0+255),f,b
 10299  0046FA                     
 10300                           ; BSR set to: 0
 10301  0046FA  2F9D               	decfsz	___aodiv@counter& (0+255),f,b
 10302  0046FC  EF43  F023         	goto	l7845
 10303  004700                     l7857:
 10304                           
 10305                           ; BSR set to: 0
 10306  004700  519E               	movf	___aodiv@sign& (0+255),w,b
 10307  004702  B4D8               	btfsc	status,2,c
 10308  004704  EF86  F023         	goto	u9721
 10309  004708  EF88  F023         	goto	u9720
 10310  00470C                     u9721:
 10311  00470C  EF98  F023         	goto	l7861
 10312  004710                     u9720:
 10313  004710                     
 10314                           ; BSR set to: 0
 10315  004710  1FA6               	comf	(___aodiv@quotient+7)& (0+255),f,b
 10316  004712  1FA5               	comf	(___aodiv@quotient+6)& (0+255),f,b
 10317  004714  1FA4               	comf	(___aodiv@quotient+5)& (0+255),f,b
 10318  004716  1FA3               	comf	(___aodiv@quotient+4)& (0+255),f,b
 10319  004718  1FA2               	comf	(___aodiv@quotient+3)& (0+255),f,b
 10320  00471A  1FA1               	comf	(___aodiv@quotient+2)& (0+255),f,b
 10321  00471C  1FA0               	comf	(___aodiv@quotient+1)& (0+255),f,b
 10322  00471E  6D9F               	negf	___aodiv@quotient& (0+255),b
 10323  004720  0E00               	movlw	0
 10324  004722  23A0               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 10325  004724  23A1               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 10326  004726  23A2               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 10327  004728  23A3               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 10328  00472A  23A4               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 10329  00472C  23A5               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 10330  00472E  23A6               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 10331  004730                     l7861:
 10332                           
 10333                           ; BSR set to: 0
 10334  004730  C09F  F08D         	movff	___aodiv@quotient,?___aodiv
 10335  004734  C0A0  F08E         	movff	___aodiv@quotient+1,?___aodiv+1
 10336  004738  C0A1  F08F         	movff	___aodiv@quotient+2,?___aodiv+2
 10337  00473C  C0A2  F090         	movff	___aodiv@quotient+3,?___aodiv+3
 10338  004740  C0A3  F091         	movff	___aodiv@quotient+4,?___aodiv+4
 10339  004744  C0A4  F092         	movff	___aodiv@quotient+5,?___aodiv+5
 10340  004748  C0A5  F093         	movff	___aodiv@quotient+6,?___aodiv+6
 10341  00474C  C0A6  F094         	movff	___aodiv@quotient+7,?___aodiv+7
 10342  004750                     
 10343                           ; BSR set to: 0
 10344  004750  0012               	return		;funcret
 10345  004752                     __end_of___aodiv:
 10346                           	opt callstack 0
 10347                           
 10348 ;; *************** function _ctoa *****************
 10349 ;; Defined at:
 10350 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 10351 ;; Parameters:    Size  Location     Type
 10352 ;;  fp              2   74[BANK0 ] PTR struct _IO_FILE
 10353 ;;		 -> vsnprintf@f(6), NULL(0), 
 10354 ;;  c               1   76[BANK0 ] unsigned char 
 10355 ;; Auto vars:     Size  Location     Type
 10356 ;;  w               2   77[BANK0 ] int 
 10357 ;;  l               2    0        int 
 10358 ;; Return value:  Size  Location     Type
 10359 ;;                  2   74[BANK0 ] int 
 10360 ;; Registers used:
 10361 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10362 ;; Tracked objects:
 10363 ;;		On entry : 0/0
 10364 ;;		On exit  : 0/0
 10365 ;;		Unchanged: 0/0
 10366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10367 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10368 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10370 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10371 ;;Total ram usage:        5 bytes
 10372 ;; Hardware stack levels used:    1
 10373 ;; Hardware stack levels required when called:   18
 10374 ;; This function calls:
 10375 ;;		_pad
 10376 ;; This function is called by:
 10377 ;;		_vfpfcnvrt
 10378 ;; This function uses a non-reentrant model
 10379 ;;
 10380                           
 10381                           	psect	text26
 10382  005E7A                     __ptext26:
 10383                           	opt callstack 0
 10384  005E7A                     _ctoa:
 10385                           	opt callstack 8
 10386  005E7A                     
 10387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 10388  005E7A  0100               	movlb	0	; () banked
 10389  005E7C  51B9               	movf	_width& (0+255),w,b
 10390  005E7E  11BA               	iorwf	(_width+1)& (0+255),w,b
 10391  005E80  A4D8               	btfss	status,2,c
 10392  005E82  EF45  F02F         	goto	u10451
 10393  005E86  EF47  F02F         	goto	u10450
 10394  005E8A                     u10451:
 10395  005E8A  EF4D  F02F         	goto	l8329
 10396  005E8E                     u10450:
 10397  005E8E                     
 10398                           ; BSR set to: 0
 10399  005E8E  C0B9  F0AD         	movff	_width,ctoa@w
 10400  005E92  C0BA  F0AE         	movff	_width+1,ctoa@w+1
 10401  005E96  EF53  F02F         	goto	l8331
 10402  005E9A                     l8329:
 10403                           
 10404                           ; BSR set to: 0
 10405  005E9A  0EFF               	movlw	255
 10406  005E9C  25B9               	addwf	_width& (0+255),w,b
 10407  005E9E  6FAD               	movwf	ctoa@w& (0+255),b
 10408  005EA0  0EFF               	movlw	255
 10409  005EA2  21BA               	addwfc	(_width+1)& (0+255),w,b
 10410  005EA4  6FAE               	movwf	(ctoa@w+1)& (0+255),b
 10411  005EA6                     l8331:
 10412                           
 10413                           ; BSR set to: 0
 10414                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 10415  005EA6  C0AC  F178         	movff	ctoa@c,_dbuf
 10416  005EAA                     
 10417                           ; BSR set to: 0
 10418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 10419  005EAA  0E00               	movlw	0
 10420  005EAC  0101               	movlb	1	; () banked
 10421  005EAE  6F79               	movwf	(_dbuf+1)& (0+255),b
 10422  005EB0                     
 10423                           ; BSR set to: 1
 10424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 10425  005EB0  C0AA  F09F         	movff	ctoa@fp,pad@fp
 10426  005EB4  C0AB  F0A0         	movff	ctoa@fp+1,pad@fp+1
 10427  005EB8  0E78               	movlw	low _dbuf
 10428  005EBA  0100               	movlb	0	; () banked
 10429  005EBC  6FA1               	movwf	pad@buf& (0+255),b
 10430  005EBE  0E01               	movlw	high _dbuf
 10431  005EC0  6FA2               	movwf	(pad@buf+1)& (0+255),b
 10432  005EC2  C0AD  F0A3         	movff	ctoa@w,pad@p
 10433  005EC6  C0AE  F0A4         	movff	ctoa@w+1,pad@p+1
 10434  005ECA  EC17  F02C         	call	_pad	;wreg free
 10435  005ECE  C09F  F0AA         	movff	?_pad,?_ctoa
 10436  005ED2  C0A0  F0AB         	movff	?_pad+1,?_ctoa+1
 10437  005ED6  0012               	return		;funcret
 10438  005ED8                     __end_of_ctoa:
 10439                           	opt callstack 0
 10440                           
 10441 ;; *************** function _pad *****************
 10442 ;; Defined at:
 10443 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 10444 ;; Parameters:    Size  Location     Type
 10445 ;;  fp              2   63[BANK0 ] PTR struct _IO_FILE
 10446 ;;		 -> vsnprintf@f(6), NULL(0), 
 10447 ;;  buf             2   65[BANK0 ] PTR unsigned char 
 10448 ;;		 -> dbuf(32), 
 10449 ;;  p               2   67[BANK0 ] int 
 10450 ;; Auto vars:     Size  Location     Type
 10451 ;;  w               2   72[BANK0 ] int 
 10452 ;;  i               2   70[BANK0 ] int 
 10453 ;; Return value:  Size  Location     Type
 10454 ;;                  2   63[BANK0 ] int 
 10455 ;; Registers used:
 10456 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10457 ;; Tracked objects:
 10458 ;;		On entry : 0/0
 10459 ;;		On exit  : 0/0
 10460 ;;		Unchanged: 0/0
 10461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10462 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10463 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10464 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10465 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10466 ;;Total ram usage:       11 bytes
 10467 ;; Hardware stack levels used:    1
 10468 ;; Hardware stack levels required when called:   17
 10469 ;; This function calls:
 10470 ;;		_fputc
 10471 ;;		_fputs
 10472 ;;		_strlen
 10473 ;; This function is called by:
 10474 ;;		_ctoa
 10475 ;;		_dtoa
 10476 ;;		_otoa
 10477 ;;		_utoa
 10478 ;;		_xtoa
 10479 ;; This function uses a non-reentrant model
 10480 ;;
 10481                           
 10482                           	psect	text27
 10483  00582E                     __ptext27:
 10484                           	opt callstack 0
 10485  00582E                     _pad:
 10486                           	opt callstack 8
 10487  00582E                     
 10488                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 10489  00582E  0100               	movlb	0	; () banked
 10490  005830  A1BD               	btfss	_flags& (0+255),0,b
 10491  005832  EF1D  F02C         	goto	u9521
 10492  005836  EF1F  F02C         	goto	u9520
 10493  00583A                     u9521:
 10494  00583A  EF29  F02C         	goto	l7771
 10495  00583E                     u9520:
 10496  00583E                     
 10497                           ; BSR set to: 0
 10498                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 10499  00583E  C0A1  F098         	movff	pad@buf,fputs@s
 10500  005842  C0A2  F099         	movff	pad@buf+1,fputs@s+1
 10501  005846  C09F  F09A         	movff	pad@fp,fputs@fp
 10502  00584A  C0A0  F09B         	movff	pad@fp+1,fputs@fp+1
 10503  00584E  EC92  F030         	call	_fputs	;wreg free
 10504  005852                     l7771:
 10505                           
 10506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 10507  005852  0100               	movlb	0	; () banked
 10508  005854  BFA4               	btfsc	(pad@p+1)& (0+255),7,b
 10509  005856  EF2F  F02C         	goto	u9531
 10510  00585A  EF31  F02C         	goto	u9530
 10511  00585E                     u9531:
 10512  00585E  EF37  F02C         	goto	l7775
 10513  005862                     u9530:
 10514  005862                     
 10515                           ; BSR set to: 0
 10516  005862  C0A3  F0A8         	movff	pad@p,pad@w
 10517  005866  C0A4  F0A9         	movff	pad@p+1,pad@w+1
 10518  00586A  EF3B  F02C         	goto	l640
 10519  00586E                     l7775:
 10520                           
 10521                           ; BSR set to: 0
 10522  00586E  0E00               	movlw	0
 10523  005870  6FA9               	movwf	(pad@w+1)& (0+255),b
 10524  005872  0E00               	movlw	0
 10525  005874  6FA8               	movwf	pad@w& (0+255),b
 10526  005876                     l640:
 10527                           
 10528                           ; BSR set to: 0
 10529                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 10530  005876  0E00               	movlw	0
 10531  005878  6FA7               	movwf	(pad@i+1)& (0+255),b
 10532  00587A  0E00               	movlw	0
 10533  00587C  6FA6               	movwf	pad@i& (0+255),b
 10534                           
 10535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10536  00587E  EF4E  F02C         	goto	l7781
 10537  005882                     l7777:
 10538                           
 10539                           ; BSR set to: 0
 10540                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 10541  005882  0E00               	movlw	0
 10542  005884  6F90               	movwf	(fputc@c+1)& (0+255),b
 10543  005886  0E20               	movlw	32
 10544  005888  6F8F               	movwf	fputc@c& (0+255),b
 10545  00588A  C09F  F091         	movff	pad@fp,fputc@fp
 10546  00588E  C0A0  F092         	movff	pad@fp+1,fputc@fp+1
 10547  005892  ECB1  F02B         	call	_fputc	;wreg free
 10548  005896                     
 10549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 10550  005896  0100               	movlb	0	; () banked
 10551  005898  4BA6               	infsnz	pad@i& (0+255),f,b
 10552  00589A  2BA7               	incf	(pad@i+1)& (0+255),f,b
 10553  00589C                     l7781:
 10554                           
 10555                           ; BSR set to: 0
 10556                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10557  00589C  51A8               	movf	pad@w& (0+255),w,b
 10558  00589E  5DA6               	subwf	pad@i& (0+255),w,b
 10559  0058A0  51A7               	movf	(pad@i+1)& (0+255),w,b
 10560  0058A2  0A80               	xorlw	128
 10561  0058A4  6FA5               	movwf	??_pad& (0+255),b
 10562  0058A6  51A9               	movf	(pad@w+1)& (0+255),w,b
 10563  0058A8  0A80               	xorlw	128
 10564  0058AA  59A5               	subwfb	??_pad& (0+255),w,b
 10565  0058AC  A0D8               	btfss	status,0,c
 10566  0058AE  EF5B  F02C         	goto	u9541
 10567  0058B2  EF5D  F02C         	goto	u9540
 10568  0058B6                     u9541:
 10569  0058B6  EF41  F02C         	goto	l7777
 10570  0058BA                     u9540:
 10571  0058BA                     
 10572                           ; BSR set to: 0
 10573                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 10574  0058BA  B1BD               	btfsc	_flags& (0+255),0,b
 10575  0058BC  EF62  F02C         	goto	u9551
 10576  0058C0  EF64  F02C         	goto	u9550
 10577  0058C4                     u9551:
 10578  0058C4  EF6E  F02C         	goto	l7785
 10579  0058C8                     u9550:
 10580  0058C8                     
 10581                           ; BSR set to: 0
 10582                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 10583  0058C8  C0A1  F098         	movff	pad@buf,fputs@s
 10584  0058CC  C0A2  F099         	movff	pad@buf+1,fputs@s+1
 10585  0058D0  C09F  F09A         	movff	pad@fp,fputs@fp
 10586  0058D4  C0A0  F09B         	movff	pad@fp+1,fputs@fp+1
 10587  0058D8  EC92  F030         	call	_fputs	;wreg free
 10588  0058DC                     l7785:
 10589                           
 10590                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 10591  0058DC  C0A1  F08D         	movff	pad@buf,strlen@s
 10592  0058E0  C0A2  F08E         	movff	pad@buf+1,strlen@s+1
 10593  0058E4  EC17  F032         	call	_strlen	;wreg free
 10594  0058E8  0100               	movlb	0	; () banked
 10595  0058EA  51A8               	movf	pad@w& (0+255),w,b
 10596  0058EC  258D               	addwf	?_strlen& (0+255),w,b
 10597  0058EE  6F9F               	movwf	?_pad& (0+255),b
 10598  0058F0  51A9               	movf	(pad@w+1)& (0+255),w,b
 10599  0058F2  218E               	addwfc	(?_strlen+1)& (0+255),w,b
 10600  0058F4  6FA0               	movwf	(?_pad+1)& (0+255),b
 10601  0058F6                     
 10602                           ; BSR set to: 0
 10603  0058F6  0012               	return		;funcret
 10604  0058F8                     __end_of_pad:
 10605                           	opt callstack 0
 10606                           
 10607 ;; *************** function _strlen *****************
 10608 ;; Defined at:
 10609 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 10610 ;; Parameters:    Size  Location     Type
 10611 ;;  s               2   45[BANK0 ] PTR const unsigned char 
 10612 ;;		 -> ?_snprintf(2), ?_printf(2), stoa@nuls(7), dbuf(32), 
 10613 ;; Auto vars:     Size  Location     Type
 10614 ;;  a               2   47[BANK0 ] PTR const unsigned char 
 10615 ;;		 -> ?_snprintf(2), ?_printf(2), stoa@nuls(7), dbuf(32), 
 10616 ;; Return value:  Size  Location     Type
 10617 ;;                  2   45[BANK0 ] unsigned int 
 10618 ;; Registers used:
 10619 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10620 ;; Tracked objects:
 10621 ;;		On entry : 0/0
 10622 ;;		On exit  : 0/0
 10623 ;;		Unchanged: 0/0
 10624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10625 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10626 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10628 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10629 ;;Total ram usage:        4 bytes
 10630 ;; Hardware stack levels used:    1
 10631 ;; Hardware stack levels required when called:   13
 10632 ;; This function calls:
 10633 ;;		Nothing
 10634 ;; This function is called by:
 10635 ;;		_pad
 10636 ;;		_stoa
 10637 ;; This function uses a non-reentrant model
 10638 ;;
 10639                           
 10640                           	psect	text28
 10641  00642E                     __ptext28:
 10642                           	opt callstack 0
 10643  00642E                     _strlen:
 10644                           	opt callstack 11
 10645  00642E  C08D  F08F         	movff	strlen@s,strlen@a
 10646  006432  C08E  F090         	movff	strlen@s+1,strlen@a+1
 10647  006436  EF20  F032         	goto	l7427
 10648  00643A                     l7425:
 10649  00643A  0100               	movlb	0	; () banked
 10650  00643C  4B8D               	infsnz	strlen@s& (0+255),f,b
 10651  00643E  2B8E               	incf	(strlen@s+1)& (0+255),f,b
 10652  006440                     l7427:
 10653  006440  C08D  FFD9         	movff	strlen@s,fsr2l
 10654  006444  C08E  FFDA         	movff	strlen@s+1,fsr2h
 10655  006448  50DF               	movf	indf2,w,c
 10656  00644A  A4D8               	btfss	status,2,c
 10657  00644C  EF2A  F032         	goto	u8731
 10658  006450  EF2C  F032         	goto	u8730
 10659  006454                     u8731:
 10660  006454  EF1D  F032         	goto	l7425
 10661  006458                     u8730:
 10662  006458  0100               	movlb	0	; () banked
 10663  00645A  518F               	movf	strlen@a& (0+255),w,b
 10664  00645C  5D8D               	subwf	strlen@s& (0+255),w,b
 10665  00645E  6F8D               	movwf	?_strlen& (0+255),b
 10666  006460  5190               	movf	(strlen@a+1)& (0+255),w,b
 10667  006462  598E               	subwfb	(strlen@s+1)& (0+255),w,b
 10668  006464  6F8E               	movwf	(?_strlen+1)& (0+255),b
 10669  006466                     
 10670                           ; BSR set to: 0
 10671  006466  0012               	return		;funcret
 10672  006468                     __end_of_strlen:
 10673                           	opt callstack 0
 10674                           
 10675 ;; *************** function _fputs *****************
 10676 ;; Defined at:
 10677 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 10678 ;; Parameters:    Size  Location     Type
 10679 ;;  s               2   56[BANK0 ] PTR const unsigned char 
 10680 ;;		 -> dbuf(32), 
 10681 ;;  fp              2   58[BANK0 ] PTR struct _IO_FILE
 10682 ;;		 -> vsnprintf@f(6), NULL(0), 
 10683 ;; Auto vars:     Size  Location     Type
 10684 ;;  i               2   61[BANK0 ] int 
 10685 ;;  c               1   60[BANK0 ] unsigned char 
 10686 ;; Return value:  Size  Location     Type
 10687 ;;                  2   56[BANK0 ] int 
 10688 ;; Registers used:
 10689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10690 ;; Tracked objects:
 10691 ;;		On entry : 0/0
 10692 ;;		On exit  : 0/0
 10693 ;;		Unchanged: 0/0
 10694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10695 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10696 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10698 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10699 ;;Total ram usage:        7 bytes
 10700 ;; Hardware stack levels used:    1
 10701 ;; Hardware stack levels required when called:   16
 10702 ;; This function calls:
 10703 ;;		_fputc
 10704 ;; This function is called by:
 10705 ;;		_pad
 10706 ;; This function uses a non-reentrant model
 10707 ;;
 10708                           
 10709                           	psect	text29
 10710  006124                     __ptext29:
 10711                           	opt callstack 0
 10712  006124                     _fputs:
 10713                           	opt callstack 8
 10714  006124  0E00               	movlw	0
 10715  006126  0100               	movlb	0	; () banked
 10716  006128  6F9E               	movwf	(fputs@i+1)& (0+255),b
 10717  00612A  0E00               	movlw	0
 10718  00612C  6F9D               	movwf	fputs@i& (0+255),b
 10719  00612E  EFA5  F030         	goto	l7421
 10720  006132                     l7417:
 10721                           
 10722                           ; BSR set to: 0
 10723  006132  C09C  F08F         	movff	fputs@c,fputc@c
 10724  006136  6B90               	clrf	(fputc@c+1)& (0+255),b
 10725  006138  C09A  F091         	movff	fputs@fp,fputc@fp
 10726  00613C  C09B  F092         	movff	fputs@fp+1,fputc@fp+1
 10727  006140  ECB1  F02B         	call	_fputc	;wreg free
 10728  006144  0100               	movlb	0	; () banked
 10729  006146  4B9D               	infsnz	fputs@i& (0+255),f,b
 10730  006148  2B9E               	incf	(fputs@i+1)& (0+255),f,b
 10731  00614A                     l7421:
 10732                           
 10733                           ; BSR set to: 0
 10734  00614A  519D               	movf	fputs@i& (0+255),w,b
 10735  00614C  2598               	addwf	fputs@s& (0+255),w,b
 10736  00614E  6ED9               	movwf	fsr2l,c
 10737  006150  519E               	movf	(fputs@i+1)& (0+255),w,b
 10738  006152  2199               	addwfc	(fputs@s+1)& (0+255),w,b
 10739  006154  6EDA               	movwf	fsr2h,c
 10740  006156  50DF               	movf	indf2,w,c
 10741  006158  6F9C               	movwf	fputs@c& (0+255),b
 10742  00615A  519C               	movf	fputs@c& (0+255),w,b
 10743  00615C  A4D8               	btfss	status,2,c
 10744  00615E  EFB3  F030         	goto	u8721
 10745  006162  EFB5  F030         	goto	u8720
 10746  006166                     u8721:
 10747  006166  EF99  F030         	goto	l7417
 10748  00616A                     u8720:
 10749  00616A                     
 10750                           ; BSR set to: 0
 10751  00616A  0012               	return		;funcret
 10752  00616C                     __end_of_fputs:
 10753                           	opt callstack 0
 10754                           
 10755 ;; *************** function _fputc *****************
 10756 ;; Defined at:
 10757 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 10758 ;; Parameters:    Size  Location     Type
 10759 ;;  c               2   47[BANK0 ] int 
 10760 ;;  fp              2   49[BANK0 ] PTR struct _IO_FILE
 10761 ;;		 -> vsnprintf@f(6), NULL(0), 
 10762 ;; Auto vars:     Size  Location     Type
 10763 ;;		None
 10764 ;; Return value:  Size  Location     Type
 10765 ;;                  2   47[BANK0 ] int 
 10766 ;; Registers used:
 10767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10768 ;; Tracked objects:
 10769 ;;		On entry : 0/0
 10770 ;;		On exit  : 0/0
 10771 ;;		Unchanged: 0/0
 10772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10773 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10775 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10776 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10777 ;;Total ram usage:        9 bytes
 10778 ;; Hardware stack levels used:    1
 10779 ;; Hardware stack levels required when called:   15
 10780 ;; This function calls:
 10781 ;;		_putch
 10782 ;; This function is called by:
 10783 ;;		_pad
 10784 ;;		_stoa
 10785 ;;		_vfpfcnvrt
 10786 ;;		_fputs
 10787 ;; This function uses a non-reentrant model
 10788 ;;
 10789                           
 10790                           	psect	text30
 10791  005762                     __ptext30:
 10792                           	opt callstack 0
 10793  005762                     _fputc:
 10794                           	opt callstack 8
 10795  005762  0100               	movlb	0	; () banked
 10796  005764  5191               	movf	fputc@fp& (0+255),w,b
 10797  005766  1192               	iorwf	(fputc@fp+1)& (0+255),w,b
 10798  005768  B4D8               	btfsc	status,2,c
 10799  00576A  EFB9  F02B         	goto	u8321
 10800  00576E  EFBB  F02B         	goto	u8320
 10801  005772                     u8321:
 10802  005772  EFC4  F02B         	goto	l7221
 10803  005776                     u8320:
 10804  005776                     
 10805                           ; BSR set to: 0
 10806  005776  5191               	movf	fputc@fp& (0+255),w,b
 10807  005778  1192               	iorwf	(fputc@fp+1)& (0+255),w,b
 10808  00577A  A4D8               	btfss	status,2,c
 10809  00577C  EFC2  F02B         	goto	u8331
 10810  005780  EFC4  F02B         	goto	u8330
 10811  005784                     u8331:
 10812  005784  EFC9  F02B         	goto	l7223
 10813  005788                     u8330:
 10814  005788                     l7221:
 10815                           
 10816                           ; BSR set to: 0
 10817  005788  518F               	movf	fputc@c& (0+255),w,b
 10818  00578A  EC42  F034         	call	_putch
 10819  00578E  EF16  F02C         	goto	l1594
 10820  005792                     l7223:
 10821                           
 10822                           ; BSR set to: 0
 10823  005792  EE20 F004          	lfsr	2,4
 10824  005796  5191               	movf	fputc@fp& (0+255),w,b
 10825  005798  26D9               	addwf	fsr2l,f,c
 10826  00579A  5192               	movf	(fputc@fp+1)& (0+255),w,b
 10827  00579C  22DA               	addwfc	fsr2h,f,c
 10828  00579E  50DE               	movf	postinc2,w,c
 10829  0057A0  10DE               	iorwf	postinc2,w,c
 10830  0057A2  B4D8               	btfsc	status,2,c
 10831  0057A4  EFD6  F02B         	goto	u8341
 10832  0057A8  EFD8  F02B         	goto	u8340
 10833  0057AC                     u8341:
 10834  0057AC  EFF3  F02B         	goto	l7227
 10835  0057B0                     u8340:
 10836  0057B0                     
 10837                           ; BSR set to: 0
 10838  0057B0  EE20 F004          	lfsr	2,4
 10839  0057B4  5191               	movf	fputc@fp& (0+255),w,b
 10840  0057B6  26D9               	addwf	fsr2l,f,c
 10841  0057B8  5192               	movf	(fputc@fp+1)& (0+255),w,b
 10842  0057BA  22DA               	addwfc	fsr2h,f,c
 10843  0057BC  EE10 F002          	lfsr	1,2
 10844  0057C0  5191               	movf	fputc@fp& (0+255),w,b
 10845  0057C2  26E1               	addwf	fsr1l,f,c
 10846  0057C4  5192               	movf	(fputc@fp+1)& (0+255),w,b
 10847  0057C6  22E2               	addwfc	fsr1h,f,c
 10848  0057C8  50DE               	movf	postinc2,w,c
 10849  0057CA  5CE6               	subwf	postinc1,w,c
 10850  0057CC  50E6               	movf	postinc1,w,c
 10851  0057CE  0A80               	xorlw	128
 10852  0057D0  6F97               	movwf	(??_fputc+4)& (0+255),b
 10853  0057D2  50DE               	movf	postinc2,w,c
 10854  0057D4  0A80               	xorlw	128
 10855  0057D6  5997               	subwfb	(??_fputc+4)& (0+255),w,b
 10856  0057D8  B0D8               	btfsc	status,0,c
 10857  0057DA  EFF1  F02B         	goto	u8351
 10858  0057DE  EFF3  F02B         	goto	u8350
 10859  0057E2                     u8351:
 10860  0057E2  EF16  F02C         	goto	l1594
 10861  0057E6                     u8350:
 10862  0057E6                     l7227:
 10863                           
 10864                           ; BSR set to: 0
 10865  0057E6  EE20 F002          	lfsr	2,2
 10866  0057EA  5191               	movf	fputc@fp& (0+255),w,b
 10867  0057EC  26D9               	addwf	fsr2l,f,c
 10868  0057EE  5192               	movf	(fputc@fp+1)& (0+255),w,b
 10869  0057F0  22DA               	addwfc	fsr2h,f,c
 10870  0057F2  CFDE F093          	movff	postinc2,??_fputc
 10871  0057F6  CFDD F094          	movff	postdec2,??_fputc+1
 10872  0057FA  C091  FFD9         	movff	fputc@fp,fsr2l
 10873  0057FE  C092  FFDA         	movff	fputc@fp+1,fsr2h
 10874  005802  CFDE F095          	movff	postinc2,??_fputc+2
 10875  005806  CFDD F096          	movff	postdec2,??_fputc+3
 10876  00580A  5193               	movf	??_fputc& (0+255),w,b
 10877  00580C  2595               	addwf	(??_fputc+2)& (0+255),w,b
 10878  00580E  6ED9               	movwf	fsr2l,c
 10879  005810  5194               	movf	(??_fputc+1)& (0+255),w,b
 10880  005812  2196               	addwfc	(??_fputc+3)& (0+255),w,b
 10881  005814  6EDA               	movwf	fsr2h,c
 10882  005816  C08F  FFDF         	movff	fputc@c,indf2
 10883  00581A  EE20 F002          	lfsr	2,2
 10884  00581E  5191               	movf	fputc@fp& (0+255),w,b
 10885  005820  26D9               	addwf	fsr2l,f,c
 10886  005822  5192               	movf	(fputc@fp+1)& (0+255),w,b
 10887  005824  22DA               	addwfc	fsr2h,f,c
 10888  005826  2ADE               	incf	postinc2,f,c
 10889  005828  0E00               	movlw	0
 10890  00582A  22DD               	addwfc	postdec2,f,c
 10891  00582C                     l1594:
 10892  00582C  0012               	return		;funcret
 10893  00582E                     __end_of_fputc:
 10894                           	opt callstack 0
 10895                           
 10896 ;; *************** function _putch *****************
 10897 ;; Defined at:
 10898 ;;		line 146 in file "mcc_generated_files/eusart1.c"
 10899 ;; Parameters:    Size  Location     Type
 10900 ;;  txData          1    wreg     unsigned char 
 10901 ;; Auto vars:     Size  Location     Type
 10902 ;;  txData          1   46[BANK0 ] unsigned char 
 10903 ;; Return value:  Size  Location     Type
 10904 ;;                  1    wreg      void 
 10905 ;; Registers used:
 10906 ;;		wreg, status,2, cstack
 10907 ;; Tracked objects:
 10908 ;;		On entry : 0/0
 10909 ;;		On exit  : 0/0
 10910 ;;		Unchanged: 0/0
 10911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10913 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10915 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10916 ;;Total ram usage:        1 bytes
 10917 ;; Hardware stack levels used:    1
 10918 ;; Hardware stack levels required when called:   14
 10919 ;; This function calls:
 10920 ;;		_EUSART1_Write
 10921 ;; This function is called by:
 10922 ;;		_fputc
 10923 ;; This function uses a non-reentrant model
 10924 ;;
 10925                           
 10926                           	psect	text31
 10927  006884                     __ptext31:
 10928                           	opt callstack 0
 10929  006884                     _putch:
 10930                           	opt callstack 8
 10931                           
 10932                           ;incstack = 0
 10933                           ;putch@txData stored from wreg
 10934  006884  0100               	movlb	0	; () banked
 10935  006886  6F8E               	movwf	putch@txData& (0+255),b
 10936  006888                     
 10937                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
 10938  006888  0100               	movlb	0	; () banked
 10939  00688A  518E               	movf	putch@txData& (0+255),w,b
 10940  00688C  ECEC  F033         	call	_EUSART1_Write
 10941  006890  0012               	return		;funcret
 10942  006892                     __end_of_putch:
 10943                           	opt callstack 0
 10944                           
 10945 ;; *************** function _EUSART1_Write *****************
 10946 ;; Defined at:
 10947 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 10948 ;; Parameters:    Size  Location     Type
 10949 ;;  txData          1    wreg     unsigned char 
 10950 ;; Auto vars:     Size  Location     Type
 10951 ;;  txData          1   45[BANK0 ] unsigned char 
 10952 ;; Return value:  Size  Location     Type
 10953 ;;                  1    wreg      void 
 10954 ;; Registers used:
 10955 ;;		wreg
 10956 ;; Tracked objects:
 10957 ;;		On entry : 0/0
 10958 ;;		On exit  : 0/0
 10959 ;;		Unchanged: 0/0
 10960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10962 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10964 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10965 ;;Total ram usage:        1 bytes
 10966 ;; Hardware stack levels used:    1
 10967 ;; Hardware stack levels required when called:   13
 10968 ;; This function calls:
 10969 ;;		Nothing
 10970 ;; This function is called by:
 10971 ;;		_putch
 10972 ;;		_read_from_usart
 10973 ;; This function uses a non-reentrant model
 10974 ;;
 10975                           
 10976                           	psect	text32
 10977  0067D8                     __ptext32:
 10978                           	opt callstack 0
 10979  0067D8                     _EUSART1_Write:
 10980                           	opt callstack 8
 10981                           
 10982                           ;incstack = 0
 10983                           ;EUSART1_Write@txData stored from wreg
 10984  0067D8  0100               	movlb	0	; () banked
 10985  0067DA  6F8D               	movwf	EUSART1_Write@txData& (0+255),b
 10986  0067DC                     l297:
 10987                           
 10988                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
 10989  0067DC  A89E               	btfss	158,4,c	;volatile
 10990  0067DE  EFF3  F033         	goto	u8231
 10991  0067E2  EFF5  F033         	goto	u8230
 10992  0067E6                     u8231:
 10993  0067E6  EFEE  F033         	goto	l297
 10994  0067EA                     u8230:
 10995  0067EA                     
 10996                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
 10997  0067EA  C08D  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
 10998  0067EE  0012               	return		;funcret
 10999  0067F0                     __end_of_EUSART1_Write:
 11000                           	opt callstack 0
 11001                           
 11002 ;; *************** function _atoi *****************
 11003 ;; Defined at:
 11004 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 11005 ;; Parameters:    Size  Location     Type
 11006 ;;  s               2   52[BANK0 ] PTR const unsigned char 
 11007 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
 11008 ;;		 -> STR_4(22), STR_3(12), read_from_usart@data(10), STR_1(13), 
 11009 ;; Auto vars:     Size  Location     Type
 11010 ;;  n               2   65[BANK0 ] int 
 11011 ;;  neg             2   58[BANK0 ] int 
 11012 ;; Return value:  Size  Location     Type
 11013 ;;                  2   52[BANK0 ] int 
 11014 ;; Registers used:
 11015 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11016 ;; Tracked objects:
 11017 ;;		On entry : 0/0
 11018 ;;		On exit  : 0/0
 11019 ;;		Unchanged: 0/0
 11020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11021 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11022 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11023 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11024 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11025 ;;Total ram usage:       15 bytes
 11026 ;; Hardware stack levels used:    1
 11027 ;; Hardware stack levels required when called:   14
 11028 ;; This function calls:
 11029 ;;		___wmul
 11030 ;;		_isdigit
 11031 ;;		_isspace
 11032 ;; This function is called by:
 11033 ;;		_read_from_usart
 11034 ;;		_vfpfcnvrt
 11035 ;; This function uses a non-reentrant model
 11036 ;;
 11037                           
 11038                           	psect	text33
 11039  003A38                     __ptext33:
 11040                           	opt callstack 0
 11041  003A38                     _atoi:
 11042                           	opt callstack 12
 11043  003A38  0E00               	movlw	0
 11044  003A3A  0100               	movlb	0	; () banked
 11045  003A3C  6FA2               	movwf	(atoi@n+1)& (0+255),b
 11046  003A3E  0E00               	movlw	0
 11047  003A40  6FA1               	movwf	atoi@n& (0+255),b
 11048  003A42  0E00               	movlw	0
 11049  003A44  6F9B               	movwf	(atoi@neg+1)& (0+255),b
 11050  003A46  0E00               	movlw	0
 11051  003A48  6F9A               	movwf	atoi@neg& (0+255),b
 11052  003A4A  EF29  F01D         	goto	l8287
 11053  003A4E                     l8285:
 11054                           
 11055                           ; BSR set to: 0
 11056  003A4E  4B94               	infsnz	atoi@s& (0+255),f,b
 11057  003A50  2B95               	incf	(atoi@s+1)& (0+255),f,b
 11058  003A52                     l8287:
 11059                           
 11060                           ; BSR set to: 0
 11061  003A52  0E01               	movlw	1
 11062  003A54  6FA0               	movwf	_atoi$2286& (0+255),b
 11063  003A56                     
 11064                           ; BSR set to: 0
 11065  003A56  C094  FFF6         	movff	atoi@s,tblptrl
 11066  003A5A  C095  FFF7         	movff	atoi@s+1,tblptrh
 11067  003A5E  0E00               	movlw	low (__mediumconst shr (0+16))
 11068  003A60  6EF8               	movwf	tblptru,c
 11069  003A62  0E0E               	movlw	(high __ramtop+-1)
 11070  003A64  64F7               	cpfsgt	tblptrh,c
 11071  003A66  D003               	bra	u10337
 11072  003A68  0008               	tblrd		*
 11073  003A6A  50F5               	movf	tablat,w,c
 11074  003A6C  D005               	bra	u10330
 11075  003A6E                     u10337:
 11076  003A6E  CFF6 FFE1          	movff	tblptrl,fsr1l
 11077  003A72  CFF7 FFE2          	movff	tblptrh,fsr1h
 11078  003A76  50E7               	movf	indf1,w,c
 11079  003A78                     u10330:
 11080  003A78  0A20               	xorlw	32
 11081  003A7A  B4D8               	btfsc	status,2,c
 11082  003A7C  EF42  F01D         	goto	u10341
 11083  003A80  EF44  F01D         	goto	u10340
 11084  003A84                     u10341:
 11085  003A84  EF6E  F01D         	goto	l8295
 11086  003A88                     u10340:
 11087  003A88  0EF7               	movlw	247
 11088  003A8A  0100               	movlb	0	; () banked
 11089  003A8C  6F96               	movwf	??_atoi& (0+255),b
 11090  003A8E  0EFF               	movlw	255
 11091  003A90  6F97               	movwf	(??_atoi+1)& (0+255),b
 11092  003A92  C094  FFF6         	movff	atoi@s,tblptrl
 11093  003A96  C095  FFF7         	movff	atoi@s+1,tblptrh
 11094  003A9A  0E00               	movlw	low (__mediumconst shr (0+16))
 11095  003A9C  6EF8               	movwf	tblptru,c
 11096  003A9E  0E0E               	movlw	(high __ramtop+-1)
 11097  003AA0  64F7               	cpfsgt	tblptrh,c
 11098  003AA2  D003               	bra	u10357
 11099  003AA4  0008               	tblrd		*
 11100  003AA6  50F5               	movf	tablat,w,c
 11101  003AA8  D005               	bra	u10350
 11102  003AAA                     u10357:
 11103  003AAA  CFF6 FFE1          	movff	tblptrl,fsr1l
 11104  003AAE  CFF7 FFE2          	movff	tblptrh,fsr1h
 11105  003AB2  50E7               	movf	indf1,w,c
 11106  003AB4                     u10350:
 11107  003AB4  0100               	movlb	0	; () banked
 11108  003AB6  6F98               	movwf	(??_atoi+2)& (0+255),b
 11109  003AB8  6B99               	clrf	(??_atoi+3)& (0+255),b
 11110  003ABA  5196               	movf	??_atoi& (0+255),w,b
 11111  003ABC  2798               	addwf	(??_atoi+2)& (0+255),f,b
 11112  003ABE  5197               	movf	(??_atoi+1)& (0+255),w,b
 11113  003AC0  2399               	addwfc	(??_atoi+3)& (0+255),f,b
 11114  003AC2  5199               	movf	(??_atoi+3)& (0+255),w,b
 11115  003AC4  E109               	bnz	u10360
 11116  003AC6  0E05               	movlw	5
 11117  003AC8  5D98               	subwf	(??_atoi+2)& (0+255),w,b
 11118  003ACA  A0D8               	btfss	status,0,c
 11119  003ACC  EF6A  F01D         	goto	u10361
 11120  003AD0  EF6C  F01D         	goto	u10360
 11121  003AD4                     u10361:
 11122  003AD4  EF6E  F01D         	goto	l8295
 11123  003AD8                     u10360:
 11124  003AD8                     
 11125                           ; BSR set to: 0
 11126  003AD8  0E00               	movlw	0
 11127  003ADA  6FA0               	movwf	_atoi$2286& (0+255),b
 11128  003ADC                     l8295:
 11129  003ADC  C0A0  F09C         	movff	_atoi$2286,_atoi$2285
 11130  003AE0  0100               	movlb	0	; () banked
 11131  003AE2  6B9D               	clrf	(_atoi$2285+1)& (0+255),b
 11132  003AE4                     
 11133                           ; BSR set to: 0
 11134  003AE4  519C               	movf	_atoi$2285& (0+255),w,b
 11135  003AE6  119D               	iorwf	(_atoi$2285+1)& (0+255),w,b
 11136  003AE8  A4D8               	btfss	status,2,c
 11137  003AEA  EF79  F01D         	goto	u10371
 11138  003AEE  EF7B  F01D         	goto	u10370
 11139  003AF2                     u10371:
 11140  003AF2  EF27  F01D         	goto	l8285
 11141  003AF6                     u10370:
 11142  003AF6  EF85  F01D         	goto	l8305
 11143  003AFA                     l8301:
 11144                           
 11145                           ; BSR set to: 0
 11146  003AFA  0E00               	movlw	0
 11147  003AFC  6F9B               	movwf	(atoi@neg+1)& (0+255),b
 11148  003AFE  0E01               	movlw	1
 11149  003B00  6F9A               	movwf	atoi@neg& (0+255),b
 11150  003B02                     l8303:
 11151                           
 11152                           ; BSR set to: 0
 11153  003B02  4B94               	infsnz	atoi@s& (0+255),f,b
 11154  003B04  2B95               	incf	(atoi@s+1)& (0+255),f,b
 11155  003B06  EFD4  F01D         	goto	l8311
 11156  003B0A                     l8305:
 11157                           
 11158                           ; BSR set to: 0
 11159  003B0A  C094  FFF6         	movff	atoi@s,tblptrl
 11160  003B0E  C095  FFF7         	movff	atoi@s+1,tblptrh
 11161  003B12  0E00               	movlw	low (__mediumconst shr (0+16))
 11162  003B14  6EF8               	movwf	tblptru,c
 11163  003B16  0E0E               	movlw	(high __ramtop+-1)
 11164  003B18  64F7               	cpfsgt	tblptrh,c
 11165  003B1A  D003               	bra	u10387
 11166  003B1C  0008               	tblrd		*
 11167  003B1E  50F5               	movf	tablat,w,c
 11168  003B20  D005               	bra	u10380
 11169  003B22                     u10387:
 11170  003B22  CFF6 FFE1          	movff	tblptrl,fsr1l
 11171  003B26  CFF7 FFE2          	movff	tblptrh,fsr1h
 11172  003B2A  50E7               	movf	indf1,w,c
 11173  003B2C                     u10380:
 11174  003B2C  0100               	movlb	0	; () banked
 11175  003B2E  6F96               	movwf	??_atoi& (0+255),b
 11176  003B30  6B97               	clrf	(??_atoi+1)& (0+255),b
 11177                           
 11178                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11179                           ; Switch size 1, requested type "simple"
 11180                           ; Number of cases is 1, Range of values is 0 to 0
 11181                           ; switch strategies available:
 11182                           ; Name         Instructions Cycles
 11183                           ; simple_byte            4     3 (average)
 11184                           ;	Chosen strategy is simple_byte
 11185  003B32  5197               	movf	(??_atoi+1)& (0+255),w,b
 11186  003B34  0A00               	xorlw	0	; case 0
 11187  003B36  B4D8               	btfsc	status,2,c
 11188  003B38  EFA0  F01D         	goto	l9215
 11189  003B3C  EFD4  F01D         	goto	l8311
 11190  003B40                     l9215:
 11191                           
 11192                           ; BSR set to: 0
 11193                           ; Switch size 1, requested type "simple"
 11194                           ; Number of cases is 2, Range of values is 43 to 45
 11195                           ; switch strategies available:
 11196                           ; Name         Instructions Cycles
 11197                           ; simple_byte            7     4 (average)
 11198                           ;	Chosen strategy is simple_byte
 11199  003B40  5196               	movf	??_atoi& (0+255),w,b
 11200  003B42  0A2B               	xorlw	43	; case 43
 11201  003B44  B4D8               	btfsc	status,2,c
 11202  003B46  EF81  F01D         	goto	l8303
 11203  003B4A  0A06               	xorlw	6	; case 45
 11204  003B4C  B4D8               	btfsc	status,2,c
 11205  003B4E  EF7D  F01D         	goto	l8301
 11206  003B52  EFD4  F01D         	goto	l8311
 11207  003B56                     l8307:
 11208                           
 11209                           ; BSR set to: 0
 11210  003B56  C0A1  F08D         	movff	atoi@n,___wmul@multiplier
 11211  003B5A  C0A2  F08E         	movff	atoi@n+1,___wmul@multiplier+1
 11212  003B5E  0E00               	movlw	0
 11213  003B60  6F90               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11214  003B62  0E0A               	movlw	10
 11215  003B64  6F8F               	movwf	___wmul@multiplicand& (0+255),b
 11216  003B66  EC74  F033         	call	___wmul	;wreg free
 11217  003B6A  C094  FFF6         	movff	atoi@s,tblptrl
 11218  003B6E  C095  FFF7         	movff	atoi@s+1,tblptrh
 11219  003B72  0E00               	movlw	low (__mediumconst shr (0+16))
 11220  003B74  6EF8               	movwf	tblptru,c
 11221  003B76  0E0E               	movlw	(high __ramtop+-1)
 11222  003B78  64F7               	cpfsgt	tblptrh,c
 11223  003B7A  D003               	bra	u10397
 11224  003B7C  0008               	tblrd		*
 11225  003B7E  50F5               	movf	tablat,w,c
 11226  003B80  D005               	bra	u10390
 11227  003B82                     u10397:
 11228  003B82  CFF6 FFE1          	movff	tblptrl,fsr1l
 11229  003B86  CFF7 FFE2          	movff	tblptrh,fsr1h
 11230  003B8A  50E7               	movf	indf1,w,c
 11231  003B8C                     u10390:
 11232  003B8C  0100               	movlb	0	; () banked
 11233  003B8E  6F96               	movwf	??_atoi& (0+255),b
 11234  003B90  5196               	movf	??_atoi& (0+255),w,b
 11235  003B92  5F8D               	subwf	?___wmul& (0+255),f,b
 11236  003B94  0E00               	movlw	0
 11237  003B96  5B8E               	subwfb	(?___wmul+1)& (0+255),f,b
 11238  003B98  0E30               	movlw	48
 11239  003B9A  258D               	addwf	?___wmul& (0+255),w,b
 11240  003B9C  6FA1               	movwf	atoi@n& (0+255),b
 11241  003B9E  0E00               	movlw	0
 11242  003BA0  218E               	addwfc	(?___wmul+1)& (0+255),w,b
 11243  003BA2  6FA2               	movwf	(atoi@n+1)& (0+255),b
 11244  003BA4  EF81  F01D         	goto	l8303
 11245  003BA8                     l8311:
 11246                           
 11247                           ; BSR set to: 0
 11248  003BA8  0ED0               	movlw	208
 11249  003BAA  6F96               	movwf	??_atoi& (0+255),b
 11250  003BAC  0EFF               	movlw	255
 11251  003BAE  6F97               	movwf	(??_atoi+1)& (0+255),b
 11252  003BB0  C094  FFF6         	movff	atoi@s,tblptrl
 11253  003BB4  C095  FFF7         	movff	atoi@s+1,tblptrh
 11254  003BB8  0E00               	movlw	low (__mediumconst shr (0+16))
 11255  003BBA  6EF8               	movwf	tblptru,c
 11256  003BBC  0E0E               	movlw	(high __ramtop+-1)
 11257  003BBE  64F7               	cpfsgt	tblptrh,c
 11258  003BC0  D003               	bra	u10407
 11259  003BC2  0008               	tblrd		*
 11260  003BC4  50F5               	movf	tablat,w,c
 11261  003BC6  D005               	bra	u10400
 11262  003BC8                     u10407:
 11263  003BC8  CFF6 FFE1          	movff	tblptrl,fsr1l
 11264  003BCC  CFF7 FFE2          	movff	tblptrh,fsr1h
 11265  003BD0  50E7               	movf	indf1,w,c
 11266  003BD2                     u10400:
 11267  003BD2  0100               	movlb	0	; () banked
 11268  003BD4  6F98               	movwf	(??_atoi+2)& (0+255),b
 11269  003BD6  6B99               	clrf	(??_atoi+3)& (0+255),b
 11270  003BD8  5196               	movf	??_atoi& (0+255),w,b
 11271  003BDA  2798               	addwf	(??_atoi+2)& (0+255),f,b
 11272  003BDC  5197               	movf	(??_atoi+1)& (0+255),w,b
 11273  003BDE  2399               	addwfc	(??_atoi+3)& (0+255),f,b
 11274  003BE0  5199               	movf	(??_atoi+3)& (0+255),w,b
 11275  003BE2  E10A               	bnz	u10410
 11276  003BE4  0E0A               	movlw	10
 11277  003BE6  5D98               	subwf	(??_atoi+2)& (0+255),w,b
 11278  003BE8  A0D8               	btfss	status,0,c
 11279  003BEA  EFF9  F01D         	goto	u10411
 11280  003BEE  EFFC  F01D         	goto	u10410
 11281  003BF2                     u10411:
 11282  003BF2  0E01               	movlw	1
 11283  003BF4  EFFD  F01D         	goto	u10420
 11284  003BF8                     u10410:
 11285  003BF8  0E00               	movlw	0
 11286  003BFA                     u10420:
 11287  003BFA  6F9E               	movwf	_atoi$2287& (0+255),b
 11288  003BFC  6B9F               	clrf	(_atoi$2287+1)& (0+255),b
 11289  003BFE                     
 11290                           ; BSR set to: 0
 11291  003BFE  519E               	movf	_atoi$2287& (0+255),w,b
 11292  003C00  119F               	iorwf	(_atoi$2287+1)& (0+255),w,b
 11293  003C02  A4D8               	btfss	status,2,c
 11294  003C04  EF06  F01E         	goto	u10431
 11295  003C08  EF08  F01E         	goto	u10430
 11296  003C0C                     u10431:
 11297  003C0C  EFAB  F01D         	goto	l8307
 11298  003C10                     u10430:
 11299  003C10                     
 11300                           ; BSR set to: 0
 11301  003C10  519A               	movf	atoi@neg& (0+255),w,b
 11302  003C12  119B               	iorwf	(atoi@neg+1)& (0+255),w,b
 11303  003C14  A4D8               	btfss	status,2,c
 11304  003C16  EF0F  F01E         	goto	u10441
 11305  003C1A  EF11  F01E         	goto	u10440
 11306  003C1E                     u10441:
 11307  003C1E  EF1F  F01E         	goto	l1553
 11308  003C22                     u10440:
 11309  003C22                     
 11310                           ; BSR set to: 0
 11311  003C22  C0A1  F096         	movff	atoi@n,??_atoi
 11312  003C26  C0A2  F097         	movff	atoi@n+1,??_atoi+1
 11313  003C2A  1F96               	comf	??_atoi& (0+255),f,b
 11314  003C2C  1F97               	comf	(??_atoi+1)& (0+255),f,b
 11315  003C2E  4B96               	infsnz	??_atoi& (0+255),f,b
 11316  003C30  2B97               	incf	(??_atoi+1)& (0+255),f,b
 11317  003C32  C096  F094         	movff	??_atoi,?_atoi
 11318  003C36  C097  F095         	movff	??_atoi+1,?_atoi+1
 11319  003C3A  EF23  F01E         	goto	l1556
 11320  003C3E                     l1553:
 11321                           
 11322                           ; BSR set to: 0
 11323  003C3E  C0A1  F094         	movff	atoi@n,?_atoi
 11324  003C42  C0A2  F095         	movff	atoi@n+1,?_atoi+1
 11325  003C46                     l1556:
 11326                           
 11327                           ; BSR set to: 0
 11328  003C46  0012               	return		;funcret
 11329  003C48                     __end_of_atoi:
 11330                           	opt callstack 0
 11331                           
 11332 ;; *************** function _isspace *****************
 11333 ;; Defined at:
 11334 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 11335 ;; Parameters:    Size  Location     Type
 11336 ;;  c               2   45[BANK0 ] int 
 11337 ;; Auto vars:     Size  Location     Type
 11338 ;;		None
 11339 ;; Return value:  Size  Location     Type
 11340 ;;                  2   45[BANK0 ] int 
 11341 ;; Registers used:
 11342 ;;		wreg, status,2, status,0
 11343 ;; Tracked objects:
 11344 ;;		On entry : 0/0
 11345 ;;		On exit  : 0/0
 11346 ;;		Unchanged: 0/0
 11347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11348 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11349 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11350 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11351 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11352 ;;Total ram usage:        7 bytes
 11353 ;; Hardware stack levels used:    1
 11354 ;; Hardware stack levels required when called:   13
 11355 ;; This function calls:
 11356 ;;		Nothing
 11357 ;; This function is called by:
 11358 ;;		_atoi
 11359 ;; This function uses a non-reentrant model
 11360 ;;
 11361                           
 11362                           	psect	text34
 11363  005F92                     __ptext34:
 11364                           	opt callstack 0
 11365  005F92                     _isspace:
 11366                           	opt callstack 12
 11367  005F92  0E01               	movlw	1
 11368  005F94  0100               	movlb	0	; () banked
 11369  005F96  6F93               	movwf	_isspace$2312& (0+255),b
 11370  005F98                     
 11371                           ; BSR set to: 0
 11372  005F98  0E20               	movlw	32
 11373  005F9A  198D               	xorwf	isspace@c& (0+255),w,b
 11374  005F9C  118E               	iorwf	(isspace@c+1)& (0+255),w,b
 11375  005F9E  B4D8               	btfsc	status,2,c
 11376  005FA0  EFD4  F02F         	goto	u9861
 11377  005FA4  EFD6  F02F         	goto	u9860
 11378  005FA8                     u9861:
 11379  005FA8  EFEF  F02F         	goto	l7947
 11380  005FAC                     u9860:
 11381  005FAC                     
 11382                           ; BSR set to: 0
 11383  005FAC  0EF7               	movlw	247
 11384  005FAE  6F8F               	movwf	??_isspace& (0+255),b
 11385  005FB0  0EFF               	movlw	255
 11386  005FB2  6F90               	movwf	(??_isspace+1)& (0+255),b
 11387  005FB4  C08D  F091         	movff	isspace@c,??_isspace+2
 11388  005FB8  C08E  F092         	movff	isspace@c+1,??_isspace+3
 11389  005FBC  518F               	movf	??_isspace& (0+255),w,b
 11390  005FBE  2791               	addwf	(??_isspace+2)& (0+255),f,b
 11391  005FC0  5190               	movf	(??_isspace+1)& (0+255),w,b
 11392  005FC2  2392               	addwfc	(??_isspace+3)& (0+255),f,b
 11393  005FC4  5192               	movf	(??_isspace+3)& (0+255),w,b
 11394  005FC6  E109               	bnz	u9870
 11395  005FC8  0E05               	movlw	5
 11396  005FCA  5D91               	subwf	(??_isspace+2)& (0+255),w,b
 11397  005FCC  A0D8               	btfss	status,0,c
 11398  005FCE  EFEB  F02F         	goto	u9871
 11399  005FD2  EFED  F02F         	goto	u9870
 11400  005FD6                     u9871:
 11401  005FD6  EFEF  F02F         	goto	l7947
 11402  005FDA                     u9870:
 11403  005FDA                     
 11404                           ; BSR set to: 0
 11405  005FDA  0E00               	movlw	0
 11406  005FDC  6F93               	movwf	_isspace$2312& (0+255),b
 11407  005FDE                     l7947:
 11408                           
 11409                           ; BSR set to: 0
 11410  005FDE  C093  F08D         	movff	_isspace$2312,?_isspace
 11411  005FE2  6B8E               	clrf	(?_isspace+1)& (0+255),b
 11412  005FE4                     
 11413                           ; BSR set to: 0
 11414  005FE4  0012               	return		;funcret
 11415  005FE6                     __end_of_isspace:
 11416                           	opt callstack 0
 11417                           
 11418 ;; *************** function _isdigit *****************
 11419 ;; Defined at:
 11420 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 11421 ;; Parameters:    Size  Location     Type
 11422 ;;  c               2   45[BANK0 ] int 
 11423 ;; Auto vars:     Size  Location     Type
 11424 ;;		None
 11425 ;; Return value:  Size  Location     Type
 11426 ;;                  2   45[BANK0 ] int 
 11427 ;; Registers used:
 11428 ;;		wreg, status,2, status,0
 11429 ;; Tracked objects:
 11430 ;;		On entry : 0/0
 11431 ;;		On exit  : 0/0
 11432 ;;		Unchanged: 0/0
 11433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11434 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11436 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11437 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11438 ;;Total ram usage:        6 bytes
 11439 ;; Hardware stack levels used:    1
 11440 ;; Hardware stack levels required when called:   13
 11441 ;; This function calls:
 11442 ;;		Nothing
 11443 ;; This function is called by:
 11444 ;;		_vfpfcnvrt
 11445 ;;		_atoi
 11446 ;; This function uses a non-reentrant model
 11447 ;;
 11448                           
 11449                           	psect	text35
 11450  006468                     __ptext35:
 11451                           	opt callstack 0
 11452  006468                     _isdigit:
 11453                           	opt callstack 13
 11454  006468  0ED0               	movlw	208
 11455  00646A  0100               	movlb	0	; () banked
 11456  00646C  6F8F               	movwf	??_isdigit& (0+255),b
 11457  00646E  0EFF               	movlw	255
 11458  006470  6F90               	movwf	(??_isdigit+1)& (0+255),b
 11459  006472  C08D  F091         	movff	isdigit@c,??_isdigit+2
 11460  006476  C08E  F092         	movff	isdigit@c+1,??_isdigit+3
 11461  00647A  518F               	movf	??_isdigit& (0+255),w,b
 11462  00647C  2791               	addwf	(??_isdigit+2)& (0+255),f,b
 11463  00647E  5190               	movf	(??_isdigit+1)& (0+255),w,b
 11464  006480  2392               	addwfc	(??_isdigit+3)& (0+255),f,b
 11465  006482  5192               	movf	(??_isdigit+3)& (0+255),w,b
 11466  006484  E10A               	bnz	u9640
 11467  006486  0E0A               	movlw	10
 11468  006488  5D91               	subwf	(??_isdigit+2)& (0+255),w,b
 11469  00648A  A0D8               	btfss	status,0,c
 11470  00648C  EF4A  F032         	goto	u9641
 11471  006490  EF4D  F032         	goto	u9640
 11472  006494                     u9641:
 11473  006494  0E01               	movlw	1
 11474  006496  EF4E  F032         	goto	u9650
 11475  00649A                     u9640:
 11476  00649A  0E00               	movlw	0
 11477  00649C                     u9650:
 11478  00649C  6F8D               	movwf	?_isdigit& (0+255),b
 11479  00649E  6B8E               	clrf	(?_isdigit+1)& (0+255),b
 11480  0064A0                     
 11481                           ; BSR set to: 0
 11482  0064A0  0012               	return		;funcret
 11483  0064A2                     __end_of_isdigit:
 11484                           	opt callstack 0
 11485                           
 11486 ;; *************** function ___wmul *****************
 11487 ;; Defined at:
 11488 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 11489 ;; Parameters:    Size  Location     Type
 11490 ;;  multiplier      2   45[BANK0 ] unsigned int 
 11491 ;;  multiplicand    2   47[BANK0 ] unsigned int 
 11492 ;; Auto vars:     Size  Location     Type
 11493 ;;  product         2   49[BANK0 ] unsigned int 
 11494 ;; Return value:  Size  Location     Type
 11495 ;;                  2   45[BANK0 ] unsigned int 
 11496 ;; Registers used:
 11497 ;;		wreg, status,2, status,0, prodl, prodh
 11498 ;; Tracked objects:
 11499 ;;		On entry : 0/0
 11500 ;;		On exit  : 0/0
 11501 ;;		Unchanged: 0/0
 11502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11503 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11504 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11506 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11507 ;;Total ram usage:        6 bytes
 11508 ;; Hardware stack levels used:    1
 11509 ;; Hardware stack levels required when called:   13
 11510 ;; This function calls:
 11511 ;;		Nothing
 11512 ;; This function is called by:
 11513 ;;		_atoi
 11514 ;; This function uses a non-reentrant model
 11515 ;;
 11516                           
 11517                           	psect	text36
 11518  0066E8                     __ptext36:
 11519                           	opt callstack 0
 11520  0066E8                     ___wmul:
 11521                           	opt callstack 12
 11522  0066E8  0100               	movlb	0	; () banked
 11523  0066EA  518D               	movf	___wmul@multiplier& (0+255),w,b
 11524  0066EC  038F               	mulwf	___wmul@multiplicand& (0+255),b
 11525  0066EE  CFF3 F091          	movff	prodl,___wmul@product
 11526  0066F2  CFF4 F092          	movff	prodh,___wmul@product+1
 11527  0066F6  518D               	movf	___wmul@multiplier& (0+255),w,b
 11528  0066F8  0390               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11529  0066FA  50F3               	movf	243,w,c
 11530  0066FC  2792               	addwf	(___wmul@product+1)& (0+255),f,b
 11531  0066FE  518E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11532  006700  038F               	mulwf	___wmul@multiplicand& (0+255),b
 11533  006702  50F3               	movf	243,w,c
 11534  006704  2792               	addwf	(___wmul@product+1)& (0+255),f,b
 11535  006706                     
 11536                           ; BSR set to: 0
 11537  006706  C091  F08D         	movff	___wmul@product,?___wmul
 11538  00670A  C092  F08E         	movff	___wmul@product+1,?___wmul+1
 11539  00670E                     
 11540                           ; BSR set to: 0
 11541  00670E  0012               	return		;funcret
 11542  006710                     __end_of___wmul:
 11543                           	opt callstack 0
 11544                           
 11545 ;; *************** function _lcd_init *****************
 11546 ;; Defined at:
 11547 ;;		line 34 in file "lib_ili9341.c"
 11548 ;; Parameters:    Size  Location     Type
 11549 ;;		None
 11550 ;; Auto vars:     Size  Location     Type
 11551 ;;		None
 11552 ;; Return value:  Size  Location     Type
 11553 ;;                  1    wreg      void 
 11554 ;; Registers used:
 11555 ;;		wreg, status,2, status,0, cstack
 11556 ;; Tracked objects:
 11557 ;;		On entry : 0/0
 11558 ;;		On exit  : 0/0
 11559 ;;		Unchanged: 0/0
 11560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11565 ;;Total ram usage:        0 bytes
 11566 ;; Hardware stack levels used:    1
 11567 ;; Hardware stack levels required when called:   18
 11568 ;; This function calls:
 11569 ;;		_lcd_fill
 11570 ;;		_lcd_send
 11571 ;;		_msDelay
 11572 ;; This function is called by:
 11573 ;;		_main
 11574 ;; This function uses a non-reentrant model
 11575 ;;
 11576                           
 11577                           	psect	text37
 11578  0025CA                     __ptext37:
 11579                           	opt callstack 0
 11580  0025CA                     _lcd_init:
 11581                           	opt callstack 12
 11582  0025CA                     
 11583                           ;lib_ili9341.c: 37:     lcd_send(0, 0x01);
 11584  0025CA  0E01               	movlw	1
 11585  0025CC  0100               	movlb	0	; () banked
 11586  0025CE  6F8E               	movwf	lcd_send@value& (0+255),b
 11587  0025D0  0E00               	movlw	0
 11588  0025D2  ECCF  F033         	call	_lcd_send
 11589  0025D6                     
 11590                           ;lib_ili9341.c: 38:     msDelay(150);
 11591  0025D6  0E96               	movlw	150
 11592  0025D8  EC51  F032         	call	_msDelay
 11593  0025DC                     
 11594                           ;lib_ili9341.c: 40:     lcd_send(0,0xEF);
 11595  0025DC  0EEF               	movlw	239
 11596  0025DE  0100               	movlb	0	; () banked
 11597  0025E0  6F8E               	movwf	lcd_send@value& (0+255),b
 11598  0025E2  0E00               	movlw	0
 11599  0025E4  ECCF  F033         	call	_lcd_send
 11600  0025E8                     
 11601                           ;lib_ili9341.c: 41:     lcd_send(1,0x03);
 11602  0025E8  0E03               	movlw	3
 11603  0025EA  0100               	movlb	0	; () banked
 11604  0025EC  6F8E               	movwf	lcd_send@value& (0+255),b
 11605  0025EE  0E01               	movlw	1
 11606  0025F0  ECCF  F033         	call	_lcd_send
 11607  0025F4                     
 11608                           ;lib_ili9341.c: 42:     lcd_send(1,0x80);
 11609  0025F4  0E80               	movlw	128
 11610  0025F6  0100               	movlb	0	; () banked
 11611  0025F8  6F8E               	movwf	lcd_send@value& (0+255),b
 11612  0025FA  0E01               	movlw	1
 11613  0025FC  ECCF  F033         	call	_lcd_send
 11614  002600                     
 11615                           ;lib_ili9341.c: 43:     lcd_send(1,0x02);
 11616  002600  0E02               	movlw	2
 11617  002602  0100               	movlb	0	; () banked
 11618  002604  6F8E               	movwf	lcd_send@value& (0+255),b
 11619  002606  0E01               	movlw	1
 11620  002608  ECCF  F033         	call	_lcd_send
 11621  00260C                     
 11622                           ;lib_ili9341.c: 44:     lcd_send(0,0xCF);
 11623  00260C  0ECF               	movlw	207
 11624  00260E  0100               	movlb	0	; () banked
 11625  002610  6F8E               	movwf	lcd_send@value& (0+255),b
 11626  002612  0E00               	movlw	0
 11627  002614  ECCF  F033         	call	_lcd_send
 11628  002618                     
 11629                           ;lib_ili9341.c: 45:     lcd_send(1,0x00);
 11630  002618  0E00               	movlw	0
 11631  00261A  0100               	movlb	0	; () banked
 11632  00261C  6F8E               	movwf	lcd_send@value& (0+255),b
 11633  00261E  0E01               	movlw	1
 11634  002620  ECCF  F033         	call	_lcd_send
 11635  002624                     
 11636                           ;lib_ili9341.c: 46:     lcd_send(1,0XC1);
 11637  002624  0EC1               	movlw	193
 11638  002626  0100               	movlb	0	; () banked
 11639  002628  6F8E               	movwf	lcd_send@value& (0+255),b
 11640  00262A  0E01               	movlw	1
 11641  00262C  ECCF  F033         	call	_lcd_send
 11642  002630                     
 11643                           ;lib_ili9341.c: 47:     lcd_send(1,0X30);
 11644  002630  0E30               	movlw	48
 11645  002632  0100               	movlb	0	; () banked
 11646  002634  6F8E               	movwf	lcd_send@value& (0+255),b
 11647  002636  0E01               	movlw	1
 11648  002638  ECCF  F033         	call	_lcd_send
 11649  00263C                     
 11650                           ;lib_ili9341.c: 48:     lcd_send(0,0xED);
 11651  00263C  0EED               	movlw	237
 11652  00263E  0100               	movlb	0	; () banked
 11653  002640  6F8E               	movwf	lcd_send@value& (0+255),b
 11654  002642  0E00               	movlw	0
 11655  002644  ECCF  F033         	call	_lcd_send
 11656  002648                     
 11657                           ;lib_ili9341.c: 49:     lcd_send(1,0x64);
 11658  002648  0E64               	movlw	100
 11659  00264A  0100               	movlb	0	; () banked
 11660  00264C  6F8E               	movwf	lcd_send@value& (0+255),b
 11661  00264E  0E01               	movlw	1
 11662  002650  ECCF  F033         	call	_lcd_send
 11663  002654                     
 11664                           ;lib_ili9341.c: 50:     lcd_send(1,0x03);
 11665  002654  0E03               	movlw	3
 11666  002656  0100               	movlb	0	; () banked
 11667  002658  6F8E               	movwf	lcd_send@value& (0+255),b
 11668  00265A  0E01               	movlw	1
 11669  00265C  ECCF  F033         	call	_lcd_send
 11670  002660                     
 11671                           ;lib_ili9341.c: 51:     lcd_send(1,0X12);
 11672  002660  0E12               	movlw	18
 11673  002662  0100               	movlb	0	; () banked
 11674  002664  6F8E               	movwf	lcd_send@value& (0+255),b
 11675  002666  0E01               	movlw	1
 11676  002668  ECCF  F033         	call	_lcd_send
 11677  00266C                     
 11678                           ;lib_ili9341.c: 52:     lcd_send(1,0X81);
 11679  00266C  0E81               	movlw	129
 11680  00266E  0100               	movlb	0	; () banked
 11681  002670  6F8E               	movwf	lcd_send@value& (0+255),b
 11682  002672  0E01               	movlw	1
 11683  002674  ECCF  F033         	call	_lcd_send
 11684  002678                     
 11685                           ;lib_ili9341.c: 53:     lcd_send(0,0xE8);
 11686  002678  0EE8               	movlw	232
 11687  00267A  0100               	movlb	0	; () banked
 11688  00267C  6F8E               	movwf	lcd_send@value& (0+255),b
 11689  00267E  0E00               	movlw	0
 11690  002680  ECCF  F033         	call	_lcd_send
 11691  002684                     
 11692                           ;lib_ili9341.c: 54:     lcd_send(1,0x85);
 11693  002684  0E85               	movlw	133
 11694  002686  0100               	movlb	0	; () banked
 11695  002688  6F8E               	movwf	lcd_send@value& (0+255),b
 11696  00268A  0E01               	movlw	1
 11697  00268C  ECCF  F033         	call	_lcd_send
 11698  002690                     
 11699                           ;lib_ili9341.c: 55:     lcd_send(1,0x00);
 11700  002690  0E00               	movlw	0
 11701  002692  0100               	movlb	0	; () banked
 11702  002694  6F8E               	movwf	lcd_send@value& (0+255),b
 11703  002696  0E01               	movlw	1
 11704  002698  ECCF  F033         	call	_lcd_send
 11705  00269C                     
 11706                           ;lib_ili9341.c: 56:     lcd_send(1,0x78);
 11707  00269C  0E78               	movlw	120
 11708  00269E  0100               	movlb	0	; () banked
 11709  0026A0  6F8E               	movwf	lcd_send@value& (0+255),b
 11710  0026A2  0E01               	movlw	1
 11711  0026A4  ECCF  F033         	call	_lcd_send
 11712  0026A8                     
 11713                           ;lib_ili9341.c: 57:     lcd_send(0,0xCB);
 11714  0026A8  0ECB               	movlw	203
 11715  0026AA  0100               	movlb	0	; () banked
 11716  0026AC  6F8E               	movwf	lcd_send@value& (0+255),b
 11717  0026AE  0E00               	movlw	0
 11718  0026B0  ECCF  F033         	call	_lcd_send
 11719  0026B4                     
 11720                           ;lib_ili9341.c: 58:     lcd_send(1,0x39);
 11721  0026B4  0E39               	movlw	57
 11722  0026B6  0100               	movlb	0	; () banked
 11723  0026B8  6F8E               	movwf	lcd_send@value& (0+255),b
 11724  0026BA  0E01               	movlw	1
 11725  0026BC  ECCF  F033         	call	_lcd_send
 11726  0026C0                     
 11727                           ;lib_ili9341.c: 59:     lcd_send(1,0x2C);
 11728  0026C0  0E2C               	movlw	44
 11729  0026C2  0100               	movlb	0	; () banked
 11730  0026C4  6F8E               	movwf	lcd_send@value& (0+255),b
 11731  0026C6  0E01               	movlw	1
 11732  0026C8  ECCF  F033         	call	_lcd_send
 11733  0026CC                     
 11734                           ;lib_ili9341.c: 60:     lcd_send(1,0x00);
 11735  0026CC  0E00               	movlw	0
 11736  0026CE  0100               	movlb	0	; () banked
 11737  0026D0  6F8E               	movwf	lcd_send@value& (0+255),b
 11738  0026D2  0E01               	movlw	1
 11739  0026D4  ECCF  F033         	call	_lcd_send
 11740  0026D8                     
 11741                           ;lib_ili9341.c: 61:     lcd_send(1,0x34);
 11742  0026D8  0E34               	movlw	52
 11743  0026DA  0100               	movlb	0	; () banked
 11744  0026DC  6F8E               	movwf	lcd_send@value& (0+255),b
 11745  0026DE  0E01               	movlw	1
 11746  0026E0  ECCF  F033         	call	_lcd_send
 11747  0026E4                     
 11748                           ;lib_ili9341.c: 62:     lcd_send(1,0x02);
 11749  0026E4  0E02               	movlw	2
 11750  0026E6  0100               	movlb	0	; () banked
 11751  0026E8  6F8E               	movwf	lcd_send@value& (0+255),b
 11752  0026EA  0E01               	movlw	1
 11753  0026EC  ECCF  F033         	call	_lcd_send
 11754  0026F0                     
 11755                           ;lib_ili9341.c: 63:     lcd_send(0,0xF7);
 11756  0026F0  0EF7               	movlw	247
 11757  0026F2  0100               	movlb	0	; () banked
 11758  0026F4  6F8E               	movwf	lcd_send@value& (0+255),b
 11759  0026F6  0E00               	movlw	0
 11760  0026F8  ECCF  F033         	call	_lcd_send
 11761  0026FC                     
 11762                           ;lib_ili9341.c: 64:     lcd_send(1,0x20);
 11763  0026FC  0E20               	movlw	32
 11764  0026FE  0100               	movlb	0	; () banked
 11765  002700  6F8E               	movwf	lcd_send@value& (0+255),b
 11766  002702  0E01               	movlw	1
 11767  002704  ECCF  F033         	call	_lcd_send
 11768  002708                     
 11769                           ;lib_ili9341.c: 65:     lcd_send(0,0xEA);
 11770  002708  0EEA               	movlw	234
 11771  00270A  0100               	movlb	0	; () banked
 11772  00270C  6F8E               	movwf	lcd_send@value& (0+255),b
 11773  00270E  0E00               	movlw	0
 11774  002710  ECCF  F033         	call	_lcd_send
 11775  002714                     
 11776                           ;lib_ili9341.c: 66:     lcd_send(1,0x00);
 11777  002714  0E00               	movlw	0
 11778  002716  0100               	movlb	0	; () banked
 11779  002718  6F8E               	movwf	lcd_send@value& (0+255),b
 11780  00271A  0E01               	movlw	1
 11781  00271C  ECCF  F033         	call	_lcd_send
 11782  002720                     
 11783                           ;lib_ili9341.c: 67:     lcd_send(1,0x00);
 11784  002720  0E00               	movlw	0
 11785  002722  0100               	movlb	0	; () banked
 11786  002724  6F8E               	movwf	lcd_send@value& (0+255),b
 11787  002726  0E01               	movlw	1
 11788  002728  ECCF  F033         	call	_lcd_send
 11789  00272C                     
 11790                           ;lib_ili9341.c: 68:     lcd_send(0,0xC0);
 11791  00272C  0EC0               	movlw	192
 11792  00272E  0100               	movlb	0	; () banked
 11793  002730  6F8E               	movwf	lcd_send@value& (0+255),b
 11794  002732  0E00               	movlw	0
 11795  002734  ECCF  F033         	call	_lcd_send
 11796  002738                     
 11797                           ;lib_ili9341.c: 69:     lcd_send(1,0x23);
 11798  002738  0E23               	movlw	35
 11799  00273A  0100               	movlb	0	; () banked
 11800  00273C  6F8E               	movwf	lcd_send@value& (0+255),b
 11801  00273E  0E01               	movlw	1
 11802  002740  ECCF  F033         	call	_lcd_send
 11803  002744                     
 11804                           ;lib_ili9341.c: 70:     lcd_send(0,0xC1);
 11805  002744  0EC1               	movlw	193
 11806  002746  0100               	movlb	0	; () banked
 11807  002748  6F8E               	movwf	lcd_send@value& (0+255),b
 11808  00274A  0E00               	movlw	0
 11809  00274C  ECCF  F033         	call	_lcd_send
 11810  002750                     
 11811                           ;lib_ili9341.c: 71:     lcd_send(1,0x10);
 11812  002750  0E10               	movlw	16
 11813  002752  0100               	movlb	0	; () banked
 11814  002754  6F8E               	movwf	lcd_send@value& (0+255),b
 11815  002756  0E01               	movlw	1
 11816  002758  ECCF  F033         	call	_lcd_send
 11817  00275C                     
 11818                           ;lib_ili9341.c: 72:     lcd_send(0,0xC5);
 11819  00275C  0EC5               	movlw	197
 11820  00275E  0100               	movlb	0	; () banked
 11821  002760  6F8E               	movwf	lcd_send@value& (0+255),b
 11822  002762  0E00               	movlw	0
 11823  002764  ECCF  F033         	call	_lcd_send
 11824  002768                     
 11825                           ;lib_ili9341.c: 73:     lcd_send(1,0x3e);
 11826  002768  0E3E               	movlw	62
 11827  00276A  0100               	movlb	0	; () banked
 11828  00276C  6F8E               	movwf	lcd_send@value& (0+255),b
 11829  00276E  0E01               	movlw	1
 11830  002770  ECCF  F033         	call	_lcd_send
 11831  002774                     
 11832                           ;lib_ili9341.c: 74:     lcd_send(1,0x28);
 11833  002774  0E28               	movlw	40
 11834  002776  0100               	movlb	0	; () banked
 11835  002778  6F8E               	movwf	lcd_send@value& (0+255),b
 11836  00277A  0E01               	movlw	1
 11837  00277C  ECCF  F033         	call	_lcd_send
 11838  002780                     
 11839                           ;lib_ili9341.c: 75:     lcd_send(0,0xC7);
 11840  002780  0EC7               	movlw	199
 11841  002782  0100               	movlb	0	; () banked
 11842  002784  6F8E               	movwf	lcd_send@value& (0+255),b
 11843  002786  0E00               	movlw	0
 11844  002788  ECCF  F033         	call	_lcd_send
 11845  00278C                     
 11846                           ;lib_ili9341.c: 76:     lcd_send(1,0x86);
 11847  00278C  0E86               	movlw	134
 11848  00278E  0100               	movlb	0	; () banked
 11849  002790  6F8E               	movwf	lcd_send@value& (0+255),b
 11850  002792  0E01               	movlw	1
 11851  002794  ECCF  F033         	call	_lcd_send
 11852  002798                     
 11853                           ;lib_ili9341.c: 77:     lcd_send(0,0x36);
 11854  002798  0E36               	movlw	54
 11855  00279A  0100               	movlb	0	; () banked
 11856  00279C  6F8E               	movwf	lcd_send@value& (0+255),b
 11857  00279E  0E00               	movlw	0
 11858  0027A0  ECCF  F033         	call	_lcd_send
 11859  0027A4                     
 11860                           ;lib_ili9341.c: 78:     lcd_send(1,0x48);
 11861  0027A4  0E48               	movlw	72
 11862  0027A6  0100               	movlb	0	; () banked
 11863  0027A8  6F8E               	movwf	lcd_send@value& (0+255),b
 11864  0027AA  0E01               	movlw	1
 11865  0027AC  ECCF  F033         	call	_lcd_send
 11866  0027B0                     
 11867                           ;lib_ili9341.c: 79:     lcd_send(0,0x3A);
 11868  0027B0  0E3A               	movlw	58
 11869  0027B2  0100               	movlb	0	; () banked
 11870  0027B4  6F8E               	movwf	lcd_send@value& (0+255),b
 11871  0027B6  0E00               	movlw	0
 11872  0027B8  ECCF  F033         	call	_lcd_send
 11873  0027BC                     
 11874                           ;lib_ili9341.c: 80:     lcd_send(1,0x55);
 11875  0027BC  0E55               	movlw	85
 11876  0027BE  0100               	movlb	0	; () banked
 11877  0027C0  6F8E               	movwf	lcd_send@value& (0+255),b
 11878  0027C2  0E01               	movlw	1
 11879  0027C4  ECCF  F033         	call	_lcd_send
 11880  0027C8                     
 11881                           ;lib_ili9341.c: 81:     lcd_send(0,0xB1);
 11882  0027C8  0EB1               	movlw	177
 11883  0027CA  0100               	movlb	0	; () banked
 11884  0027CC  6F8E               	movwf	lcd_send@value& (0+255),b
 11885  0027CE  0E00               	movlw	0
 11886  0027D0  ECCF  F033         	call	_lcd_send
 11887  0027D4                     
 11888                           ;lib_ili9341.c: 82:     lcd_send(1,0x00);
 11889  0027D4  0E00               	movlw	0
 11890  0027D6  0100               	movlb	0	; () banked
 11891  0027D8  6F8E               	movwf	lcd_send@value& (0+255),b
 11892  0027DA  0E01               	movlw	1
 11893  0027DC  ECCF  F033         	call	_lcd_send
 11894  0027E0                     
 11895                           ;lib_ili9341.c: 83:     lcd_send(1,0x18);
 11896  0027E0  0E18               	movlw	24
 11897  0027E2  0100               	movlb	0	; () banked
 11898  0027E4  6F8E               	movwf	lcd_send@value& (0+255),b
 11899  0027E6  0E01               	movlw	1
 11900  0027E8  ECCF  F033         	call	_lcd_send
 11901  0027EC                     
 11902                           ;lib_ili9341.c: 84:     lcd_send(0,0xB6);
 11903  0027EC  0EB6               	movlw	182
 11904  0027EE  0100               	movlb	0	; () banked
 11905  0027F0  6F8E               	movwf	lcd_send@value& (0+255),b
 11906  0027F2  0E00               	movlw	0
 11907  0027F4  ECCF  F033         	call	_lcd_send
 11908  0027F8                     
 11909                           ;lib_ili9341.c: 85:     lcd_send(1,0x08);
 11910  0027F8  0E08               	movlw	8
 11911  0027FA  0100               	movlb	0	; () banked
 11912  0027FC  6F8E               	movwf	lcd_send@value& (0+255),b
 11913  0027FE  0E01               	movlw	1
 11914  002800  ECCF  F033         	call	_lcd_send
 11915  002804                     
 11916                           ;lib_ili9341.c: 86:     lcd_send(1,0x82);
 11917  002804  0E82               	movlw	130
 11918  002806  0100               	movlb	0	; () banked
 11919  002808  6F8E               	movwf	lcd_send@value& (0+255),b
 11920  00280A  0E01               	movlw	1
 11921  00280C  ECCF  F033         	call	_lcd_send
 11922  002810                     
 11923                           ;lib_ili9341.c: 87:     lcd_send(1,0x27);
 11924  002810  0E27               	movlw	39
 11925  002812  0100               	movlb	0	; () banked
 11926  002814  6F8E               	movwf	lcd_send@value& (0+255),b
 11927  002816  0E01               	movlw	1
 11928  002818  ECCF  F033         	call	_lcd_send
 11929  00281C                     
 11930                           ;lib_ili9341.c: 88:     lcd_send(0,0xF2);
 11931  00281C  0EF2               	movlw	242
 11932  00281E  0100               	movlb	0	; () banked
 11933  002820  6F8E               	movwf	lcd_send@value& (0+255),b
 11934  002822  0E00               	movlw	0
 11935  002824  ECCF  F033         	call	_lcd_send
 11936  002828                     
 11937                           ;lib_ili9341.c: 89:     lcd_send(1,0x00);
 11938  002828  0E00               	movlw	0
 11939  00282A  0100               	movlb	0	; () banked
 11940  00282C  6F8E               	movwf	lcd_send@value& (0+255),b
 11941  00282E  0E01               	movlw	1
 11942  002830  ECCF  F033         	call	_lcd_send
 11943  002834                     
 11944                           ;lib_ili9341.c: 90:     lcd_send(0,0x26);
 11945  002834  0E26               	movlw	38
 11946  002836  0100               	movlb	0	; () banked
 11947  002838  6F8E               	movwf	lcd_send@value& (0+255),b
 11948  00283A  0E00               	movlw	0
 11949  00283C  ECCF  F033         	call	_lcd_send
 11950  002840                     
 11951                           ;lib_ili9341.c: 91:     lcd_send(1,0x01);
 11952  002840  0E01               	movlw	1
 11953  002842  0100               	movlb	0	; () banked
 11954  002844  6F8E               	movwf	lcd_send@value& (0+255),b
 11955  002846  0E01               	movlw	1
 11956  002848  ECCF  F033         	call	_lcd_send
 11957  00284C                     
 11958                           ;lib_ili9341.c: 92:     lcd_send(0,0xE0);
 11959  00284C  0EE0               	movlw	224
 11960  00284E  0100               	movlb	0	; () banked
 11961  002850  6F8E               	movwf	lcd_send@value& (0+255),b
 11962  002852  0E00               	movlw	0
 11963  002854  ECCF  F033         	call	_lcd_send
 11964  002858                     
 11965                           ;lib_ili9341.c: 93:     lcd_send(1,0x0F);
 11966  002858  0E0F               	movlw	15
 11967  00285A  0100               	movlb	0	; () banked
 11968  00285C  6F8E               	movwf	lcd_send@value& (0+255),b
 11969  00285E  0E01               	movlw	1
 11970  002860  ECCF  F033         	call	_lcd_send
 11971  002864                     
 11972                           ;lib_ili9341.c: 94:     lcd_send(1,0x31);
 11973  002864  0E31               	movlw	49
 11974  002866  0100               	movlb	0	; () banked
 11975  002868  6F8E               	movwf	lcd_send@value& (0+255),b
 11976  00286A  0E01               	movlw	1
 11977  00286C  ECCF  F033         	call	_lcd_send
 11978  002870                     
 11979                           ;lib_ili9341.c: 95:     lcd_send(1,0x2B);
 11980  002870  0E2B               	movlw	43
 11981  002872  0100               	movlb	0	; () banked
 11982  002874  6F8E               	movwf	lcd_send@value& (0+255),b
 11983  002876  0E01               	movlw	1
 11984  002878  ECCF  F033         	call	_lcd_send
 11985  00287C                     
 11986                           ;lib_ili9341.c: 96:     lcd_send(1,0x0C);
 11987  00287C  0E0C               	movlw	12
 11988  00287E  0100               	movlb	0	; () banked
 11989  002880  6F8E               	movwf	lcd_send@value& (0+255),b
 11990  002882  0E01               	movlw	1
 11991  002884  ECCF  F033         	call	_lcd_send
 11992  002888                     
 11993                           ;lib_ili9341.c: 97:     lcd_send(1,0x0E);
 11994  002888  0E0E               	movlw	14
 11995  00288A  0100               	movlb	0	; () banked
 11996  00288C  6F8E               	movwf	lcd_send@value& (0+255),b
 11997  00288E  0E01               	movlw	1
 11998  002890  ECCF  F033         	call	_lcd_send
 11999  002894                     
 12000                           ;lib_ili9341.c: 98:     lcd_send(1,0x08);
 12001  002894  0E08               	movlw	8
 12002  002896  0100               	movlb	0	; () banked
 12003  002898  6F8E               	movwf	lcd_send@value& (0+255),b
 12004  00289A  0E01               	movlw	1
 12005  00289C  ECCF  F033         	call	_lcd_send
 12006  0028A0                     
 12007                           ;lib_ili9341.c: 99:     lcd_send(1,0x4E);
 12008  0028A0  0E4E               	movlw	78
 12009  0028A2  0100               	movlb	0	; () banked
 12010  0028A4  6F8E               	movwf	lcd_send@value& (0+255),b
 12011  0028A6  0E01               	movlw	1
 12012  0028A8  ECCF  F033         	call	_lcd_send
 12013  0028AC                     
 12014                           ;lib_ili9341.c: 100:     lcd_send(1,0xF1);
 12015  0028AC  0EF1               	movlw	241
 12016  0028AE  0100               	movlb	0	; () banked
 12017  0028B0  6F8E               	movwf	lcd_send@value& (0+255),b
 12018  0028B2  0E01               	movlw	1
 12019  0028B4  ECCF  F033         	call	_lcd_send
 12020  0028B8                     
 12021                           ;lib_ili9341.c: 101:     lcd_send(1,0x37);
 12022  0028B8  0E37               	movlw	55
 12023  0028BA  0100               	movlb	0	; () banked
 12024  0028BC  6F8E               	movwf	lcd_send@value& (0+255),b
 12025  0028BE  0E01               	movlw	1
 12026  0028C0  ECCF  F033         	call	_lcd_send
 12027  0028C4                     
 12028                           ;lib_ili9341.c: 102:     lcd_send(1,0x07);
 12029  0028C4  0E07               	movlw	7
 12030  0028C6  0100               	movlb	0	; () banked
 12031  0028C8  6F8E               	movwf	lcd_send@value& (0+255),b
 12032  0028CA  0E01               	movlw	1
 12033  0028CC  ECCF  F033         	call	_lcd_send
 12034  0028D0                     
 12035                           ;lib_ili9341.c: 103:     lcd_send(1,0x10);
 12036  0028D0  0E10               	movlw	16
 12037  0028D2  0100               	movlb	0	; () banked
 12038  0028D4  6F8E               	movwf	lcd_send@value& (0+255),b
 12039  0028D6  0E01               	movlw	1
 12040  0028D8  ECCF  F033         	call	_lcd_send
 12041  0028DC                     
 12042                           ;lib_ili9341.c: 104:     lcd_send(1,0x03);
 12043  0028DC  0E03               	movlw	3
 12044  0028DE  0100               	movlb	0	; () banked
 12045  0028E0  6F8E               	movwf	lcd_send@value& (0+255),b
 12046  0028E2  0E01               	movlw	1
 12047  0028E4  ECCF  F033         	call	_lcd_send
 12048  0028E8                     
 12049                           ;lib_ili9341.c: 105:     lcd_send(1,0x0E);
 12050  0028E8  0E0E               	movlw	14
 12051  0028EA  0100               	movlb	0	; () banked
 12052  0028EC  6F8E               	movwf	lcd_send@value& (0+255),b
 12053  0028EE  0E01               	movlw	1
 12054  0028F0  ECCF  F033         	call	_lcd_send
 12055  0028F4                     
 12056                           ;lib_ili9341.c: 106:     lcd_send(1,0x09);
 12057  0028F4  0E09               	movlw	9
 12058  0028F6  0100               	movlb	0	; () banked
 12059  0028F8  6F8E               	movwf	lcd_send@value& (0+255),b
 12060  0028FA  0E01               	movlw	1
 12061  0028FC  ECCF  F033         	call	_lcd_send
 12062  002900                     
 12063                           ;lib_ili9341.c: 107:     lcd_send(1,0x00);
 12064  002900  0E00               	movlw	0
 12065  002902  0100               	movlb	0	; () banked
 12066  002904  6F8E               	movwf	lcd_send@value& (0+255),b
 12067  002906  0E01               	movlw	1
 12068  002908  ECCF  F033         	call	_lcd_send
 12069  00290C                     
 12070                           ;lib_ili9341.c: 108:     lcd_send(0,0xE1);
 12071  00290C  0EE1               	movlw	225
 12072  00290E  0100               	movlb	0	; () banked
 12073  002910  6F8E               	movwf	lcd_send@value& (0+255),b
 12074  002912  0E00               	movlw	0
 12075  002914  ECCF  F033         	call	_lcd_send
 12076  002918                     
 12077                           ;lib_ili9341.c: 109:     lcd_send(1,0x00);
 12078  002918  0E00               	movlw	0
 12079  00291A  0100               	movlb	0	; () banked
 12080  00291C  6F8E               	movwf	lcd_send@value& (0+255),b
 12081  00291E  0E01               	movlw	1
 12082  002920  ECCF  F033         	call	_lcd_send
 12083  002924                     
 12084                           ;lib_ili9341.c: 110:     lcd_send(1,0x0E);
 12085  002924  0E0E               	movlw	14
 12086  002926  0100               	movlb	0	; () banked
 12087  002928  6F8E               	movwf	lcd_send@value& (0+255),b
 12088  00292A  0E01               	movlw	1
 12089  00292C  ECCF  F033         	call	_lcd_send
 12090  002930                     
 12091                           ;lib_ili9341.c: 111:     lcd_send(1,0x14);
 12092  002930  0E14               	movlw	20
 12093  002932  0100               	movlb	0	; () banked
 12094  002934  6F8E               	movwf	lcd_send@value& (0+255),b
 12095  002936  0E01               	movlw	1
 12096  002938  ECCF  F033         	call	_lcd_send
 12097  00293C                     
 12098                           ;lib_ili9341.c: 112:     lcd_send(1,0x03);
 12099  00293C  0E03               	movlw	3
 12100  00293E  0100               	movlb	0	; () banked
 12101  002940  6F8E               	movwf	lcd_send@value& (0+255),b
 12102  002942  0E01               	movlw	1
 12103  002944  ECCF  F033         	call	_lcd_send
 12104  002948                     
 12105                           ;lib_ili9341.c: 113:     lcd_send(1,0x11);
 12106  002948  0E11               	movlw	17
 12107  00294A  0100               	movlb	0	; () banked
 12108  00294C  6F8E               	movwf	lcd_send@value& (0+255),b
 12109  00294E  0E01               	movlw	1
 12110  002950  ECCF  F033         	call	_lcd_send
 12111  002954                     
 12112                           ;lib_ili9341.c: 114:     lcd_send(1,0x07);
 12113  002954  0E07               	movlw	7
 12114  002956  0100               	movlb	0	; () banked
 12115  002958  6F8E               	movwf	lcd_send@value& (0+255),b
 12116  00295A  0E01               	movlw	1
 12117  00295C  ECCF  F033         	call	_lcd_send
 12118  002960                     
 12119                           ;lib_ili9341.c: 115:     lcd_send(1,0x31);
 12120  002960  0E31               	movlw	49
 12121  002962  0100               	movlb	0	; () banked
 12122  002964  6F8E               	movwf	lcd_send@value& (0+255),b
 12123  002966  0E01               	movlw	1
 12124  002968  ECCF  F033         	call	_lcd_send
 12125  00296C                     
 12126                           ;lib_ili9341.c: 116:     lcd_send(1,0xC1);
 12127  00296C  0EC1               	movlw	193
 12128  00296E  0100               	movlb	0	; () banked
 12129  002970  6F8E               	movwf	lcd_send@value& (0+255),b
 12130  002972  0E01               	movlw	1
 12131  002974  ECCF  F033         	call	_lcd_send
 12132  002978                     
 12133                           ;lib_ili9341.c: 117:     lcd_send(1,0x48);
 12134  002978  0E48               	movlw	72
 12135  00297A  0100               	movlb	0	; () banked
 12136  00297C  6F8E               	movwf	lcd_send@value& (0+255),b
 12137  00297E  0E01               	movlw	1
 12138  002980  ECCF  F033         	call	_lcd_send
 12139  002984                     
 12140                           ;lib_ili9341.c: 118:     lcd_send(1,0x08);
 12141  002984  0E08               	movlw	8
 12142  002986  0100               	movlb	0	; () banked
 12143  002988  6F8E               	movwf	lcd_send@value& (0+255),b
 12144  00298A  0E01               	movlw	1
 12145  00298C  ECCF  F033         	call	_lcd_send
 12146  002990                     
 12147                           ;lib_ili9341.c: 119:     lcd_send(1,0x0F);
 12148  002990  0E0F               	movlw	15
 12149  002992  0100               	movlb	0	; () banked
 12150  002994  6F8E               	movwf	lcd_send@value& (0+255),b
 12151  002996  0E01               	movlw	1
 12152  002998  ECCF  F033         	call	_lcd_send
 12153  00299C                     
 12154                           ;lib_ili9341.c: 120:     lcd_send(1,0x0C);
 12155  00299C  0E0C               	movlw	12
 12156  00299E  0100               	movlb	0	; () banked
 12157  0029A0  6F8E               	movwf	lcd_send@value& (0+255),b
 12158  0029A2  0E01               	movlw	1
 12159  0029A4  ECCF  F033         	call	_lcd_send
 12160  0029A8                     
 12161                           ;lib_ili9341.c: 121:     lcd_send(1,0x31);
 12162  0029A8  0E31               	movlw	49
 12163  0029AA  0100               	movlb	0	; () banked
 12164  0029AC  6F8E               	movwf	lcd_send@value& (0+255),b
 12165  0029AE  0E01               	movlw	1
 12166  0029B0  ECCF  F033         	call	_lcd_send
 12167  0029B4                     
 12168                           ;lib_ili9341.c: 122:     lcd_send(1,0x36);
 12169  0029B4  0E36               	movlw	54
 12170  0029B6  0100               	movlb	0	; () banked
 12171  0029B8  6F8E               	movwf	lcd_send@value& (0+255),b
 12172  0029BA  0E01               	movlw	1
 12173  0029BC  ECCF  F033         	call	_lcd_send
 12174  0029C0                     
 12175                           ;lib_ili9341.c: 123:     lcd_send(1,0x0F);
 12176  0029C0  0E0F               	movlw	15
 12177  0029C2  0100               	movlb	0	; () banked
 12178  0029C4  6F8E               	movwf	lcd_send@value& (0+255),b
 12179  0029C6  0E01               	movlw	1
 12180  0029C8  ECCF  F033         	call	_lcd_send
 12181  0029CC                     
 12182                           ;lib_ili9341.c: 124:     lcd_send(0,0x11);
 12183  0029CC  0E11               	movlw	17
 12184  0029CE  0100               	movlb	0	; () banked
 12185  0029D0  6F8E               	movwf	lcd_send@value& (0+255),b
 12186  0029D2  0E00               	movlw	0
 12187  0029D4  ECCF  F033         	call	_lcd_send
 12188                           
 12189                           ;lib_ili9341.c: 125:     msDelay(120);
 12190  0029D8  0E78               	movlw	120
 12191  0029DA  EC51  F032         	call	_msDelay
 12192  0029DE                     
 12193                           ;lib_ili9341.c: 126:     lcd_send(0,0x29);
 12194  0029DE  0E29               	movlw	41
 12195  0029E0  0100               	movlb	0	; () banked
 12196  0029E2  6F8E               	movwf	lcd_send@value& (0+255),b
 12197  0029E4  0E00               	movlw	0
 12198  0029E6  ECCF  F033         	call	_lcd_send
 12199  0029EA                     
 12200                           ;lib_ili9341.c: 127:     msDelay(120);
 12201  0029EA  0E78               	movlw	120
 12202  0029EC  EC51  F032         	call	_msDelay
 12203  0029F0                     
 12204                           ;lib_ili9341.c: 130:     lcd_fill(global_bg_color);
 12205  0029F0  0E00               	movlw	0
 12206  0029F2  0100               	movlb	0	; () banked
 12207  0029F4  6F97               	movwf	(lcd_fill@bg_color+1)& (0+255),b
 12208  0029F6  0E00               	movlw	0
 12209  0029F8  6F96               	movwf	lcd_fill@bg_color& (0+255),b
 12210  0029FA  ECFC  F02D         	call	_lcd_fill	;wreg free
 12211  0029FE  0012               	return		;funcret
 12212  002A00                     __end_of_lcd_init:
 12213                           	opt callstack 0
 12214                           
 12215 ;; *************** function _msDelay *****************
 12216 ;; Defined at:
 12217 ;;		line 16 in file "lib_ili9341.c"
 12218 ;; Parameters:    Size  Location     Type
 12219 ;;  ms              1    wreg     unsigned char 
 12220 ;; Auto vars:     Size  Location     Type
 12221 ;;  ms              1   46[BANK0 ] unsigned char 
 12222 ;;  k               1   47[BANK0 ] unsigned char 
 12223 ;; Return value:  Size  Location     Type
 12224 ;;                  1    wreg      void 
 12225 ;; Registers used:
 12226 ;;		wreg, status,2, status,0
 12227 ;; Tracked objects:
 12228 ;;		On entry : 0/0
 12229 ;;		On exit  : 0/0
 12230 ;;		Unchanged: 0/0
 12231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12233 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12234 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12235 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12236 ;;Total ram usage:        3 bytes
 12237 ;; Hardware stack levels used:    1
 12238 ;; Hardware stack levels required when called:   13
 12239 ;; This function calls:
 12240 ;;		Nothing
 12241 ;; This function is called by:
 12242 ;;		_lcd_init
 12243 ;; This function uses a non-reentrant model
 12244 ;;
 12245                           
 12246                           	psect	text38
 12247  0064A2                     __ptext38:
 12248                           	opt callstack 0
 12249  0064A2                     _msDelay:
 12250                           	opt callstack 16
 12251                           
 12252                           ;incstack = 0
 12253                           ;msDelay@ms stored from wreg
 12254  0064A2  0100               	movlb	0	; () banked
 12255  0064A4  6F8E               	movwf	msDelay@ms& (0+255),b
 12256  0064A6                     
 12257                           ;lib_ili9341.c: 16: void msDelay (uint8_t ms);lib_ili9341.c: 17: {;lib_ili9341.c: 18:   
      +                            uint8_t k;;lib_ili9341.c: 20:     for(k=0; k<ms; k++)
 12258  0064A6  0E00               	movlw	0
 12259  0064A8  0100               	movlb	0	; () banked
 12260  0064AA  6F8F               	movwf	msDelay@k& (0+255),b
 12261  0064AC  EF63  F032         	goto	l6425
 12262  0064B0                     l6421:
 12263                           
 12264                           ; BSR set to: 0
 12265                           ;lib_ili9341.c: 21:     {;lib_ili9341.c: 22:         _delay((unsigned long)((1)*(8000000
      +                          /4000.0)));
 12266  0064B0  0E03               	movlw	3
 12267  0064B2  0100               	movlb	0	; () banked
 12268  0064B4  6F8D               	movwf	??_msDelay& (0+255),b
 12269  0064B6  0E97               	movlw	151
 12270  0064B8                     u11797:
 12271  0064B8  2EE8               	decfsz	wreg,f,c
 12272  0064BA  D7FE               	bra	u11797
 12273  0064BC  2F8D               	decfsz	??_msDelay& (0+255),f,b
 12274  0064BE  D7FC               	bra	u11797
 12275  0064C0  D000               	nop2	
 12276  0064C2                     
 12277                           ;lib_ili9341.c: 23:     }
 12278  0064C2  0100               	movlb	0	; () banked
 12279  0064C4  2B8F               	incf	msDelay@k& (0+255),f,b
 12280  0064C6                     l6425:
 12281                           
 12282                           ; BSR set to: 0
 12283  0064C6  518E               	movf	msDelay@ms& (0+255),w,b
 12284  0064C8  5D8F               	subwf	msDelay@k& (0+255),w,b
 12285  0064CA  A0D8               	btfss	status,0,c
 12286  0064CC  EF6A  F032         	goto	u7621
 12287  0064D0  EF6C  F032         	goto	u7620
 12288  0064D4                     u7621:
 12289  0064D4  EF58  F032         	goto	l6421
 12290  0064D8                     u7620:
 12291  0064D8                     
 12292                           ; BSR set to: 0
 12293  0064D8  0012               	return		;funcret
 12294  0064DA                     __end_of_msDelay:
 12295                           	opt callstack 0
 12296                           
 12297 ;; *************** function _lcd_fill *****************
 12298 ;; Defined at:
 12299 ;;		line 193 in file "lib_ili9341.c"
 12300 ;; Parameters:    Size  Location     Type
 12301 ;;  bg_color        2   54[BANK0 ] unsigned short 
 12302 ;; Auto vars:     Size  Location     Type
 12303 ;;  width           2   58[BANK0 ] unsigned short 
 12304 ;;  height          2   56[BANK0 ] unsigned short 
 12305 ;; Return value:  Size  Location     Type
 12306 ;;                  1    wreg      void 
 12307 ;; Registers used:
 12308 ;;		wreg, status,2, status,0, cstack
 12309 ;; Tracked objects:
 12310 ;;		On entry : 0/0
 12311 ;;		On exit  : 0/0
 12312 ;;		Unchanged: 0/0
 12313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12314 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12315 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12317 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12318 ;;Total ram usage:        6 bytes
 12319 ;; Hardware stack levels used:    1
 12320 ;; Hardware stack levels required when called:   17
 12321 ;; This function calls:
 12322 ;;		_lcd_draw_pixel
 12323 ;;		_lcd_set_cursor
 12324 ;; This function is called by:
 12325 ;;		_lcd_init
 12326 ;; This function uses a non-reentrant model
 12327 ;;
 12328                           
 12329                           	psect	text39
 12330  005BF8                     __ptext39:
 12331                           	opt callstack 0
 12332  005BF8                     _lcd_fill:
 12333                           	opt callstack 12
 12334  005BF8                     
 12335                           ;lib_ili9341.c: 193: void lcd_fill(uint16_t bg_color);lib_ili9341.c: 194: {;lib_ili9341.
      +                          c: 195:     uint16_t width = 320, height = 240;
 12336  005BF8  0E01               	movlw	1
 12337  005BFA  0100               	movlb	0	; () banked
 12338  005BFC  6F9B               	movwf	(lcd_fill@width+1)& (0+255),b
 12339  005BFE  0E40               	movlw	64
 12340  005C00  6F9A               	movwf	lcd_fill@width& (0+255),b
 12341  005C02  0E00               	movlw	0
 12342  005C04  6F99               	movwf	(lcd_fill@height+1)& (0+255),b
 12343  005C06  0EF0               	movlw	240
 12344  005C08  6F98               	movwf	lcd_fill@height& (0+255),b
 12345  005C0A                     
 12346                           ; BSR set to: 0
 12347                           ;lib_ili9341.c: 197:     if( lcd_set_cursor(0,0) )
 12348  005C0A  0E00               	movlw	0
 12349  005C0C  6F93               	movwf	(lcd_set_cursor@x+1)& (0+255),b
 12350  005C0E  0E00               	movlw	0
 12351  005C10  6F92               	movwf	lcd_set_cursor@x& (0+255),b
 12352  005C12  0E00               	movlw	0
 12353  005C14  6F95               	movwf	(lcd_set_cursor@y+1)& (0+255),b
 12354  005C16  0E00               	movlw	0
 12355  005C18  6F94               	movwf	lcd_set_cursor@y& (0+255),b
 12356  005C1A  EC3F  F031         	call	_lcd_set_cursor	;wreg free
 12357  005C1E  0900               	iorlw	0
 12358  005C20  B4D8               	btfsc	status,2,c
 12359  005C22  EF15  F02E         	goto	u7631
 12360  005C26  EF17  F02E         	goto	u7630
 12361  005C2A                     u7631:
 12362  005C2A  EF31  F02E         	goto	l6439
 12363  005C2E                     u7630:
 12364  005C2E  EF3F  F02E         	goto	l523
 12365  005C32                     l6433:
 12366                           
 12367                           ; BSR set to: 0
 12368                           ;lib_ili9341.c: 205:         {;lib_ili9341.c: 206:             lcd_draw_pixel(bg_color);
 12369  005C32  C096  F090         	movff	lcd_fill@bg_color,lcd_draw_pixel@color
 12370  005C36  C097  F091         	movff	lcd_fill@bg_color+1,lcd_draw_pixel@color+1
 12371  005C3A  ECF8  F033         	call	_lcd_draw_pixel	;wreg free
 12372  005C3E                     l6435:
 12373                           
 12374                           ;lib_ili9341.c: 204:         while(width--)
 12375  005C3E  0100               	movlb	0	; () banked
 12376  005C40  079A               	decf	lcd_fill@width& (0+255),f,b
 12377  005C42  A0D8               	btfss	status,0,c
 12378  005C44  079B               	decf	(lcd_fill@width+1)& (0+255),f,b
 12379  005C46  299A               	incf	lcd_fill@width& (0+255),w,b
 12380  005C48  E106               	bnz	u7641
 12381  005C4A  299B               	incf	(lcd_fill@width+1)& (0+255),w,b
 12382  005C4C  A4D8               	btfss	status,2,c
 12383  005C4E  EF2B  F02E         	goto	u7641
 12384  005C52  EF2D  F02E         	goto	u7640
 12385  005C56                     u7641:
 12386  005C56  EF19  F02E         	goto	l6433
 12387  005C5A                     u7640:
 12388  005C5A                     
 12389                           ; BSR set to: 0
 12390                           ;lib_ili9341.c: 208:         width = 320;
 12391  005C5A  0E01               	movlw	1
 12392  005C5C  6F9B               	movwf	(lcd_fill@width+1)& (0+255),b
 12393  005C5E  0E40               	movlw	64
 12394  005C60  6F9A               	movwf	lcd_fill@width& (0+255),b
 12395  005C62                     l6439:
 12396                           
 12397                           ;lib_ili9341.c: 202:     while(height--)
 12398  005C62  0100               	movlb	0	; () banked
 12399  005C64  0798               	decf	lcd_fill@height& (0+255),f,b
 12400  005C66  A0D8               	btfss	status,0,c
 12401  005C68  0799               	decf	(lcd_fill@height+1)& (0+255),f,b
 12402  005C6A  2998               	incf	lcd_fill@height& (0+255),w,b
 12403  005C6C  E106               	bnz	u7651
 12404  005C6E  2999               	incf	(lcd_fill@height+1)& (0+255),w,b
 12405  005C70  A4D8               	btfss	status,2,c
 12406  005C72  EF3D  F02E         	goto	u7651
 12407  005C76  EF3F  F02E         	goto	u7650
 12408  005C7A                     u7651:
 12409  005C7A  EF1F  F02E         	goto	l6435
 12410  005C7E                     u7650:
 12411  005C7E                     l523:
 12412  005C7E  0012               	return		;funcret
 12413  005C80                     __end_of_lcd_fill:
 12414                           	opt callstack 0
 12415                           
 12416 ;; *************** function _lcd_draw_string *****************
 12417 ;; Defined at:
 12418 ;;		line 380 in file "lib_ili9341.c"
 12419 ;; Parameters:    Size  Location     Type
 12420 ;;  x               2    0[BANK1 ] unsigned short 
 12421 ;;  y               2    2[BANK1 ] unsigned short 
 12422 ;;  pS              2    4[BANK1 ] PTR const unsigned char 
 12423 ;;		 -> string(30), STR_2(33), 
 12424 ;;  fg_color        2    6[BANK1 ] unsigned short 
 12425 ;;  bg_color        2    8[BANK1 ] unsigned short 
 12426 ;; Auto vars:     Size  Location     Type
 12427 ;;  lIndex          2   82[BANK0 ] unsigned short 
 12428 ;;  k               2   80[BANK0 ] unsigned short 
 12429 ;; Return value:  Size  Location     Type
 12430 ;;                  1    wreg      void 
 12431 ;; Registers used:
 12432 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12433 ;; Tracked objects:
 12434 ;;		On entry : 0/0
 12435 ;;		On exit  : 0/0
 12436 ;;		Unchanged: 0/0
 12437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12438 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12439 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12440 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12441 ;;      Totals:         0       8      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12442 ;;Total ram usage:       18 bytes
 12443 ;; Hardware stack levels used:    1
 12444 ;; Hardware stack levels required when called:   18
 12445 ;; This function calls:
 12446 ;;		_lcd_draw_char
 12447 ;; This function is called by:
 12448 ;;		_main
 12449 ;; This function uses a non-reentrant model
 12450 ;;
 12451                           
 12452                           	psect	text40
 12453  004EAC                     __ptext40:
 12454                           	opt callstack 0
 12455  004EAC                     _lcd_draw_string:
 12456                           	opt callstack 12
 12457  004EAC                     
 12458                           ;lib_ili9341.c: 380: void lcd_draw_string (uint16_t x, uint16_t y, const char *pS, uint1
      +                          6_t fg_color, uint16_t bg_color);lib_ili9341.c: 381: {;lib_ili9341.c: 382:     uint16_t 
      +                          lIndex, k;;lib_ili9341.c: 384:     while(*pS)
 12459  004EAC  EFDB  F027         	goto	l9065
 12460  004EB0                     l9051:
 12461                           
 12462                           ;lib_ili9341.c: 385:     {;lib_ili9341.c: 386:         lIndex = 0;
 12463  004EB0  0E00               	movlw	0
 12464  004EB2  0100               	movlb	0	; () banked
 12465  004EB4  6FB3               	movwf	(lcd_draw_string@lIndex+1)& (0+255),b
 12466  004EB6  0E00               	movlw	0
 12467  004EB8  6FB2               	movwf	lcd_draw_string@lIndex& (0+255),b
 12468                           
 12469                           ;lib_ili9341.c: 387:         for(k=0; k<(*pS - ' '); k++)
 12470  004EBA  0E00               	movlw	0
 12471  004EBC  6FB1               	movwf	(lcd_draw_string@k+1)& (0+255),b
 12472  004EBE  0E00               	movlw	0
 12473  004EC0  6FB0               	movwf	lcd_draw_string@k& (0+255),b
 12474  004EC2  EF82  F027         	goto	l9057
 12475  004EC6                     l9053:
 12476                           
 12477                           ; BSR set to: 0
 12478                           ;lib_ili9341.c: 388:         {;lib_ili9341.c: 389:             lIndex += ((font[lIndex])
      +                           << 1) + 1;
 12479  004EC6  90D8               	bcf	status,0,c
 12480  004EC8  35B2               	rlcf	lcd_draw_string@lIndex& (0+255),w,b
 12481  004ECA  6EF6               	movwf	tblptrl,c
 12482  004ECC  35B3               	rlcf	(lcd_draw_string@lIndex+1)& (0+255),w,b
 12483  004ECE  6EF7               	movwf	tblptrh,c
 12484  004ED0  0E35               	movlw	low _font
 12485  004ED2  26F6               	addwf	tblptrl,f,c
 12486  004ED4  0EF1               	movlw	high _font
 12487  004ED6  22F7               	addwfc	tblptrh,f,c
 12488  004ED8                     	if	1	;There are 3 active tblptr bytes
 12489  004ED8  6AF8               	clrf	tblptru,c
 12490  004EDA  0E00               	movlw	low (__mediumconst shr (0+16))
 12491  004EDC  22F8               	addwfc	tblptru,f,c
 12492  004EDE                     	endif
 12493  004EDE  0009               	tblrd		*+
 12494  004EE0  CFF5 F0AC          	movff	tablat,??_lcd_draw_string
 12495  004EE4  0009               	tblrd		*+
 12496  004EE6  CFF5 F0AD          	movff	tablat,??_lcd_draw_string+1
 12497  004EEA  90D8               	bcf	status,0,c
 12498  004EEC  37AC               	rlcf	??_lcd_draw_string& (0+255),f,b
 12499  004EEE  37AD               	rlcf	(??_lcd_draw_string+1)& (0+255),f,b
 12500  004EF0  0E01               	movlw	1
 12501  004EF2  27AC               	addwf	??_lcd_draw_string& (0+255),f,b
 12502  004EF4  0E00               	movlw	0
 12503  004EF6  23AD               	addwfc	(??_lcd_draw_string+1)& (0+255),f,b
 12504  004EF8  51AC               	movf	??_lcd_draw_string& (0+255),w,b
 12505  004EFA  27B2               	addwf	lcd_draw_string@lIndex& (0+255),f,b
 12506  004EFC  51AD               	movf	(??_lcd_draw_string+1)& (0+255),w,b
 12507  004EFE  23B3               	addwfc	(lcd_draw_string@lIndex+1)& (0+255),f,b
 12508  004F00                     
 12509                           ; BSR set to: 0
 12510                           ;lib_ili9341.c: 390:         }
 12511  004F00  4BB0               	infsnz	lcd_draw_string@k& (0+255),f,b
 12512  004F02  2BB1               	incf	(lcd_draw_string@k+1)& (0+255),f,b
 12513  004F04                     l9057:
 12514                           
 12515                           ; BSR set to: 0
 12516  004F04  0EE0               	movlw	224
 12517  004F06  6FAC               	movwf	??_lcd_draw_string& (0+255),b
 12518  004F08  0EFF               	movlw	255
 12519  004F0A  6FAD               	movwf	(??_lcd_draw_string+1)& (0+255),b
 12520  004F0C  C104  FFF6         	movff	lcd_draw_string@pS,tblptrl
 12521  004F10  C105  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 12522  004F14  0E00               	movlw	low (__mediumconst shr (0+16))
 12523  004F16  6EF8               	movwf	tblptru,c
 12524  004F18  0E0E               	movlw	(high __ramtop+-1)
 12525  004F1A  64F7               	cpfsgt	tblptrh,c
 12526  004F1C  D003               	bra	u11707
 12527  004F1E  0008               	tblrd		*
 12528  004F20  50F5               	movf	tablat,w,c
 12529  004F22  D005               	bra	u11700
 12530  004F24                     u11707:
 12531  004F24  CFF6 FFE1          	movff	tblptrl,fsr1l
 12532  004F28  CFF7 FFE2          	movff	tblptrh,fsr1h
 12533  004F2C  50E7               	movf	indf1,w,c
 12534  004F2E                     u11700:
 12535  004F2E  0100               	movlb	0	; () banked
 12536  004F30  6FAE               	movwf	(??_lcd_draw_string+2)& (0+255),b
 12537  004F32  6BAF               	clrf	(??_lcd_draw_string+3)& (0+255),b
 12538  004F34  51AC               	movf	??_lcd_draw_string& (0+255),w,b
 12539  004F36  27AE               	addwf	(??_lcd_draw_string+2)& (0+255),f,b
 12540  004F38  51AD               	movf	(??_lcd_draw_string+1)& (0+255),w,b
 12541  004F3A  23AF               	addwfc	(??_lcd_draw_string+3)& (0+255),f,b
 12542  004F3C  51AE               	movf	(??_lcd_draw_string+2)& (0+255),w,b
 12543  004F3E  5DB0               	subwf	lcd_draw_string@k& (0+255),w,b
 12544  004F40  51AF               	movf	(??_lcd_draw_string+3)& (0+255),w,b
 12545  004F42  59B1               	subwfb	(lcd_draw_string@k+1)& (0+255),w,b
 12546  004F44  A0D8               	btfss	status,0,c
 12547  004F46  EFA7  F027         	goto	u11711
 12548  004F4A  EFA9  F027         	goto	u11710
 12549  004F4E                     u11711:
 12550  004F4E  EF63  F027         	goto	l9053
 12551  004F52                     u11710:
 12552  004F52                     
 12553                           ; BSR set to: 0
 12554                           ;lib_ili9341.c: 392:         lcd_draw_char(x, y, lIndex, fg_color, bg_color);
 12555  004F52  C100  F096         	movff	lcd_draw_string@x,lcd_draw_char@x
 12556  004F56  C101  F097         	movff	lcd_draw_string@x+1,lcd_draw_char@x+1
 12557  004F5A  C102  F098         	movff	lcd_draw_string@y,lcd_draw_char@y
 12558  004F5E  C103  F099         	movff	lcd_draw_string@y+1,lcd_draw_char@y+1
 12559  004F62  C0B2  F09A         	movff	lcd_draw_string@lIndex,lcd_draw_char@fIndex
 12560  004F66  C0B3  F09B         	movff	lcd_draw_string@lIndex+1,lcd_draw_char@fIndex+1
 12561  004F6A  C106  F09C         	movff	lcd_draw_string@fg_color,lcd_draw_char@fg_color
 12562  004F6E  C107  F09D         	movff	lcd_draw_string@fg_color+1,lcd_draw_char@fg_color+1
 12563  004F72  C108  F09E         	movff	lcd_draw_string@bg_color,lcd_draw_char@bg_color
 12564  004F76  C109  F09F         	movff	lcd_draw_string@bg_color+1,lcd_draw_char@bg_color+1
 12565  004F7A  EC30  F025         	call	_lcd_draw_char	;wreg free
 12566  004F7E                     
 12567                           ;lib_ili9341.c: 394:         x += font[lIndex];
 12568  004F7E  90D8               	bcf	status,0,c
 12569  004F80  0100               	movlb	0	; () banked
 12570  004F82  35B2               	rlcf	lcd_draw_string@lIndex& (0+255),w,b
 12571  004F84  6EF6               	movwf	tblptrl,c
 12572  004F86  35B3               	rlcf	(lcd_draw_string@lIndex+1)& (0+255),w,b
 12573  004F88  6EF7               	movwf	tblptrh,c
 12574  004F8A  0E35               	movlw	low _font
 12575  004F8C  26F6               	addwf	tblptrl,f,c
 12576  004F8E  0EF1               	movlw	high _font
 12577  004F90  22F7               	addwfc	tblptrh,f,c
 12578  004F92                     	if	1	;There are 3 active tblptr bytes
 12579  004F92  6AF8               	clrf	tblptru,c
 12580  004F94  0E00               	movlw	low (__mediumconst shr (0+16))
 12581  004F96  22F8               	addwfc	tblptru,f,c
 12582  004F98                     	endif
 12583  004F98  0009               	tblrd		*+
 12584  004F9A  CFF5 F0AC          	movff	tablat,??_lcd_draw_string
 12585  004F9E  0009               	tblrd		*+
 12586  004FA0  CFF5 F0AD          	movff	tablat,??_lcd_draw_string+1
 12587  004FA4  51AC               	movf	??_lcd_draw_string& (0+255),w,b
 12588  004FA6  0101               	movlb	1	; () banked
 12589  004FA8  2700               	addwf	lcd_draw_string@x& (0+255),f,b
 12590  004FAA  0100               	movlb	0	; () banked
 12591  004FAC  51AD               	movf	(??_lcd_draw_string+1)& (0+255),w,b
 12592  004FAE  0101               	movlb	1	; () banked
 12593  004FB0  2301               	addwfc	(lcd_draw_string@x+1)& (0+255),f,b
 12594  004FB2                     
 12595                           ; BSR set to: 1
 12596                           ;lib_ili9341.c: 396:         pS++;
 12597  004FB2  4B04               	infsnz	lcd_draw_string@pS& (0+255),f,b
 12598  004FB4  2B05               	incf	(lcd_draw_string@pS+1)& (0+255),f,b
 12599  004FB6                     l9065:
 12600                           
 12601                           ;lib_ili9341.c: 384:     while(*pS)
 12602  004FB6  C104  FFF6         	movff	lcd_draw_string@pS,tblptrl
 12603  004FBA  C105  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 12604  004FBE  0E00               	movlw	low (__mediumconst shr (0+16))
 12605  004FC0  6EF8               	movwf	tblptru,c
 12606  004FC2  0E0E               	movlw	(high __ramtop+-1)
 12607  004FC4  64F7               	cpfsgt	tblptrh,c
 12608  004FC6  D003               	bra	u11727
 12609  004FC8  0008               	tblrd		*
 12610  004FCA  50F5               	movf	tablat,w,c
 12611  004FCC  D005               	bra	u11720
 12612  004FCE                     u11727:
 12613  004FCE  CFF6 FFE1          	movff	tblptrl,fsr1l
 12614  004FD2  CFF7 FFE2          	movff	tblptrh,fsr1h
 12615  004FD6  50E7               	movf	indf1,w,c
 12616  004FD8                     u11720:
 12617  004FD8  0900               	iorlw	0
 12618  004FDA  A4D8               	btfss	status,2,c
 12619  004FDC  EFF2  F027         	goto	u11731
 12620  004FE0  EFF4  F027         	goto	u11730
 12621  004FE4                     u11731:
 12622  004FE4  EF58  F027         	goto	l9051
 12623  004FE8                     u11730:
 12624  004FE8  0012               	return		;funcret
 12625  004FEA                     __end_of_lcd_draw_string:
 12626                           	opt callstack 0
 12627                           
 12628 ;; *************** function _lcd_draw_char *****************
 12629 ;; Defined at:
 12630 ;;		line 355 in file "lib_ili9341.c"
 12631 ;; Parameters:    Size  Location     Type
 12632 ;;  x               2   54[BANK0 ] unsigned short 
 12633 ;;  y               2   56[BANK0 ] unsigned short 
 12634 ;;  fIndex          2   58[BANK0 ] unsigned short 
 12635 ;;  fg_color        2   60[BANK0 ] unsigned short 
 12636 ;;  bg_color        2   62[BANK0 ] unsigned short 
 12637 ;; Auto vars:     Size  Location     Type
 12638 ;;  i               1   75[BANK0 ] unsigned char 
 12639 ;;  k               1   74[BANK0 ] unsigned char 
 12640 ;;  j               1   73[BANK0 ] unsigned char 
 12641 ;; Return value:  Size  Location     Type
 12642 ;;                  1    wreg      void 
 12643 ;; Registers used:
 12644 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12645 ;; Tracked objects:
 12646 ;;		On entry : 0/0
 12647 ;;		On exit  : 0/0
 12648 ;;		Unchanged: 0/0
 12649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12650 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12651 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12652 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12653 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12654 ;;Total ram usage:       22 bytes
 12655 ;; Hardware stack levels used:    1
 12656 ;; Hardware stack levels required when called:   17
 12657 ;; This function calls:
 12658 ;;		_lcd_draw_pixel
 12659 ;;		_lcd_set_cursor
 12660 ;; This function is called by:
 12661 ;;		_lcd_draw_string
 12662 ;; This function uses a non-reentrant model
 12663 ;;
 12664                           
 12665                           	psect	text41
 12666  004A60                     __ptext41:
 12667                           	opt callstack 0
 12668  004A60                     _lcd_draw_char:
 12669                           	opt callstack 12
 12670  004A60                     
 12671                           ;lib_ili9341.c: 355: void lcd_draw_char (uint16_t x, uint16_t y, uint16_t fIndex, uint16
      +                          _t fg_color, uint16_t bg_color);lib_ili9341.c: 356: {;lib_ili9341.c: 357:     uint8_t j,
      +                           k, i;;lib_ili9341.c: 359:     for(j=0; j < font[fIndex]; j++)
 12672  004A60  0E00               	movlw	0
 12673  004A62  0100               	movlb	0	; () banked
 12674  004A64  6FA9               	movwf	lcd_draw_char@j& (0+255),b
 12675  004A66  EFD4  F025         	goto	l6477
 12676  004A6A                     l6447:
 12677                           
 12678                           ; BSR set to: 0
 12679                           ;lib_ili9341.c: 360:     {;lib_ili9341.c: 361:         lcd_set_cursor(x + font[fIndex] -
      +                           j, y);
 12680  004A6A  90D8               	bcf	status,0,c
 12681  004A6C  359A               	rlcf	lcd_draw_char@fIndex& (0+255),w,b
 12682  004A6E  6EF6               	movwf	tblptrl,c
 12683  004A70  359B               	rlcf	(lcd_draw_char@fIndex+1)& (0+255),w,b
 12684  004A72  6EF7               	movwf	tblptrh,c
 12685  004A74  0E35               	movlw	low _font
 12686  004A76  26F6               	addwf	tblptrl,f,c
 12687  004A78  0EF1               	movlw	high _font
 12688  004A7A  22F7               	addwfc	tblptrh,f,c
 12689  004A7C                     	if	1	;There are 3 active tblptr bytes
 12690  004A7C  6AF8               	clrf	tblptru,c
 12691  004A7E  0E00               	movlw	low (__mediumconst shr (0+16))
 12692  004A80  22F8               	addwfc	tblptru,f,c
 12693  004A82                     	endif
 12694  004A82  0009               	tblrd		*+
 12695  004A84  CFF5 F0A0          	movff	tablat,??_lcd_draw_char
 12696  004A88  0009               	tblrd		*+
 12697  004A8A  CFF5 F0A1          	movff	tablat,??_lcd_draw_char+1
 12698  004A8E  51A9               	movf	lcd_draw_char@j& (0+255),w,b
 12699  004A90  5FA0               	subwf	??_lcd_draw_char& (0+255),f,b
 12700  004A92  0E00               	movlw	0
 12701  004A94  5BA1               	subwfb	(??_lcd_draw_char+1)& (0+255),f,b
 12702  004A96  5196               	movf	lcd_draw_char@x& (0+255),w,b
 12703  004A98  25A0               	addwf	??_lcd_draw_char& (0+255),w,b
 12704  004A9A  6F92               	movwf	lcd_set_cursor@x& (0+255),b
 12705  004A9C  5197               	movf	(lcd_draw_char@x+1)& (0+255),w,b
 12706  004A9E  21A1               	addwfc	(??_lcd_draw_char+1)& (0+255),w,b
 12707  004AA0  6F93               	movwf	(lcd_set_cursor@x+1)& (0+255),b
 12708  004AA2  C098  F094         	movff	lcd_draw_char@y,lcd_set_cursor@y
 12709  004AA6  C099  F095         	movff	lcd_draw_char@y+1,lcd_set_cursor@y+1
 12710  004AAA  EC3F  F031         	call	_lcd_set_cursor	;wreg free
 12711  004AAE                     
 12712                           ;lib_ili9341.c: 363:         for(k=0; k<2; k++)
 12713  004AAE  0E00               	movlw	0
 12714  004AB0  0100               	movlb	0	; () banked
 12715  004AB2  6FAA               	movwf	lcd_draw_char@k& (0+255),b
 12716  004AB4                     l6455:
 12717                           
 12718                           ; BSR set to: 0
 12719                           ;lib_ili9341.c: 364:         {;lib_ili9341.c: 365:             for(i=0; i<8; i++)
 12720  004AB4  0E00               	movlw	0
 12721  004AB6  6FAB               	movwf	lcd_draw_char@i& (0+255),b
 12722  004AB8                     l6461:
 12723                           
 12724                           ; BSR set to: 0
 12725                           ;lib_ili9341.c: 366:             {;lib_ili9341.c: 367:                 if( font[ (fIndex
      +                           + ((font[fIndex]) << 1)) - (j<<1) - k ] & (0x80 >> i) )
 12726  004AB8  51A9               	movf	lcd_draw_char@j& (0+255),w,b
 12727  004ABA  6FA0               	movwf	??_lcd_draw_char& (0+255),b
 12728  004ABC  6BA1               	clrf	(??_lcd_draw_char+1)& (0+255),b
 12729  004ABE  90D8               	bcf	status,0,c
 12730  004AC0  37A0               	rlcf	??_lcd_draw_char& (0+255),f,b
 12731  004AC2  37A1               	rlcf	(??_lcd_draw_char+1)& (0+255),f,b
 12732  004AC4  90D8               	bcf	status,0,c
 12733  004AC6  359A               	rlcf	lcd_draw_char@fIndex& (0+255),w,b
 12734  004AC8  6EF6               	movwf	tblptrl,c
 12735  004ACA  359B               	rlcf	(lcd_draw_char@fIndex+1)& (0+255),w,b
 12736  004ACC  6EF7               	movwf	tblptrh,c
 12737  004ACE  0E35               	movlw	low _font
 12738  004AD0  26F6               	addwf	tblptrl,f,c
 12739  004AD2  0EF1               	movlw	high _font
 12740  004AD4  22F7               	addwfc	tblptrh,f,c
 12741  004AD6                     	if	1	;There are 3 active tblptr bytes
 12742  004AD6  6AF8               	clrf	tblptru,c
 12743  004AD8  0E00               	movlw	low (__mediumconst shr (0+16))
 12744  004ADA  22F8               	addwfc	tblptru,f,c
 12745  004ADC                     	endif
 12746  004ADC  0009               	tblrd		*+
 12747  004ADE  CFF5 F0A2          	movff	tablat,??_lcd_draw_char+2
 12748  004AE2  0009               	tblrd		*+
 12749  004AE4  CFF5 F0A3          	movff	tablat,??_lcd_draw_char+3
 12750  004AE8  90D8               	bcf	status,0,c
 12751  004AEA  37A2               	rlcf	(??_lcd_draw_char+2)& (0+255),f,b
 12752  004AEC  37A3               	rlcf	(??_lcd_draw_char+3)& (0+255),f,b
 12753  004AEE  51A0               	movf	??_lcd_draw_char& (0+255),w,b
 12754  004AF0  5FA2               	subwf	(??_lcd_draw_char+2)& (0+255),f,b
 12755  004AF2  51A1               	movf	(??_lcd_draw_char+1)& (0+255),w,b
 12756  004AF4  5BA3               	subwfb	(??_lcd_draw_char+3)& (0+255),f,b
 12757  004AF6  51AA               	movf	lcd_draw_char@k& (0+255),w,b
 12758  004AF8  5FA2               	subwf	(??_lcd_draw_char+2)& (0+255),f,b
 12759  004AFA  0E00               	movlw	0
 12760  004AFC  5BA3               	subwfb	(??_lcd_draw_char+3)& (0+255),f,b
 12761  004AFE  519A               	movf	lcd_draw_char@fIndex& (0+255),w,b
 12762  004B00  27A2               	addwf	(??_lcd_draw_char+2)& (0+255),f,b
 12763  004B02  519B               	movf	(lcd_draw_char@fIndex+1)& (0+255),w,b
 12764  004B04  23A3               	addwfc	(??_lcd_draw_char+3)& (0+255),f,b
 12765  004B06  90D8               	bcf	status,0,c
 12766  004B08  37A2               	rlcf	(??_lcd_draw_char+2)& (0+255),f,b
 12767  004B0A  37A3               	rlcf	(??_lcd_draw_char+3)& (0+255),f,b
 12768  004B0C  0E35               	movlw	low _font
 12769  004B0E  25A2               	addwf	(??_lcd_draw_char+2)& (0+255),w,b
 12770  004B10  6EF6               	movwf	tblptrl,c
 12771  004B12  0EF1               	movlw	high _font
 12772  004B14  21A3               	addwfc	(??_lcd_draw_char+3)& (0+255),w,b
 12773  004B16  6EF7               	movwf	tblptrh,c
 12774  004B18                     	if	1	;There are 3 active tblptr bytes
 12775  004B18  6AF8               	clrf	tblptru,c
 12776  004B1A  0E00               	movlw	low (__mediumconst shr (0+16))
 12777  004B1C  22F8               	addwfc	tblptru,f,c
 12778  004B1E                     	endif
 12779  004B1E  0009               	tblrd		*+
 12780  004B20  CFF5 F0A4          	movff	tablat,??_lcd_draw_char+4
 12781  004B24  0009               	tblrd		*+
 12782  004B26  CFF5 F0A5          	movff	tablat,??_lcd_draw_char+5
 12783  004B2A  C0AB  F0A6         	movff	lcd_draw_char@i,??_lcd_draw_char+6
 12784  004B2E  0E80               	movlw	128
 12785  004B30  6FA7               	movwf	(??_lcd_draw_char+7)& (0+255),b
 12786  004B32  0E00               	movlw	0
 12787  004B34  6FA8               	movwf	(??_lcd_draw_char+8)& (0+255),b
 12788  004B36  2BA6               	incf	(??_lcd_draw_char+6)& (0+255),f,b
 12789  004B38  EFA1  F025         	goto	u7674
 12790  004B3C                     u7675:
 12791  004B3C  35A8               	rlcf	(??_lcd_draw_char+8)& (0+255),w,b
 12792  004B3E  33A8               	rrcf	(??_lcd_draw_char+8)& (0+255),f,b
 12793  004B40  33A7               	rrcf	(??_lcd_draw_char+7)& (0+255),f,b
 12794  004B42                     u7674:
 12795  004B42  2FA6               	decfsz	(??_lcd_draw_char+6)& (0+255),f,b
 12796  004B44  EF9E  F025         	goto	u7675
 12797  004B48  0100               	movlb	0	; () banked
 12798  004B4A  51A4               	movf	(??_lcd_draw_char+4)& (0+255),w,b
 12799  004B4C  17A7               	andwf	(??_lcd_draw_char+7)& (0+255),f,b
 12800  004B4E  51A5               	movf	(??_lcd_draw_char+5)& (0+255),w,b
 12801  004B50  17A8               	andwf	(??_lcd_draw_char+8)& (0+255),f,b
 12802  004B52  51A7               	movf	(??_lcd_draw_char+7)& (0+255),w,b
 12803  004B54  11A8               	iorwf	(??_lcd_draw_char+8)& (0+255),w,b
 12804  004B56  B4D8               	btfsc	status,2,c
 12805  004B58  EFB0  F025         	goto	u7681
 12806  004B5C  EFB2  F025         	goto	u7680
 12807  004B60                     u7681:
 12808  004B60  EFBA  F025         	goto	l6465
 12809  004B64                     u7680:
 12810  004B64                     
 12811                           ; BSR set to: 0
 12812                           ;lib_ili9341.c: 368:                 {;lib_ili9341.c: 369:                     lcd_draw_
      +                          pixel(fg_color);
 12813  004B64  C09C  F090         	movff	lcd_draw_char@fg_color,lcd_draw_pixel@color
 12814  004B68  C09D  F091         	movff	lcd_draw_char@fg_color+1,lcd_draw_pixel@color+1
 12815  004B6C  ECF8  F033         	call	_lcd_draw_pixel	;wreg free
 12816                           
 12817                           ;lib_ili9341.c: 370:                 }
 12818  004B70  EFC0  F025         	goto	l6467
 12819  004B74                     l6465:
 12820                           
 12821                           ; BSR set to: 0
 12822                           ;lib_ili9341.c: 372:                 {;lib_ili9341.c: 373:                     lcd_draw_
      +                          pixel(bg_color);
 12823  004B74  C09E  F090         	movff	lcd_draw_char@bg_color,lcd_draw_pixel@color
 12824  004B78  C09F  F091         	movff	lcd_draw_char@bg_color+1,lcd_draw_pixel@color+1
 12825  004B7C  ECF8  F033         	call	_lcd_draw_pixel	;wreg free
 12826  004B80                     l6467:
 12827                           
 12828                           ;lib_ili9341.c: 375:             }
 12829  004B80  0100               	movlb	0	; () banked
 12830  004B82  2BAB               	incf	lcd_draw_char@i& (0+255),f,b
 12831  004B84                     
 12832                           ; BSR set to: 0
 12833  004B84  0E07               	movlw	7
 12834  004B86  65AB               	cpfsgt	lcd_draw_char@i& (0+255),b
 12835  004B88  EFC8  F025         	goto	u7691
 12836  004B8C  EFCA  F025         	goto	u7690
 12837  004B90                     u7691:
 12838  004B90  EF5C  F025         	goto	l6461
 12839  004B94                     u7690:
 12840  004B94                     
 12841                           ; BSR set to: 0
 12842                           ;lib_ili9341.c: 376:         }
 12843  004B94  2BAA               	incf	lcd_draw_char@k& (0+255),f,b
 12844  004B96                     
 12845                           ; BSR set to: 0
 12846  004B96  0E01               	movlw	1
 12847  004B98  65AA               	cpfsgt	lcd_draw_char@k& (0+255),b
 12848  004B9A  EFD1  F025         	goto	u7701
 12849  004B9E  EFD3  F025         	goto	u7700
 12850  004BA2                     u7701:
 12851  004BA2  EF5A  F025         	goto	l6455
 12852  004BA6                     u7700:
 12853  004BA6                     
 12854                           ; BSR set to: 0
 12855                           ;lib_ili9341.c: 377:     }
 12856  004BA6  2BA9               	incf	lcd_draw_char@j& (0+255),f,b
 12857  004BA8                     l6477:
 12858                           
 12859                           ; BSR set to: 0
 12860  004BA8  90D8               	bcf	status,0,c
 12861  004BAA  359A               	rlcf	lcd_draw_char@fIndex& (0+255),w,b
 12862  004BAC  6EF6               	movwf	tblptrl,c
 12863  004BAE  359B               	rlcf	(lcd_draw_char@fIndex+1)& (0+255),w,b
 12864  004BB0  6EF7               	movwf	tblptrh,c
 12865  004BB2  0E35               	movlw	low _font
 12866  004BB4  26F6               	addwf	tblptrl,f,c
 12867  004BB6  0EF1               	movlw	high _font
 12868  004BB8  22F7               	addwfc	tblptrh,f,c
 12869  004BBA                     	if	1	;There are 3 active tblptr bytes
 12870  004BBA  6AF8               	clrf	tblptru,c
 12871  004BBC  0E00               	movlw	low (__mediumconst shr (0+16))
 12872  004BBE  22F8               	addwfc	tblptru,f,c
 12873  004BC0                     	endif
 12874  004BC0  51A9               	movf	lcd_draw_char@j& (0+255),w,b
 12875  004BC2  6FA0               	movwf	??_lcd_draw_char& (0+255),b
 12876  004BC4  6BA1               	clrf	(??_lcd_draw_char+1)& (0+255),b
 12877  004BC6  0009               	tblrd		*+
 12878  004BC8  50F5               	movf	tablat,w,c
 12879  004BCA  5DA0               	subwf	??_lcd_draw_char& (0+255),w,b
 12880  004BCC  0009               	tblrd		*+
 12881  004BCE  50F5               	movf	tablat,w,c
 12882  004BD0  59A1               	subwfb	(??_lcd_draw_char+1)& (0+255),w,b
 12883  004BD2  A0D8               	btfss	status,0,c
 12884  004BD4  EFEE  F025         	goto	u7711
 12885  004BD8  EFF0  F025         	goto	u7710
 12886  004BDC                     u7711:
 12887  004BDC  EF35  F025         	goto	l6447
 12888  004BE0                     u7710:
 12889  004BE0                     
 12890                           ; BSR set to: 0
 12891  004BE0  0012               	return		;funcret
 12892  004BE2                     __end_of_lcd_draw_char:
 12893                           	opt callstack 0
 12894                           
 12895 ;; *************** function _lcd_set_cursor *****************
 12896 ;; Defined at:
 12897 ;;		line 144 in file "lib_ili9341.c"
 12898 ;; Parameters:    Size  Location     Type
 12899 ;;  x               2   50[BANK0 ] unsigned short 
 12900 ;;  y               2   52[BANK0 ] unsigned short 
 12901 ;; Auto vars:     Size  Location     Type
 12902 ;;		None
 12903 ;; Return value:  Size  Location     Type
 12904 ;;                  1    wreg      unsigned char 
 12905 ;; Registers used:
 12906 ;;		wreg, status,2, status,0, cstack
 12907 ;; Tracked objects:
 12908 ;;		On entry : 0/0
 12909 ;;		On exit  : 0/0
 12910 ;;		Unchanged: 0/0
 12911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12912 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12915 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12916 ;;Total ram usage:        4 bytes
 12917 ;; Hardware stack levels used:    1
 12918 ;; Hardware stack levels required when called:   16
 12919 ;; This function calls:
 12920 ;;		_lcd_set_cursor_x
 12921 ;;		_lcd_set_cursor_y
 12922 ;; This function is called by:
 12923 ;;		_lcd_fill
 12924 ;;		_lcd_draw_char
 12925 ;;		_lcd_draw_pixel_at
 12926 ;;		_lcd_fill_rect
 12927 ;; This function uses a non-reentrant model
 12928 ;;
 12929                           
 12930                           	psect	text42
 12931  00627E                     __ptext42:
 12932                           	opt callstack 0
 12933  00627E                     _lcd_set_cursor:
 12934                           	opt callstack 12
 12935  00627E                     
 12936                           ;lib_ili9341.c: 144: uint8_t lcd_set_cursor(uint16_t x, uint16_t y);lib_ili9341.c: 145: 
      +                          {;lib_ili9341.c: 146:     if( lcd_set_cursor_x(x) || lcd_set_cursor_y(y) )
 12937  00627E  C092  F090         	movff	lcd_set_cursor@x,lcd_set_cursor_x@x
 12938  006282  C093  F091         	movff	lcd_set_cursor@x+1,lcd_set_cursor_x@x+1
 12939  006286  EC6B  F030         	call	_lcd_set_cursor_x	;wreg free
 12940  00628A  0900               	iorlw	0
 12941  00628C  A4D8               	btfss	status,2,c
 12942  00628E  EF4B  F031         	goto	u7521
 12943  006292  EF4D  F031         	goto	u7520
 12944  006296                     u7521:
 12945  006296  EF5B  F031         	goto	l6309
 12946  00629A                     u7520:
 12947  00629A  C094  F090         	movff	lcd_set_cursor@y,lcd_set_cursor_y@y
 12948  00629E  C095  F091         	movff	lcd_set_cursor@y+1,lcd_set_cursor_y@y+1
 12949  0062A2  EC44  F030         	call	_lcd_set_cursor_y	;wreg free
 12950  0062A6  0900               	iorlw	0
 12951  0062A8  B4D8               	btfsc	status,2,c
 12952  0062AA  EF59  F031         	goto	u7531
 12953  0062AE  EF5B  F031         	goto	u7530
 12954  0062B2                     u7531:
 12955  0062B2  EF5E  F031         	goto	l6313
 12956  0062B6                     u7530:
 12957  0062B6                     l6309:
 12958                           
 12959                           ;lib_ili9341.c: 147:     {;lib_ili9341.c: 148:         return 1;
 12960  0062B6  0E01               	movlw	1
 12961  0062B8  EF5F  F031         	goto	l508
 12962  0062BC                     l6313:
 12963                           
 12964                           ;lib_ili9341.c: 151:     return 0;
 12965  0062BC  0E00               	movlw	0
 12966  0062BE                     l508:
 12967  0062BE  0012               	return		;funcret
 12968  0062C0                     __end_of_lcd_set_cursor:
 12969                           	opt callstack 0
 12970                           
 12971 ;; *************** function _lcd_set_cursor_y *****************
 12972 ;; Defined at:
 12973 ;;		line 170 in file "lib_ili9341.c"
 12974 ;; Parameters:    Size  Location     Type
 12975 ;;  y               2   48[BANK0 ] unsigned short 
 12976 ;; Auto vars:     Size  Location     Type
 12977 ;;		None
 12978 ;; Return value:  Size  Location     Type
 12979 ;;                  1    wreg      unsigned char 
 12980 ;; Registers used:
 12981 ;;		wreg, status,2, status,0, cstack
 12982 ;; Tracked objects:
 12983 ;;		On entry : 0/0
 12984 ;;		On exit  : 0/0
 12985 ;;		Unchanged: 0/0
 12986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12987 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12990 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12991 ;;Total ram usage:        2 bytes
 12992 ;; Hardware stack levels used:    1
 12993 ;; Hardware stack levels required when called:   15
 12994 ;; This function calls:
 12995 ;;		_lcd_send
 12996 ;; This function is called by:
 12997 ;;		_lcd_set_cursor
 12998 ;; This function uses a non-reentrant model
 12999 ;;
 13000                           
 13001                           	psect	text43
 13002  006088                     __ptext43:
 13003                           	opt callstack 0
 13004  006088                     _lcd_set_cursor_y:
 13005                           	opt callstack 12
 13006  006088                     
 13007                           ;lib_ili9341.c: 170: uint8_t lcd_set_cursor_y(uint16_t y);lib_ili9341.c: 171: {;lib_ili9
      +                          341.c: 172:     if( y >= 240 )
 13008  006088  0100               	movlb	0	; () banked
 13009  00608A  5191               	movf	(lcd_set_cursor_y@y+1)& (0+255),w,b
 13010  00608C  E109               	bnz	u7040
 13011  00608E  0EF0               	movlw	240
 13012  006090  5D90               	subwf	lcd_set_cursor_y@y& (0+255),w,b
 13013  006092  A0D8               	btfss	status,0,c
 13014  006094  EF4E  F030         	goto	u7041
 13015  006098  EF50  F030         	goto	u7040
 13016  00609C                     u7041:
 13017  00609C  EF53  F030         	goto	l5937
 13018  0060A0                     u7040:
 13019  0060A0                     
 13020                           ; BSR set to: 0
 13021                           ;lib_ili9341.c: 173:     {;lib_ili9341.c: 174:         return 1;
 13022  0060A0  0E01               	movlw	1
 13023  0060A2  EF6A  F030         	goto	l516
 13024  0060A6                     l5937:
 13025                           
 13026                           ; BSR set to: 0
 13027                           ;lib_ili9341.c: 177:     lcd_send(0, 0x2A);
 13028  0060A6  0E2A               	movlw	42
 13029  0060A8  6F8E               	movwf	lcd_send@value& (0+255),b
 13030  0060AA  0E00               	movlw	0
 13031  0060AC  ECCF  F033         	call	_lcd_send
 13032                           
 13033                           ;lib_ili9341.c: 178:     lcd_send(1, y >> 8);
 13034  0060B0  0100               	movlb	0	; () banked
 13035  0060B2  5191               	movf	(lcd_set_cursor_y@y+1)& (0+255),w,b
 13036  0060B4  6F8E               	movwf	lcd_send@value& (0+255),b
 13037  0060B6  0E01               	movlw	1
 13038  0060B8  ECCF  F033         	call	_lcd_send
 13039                           
 13040                           ;lib_ili9341.c: 179:     lcd_send(1, y & 0xFF);
 13041  0060BC  C090  F08E         	movff	lcd_set_cursor_y@y,lcd_send@value
 13042  0060C0  0E01               	movlw	1
 13043  0060C2  ECCF  F033         	call	_lcd_send
 13044                           
 13045                           ;lib_ili9341.c: 180:     lcd_send(0, 0x2c);
 13046  0060C6  0E2C               	movlw	44
 13047  0060C8  0100               	movlb	0	; () banked
 13048  0060CA  6F8E               	movwf	lcd_send@value& (0+255),b
 13049  0060CC  0E00               	movlw	0
 13050  0060CE  ECCF  F033         	call	_lcd_send
 13051  0060D2                     
 13052                           ;lib_ili9341.c: 182:     return 0;
 13053  0060D2  0E00               	movlw	0
 13054  0060D4                     l516:
 13055  0060D4  0012               	return		;funcret
 13056  0060D6                     __end_of_lcd_set_cursor_y:
 13057                           	opt callstack 0
 13058                           
 13059 ;; *************** function _lcd_set_cursor_x *****************
 13060 ;; Defined at:
 13061 ;;		line 155 in file "lib_ili9341.c"
 13062 ;; Parameters:    Size  Location     Type
 13063 ;;  x               2   48[BANK0 ] unsigned short 
 13064 ;; Auto vars:     Size  Location     Type
 13065 ;;		None
 13066 ;; Return value:  Size  Location     Type
 13067 ;;                  1    wreg      unsigned char 
 13068 ;; Registers used:
 13069 ;;		wreg, status,2, status,0, cstack
 13070 ;; Tracked objects:
 13071 ;;		On entry : 0/0
 13072 ;;		On exit  : 0/0
 13073 ;;		Unchanged: 0/0
 13074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13075 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13078 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13079 ;;Total ram usage:        2 bytes
 13080 ;; Hardware stack levels used:    1
 13081 ;; Hardware stack levels required when called:   15
 13082 ;; This function calls:
 13083 ;;		_lcd_send
 13084 ;; This function is called by:
 13085 ;;		_lcd_set_cursor
 13086 ;; This function uses a non-reentrant model
 13087 ;;
 13088                           
 13089                           	psect	text44
 13090  0060D6                     __ptext44:
 13091                           	opt callstack 0
 13092  0060D6                     _lcd_set_cursor_x:
 13093                           	opt callstack 12
 13094  0060D6                     
 13095                           ;lib_ili9341.c: 155: uint8_t lcd_set_cursor_x(uint16_t x);lib_ili9341.c: 156: {;lib_ili9
      +                          341.c: 157:     if( x >= 320 )
 13096  0060D6  0E40               	movlw	64
 13097  0060D8  0100               	movlb	0	; () banked
 13098  0060DA  5D90               	subwf	lcd_set_cursor_x@x& (0+255),w,b
 13099  0060DC  0E01               	movlw	1
 13100  0060DE  5991               	subwfb	(lcd_set_cursor_x@x+1)& (0+255),w,b
 13101  0060E0  A0D8               	btfss	status,0,c
 13102  0060E2  EF75  F030         	goto	u7031
 13103  0060E6  EF77  F030         	goto	u7030
 13104  0060EA                     u7031:
 13105  0060EA  EF7A  F030         	goto	l5925
 13106  0060EE                     u7030:
 13107  0060EE                     
 13108                           ; BSR set to: 0
 13109                           ;lib_ili9341.c: 158:     {;lib_ili9341.c: 159:         return 1;
 13110  0060EE  0E01               	movlw	1
 13111  0060F0  EF91  F030         	goto	l512
 13112  0060F4                     l5925:
 13113                           
 13114                           ; BSR set to: 0
 13115                           ;lib_ili9341.c: 162:     lcd_send(0, 0x2B);
 13116  0060F4  0E2B               	movlw	43
 13117  0060F6  6F8E               	movwf	lcd_send@value& (0+255),b
 13118  0060F8  0E00               	movlw	0
 13119  0060FA  ECCF  F033         	call	_lcd_send
 13120                           
 13121                           ;lib_ili9341.c: 163:     lcd_send(1, x >> 8);
 13122  0060FE  0100               	movlb	0	; () banked
 13123  006100  5191               	movf	(lcd_set_cursor_x@x+1)& (0+255),w,b
 13124  006102  6F8E               	movwf	lcd_send@value& (0+255),b
 13125  006104  0E01               	movlw	1
 13126  006106  ECCF  F033         	call	_lcd_send
 13127                           
 13128                           ;lib_ili9341.c: 164:     lcd_send(1, x & 0xFF);
 13129  00610A  C090  F08E         	movff	lcd_set_cursor_x@x,lcd_send@value
 13130  00610E  0E01               	movlw	1
 13131  006110  ECCF  F033         	call	_lcd_send
 13132                           
 13133                           ;lib_ili9341.c: 165:     lcd_send(0, 0x2c);
 13134  006114  0E2C               	movlw	44
 13135  006116  0100               	movlb	0	; () banked
 13136  006118  6F8E               	movwf	lcd_send@value& (0+255),b
 13137  00611A  0E00               	movlw	0
 13138  00611C  ECCF  F033         	call	_lcd_send
 13139  006120                     
 13140                           ;lib_ili9341.c: 167:     return 0;
 13141  006120  0E00               	movlw	0
 13142  006122                     l512:
 13143  006122  0012               	return		;funcret
 13144  006124                     __end_of_lcd_set_cursor_x:
 13145                           	opt callstack 0
 13146                           
 13147 ;; *************** function _lcd_draw_pixel *****************
 13148 ;; Defined at:
 13149 ;;		line 185 in file "lib_ili9341.c"
 13150 ;; Parameters:    Size  Location     Type
 13151 ;;  color           2   48[BANK0 ] unsigned short 
 13152 ;; Auto vars:     Size  Location     Type
 13153 ;;		None
 13154 ;; Return value:  Size  Location     Type
 13155 ;;                  1    wreg      unsigned char 
 13156 ;; Registers used:
 13157 ;;		wreg, status,2, cstack
 13158 ;; Tracked objects:
 13159 ;;		On entry : 0/0
 13160 ;;		On exit  : 0/0
 13161 ;;		Unchanged: 0/0
 13162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13163 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13166 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13167 ;;Total ram usage:        2 bytes
 13168 ;; Hardware stack levels used:    1
 13169 ;; Hardware stack levels required when called:   15
 13170 ;; This function calls:
 13171 ;;		_lcd_send
 13172 ;; This function is called by:
 13173 ;;		_lcd_fill
 13174 ;;		_lcd_draw_char
 13175 ;;		_lcd_draw_pixel_at
 13176 ;;		_lcd_fill_rect
 13177 ;; This function uses a non-reentrant model
 13178 ;;
 13179                           
 13180                           	psect	text45
 13181  0067F0                     __ptext45:
 13182                           	opt callstack 0
 13183  0067F0                     _lcd_draw_pixel:
 13184                           	opt callstack 13
 13185  0067F0                     
 13186                           ;lib_ili9341.c: 185: uint8_t lcd_draw_pixel(uint16_t color);lib_ili9341.c: 186: {;lib_il
      +                          i9341.c: 187:     lcd_send(1, color >> 8);
 13187  0067F0  0100               	movlb	0	; () banked
 13188  0067F2  5191               	movf	(lcd_draw_pixel@color+1)& (0+255),w,b
 13189  0067F4  6F8E               	movwf	lcd_send@value& (0+255),b
 13190  0067F6  0E01               	movlw	1
 13191  0067F8  ECCF  F033         	call	_lcd_send
 13192                           
 13193                           ;lib_ili9341.c: 188:     lcd_send(1, color & 0xFF);
 13194  0067FC  C090  F08E         	movff	lcd_draw_pixel@color,lcd_send@value
 13195  006800  0E01               	movlw	1
 13196  006802  ECCF  F033         	call	_lcd_send
 13197  006806  0012               	return		;funcret
 13198  006808                     __end_of_lcd_draw_pixel:
 13199                           	opt callstack 0
 13200                           
 13201 ;; *************** function _lcd_send *****************
 13202 ;; Defined at:
 13203 ;;		line 134 in file "lib_ili9341.c"
 13204 ;; Parameters:    Size  Location     Type
 13205 ;;  dc              1    wreg     _Bool 
 13206 ;;  value           1   46[BANK0 ] unsigned char 
 13207 ;; Auto vars:     Size  Location     Type
 13208 ;;  dc              1   47[BANK0 ] _Bool 
 13209 ;; Return value:  Size  Location     Type
 13210 ;;                  1    wreg      void 
 13211 ;; Registers used:
 13212 ;;		wreg, status,2, cstack
 13213 ;; Tracked objects:
 13214 ;;		On entry : 0/0
 13215 ;;		On exit  : 0/0
 13216 ;;		Unchanged: 0/0
 13217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13218 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13219 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13221 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13222 ;;Total ram usage:        2 bytes
 13223 ;; Hardware stack levels used:    1
 13224 ;; Hardware stack levels required when called:   14
 13225 ;; This function calls:
 13226 ;;		_SPI_ExchangeByte
 13227 ;; This function is called by:
 13228 ;;		_lcd_init
 13229 ;;		_lcd_set_cursor_x
 13230 ;;		_lcd_set_cursor_y
 13231 ;;		_lcd_draw_pixel
 13232 ;; This function uses a non-reentrant model
 13233 ;;
 13234                           
 13235                           	psect	text46
 13236  00679E                     __ptext46:
 13237                           	opt callstack 0
 13238  00679E                     _lcd_send:
 13239                           	opt callstack 15
 13240                           
 13241                           ;incstack = 0
 13242                           ;lcd_send@dc stored from wreg
 13243  00679E  0100               	movlb	0	; () banked
 13244  0067A0  6F8F               	movwf	lcd_send@dc& (0+255),b
 13245  0067A2                     
 13246                           ;lib_ili9341.c: 134: void lcd_send(_Bool dc, uint8_t value);lib_ili9341.c: 135: {;lib_il
      +                          i9341.c: 136:     LATEbits.LE0 = dc;
 13247  0067A2  0100               	movlb	0	; () banked
 13248  0067A4  B18F               	btfsc	lcd_send@dc& (0+255),0,b
 13249  0067A6  D002               	bra	u6375
 13250  0067A8  908D               	bcf	141,0,c	;volatile
 13251  0067AA  D001               	bra	u6376
 13252  0067AC                     u6375:
 13253  0067AC  808D               	bsf	141,0,c	;volatile
 13254  0067AE                     u6376:
 13255  0067AE                     
 13256                           ;lib_ili9341.c: 138:     LATEbits.LE1 = 0;
 13257  0067AE  928D               	bcf	141,1,c	;volatile
 13258  0067B0                     
 13259                           ;lib_ili9341.c: 140:     SPI_ExchangeByte(value);
 13260  0067B0  0100               	movlb	0	; () banked
 13261  0067B2  518E               	movf	lcd_send@value& (0+255),w,b
 13262  0067B4  ECDE  F033         	call	_SPI_ExchangeByte
 13263  0067B8                     
 13264                           ;lib_ili9341.c: 141:     LATEbits.LE1 = 1;
 13265  0067B8  828D               	bsf	141,1,c	;volatile
 13266  0067BA  0012               	return		;funcret
 13267  0067BC                     __end_of_lcd_send:
 13268                           	opt callstack 0
 13269                           
 13270 ;; *************** function _SPI_ExchangeByte *****************
 13271 ;; Defined at:
 13272 ;;		line 92 in file "mcc_generated_files/spi.c"
 13273 ;; Parameters:    Size  Location     Type
 13274 ;;  data            1    wreg     unsigned char 
 13275 ;; Auto vars:     Size  Location     Type
 13276 ;;  data            1   45[BANK0 ] unsigned char 
 13277 ;; Return value:  Size  Location     Type
 13278 ;;                  1    wreg      unsigned char 
 13279 ;; Registers used:
 13280 ;;		wreg, status,2
 13281 ;; Tracked objects:
 13282 ;;		On entry : 0/0
 13283 ;;		On exit  : 0/0
 13284 ;;		Unchanged: 0/0
 13285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13287 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13289 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13290 ;;Total ram usage:        1 bytes
 13291 ;; Hardware stack levels used:    1
 13292 ;; Hardware stack levels required when called:   13
 13293 ;; This function calls:
 13294 ;;		Nothing
 13295 ;; This function is called by:
 13296 ;;		_lcd_send
 13297 ;;		_SPI_WriteBlock
 13298 ;;		_SPI_ReadBlock
 13299 ;; This function uses a non-reentrant model
 13300 ;;
 13301                           
 13302                           	psect	text47
 13303  0067BC                     __ptext47:
 13304                           	opt callstack 0
 13305  0067BC                     _SPI_ExchangeByte:
 13306                           	opt callstack 15
 13307                           
 13308                           ;incstack = 0
 13309                           ;SPI_ExchangeByte@data stored from wreg
 13310  0067BC  0100               	movlb	0	; () banked
 13311  0067BE  6F8D               	movwf	SPI_ExchangeByte@data& (0+255),b
 13312  0067C0                     
 13313                           ;mcc_generated_files/spi.c: 92: uint8_t SPI_ExchangeByte(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 93: {;mcc_generated_files/spi.c: 94:     SSPBUF = data;
 13314  0067C0  C08D  FFC9         	movff	SPI_ExchangeByte@data,4041	;volatile
 13315  0067C4                     l61:
 13316  0067C4  A69E               	btfss	158,3,c	;volatile
 13317  0067C6  EFE7  F033         	goto	u5431
 13318  0067CA  EFE9  F033         	goto	u5430
 13319  0067CE                     u5431:
 13320  0067CE  EFE2  F033         	goto	l61
 13321  0067D2                     u5430:
 13322  0067D2                     
 13323                           ;mcc_generated_files/spi.c: 96:     PIR1bits.SSPIF = 0;
 13324  0067D2  969E               	bcf	158,3,c	;volatile
 13325                           
 13326                           ;mcc_generated_files/spi.c: 97:     return SSPBUF;
 13327  0067D4  50C9               	movf	201,w,c	;volatile
 13328  0067D6  0012               	return		;funcret
 13329  0067D8                     __end_of_SPI_ExchangeByte:
 13330                           	opt callstack 0
 13331                           
 13332 ;; *************** function ___lmul *****************
 13333 ;; Defined at:
 13334 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
 13335 ;; Parameters:    Size  Location     Type
 13336 ;;  multiplier      4   45[BANK0 ] unsigned long 
 13337 ;;  multiplicand    4   49[BANK0 ] unsigned long 
 13338 ;; Auto vars:     Size  Location     Type
 13339 ;;  product         4   53[BANK0 ] unsigned long 
 13340 ;; Return value:  Size  Location     Type
 13341 ;;                  4   45[BANK0 ] unsigned long 
 13342 ;; Registers used:
 13343 ;;		wreg, status,2, status,0
 13344 ;; Tracked objects:
 13345 ;;		On entry : 0/0
 13346 ;;		On exit  : 0/0
 13347 ;;		Unchanged: 0/0
 13348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13349 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13350 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13352 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13353 ;;Total ram usage:       12 bytes
 13354 ;; Hardware stack levels used:    1
 13355 ;; Hardware stack levels required when called:   13
 13356 ;; This function calls:
 13357 ;;		Nothing
 13358 ;; This function is called by:
 13359 ;;		_main
 13360 ;; This function uses a non-reentrant model
 13361 ;;
 13362                           
 13363                           	psect	text48
 13364  005C80                     __ptext48:
 13365                           	opt callstack 0
 13366  005C80                     ___lmul:
 13367                           	opt callstack 17
 13368  005C80  0E00               	movlw	0
 13369  005C82  0100               	movlb	0	; () banked
 13370  005C84  6F95               	movwf	___lmul@product& (0+255),b
 13371  005C86  0E00               	movlw	0
 13372  005C88  6F96               	movwf	(___lmul@product+1)& (0+255),b
 13373  005C8A  0E00               	movlw	0
 13374  005C8C  6F97               	movwf	(___lmul@product+2)& (0+255),b
 13375  005C8E  0E00               	movlw	0
 13376  005C90  6F98               	movwf	(___lmul@product+3)& (0+255),b
 13377  005C92                     l6851:
 13378                           
 13379                           ; BSR set to: 0
 13380  005C92  A18D               	btfss	___lmul@multiplier& (0+255),0,b
 13381  005C94  EF4E  F02E         	goto	u7971
 13382  005C98  EF50  F02E         	goto	u7970
 13383  005C9C                     u7971:
 13384  005C9C  EF58  F02E         	goto	l6855
 13385  005CA0                     u7970:
 13386  005CA0                     
 13387                           ; BSR set to: 0
 13388  005CA0  5191               	movf	___lmul@multiplicand& (0+255),w,b
 13389  005CA2  2795               	addwf	___lmul@product& (0+255),f,b
 13390  005CA4  5192               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 13391  005CA6  2396               	addwfc	(___lmul@product+1)& (0+255),f,b
 13392  005CA8  5193               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 13393  005CAA  2397               	addwfc	(___lmul@product+2)& (0+255),f,b
 13394  005CAC  5194               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 13395  005CAE  2398               	addwfc	(___lmul@product+3)& (0+255),f,b
 13396  005CB0                     l6855:
 13397                           
 13398                           ; BSR set to: 0
 13399  005CB0  90D8               	bcf	status,0,c
 13400  005CB2  3791               	rlcf	___lmul@multiplicand& (0+255),f,b
 13401  005CB4  3792               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 13402  005CB6  3793               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 13403  005CB8  3794               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 13404  005CBA                     
 13405                           ; BSR set to: 0
 13406  005CBA  90D8               	bcf	status,0,c
 13407  005CBC  3390               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 13408  005CBE  338F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 13409  005CC0  338E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 13410  005CC2  338D               	rrcf	___lmul@multiplier& (0+255),f,b
 13411  005CC4  518D               	movf	___lmul@multiplier& (0+255),w,b
 13412  005CC6  118E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 13413  005CC8  118F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 13414  005CCA  1190               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 13415  005CCC  A4D8               	btfss	status,2,c
 13416  005CCE  EF6B  F02E         	goto	u7981
 13417  005CD2  EF6D  F02E         	goto	u7980
 13418  005CD6                     u7981:
 13419  005CD6  EF49  F02E         	goto	l6851
 13420  005CDA                     u7980:
 13421  005CDA                     
 13422                           ; BSR set to: 0
 13423  005CDA  C095  F08D         	movff	___lmul@product,?___lmul
 13424  005CDE  C096  F08E         	movff	___lmul@product+1,?___lmul+1
 13425  005CE2  C097  F08F         	movff	___lmul@product+2,?___lmul+2
 13426  005CE6  C098  F090         	movff	___lmul@product+3,?___lmul+3
 13427  005CEA                     
 13428                           ; BSR set to: 0
 13429  005CEA  0012               	return		;funcret
 13430  005CEC                     __end_of___lmul:
 13431                           	opt callstack 0
 13432                           
 13433 ;; *************** function ___aldiv *****************
 13434 ;; Defined at:
 13435 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 13436 ;; Parameters:    Size  Location     Type
 13437 ;;  dividend        4   57[BANK0 ] long 
 13438 ;;  divisor         4   61[BANK0 ] long 
 13439 ;; Auto vars:     Size  Location     Type
 13440 ;;  quotient        4   67[BANK0 ] long 
 13441 ;;  sign            1   66[BANK0 ] unsigned char 
 13442 ;;  counter         1   65[BANK0 ] unsigned char 
 13443 ;; Return value:  Size  Location     Type
 13444 ;;                  4   57[BANK0 ] long 
 13445 ;; Registers used:
 13446 ;;		wreg, status,2, status,0
 13447 ;; Tracked objects:
 13448 ;;		On entry : 0/0
 13449 ;;		On exit  : 0/0
 13450 ;;		Unchanged: 0/0
 13451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13452 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13453 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13455 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13456 ;;Total ram usage:       14 bytes
 13457 ;; Hardware stack levels used:    1
 13458 ;; Hardware stack levels required when called:   13
 13459 ;; This function calls:
 13460 ;;		Nothing
 13461 ;; This function is called by:
 13462 ;;		_main
 13463 ;; This function uses a non-reentrant model
 13464 ;;
 13465                           
 13466                           	psect	text49
 13467  0050FA                     __ptext49:
 13468                           	opt callstack 0
 13469  0050FA                     ___aldiv:
 13470                           	opt callstack 17
 13471  0050FA  0E00               	movlw	0
 13472  0050FC  0100               	movlb	0	; () banked
 13473  0050FE  6FA2               	movwf	___aldiv@sign& (0+255),b
 13474  005100                     
 13475                           ; BSR set to: 0
 13476  005100  BFA0               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
 13477  005102  EF87  F028         	goto	u7990
 13478  005106  EF85  F028         	goto	u7991
 13479  00510A                     u7991:
 13480  00510A  EF91  F028         	goto	l6867
 13481  00510E                     u7990:
 13482  00510E                     
 13483                           ; BSR set to: 0
 13484  00510E  1FA0               	comf	(___aldiv@divisor+3)& (0+255),f,b
 13485  005110  1F9F               	comf	(___aldiv@divisor+2)& (0+255),f,b
 13486  005112  1F9E               	comf	(___aldiv@divisor+1)& (0+255),f,b
 13487  005114  6D9D               	negf	___aldiv@divisor& (0+255),b
 13488  005116  0E00               	movlw	0
 13489  005118  239E               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 13490  00511A  239F               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 13491  00511C  23A0               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 13492  00511E                     
 13493                           ; BSR set to: 0
 13494  00511E  0E01               	movlw	1
 13495  005120  6FA2               	movwf	___aldiv@sign& (0+255),b
 13496  005122                     l6867:
 13497                           
 13498                           ; BSR set to: 0
 13499  005122  BF9C               	btfsc	(___aldiv@dividend+3)& (0+255),7,b
 13500  005124  EF98  F028         	goto	u8000
 13501  005128  EF96  F028         	goto	u8001
 13502  00512C                     u8001:
 13503  00512C  EFA2  F028         	goto	l6873
 13504  005130                     u8000:
 13505  005130                     
 13506                           ; BSR set to: 0
 13507  005130  1F9C               	comf	(___aldiv@dividend+3)& (0+255),f,b
 13508  005132  1F9B               	comf	(___aldiv@dividend+2)& (0+255),f,b
 13509  005134  1F9A               	comf	(___aldiv@dividend+1)& (0+255),f,b
 13510  005136  6D99               	negf	___aldiv@dividend& (0+255),b
 13511  005138  0E00               	movlw	0
 13512  00513A  239A               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 13513  00513C  239B               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 13514  00513E  239C               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 13515  005140                     
 13516                           ; BSR set to: 0
 13517  005140  0E01               	movlw	1
 13518  005142  1BA2               	xorwf	___aldiv@sign& (0+255),f,b
 13519  005144                     l6873:
 13520                           
 13521                           ; BSR set to: 0
 13522  005144  0E00               	movlw	0
 13523  005146  6FA3               	movwf	___aldiv@quotient& (0+255),b
 13524  005148  0E00               	movlw	0
 13525  00514A  6FA4               	movwf	(___aldiv@quotient+1)& (0+255),b
 13526  00514C  0E00               	movlw	0
 13527  00514E  6FA5               	movwf	(___aldiv@quotient+2)& (0+255),b
 13528  005150  0E00               	movlw	0
 13529  005152  6FA6               	movwf	(___aldiv@quotient+3)& (0+255),b
 13530  005154                     
 13531                           ; BSR set to: 0
 13532  005154  519D               	movf	___aldiv@divisor& (0+255),w,b
 13533  005156  119E               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 13534  005158  119F               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 13535  00515A  11A0               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 13536  00515C  B4D8               	btfsc	status,2,c
 13537  00515E  EFB3  F028         	goto	u8011
 13538  005162  EFB5  F028         	goto	u8010
 13539  005166                     u8011:
 13540  005166  EFEB  F028         	goto	l6895
 13541  00516A                     u8010:
 13542  00516A                     
 13543                           ; BSR set to: 0
 13544  00516A  0E01               	movlw	1
 13545  00516C  6FA1               	movwf	___aldiv@counter& (0+255),b
 13546  00516E  EFBF  F028         	goto	l6881
 13547  005172                     l6879:
 13548                           
 13549                           ; BSR set to: 0
 13550  005172  90D8               	bcf	status,0,c
 13551  005174  379D               	rlcf	___aldiv@divisor& (0+255),f,b
 13552  005176  379E               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 13553  005178  379F               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 13554  00517A  37A0               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 13555  00517C  2BA1               	incf	___aldiv@counter& (0+255),f,b
 13556  00517E                     l6881:
 13557                           
 13558                           ; BSR set to: 0
 13559  00517E  AFA0               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 13560  005180  EFC4  F028         	goto	u8021
 13561  005184  EFC6  F028         	goto	u8020
 13562  005188                     u8021:
 13563  005188  EFB9  F028         	goto	l6879
 13564  00518C                     u8020:
 13565  00518C                     l6883:
 13566                           
 13567                           ; BSR set to: 0
 13568  00518C  90D8               	bcf	status,0,c
 13569  00518E  37A3               	rlcf	___aldiv@quotient& (0+255),f,b
 13570  005190  37A4               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 13571  005192  37A5               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 13572  005194  37A6               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 13573  005196                     
 13574                           ; BSR set to: 0
 13575  005196  519D               	movf	___aldiv@divisor& (0+255),w,b
 13576  005198  5D99               	subwf	___aldiv@dividend& (0+255),w,b
 13577  00519A  519E               	movf	(___aldiv@divisor+1)& (0+255),w,b
 13578  00519C  599A               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 13579  00519E  519F               	movf	(___aldiv@divisor+2)& (0+255),w,b
 13580  0051A0  599B               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 13581  0051A2  51A0               	movf	(___aldiv@divisor+3)& (0+255),w,b
 13582  0051A4  599C               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 13583  0051A6  A0D8               	btfss	status,0,c
 13584  0051A8  EFD8  F028         	goto	u8031
 13585  0051AC  EFDA  F028         	goto	u8030
 13586  0051B0                     u8031:
 13587  0051B0  EFE3  F028         	goto	l6891
 13588  0051B4                     u8030:
 13589  0051B4                     
 13590                           ; BSR set to: 0
 13591  0051B4  519D               	movf	___aldiv@divisor& (0+255),w,b
 13592  0051B6  5F99               	subwf	___aldiv@dividend& (0+255),f,b
 13593  0051B8  519E               	movf	(___aldiv@divisor+1)& (0+255),w,b
 13594  0051BA  5B9A               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 13595  0051BC  519F               	movf	(___aldiv@divisor+2)& (0+255),w,b
 13596  0051BE  5B9B               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 13597  0051C0  51A0               	movf	(___aldiv@divisor+3)& (0+255),w,b
 13598  0051C2  5B9C               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 13599  0051C4                     
 13600                           ; BSR set to: 0
 13601  0051C4  81A3               	bsf	___aldiv@quotient& (0+255),0,b
 13602  0051C6                     l6891:
 13603                           
 13604                           ; BSR set to: 0
 13605  0051C6  90D8               	bcf	status,0,c
 13606  0051C8  33A0               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 13607  0051CA  339F               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 13608  0051CC  339E               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 13609  0051CE  339D               	rrcf	___aldiv@divisor& (0+255),f,b
 13610  0051D0                     
 13611                           ; BSR set to: 0
 13612  0051D0  2FA1               	decfsz	___aldiv@counter& (0+255),f,b
 13613  0051D2  EFC6  F028         	goto	l6883
 13614  0051D6                     l6895:
 13615                           
 13616                           ; BSR set to: 0
 13617  0051D6  51A2               	movf	___aldiv@sign& (0+255),w,b
 13618  0051D8  B4D8               	btfsc	status,2,c
 13619  0051DA  EFF1  F028         	goto	u8041
 13620  0051DE  EFF3  F028         	goto	u8040
 13621  0051E2                     u8041:
 13622  0051E2  EFFB  F028         	goto	l6899
 13623  0051E6                     u8040:
 13624  0051E6                     
 13625                           ; BSR set to: 0
 13626  0051E6  1FA6               	comf	(___aldiv@quotient+3)& (0+255),f,b
 13627  0051E8  1FA5               	comf	(___aldiv@quotient+2)& (0+255),f,b
 13628  0051EA  1FA4               	comf	(___aldiv@quotient+1)& (0+255),f,b
 13629  0051EC  6DA3               	negf	___aldiv@quotient& (0+255),b
 13630  0051EE  0E00               	movlw	0
 13631  0051F0  23A4               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 13632  0051F2  23A5               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 13633  0051F4  23A6               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 13634  0051F6                     l6899:
 13635                           
 13636                           ; BSR set to: 0
 13637  0051F6  C0A3  F099         	movff	___aldiv@quotient,?___aldiv
 13638  0051FA  C0A4  F09A         	movff	___aldiv@quotient+1,?___aldiv+1
 13639  0051FE  C0A5  F09B         	movff	___aldiv@quotient+2,?___aldiv+2
 13640  005202  C0A6  F09C         	movff	___aldiv@quotient+3,?___aldiv+3
 13641  005206                     
 13642                           ; BSR set to: 0
 13643  005206  0012               	return		;funcret
 13644  005208                     __end_of___aldiv:
 13645                           	opt callstack 0
 13646                           
 13647 ;; *************** function _TMR0_ReadTimer *****************
 13648 ;; Defined at:
 13649 ;;		line 102 in file "mcc_generated_files/tmr0.c"
 13650 ;; Parameters:    Size  Location     Type
 13651 ;;		None
 13652 ;; Auto vars:     Size  Location     Type
 13653 ;;  readVal         2   49[BANK0 ] unsigned short 
 13654 ;;  readValHigh     1   52[BANK0 ] unsigned char 
 13655 ;;  readValLow      1   51[BANK0 ] unsigned char 
 13656 ;; Return value:  Size  Location     Type
 13657 ;;                  2   45[BANK0 ] unsigned short 
 13658 ;; Registers used:
 13659 ;;		wreg, status,2
 13660 ;; Tracked objects:
 13661 ;;		On entry : 0/0
 13662 ;;		On exit  : 0/0
 13663 ;;		Unchanged: 0/0
 13664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13665 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13666 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13667 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13668 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13669 ;;Total ram usage:        8 bytes
 13670 ;; Hardware stack levels used:    1
 13671 ;; Hardware stack levels required when called:   13
 13672 ;; This function calls:
 13673 ;;		Nothing
 13674 ;; This function is called by:
 13675 ;;		_main
 13676 ;; This function uses a non-reentrant model
 13677 ;;
 13678                           
 13679                           	psect	text50
 13680  00677E                     __ptext50:
 13681                           	opt callstack 0
 13682  00677E                     _TMR0_ReadTimer:
 13683                           	opt callstack 17
 13684  00677E                     
 13685                           ;mcc_generated_files/tmr0.c: 104:     uint16_t readVal;;mcc_generated_files/tmr0.c: 105:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 106:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 108:     readValLow = TMR0L;
 13686  00677E  CFD6 F093          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
 13687                           
 13688                           ;mcc_generated_files/tmr0.c: 109:     readValHigh = TMR0H;
 13689  006782  CFD7 F094          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
 13690  006786                     
 13691                           ;mcc_generated_files/tmr0.c: 110:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
 13692  006786  0100               	movlb	0	; () banked
 13693  006788  5194               	movf	TMR0_ReadTimer@readValHigh& (0+255),w,b
 13694  00678A  6F8F               	movwf	??_TMR0_ReadTimer& (0+255),b
 13695  00678C  5193               	movf	TMR0_ReadTimer@readValLow& (0+255),w,b
 13696  00678E  6F91               	movwf	TMR0_ReadTimer@readVal& (0+255),b
 13697  006790  C08F  F092         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
 13698  006794                     
 13699                           ; BSR set to: 0
 13700                           ;mcc_generated_files/tmr0.c: 112:     return readVal;
 13701  006794  C091  F08D         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
 13702  006798  C092  F08E         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
 13703  00679C                     
 13704                           ; BSR set to: 0
 13705  00679C  0012               	return		;funcret
 13706  00679E                     __end_of_TMR0_ReadTimer:
 13707                           	opt callstack 0
 13708                           
 13709 ;; *************** function _SYSTEM_Initialize *****************
 13710 ;; Defined at:
 13711 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13712 ;; Parameters:    Size  Location     Type
 13713 ;;		None
 13714 ;; Auto vars:     Size  Location     Type
 13715 ;;		None
 13716 ;; Return value:  Size  Location     Type
 13717 ;;                  1    wreg      void 
 13718 ;; Registers used:
 13719 ;;		wreg, status,2, status,0, cstack
 13720 ;; Tracked objects:
 13721 ;;		On entry : 0/0
 13722 ;;		On exit  : 0/0
 13723 ;;		Unchanged: 0/0
 13724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13729 ;;Total ram usage:        0 bytes
 13730 ;; Hardware stack levels used:    1
 13731 ;; Hardware stack levels required when called:   15
 13732 ;; This function calls:
 13733 ;;		_ADC_Initialize
 13734 ;;		_EUSART1_Initialize
 13735 ;;		_INTERRUPT_Initialize
 13736 ;;		_OSCILLATOR_Initialize
 13737 ;;		_PIN_MANAGER_Initialize
 13738 ;;		_SPI_Initialize
 13739 ;;		_TMR0_Initialize
 13740 ;;		_TMR1_Initialize
 13741 ;; This function is called by:
 13742 ;;		_main
 13743 ;; This function uses a non-reentrant model
 13744 ;;
 13745                           
 13746                           	psect	text51
 13747  00675C                     __ptext51:
 13748                           	opt callstack 0
 13749  00675C                     _SYSTEM_Initialize:
 13750                           	opt callstack 15
 13751  00675C                     
 13752                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
 13753  00675C  EC73  F034         	call	_INTERRUPT_Initialize	;wreg free
 13754  006760                     
 13755                           ;mcc_generated_files/mcc.c: 54:     SPI_Initialize();
 13756  006760  EC30  F034         	call	_SPI_Initialize	;wreg free
 13757  006764                     
 13758                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 13759  006764  ECB6  F030         	call	_PIN_MANAGER_Initialize	;wreg free
 13760  006768                     
 13761                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 13762  006768  EC39  F034         	call	_OSCILLATOR_Initialize	;wreg free
 13763  00676C                     
 13764                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
 13765  00676C  EC10  F034         	call	_ADC_Initialize	;wreg free
 13766  006770                     
 13767                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
 13768  006770  EC0B  F033         	call	_TMR1_Initialize	;wreg free
 13769  006774                     
 13770                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
 13771  006774  EC4B  F033         	call	_TMR0_Initialize	;wreg free
 13772  006778                     
 13773                           ;mcc_generated_files/mcc.c: 60:     EUSART1_Initialize();
 13774  006778  ECD9  F030         	call	_EUSART1_Initialize	;wreg free
 13775  00677C  0012               	return		;funcret
 13776  00677E                     __end_of_SYSTEM_Initialize:
 13777                           	opt callstack 0
 13778                           
 13779 ;; *************** function _TMR1_Initialize *****************
 13780 ;; Defined at:
 13781 ;;		line 63 in file "mcc_generated_files/tmr1.c"
 13782 ;; Parameters:    Size  Location     Type
 13783 ;;		None
 13784 ;; Auto vars:     Size  Location     Type
 13785 ;;		None
 13786 ;; Return value:  Size  Location     Type
 13787 ;;                  1    wreg      void 
 13788 ;; Registers used:
 13789 ;;		wreg, status,2, status,0
 13790 ;; Tracked objects:
 13791 ;;		On entry : 0/0
 13792 ;;		On exit  : 0/0
 13793 ;;		Unchanged: 0/0
 13794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13797 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13798 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13799 ;;Total ram usage:        2 bytes
 13800 ;; Hardware stack levels used:    1
 13801 ;; Hardware stack levels required when called:   13
 13802 ;; This function calls:
 13803 ;;		Nothing
 13804 ;; This function is called by:
 13805 ;;		_SYSTEM_Initialize
 13806 ;; This function uses a non-reentrant model
 13807 ;;
 13808                           
 13809                           	psect	text52
 13810  006616                     __ptext52:
 13811                           	opt callstack 0
 13812  006616                     _TMR1_Initialize:
 13813                           	opt callstack 16
 13814  006616                     
 13815                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
 13816  006616  0E00               	movlw	0
 13817  006618  6EAA               	movwf	170,c	;volatile
 13818                           
 13819                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x0B;
 13820  00661A  0E0B               	movlw	11
 13821  00661C  6ECF               	movwf	207,c	;volatile
 13822                           
 13823                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0xDC;
 13824  00661E  0EDC               	movlw	220
 13825  006620  6ECE               	movwf	206,c	;volatile
 13826  006622                     
 13827                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
 13828  006622  909E               	bcf	158,0,c	;volatile
 13829  006624                     
 13830                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 13831  006624  50CE               	movf	206,w,c	;volatile
 13832  006626  CFCF F08D          	movff	4047,??_TMR1_Initialize	;volatile
 13833  00662A  0100               	movlb	0	; () banked
 13834  00662C  6B8E               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 13835  00662E  C08D  F08E         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 13836  006632  6B8D               	clrf	??_TMR1_Initialize& (0+255),b
 13837  006634  118D               	iorwf	??_TMR1_Initialize& (0+255),w,b
 13838  006636  6FC8               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 13839  006638  518E               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 13840  00663A  6FC9               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 13841  00663C                     
 13842                           ; BSR set to: 0
 13843                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x31;
 13844  00663C  0E31               	movlw	49
 13845  00663E  6ECD               	movwf	205,c	;volatile
 13846  006640                     
 13847                           ; BSR set to: 0
 13848  006640  0012               	return		;funcret
 13849  006642                     __end_of_TMR1_Initialize:
 13850                           	opt callstack 0
 13851                           
 13852 ;; *************** function _TMR0_Initialize *****************
 13853 ;; Defined at:
 13854 ;;		line 66 in file "mcc_generated_files/tmr0.c"
 13855 ;; Parameters:    Size  Location     Type
 13856 ;;		None
 13857 ;; Auto vars:     Size  Location     Type
 13858 ;;		None
 13859 ;; Return value:  Size  Location     Type
 13860 ;;                  1    wreg      void 
 13861 ;; Registers used:
 13862 ;;		wreg, status,2, status,0
 13863 ;; Tracked objects:
 13864 ;;		On entry : 0/0
 13865 ;;		On exit  : 0/0
 13866 ;;		Unchanged: 0/0
 13867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13870 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13871 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13872 ;;Total ram usage:        2 bytes
 13873 ;; Hardware stack levels used:    1
 13874 ;; Hardware stack levels required when called:   13
 13875 ;; This function calls:
 13876 ;;		Nothing
 13877 ;; This function is called by:
 13878 ;;		_SYSTEM_Initialize
 13879 ;; This function uses a non-reentrant model
 13880 ;;
 13881                           
 13882                           	psect	text53
 13883  006696                     __ptext53:
 13884                           	opt callstack 0
 13885  006696                     _TMR0_Initialize:
 13886                           	opt callstack 16
 13887  006696                     
 13888                           ;mcc_generated_files/tmr0.c: 71:     T0CONbits.T08BIT = 0;
 13889  006696  9CD5               	bcf	213,6,c	;volatile
 13890  006698                     
 13891                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0x67;
 13892  006698  0E67               	movlw	103
 13893  00669A  6ED7               	movwf	215,c	;volatile
 13894                           
 13895                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0x69;
 13896  00669C  0E69               	movlw	105
 13897  00669E  6ED6               	movwf	214,c	;volatile
 13898  0066A0                     
 13899                           ;mcc_generated_files/tmr0.c: 81:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
 13900  0066A0  50D6               	movf	214,w,c	;volatile
 13901  0066A2  CFD7 F08D          	movff	4055,??_TMR0_Initialize	;volatile
 13902  0066A6  0100               	movlb	0	; () banked
 13903  0066A8  6B8E               	clrf	(??_TMR0_Initialize+1)& (0+255),b
 13904  0066AA  C08D  F08E         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 13905  0066AE  6B8D               	clrf	??_TMR0_Initialize& (0+255),b
 13906  0066B0  118D               	iorwf	??_TMR0_Initialize& (0+255),w,b
 13907  0066B2  6E5B               	movwf	_timer0ReloadVal^0,c	;volatile
 13908  0066B4  518E               	movf	(??_TMR0_Initialize+1)& (0+255),w,b
 13909  0066B6  6E5C               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
 13910  0066B8                     
 13911                           ; BSR set to: 0
 13912                           ;mcc_generated_files/tmr0.c: 84:     INTCONbits.TMR0IF = 0;
 13913  0066B8  94F2               	bcf	242,2,c	;volatile
 13914  0066BA                     
 13915                           ; BSR set to: 0
 13916                           ;mcc_generated_files/tmr0.c: 87:     T0CON = 0x17;
 13917  0066BA  0E17               	movlw	23
 13918  0066BC  6ED5               	movwf	213,c	;volatile
 13919  0066BE                     
 13920                           ; BSR set to: 0
 13921  0066BE  0012               	return		;funcret
 13922  0066C0                     __end_of_TMR0_Initialize:
 13923                           	opt callstack 0
 13924                           
 13925 ;; *************** function _SPI_Initialize *****************
 13926 ;; Defined at:
 13927 ;;		line 62 in file "mcc_generated_files/spi.c"
 13928 ;; Parameters:    Size  Location     Type
 13929 ;;		None
 13930 ;; Auto vars:     Size  Location     Type
 13931 ;;		None
 13932 ;; Return value:  Size  Location     Type
 13933 ;;                  1    wreg      void 
 13934 ;; Registers used:
 13935 ;;		wreg, status,2
 13936 ;; Tracked objects:
 13937 ;;		On entry : 0/0
 13938 ;;		On exit  : 0/0
 13939 ;;		Unchanged: 0/0
 13940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13945 ;;Total ram usage:        0 bytes
 13946 ;; Hardware stack levels used:    1
 13947 ;; Hardware stack levels required when called:   13
 13948 ;; This function calls:
 13949 ;;		Nothing
 13950 ;; This function is called by:
 13951 ;;		_SYSTEM_Initialize
 13952 ;; This function uses a non-reentrant model
 13953 ;;
 13954                           
 13955                           	psect	text54
 13956  006860                     __ptext54:
 13957                           	opt callstack 0
 13958  006860                     _SPI_Initialize:
 13959                           	opt callstack 16
 13960  006860                     
 13961                           ;mcc_generated_files/spi.c: 65:     SSPSTAT = 0x40;
 13962  006860  0E40               	movlw	64
 13963  006862  6EC7               	movwf	199,c	;volatile
 13964                           
 13965                           ;mcc_generated_files/spi.c: 66:     SSPCON1 = 0x00;
 13966  006864  0E00               	movlw	0
 13967  006866  6EC6               	movwf	198,c	;volatile
 13968                           
 13969                           ;mcc_generated_files/spi.c: 67:     SSPADD = 0x01;
 13970  006868  0E01               	movlw	1
 13971  00686A  6EC8               	movwf	200,c	;volatile
 13972  00686C                     
 13973                           ;mcc_generated_files/spi.c: 68:     TRISCbits.TRISC3 = 0;
 13974  00686C  9694               	bcf	148,3,c	;volatile
 13975  00686E                     
 13976                           ;mcc_generated_files/spi.c: 69:     SSPCON1bits.SSPEN = 0;
 13977  00686E  9AC6               	bcf	198,5,c	;volatile
 13978  006870  0012               	return		;funcret
 13979  006872                     __end_of_SPI_Initialize:
 13980                           	opt callstack 0
 13981                           
 13982 ;; *************** function _PIN_MANAGER_Initialize *****************
 13983 ;; Defined at:
 13984 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 13985 ;; Parameters:    Size  Location     Type
 13986 ;;		None
 13987 ;; Auto vars:     Size  Location     Type
 13988 ;;		None
 13989 ;; Return value:  Size  Location     Type
 13990 ;;                  1    wreg      void 
 13991 ;; Registers used:
 13992 ;;		wreg, status,2, status,0, cstack
 13993 ;; Tracked objects:
 13994 ;;		On entry : 0/0
 13995 ;;		On exit  : 0/0
 13996 ;;		Unchanged: 0/0
 13997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14002 ;;Total ram usage:        0 bytes
 14003 ;; Hardware stack levels used:    1
 14004 ;; Hardware stack levels required when called:   14
 14005 ;; This function calls:
 14006 ;;		_IOCB4_SetInterruptHandler
 14007 ;; This function is called by:
 14008 ;;		_SYSTEM_Initialize
 14009 ;; This function uses a non-reentrant model
 14010 ;;
 14011                           
 14012                           	psect	text55
 14013  00616C                     __ptext55:
 14014                           	opt callstack 0
 14015  00616C                     _PIN_MANAGER_Initialize:
 14016                           	opt callstack 15
 14017  00616C                     
 14018                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
 14019  00616C  0E00               	movlw	0
 14020  00616E  6E8D               	movwf	141,c	;volatile
 14021                           
 14022                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 14023  006170  0E00               	movlw	0
 14024  006172  6E8C               	movwf	140,c	;volatile
 14025                           
 14026                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 14027  006174  0E00               	movlw	0
 14028  006176  6E89               	movwf	137,c	;volatile
 14029                           
 14030                           ;mcc_generated_files/pin_manager.c: 65:     LATB = 0x00;
 14031  006178  0E00               	movlw	0
 14032  00617A  6E8A               	movwf	138,c	;volatile
 14033                           
 14034                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x00;
 14035  00617C  0E00               	movlw	0
 14036  00617E  6E8B               	movwf	139,c	;volatile
 14037                           
 14038                           ;mcc_generated_files/pin_manager.c: 71:     TRISE = 0x04;
 14039  006180  0E04               	movlw	4
 14040  006182  6E96               	movwf	150,c	;volatile
 14041                           
 14042                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0x0F;
 14043  006184  0E0F               	movlw	15
 14044  006186  6E92               	movwf	146,c	;volatile
 14045  006188                     
 14046                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
 14047  006188  6893               	setf	147,c	;volatile
 14048                           
 14049                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0x97;
 14050  00618A  0E97               	movlw	151
 14051  00618C  6E94               	movwf	148,c	;volatile
 14052  00618E                     
 14053                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xFF;
 14054  00618E  6895               	setf	149,c	;volatile
 14055  006190                     
 14056                           ;mcc_generated_files/pin_manager.c: 80:     ANCON0 = 0xFF;
 14057  006190  010F               	movlb	15	; () banked
 14058  006192  695D               	setf	93,b	;volatile
 14059                           
 14060                           ;mcc_generated_files/pin_manager.c: 81:     ANCON1 = 0x7D;
 14061  006194  0E7D               	movlw	125
 14062  006196  6F5C               	movwf	92,b	;volatile
 14063                           
 14064                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
 14065  006198  0E00               	movlw	0
 14066  00619A  6F5B               	movwf	91,b	;volatile
 14067  00619C                     
 14068                           ; BSR set to: 15
 14069                           ;mcc_generated_files/pin_manager.c: 87:     INTCON2bits.nRBPU = 1;
 14070  00619C  8EF1               	bsf	241,7,c	;volatile
 14071  00619E                     
 14072                           ; BSR set to: 15
 14073                           ;mcc_generated_files/pin_manager.c: 95:     IOCBbits.IOCB4 = 1;
 14074  00619E  895A               	bsf	90,4,b	;volatile
 14075  0061A0                     
 14076                           ; BSR set to: 15
 14077                           ;mcc_generated_files/pin_manager.c: 100:     IOCB4_SetInterruptHandler(IOCB4_DefaultInte
      +                          rruptHandler);
 14078  0061A0  0EF2               	movlw	low _IOCB4_DefaultInterruptHandler
 14079  0061A2  0100               	movlb	0	; () banked
 14080  0061A4  6F8D               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
 14081  0061A6  0E68               	movlw	high _IOCB4_DefaultInterruptHandler
 14082  0061A8  6F8E               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 14083  0061AA  EC4F  F034         	call	_IOCB4_SetInterruptHandler	;wreg free
 14084  0061AE                     
 14085                           ;mcc_generated_files/pin_manager.c: 103:     INTCONbits.RBIE = 1;
 14086  0061AE  86F2               	bsf	242,3,c	;volatile
 14087  0061B0  0012               	return		;funcret
 14088  0061B2                     __end_of_PIN_MANAGER_Initialize:
 14089                           	opt callstack 0
 14090                           
 14091 ;; *************** function _IOCB4_SetInterruptHandler *****************
 14092 ;; Defined at:
 14093 ;;		line 135 in file "mcc_generated_files/pin_manager.c"
 14094 ;; Parameters:    Size  Location     Type
 14095 ;;  InterruptHan    2   45[BANK0 ] PTR FTN()void 
 14096 ;;		 -> INTERRUPT_S1_CALLBACK(1), IOCB4_DefaultInterruptHandler(1), 
 14097 ;; Auto vars:     Size  Location     Type
 14098 ;;		None
 14099 ;; Return value:  Size  Location     Type
 14100 ;;                  1    wreg      void 
 14101 ;; Registers used:
 14102 ;;		wreg, status,2, status,0
 14103 ;; Tracked objects:
 14104 ;;		On entry : 0/0
 14105 ;;		On exit  : 0/0
 14106 ;;		Unchanged: 0/0
 14107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14108 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14111 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14112 ;;Total ram usage:        2 bytes
 14113 ;; Hardware stack levels used:    1
 14114 ;; Hardware stack levels required when called:   13
 14115 ;; This function calls:
 14116 ;;		Nothing
 14117 ;; This function is called by:
 14118 ;;		_PIN_MANAGER_Initialize
 14119 ;;		_main
 14120 ;; This function uses a non-reentrant model
 14121 ;;
 14122                           
 14123                           	psect	text56
 14124  00689E                     __ptext56:
 14125                           	opt callstack 0
 14126  00689E                     _IOCB4_SetInterruptHandler:
 14127                           	opt callstack 15
 14128  00689E                     
 14129                           ;mcc_generated_files/pin_manager.c: 136:     IOCB4_InterruptHandler = InterruptHandler;
 14130  00689E  C08D  F0CA         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
 14131  0068A2  C08E  F0CB         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
 14132  0068A6  0012               	return		;funcret
 14133  0068A8                     __end_of_IOCB4_SetInterruptHandler:
 14134                           	opt callstack 0
 14135                           
 14136 ;; *************** function _OSCILLATOR_Initialize *****************
 14137 ;; Defined at:
 14138 ;;		line 63 in file "mcc_generated_files/mcc.c"
 14139 ;; Parameters:    Size  Location     Type
 14140 ;;		None
 14141 ;; Auto vars:     Size  Location     Type
 14142 ;;		None
 14143 ;; Return value:  Size  Location     Type
 14144 ;;                  1    wreg      void 
 14145 ;; Registers used:
 14146 ;;		wreg, status,2
 14147 ;; Tracked objects:
 14148 ;;		On entry : 0/0
 14149 ;;		On exit  : 0/0
 14150 ;;		Unchanged: 0/0
 14151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14156 ;;Total ram usage:        0 bytes
 14157 ;; Hardware stack levels used:    1
 14158 ;; Hardware stack levels required when called:   13
 14159 ;; This function calls:
 14160 ;;		Nothing
 14161 ;; This function is called by:
 14162 ;;		_SYSTEM_Initialize
 14163 ;; This function uses a non-reentrant model
 14164 ;;
 14165                           
 14166                           	psect	text57
 14167  006872                     __ptext57:
 14168                           	opt callstack 0
 14169  006872                     _OSCILLATOR_Initialize:
 14170                           	opt callstack 16
 14171  006872                     
 14172                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x60;
 14173  006872  0E60               	movlw	96
 14174  006874  6ED3               	movwf	211,c	;volatile
 14175                           
 14176                           ;mcc_generated_files/mcc.c: 68:     OSCCON2 = 0x00;
 14177  006876  0E00               	movlw	0
 14178  006878  6ED2               	movwf	210,c	;volatile
 14179                           
 14180                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x00;
 14181  00687A  0E00               	movlw	0
 14182  00687C  6E9B               	movwf	155,c	;volatile
 14183                           
 14184                           ;mcc_generated_files/mcc.c: 72:     REFOCON = 0x00;
 14185  00687E  0E00               	movlw	0
 14186  006880  6E9A               	movwf	154,c	;volatile
 14187  006882  0012               	return		;funcret
 14188  006884                     __end_of_OSCILLATOR_Initialize:
 14189                           	opt callstack 0
 14190                           
 14191 ;; *************** function _INTERRUPT_Initialize *****************
 14192 ;; Defined at:
 14193 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14194 ;; Parameters:    Size  Location     Type
 14195 ;;		None
 14196 ;; Auto vars:     Size  Location     Type
 14197 ;;		None
 14198 ;; Return value:  Size  Location     Type
 14199 ;;                  1    wreg      void 
 14200 ;; Registers used:
 14201 ;;		None
 14202 ;; Tracked objects:
 14203 ;;		On entry : 0/0
 14204 ;;		On exit  : 0/0
 14205 ;;		Unchanged: 0/0
 14206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14211 ;;Total ram usage:        0 bytes
 14212 ;; Hardware stack levels used:    1
 14213 ;; Hardware stack levels required when called:   13
 14214 ;; This function calls:
 14215 ;;		Nothing
 14216 ;; This function is called by:
 14217 ;;		_SYSTEM_Initialize
 14218 ;; This function uses a non-reentrant model
 14219 ;;
 14220                           
 14221                           	psect	text58
 14222  0068E6                     __ptext58:
 14223                           	opt callstack 0
 14224  0068E6                     _INTERRUPT_Initialize:
 14225                           	opt callstack 16
 14226  0068E6                     
 14227                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
 14228  0068E6  9ED0               	bcf	208,7,c	;volatile
 14229  0068E8  0012               	return		;funcret
 14230  0068EA                     __end_of_INTERRUPT_Initialize:
 14231                           	opt callstack 0
 14232                           
 14233 ;; *************** function _EUSART1_Initialize *****************
 14234 ;; Defined at:
 14235 ;;		line 66 in file "mcc_generated_files/eusart1.c"
 14236 ;; Parameters:    Size  Location     Type
 14237 ;;		None
 14238 ;; Auto vars:     Size  Location     Type
 14239 ;;		None
 14240 ;; Return value:  Size  Location     Type
 14241 ;;                  1    wreg      void 
 14242 ;; Registers used:
 14243 ;;		wreg, status,2, status,0, cstack
 14244 ;; Tracked objects:
 14245 ;;		On entry : 0/0
 14246 ;;		On exit  : 0/0
 14247 ;;		Unchanged: 0/0
 14248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14253 ;;Total ram usage:        0 bytes
 14254 ;; Hardware stack levels used:    1
 14255 ;; Hardware stack levels required when called:   14
 14256 ;; This function calls:
 14257 ;;		_EUSART1_SetErrorHandler
 14258 ;;		_EUSART1_SetFramingErrorHandler
 14259 ;;		_EUSART1_SetOverrunErrorHandler
 14260 ;; This function is called by:
 14261 ;;		_SYSTEM_Initialize
 14262 ;; This function uses a non-reentrant model
 14263 ;;
 14264                           
 14265                           	psect	text59
 14266  0061B2                     __ptext59:
 14267                           	opt callstack 0
 14268  0061B2                     _EUSART1_Initialize:
 14269                           	opt callstack 15
 14270  0061B2                     
 14271                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
 14272  0061B2  0E08               	movlw	8
 14273  0061B4  6EA7               	movwf	167,c	;volatile
 14274                           
 14275                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
 14276  0061B6  0E90               	movlw	144
 14277  0061B8  6EAB               	movwf	171,c	;volatile
 14278                           
 14279                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
 14280  0061BA  0E24               	movlw	36
 14281  0061BC  6EAC               	movwf	172,c	;volatile
 14282                           
 14283                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0xCF;
 14284  0061BE  0ECF               	movlw	207
 14285  0061C0  6EAF               	movwf	175,c	;volatile
 14286                           
 14287                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x00;
 14288  0061C2  0E00               	movlw	0
 14289  0061C4  6E7D               	movwf	125,c	;volatile
 14290  0061C6                     
 14291                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
 14292  0061C6  0E00               	movlw	0
 14293  0061C8  0100               	movlb	0	; () banked
 14294  0061CA  6F8D               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
 14295  0061CC  0E00               	movlw	0
 14296  0061CE  6F8E               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
 14297  0061D0  EC59  F034         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 14298  0061D4                     
 14299                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
 14300  0061D4  0E00               	movlw	0
 14301  0061D6  0100               	movlb	0	; () banked
 14302  0061D8  6F8D               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
 14303  0061DA  0E00               	movlw	0
 14304  0061DC  6F8E               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
 14305  0061DE  EC54  F034         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 14306  0061E2                     
 14307                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
 14308  0061E2  0E00               	movlw	0
 14309  0061E4  0100               	movlb	0	; () banked
 14310  0061E6  6F8D               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
 14311  0061E8  0E00               	movlw	0
 14312  0061EA  6F8E               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
 14313  0061EC  EC5E  F034         	call	_EUSART1_SetErrorHandler	;wreg free
 14314  0061F0                     
 14315                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
 14316  0061F0  0E00               	movlw	0
 14317  0061F2  0100               	movlb	0	; () banked
 14318  0061F4  6FC1               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 14319  0061F6                     
 14320                           ; BSR set to: 0
 14321  0061F6  0012               	return		;funcret
 14322  0061F8                     __end_of_EUSART1_Initialize:
 14323                           	opt callstack 0
 14324                           
 14325 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 14326 ;; Defined at:
 14327 ;;		line 170 in file "mcc_generated_files/eusart1.c"
 14328 ;; Parameters:    Size  Location     Type
 14329 ;;  interruptHan    2   45[BANK0 ] PTR FTN()void 
 14330 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 14331 ;; Auto vars:     Size  Location     Type
 14332 ;;		None
 14333 ;; Return value:  Size  Location     Type
 14334 ;;                  1    wreg      void 
 14335 ;; Registers used:
 14336 ;;		wreg, status,2, status,0
 14337 ;; Tracked objects:
 14338 ;;		On entry : 0/0
 14339 ;;		On exit  : 0/0
 14340 ;;		Unchanged: 0/0
 14341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14342 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14345 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14346 ;;Total ram usage:        2 bytes
 14347 ;; Hardware stack levels used:    1
 14348 ;; Hardware stack levels required when called:   13
 14349 ;; This function calls:
 14350 ;;		Nothing
 14351 ;; This function is called by:
 14352 ;;		_EUSART1_Initialize
 14353 ;; This function uses a non-reentrant model
 14354 ;;
 14355                           
 14356                           	psect	text60
 14357  0068A8                     __ptext60:
 14358                           	opt callstack 0
 14359  0068A8                     _EUSART1_SetOverrunErrorHandler:
 14360                           	opt callstack 15
 14361  0068A8                     
 14362                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
 14363  0068A8  C08D  F0C4         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 14364  0068AC  C08E  F0C5         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 14365  0068B0  0012               	return		;funcret
 14366  0068B2                     __end_of_EUSART1_SetOverrunErrorHandler:
 14367                           	opt callstack 0
 14368                           
 14369 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 14370 ;; Defined at:
 14371 ;;		line 166 in file "mcc_generated_files/eusart1.c"
 14372 ;; Parameters:    Size  Location     Type
 14373 ;;  interruptHan    2   45[BANK0 ] PTR FTN()void 
 14374 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 14375 ;; Auto vars:     Size  Location     Type
 14376 ;;		None
 14377 ;; Return value:  Size  Location     Type
 14378 ;;                  1    wreg      void 
 14379 ;; Registers used:
 14380 ;;		wreg, status,2, status,0
 14381 ;; Tracked objects:
 14382 ;;		On entry : 0/0
 14383 ;;		On exit  : 0/0
 14384 ;;		Unchanged: 0/0
 14385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14386 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14389 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14390 ;;Total ram usage:        2 bytes
 14391 ;; Hardware stack levels used:    1
 14392 ;; Hardware stack levels required when called:   13
 14393 ;; This function calls:
 14394 ;;		Nothing
 14395 ;; This function is called by:
 14396 ;;		_EUSART1_Initialize
 14397 ;; This function uses a non-reentrant model
 14398 ;;
 14399                           
 14400                           	psect	text61
 14401  0068B2                     __ptext61:
 14402                           	opt callstack 0
 14403  0068B2                     _EUSART1_SetFramingErrorHandler:
 14404                           	opt callstack 15
 14405  0068B2                     
 14406                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
 14407  0068B2  C08D  F0C6         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 14408  0068B6  C08E  F0C7         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 14409  0068BA  0012               	return		;funcret
 14410  0068BC                     __end_of_EUSART1_SetFramingErrorHandler:
 14411                           	opt callstack 0
 14412                           
 14413 ;; *************** function _EUSART1_SetErrorHandler *****************
 14414 ;; Defined at:
 14415 ;;		line 174 in file "mcc_generated_files/eusart1.c"
 14416 ;; Parameters:    Size  Location     Type
 14417 ;;  interruptHan    2   45[BANK0 ] PTR FTN()void 
 14418 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 14419 ;; Auto vars:     Size  Location     Type
 14420 ;;		None
 14421 ;; Return value:  Size  Location     Type
 14422 ;;                  1    wreg      void 
 14423 ;; Registers used:
 14424 ;;		wreg, status,2, status,0
 14425 ;; Tracked objects:
 14426 ;;		On entry : 0/0
 14427 ;;		On exit  : 0/0
 14428 ;;		Unchanged: 0/0
 14429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14430 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14433 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14434 ;;Total ram usage:        2 bytes
 14435 ;; Hardware stack levels used:    1
 14436 ;; Hardware stack levels required when called:   13
 14437 ;; This function calls:
 14438 ;;		Nothing
 14439 ;; This function is called by:
 14440 ;;		_EUSART1_Initialize
 14441 ;; This function uses a non-reentrant model
 14442 ;;
 14443                           
 14444                           	psect	text62
 14445  0068BC                     __ptext62:
 14446                           	opt callstack 0
 14447  0068BC                     _EUSART1_SetErrorHandler:
 14448                           	opt callstack 15
 14449  0068BC                     
 14450                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
 14451  0068BC  C08D  F0C2         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 14452  0068C0  C08E  F0C3         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 14453  0068C4  0012               	return		;funcret
 14454  0068C6                     __end_of_EUSART1_SetErrorHandler:
 14455                           	opt callstack 0
 14456                           
 14457 ;; *************** function _ADC_Initialize *****************
 14458 ;; Defined at:
 14459 ;;		line 62 in file "mcc_generated_files/adc.c"
 14460 ;; Parameters:    Size  Location     Type
 14461 ;;		None
 14462 ;; Auto vars:     Size  Location     Type
 14463 ;;		None
 14464 ;; Return value:  Size  Location     Type
 14465 ;;                  1    wreg      void 
 14466 ;; Registers used:
 14467 ;;		wreg, status,2
 14468 ;; Tracked objects:
 14469 ;;		On entry : 0/0
 14470 ;;		On exit  : 0/0
 14471 ;;		Unchanged: 0/0
 14472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14477 ;;Total ram usage:        0 bytes
 14478 ;; Hardware stack levels used:    1
 14479 ;; Hardware stack levels required when called:   13
 14480 ;; This function calls:
 14481 ;;		Nothing
 14482 ;; This function is called by:
 14483 ;;		_SYSTEM_Initialize
 14484 ;; This function uses a non-reentrant model
 14485 ;;
 14486                           
 14487                           	psect	text63
 14488  006820                     __ptext63:
 14489                           	opt callstack 0
 14490  006820                     _ADC_Initialize:
 14491                           	opt callstack 16
 14492  006820                     
 14493                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x01;
 14494  006820  0E01               	movlw	1
 14495  006822  6EC2               	movwf	194,c	;volatile
 14496                           
 14497                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x80;
 14498  006824  0E80               	movlw	128
 14499  006826  6EC1               	movwf	193,c	;volatile
 14500                           
 14501                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0xB5;
 14502  006828  0EB5               	movlw	181
 14503  00682A  6EC0               	movwf	192,c	;volatile
 14504                           
 14505                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
 14506  00682C  0E00               	movlw	0
 14507  00682E  6EC4               	movwf	196,c	;volatile
 14508                           
 14509                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
 14510  006830  0E00               	movlw	0
 14511  006832  6EC3               	movwf	195,c	;volatile
 14512  006834  0012               	return		;funcret
 14513  006836                     __end_of_ADC_Initialize:
 14514                           	opt callstack 0
 14515                           
 14516 ;; *************** function _SPI_Open *****************
 14517 ;; Defined at:
 14518 ;;		line 72 in file "mcc_generated_files/spi.c"
 14519 ;; Parameters:    Size  Location     Type
 14520 ;;  spiUniqueCon    1    wreg     enum E353
 14521 ;; Auto vars:     Size  Location     Type
 14522 ;;  spiUniqueCon    1   46[BANK0 ] enum E353
 14523 ;; Return value:  Size  Location     Type
 14524 ;;                  1    wreg      _Bool 
 14525 ;; Registers used:
 14526 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 14527 ;; Tracked objects:
 14528 ;;		On entry : 0/0
 14529 ;;		On exit  : 0/0
 14530 ;;		Unchanged: 0/0
 14531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14533 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14534 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14535 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14536 ;;Total ram usage:        2 bytes
 14537 ;; Hardware stack levels used:    1
 14538 ;; Hardware stack levels required when called:   13
 14539 ;; This function calls:
 14540 ;;		Nothing
 14541 ;; This function is called by:
 14542 ;;		_main
 14543 ;; This function uses a non-reentrant model
 14544 ;;
 14545                           
 14546                           	psect	text64
 14547  005B44                     __ptext64:
 14548                           	opt callstack 0
 14549  005B44                     _SPI_Open:
 14550                           	opt callstack 17
 14551                           
 14552                           ;incstack = 0
 14553                           ;SPI_Open@spiUniqueConfiguration stored from wreg
 14554  005B44  0100               	movlb	0	; () banked
 14555  005B46  6F8E               	movwf	SPI_Open@spiUniqueConfiguration& (0+255),b
 14556  005B48                     
 14557                           ;mcc_generated_files/spi.c: 72: _Bool SPI_Open(spi_modes_t spiUniqueConfiguration);mcc_g
      +                          enerated_files/spi.c: 73: {;mcc_generated_files/spi.c: 74:     if(!SSPCON1bits.SSPEN)
 14558  005B48  BAC6               	btfsc	198,5,c	;volatile
 14559  005B4A  EFA9  F02D         	goto	u7771
 14560  005B4E  EFAB  F02D         	goto	u7770
 14561  005B52                     u7771:
 14562  005B52  EFFB  F02D         	goto	l55
 14563  005B56                     u7770:
 14564  005B56                     
 14565                           ;mcc_generated_files/spi.c: 75:     {;mcc_generated_files/spi.c: 76:         SSPSTAT = s
      +                          pi_configuration[spiUniqueConfiguration].stat;
 14566  005B56  0100               	movlb	0	; () banked
 14567  005B58  518E               	movf	SPI_Open@spiUniqueConfiguration& (0+255),w,b
 14568  005B5A  0D04               	mullw	4
 14569  005B5C  0E01               	movlw	1
 14570  005B5E  26F3               	addwf	243,f,c
 14571  005B60  0E00               	movlw	0
 14572  005B62  22F4               	addwfc	244,f,c
 14573  005B64  0E01               	movlw	low _spi_configuration
 14574  005B66  24F3               	addwf	243,w,c
 14575  005B68  6EF6               	movwf	tblptrl,c
 14576  005B6A  0EFF               	movlw	high _spi_configuration
 14577  005B6C  20F4               	addwfc	244,w,c
 14578  005B6E  6EF7               	movwf	tblptrh,c
 14579  005B70                     	if	1	;There are 3 active tblptr bytes
 14580  005B70  6AF8               	clrf	tblptru,c
 14581  005B72  0E00               	movlw	low (__mediumconst shr (0+16))
 14582  005B74  22F8               	addwfc	tblptru,f,c
 14583  005B76                     	endif
 14584  005B76  0008               	tblrd		*
 14585  005B78  CFF5 FFC7          	movff	tablat,4039	;volatile
 14586                           
 14587                           ;mcc_generated_files/spi.c: 77:         SSPCON1 = spi_configuration[spiUniqueConfigurati
      +                          on].con1;
 14588  005B7C  518E               	movf	SPI_Open@spiUniqueConfiguration& (0+255),w,b
 14589  005B7E  0D04               	mullw	4
 14590  005B80  0E01               	movlw	low _spi_configuration
 14591  005B82  24F3               	addwf	243,w,c
 14592  005B84  6EF6               	movwf	tblptrl,c
 14593  005B86  0EFF               	movlw	high _spi_configuration
 14594  005B88  20F4               	addwfc	244,w,c
 14595  005B8A  6EF7               	movwf	tblptrh,c
 14596  005B8C                     	if	1	;There are 3 active tblptr bytes
 14597  005B8C  6AF8               	clrf	tblptru,c
 14598  005B8E  0E00               	movlw	low (__mediumconst shr (0+16))
 14599  005B90  22F8               	addwfc	tblptru,f,c
 14600  005B92                     	endif
 14601  005B92  0008               	tblrd		*
 14602  005B94  CFF5 FFC6          	movff	tablat,4038	;volatile
 14603  005B98                     
 14604                           ; BSR set to: 0
 14605                           ;mcc_generated_files/spi.c: 78:         SSPCON2 = 0x00;
 14606  005B98  0E00               	movlw	0
 14607  005B9A  6EC5               	movwf	197,c	;volatile
 14608  005B9C                     
 14609                           ; BSR set to: 0
 14610                           ;mcc_generated_files/spi.c: 79:         SSPADD = spi_configuration[spiUniqueConfiguratio
      +                          n].add;
 14611  005B9C  518E               	movf	SPI_Open@spiUniqueConfiguration& (0+255),w,b
 14612  005B9E  0D04               	mullw	4
 14613  005BA0  0E02               	movlw	2
 14614  005BA2  26F3               	addwf	243,f,c
 14615  005BA4  0E00               	movlw	0
 14616  005BA6  22F4               	addwfc	244,f,c
 14617  005BA8  0E01               	movlw	low _spi_configuration
 14618  005BAA  24F3               	addwf	243,w,c
 14619  005BAC  6EF6               	movwf	tblptrl,c
 14620  005BAE  0EFF               	movlw	high _spi_configuration
 14621  005BB0  20F4               	addwfc	244,w,c
 14622  005BB2  6EF7               	movwf	tblptrh,c
 14623  005BB4                     	if	1	;There are 3 active tblptr bytes
 14624  005BB4  6AF8               	clrf	tblptru,c
 14625  005BB6  0E00               	movlw	low (__mediumconst shr (0+16))
 14626  005BB8  22F8               	addwfc	tblptru,f,c
 14627  005BBA                     	endif
 14628  005BBA  0008               	tblrd		*
 14629  005BBC  CFF5 FFC8          	movff	tablat,4040	;volatile
 14630  005BC0                     
 14631                           ; BSR set to: 0
 14632                           ;mcc_generated_files/spi.c: 80:         TRISCbits.TRISC3 = spi_configuration[spiUniqueCo
      +                          nfiguration].operation;
 14633  005BC0  518E               	movf	SPI_Open@spiUniqueConfiguration& (0+255),w,b
 14634  005BC2  0D04               	mullw	4
 14635  005BC4  0E03               	movlw	3
 14636  005BC6  26F3               	addwf	243,f,c
 14637  005BC8  0E00               	movlw	0
 14638  005BCA  22F4               	addwfc	244,f,c
 14639  005BCC  0E01               	movlw	low _spi_configuration
 14640  005BCE  24F3               	addwf	243,w,c
 14641  005BD0  6EF6               	movwf	tblptrl,c
 14642  005BD2  0EFF               	movlw	high _spi_configuration
 14643  005BD4  20F4               	addwfc	244,w,c
 14644  005BD6  6EF7               	movwf	tblptrh,c
 14645  005BD8                     	if	1	;There are 3 active tblptr bytes
 14646  005BD8  6AF8               	clrf	tblptru,c
 14647  005BDA  0E00               	movlw	low (__mediumconst shr (0+16))
 14648  005BDC  22F8               	addwfc	tblptru,f,c
 14649  005BDE                     	endif
 14650  005BDE  0008               	tblrd		*
 14651  005BE0  CFF5 F08D          	movff	tablat,??_SPI_Open
 14652  005BE4  478D               	rlncf	??_SPI_Open& (0+255),f,b
 14653  005BE6  478D               	rlncf	??_SPI_Open& (0+255),f,b
 14654  005BE8  478D               	rlncf	??_SPI_Open& (0+255),f,b
 14655  005BEA  5094               	movf	148,w,c	;volatile
 14656  005BEC  198D               	xorwf	??_SPI_Open& (0+255),w,b
 14657  005BEE  0BF7               	andlw	-9
 14658  005BF0  198D               	xorwf	??_SPI_Open& (0+255),w,b
 14659  005BF2  6E94               	movwf	148,c	;volatile
 14660  005BF4                     
 14661                           ; BSR set to: 0
 14662                           ;mcc_generated_files/spi.c: 81:         SSPCON1bits.SSPEN = 1;
 14663  005BF4  8AC6               	bsf	198,5,c	;volatile
 14664  005BF6                     l55:
 14665  005BF6  0012               	return		;funcret
 14666  005BF8                     __end_of_SPI_Open:
 14667                           	opt callstack 0
 14668                           
 14669 ;; *************** function _ADC_GetConversion *****************
 14670 ;; Defined at:
 14671 ;;		line 108 in file "mcc_generated_files/adc.c"
 14672 ;; Parameters:    Size  Location     Type
 14673 ;;  channel         1    wreg     enum E12385
 14674 ;; Auto vars:     Size  Location     Type
 14675 ;;  channel         1   49[BANK0 ] enum E12385
 14676 ;; Return value:  Size  Location     Type
 14677 ;;                  2   45[BANK0 ] unsigned short 
 14678 ;; Registers used:
 14679 ;;		wreg, status,2, status,0
 14680 ;; Tracked objects:
 14681 ;;		On entry : 0/0
 14682 ;;		On exit  : 0/0
 14683 ;;		Unchanged: 0/0
 14684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14685 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14686 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14687 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14688 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14689 ;;Total ram usage:        5 bytes
 14690 ;; Hardware stack levels used:    1
 14691 ;; Hardware stack levels required when called:   13
 14692 ;; This function calls:
 14693 ;;		Nothing
 14694 ;; This function is called by:
 14695 ;;		_main
 14696 ;; This function uses a non-reentrant model
 14697 ;;
 14698                           
 14699                           	psect	text65
 14700  0062C0                     __ptext65:
 14701                           	opt callstack 0
 14702  0062C0                     _ADC_GetConversion:
 14703                           	opt callstack 17
 14704                           
 14705                           ;incstack = 0
 14706                           ;ADC_GetConversion@channel stored from wreg
 14707  0062C0  0100               	movlb	0	; () banked
 14708  0062C2  6F91               	movwf	ADC_GetConversion@channel& (0+255),b
 14709  0062C4                     
 14710                           ;mcc_generated_files/adc.c: 108: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 109: {;mcc_generated_files/adc.c: 111:     ADCON0bits.CHS = ch
      +                          annel;
 14711  0062C4  C091  F08F         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 14712  0062C8  0100               	movlb	0	; () banked
 14713  0062CA  478F               	rlncf	??_ADC_GetConversion& (0+255),f,b
 14714  0062CC  478F               	rlncf	??_ADC_GetConversion& (0+255),f,b
 14715  0062CE  50C2               	movf	194,w,c	;volatile
 14716  0062D0  198F               	xorwf	??_ADC_GetConversion& (0+255),w,b
 14717  0062D2  0B83               	andlw	-125
 14718  0062D4  198F               	xorwf	??_ADC_GetConversion& (0+255),w,b
 14719  0062D6  6EC2               	movwf	194,c	;volatile
 14720  0062D8                     
 14721                           ; BSR set to: 0
 14722                           ;mcc_generated_files/adc.c: 114:     ADCON0bits.ADON = 1;
 14723  0062D8  80C2               	bsf	194,0,c	;volatile
 14724  0062DA                     
 14725                           ; BSR set to: 0
 14726                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.GO_nDONE = 1;
 14727  0062DA  82C2               	bsf	194,1,c	;volatile
 14728  0062DC                     l179:
 14729                           
 14730                           ;mcc_generated_files/adc.c: 121:     while (ADCON0bits.GO_nDONE)
 14731  0062DC  B2C2               	btfsc	194,1,c	;volatile
 14732  0062DE  EF73  F031         	goto	u7791
 14733  0062E2  EF75  F031         	goto	u7790
 14734  0062E6                     u7791:
 14735  0062E6  EF6E  F031         	goto	l179
 14736  0062EA                     u7790:
 14737  0062EA                     
 14738                           ;mcc_generated_files/adc.c: 126:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 14739  0062EA  50C4               	movf	196,w,c	;volatile
 14740  0062EC  0100               	movlb	0	; () banked
 14741  0062EE  6F90               	movwf	(??_ADC_GetConversion+1)& (0+255),b
 14742  0062F0  6B8F               	clrf	??_ADC_GetConversion& (0+255),b
 14743  0062F2  50C3               	movf	195,w,c	;volatile
 14744  0062F4  258F               	addwf	??_ADC_GetConversion& (0+255),w,b
 14745  0062F6  6F8D               	movwf	?_ADC_GetConversion& (0+255),b
 14746  0062F8  0E00               	movlw	0
 14747  0062FA  2190               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
 14748  0062FC  6F8E               	movwf	(?_ADC_GetConversion+1)& (0+255),b
 14749  0062FE                     
 14750                           ; BSR set to: 0
 14751  0062FE  0012               	return		;funcret
 14752  006300                     __end_of_ADC_GetConversion:
 14753                           	opt callstack 0
 14754                           
 14755 ;; *************** function _INTERRUPT_InterruptManager *****************
 14756 ;; Defined at:
 14757 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 14758 ;; Parameters:    Size  Location     Type
 14759 ;;		None
 14760 ;; Auto vars:     Size  Location     Type
 14761 ;;		None
 14762 ;; Return value:  Size  Location     Type
 14763 ;;                  1    wreg      void 
 14764 ;; Registers used:
 14765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14766 ;; Tracked objects:
 14767 ;;		On entry : 0/0
 14768 ;;		On exit  : 0/0
 14769 ;;		Unchanged: 0/0
 14770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14773 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14774 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14775 ;;Total ram usage:       12 bytes
 14776 ;; Hardware stack levels used:    1
 14777 ;; Hardware stack levels required when called:   12
 14778 ;; This function calls:
 14779 ;;		_PIN_MANAGER_IOC
 14780 ;; This function is called by:
 14781 ;;		Interrupt level 2
 14782 ;; This function uses a non-reentrant model
 14783 ;;
 14784                           
 14785                           	psect	intcode
 14786  000008                     __pintcode:
 14787                           	opt callstack 0
 14788  000008                     _INTERRUPT_InterruptManager:
 14789                           	opt callstack 8
 14790                           
 14791                           ; BSR set to: 0
 14792                           ;incstack = 0
 14793  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14794  00000A  CFFA F081          	movff	pclath,??_INTERRUPT_InterruptManager
 14795  00000E  CFFB F082          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 14796  000012  CFE1 F083          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 14797  000016  CFE2 F084          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 14798  00001A  CFD9 F085          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 14799  00001E  CFDA F086          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 14800  000022  CFF3 F087          	movff	prodl,??_INTERRUPT_InterruptManager+6
 14801  000026  CFF4 F088          	movff	prodh,??_INTERRUPT_InterruptManager+7
 14802  00002A  CFF6 F089          	movff	tblptrl,??_INTERRUPT_InterruptManager+8
 14803  00002E  CFF7 F08A          	movff	tblptrh,??_INTERRUPT_InterruptManager+9
 14804  000032  CFF8 F08B          	movff	tblptru,??_INTERRUPT_InterruptManager+10
 14805  000036  CFF5 F08C          	movff	tablat,??_INTERRUPT_InterruptManager+11
 14806  00003A                     
 14807                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.RBIE == 1 && INTCONbits.
      +                          RBIF == 1)
 14808  00003A  A6F2               	btfss	242,3,c	;volatile
 14809  00003C  EF22  F000         	goto	i2u1174_41
 14810  000040  EF24  F000         	goto	i2u1174_40
 14811  000044                     i2u1174_41:
 14812  000044  EF2D  F000         	goto	i2l340
 14813  000048                     i2u1174_40:
 14814  000048  A0F2               	btfss	242,0,c	;volatile
 14815  00004A  EF29  F000         	goto	i2u1175_41
 14816  00004E  EF2B  F000         	goto	i2u1175_40
 14817  000052                     i2u1175_41:
 14818  000052  EF2D  F000         	goto	i2l340
 14819  000056                     i2u1175_40:
 14820  000056                     
 14821                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         PIN_MANAGER_IOC();
 14822  000056  EC04  F034         	call	_PIN_MANAGER_IOC	;wreg free
 14823  00005A                     i2l340:
 14824  00005A  C08C  FFF5         	movff	??_INTERRUPT_InterruptManager+11,tablat
 14825  00005E  C08B  FFF8         	movff	??_INTERRUPT_InterruptManager+10,tblptru
 14826  000062  C08A  FFF7         	movff	??_INTERRUPT_InterruptManager+9,tblptrh
 14827  000066  C089  FFF6         	movff	??_INTERRUPT_InterruptManager+8,tblptrl
 14828  00006A  C088  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 14829  00006E  C087  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 14830  000072  C086  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 14831  000076  C085  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 14832  00007A  C084  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 14833  00007E  C083  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 14834  000082  C082  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 14835  000086  C081  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 14836  00008A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14837  00008C  0011               	retfie		f
 14838  00008E                     __end_of_INTERRUPT_InterruptManager:
 14839                           	opt callstack 0
 14840                           
 14841 ;; *************** function _PIN_MANAGER_IOC *****************
 14842 ;; Defined at:
 14843 ;;		line 107 in file "mcc_generated_files/pin_manager.c"
 14844 ;; Parameters:    Size  Location     Type
 14845 ;;		None
 14846 ;; Auto vars:     Size  Location     Type
 14847 ;;		None
 14848 ;; Return value:  Size  Location     Type
 14849 ;;                  1    wreg      void 
 14850 ;; Registers used:
 14851 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14852 ;; Tracked objects:
 14853 ;;		On entry : 0/0
 14854 ;;		On exit  : 0/0
 14855 ;;		Unchanged: 0/0
 14856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14861 ;;Total ram usage:        0 bytes
 14862 ;; Hardware stack levels used:    1
 14863 ;; Hardware stack levels required when called:   11
 14864 ;; This function calls:
 14865 ;;		_IOCB4_ISR
 14866 ;; This function is called by:
 14867 ;;		_INTERRUPT_InterruptManager
 14868 ;; This function uses a non-reentrant model
 14869 ;;
 14870                           
 14871                           	psect	text67
 14872  006808                     __ptext67:
 14873                           	opt callstack 0
 14874  006808                     _PIN_MANAGER_IOC:
 14875                           	opt callstack 8
 14876  006808                     
 14877                           ;mcc_generated_files/pin_manager.c: 110:     if(IOCBbits.IOCB4 == 1)
 14878  006808  010F               	movlb	15	; () banked
 14879  00680A  A95A               	btfss	90,4,b	;volatile
 14880  00680C  EF0A  F034         	goto	i2u1165_41
 14881  006810  EF0C  F034         	goto	i2u1165_40
 14882  006814                     i2u1165_41:
 14883  006814  EF0E  F034         	goto	i2l9019
 14884  006818                     i2u1165_40:
 14885  006818                     
 14886                           ; BSR set to: 15
 14887                           ;mcc_generated_files/pin_manager.c: 111:     {;mcc_generated_files/pin_manager.c: 112:  
      +                                 IOCB4_ISR();
 14888  006818  ECF4  F032         	call	_IOCB4_ISR	;wreg free
 14889  00681C                     i2l9019:
 14890                           
 14891                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.RBIF = 0;
 14892  00681C  90F2               	bcf	242,0,c	;volatile
 14893  00681E  0012               	return		;funcret
 14894  006820                     __end_of_PIN_MANAGER_IOC:
 14895                           	opt callstack 0
 14896                           
 14897 ;; *************** function _IOCB4_ISR *****************
 14898 ;; Defined at:
 14899 ;;		line 121 in file "mcc_generated_files/pin_manager.c"
 14900 ;; Parameters:    Size  Location     Type
 14901 ;;		None
 14902 ;; Auto vars:     Size  Location     Type
 14903 ;;		None
 14904 ;; Return value:  Size  Location     Type
 14905 ;;                  1    wreg      void 
 14906 ;; Registers used:
 14907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14908 ;; Tracked objects:
 14909 ;;		On entry : 0/0
 14910 ;;		On exit  : 0/0
 14911 ;;		Unchanged: 0/0
 14912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14917 ;;Total ram usage:        0 bytes
 14918 ;; Hardware stack levels used:    1
 14919 ;; Hardware stack levels required when called:   10
 14920 ;; This function calls:
 14921 ;;		Absolute function
 14922 ;;		_INTERRUPT_S1_CALLBACK
 14923 ;;		_IOCB4_DefaultInterruptHandler
 14924 ;; This function is called by:
 14925 ;;		_PIN_MANAGER_IOC
 14926 ;; This function uses a non-reentrant model
 14927 ;;
 14928                           
 14929                           	psect	text68
 14930  0065E8                     __ptext68:
 14931                           	opt callstack 0
 14932  0065E8                     _IOCB4_ISR:
 14933                           	opt callstack 8
 14934  0065E8                     
 14935                           ;mcc_generated_files/pin_manager.c: 126:     if(IOCB4_InterruptHandler)
 14936  0065E8  0100               	movlb	0	; () banked
 14937  0065EA  51CA               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 14938  0065EC  11CB               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 14939  0065EE  B4D8               	btfsc	status,2,c
 14940  0065F0  EFFC  F032         	goto	i2u1158_41
 14941  0065F4  EFFE  F032         	goto	i2u1158_40
 14942  0065F8                     i2u1158_41:
 14943  0065F8  EF0A  F033         	goto	i2l142
 14944  0065FC                     i2u1158_40:
 14945  0065FC                     
 14946                           ; BSR set to: 0
 14947                           ;mcc_generated_files/pin_manager.c: 127:     {;mcc_generated_files/pin_manager.c: 128:  
      +                                 IOCB4_InterruptHandler();
 14948  0065FC  D802               	call	i2u1159_48
 14949  0065FE  EF0A  F033         	goto	i2u1159_49
 14950  006602                     i2u1159_48:
 14951  006602  0005               	push	
 14952  006604  6EFA               	movwf	pclath,c
 14953  006606  51CA               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 14954  006608  6EFD               	movwf	tosl,c
 14955  00660A  51CB               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 14956  00660C  6EFE               	movwf	tosh,c
 14957  00660E  6AFF               	clrf	tosu,c
 14958  006610  50FA               	movf	pclath,w,c
 14959  006612  0012               	return		;indir
 14960  006614                     i2u1159_49:
 14961  006614                     i2l142:
 14962  006614  0012               	return		;funcret
 14963  006616                     __end_of_IOCB4_ISR:
 14964                           	opt callstack 0
 14965                           
 14966 ;; *************** function _INTERRUPT_S1_CALLBACK *****************
 14967 ;; Defined at:
 14968 ;;		line 11 in file "main.c"
 14969 ;; Parameters:    Size  Location     Type
 14970 ;;		None
 14971 ;; Auto vars:     Size  Location     Type
 14972 ;;		None
 14973 ;; Return value:  Size  Location     Type
 14974 ;;                  1    wreg      void 
 14975 ;; Registers used:
 14976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14977 ;; Tracked objects:
 14978 ;;		On entry : 0/0
 14979 ;;		On exit  : 0/0
 14980 ;;		Unchanged: 0/0
 14981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14986 ;;Total ram usage:        0 bytes
 14987 ;; Hardware stack levels used:    1
 14988 ;; Hardware stack levels required when called:    9
 14989 ;; This function calls:
 14990 ;;		_TMR0_StartTimer
 14991 ;;		_TMR0_StopTimer
 14992 ;;		i2_TMR0_WriteTimer
 14993 ;;		i2_printf
 14994 ;; This function is called by:
 14995 ;;		_main
 14996 ;;		_IOCB4_ISR
 14997 ;; This function uses a non-reentrant model
 14998 ;;
 14999                           
 15000                           	psect	text69
 15001  006038                     __ptext69:
 15002                           	opt callstack 0
 15003  006038                     _INTERRUPT_S1_CALLBACK:
 15004                           	opt callstack 8
 15005  006038                     
 15006                           ;main.c: 12:     if (PORTBbits.RB4 == 0) {
 15007  006038  B881               	btfsc	129,4,c	;volatile
 15008  00603A  EF21  F030         	goto	i2u1155_41
 15009  00603E  EF23  F030         	goto	i2u1155_40
 15010  006042                     i2u1155_41:
 15011  006042  EF3A  F030         	goto	i2l8967
 15012  006046                     i2u1155_40:
 15013  006046                     
 15014                           ;main.c: 13:         printf("\f\rPOT: %3d \r", adc_perc);
 15015  006046  0EB4               	movlw	low STR_1
 15016  006048  0100               	movlb	0	; () banked
 15017  00604A  6F7B               	movwf	i2printf@fmt& (0+255),b
 15018  00604C  0EFF               	movlw	high STR_1
 15019  00604E  6F7C               	movwf	(i2printf@fmt+1)& (0+255),b
 15020  006050  C0B5  F07D         	movff	_adc_perc,?i2_printf+2
 15021  006054  C0B6  F07E         	movff	_adc_perc+1,?i2_printf+3
 15022  006058  C0B7  F07F         	movff	_adc_perc+2,?i2_printf+4
 15023  00605C  C0B8  F080         	movff	_adc_perc+3,?i2_printf+5
 15024  006060  EC88  F033         	call	i2_printf	;wreg free
 15025  006064                     
 15026                           ;main.c: 15:         TMR0_WriteTimer(0x00);
 15027  006064  0E00               	movlw	0
 15028  006066  6E02               	movwf	(i2TMR0_WriteTimer@timerVal+1)^0,c
 15029  006068  0E00               	movlw	0
 15030  00606A  6E01               	movwf	i2TMR0_WriteTimer@timerVal^0,c
 15031  00606C  EC68  F034         	call	i2_TMR0_WriteTimer	;wreg free
 15032  006070                     
 15033                           ;main.c: 16:         TMR0_StartTimer();
 15034  006070  EC77  F034         	call	_TMR0_StartTimer	;wreg free
 15035  006074                     i2l8967:
 15036                           
 15037                           ;main.c: 18:     if (PORTBbits.RB4 == 1) {
 15038  006074  A881               	btfss	129,4,c	;volatile
 15039  006076  EF3F  F030         	goto	i2u1156_41
 15040  00607A  EF41  F030         	goto	i2u1156_40
 15041  00607E                     i2u1156_41:
 15042  00607E  EF43  F030         	goto	i2l434
 15043  006082                     i2u1156_40:
 15044  006082                     
 15045                           ;main.c: 19:         TMR0_StopTimer();
 15046  006082  EC75  F034         	call	_TMR0_StopTimer	;wreg free
 15047  006086                     i2l434:
 15048  006086  0012               	return		;funcret
 15049  006088                     __end_of_INTERRUPT_S1_CALLBACK:
 15050                           	opt callstack 0
 15051                           
 15052 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 15053 ;; Defined at:
 15054 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 15055 ;; Parameters:    Size  Location     Type
 15056 ;;		None
 15057 ;; Auto vars:     Size  Location     Type
 15058 ;;		None
 15059 ;; Return value:  Size  Location     Type
 15060 ;;                  1    wreg      void 
 15061 ;; Registers used:
 15062 ;;		None
 15063 ;; Tracked objects:
 15064 ;;		On entry : 0/0
 15065 ;;		On exit  : 0/0
 15066 ;;		Unchanged: 0/0
 15067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15072 ;;Total ram usage:        0 bytes
 15073 ;; Hardware stack levels used:    1
 15074 ;; This function calls:
 15075 ;;		Nothing
 15076 ;; This function is called by:
 15077 ;;		_PIN_MANAGER_Initialize
 15078 ;;		_IOCB4_ISR
 15079 ;; This function uses a non-reentrant model
 15080 ;;
 15081                           
 15082                           	psect	text70
 15083  0068F2                     __ptext70:
 15084                           	opt callstack 0
 15085  0068F2                     _IOCB4_DefaultInterruptHandler:
 15086                           	opt callstack 17
 15087  0068F2  0012               	return		;funcret
 15088  0068F4                     __end_of_IOCB4_DefaultInterruptHandler:
 15089                           	opt callstack 0
 15090                           
 15091 ;; *************** function i2_printf *****************
 15092 ;; Defined at:
 15093 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
 15094 ;; Parameters:    Size  Location     Type
 15095 ;;  fmt             2   27[BANK0 ] PTR const unsigned char 
 15096 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
 15097 ;;		 -> STR_4(22), STR_1(13), 
 15098 ;; Auto vars:     Size  Location     Type
 15099 ;;  printf          2   88[COMRAM] PTR void [1]
 15100 ;;		 -> ?i2_printf(2), ?_snprintf(2), ?_printf(2), 
 15101 ;;  printf          2    0        int 
 15102 ;; Return value:  Size  Location     Type
 15103 ;;                  2   27[BANK0 ] int 
 15104 ;; Registers used:
 15105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15106 ;; Tracked objects:
 15107 ;;		On entry : 0/0
 15108 ;;		On exit  : 0/0
 15109 ;;		Unchanged: 0/0
 15110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15111 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15112 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15114 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15115 ;;Total ram usage:       10 bytes
 15116 ;; Hardware stack levels used:    1
 15117 ;; Hardware stack levels required when called:    8
 15118 ;; This function calls:
 15119 ;;		i2_vfprintf
 15120 ;; This function is called by:
 15121 ;;		_INTERRUPT_S1_CALLBACK
 15122 ;; This function uses a non-reentrant model
 15123 ;;
 15124                           
 15125                           	psect	text71
 15126  006710                     __ptext71:
 15127                           	opt callstack 0
 15128  006710                     i2_printf:
 15129                           	opt callstack 8
 15130  006710  0E7D               	movlw	low (?i2_printf+2)
 15131  006712  6E59               	movwf	i2printf@ap^0,c
 15132  006714  0E00               	movlw	high (?i2_printf+2)
 15133  006716  6E5A               	movwf	(i2printf@ap+1)^0,c
 15134  006718  0E00               	movlw	0
 15135  00671A  6E4F               	movwf	i2vfprintf@fp^0,c
 15136  00671C  0E00               	movlw	0
 15137  00671E  6E50               	movwf	(i2vfprintf@fp+1)^0,c
 15138  006720  C07B  F051         	movff	i2printf@fmt,i2vfprintf@fmt
 15139  006724  C07C  F052         	movff	i2printf@fmt+1,i2vfprintf@fmt+1
 15140  006728  0E59               	movlw	low i2printf@ap
 15141  00672A  6E53               	movwf	i2vfprintf@ap^0,c
 15142  00672C  0E00               	movlw	high i2printf@ap
 15143  00672E  6E54               	movwf	(i2vfprintf@ap+1)^0,c
 15144  006730  ECDB  F02E         	call	i2_vfprintf	;wreg free
 15145  006734  0012               	return		;funcret
 15146  006736                     __end_ofi2_printf:
 15147                           	opt callstack 0
 15148                           
 15149 ;; *************** function i2_vfprintf *****************
 15150 ;; Defined at:
 15151 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 15152 ;; Parameters:    Size  Location     Type
 15153 ;;  fp              2   78[COMRAM] PTR struct _IO_FILE
 15154 ;;		 -> vsnprintf@f(6), NULL(0), 
 15155 ;;  fmt             2   80[COMRAM] PTR const unsigned char 
 15156 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
 15157 ;;		 -> STR_4(22), STR_3(12), STR_1(13), 
 15158 ;;  ap              2   82[COMRAM] PTR PTR void 
 15159 ;;		 -> i2printf@ap(2), snprintf@ap(2), printf@ap(2), 
 15160 ;; Auto vars:     Size  Location     Type
 15161 ;;  vfprintf        2   84[COMRAM] PTR unsigned char 
 15162 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
 15163 ;;		 -> STR_4(22), STR_3(12), STR_1(13), 
 15164 ;; Return value:  Size  Location     Type
 15165 ;;                  2   78[COMRAM] int 
 15166 ;; Registers used:
 15167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15168 ;; Tracked objects:
 15169 ;;		On entry : 0/0
 15170 ;;		On exit  : 0/0
 15171 ;;		Unchanged: 0/0
 15172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15173 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15174 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15176 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15177 ;;Total ram usage:        8 bytes
 15178 ;; Hardware stack levels used:    1
 15179 ;; Hardware stack levels required when called:    7
 15180 ;; This function calls:
 15181 ;;		i2_vfpfcnvrt
 15182 ;; This function is called by:
 15183 ;;		i2_printf
 15184 ;; This function uses a non-reentrant model
 15185 ;;
 15186                           
 15187                           	psect	text72
 15188  005DB6                     __ptext72:
 15189                           	opt callstack 0
 15190  005DB6                     i2_vfprintf:
 15191                           	opt callstack 8
 15192  005DB6                     
 15193                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 15194  005DB6  C051  F055         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
 15195  005DBA  C052  F056         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
 15196  005DBE                     
 15197                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 15198  005DBE  0E00               	movlw	0
 15199  005DC0  0101               	movlb	1	; () banked
 15200  005DC2  6F75               	movwf	(_nout+1)& (0+255),b
 15201  005DC4  0E00               	movlw	0
 15202  005DC6  6F74               	movwf	_nout& (0+255),b
 15203                           
 15204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 15205  005DC8  EFF9  F02E         	goto	i2l8619
 15206  005DCC                     i2l8617:
 15207                           
 15208                           ; BSR set to: 1
 15209                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 15210  005DCC  C04F  F045         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
 15211  005DD0  C050  F046         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
 15212  005DD4  0E55               	movlw	low i2vfprintf@cfmt
 15213  005DD6  6E47               	movwf	i2vfpfcnvrt@fmt^0,c
 15214  005DD8  0E00               	movlw	high i2vfprintf@cfmt
 15215  005DDA  6E48               	movwf	(i2vfpfcnvrt@fmt+1)^0,c
 15216  005DDC  C053  F049         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
 15217  005DE0  C054  F04A         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
 15218  005DE4  ECA9  F009         	call	i2_vfpfcnvrt	;wreg free
 15219  005DE8  5045               	movf	?i2_vfpfcnvrt^0,w,c
 15220  005DEA  0101               	movlb	1	; () banked
 15221  005DEC  2774               	addwf	_nout& (0+255),f,b
 15222  005DEE  5046               	movf	(?i2_vfpfcnvrt+1)^0,w,c
 15223  005DF0  2375               	addwfc	(_nout+1)& (0+255),f,b
 15224  005DF2                     i2l8619:
 15225                           
 15226                           ; BSR set to: 1
 15227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 15228  005DF2  C055  FFF6         	movff	i2vfprintf@cfmt,tblptrl
 15229  005DF6  C056  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
 15230  005DFA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15231  005DFA  6AF8               	clrf	tblptru,c
 15232  005DFC                     	endif
 15233  005DFC                     	if	0	;tblptru may be non-zero
 15234  005DFC                     	endif
 15235  005DFC  0008               	tblrd		*
 15236  005DFE  50F5               	movf	tablat,w,c
 15237  005E00  0900               	iorlw	0
 15238  005E02  A4D8               	btfss	status,2,c
 15239  005E04  EF06  F02F         	goto	i2u1109_41
 15240  005E08  EF08  F02F         	goto	i2u1109_40
 15241  005E0C                     i2u1109_41:
 15242  005E0C  EFE6  F02E         	goto	i2l8617
 15243  005E10                     i2u1109_40:
 15244  005E10                     
 15245                           ; BSR set to: 1
 15246                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 15247  005E10  C174  F04F         	movff	_nout,?i2_vfprintf
 15248  005E14  C175  F050         	movff	_nout+1,?i2_vfprintf+1
 15249  005E18                     
 15250                           ; BSR set to: 1
 15251  005E18  0012               	return		;funcret
 15252  005E1A                     __end_ofi2_vfprintf:
 15253                           	opt callstack 0
 15254                           
 15255 ;; *************** function i2_vfpfcnvrt *****************
 15256 ;; Defined at:
 15257 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 15258 ;; Parameters:    Size  Location     Type
 15259 ;;  fp              2   68[COMRAM] PTR struct _IO_FILE
 15260 ;;		 -> vsnprintf@f(6), NULL(0), 
 15261 ;;  fmt             2   70[COMRAM] PTR PTR unsigned char 
 15262 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
 15263 ;;  ap              2   72[COMRAM] PTR PTR void 
 15264 ;;		 -> i2printf@ap(2), snprintf@ap(2), printf@ap(2), 
 15265 ;; Auto vars:     Size  Location     Type
 15266 ;;  vfpfcnvrt       8   19[BANK0 ] unsigned long long 
 15267 ;;  vfpfcnvrt       8    8[BANK0 ] long long 
 15268 ;;  vfpfcnvrt       4    0        long long 
 15269 ;;  vfpfcnvrt       3    0        unsigned char [3]
 15270 ;;  vfpfcnvrt       2   16[BANK0 ] PTR void 
 15271 ;;		 -> ?_snprintf(2), ?_printf(2), 
 15272 ;;  vfpfcnvrt       2    2[BANK0 ] int 
 15273 ;;  vfpfcnvrt       2    0[BANK0 ] PTR unsigned char 
 15274 ;;		 -> ?_snprintf(2), ?_printf(2), 
 15275 ;;  vfpfcnvrt       2    0        int 
 15276 ;;  vfpfcnvrt       1   18[BANK0 ] unsigned char 
 15277 ;; Return value:  Size  Location     Type
 15278 ;;                  2   68[COMRAM] int 
 15279 ;; Registers used:
 15280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15281 ;; Tracked objects:
 15282 ;;		On entry : 0/0
 15283 ;;		On exit  : 0/0
 15284 ;;		Unchanged: 0/0
 15285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15286 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15287 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15288 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15289 ;;      Totals:        10      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15290 ;;Total ram usage:       37 bytes
 15291 ;; Hardware stack levels used:    1
 15292 ;; Hardware stack levels required when called:    6
 15293 ;; This function calls:
 15294 ;;		i2_atoi
 15295 ;;		i2_ctoa
 15296 ;;		i2_dtoa
 15297 ;;		i2_fputc
 15298 ;;		i2_isdigit
 15299 ;;		i2_otoa
 15300 ;;		i2_stoa
 15301 ;;		i2_strncmp
 15302 ;;		i2_utoa
 15303 ;;		i2_xtoa
 15304 ;; This function is called by:
 15305 ;;		i2_vfprintf
 15306 ;; This function uses a non-reentrant model
 15307 ;;
 15308                           
 15309                           	psect	text73
 15310  001352                     __ptext73:
 15311                           	opt callstack 0
 15312  001352                     i2_vfpfcnvrt:
 15313                           	opt callstack 8
 15314  001352                     
 15315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 15316  001352  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15317  001356  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15318  00135A  CFDE FFF6          	movff	postinc2,tblptrl
 15319  00135E  CFDD FFF7          	movff	postdec2,tblptrh
 15320  001362                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15321  001362  6AF8               	clrf	tblptru,c
 15322  001364                     	endif
 15323  001364                     	if	0	;tblptru may be non-zero
 15324  001364                     	endif
 15325  001364  0008               	tblrd		*
 15326  001366  50F5               	movf	tablat,w,c
 15327  001368  0A25               	xorlw	37
 15328  00136A  A4D8               	btfss	status,2,c
 15329  00136C  EFBA  F009         	goto	i2u988_41
 15330  001370  EFBC  F009         	goto	i2u988_40
 15331  001374                     i2u988_41:
 15332  001374  EFC8  F012         	goto	i2l8269
 15333  001378                     i2u988_40:
 15334  001378                     
 15335                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 15336  001378  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15337  00137C  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15338  001380  2ADE               	incf	postinc2,f,c
 15339  001382  0E00               	movlw	0
 15340  001384  22DD               	addwfc	postdec2,f,c
 15341  001386                     
 15342                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 15343  001386  0E00               	movlw	0
 15344  001388  0100               	movlb	0	; () banked
 15345  00138A  6FBA               	movwf	(_width+1)& (0+255),b
 15346  00138C  0E00               	movlw	0
 15347  00138E  6FB9               	movwf	_width& (0+255),b
 15348  001390  C0B9  F0BD         	movff	_width,_flags
 15349  001394  C0BA  F0BE         	movff	_width+1,_flags+1
 15350  001398                     
 15351                           ; BSR set to: 0
 15352                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 15353  001398  69BB               	setf	_prec& (0+255),b
 15354  00139A  69BC               	setf	(_prec+1)& (0+255),b
 15355  00139C                     
 15356                           ; BSR set to: 0
 15357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
 15358  00139C  0E00               	movlw	0
 15359  00139E  6F63               	movwf	(i2vfpfcnvrt@done+1)& (0+255),b
 15360  0013A0  0E00               	movlw	0
 15361  0013A2  6F62               	movwf	i2vfpfcnvrt@done& (0+255),b
 15362                           
 15363                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 15364  0013A4  EF1B  F00A         	goto	i2l7987
 15365  0013A8                     i2l7961:
 15366                           
 15367                           ; BSR set to: 0
 15368                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
 15369  0013A8  81BD               	bsf	_flags& (0+255),0,b
 15370  0013AA                     i2l7963:
 15371                           
 15372                           ; BSR set to: 0
 15373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
 15374  0013AA  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15375  0013AE  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15376  0013B2  2ADE               	incf	postinc2,f,c
 15377  0013B4  0E00               	movlw	0
 15378  0013B6  22DD               	addwfc	postdec2,f,c
 15379                           
 15380                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
 15381  0013B8  EF1B  F00A         	goto	i2l7987
 15382  0013BC                     i2l7965:
 15383                           
 15384                           ; BSR set to: 0
 15385                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
 15386  0013BC  83BD               	bsf	_flags& (0+255),1,b
 15387  0013BE  EFD5  F009         	goto	i2l7963
 15388  0013C2                     i2l7969:
 15389                           
 15390                           ; BSR set to: 0
 15391                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
 15392  0013C2  85BD               	bsf	_flags& (0+255),2,b
 15393  0013C4  EFD5  F009         	goto	i2l7963
 15394  0013C8                     i2l7973:
 15395                           
 15396                           ; BSR set to: 0
 15397                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
 15398  0013C8  87BD               	bsf	_flags& (0+255),3,b
 15399  0013CA  EFD5  F009         	goto	i2l7963
 15400  0013CE                     i2l7977:
 15401                           
 15402                           ; BSR set to: 0
 15403                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
 15404  0013CE  89BD               	bsf	_flags& (0+255),4,b
 15405  0013D0  EFD5  F009         	goto	i2l7963
 15406  0013D4                     i2l7981:
 15407                           
 15408                           ; BSR set to: 0
 15409                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
 15410  0013D4  0E00               	movlw	0
 15411  0013D6  6F63               	movwf	(i2vfpfcnvrt@done+1)& (0+255),b
 15412  0013D8  0E01               	movlw	1
 15413  0013DA  6F62               	movwf	i2vfpfcnvrt@done& (0+255),b
 15414                           
 15415                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
 15416  0013DC  EF1B  F00A         	goto	i2l7987
 15417  0013E0                     i2l7985:
 15418                           
 15419                           ; BSR set to: 0
 15420  0013E0  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15421  0013E4  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15422  0013E8  CFDE FFF6          	movff	postinc2,tblptrl
 15423  0013EC  CFDD FFF7          	movff	postdec2,tblptrh
 15424  0013F0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15425  0013F0  6AF8               	clrf	tblptru,c
 15426  0013F2                     	endif
 15427  0013F2                     	if	0	;tblptru may be non-zero
 15428  0013F2                     	endif
 15429  0013F2  0008               	tblrd		*
 15430  0013F4  50F5               	movf	tablat,w,c
 15431  0013F6  6E4B               	movwf	??i2_vfpfcnvrt^0,c
 15432  0013F8  6A4C               	clrf	(??i2_vfpfcnvrt+1)^0,c
 15433                           
 15434                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15435                           ; Switch size 1, requested type "simple"
 15436                           ; Number of cases is 1, Range of values is 0 to 0
 15437                           ; switch strategies available:
 15438                           ; Name         Instructions Cycles
 15439                           ; simple_byte            4     3 (average)
 15440                           ;	Chosen strategy is simple_byte
 15441  0013FA  504C               	movf	(??i2_vfpfcnvrt+1)^0,w,c
 15442  0013FC  0A00               	xorlw	0	; case 0
 15443  0013FE  B4D8               	btfsc	status,2,c
 15444  001400  EF04  F00A         	goto	i2l9217
 15445  001404  EFEA  F009         	goto	i2l7981
 15446  001408                     i2l9217:
 15447                           
 15448                           ; BSR set to: 0
 15449                           ; Switch size 1, requested type "simple"
 15450                           ; Number of cases is 5, Range of values is 32 to 48
 15451                           ; switch strategies available:
 15452                           ; Name         Instructions Cycles
 15453                           ; simple_byte           16     9 (average)
 15454                           ;	Chosen strategy is simple_byte
 15455  001408  504B               	movf	??i2_vfpfcnvrt^0,w,c
 15456  00140A  0A20               	xorlw	32	; case 32
 15457  00140C  B4D8               	btfsc	status,2,c
 15458  00140E  EFE4  F009         	goto	i2l7973
 15459  001412  0A03               	xorlw	3	; case 35
 15460  001414  B4D8               	btfsc	status,2,c
 15461  001416  EFE7  F009         	goto	i2l7977
 15462  00141A  0A08               	xorlw	8	; case 43
 15463  00141C  B4D8               	btfsc	status,2,c
 15464  00141E  EFE1  F009         	goto	i2l7969
 15465  001422  0A06               	xorlw	6	; case 45
 15466  001424  B4D8               	btfsc	status,2,c
 15467  001426  EFD4  F009         	goto	i2l7961
 15468  00142A  0A1D               	xorlw	29	; case 48
 15469  00142C  B4D8               	btfsc	status,2,c
 15470  00142E  EFDE  F009         	goto	i2l7965
 15471  001432  EFEA  F009         	goto	i2l7981
 15472  001436                     i2l7987:
 15473                           
 15474                           ; BSR set to: 0
 15475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 15476  001436  5162               	movf	i2vfpfcnvrt@done& (0+255),w,b
 15477  001438  1163               	iorwf	(i2vfpfcnvrt@done+1)& (0+255),w,b
 15478  00143A  B4D8               	btfsc	status,2,c
 15479  00143C  EF22  F00A         	goto	i2u989_41
 15480  001440  EF24  F00A         	goto	i2u989_40
 15481  001444                     i2u989_41:
 15482  001444  EFF0  F009         	goto	i2l7985
 15483  001448                     i2u989_40:
 15484  001448                     
 15485                           ; BSR set to: 0
 15486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
 15487  001448  A1BD               	btfss	_flags& (0+255),0,b
 15488  00144A  EF29  F00A         	goto	i2u990_41
 15489  00144E  EF2B  F00A         	goto	i2u990_40
 15490  001452                     i2u990_41:
 15491  001452  EF2C  F00A         	goto	i2l7991
 15492  001456                     i2u990_40:
 15493  001456                     
 15494                           ; BSR set to: 0
 15495                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
 15496  001456  93BD               	bcf	_flags& (0+255),1,b
 15497  001458                     i2l7991:
 15498                           
 15499                           ; BSR set to: 0
 15500                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
 15501  001458  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15502  00145C  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15503  001460  CFDE FFF6          	movff	postinc2,tblptrl
 15504  001464  CFDD FFF7          	movff	postdec2,tblptrh
 15505  001468                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15506  001468  6AF8               	clrf	tblptru,c
 15507  00146A                     	endif
 15508  00146A                     	if	0	;tblptru may be non-zero
 15509  00146A                     	endif
 15510  00146A  0008               	tblrd		*
 15511  00146C  50F5               	movf	tablat,w,c
 15512  00146E  0A2A               	xorlw	42
 15513  001470  A4D8               	btfss	status,2,c
 15514  001472  EF3D  F00A         	goto	i2u991_41
 15515  001476  EF3F  F00A         	goto	i2u991_40
 15516  00147A                     i2u991_41:
 15517  00147A  EF68  F00A         	goto	i2l7999
 15518  00147E                     i2u991_40:
 15519  00147E                     
 15520                           ; BSR set to: 0
 15521                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
 15522  00147E  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15523  001482  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15524  001486  2ADE               	incf	postinc2,f,c
 15525  001488  0E00               	movlw	0
 15526  00148A  22DD               	addwfc	postdec2,f,c
 15527                           
 15528                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
 15529  00148C  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 15530  001490  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 15531  001494  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 15532  001498  0E02               	movlw	2
 15533  00149A  26DE               	addwf	postinc2,f,c
 15534  00149C  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 15535  0014A0  0E00               	movlw	0
 15536  0014A2  22DD               	addwfc	postdec2,f,c
 15537  0014A4  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 15538  0014A8  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 15539  0014AC  CFDE F0B9          	movff	postinc2,_width
 15540  0014B0  CFDD F0BA          	movff	postdec2,_width+1
 15541  0014B4                     
 15542                           ; BSR set to: 0
 15543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
 15544  0014B4  BFBA               	btfsc	(_width+1)& (0+255),7,b
 15545  0014B6  EF61  F00A         	goto	i2u992_40
 15546  0014BA  EF5F  F00A         	goto	i2u992_41
 15547  0014BE                     i2u992_41:
 15548  0014BE  EFAD  F00A         	goto	i2l8009
 15549  0014C2                     i2u992_40:
 15550  0014C2                     
 15551                           ; BSR set to: 0
 15552                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
 15553  0014C2  81BD               	bsf	_flags& (0+255),0,b
 15554                           
 15555                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
 15556  0014C4  6DB9               	negf	_width& (0+255),b
 15557  0014C6  1FBA               	comf	(_width+1)& (0+255),f,b
 15558  0014C8  B0D8               	btfsc	status,0,c
 15559  0014CA  2BBA               	incf	(_width+1)& (0+255),f,b
 15560  0014CC  EFAD  F00A         	goto	i2l8009
 15561  0014D0                     i2l7999:
 15562                           
 15563                           ; BSR set to: 0
 15564                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
 15565  0014D0  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15566  0014D4  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15567  0014D8  CFDE F008          	movff	postinc2,i2atoi@s
 15568  0014DC  CFDD F009          	movff	postdec2,i2atoi@s+1
 15569  0014E0  EC26  F01F         	call	i2_atoi	;wreg free
 15570  0014E4  C008  F0B9         	movff	?i2_atoi,_width
 15571  0014E8  C009  F0BA         	movff	?i2_atoi+1,_width+1
 15572                           
 15573                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 15574  0014EC  EF7F  F00A         	goto	i2l8003
 15575  0014F0                     i2l8001:
 15576                           
 15577                           ; BSR set to: 0
 15578                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
 15579  0014F0  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15580  0014F4  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15581  0014F8  2ADE               	incf	postinc2,f,c
 15582  0014FA  0E00               	movlw	0
 15583  0014FC  22DD               	addwfc	postdec2,f,c
 15584  0014FE                     i2l8003:
 15585  0014FE  0ED0               	movlw	208
 15586  001500  6E4B               	movwf	??i2_vfpfcnvrt^0,c
 15587  001502  0EFF               	movlw	255
 15588  001504  6E4C               	movwf	(??i2_vfpfcnvrt+1)^0,c
 15589  001506  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15590  00150A  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15591  00150E  CFDE FFF6          	movff	postinc2,tblptrl
 15592  001512  CFDD FFF7          	movff	postdec2,tblptrh
 15593  001516                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15594  001516  6AF8               	clrf	tblptru,c
 15595  001518                     	endif
 15596  001518                     	if	0	;tblptru may be non-zero
 15597  001518                     	endif
 15598  001518  0008               	tblrd		*
 15599  00151A  50F5               	movf	tablat,w,c
 15600  00151C  6E4D               	movwf	(??i2_vfpfcnvrt+2)^0,c
 15601  00151E  6A4E               	clrf	(??i2_vfpfcnvrt+3)^0,c
 15602  001520  504B               	movf	??i2_vfpfcnvrt^0,w,c
 15603  001522  264D               	addwf	(??i2_vfpfcnvrt+2)^0,f,c
 15604  001524  504C               	movf	(??i2_vfpfcnvrt+1)^0,w,c
 15605  001526  224E               	addwfc	(??i2_vfpfcnvrt+3)^0,f,c
 15606  001528  504E               	movf	(??i2_vfpfcnvrt+3)^0,w,c
 15607  00152A  E10A               	bnz	i2u993_40
 15608  00152C  0E0A               	movlw	10
 15609  00152E  5C4D               	subwf	(??i2_vfpfcnvrt+2)^0,w,c
 15610  001530  A0D8               	btfss	status,0,c
 15611  001532  EF9D  F00A         	goto	i2u993_41
 15612  001536  EFA0  F00A         	goto	i2u993_40
 15613  00153A                     i2u993_41:
 15614  00153A  0E01               	movlw	1
 15615  00153C  EFA1  F00A         	goto	i2u994_40
 15616  001540                     i2u993_40:
 15617  001540  0E00               	movlw	0
 15618  001542                     i2u994_40:
 15619  001542  0100               	movlb	0	; () banked
 15620  001544  6F64               	movwf	i2_vfpfcnvrt$1723& (0+255),b
 15621  001546  6B65               	clrf	(i2_vfpfcnvrt$1723+1)& (0+255),b
 15622  001548                     
 15623                           ; BSR set to: 0
 15624  001548  5164               	movf	i2_vfpfcnvrt$1723& (0+255),w,b
 15625  00154A  1165               	iorwf	(i2_vfpfcnvrt$1723+1)& (0+255),w,b
 15626  00154C  A4D8               	btfss	status,2,c
 15627  00154E  EFAB  F00A         	goto	i2u995_41
 15628  001552  EFAD  F00A         	goto	i2u995_40
 15629  001556                     i2u995_41:
 15630  001556  EF78  F00A         	goto	i2l8001
 15631  00155A                     i2u995_40:
 15632  00155A                     i2l8009:
 15633                           
 15634                           ; BSR set to: 0
 15635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
 15636  00155A  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15637  00155E  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15638  001562  CFDE FFF6          	movff	postinc2,tblptrl
 15639  001566  CFDD FFF7          	movff	postdec2,tblptrh
 15640  00156A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15641  00156A  6AF8               	clrf	tblptru,c
 15642  00156C                     	endif
 15643  00156C                     	if	0	;tblptru may be non-zero
 15644  00156C                     	endif
 15645  00156C  0008               	tblrd		*
 15646  00156E  50F5               	movf	tablat,w,c
 15647  001570  0A2E               	xorlw	46
 15648  001572  A4D8               	btfss	status,2,c
 15649  001574  EFBE  F00A         	goto	i2u996_41
 15650  001578  EFC0  F00A         	goto	i2u996_40
 15651  00157C                     i2u996_41:
 15652  00157C  EF40  F00B         	goto	i2l8029
 15653  001580                     i2u996_40:
 15654  001580                     
 15655                           ; BSR set to: 0
 15656                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
 15657  001580  0E00               	movlw	0
 15658  001582  6FBC               	movwf	(_prec+1)& (0+255),b
 15659  001584  0E00               	movlw	0
 15660  001586  6FBB               	movwf	_prec& (0+255),b
 15661  001588                     
 15662                           ; BSR set to: 0
 15663                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
 15664  001588  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15665  00158C  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15666  001590  2ADE               	incf	postinc2,f,c
 15667  001592  0E00               	movlw	0
 15668  001594  22DD               	addwfc	postdec2,f,c
 15669  001596                     
 15670                           ; BSR set to: 0
 15671                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
 15672  001596  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15673  00159A  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15674  00159E  CFDE FFF6          	movff	postinc2,tblptrl
 15675  0015A2  CFDD FFF7          	movff	postdec2,tblptrh
 15676  0015A6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15677  0015A6  6AF8               	clrf	tblptru,c
 15678  0015A8                     	endif
 15679  0015A8                     	if	0	;tblptru may be non-zero
 15680  0015A8                     	endif
 15681  0015A8  0008               	tblrd		*
 15682  0015AA  50F5               	movf	tablat,w,c
 15683  0015AC  0A2A               	xorlw	42
 15684  0015AE  A4D8               	btfss	status,2,c
 15685  0015B0  EFDC  F00A         	goto	i2u997_41
 15686  0015B4  EFDE  F00A         	goto	i2u997_40
 15687  0015B8                     i2u997_41:
 15688  0015B8  EFFB  F00A         	goto	i2l8019
 15689  0015BC                     i2u997_40:
 15690  0015BC                     
 15691                           ; BSR set to: 0
 15692                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
 15693  0015BC  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15694  0015C0  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15695  0015C4  2ADE               	incf	postinc2,f,c
 15696  0015C6  0E00               	movlw	0
 15697  0015C8  22DD               	addwfc	postdec2,f,c
 15698                           
 15699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
 15700  0015CA  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 15701  0015CE  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 15702  0015D2  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 15703  0015D6  0E02               	movlw	2
 15704  0015D8  26DE               	addwf	postinc2,f,c
 15705  0015DA  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 15706  0015DE  0E00               	movlw	0
 15707  0015E0  22DD               	addwfc	postdec2,f,c
 15708  0015E2  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 15709  0015E6  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 15710  0015EA  CFDE F0BB          	movff	postinc2,_prec
 15711  0015EE  CFDD F0BC          	movff	postdec2,_prec+1
 15712                           
 15713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
 15714  0015F2  EF40  F00B         	goto	i2l8029
 15715  0015F6                     i2l8019:
 15716                           
 15717                           ; BSR set to: 0
 15718                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
 15719  0015F6  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15720  0015FA  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15721  0015FE  CFDE F008          	movff	postinc2,i2atoi@s
 15722  001602  CFDD F009          	movff	postdec2,i2atoi@s+1
 15723  001606  EC26  F01F         	call	i2_atoi	;wreg free
 15724  00160A  C008  F0BB         	movff	?i2_atoi,_prec
 15725  00160E  C009  F0BC         	movff	?i2_atoi+1,_prec+1
 15726                           
 15727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 15728  001612  EF12  F00B         	goto	i2l8023
 15729  001616                     i2l8021:
 15730                           
 15731                           ; BSR set to: 0
 15732                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
 15733  001616  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15734  00161A  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15735  00161E  2ADE               	incf	postinc2,f,c
 15736  001620  0E00               	movlw	0
 15737  001622  22DD               	addwfc	postdec2,f,c
 15738  001624                     i2l8023:
 15739  001624  0ED0               	movlw	208
 15740  001626  6E4B               	movwf	??i2_vfpfcnvrt^0,c
 15741  001628  0EFF               	movlw	255
 15742  00162A  6E4C               	movwf	(??i2_vfpfcnvrt+1)^0,c
 15743  00162C  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15744  001630  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15745  001634  CFDE FFF6          	movff	postinc2,tblptrl
 15746  001638  CFDD FFF7          	movff	postdec2,tblptrh
 15747  00163C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15748  00163C  6AF8               	clrf	tblptru,c
 15749  00163E                     	endif
 15750  00163E                     	if	0	;tblptru may be non-zero
 15751  00163E                     	endif
 15752  00163E  0008               	tblrd		*
 15753  001640  50F5               	movf	tablat,w,c
 15754  001642  6E4D               	movwf	(??i2_vfpfcnvrt+2)^0,c
 15755  001644  6A4E               	clrf	(??i2_vfpfcnvrt+3)^0,c
 15756  001646  504B               	movf	??i2_vfpfcnvrt^0,w,c
 15757  001648  264D               	addwf	(??i2_vfpfcnvrt+2)^0,f,c
 15758  00164A  504C               	movf	(??i2_vfpfcnvrt+1)^0,w,c
 15759  00164C  224E               	addwfc	(??i2_vfpfcnvrt+3)^0,f,c
 15760  00164E  504E               	movf	(??i2_vfpfcnvrt+3)^0,w,c
 15761  001650  E10A               	bnz	i2u998_40
 15762  001652  0E0A               	movlw	10
 15763  001654  5C4D               	subwf	(??i2_vfpfcnvrt+2)^0,w,c
 15764  001656  A0D8               	btfss	status,0,c
 15765  001658  EF30  F00B         	goto	i2u998_41
 15766  00165C  EF33  F00B         	goto	i2u998_40
 15767  001660                     i2u998_41:
 15768  001660  0E01               	movlw	1
 15769  001662  EF34  F00B         	goto	i2u999_40
 15770  001666                     i2u998_40:
 15771  001666  0E00               	movlw	0
 15772  001668                     i2u999_40:
 15773  001668  0100               	movlb	0	; () banked
 15774  00166A  6F66               	movwf	i2_vfpfcnvrt$1724& (0+255),b
 15775  00166C  6B67               	clrf	(i2_vfpfcnvrt$1724+1)& (0+255),b
 15776  00166E                     
 15777                           ; BSR set to: 0
 15778  00166E  5166               	movf	i2_vfpfcnvrt$1724& (0+255),w,b
 15779  001670  1167               	iorwf	(i2_vfpfcnvrt$1724+1)& (0+255),w,b
 15780  001672  A4D8               	btfss	status,2,c
 15781  001674  EF3E  F00B         	goto	i2u1000_41
 15782  001678  EF40  F00B         	goto	i2u1000_40
 15783  00167C                     i2u1000_41:
 15784  00167C  EF0B  F00B         	goto	i2l8021
 15785  001680                     i2u1000_40:
 15786  001680                     i2l8029:
 15787                           
 15788                           ; BSR set to: 0
 15789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
 15790  001680  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15791  001684  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15792  001688  CFDE FFF6          	movff	postinc2,tblptrl
 15793  00168C  CFDD FFF7          	movff	postdec2,tblptrh
 15794  001690                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15795  001690  6AF8               	clrf	tblptru,c
 15796  001692                     	endif
 15797  001692                     	if	0	;tblptru may be non-zero
 15798  001692                     	endif
 15799  001692  0008               	tblrd		*
 15800  001694  50F5               	movf	tablat,w,c
 15801  001696  0A63               	xorlw	99
 15802  001698  A4D8               	btfss	status,2,c
 15803  00169A  EF51  F00B         	goto	i2u1001_41
 15804  00169E  EF53  F00B         	goto	i2u1001_40
 15805  0016A2                     i2u1001_41:
 15806  0016A2  EF7A  F00B         	goto	i2l8037
 15807  0016A6                     i2u1001_40:
 15808  0016A6                     
 15809                           ; BSR set to: 0
 15810                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
 15811  0016A6  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15812  0016AA  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15813  0016AE  2ADE               	incf	postinc2,f,c
 15814  0016B0  0E00               	movlw	0
 15815  0016B2  22DD               	addwfc	postdec2,f,c
 15816                           
 15817                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 15818  0016B4  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 15819  0016B8  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 15820  0016BC  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 15821  0016C0  0E02               	movlw	2
 15822  0016C2  26DE               	addwf	postinc2,f,c
 15823  0016C4  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 15824  0016C8  0E00               	movlw	0
 15825  0016CA  22DD               	addwfc	postdec2,f,c
 15826  0016CC  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 15827  0016D0  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 15828  0016D4  50DF               	movf	indf2,w,c
 15829  0016D6  6F72               	movwf	i2vfpfcnvrt@c& (0+255),b
 15830  0016D8                     
 15831                           ; BSR set to: 0
 15832                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
 15833  0016D8  C045  F01E         	movff	i2vfpfcnvrt@fp,i2ctoa@fp
 15834  0016DC  C046  F01F         	movff	i2vfpfcnvrt@fp+1,i2ctoa@fp+1
 15835  0016E0  C072  F020         	movff	i2vfpfcnvrt@c,i2ctoa@c
 15836  0016E4  EC9B  F02F         	call	i2_ctoa	;wreg free
 15837  0016E8  C01E  F045         	movff	?i2_ctoa,?i2_vfpfcnvrt
 15838  0016EC  C01F  F046         	movff	?i2_ctoa+1,?i2_vfpfcnvrt+1
 15839  0016F0  EFE4  F012         	goto	i2l799
 15840  0016F4                     i2l8037:
 15841                           
 15842                           ; BSR set to: 0
 15843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
 15844  0016F4  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15845  0016F8  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15846  0016FC  CFDE F001          	movff	postinc2,i2strncmp@_l
 15847  001700  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 15848  001704  0ED1               	movlw	low STR_9
 15849  001706  6E03               	movwf	i2strncmp@_r^0,c
 15850  001708  0EFF               	movlw	high STR_9
 15851  00170A  6E04               	movwf	(i2strncmp@_r+1)^0,c
 15852  00170C  0E00               	movlw	0
 15853  00170E  6E06               	movwf	(i2strncmp@n+1)^0,c
 15854  001710  0E03               	movlw	3
 15855  001712  6E05               	movwf	i2strncmp@n^0,c
 15856  001714  EC6B  F02A         	call	i2_strncmp	;wreg free
 15857  001718  5001               	movf	?i2_strncmp^0,w,c
 15858  00171A  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 15859  00171C  B4D8               	btfsc	status,2,c
 15860  00171E  EF93  F00B         	goto	i2u1002_41
 15861  001722  EF95  F00B         	goto	i2u1002_40
 15862  001726                     i2u1002_41:
 15863  001726  EFB0  F00B         	goto	i2l8041
 15864  00172A                     i2u1002_40:
 15865  00172A  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15866  00172E  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15867  001732  CFDE F001          	movff	postinc2,i2strncmp@_l
 15868  001736  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 15869  00173A  0ED5               	movlw	low STR_13
 15870  00173C  6E03               	movwf	i2strncmp@_r^0,c
 15871  00173E  0EFF               	movlw	high STR_13
 15872  001740  6E04               	movwf	(i2strncmp@_r+1)^0,c
 15873  001742  0E00               	movlw	0
 15874  001744  6E06               	movwf	(i2strncmp@n+1)^0,c
 15875  001746  0E03               	movlw	3
 15876  001748  6E05               	movwf	i2strncmp@n^0,c
 15877  00174A  EC6B  F02A         	call	i2_strncmp	;wreg free
 15878  00174E  5001               	movf	?i2_strncmp^0,w,c
 15879  001750  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 15880  001752  A4D8               	btfss	status,2,c
 15881  001754  EFAE  F00B         	goto	i2u1003_41
 15882  001758  EFB0  F00B         	goto	i2u1003_40
 15883  00175C                     i2u1003_41:
 15884  00175C  EFF1  F00B         	goto	i2l8047
 15885  001760                     i2u1003_40:
 15886  001760                     i2l8041:
 15887                           
 15888                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
 15889  001760  0E03               	movlw	3
 15890  001762  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15891  001766  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15892  00176A  26DE               	addwf	postinc2,f,c
 15893  00176C  0E00               	movlw	0
 15894  00176E  22DD               	addwfc	postdec2,f,c
 15895                           
 15896                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 15897  001770  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 15898  001774  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 15899  001778  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 15900  00177C  0E02               	movlw	2
 15901  00177E  26DE               	addwf	postinc2,f,c
 15902  001780  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 15903  001784  0E00               	movlw	0
 15904  001786  22DD               	addwfc	postdec2,f,c
 15905  001788  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 15906  00178C  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 15907  001790  50DF               	movf	indf2,w,c
 15908  001792  0100               	movlb	0	; () banked
 15909  001794  6F68               	movwf	i2vfpfcnvrt@ll& (0+255),b
 15910  001796  0E00               	movlw	0
 15911  001798  BF68               	btfsc	i2vfpfcnvrt@ll& (0+255),7,b
 15912  00179A  0EFF               	movlw	-1
 15913  00179C  6F69               	movwf	(i2vfpfcnvrt@ll+1)& (0+255),b
 15914  00179E  6F6A               	movwf	(i2vfpfcnvrt@ll+2)& (0+255),b
 15915  0017A0  6F6B               	movwf	(i2vfpfcnvrt@ll+3)& (0+255),b
 15916  0017A2  6F6C               	movwf	(i2vfpfcnvrt@ll+4)& (0+255),b
 15917  0017A4  6F6D               	movwf	(i2vfpfcnvrt@ll+5)& (0+255),b
 15918  0017A6  6F6E               	movwf	(i2vfpfcnvrt@ll+6)& (0+255),b
 15919  0017A8  6F6F               	movwf	(i2vfpfcnvrt@ll+7)& (0+255),b
 15920  0017AA                     i2l8043:
 15921                           
 15922                           ; BSR set to: 0
 15923                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
 15924  0017AA  C045  F01E         	movff	i2vfpfcnvrt@fp,i2dtoa@fp
 15925  0017AE  C046  F01F         	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
 15926  0017B2  C068  F020         	movff	i2vfpfcnvrt@ll,i2dtoa@d
 15927  0017B6  C069  F021         	movff	i2vfpfcnvrt@ll+1,i2dtoa@d+1
 15928  0017BA  C06A  F022         	movff	i2vfpfcnvrt@ll+2,i2dtoa@d+2
 15929  0017BE  C06B  F023         	movff	i2vfpfcnvrt@ll+3,i2dtoa@d+3
 15930  0017C2  C06C  F024         	movff	i2vfpfcnvrt@ll+4,i2dtoa@d+4
 15931  0017C6  C06D  F025         	movff	i2vfpfcnvrt@ll+5,i2dtoa@d+5
 15932  0017CA  C06E  F026         	movff	i2vfpfcnvrt@ll+6,i2dtoa@d+6
 15933  0017CE  C06F  F027         	movff	i2vfpfcnvrt@ll+7,i2dtoa@d+7
 15934  0017D2  ECFC  F017         	call	i2_dtoa	;wreg free
 15935  0017D6  C01E  F045         	movff	?i2_dtoa,?i2_vfpfcnvrt
 15936  0017DA  C01F  F046         	movff	?i2_dtoa+1,?i2_vfpfcnvrt+1
 15937  0017DE  EFE4  F012         	goto	i2l799
 15938  0017E2                     i2l8047:
 15939                           
 15940                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
 15941  0017E2  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15942  0017E6  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15943  0017EA  CFDE F001          	movff	postinc2,i2strncmp@_l
 15944  0017EE  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 15945  0017F2  0ED2               	movlw	low (STR_9+1)
 15946  0017F4  6E03               	movwf	i2strncmp@_r^0,c
 15947  0017F6  0EFF               	movlw	high (STR_9+1)
 15948  0017F8  6E04               	movwf	(i2strncmp@_r+1)^0,c
 15949  0017FA  0E00               	movlw	0
 15950  0017FC  6E06               	movwf	(i2strncmp@n+1)^0,c
 15951  0017FE  0E02               	movlw	2
 15952  001800  6E05               	movwf	i2strncmp@n^0,c
 15953  001802  EC6B  F02A         	call	i2_strncmp	;wreg free
 15954  001806  5001               	movf	?i2_strncmp^0,w,c
 15955  001808  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 15956  00180A  B4D8               	btfsc	status,2,c
 15957  00180C  EF0A  F00C         	goto	i2u1004_41
 15958  001810  EF0C  F00C         	goto	i2u1004_40
 15959  001814                     i2u1004_41:
 15960  001814  EF27  F00C         	goto	i2l8051
 15961  001818                     i2u1004_40:
 15962  001818  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15963  00181C  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15964  001820  CFDE F001          	movff	postinc2,i2strncmp@_l
 15965  001824  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 15966  001828  0ED6               	movlw	low (STR_13+1)
 15967  00182A  6E03               	movwf	i2strncmp@_r^0,c
 15968  00182C  0EFF               	movlw	high (STR_13+1)
 15969  00182E  6E04               	movwf	(i2strncmp@_r+1)^0,c
 15970  001830  0E00               	movlw	0
 15971  001832  6E06               	movwf	(i2strncmp@n+1)^0,c
 15972  001834  0E02               	movlw	2
 15973  001836  6E05               	movwf	i2strncmp@n^0,c
 15974  001838  EC6B  F02A         	call	i2_strncmp	;wreg free
 15975  00183C  5001               	movf	?i2_strncmp^0,w,c
 15976  00183E  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 15977  001840  A4D8               	btfss	status,2,c
 15978  001842  EF25  F00C         	goto	i2u1005_41
 15979  001846  EF27  F00C         	goto	i2u1005_40
 15980  00184A                     i2u1005_41:
 15981  00184A  EF4F  F00C         	goto	i2l8057
 15982  00184E                     i2u1005_40:
 15983  00184E                     i2l8051:
 15984                           
 15985                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
 15986  00184E  0E02               	movlw	2
 15987  001850  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15988  001854  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15989  001858  26DE               	addwf	postinc2,f,c
 15990  00185A  0E00               	movlw	0
 15991  00185C  22DD               	addwfc	postdec2,f,c
 15992                           
 15993                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
 15994  00185E  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 15995  001862  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 15996  001866  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 15997  00186A  0E02               	movlw	2
 15998  00186C  26DE               	addwf	postinc2,f,c
 15999  00186E  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16000  001872  0E00               	movlw	0
 16001  001874  22DD               	addwfc	postdec2,f,c
 16002  001876  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16003  00187A  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16004  00187E  CFDE F068          	movff	postinc2,i2vfpfcnvrt@ll
 16005  001882  CFDD F069          	movff	postdec2,i2vfpfcnvrt@ll+1
 16006  001886  0100               	movlb	0	; () banked
 16007  001888  0E00               	movlw	0
 16008  00188A  BF69               	btfsc	(i2vfpfcnvrt@ll+1)& (0+255),7,b
 16009  00188C  0EFF               	movlw	-1
 16010  00188E  6F6A               	movwf	(i2vfpfcnvrt@ll+2)& (0+255),b
 16011  001890  6F6B               	movwf	(i2vfpfcnvrt@ll+3)& (0+255),b
 16012  001892  6F6C               	movwf	(i2vfpfcnvrt@ll+4)& (0+255),b
 16013  001894  6F6D               	movwf	(i2vfpfcnvrt@ll+5)& (0+255),b
 16014  001896  6F6E               	movwf	(i2vfpfcnvrt@ll+6)& (0+255),b
 16015  001898  6F6F               	movwf	(i2vfpfcnvrt@ll+7)& (0+255),b
 16016  00189A  EFD5  F00B         	goto	i2l8043
 16017  00189E                     i2l8057:
 16018                           
 16019                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 16020  00189E  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16021  0018A2  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16022  0018A6  CFDE FFF6          	movff	postinc2,tblptrl
 16023  0018AA  CFDD FFF7          	movff	postdec2,tblptrh
 16024  0018AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16025  0018AE  6AF8               	clrf	tblptru,c
 16026  0018B0                     	endif
 16027  0018B0                     	if	0	;tblptru may be non-zero
 16028  0018B0                     	endif
 16029  0018B0  0008               	tblrd		*
 16030  0018B2  50F5               	movf	tablat,w,c
 16031  0018B4  0A64               	xorlw	100
 16032  0018B6  B4D8               	btfsc	status,2,c
 16033  0018B8  EF60  F00C         	goto	i2u1006_41
 16034  0018BC  EF62  F00C         	goto	i2u1006_40
 16035  0018C0                     i2u1006_41:
 16036  0018C0  EF75  F00C         	goto	i2l8061
 16037  0018C4                     i2u1006_40:
 16038  0018C4  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16039  0018C8  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16040  0018CC  CFDE FFF6          	movff	postinc2,tblptrl
 16041  0018D0  CFDD FFF7          	movff	postdec2,tblptrh
 16042  0018D4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16043  0018D4  6AF8               	clrf	tblptru,c
 16044  0018D6                     	endif
 16045  0018D6                     	if	0	;tblptru may be non-zero
 16046  0018D6                     	endif
 16047  0018D6  0008               	tblrd		*
 16048  0018D8  50F5               	movf	tablat,w,c
 16049  0018DA  0A69               	xorlw	105
 16050  0018DC  A4D8               	btfss	status,2,c
 16051  0018DE  EF73  F00C         	goto	i2u1007_41
 16052  0018E2  EF75  F00C         	goto	i2u1007_40
 16053  0018E6                     i2u1007_41:
 16054  0018E6  EF9C  F00C         	goto	i2l8067
 16055  0018EA                     i2u1007_40:
 16056  0018EA                     i2l8061:
 16057                           
 16058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 16059  0018EA  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16060  0018EE  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16061  0018F2  2ADE               	incf	postinc2,f,c
 16062  0018F4  0E00               	movlw	0
 16063  0018F6  22DD               	addwfc	postdec2,f,c
 16064                           
 16065                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 16066  0018F8  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16067  0018FC  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16068  001900  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16069  001904  0E02               	movlw	2
 16070  001906  26DE               	addwf	postinc2,f,c
 16071  001908  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16072  00190C  0E00               	movlw	0
 16073  00190E  22DD               	addwfc	postdec2,f,c
 16074  001910  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16075  001914  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16076  001918  CFDE F068          	movff	postinc2,i2vfpfcnvrt@ll
 16077  00191C  CFDD F069          	movff	postdec2,i2vfpfcnvrt@ll+1
 16078  001920  0100               	movlb	0	; () banked
 16079  001922  0E00               	movlw	0
 16080  001924  BF69               	btfsc	(i2vfpfcnvrt@ll+1)& (0+255),7,b
 16081  001926  0EFF               	movlw	-1
 16082  001928  6F6A               	movwf	(i2vfpfcnvrt@ll+2)& (0+255),b
 16083  00192A  6F6B               	movwf	(i2vfpfcnvrt@ll+3)& (0+255),b
 16084  00192C  6F6C               	movwf	(i2vfpfcnvrt@ll+4)& (0+255),b
 16085  00192E  6F6D               	movwf	(i2vfpfcnvrt@ll+5)& (0+255),b
 16086  001930  6F6E               	movwf	(i2vfpfcnvrt@ll+6)& (0+255),b
 16087  001932  6F6F               	movwf	(i2vfpfcnvrt@ll+7)& (0+255),b
 16088  001934  EFD5  F00B         	goto	i2l8043
 16089  001938                     i2l8067:
 16090                           
 16091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
 16092  001938  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16093  00193C  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16094  001940  CFDE F001          	movff	postinc2,i2strncmp@_l
 16095  001944  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16096  001948  0EEC               	movlw	low STR_27
 16097  00194A  6E03               	movwf	i2strncmp@_r^0,c
 16098  00194C  0EFF               	movlw	high STR_27
 16099  00194E  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16100  001950  0E00               	movlw	0
 16101  001952  6E06               	movwf	(i2strncmp@n+1)^0,c
 16102  001954  0E02               	movlw	2
 16103  001956  6E05               	movwf	i2strncmp@n^0,c
 16104  001958  EC6B  F02A         	call	i2_strncmp	;wreg free
 16105  00195C  5001               	movf	?i2_strncmp^0,w,c
 16106  00195E  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16107  001960  B4D8               	btfsc	status,2,c
 16108  001962  EFB5  F00C         	goto	i2u1008_41
 16109  001966  EFB7  F00C         	goto	i2u1008_40
 16110  00196A                     i2u1008_41:
 16111  00196A  EFD2  F00C         	goto	i2l8071
 16112  00196E                     i2u1008_40:
 16113  00196E  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16114  001972  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16115  001976  CFDE F001          	movff	postinc2,i2strncmp@_l
 16116  00197A  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16117  00197E  0EEF               	movlw	low STR_31
 16118  001980  6E03               	movwf	i2strncmp@_r^0,c
 16119  001982  0EFF               	movlw	high STR_31
 16120  001984  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16121  001986  0E00               	movlw	0
 16122  001988  6E06               	movwf	(i2strncmp@n+1)^0,c
 16123  00198A  0E02               	movlw	2
 16124  00198C  6E05               	movwf	i2strncmp@n^0,c
 16125  00198E  EC6B  F02A         	call	i2_strncmp	;wreg free
 16126  001992  5001               	movf	?i2_strncmp^0,w,c
 16127  001994  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16128  001996  A4D8               	btfss	status,2,c
 16129  001998  EFD0  F00C         	goto	i2u1009_41
 16130  00199C  EFD2  F00C         	goto	i2u1009_40
 16131  0019A0                     i2u1009_41:
 16132  0019A0  EFFB  F00C         	goto	i2l8077
 16133  0019A4                     i2u1009_40:
 16134  0019A4                     i2l8071:
 16135                           
 16136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
 16137  0019A4  0E02               	movlw	2
 16138  0019A6  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16139  0019AA  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16140  0019AE  26DE               	addwf	postinc2,f,c
 16141  0019B0  0E00               	movlw	0
 16142  0019B2  22DD               	addwfc	postdec2,f,c
 16143                           
 16144                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 16145  0019B4  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16146  0019B8  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16147  0019BC  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16148  0019C0  0E02               	movlw	2
 16149  0019C2  26DE               	addwf	postinc2,f,c
 16150  0019C4  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16151  0019C8  0E00               	movlw	0
 16152  0019CA  22DD               	addwfc	postdec2,f,c
 16153  0019CC  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16154  0019D0  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16155  0019D4  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 16156  0019D8  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 16157  0019DC  C04D  F068         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@ll
 16158  0019E0  C04E  F069         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@ll+1
 16159  0019E4  0100               	movlb	0	; () banked
 16160  0019E6  6B6A               	clrf	(i2vfpfcnvrt@ll+2)& (0+255),b
 16161  0019E8  6B6B               	clrf	(i2vfpfcnvrt@ll+3)& (0+255),b
 16162  0019EA  6B6C               	clrf	(i2vfpfcnvrt@ll+4)& (0+255),b
 16163  0019EC  6B6D               	clrf	(i2vfpfcnvrt@ll+5)& (0+255),b
 16164  0019EE  6B6E               	clrf	(i2vfpfcnvrt@ll+6)& (0+255),b
 16165  0019F0  6B6F               	clrf	(i2vfpfcnvrt@ll+7)& (0+255),b
 16166  0019F2  EFD5  F00B         	goto	i2l8043
 16167  0019F6                     i2l8077:
 16168                           
 16169                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
 16170  0019F6  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16171  0019FA  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16172  0019FE  CFDE F001          	movff	postinc2,i2strncmp@_l
 16173  001A02  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16174  001A06  0EDD               	movlw	low STR_36
 16175  001A08  6E03               	movwf	i2strncmp@_r^0,c
 16176  001A0A  0EFF               	movlw	high STR_36
 16177  001A0C  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16178  001A0E  0E00               	movlw	0
 16179  001A10  6E06               	movwf	(i2strncmp@n+1)^0,c
 16180  001A12  0E03               	movlw	3
 16181  001A14  6E05               	movwf	i2strncmp@n^0,c
 16182  001A16  EC6B  F02A         	call	i2_strncmp	;wreg free
 16183  001A1A  5001               	movf	?i2_strncmp^0,w,c
 16184  001A1C  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16185  001A1E  A4D8               	btfss	status,2,c
 16186  001A20  EF14  F00D         	goto	i2u1010_41
 16187  001A24  EF16  F00D         	goto	i2u1010_40
 16188  001A28                     i2u1010_41:
 16189  001A28  EF56  F00D         	goto	i2l8085
 16190  001A2C                     i2u1010_40:
 16191  001A2C                     
 16192                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
 16193  001A2C  0E03               	movlw	3
 16194  001A2E  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16195  001A32  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16196  001A36  26DE               	addwf	postinc2,f,c
 16197  001A38  0E00               	movlw	0
 16198  001A3A  22DD               	addwfc	postdec2,f,c
 16199                           
 16200                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 16201  001A3C  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16202  001A40  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16203  001A44  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16204  001A48  0E02               	movlw	2
 16205  001A4A  26DE               	addwf	postinc2,f,c
 16206  001A4C  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16207  001A50  0E00               	movlw	0
 16208  001A52  22DD               	addwfc	postdec2,f,c
 16209  001A54  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16210  001A58  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16211  001A5C  50DF               	movf	indf2,w,c
 16212  001A5E  6E4D               	movwf	(??i2_vfpfcnvrt+2)^0,c
 16213  001A60  504D               	movf	(??i2_vfpfcnvrt+2)^0,w,c
 16214  001A62  0100               	movlb	0	; () banked
 16215  001A64  6F73               	movwf	i2vfpfcnvrt@llu& (0+255),b
 16216  001A66  6B74               	clrf	(i2vfpfcnvrt@llu+1)& (0+255),b
 16217  001A68  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 16218  001A6A  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 16219  001A6C  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 16220  001A6E  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 16221  001A70  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 16222  001A72  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 16223  001A74                     i2l8081:
 16224                           
 16225                           ; BSR set to: 0
 16226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
 16227  001A74  C045  F01E         	movff	i2vfpfcnvrt@fp,i2otoa@fp
 16228  001A78  C046  F01F         	movff	i2vfpfcnvrt@fp+1,i2otoa@fp+1
 16229  001A7C  C073  F020         	movff	i2vfpfcnvrt@llu,i2otoa@d
 16230  001A80  C074  F021         	movff	i2vfpfcnvrt@llu+1,i2otoa@d+1
 16231  001A84  C075  F022         	movff	i2vfpfcnvrt@llu+2,i2otoa@d+2
 16232  001A88  C076  F023         	movff	i2vfpfcnvrt@llu+3,i2otoa@d+3
 16233  001A8C  C077  F024         	movff	i2vfpfcnvrt@llu+4,i2otoa@d+4
 16234  001A90  C078  F025         	movff	i2vfpfcnvrt@llu+5,i2otoa@d+5
 16235  001A94  C079  F026         	movff	i2vfpfcnvrt@llu+6,i2otoa@d+6
 16236  001A98  C07A  F027         	movff	i2vfpfcnvrt@llu+7,i2otoa@d+7
 16237  001A9C  EC26  F021         	call	i2_otoa	;wreg free
 16238  001AA0  C01E  F045         	movff	?i2_otoa,?i2_vfpfcnvrt
 16239  001AA4  C01F  F046         	movff	?i2_otoa+1,?i2_vfpfcnvrt+1
 16240  001AA8  EFE4  F012         	goto	i2l799
 16241  001AAC                     i2l8085:
 16242                           
 16243                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
 16244  001AAC  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16245  001AB0  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16246  001AB4  CFDE F001          	movff	postinc2,i2strncmp@_l
 16247  001AB8  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16248  001ABC  0EDE               	movlw	low (STR_36+1)
 16249  001ABE  6E03               	movwf	i2strncmp@_r^0,c
 16250  001AC0  0EFF               	movlw	high (STR_36+1)
 16251  001AC2  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16252  001AC4  0E00               	movlw	0
 16253  001AC6  6E06               	movwf	(i2strncmp@n+1)^0,c
 16254  001AC8  0E02               	movlw	2
 16255  001ACA  6E05               	movwf	i2strncmp@n^0,c
 16256  001ACC  EC6B  F02A         	call	i2_strncmp	;wreg free
 16257  001AD0  5001               	movf	?i2_strncmp^0,w,c
 16258  001AD2  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16259  001AD4  A4D8               	btfss	status,2,c
 16260  001AD6  EF6F  F00D         	goto	i2u1011_41
 16261  001ADA  EF71  F00D         	goto	i2u1011_40
 16262  001ADE                     i2u1011_41:
 16263  001ADE  EF9A  F00D         	goto	i2l8093
 16264  001AE2                     i2u1011_40:
 16265  001AE2                     
 16266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
 16267  001AE2  0E02               	movlw	2
 16268  001AE4  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16269  001AE8  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16270  001AEC  26DE               	addwf	postinc2,f,c
 16271  001AEE  0E00               	movlw	0
 16272  001AF0  22DD               	addwfc	postdec2,f,c
 16273                           
 16274                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 16275  001AF2  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16276  001AF6  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16277  001AFA  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16278  001AFE  0E02               	movlw	2
 16279  001B00  26DE               	addwf	postinc2,f,c
 16280  001B02  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16281  001B06  0E00               	movlw	0
 16282  001B08  22DD               	addwfc	postdec2,f,c
 16283  001B0A  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16284  001B0E  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16285  001B12  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 16286  001B16  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 16287  001B1A  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 16288  001B1E  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 16289  001B22  0100               	movlb	0	; () banked
 16290  001B24  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 16291  001B26  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 16292  001B28  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 16293  001B2A  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 16294  001B2C  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 16295  001B2E  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 16296  001B30  EF3A  F00D         	goto	i2l8081
 16297  001B34                     i2l8093:
 16298                           
 16299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
 16300  001B34  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16301  001B38  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16302  001B3C  CFDE FFF6          	movff	postinc2,tblptrl
 16303  001B40  CFDD FFF7          	movff	postdec2,tblptrh
 16304  001B44                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16305  001B44  6AF8               	clrf	tblptru,c
 16306  001B46                     	endif
 16307  001B46                     	if	0	;tblptru may be non-zero
 16308  001B46                     	endif
 16309  001B46  0008               	tblrd		*
 16310  001B48  50F5               	movf	tablat,w,c
 16311  001B4A  0A6F               	xorlw	111
 16312  001B4C  A4D8               	btfss	status,2,c
 16313  001B4E  EFAB  F00D         	goto	i2u1012_41
 16314  001B52  EFAD  F00D         	goto	i2u1012_40
 16315  001B56                     i2u1012_41:
 16316  001B56  EFD5  F00D         	goto	i2l8101
 16317  001B5A                     i2u1012_40:
 16318  001B5A                     
 16319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
 16320  001B5A  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16321  001B5E  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16322  001B62  2ADE               	incf	postinc2,f,c
 16323  001B64  0E00               	movlw	0
 16324  001B66  22DD               	addwfc	postdec2,f,c
 16325                           
 16326                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
 16327  001B68  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16328  001B6C  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16329  001B70  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16330  001B74  0E02               	movlw	2
 16331  001B76  26DE               	addwf	postinc2,f,c
 16332  001B78  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16333  001B7C  0E00               	movlw	0
 16334  001B7E  22DD               	addwfc	postdec2,f,c
 16335  001B80  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16336  001B84  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16337  001B88  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 16338  001B8C  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 16339  001B90  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 16340  001B94  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 16341  001B98  0100               	movlb	0	; () banked
 16342  001B9A  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 16343  001B9C  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 16344  001B9E  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 16345  001BA0  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 16346  001BA2  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 16347  001BA4  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 16348  001BA6  EF3A  F00D         	goto	i2l8081
 16349  001BAA                     i2l8101:
 16350                           
 16351                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
 16352  001BAA  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16353  001BAE  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16354  001BB2  CFDE F001          	movff	postinc2,i2strncmp@_l
 16355  001BB6  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16356  001BBA  0EF5               	movlw	low STR_46
 16357  001BBC  6E03               	movwf	i2strncmp@_r^0,c
 16358  001BBE  0EFF               	movlw	high STR_46
 16359  001BC0  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16360  001BC2  0E00               	movlw	0
 16361  001BC4  6E06               	movwf	(i2strncmp@n+1)^0,c
 16362  001BC6  0E02               	movlw	2
 16363  001BC8  6E05               	movwf	i2strncmp@n^0,c
 16364  001BCA  EC6B  F02A         	call	i2_strncmp	;wreg free
 16365  001BCE  5001               	movf	?i2_strncmp^0,w,c
 16366  001BD0  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16367  001BD2  A4D8               	btfss	status,2,c
 16368  001BD4  EFEE  F00D         	goto	i2u1013_41
 16369  001BD8  EFF0  F00D         	goto	i2u1013_40
 16370  001BDC                     i2u1013_41:
 16371  001BDC  EF19  F00E         	goto	i2l8109
 16372  001BE0                     i2u1013_40:
 16373  001BE0                     
 16374                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
 16375  001BE0  0E02               	movlw	2
 16376  001BE2  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16377  001BE6  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16378  001BEA  26DE               	addwf	postinc2,f,c
 16379  001BEC  0E00               	movlw	0
 16380  001BEE  22DD               	addwfc	postdec2,f,c
 16381                           
 16382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 16383  001BF0  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16384  001BF4  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16385  001BF8  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16386  001BFC  0E02               	movlw	2
 16387  001BFE  26DE               	addwf	postinc2,f,c
 16388  001C00  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16389  001C04  0E00               	movlw	0
 16390  001C06  22DD               	addwfc	postdec2,f,c
 16391  001C08  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16392  001C0C  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16393  001C10  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 16394  001C14  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 16395  001C18  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 16396  001C1C  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 16397  001C20  0100               	movlb	0	; () banked
 16398  001C22  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 16399  001C24  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 16400  001C26  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 16401  001C28  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 16402  001C2A  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 16403  001C2C  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 16404  001C2E  EF3A  F00D         	goto	i2l8081
 16405  001C32                     i2l8109:
 16406                           
 16407                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
 16408  001C32  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16409  001C36  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16410  001C3A  CFDE F001          	movff	postinc2,i2strncmp@_l
 16411  001C3E  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16412  001C42  0ED9               	movlw	low STR_51
 16413  001C44  6E03               	movwf	i2strncmp@_r^0,c
 16414  001C46  0EFF               	movlw	high STR_51
 16415  001C48  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16416  001C4A  0E00               	movlw	0
 16417  001C4C  6E06               	movwf	(i2strncmp@n+1)^0,c
 16418  001C4E  0E03               	movlw	3
 16419  001C50  6E05               	movwf	i2strncmp@n^0,c
 16420  001C52  EC6B  F02A         	call	i2_strncmp	;wreg free
 16421  001C56  5001               	movf	?i2_strncmp^0,w,c
 16422  001C58  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16423  001C5A  A4D8               	btfss	status,2,c
 16424  001C5C  EF32  F00E         	goto	i2u1014_41
 16425  001C60  EF34  F00E         	goto	i2u1014_40
 16426  001C64                     i2u1014_41:
 16427  001C64  EF5C  F00E         	goto	i2l8119
 16428  001C68                     i2u1014_40:
 16429  001C68                     
 16430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
 16431  001C68  0E03               	movlw	3
 16432  001C6A  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16433  001C6E  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16434  001C72  26DE               	addwf	postinc2,f,c
 16435  001C74  0E00               	movlw	0
 16436  001C76  22DD               	addwfc	postdec2,f,c
 16437                           
 16438                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
 16439  001C78  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16440  001C7C  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16441  001C80  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16442  001C84  0E02               	movlw	2
 16443  001C86  26DE               	addwf	postinc2,f,c
 16444  001C88  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16445  001C8C  0E00               	movlw	0
 16446  001C8E  22DD               	addwfc	postdec2,f,c
 16447  001C90  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16448  001C94  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16449  001C98  CFDE F070          	movff	postinc2,i2vfpfcnvrt@vp
 16450  001C9C  CFDD F071          	movff	postdec2,i2vfpfcnvrt@vp+1
 16451  001CA0                     
 16452                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
 16453  001CA0  C070  FFD9         	movff	i2vfpfcnvrt@vp,fsr2l
 16454  001CA4  C071  FFDA         	movff	i2vfpfcnvrt@vp+1,fsr2h
 16455  001CA8  C174  FFDF         	movff	_nout,indf2
 16456  001CAC                     i2l8115:
 16457                           
 16458                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
 16459  001CAC  0E00               	movlw	0
 16460  001CAE  6E46               	movwf	(?i2_vfpfcnvrt+1)^0,c
 16461  001CB0  0E00               	movlw	0
 16462  001CB2  6E45               	movwf	?i2_vfpfcnvrt^0,c
 16463  001CB4  EFE4  F012         	goto	i2l799
 16464  001CB8                     i2l8119:
 16465                           
 16466                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
 16467  001CB8  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16468  001CBC  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16469  001CC0  CFDE F001          	movff	postinc2,i2strncmp@_l
 16470  001CC4  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16471  001CC8  0EDA               	movlw	low (STR_51+1)
 16472  001CCA  6E03               	movwf	i2strncmp@_r^0,c
 16473  001CCC  0EFF               	movlw	high (STR_51+1)
 16474  001CCE  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16475  001CD0  0E00               	movlw	0
 16476  001CD2  6E06               	movwf	(i2strncmp@n+1)^0,c
 16477  001CD4  0E02               	movlw	2
 16478  001CD6  6E05               	movwf	i2strncmp@n^0,c
 16479  001CD8  EC6B  F02A         	call	i2_strncmp	;wreg free
 16480  001CDC  5001               	movf	?i2_strncmp^0,w,c
 16481  001CDE  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16482  001CE0  A4D8               	btfss	status,2,c
 16483  001CE2  EF75  F00E         	goto	i2u1015_41
 16484  001CE6  EF77  F00E         	goto	i2u1015_40
 16485  001CEA                     i2u1015_41:
 16486  001CEA  EF9D  F00E         	goto	i2l8129
 16487  001CEE                     i2u1015_40:
 16488  001CEE                     
 16489                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
 16490  001CEE  0E02               	movlw	2
 16491  001CF0  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16492  001CF4  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16493  001CF8  26DE               	addwf	postinc2,f,c
 16494  001CFA  0E00               	movlw	0
 16495  001CFC  22DD               	addwfc	postdec2,f,c
 16496                           
 16497                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
 16498  001CFE  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16499  001D02  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16500  001D06  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16501  001D0A  0E02               	movlw	2
 16502  001D0C  26DE               	addwf	postinc2,f,c
 16503  001D0E  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16504  001D12  0E00               	movlw	0
 16505  001D14  22DD               	addwfc	postdec2,f,c
 16506  001D16  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16507  001D1A  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16508  001D1E  CFDE F070          	movff	postinc2,i2vfpfcnvrt@vp
 16509  001D22  CFDD F071          	movff	postdec2,i2vfpfcnvrt@vp+1
 16510  001D26                     
 16511                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
 16512  001D26  C070  FFD9         	movff	i2vfpfcnvrt@vp,fsr2l
 16513  001D2A  C071  FFDA         	movff	i2vfpfcnvrt@vp+1,fsr2h
 16514  001D2E  C174  FFDE         	movff	_nout,postinc2
 16515  001D32  C175  FFDD         	movff	_nout+1,postdec2
 16516  001D36  EF56  F00E         	goto	i2l8115
 16517  001D3A                     i2l8129:
 16518                           
 16519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
 16520  001D3A  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16521  001D3E  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16522  001D42  CFDE FFF6          	movff	postinc2,tblptrl
 16523  001D46  CFDD FFF7          	movff	postdec2,tblptrh
 16524  001D4A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16525  001D4A  6AF8               	clrf	tblptru,c
 16526  001D4C                     	endif
 16527  001D4C                     	if	0	;tblptru may be non-zero
 16528  001D4C                     	endif
 16529  001D4C  0008               	tblrd		*
 16530  001D4E  50F5               	movf	tablat,w,c
 16531  001D50  0A6E               	xorlw	110
 16532  001D52  A4D8               	btfss	status,2,c
 16533  001D54  EFAE  F00E         	goto	i2u1016_41
 16534  001D58  EFB0  F00E         	goto	i2u1016_40
 16535  001D5C                     i2u1016_41:
 16536  001D5C  EFD5  F00E         	goto	i2l8139
 16537  001D60                     i2u1016_40:
 16538  001D60                     
 16539                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
 16540  001D60  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16541  001D64  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16542  001D68  2ADE               	incf	postinc2,f,c
 16543  001D6A  0E00               	movlw	0
 16544  001D6C  22DD               	addwfc	postdec2,f,c
 16545                           
 16546                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 16547  001D6E  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16548  001D72  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16549  001D76  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16550  001D7A  0E02               	movlw	2
 16551  001D7C  26DE               	addwf	postinc2,f,c
 16552  001D7E  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16553  001D82  0E00               	movlw	0
 16554  001D84  22DD               	addwfc	postdec2,f,c
 16555  001D86  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16556  001D8A  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16557  001D8E  CFDE F070          	movff	postinc2,i2vfpfcnvrt@vp
 16558  001D92  CFDD F071          	movff	postdec2,i2vfpfcnvrt@vp+1
 16559  001D96                     
 16560                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
 16561  001D96  C070  FFD9         	movff	i2vfpfcnvrt@vp,fsr2l
 16562  001D9A  C071  FFDA         	movff	i2vfpfcnvrt@vp+1,fsr2h
 16563  001D9E  C174  FFDE         	movff	_nout,postinc2
 16564  001DA2  C175  FFDD         	movff	_nout+1,postdec2
 16565  001DA6  EF56  F00E         	goto	i2l8115
 16566  001DAA                     i2l8139:
 16567                           
 16568                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
 16569  001DAA  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16570  001DAE  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16571  001DB2  CFDE F001          	movff	postinc2,i2strncmp@_l
 16572  001DB6  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16573  001DBA  0EF2               	movlw	low STR_61
 16574  001DBC  6E03               	movwf	i2strncmp@_r^0,c
 16575  001DBE  0EFF               	movlw	high STR_61
 16576  001DC0  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16577  001DC2  0E00               	movlw	0
 16578  001DC4  6E06               	movwf	(i2strncmp@n+1)^0,c
 16579  001DC6  0E02               	movlw	2
 16580  001DC8  6E05               	movwf	i2strncmp@n^0,c
 16581  001DCA  EC6B  F02A         	call	i2_strncmp	;wreg free
 16582  001DCE  5001               	movf	?i2_strncmp^0,w,c
 16583  001DD0  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16584  001DD2  A4D8               	btfss	status,2,c
 16585  001DD4  EFEE  F00E         	goto	i2u1017_41
 16586  001DD8  EFF0  F00E         	goto	i2u1017_40
 16587  001DDC                     i2u1017_41:
 16588  001DDC  EF16  F00F         	goto	i2l8149
 16589  001DE0                     i2u1017_40:
 16590  001DE0                     
 16591                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
 16592  001DE0  0E02               	movlw	2
 16593  001DE2  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16594  001DE6  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16595  001DEA  26DE               	addwf	postinc2,f,c
 16596  001DEC  0E00               	movlw	0
 16597  001DEE  22DD               	addwfc	postdec2,f,c
 16598                           
 16599                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
 16600  001DF0  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16601  001DF4  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16602  001DF8  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16603  001DFC  0E02               	movlw	2
 16604  001DFE  26DE               	addwf	postinc2,f,c
 16605  001E00  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16606  001E04  0E00               	movlw	0
 16607  001E06  22DD               	addwfc	postdec2,f,c
 16608  001E08  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16609  001E0C  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16610  001E10  CFDE F070          	movff	postinc2,i2vfpfcnvrt@vp
 16611  001E14  CFDD F071          	movff	postdec2,i2vfpfcnvrt@vp+1
 16612  001E18                     
 16613                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
 16614  001E18  C070  FFD9         	movff	i2vfpfcnvrt@vp,fsr2l
 16615  001E1C  C071  FFDA         	movff	i2vfpfcnvrt@vp+1,fsr2h
 16616  001E20  C174  FFDE         	movff	_nout,postinc2
 16617  001E24  C175  FFDD         	movff	_nout+1,postdec2
 16618  001E28  EF56  F00E         	goto	i2l8115
 16619  001E2C                     i2l8149:
 16620                           
 16621                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
 16622  001E2C  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16623  001E30  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16624  001E34  CFDE FFF6          	movff	postinc2,tblptrl
 16625  001E38  CFDD FFF7          	movff	postdec2,tblptrh
 16626  001E3C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16627  001E3C  6AF8               	clrf	tblptru,c
 16628  001E3E                     	endif
 16629  001E3E                     	if	0	;tblptru may be non-zero
 16630  001E3E                     	endif
 16631  001E3E  0008               	tblrd		*
 16632  001E40  50F5               	movf	tablat,w,c
 16633  001E42  0A70               	xorlw	112
 16634  001E44  A4D8               	btfss	status,2,c
 16635  001E46  EF27  F00F         	goto	i2u1018_41
 16636  001E4A  EF29  F00F         	goto	i2u1018_40
 16637  001E4E                     i2u1018_41:
 16638  001E4E  EF6D  F00F         	goto	i2l8157
 16639  001E52                     i2u1018_40:
 16640  001E52                     
 16641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
 16642  001E52  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16643  001E56  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16644  001E5A  2ADE               	incf	postinc2,f,c
 16645  001E5C  0E00               	movlw	0
 16646  001E5E  22DD               	addwfc	postdec2,f,c
 16647                           
 16648                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
 16649  001E60  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16650  001E64  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16651  001E68  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16652  001E6C  0E02               	movlw	2
 16653  001E6E  26DE               	addwf	postinc2,f,c
 16654  001E70  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16655  001E74  0E00               	movlw	0
 16656  001E76  22DD               	addwfc	postdec2,f,c
 16657  001E78  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16658  001E7C  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16659  001E80  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 16660  001E84  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 16661  001E88  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 16662  001E8C  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 16663  001E90  0100               	movlb	0	; () banked
 16664  001E92  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 16665  001E94  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 16666  001E96  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 16667  001E98  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 16668  001E9A  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 16669  001E9C  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 16670  001E9E                     
 16671                           ; BSR set to: 0
 16672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
 16673  001E9E  C045  F01E         	movff	i2vfpfcnvrt@fp,i2xtoa@fp
 16674  001EA2  C046  F01F         	movff	i2vfpfcnvrt@fp+1,i2xtoa@fp+1
 16675  001EA6  C073  F020         	movff	i2vfpfcnvrt@llu,i2xtoa@d
 16676  001EAA  C074  F021         	movff	i2vfpfcnvrt@llu+1,i2xtoa@d+1
 16677  001EAE  C075  F022         	movff	i2vfpfcnvrt@llu+2,i2xtoa@d+2
 16678  001EB2  C076  F023         	movff	i2vfpfcnvrt@llu+3,i2xtoa@d+3
 16679  001EB6  C077  F024         	movff	i2vfpfcnvrt@llu+4,i2xtoa@d+4
 16680  001EBA  C078  F025         	movff	i2vfpfcnvrt@llu+5,i2xtoa@d+5
 16681  001EBE  C079  F026         	movff	i2vfpfcnvrt@llu+6,i2xtoa@d+6
 16682  001EC2  C07A  F027         	movff	i2vfpfcnvrt@llu+7,i2xtoa@d+7
 16683  001EC6  0E78               	movlw	120
 16684  001EC8  6E28               	movwf	i2xtoa@x^0,c
 16685  001ECA  EC6E  F019         	call	i2_xtoa	;wreg free
 16686  001ECE  C01E  F045         	movff	?i2_xtoa,?i2_vfpfcnvrt
 16687  001ED2  C01F  F046         	movff	?i2_xtoa+1,?i2_vfpfcnvrt+1
 16688  001ED6  EFE4  F012         	goto	i2l799
 16689  001EDA                     i2l8157:
 16690                           
 16691                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 16692  001EDA  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16693  001EDE  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16694  001EE2  CFDE FFF6          	movff	postinc2,tblptrl
 16695  001EE6  CFDD FFF7          	movff	postdec2,tblptrh
 16696  001EEA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16697  001EEA  6AF8               	clrf	tblptru,c
 16698  001EEC                     	endif
 16699  001EEC                     	if	0	;tblptru may be non-zero
 16700  001EEC                     	endif
 16701  001EEC  0008               	tblrd		*
 16702  001EEE  50F5               	movf	tablat,w,c
 16703  001EF0  0A73               	xorlw	115
 16704  001EF2  A4D8               	btfss	status,2,c
 16705  001EF4  EF7E  F00F         	goto	i2u1019_41
 16706  001EF8  EF80  F00F         	goto	i2u1019_40
 16707  001EFC                     i2u1019_41:
 16708  001EFC  EFAB  F00F         	goto	i2l8165
 16709  001F00                     i2u1019_40:
 16710  001F00                     
 16711                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 16712  001F00  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16713  001F04  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16714  001F08  2ADE               	incf	postinc2,f,c
 16715  001F0A  0E00               	movlw	0
 16716  001F0C  22DD               	addwfc	postdec2,f,c
 16717                           
 16718                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 16719  001F0E  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16720  001F12  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16721  001F16  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16722  001F1A  0E02               	movlw	2
 16723  001F1C  26DE               	addwf	postinc2,f,c
 16724  001F1E  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16725  001F22  0E00               	movlw	0
 16726  001F24  22DD               	addwfc	postdec2,f,c
 16727  001F26  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16728  001F2A  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16729  001F2E  CFDE F060          	movff	postinc2,i2vfpfcnvrt@cp
 16730  001F32  CFDD F061          	movff	postdec2,i2vfpfcnvrt@cp+1
 16731  001F36                     
 16732                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 16733  001F36  C045  F00C         	movff	i2vfpfcnvrt@fp,i2stoa@fp
 16734  001F3A  C046  F00D         	movff	i2vfpfcnvrt@fp+1,i2stoa@fp+1
 16735  001F3E  C060  F00E         	movff	i2vfpfcnvrt@cp,i2stoa@s
 16736  001F42  C061  F00F         	movff	i2vfpfcnvrt@cp+1,i2stoa@s+1
 16737  001F46  EC6D  F024         	call	i2_stoa	;wreg free
 16738  001F4A  C00C  F045         	movff	?i2_stoa,?i2_vfpfcnvrt
 16739  001F4E  C00D  F046         	movff	?i2_stoa+1,?i2_vfpfcnvrt+1
 16740  001F52  EFE4  F012         	goto	i2l799
 16741  001F56                     i2l8165:
 16742                           
 16743                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
 16744  001F56  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16745  001F5A  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16746  001F5E  CFDE F001          	movff	postinc2,i2strncmp@_l
 16747  001F62  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16748  001F66  0EE1               	movlw	low STR_66
 16749  001F68  6E03               	movwf	i2strncmp@_r^0,c
 16750  001F6A  0EFF               	movlw	high STR_66
 16751  001F6C  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16752  001F6E  0E00               	movlw	0
 16753  001F70  6E06               	movwf	(i2strncmp@n+1)^0,c
 16754  001F72  0E03               	movlw	3
 16755  001F74  6E05               	movwf	i2strncmp@n^0,c
 16756  001F76  EC6B  F02A         	call	i2_strncmp	;wreg free
 16757  001F7A  5001               	movf	?i2_strncmp^0,w,c
 16758  001F7C  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16759  001F7E  A4D8               	btfss	status,2,c
 16760  001F80  EFC4  F00F         	goto	i2u1020_41
 16761  001F84  EFC6  F00F         	goto	i2u1020_40
 16762  001F88                     i2u1020_41:
 16763  001F88  EF06  F010         	goto	i2l8173
 16764  001F8C                     i2u1020_40:
 16765  001F8C                     
 16766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
 16767  001F8C  0E03               	movlw	3
 16768  001F8E  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16769  001F92  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16770  001F96  26DE               	addwf	postinc2,f,c
 16771  001F98  0E00               	movlw	0
 16772  001F9A  22DD               	addwfc	postdec2,f,c
 16773                           
 16774                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 16775  001F9C  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16776  001FA0  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16777  001FA4  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16778  001FA8  0E02               	movlw	2
 16779  001FAA  26DE               	addwf	postinc2,f,c
 16780  001FAC  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16781  001FB0  0E00               	movlw	0
 16782  001FB2  22DD               	addwfc	postdec2,f,c
 16783  001FB4  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16784  001FB8  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16785  001FBC  50DF               	movf	indf2,w,c
 16786  001FBE  6E4D               	movwf	(??i2_vfpfcnvrt+2)^0,c
 16787  001FC0  504D               	movf	(??i2_vfpfcnvrt+2)^0,w,c
 16788  001FC2  0100               	movlb	0	; () banked
 16789  001FC4  6F73               	movwf	i2vfpfcnvrt@llu& (0+255),b
 16790  001FC6  6B74               	clrf	(i2vfpfcnvrt@llu+1)& (0+255),b
 16791  001FC8  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 16792  001FCA  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 16793  001FCC  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 16794  001FCE  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 16795  001FD0  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 16796  001FD2  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 16797  001FD4                     i2l8169:
 16798                           
 16799                           ; BSR set to: 0
 16800                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
 16801  001FD4  C045  F01E         	movff	i2vfpfcnvrt@fp,i2utoa@fp
 16802  001FD8  C046  F01F         	movff	i2vfpfcnvrt@fp+1,i2utoa@fp+1
 16803  001FDC  C073  F020         	movff	i2vfpfcnvrt@llu,i2utoa@d
 16804  001FE0  C074  F021         	movff	i2vfpfcnvrt@llu+1,i2utoa@d+1
 16805  001FE4  C075  F022         	movff	i2vfpfcnvrt@llu+2,i2utoa@d+2
 16806  001FE8  C076  F023         	movff	i2vfpfcnvrt@llu+3,i2utoa@d+3
 16807  001FEC  C077  F024         	movff	i2vfpfcnvrt@llu+4,i2utoa@d+4
 16808  001FF0  C078  F025         	movff	i2vfpfcnvrt@llu+5,i2utoa@d+5
 16809  001FF4  C079  F026         	movff	i2vfpfcnvrt@llu+6,i2utoa@d+6
 16810  001FF8  C07A  F027         	movff	i2vfpfcnvrt@llu+7,i2utoa@d+7
 16811  001FFC  EC24  F01E         	call	i2_utoa	;wreg free
 16812  002000  C01E  F045         	movff	?i2_utoa,?i2_vfpfcnvrt
 16813  002004  C01F  F046         	movff	?i2_utoa+1,?i2_vfpfcnvrt+1
 16814  002008  EFE4  F012         	goto	i2l799
 16815  00200C                     i2l8173:
 16816                           
 16817                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
 16818  00200C  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16819  002010  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16820  002014  CFDE F001          	movff	postinc2,i2strncmp@_l
 16821  002018  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16822  00201C  0EE2               	movlw	low (STR_66+1)
 16823  00201E  6E03               	movwf	i2strncmp@_r^0,c
 16824  002020  0EFF               	movlw	high (STR_66+1)
 16825  002022  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16826  002024  0E00               	movlw	0
 16827  002026  6E06               	movwf	(i2strncmp@n+1)^0,c
 16828  002028  0E02               	movlw	2
 16829  00202A  6E05               	movwf	i2strncmp@n^0,c
 16830  00202C  EC6B  F02A         	call	i2_strncmp	;wreg free
 16831  002030  5001               	movf	?i2_strncmp^0,w,c
 16832  002032  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16833  002034  A4D8               	btfss	status,2,c
 16834  002036  EF1F  F010         	goto	i2u1021_41
 16835  00203A  EF21  F010         	goto	i2u1021_40
 16836  00203E                     i2u1021_41:
 16837  00203E  EF4A  F010         	goto	i2l8181
 16838  002042                     i2u1021_40:
 16839  002042                     
 16840                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
 16841  002042  0E02               	movlw	2
 16842  002044  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16843  002048  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16844  00204C  26DE               	addwf	postinc2,f,c
 16845  00204E  0E00               	movlw	0
 16846  002050  22DD               	addwfc	postdec2,f,c
 16847                           
 16848                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 16849  002052  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16850  002056  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16851  00205A  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16852  00205E  0E02               	movlw	2
 16853  002060  26DE               	addwf	postinc2,f,c
 16854  002062  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16855  002066  0E00               	movlw	0
 16856  002068  22DD               	addwfc	postdec2,f,c
 16857  00206A  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16858  00206E  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16859  002072  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 16860  002076  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 16861  00207A  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 16862  00207E  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 16863  002082  0100               	movlb	0	; () banked
 16864  002084  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 16865  002086  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 16866  002088  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 16867  00208A  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 16868  00208C  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 16869  00208E  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 16870  002090  EFEA  F00F         	goto	i2l8169
 16871  002094                     i2l8181:
 16872                           
 16873                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 16874  002094  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16875  002098  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16876  00209C  CFDE FFF6          	movff	postinc2,tblptrl
 16877  0020A0  CFDD FFF7          	movff	postdec2,tblptrh
 16878  0020A4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16879  0020A4  6AF8               	clrf	tblptru,c
 16880  0020A6                     	endif
 16881  0020A6                     	if	0	;tblptru may be non-zero
 16882  0020A6                     	endif
 16883  0020A6  0008               	tblrd		*
 16884  0020A8  50F5               	movf	tablat,w,c
 16885  0020AA  0A75               	xorlw	117
 16886  0020AC  A4D8               	btfss	status,2,c
 16887  0020AE  EF5B  F010         	goto	i2u1022_41
 16888  0020B2  EF5D  F010         	goto	i2u1022_40
 16889  0020B6                     i2u1022_41:
 16890  0020B6  EF85  F010         	goto	i2l8189
 16891  0020BA                     i2u1022_40:
 16892  0020BA                     
 16893                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 16894  0020BA  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16895  0020BE  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16896  0020C2  2ADE               	incf	postinc2,f,c
 16897  0020C4  0E00               	movlw	0
 16898  0020C6  22DD               	addwfc	postdec2,f,c
 16899                           
 16900                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 16901  0020C8  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16902  0020CC  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16903  0020D0  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16904  0020D4  0E02               	movlw	2
 16905  0020D6  26DE               	addwf	postinc2,f,c
 16906  0020D8  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16907  0020DC  0E00               	movlw	0
 16908  0020DE  22DD               	addwfc	postdec2,f,c
 16909  0020E0  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16910  0020E4  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16911  0020E8  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 16912  0020EC  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 16913  0020F0  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 16914  0020F4  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 16915  0020F8  0100               	movlb	0	; () banked
 16916  0020FA  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 16917  0020FC  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 16918  0020FE  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 16919  002100  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 16920  002102  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 16921  002104  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 16922  002106  EFEA  F00F         	goto	i2l8169
 16923  00210A                     i2l8189:
 16924                           
 16925                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
 16926  00210A  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16927  00210E  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16928  002112  CFDE F001          	movff	postinc2,i2strncmp@_l
 16929  002116  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16930  00211A  0EF8               	movlw	low STR_76
 16931  00211C  6E03               	movwf	i2strncmp@_r^0,c
 16932  00211E  0EFF               	movlw	high STR_76
 16933  002120  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16934  002122  0E00               	movlw	0
 16935  002124  6E06               	movwf	(i2strncmp@n+1)^0,c
 16936  002126  0E02               	movlw	2
 16937  002128  6E05               	movwf	i2strncmp@n^0,c
 16938  00212A  EC6B  F02A         	call	i2_strncmp	;wreg free
 16939  00212E  5001               	movf	?i2_strncmp^0,w,c
 16940  002130  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16941  002132  A4D8               	btfss	status,2,c
 16942  002134  EF9E  F010         	goto	i2u1023_41
 16943  002138  EFA0  F010         	goto	i2u1023_40
 16944  00213C                     i2u1023_41:
 16945  00213C  EFC9  F010         	goto	i2l8197
 16946  002140                     i2u1023_40:
 16947  002140                     
 16948                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
 16949  002140  0E02               	movlw	2
 16950  002142  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16951  002146  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16952  00214A  26DE               	addwf	postinc2,f,c
 16953  00214C  0E00               	movlw	0
 16954  00214E  22DD               	addwfc	postdec2,f,c
 16955                           
 16956                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 16957  002150  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16958  002154  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16959  002158  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16960  00215C  0E02               	movlw	2
 16961  00215E  26DE               	addwf	postinc2,f,c
 16962  002160  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16963  002164  0E00               	movlw	0
 16964  002166  22DD               	addwfc	postdec2,f,c
 16965  002168  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16966  00216C  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16967  002170  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 16968  002174  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 16969  002178  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 16970  00217C  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 16971  002180  0100               	movlb	0	; () banked
 16972  002182  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 16973  002184  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 16974  002186  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 16975  002188  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 16976  00218A  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 16977  00218C  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 16978  00218E  EFEA  F00F         	goto	i2l8169
 16979  002192                     i2l8197:
 16980                           
 16981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
 16982  002192  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16983  002196  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16984  00219A  CFDE F001          	movff	postinc2,i2strncmp@_l
 16985  00219E  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16986  0021A2  0EE5               	movlw	low STR_81
 16987  0021A4  6E03               	movwf	i2strncmp@_r^0,c
 16988  0021A6  0EFF               	movlw	high STR_81
 16989  0021A8  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16990  0021AA  0E00               	movlw	0
 16991  0021AC  6E06               	movwf	(i2strncmp@n+1)^0,c
 16992  0021AE  0E03               	movlw	3
 16993  0021B0  6E05               	movwf	i2strncmp@n^0,c
 16994  0021B2  EC6B  F02A         	call	i2_strncmp	;wreg free
 16995  0021B6  5001               	movf	?i2_strncmp^0,w,c
 16996  0021B8  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16997  0021BA  B4D8               	btfsc	status,2,c
 16998  0021BC  EFE2  F010         	goto	i2u1024_41
 16999  0021C0  EFE4  F010         	goto	i2u1024_40
 17000  0021C4                     i2u1024_41:
 17001  0021C4  EFFF  F010         	goto	i2l8201
 17002  0021C8                     i2u1024_40:
 17003  0021C8  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17004  0021CC  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17005  0021D0  CFDE F001          	movff	postinc2,i2strncmp@_l
 17006  0021D4  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 17007  0021D8  0ECD               	movlw	low STR_85
 17008  0021DA  6E03               	movwf	i2strncmp@_r^0,c
 17009  0021DC  0EFF               	movlw	high STR_85
 17010  0021DE  6E04               	movwf	(i2strncmp@_r+1)^0,c
 17011  0021E0  0E00               	movlw	0
 17012  0021E2  6E06               	movwf	(i2strncmp@n+1)^0,c
 17013  0021E4  0E03               	movlw	3
 17014  0021E6  6E05               	movwf	i2strncmp@n^0,c
 17015  0021E8  EC6B  F02A         	call	i2_strncmp	;wreg free
 17016  0021EC  5001               	movf	?i2_strncmp^0,w,c
 17017  0021EE  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 17018  0021F0  A4D8               	btfss	status,2,c
 17019  0021F2  EFFD  F010         	goto	i2u1025_41
 17020  0021F6  EFFF  F010         	goto	i2u1025_40
 17021  0021FA                     i2u1025_41:
 17022  0021FA  EF55  F011         	goto	i2l8211
 17023  0021FE                     i2u1025_40:
 17024  0021FE                     i2l8201:
 17025                           
 17026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
 17027  0021FE  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17028  002202  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17029  002206  CFDE F04B          	movff	postinc2,??i2_vfpfcnvrt
 17030  00220A  CFDD F04C          	movff	postdec2,??i2_vfpfcnvrt+1
 17031  00220E  0E02               	movlw	2
 17032  002210  264B               	addwf	??i2_vfpfcnvrt^0,f,c
 17033  002212  0E00               	movlw	0
 17034  002214  224C               	addwfc	(??i2_vfpfcnvrt+1)^0,f,c
 17035  002216  C04B  FFF6         	movff	??i2_vfpfcnvrt,tblptrl
 17036  00221A  C04C  FFF7         	movff	??i2_vfpfcnvrt+1,tblptrh
 17037  00221E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17038  00221E  6AF8               	clrf	tblptru,c
 17039  002220                     	endif
 17040  002220                     	if	0	;tblptru may be non-zero
 17041  002220                     	endif
 17042  002220  0008               	tblrd		*
 17043  002222  CFF5 F072          	movff	tablat,i2vfpfcnvrt@c
 17044  002226                     
 17045                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
 17046  002226  0E03               	movlw	3
 17047  002228  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17048  00222C  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17049  002230  26DE               	addwf	postinc2,f,c
 17050  002232  0E00               	movlw	0
 17051  002234  22DD               	addwfc	postdec2,f,c
 17052  002236                     
 17053                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 17054  002236  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 17055  00223A  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 17056  00223E  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 17057  002242  0E02               	movlw	2
 17058  002244  26DE               	addwf	postinc2,f,c
 17059  002246  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 17060  00224A  0E00               	movlw	0
 17061  00224C  22DD               	addwfc	postdec2,f,c
 17062  00224E  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 17063  002252  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 17064  002256  50DF               	movf	indf2,w,c
 17065  002258  6E4D               	movwf	(??i2_vfpfcnvrt+2)^0,c
 17066  00225A  504D               	movf	(??i2_vfpfcnvrt+2)^0,w,c
 17067  00225C  0100               	movlb	0	; () banked
 17068  00225E  6F73               	movwf	i2vfpfcnvrt@llu& (0+255),b
 17069  002260  6B74               	clrf	(i2vfpfcnvrt@llu+1)& (0+255),b
 17070  002262  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 17071  002264  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 17072  002266  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 17073  002268  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 17074  00226A  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 17075  00226C  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 17076  00226E                     i2l8207:
 17077                           
 17078                           ; BSR set to: 0
 17079                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
 17080  00226E  C045  F01E         	movff	i2vfpfcnvrt@fp,i2xtoa@fp
 17081  002272  C046  F01F         	movff	i2vfpfcnvrt@fp+1,i2xtoa@fp+1
 17082  002276  C073  F020         	movff	i2vfpfcnvrt@llu,i2xtoa@d
 17083  00227A  C074  F021         	movff	i2vfpfcnvrt@llu+1,i2xtoa@d+1
 17084  00227E  C075  F022         	movff	i2vfpfcnvrt@llu+2,i2xtoa@d+2
 17085  002282  C076  F023         	movff	i2vfpfcnvrt@llu+3,i2xtoa@d+3
 17086  002286  C077  F024         	movff	i2vfpfcnvrt@llu+4,i2xtoa@d+4
 17087  00228A  C078  F025         	movff	i2vfpfcnvrt@llu+5,i2xtoa@d+5
 17088  00228E  C079  F026         	movff	i2vfpfcnvrt@llu+6,i2xtoa@d+6
 17089  002292  C07A  F027         	movff	i2vfpfcnvrt@llu+7,i2xtoa@d+7
 17090  002296  C072  F028         	movff	i2vfpfcnvrt@c,i2xtoa@x
 17091  00229A  EC6E  F019         	call	i2_xtoa	;wreg free
 17092  00229E  C01E  F045         	movff	?i2_xtoa,?i2_vfpfcnvrt
 17093  0022A2  C01F  F046         	movff	?i2_xtoa+1,?i2_vfpfcnvrt+1
 17094  0022A6  EFE4  F012         	goto	i2l799
 17095  0022AA                     i2l8211:
 17096                           
 17097                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
 17098  0022AA  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17099  0022AE  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17100  0022B2  CFDE F001          	movff	postinc2,i2strncmp@_l
 17101  0022B6  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 17102  0022BA  0EE6               	movlw	low (STR_81+1)
 17103  0022BC  6E03               	movwf	i2strncmp@_r^0,c
 17104  0022BE  0EFF               	movlw	high (STR_81+1)
 17105  0022C0  6E04               	movwf	(i2strncmp@_r+1)^0,c
 17106  0022C2  0E00               	movlw	0
 17107  0022C4  6E06               	movwf	(i2strncmp@n+1)^0,c
 17108  0022C6  0E02               	movlw	2
 17109  0022C8  6E05               	movwf	i2strncmp@n^0,c
 17110  0022CA  EC6B  F02A         	call	i2_strncmp	;wreg free
 17111  0022CE  5001               	movf	?i2_strncmp^0,w,c
 17112  0022D0  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 17113  0022D2  B4D8               	btfsc	status,2,c
 17114  0022D4  EF6E  F011         	goto	i2u1026_41
 17115  0022D8  EF70  F011         	goto	i2u1026_40
 17116  0022DC                     i2u1026_41:
 17117  0022DC  EF8B  F011         	goto	i2l8215
 17118  0022E0                     i2u1026_40:
 17119  0022E0  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17120  0022E4  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17121  0022E8  CFDE F001          	movff	postinc2,i2strncmp@_l
 17122  0022EC  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 17123  0022F0  0ECE               	movlw	low (STR_85+1)
 17124  0022F2  6E03               	movwf	i2strncmp@_r^0,c
 17125  0022F4  0EFF               	movlw	high (STR_85+1)
 17126  0022F6  6E04               	movwf	(i2strncmp@_r+1)^0,c
 17127  0022F8  0E00               	movlw	0
 17128  0022FA  6E06               	movwf	(i2strncmp@n+1)^0,c
 17129  0022FC  0E02               	movlw	2
 17130  0022FE  6E05               	movwf	i2strncmp@n^0,c
 17131  002300  EC6B  F02A         	call	i2_strncmp	;wreg free
 17132  002304  5001               	movf	?i2_strncmp^0,w,c
 17133  002306  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 17134  002308  A4D8               	btfss	status,2,c
 17135  00230A  EF89  F011         	goto	i2u1027_41
 17136  00230E  EF8B  F011         	goto	i2u1027_40
 17137  002312                     i2u1027_41:
 17138  002312  EFC8  F011         	goto	i2l8225
 17139  002316                     i2u1027_40:
 17140  002316                     i2l8215:
 17141                           
 17142                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
 17143  002316  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17144  00231A  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17145  00231E  CFDE F04B          	movff	postinc2,??i2_vfpfcnvrt
 17146  002322  CFDD F04C          	movff	postdec2,??i2_vfpfcnvrt+1
 17147  002326  0E01               	movlw	1
 17148  002328  264B               	addwf	??i2_vfpfcnvrt^0,f,c
 17149  00232A  0E00               	movlw	0
 17150  00232C  224C               	addwfc	(??i2_vfpfcnvrt+1)^0,f,c
 17151  00232E  C04B  FFF6         	movff	??i2_vfpfcnvrt,tblptrl
 17152  002332  C04C  FFF7         	movff	??i2_vfpfcnvrt+1,tblptrh
 17153  002336                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17154  002336  6AF8               	clrf	tblptru,c
 17155  002338                     	endif
 17156  002338                     	if	0	;tblptru may be non-zero
 17157  002338                     	endif
 17158  002338  0008               	tblrd		*
 17159  00233A  CFF5 F072          	movff	tablat,i2vfpfcnvrt@c
 17160  00233E                     
 17161                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
 17162  00233E  0E02               	movlw	2
 17163  002340  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17164  002344  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17165  002348  26DE               	addwf	postinc2,f,c
 17166  00234A  0E00               	movlw	0
 17167  00234C  22DD               	addwfc	postdec2,f,c
 17168  00234E                     
 17169                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 17170  00234E  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 17171  002352  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 17172  002356  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 17173  00235A  0E02               	movlw	2
 17174  00235C  26DE               	addwf	postinc2,f,c
 17175  00235E  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 17176  002362  0E00               	movlw	0
 17177  002364  22DD               	addwfc	postdec2,f,c
 17178  002366  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 17179  00236A  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 17180  00236E  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 17181  002372  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 17182  002376  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 17183  00237A  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 17184  00237E  0100               	movlb	0	; () banked
 17185  002380  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 17186  002382  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 17187  002384  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 17188  002386  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 17189  002388  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 17190  00238A  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 17191  00238C  EF37  F011         	goto	i2l8207
 17192  002390                     i2l8225:
 17193                           
 17194                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 17195  002390  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17196  002394  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17197  002398  CFDE FFF6          	movff	postinc2,tblptrl
 17198  00239C  CFDD FFF7          	movff	postdec2,tblptrh
 17199  0023A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17200  0023A0  6AF8               	clrf	tblptru,c
 17201  0023A2                     	endif
 17202  0023A2                     	if	0	;tblptru may be non-zero
 17203  0023A2                     	endif
 17204  0023A2  0008               	tblrd		*
 17205  0023A4  50F5               	movf	tablat,w,c
 17206  0023A6  0A78               	xorlw	120
 17207  0023A8  B4D8               	btfsc	status,2,c
 17208  0023AA  EFD9  F011         	goto	i2u1028_41
 17209  0023AE  EFDB  F011         	goto	i2u1028_40
 17210  0023B2                     i2u1028_41:
 17211  0023B2  EFEE  F011         	goto	i2l8229
 17212  0023B6                     i2u1028_40:
 17213  0023B6  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17214  0023BA  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17215  0023BE  CFDE FFF6          	movff	postinc2,tblptrl
 17216  0023C2  CFDD FFF7          	movff	postdec2,tblptrh
 17217  0023C6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17218  0023C6  6AF8               	clrf	tblptru,c
 17219  0023C8                     	endif
 17220  0023C8                     	if	0	;tblptru may be non-zero
 17221  0023C8                     	endif
 17222  0023C8  0008               	tblrd		*
 17223  0023CA  50F5               	movf	tablat,w,c
 17224  0023CC  0A58               	xorlw	88
 17225  0023CE  A4D8               	btfss	status,2,c
 17226  0023D0  EFEC  F011         	goto	i2u1029_41
 17227  0023D4  EFEE  F011         	goto	i2u1029_40
 17228  0023D8                     i2u1029_41:
 17229  0023D8  EF22  F012         	goto	i2l8239
 17230  0023DC                     i2u1029_40:
 17231  0023DC                     i2l8229:
 17232                           
 17233                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 17234  0023DC  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17235  0023E0  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17236  0023E4  CFDE FFF6          	movff	postinc2,tblptrl
 17237  0023E8  CFDD FFF7          	movff	postdec2,tblptrh
 17238  0023EC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17239  0023EC  6AF8               	clrf	tblptru,c
 17240  0023EE                     	endif
 17241  0023EE                     	if	0	;tblptru may be non-zero
 17242  0023EE                     	endif
 17243  0023EE  0008               	tblrd		*
 17244  0023F0  CFF5 F072          	movff	tablat,i2vfpfcnvrt@c
 17245  0023F4                     
 17246                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 17247  0023F4  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17248  0023F8  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17249  0023FC  2ADE               	incf	postinc2,f,c
 17250  0023FE  0E00               	movlw	0
 17251  002400  22DD               	addwfc	postdec2,f,c
 17252  002402                     
 17253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 17254  002402  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 17255  002406  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 17256  00240A  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 17257  00240E  0E02               	movlw	2
 17258  002410  26DE               	addwf	postinc2,f,c
 17259  002412  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 17260  002416  0E00               	movlw	0
 17261  002418  22DD               	addwfc	postdec2,f,c
 17262  00241A  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 17263  00241E  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 17264  002422  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 17265  002426  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 17266  00242A  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 17267  00242E  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 17268  002432  0100               	movlb	0	; () banked
 17269  002434  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 17270  002436  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 17271  002438  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 17272  00243A  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 17273  00243C  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 17274  00243E  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 17275  002440  EF37  F011         	goto	i2l8207
 17276  002444                     i2l8239:
 17277                           
 17278                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
 17279  002444  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17280  002448  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17281  00244C  CFDE F001          	movff	postinc2,i2strncmp@_l
 17282  002450  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 17283  002454  0EFB               	movlw	low STR_99
 17284  002456  6E03               	movwf	i2strncmp@_r^0,c
 17285  002458  0EFF               	movlw	high STR_99
 17286  00245A  6E04               	movwf	(i2strncmp@_r+1)^0,c
 17287  00245C  0E00               	movlw	0
 17288  00245E  6E06               	movwf	(i2strncmp@n+1)^0,c
 17289  002460  0E02               	movlw	2
 17290  002462  6E05               	movwf	i2strncmp@n^0,c
 17291  002464  EC6B  F02A         	call	i2_strncmp	;wreg free
 17292  002468  5001               	movf	?i2_strncmp^0,w,c
 17293  00246A  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 17294  00246C  B4D8               	btfsc	status,2,c
 17295  00246E  EF3B  F012         	goto	i2u1030_41
 17296  002472  EF3D  F012         	goto	i2u1030_40
 17297  002476                     i2u1030_41:
 17298  002476  EF58  F012         	goto	i2l8243
 17299  00247A                     i2u1030_40:
 17300  00247A  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17301  00247E  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17302  002482  CFDE F001          	movff	postinc2,i2strncmp@_l
 17303  002486  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 17304  00248A  0EE9               	movlw	low STR_103
 17305  00248C  6E03               	movwf	i2strncmp@_r^0,c
 17306  00248E  0EFF               	movlw	high STR_103
 17307  002490  6E04               	movwf	(i2strncmp@_r+1)^0,c
 17308  002492  0E00               	movlw	0
 17309  002494  6E06               	movwf	(i2strncmp@n+1)^0,c
 17310  002496  0E02               	movlw	2
 17311  002498  6E05               	movwf	i2strncmp@n^0,c
 17312  00249A  EC6B  F02A         	call	i2_strncmp	;wreg free
 17313  00249E  5001               	movf	?i2_strncmp^0,w,c
 17314  0024A0  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 17315  0024A2  A4D8               	btfss	status,2,c
 17316  0024A4  EF56  F012         	goto	i2u1031_41
 17317  0024A8  EF58  F012         	goto	i2u1031_40
 17318  0024AC                     i2u1031_41:
 17319  0024AC  EF95  F012         	goto	i2l8253
 17320  0024B0                     i2u1031_40:
 17321  0024B0                     i2l8243:
 17322                           
 17323                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
 17324  0024B0  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17325  0024B4  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17326  0024B8  CFDE F04B          	movff	postinc2,??i2_vfpfcnvrt
 17327  0024BC  CFDD F04C          	movff	postdec2,??i2_vfpfcnvrt+1
 17328  0024C0  0E01               	movlw	1
 17329  0024C2  264B               	addwf	??i2_vfpfcnvrt^0,f,c
 17330  0024C4  0E00               	movlw	0
 17331  0024C6  224C               	addwfc	(??i2_vfpfcnvrt+1)^0,f,c
 17332  0024C8  C04B  FFF6         	movff	??i2_vfpfcnvrt,tblptrl
 17333  0024CC  C04C  FFF7         	movff	??i2_vfpfcnvrt+1,tblptrh
 17334  0024D0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17335  0024D0  6AF8               	clrf	tblptru,c
 17336  0024D2                     	endif
 17337  0024D2                     	if	0	;tblptru may be non-zero
 17338  0024D2                     	endif
 17339  0024D2  0008               	tblrd		*
 17340  0024D4  CFF5 F072          	movff	tablat,i2vfpfcnvrt@c
 17341  0024D8                     
 17342                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
 17343  0024D8  0E02               	movlw	2
 17344  0024DA  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17345  0024DE  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17346  0024E2  26DE               	addwf	postinc2,f,c
 17347  0024E4  0E00               	movlw	0
 17348  0024E6  22DD               	addwfc	postdec2,f,c
 17349  0024E8                     
 17350                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 17351  0024E8  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 17352  0024EC  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 17353  0024F0  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 17354  0024F4  0E02               	movlw	2
 17355  0024F6  26DE               	addwf	postinc2,f,c
 17356  0024F8  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 17357  0024FC  0E00               	movlw	0
 17358  0024FE  22DD               	addwfc	postdec2,f,c
 17359  002500  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 17360  002504  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 17361  002508  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 17362  00250C  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 17363  002510  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 17364  002514  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 17365  002518  0100               	movlb	0	; () banked
 17366  00251A  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 17367  00251C  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 17368  00251E  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 17369  002520  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 17370  002522  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 17371  002524  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 17372  002526  EF37  F011         	goto	i2l8207
 17373  00252A                     i2l8253:
 17374                           
 17375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 17376  00252A  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17377  00252E  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17378  002532  CFDE FFF6          	movff	postinc2,tblptrl
 17379  002536  CFDD FFF7          	movff	postdec2,tblptrh
 17380  00253A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17381  00253A  6AF8               	clrf	tblptru,c
 17382  00253C                     	endif
 17383  00253C                     	if	0	;tblptru may be non-zero
 17384  00253C                     	endif
 17385  00253C  0008               	tblrd		*
 17386  00253E  50F5               	movf	tablat,w,c
 17387  002540  0A25               	xorlw	37
 17388  002542  A4D8               	btfss	status,2,c
 17389  002544  EFA6  F012         	goto	i2u1032_41
 17390  002548  EFA8  F012         	goto	i2u1032_40
 17391  00254C                     i2u1032_41:
 17392  00254C  EFBF  F012         	goto	i2l8263
 17393  002550                     i2u1032_40:
 17394  002550                     
 17395                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 17396  002550  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17397  002554  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17398  002558  2ADE               	incf	postinc2,f,c
 17399  00255A  0E00               	movlw	0
 17400  00255C  22DD               	addwfc	postdec2,f,c
 17401  00255E                     
 17402                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 17403  00255E  0E00               	movlw	0
 17404  002560  6E04               	movwf	(i2fputc@c+1)^0,c
 17405  002562  0E25               	movlw	37
 17406  002564  6E03               	movwf	i2fputc@c^0,c
 17407  002566  C045  F005         	movff	i2vfpfcnvrt@fp,i2fputc@fp
 17408  00256A  C046  F006         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
 17409  00256E  EC7C  F02C         	call	i2_fputc	;wreg free
 17410  002572                     i2l8259:
 17411                           
 17412                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 17413  002572  0E00               	movlw	0
 17414  002574  6E46               	movwf	(?i2_vfpfcnvrt+1)^0,c
 17415  002576  0E01               	movlw	1
 17416  002578  6E45               	movwf	?i2_vfpfcnvrt^0,c
 17417  00257A  EFE4  F012         	goto	i2l799
 17418  00257E                     i2l8263:
 17419                           
 17420                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 17421  00257E  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17422  002582  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17423  002586  2ADE               	incf	postinc2,f,c
 17424  002588  0E00               	movlw	0
 17425  00258A  22DD               	addwfc	postdec2,f,c
 17426  00258C  EF56  F00E         	goto	i2l8115
 17427  002590                     i2l8269:
 17428                           
 17429                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 17430  002590  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17431  002594  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17432  002598  CFDE FFF6          	movff	postinc2,tblptrl
 17433  00259C  CFDD FFF7          	movff	postdec2,tblptrh
 17434  0025A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17435  0025A0  6AF8               	clrf	tblptru,c
 17436  0025A2                     	endif
 17437  0025A2                     	if	0	;tblptru may be non-zero
 17438  0025A2                     	endif
 17439  0025A2  0008               	tblrd		*
 17440  0025A4  50F5               	movf	tablat,w,c
 17441  0025A6  6E03               	movwf	i2fputc@c^0,c
 17442  0025A8  6A04               	clrf	(i2fputc@c+1)^0,c
 17443  0025AA  C045  F005         	movff	i2vfpfcnvrt@fp,i2fputc@fp
 17444  0025AE  C046  F006         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
 17445  0025B2  EC7C  F02C         	call	i2_fputc	;wreg free
 17446  0025B6                     
 17447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 17448  0025B6  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17449  0025BA  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17450  0025BE  2ADE               	incf	postinc2,f,c
 17451  0025C0  0E00               	movlw	0
 17452  0025C2  22DD               	addwfc	postdec2,f,c
 17453  0025C4  EFB9  F012         	goto	i2l8259
 17454  0025C8                     i2l799:
 17455  0025C8  0012               	return		;funcret
 17456  0025CA                     __end_ofi2_vfpfcnvrt:
 17457                           	opt callstack 0
 17458                           
 17459 ;; *************** function i2_xtoa *****************
 17460 ;; Defined at:
 17461 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 17462 ;; Parameters:    Size  Location     Type
 17463 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 17464 ;;		 -> vsnprintf@f(6), NULL(0), 
 17465 ;;  d               8   31[COMRAM] unsigned long long 
 17466 ;;  x               1   39[COMRAM] unsigned char 
 17467 ;; Auto vars:     Size  Location     Type
 17468 ;;  xtoa            8   56[COMRAM] unsigned long long 
 17469 ;;  xtoa            2   66[COMRAM] int 
 17470 ;;  xtoa            2   64[COMRAM] int 
 17471 ;;  xtoa            2   54[COMRAM] int 
 17472 ;;  xtoa            2   52[COMRAM] int 
 17473 ;; Return value:  Size  Location     Type
 17474 ;;                  2   29[COMRAM] int 
 17475 ;; Registers used:
 17476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17477 ;; Tracked objects:
 17478 ;;		On entry : 0/0
 17479 ;;		On exit  : 0/0
 17480 ;;		Unchanged: 0/0
 17481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17482 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17483 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17484 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17485 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17486 ;;Total ram usage:       39 bytes
 17487 ;; Hardware stack levels used:    1
 17488 ;; Hardware stack levels required when called:    5
 17489 ;; This function calls:
 17490 ;;		i2_isalpha
 17491 ;;		i2_isupper
 17492 ;;		i2_pad
 17493 ;;		i2_toupper
 17494 ;; This function is called by:
 17495 ;;		i2_vfpfcnvrt
 17496 ;; This function uses a non-reentrant model
 17497 ;;
 17498                           
 17499                           	psect	text74
 17500  0032DC                     __ptext74:
 17501                           	opt callstack 0
 17502  0032DC                     i2_xtoa:
 17503                           	opt callstack 8
 17504  0032DC                     
 17505                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 17506  0032DC  0100               	movlb	0	; () banked
 17507  0032DE  BFBC               	btfsc	(_prec+1)& (0+255),7,b
 17508  0032E0  EF74  F019         	goto	i2u918_41
 17509  0032E4  EF76  F019         	goto	i2u918_40
 17510  0032E8                     i2u918_41:
 17511  0032E8  EF77  F019         	goto	i2l7643
 17512  0032EC                     i2u918_40:
 17513  0032EC                     
 17514                           ; BSR set to: 0
 17515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 17516  0032EC  93BD               	bcf	_flags& (0+255),1,b
 17517  0032EE                     i2l7643:
 17518                           
 17519                           ; BSR set to: 0
 17520                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 17521  0032EE  BFBC               	btfsc	(_prec+1)& (0+255),7,b
 17522  0032F0  EF84  F019         	goto	i2u919_40
 17523  0032F4  51BC               	movf	(_prec+1)& (0+255),w,b
 17524  0032F6  E106               	bnz	i2u919_41
 17525  0032F8  05BB               	decf	_prec& (0+255),w,b
 17526  0032FA  B0D8               	btfsc	status,0,c
 17527  0032FC  EF82  F019         	goto	i2u919_41
 17528  003300  EF84  F019         	goto	i2u919_40
 17529  003304                     i2u919_41:
 17530  003304  EF8A  F019         	goto	i2l737
 17531  003308                     i2u919_40:
 17532  003308                     
 17533                           ; BSR set to: 0
 17534  003308  0E00               	movlw	0
 17535  00330A  6E36               	movwf	(i2xtoa@p+1)^0,c
 17536  00330C  0E01               	movlw	1
 17537  00330E  6E35               	movwf	i2xtoa@p^0,c
 17538  003310  EF8E  F019         	goto	i2l739
 17539  003314                     i2l737:
 17540                           
 17541                           ; BSR set to: 0
 17542  003314  C0BB  F035         	movff	_prec,i2xtoa@p
 17543  003318  C0BC  F036         	movff	_prec+1,i2xtoa@p+1
 17544  00331C                     i2l739:
 17545                           
 17546                           ; BSR set to: 0
 17547                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 17548  00331C  C0B9  F037         	movff	_width,i2xtoa@w
 17549  003320  C0BA  F038         	movff	_width+1,i2xtoa@w+1
 17550                           
 17551                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 17552  003324  A9BD               	btfss	_flags& (0+255),4,b
 17553  003326  EF97  F019         	goto	i2u920_41
 17554  00332A  EF99  F019         	goto	i2u920_40
 17555  00332E                     i2u920_41:
 17556  00332E  EF9D  F019         	goto	i2l7649
 17557  003332                     i2u920_40:
 17558  003332                     
 17559                           ; BSR set to: 0
 17560                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 17561  003332  0EFE               	movlw	254
 17562  003334  2637               	addwf	i2xtoa@w^0,f,c
 17563  003336  0EFF               	movlw	255
 17564  003338  2238               	addwfc	(i2xtoa@w+1)^0,f,c
 17565  00333A                     i2l7649:
 17566                           
 17567                           ; BSR set to: 0
 17568                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 17569  00333A  C020  F039         	movff	i2xtoa@d,i2xtoa@n
 17570  00333E  C021  F03A         	movff	i2xtoa@d+1,i2xtoa@n+1
 17571  003342  C022  F03B         	movff	i2xtoa@d+2,i2xtoa@n+2
 17572  003346  C023  F03C         	movff	i2xtoa@d+3,i2xtoa@n+3
 17573  00334A  C024  F03D         	movff	i2xtoa@d+4,i2xtoa@n+4
 17574  00334E  C025  F03E         	movff	i2xtoa@d+5,i2xtoa@n+5
 17575  003352  C026  F03F         	movff	i2xtoa@d+6,i2xtoa@n+6
 17576  003356  C027  F040         	movff	i2xtoa@d+7,i2xtoa@n+7
 17577  00335A                     
 17578                           ; BSR set to: 0
 17579                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 17580  00335A  0E00               	movlw	0
 17581  00335C  6E42               	movwf	(i2xtoa@i+1)^0,c
 17582  00335E  0E1F               	movlw	31
 17583  003360  6E41               	movwf	i2xtoa@i^0,c
 17584  003362                     
 17585                           ; BSR set to: 0
 17586                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 17587  003362  0E00               	movlw	0
 17588  003364  0101               	movlb	1	; () banked
 17589  003366  6F97               	movwf	(_dbuf+31)& (0+255),b
 17590                           
 17591                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17592  003368  EF69  F01A         	goto	i2l7685
 17593  00336C                     i2l7655:
 17594                           
 17595                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 17596  00336C  0641               	decf	i2xtoa@i^0,f,c
 17597  00336E  A0D8               	btfss	status,0,c
 17598  003370  0642               	decf	(i2xtoa@i+1)^0,f,c
 17599  003372                     
 17600                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 17601  003372  0E0F               	movlw	15
 17602  003374  1439               	andwf	i2xtoa@n^0,w,c
 17603  003376  6E43               	movwf	i2xtoa@c^0,c
 17604  003378  6A44               	clrf	(i2xtoa@c+1)^0,c
 17605  00337A                     
 17606                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 17607  00337A  BE44               	btfsc	(i2xtoa@c+1)^0,7,c
 17608  00337C  EFC9  F019         	goto	i2u921_41
 17609  003380  5044               	movf	(i2xtoa@c+1)^0,w,c
 17610  003382  E109               	bnz	i2u921_40
 17611  003384  0E0A               	movlw	10
 17612  003386  5C43               	subwf	i2xtoa@c^0,w,c
 17613  003388  A0D8               	btfss	status,0,c
 17614  00338A  EFC9  F019         	goto	i2u921_41
 17615  00338E  EFCB  F019         	goto	i2u921_40
 17616  003392                     i2u921_41:
 17617  003392  EFD3  F019         	goto	i2l7663
 17618  003396                     i2u921_40:
 17619  003396  0E57               	movlw	87
 17620  003398  2443               	addwf	i2xtoa@c^0,w,c
 17621  00339A  6E43               	movwf	i2xtoa@c^0,c
 17622  00339C  0E00               	movlw	0
 17623  00339E  2044               	addwfc	(i2xtoa@c+1)^0,w,c
 17624  0033A0  6E44               	movwf	(i2xtoa@c+1)^0,c
 17625  0033A2  EFD9  F019         	goto	i2l746
 17626  0033A6                     i2l7663:
 17627  0033A6  0E30               	movlw	48
 17628  0033A8  2443               	addwf	i2xtoa@c^0,w,c
 17629  0033AA  6E43               	movwf	i2xtoa@c^0,c
 17630  0033AC  0E00               	movlw	0
 17631  0033AE  2044               	addwfc	(i2xtoa@c+1)^0,w,c
 17632  0033B0  6E44               	movwf	(i2xtoa@c+1)^0,c
 17633  0033B2                     i2l746:
 17634  0033B2  0EBF               	movlw	191
 17635  0033B4  6E29               	movwf	??i2_xtoa^0,c
 17636  0033B6  0EFF               	movlw	255
 17637  0033B8  6E2A               	movwf	(??i2_xtoa+1)^0,c
 17638  0033BA  5028               	movf	i2xtoa@x^0,w,c
 17639  0033BC  6E2B               	movwf	(??i2_xtoa+2)^0,c
 17640  0033BE  6A2C               	clrf	(??i2_xtoa+3)^0,c
 17641  0033C0  5029               	movf	??i2_xtoa^0,w,c
 17642  0033C2  262B               	addwf	(??i2_xtoa+2)^0,f,c
 17643  0033C4  502A               	movf	(??i2_xtoa+1)^0,w,c
 17644  0033C6  222C               	addwfc	(??i2_xtoa+3)^0,f,c
 17645  0033C8  502C               	movf	(??i2_xtoa+3)^0,w,c
 17646  0033CA  E10A               	bnz	i2u922_40
 17647  0033CC  0E1A               	movlw	26
 17648  0033CE  5C2B               	subwf	(??i2_xtoa+2)^0,w,c
 17649  0033D0  A0D8               	btfss	status,0,c
 17650  0033D2  EFED  F019         	goto	i2u922_41
 17651  0033D6  EFF0  F019         	goto	i2u922_40
 17652  0033DA                     i2u922_41:
 17653  0033DA  0E01               	movlw	1
 17654  0033DC  EFF1  F019         	goto	i2u923_40
 17655  0033E0                     i2u922_40:
 17656  0033E0  0E00               	movlw	0
 17657  0033E2                     i2u923_40:
 17658  0033E2  6E31               	movwf	i2_xtoa$1708^0,c
 17659  0033E4  6A32               	clrf	(i2_xtoa$1708+1)^0,c
 17660  0033E6  5031               	movf	i2_xtoa$1708^0,w,c
 17661  0033E8  1032               	iorwf	(i2_xtoa$1708+1)^0,w,c
 17662  0033EA  B4D8               	btfsc	status,2,c
 17663  0033EC  EFFA  F019         	goto	i2u924_41
 17664  0033F0  EFFC  F019         	goto	i2u924_40
 17665  0033F4                     i2u924_41:
 17666  0033F4  EF2C  F01A         	goto	i2l7677
 17667  0033F8                     i2u924_40:
 17668  0033F8  0E9F               	movlw	159
 17669  0033FA  6E29               	movwf	??i2_xtoa^0,c
 17670  0033FC  0EFF               	movlw	255
 17671  0033FE  6E2A               	movwf	(??i2_xtoa+1)^0,c
 17672  003400  0E20               	movlw	32
 17673  003402  1043               	iorwf	i2xtoa@c^0,w,c
 17674  003404  6E2B               	movwf	(??i2_xtoa+2)^0,c
 17675  003406  0E00               	movlw	0
 17676  003408  1044               	iorwf	(i2xtoa@c+1)^0,w,c
 17677  00340A  6E2C               	movwf	(??i2_xtoa+3)^0,c
 17678  00340C  5029               	movf	??i2_xtoa^0,w,c
 17679  00340E  262B               	addwf	(??i2_xtoa+2)^0,f,c
 17680  003410  502A               	movf	(??i2_xtoa+1)^0,w,c
 17681  003412  222C               	addwfc	(??i2_xtoa+3)^0,f,c
 17682  003414  502C               	movf	(??i2_xtoa+3)^0,w,c
 17683  003416  E10A               	bnz	i2u925_40
 17684  003418  0E1A               	movlw	26
 17685  00341A  5C2B               	subwf	(??i2_xtoa+2)^0,w,c
 17686  00341C  A0D8               	btfss	status,0,c
 17687  00341E  EF13  F01A         	goto	i2u925_41
 17688  003422  EF16  F01A         	goto	i2u925_40
 17689  003426                     i2u925_41:
 17690  003426  0E01               	movlw	1
 17691  003428  EF17  F01A         	goto	i2u926_40
 17692  00342C                     i2u925_40:
 17693  00342C  0E00               	movlw	0
 17694  00342E                     i2u926_40:
 17695  00342E  6E33               	movwf	i2_xtoa$1709^0,c
 17696  003430  6A34               	clrf	(i2_xtoa$1709+1)^0,c
 17697  003432  5033               	movf	i2_xtoa$1709^0,w,c
 17698  003434  1034               	iorwf	(i2_xtoa$1709+1)^0,w,c
 17699  003436  B4D8               	btfsc	status,2,c
 17700  003438  EF20  F01A         	goto	i2u927_41
 17701  00343C  EF22  F01A         	goto	i2u927_40
 17702  003440                     i2u927_41:
 17703  003440  EF2C  F01A         	goto	i2l7677
 17704  003444                     i2u927_40:
 17705  003444                     
 17706                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 17707  003444  C043  F007         	movff	i2xtoa@c,i2toupper@c
 17708  003448  C044  F008         	movff	i2xtoa@c+1,i2toupper@c+1
 17709  00344C  EC6C  F02F         	call	i2_toupper	;wreg free
 17710  003450  C007  F043         	movff	?i2_toupper,i2xtoa@c
 17711  003454  C008  F044         	movff	?i2_toupper+1,i2xtoa@c+1
 17712  003458                     i2l7677:
 17713                           
 17714                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 17715  003458  0E78               	movlw	low _dbuf
 17716  00345A  2441               	addwf	i2xtoa@i^0,w,c
 17717  00345C  6ED9               	movwf	fsr2l,c
 17718  00345E  0E01               	movlw	high _dbuf
 17719  003460  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 17720  003462  6EDA               	movwf	fsr2h,c
 17721  003464  C043  FFDF         	movff	i2xtoa@c,indf2
 17722  003468                     
 17723                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 17724  003468  0635               	decf	i2xtoa@p^0,f,c
 17725  00346A  A0D8               	btfss	status,0,c
 17726  00346C  0636               	decf	(i2xtoa@p+1)^0,f,c
 17727  00346E                     
 17728                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 17729  00346E  0637               	decf	i2xtoa@w^0,f,c
 17730  003470  A0D8               	btfss	status,0,c
 17731  003472  0638               	decf	(i2xtoa@w+1)^0,f,c
 17732  003474                     
 17733                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 17734  003474  C039  F029         	movff	i2xtoa@n,??i2_xtoa
 17735  003478  C03A  F02A         	movff	i2xtoa@n+1,??i2_xtoa+1
 17736  00347C  C03B  F02B         	movff	i2xtoa@n+2,??i2_xtoa+2
 17737  003480  C03C  F02C         	movff	i2xtoa@n+3,??i2_xtoa+3
 17738  003484  C03D  F02D         	movff	i2xtoa@n+4,??i2_xtoa+4
 17739  003488  C03E  F02E         	movff	i2xtoa@n+5,??i2_xtoa+5
 17740  00348C  C03F  F02F         	movff	i2xtoa@n+6,??i2_xtoa+6
 17741  003490  C040  F030         	movff	i2xtoa@n+7,??i2_xtoa+7
 17742  003494  0E05               	movlw	5
 17743  003496  EF56  F01A         	goto	i2u928_40
 17744  00349A                     i2u928_45:
 17745  00349A  90D8               	bcf	status,0,c
 17746  00349C  3230               	rrcf	(??i2_xtoa+7)^0,f,c
 17747  00349E  322F               	rrcf	(??i2_xtoa+6)^0,f,c
 17748  0034A0  322E               	rrcf	(??i2_xtoa+5)^0,f,c
 17749  0034A2  322D               	rrcf	(??i2_xtoa+4)^0,f,c
 17750  0034A4  322C               	rrcf	(??i2_xtoa+3)^0,f,c
 17751  0034A6  322B               	rrcf	(??i2_xtoa+2)^0,f,c
 17752  0034A8  322A               	rrcf	(??i2_xtoa+1)^0,f,c
 17753  0034AA  3229               	rrcf	??i2_xtoa^0,f,c
 17754  0034AC                     i2u928_40:
 17755  0034AC  2EE8               	decfsz	wreg,f,c
 17756  0034AE  EF4D  F01A         	goto	i2u928_45
 17757  0034B2  C029  F039         	movff	??i2_xtoa,i2xtoa@n
 17758  0034B6  C02A  F03A         	movff	??i2_xtoa+1,i2xtoa@n+1
 17759  0034BA  C02B  F03B         	movff	??i2_xtoa+2,i2xtoa@n+2
 17760  0034BE  C02C  F03C         	movff	??i2_xtoa+3,i2xtoa@n+3
 17761  0034C2  C02D  F03D         	movff	??i2_xtoa+4,i2xtoa@n+4
 17762  0034C6  C02E  F03E         	movff	??i2_xtoa+5,i2xtoa@n+5
 17763  0034CA  C02F  F03F         	movff	??i2_xtoa+6,i2xtoa@n+6
 17764  0034CE  C030  F040         	movff	??i2_xtoa+7,i2xtoa@n+7
 17765  0034D2                     i2l7685:
 17766                           
 17767                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17768  0034D2  BE42               	btfsc	(i2xtoa@i+1)^0,7,c
 17769  0034D4  EF75  F01A         	goto	i2u929_41
 17770  0034D8  5042               	movf	(i2xtoa@i+1)^0,w,c
 17771  0034DA  E109               	bnz	i2u929_40
 17772  0034DC  0E02               	movlw	2
 17773  0034DE  5C41               	subwf	i2xtoa@i^0,w,c
 17774  0034E0  A0D8               	btfss	status,0,c
 17775  0034E2  EF75  F01A         	goto	i2u929_41
 17776  0034E6  EF77  F01A         	goto	i2u929_40
 17777  0034EA                     i2u929_41:
 17778  0034EA  EFA8  F01A         	goto	i2l760
 17779  0034EE                     i2u929_40:
 17780  0034EE  5039               	movf	i2xtoa@n^0,w,c
 17781  0034F0  103A               	iorwf	(i2xtoa@n+1)^0,w,c
 17782  0034F2  103B               	iorwf	(i2xtoa@n+2)^0,w,c
 17783  0034F4  103C               	iorwf	(i2xtoa@n+3)^0,w,c
 17784  0034F6  103D               	iorwf	(i2xtoa@n+4)^0,w,c
 17785  0034F8  103E               	iorwf	(i2xtoa@n+5)^0,w,c
 17786  0034FA  103F               	iorwf	(i2xtoa@n+6)^0,w,c
 17787  0034FC  1040               	iorwf	(i2xtoa@n+7)^0,w,c
 17788  0034FE  A4D8               	btfss	status,2,c
 17789  003500  EF84  F01A         	goto	i2u930_41
 17790  003504  EF86  F01A         	goto	i2u930_40
 17791  003508                     i2u930_41:
 17792  003508  EFB6  F019         	goto	i2l7655
 17793  00350C                     i2u930_40:
 17794  00350C  BE36               	btfsc	(i2xtoa@p+1)^0,7,c
 17795  00350E  EF93  F01A         	goto	i2u931_40
 17796  003512  5036               	movf	(i2xtoa@p+1)^0,w,c
 17797  003514  E106               	bnz	i2u931_41
 17798  003516  0435               	decf	i2xtoa@p^0,w,c
 17799  003518  B0D8               	btfsc	status,0,c
 17800  00351A  EF91  F01A         	goto	i2u931_41
 17801  00351E  EF93  F01A         	goto	i2u931_40
 17802  003522                     i2u931_41:
 17803  003522  EFB6  F019         	goto	i2l7655
 17804  003526                     i2u931_40:
 17805  003526  BE38               	btfsc	(i2xtoa@w+1)^0,7,c
 17806  003528  EF9E  F01A         	goto	i2u932_41
 17807  00352C  5038               	movf	(i2xtoa@w+1)^0,w,c
 17808  00352E  E108               	bnz	i2u932_40
 17809  003530  0437               	decf	i2xtoa@w^0,w,c
 17810  003532  A0D8               	btfss	status,0,c
 17811  003534  EF9E  F01A         	goto	i2u932_41
 17812  003538  EFA0  F01A         	goto	i2u932_40
 17813  00353C                     i2u932_41:
 17814  00353C  EFA8  F01A         	goto	i2l760
 17815  003540                     i2u932_40:
 17816  003540  0100               	movlb	0	; () banked
 17817  003542  B3BD               	btfsc	_flags& (0+255),1,b
 17818  003544  EFA6  F01A         	goto	i2u933_41
 17819  003548  EFA8  F01A         	goto	i2u933_40
 17820  00354C                     i2u933_41:
 17821  00354C  EFB6  F019         	goto	i2l7655
 17822  003550                     i2u933_40:
 17823  003550                     i2l760:
 17824                           
 17825                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 17826  003550  0100               	movlb	0	; () banked
 17827  003552  A9BD               	btfss	_flags& (0+255),4,b
 17828  003554  EFAE  F01A         	goto	i2u934_41
 17829  003558  EFB0  F01A         	goto	i2u934_40
 17830  00355C                     i2u934_41:
 17831  00355C  EFC6  F01A         	goto	i2l7701
 17832  003560                     i2u934_40:
 17833  003560                     
 17834                           ; BSR set to: 0
 17835                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 17836  003560  0641               	decf	i2xtoa@i^0,f,c
 17837  003562  A0D8               	btfss	status,0,c
 17838  003564  0642               	decf	(i2xtoa@i+1)^0,f,c
 17839  003566                     
 17840                           ; BSR set to: 0
 17841                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 17842  003566  0E78               	movlw	low _dbuf
 17843  003568  2441               	addwf	i2xtoa@i^0,w,c
 17844  00356A  6ED9               	movwf	fsr2l,c
 17845  00356C  0E01               	movlw	high _dbuf
 17846  00356E  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 17847  003570  6EDA               	movwf	fsr2h,c
 17848  003572  C028  FFDF         	movff	i2xtoa@x,indf2
 17849  003576                     
 17850                           ; BSR set to: 0
 17851                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 17852  003576  0641               	decf	i2xtoa@i^0,f,c
 17853  003578  A0D8               	btfss	status,0,c
 17854  00357A  0642               	decf	(i2xtoa@i+1)^0,f,c
 17855                           
 17856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 17857  00357C  0E78               	movlw	low _dbuf
 17858  00357E  2441               	addwf	i2xtoa@i^0,w,c
 17859  003580  6ED9               	movwf	fsr2l,c
 17860  003582  0E01               	movlw	high _dbuf
 17861  003584  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 17862  003586  6EDA               	movwf	fsr2h,c
 17863  003588  0E30               	movlw	48
 17864  00358A  6EDF               	movwf	indf2,c
 17865  00358C                     i2l7701:
 17866                           
 17867                           ; BSR set to: 0
 17868                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 17869  00358C  C01E  F013         	movff	i2xtoa@fp,i2pad@fp
 17870  003590  C01F  F014         	movff	i2xtoa@fp+1,i2pad@fp+1
 17871  003594  0E78               	movlw	low _dbuf
 17872  003596  2441               	addwf	i2xtoa@i^0,w,c
 17873  003598  6E15               	movwf	i2pad@buf^0,c
 17874  00359A  0E01               	movlw	high _dbuf
 17875  00359C  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 17876  00359E  6E16               	movwf	(i2pad@buf+1)^0,c
 17877  0035A0  C037  F017         	movff	i2xtoa@w,i2pad@p
 17878  0035A4  C038  F018         	movff	i2xtoa@w+1,i2pad@p+1
 17879  0035A8  ECE1  F02C         	call	i2_pad	;wreg free
 17880  0035AC  C013  F01E         	movff	?i2_pad,?i2_xtoa
 17881  0035B0  C014  F01F         	movff	?i2_pad+1,?i2_xtoa+1
 17882  0035B4  0012               	return		;funcret
 17883  0035B6                     __end_ofi2_xtoa:
 17884                           	opt callstack 0
 17885                           
 17886 ;; *************** function i2_toupper *****************
 17887 ;; Defined at:
 17888 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
 17889 ;; Parameters:    Size  Location     Type
 17890 ;;  c               2    6[COMRAM] int 
 17891 ;; Auto vars:     Size  Location     Type
 17892 ;;		None
 17893 ;; Return value:  Size  Location     Type
 17894 ;;                  2    6[COMRAM] int 
 17895 ;; Registers used:
 17896 ;;		wreg, status,2, status,0
 17897 ;; Tracked objects:
 17898 ;;		On entry : 0/0
 17899 ;;		On exit  : 0/0
 17900 ;;		Unchanged: 0/0
 17901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17902 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17903 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17904 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17905 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17906 ;;Total ram usage:        8 bytes
 17907 ;; Hardware stack levels used:    1
 17908 ;; Hardware stack levels required when called:    1
 17909 ;; This function calls:
 17910 ;;		i2_islower
 17911 ;; This function is called by:
 17912 ;;		i2_xtoa
 17913 ;; This function uses a non-reentrant model
 17914 ;;
 17915                           
 17916                           	psect	text75
 17917  005ED8                     __ptext75:
 17918                           	opt callstack 0
 17919  005ED8                     i2_toupper:
 17920                           	opt callstack 11
 17921  005ED8  0E9F               	movlw	159
 17922  005EDA  6E09               	movwf	??i2_toupper^0,c
 17923  005EDC  0EFF               	movlw	255
 17924  005EDE  6E0A               	movwf	(??i2_toupper+1)^0,c
 17925  005EE0  C007  F00B         	movff	i2toupper@c,??i2_toupper+2
 17926  005EE4  C008  F00C         	movff	i2toupper@c+1,??i2_toupper+3
 17927  005EE8  5009               	movf	??i2_toupper^0,w,c
 17928  005EEA  260B               	addwf	(??i2_toupper+2)^0,f,c
 17929  005EEC  500A               	movf	(??i2_toupper+1)^0,w,c
 17930  005EEE  220C               	addwfc	(??i2_toupper+3)^0,f,c
 17931  005EF0  500C               	movf	(??i2_toupper+3)^0,w,c
 17932  005EF2  E10A               	bnz	i2u869_40
 17933  005EF4  0E1A               	movlw	26
 17934  005EF6  5C0B               	subwf	(??i2_toupper+2)^0,w,c
 17935  005EF8  A0D8               	btfss	status,0,c
 17936  005EFA  EF81  F02F         	goto	i2u869_41
 17937  005EFE  EF84  F02F         	goto	i2u869_40
 17938  005F02                     i2u869_41:
 17939  005F02  0E01               	movlw	1
 17940  005F04  EF85  F02F         	goto	i2u870_40
 17941  005F08                     i2u869_40:
 17942  005F08  0E00               	movlw	0
 17943  005F0A                     i2u870_40:
 17944  005F0A  6E0D               	movwf	i2_toupper$2399^0,c
 17945  005F0C  6A0E               	clrf	(i2_toupper$2399+1)^0,c
 17946  005F0E  500D               	movf	i2_toupper$2399^0,w,c
 17947  005F10  100E               	iorwf	(i2_toupper$2399+1)^0,w,c
 17948  005F12  B4D8               	btfsc	status,2,c
 17949  005F14  EF8E  F02F         	goto	i2u871_41
 17950  005F18  EF90  F02F         	goto	i2u871_40
 17951  005F1C                     i2u871_41:
 17952  005F1C  EF96  F02F         	goto	i2l1636
 17953  005F20                     i2u871_40:
 17954  005F20  0E5F               	movlw	95
 17955  005F22  1407               	andwf	i2toupper@c^0,w,c
 17956  005F24  6E07               	movwf	?i2_toupper^0,c
 17957  005F26  6A08               	clrf	(?i2_toupper+1)^0,c
 17958  005F28  EF9A  F02F         	goto	i2l1641
 17959  005F2C                     i2l1636:
 17960  005F2C  C007  F007         	movff	i2toupper@c,?i2_toupper
 17961  005F30  C008  F008         	movff	i2toupper@c+1,?i2_toupper+1
 17962  005F34                     i2l1641:
 17963  005F34  0012               	return		;funcret
 17964  005F36                     __end_ofi2_toupper:
 17965                           	opt callstack 0
 17966                           
 17967 ;; *************** function i2_islower *****************
 17968 ;; Defined at:
 17969 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
 17970 ;; Parameters:    Size  Location     Type
 17971 ;;  c               2    0[COMRAM] int 
 17972 ;; Auto vars:     Size  Location     Type
 17973 ;;		None
 17974 ;; Return value:  Size  Location     Type
 17975 ;;                  2    0[COMRAM] int 
 17976 ;; Registers used:
 17977 ;;		wreg, status,2, status,0
 17978 ;; Tracked objects:
 17979 ;;		On entry : 0/0
 17980 ;;		On exit  : 0/0
 17981 ;;		Unchanged: 0/0
 17982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17983 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17985 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17986 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17987 ;;Total ram usage:        6 bytes
 17988 ;; Hardware stack levels used:    1
 17989 ;; This function calls:
 17990 ;;		Nothing
 17991 ;; This function is called by:
 17992 ;;		i2_toupper
 17993 ;; This function uses a non-reentrant model
 17994 ;;
 17995                           
 17996                           	psect	text76
 17997  0064DA                     __ptext76:
 17998                           	opt callstack 0
 17999  0064DA                     i2_islower:
 18000                           	opt callstack 11
 18001  0064DA  0E9F               	movlw	159
 18002  0064DC  6E03               	movwf	??i2_islower^0,c
 18003  0064DE  0EFF               	movlw	255
 18004  0064E0  6E04               	movwf	(??i2_islower+1)^0,c
 18005  0064E2  C001  F005         	movff	i2islower@c,??i2_islower+2
 18006  0064E6  C002  F006         	movff	i2islower@c+1,??i2_islower+3
 18007  0064EA  5003               	movf	??i2_islower^0,w,c
 18008  0064EC  2605               	addwf	(??i2_islower+2)^0,f,c
 18009  0064EE  5004               	movf	(??i2_islower+1)^0,w,c
 18010  0064F0  2206               	addwfc	(??i2_islower+3)^0,f,c
 18011  0064F2  5006               	movf	(??i2_islower+3)^0,w,c
 18012  0064F4  E10A               	bnz	i2u830_40
 18013  0064F6  0E1A               	movlw	26
 18014  0064F8  5C05               	subwf	(??i2_islower+2)^0,w,c
 18015  0064FA  A0D8               	btfss	status,0,c
 18016  0064FC  EF82  F032         	goto	i2u830_41
 18017  006500  EF85  F032         	goto	i2u830_40
 18018  006504                     i2u830_41:
 18019  006504  0E01               	movlw	1
 18020  006506  EF86  F032         	goto	i2u831_40
 18021  00650A                     i2u830_40:
 18022  00650A  0E00               	movlw	0
 18023  00650C                     i2u831_40:
 18024  00650C  6E01               	movwf	?i2_islower^0,c
 18025  00650E  6A02               	clrf	(?i2_islower+1)^0,c
 18026  006510  0012               	return		;funcret
 18027  006512                     __end_ofi2_islower:
 18028                           	opt callstack 0
 18029                           
 18030 ;; *************** function i2_isupper *****************
 18031 ;; Defined at:
 18032 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 18033 ;; Parameters:    Size  Location     Type
 18034 ;;  c               2    0[COMRAM] int 
 18035 ;; Auto vars:     Size  Location     Type
 18036 ;;		None
 18037 ;; Return value:  Size  Location     Type
 18038 ;;                  2    0[COMRAM] int 
 18039 ;; Registers used:
 18040 ;;		wreg, status,2, status,0
 18041 ;; Tracked objects:
 18042 ;;		On entry : 0/0
 18043 ;;		On exit  : 0/0
 18044 ;;		Unchanged: 0/0
 18045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18046 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18048 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18049 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18050 ;;Total ram usage:        6 bytes
 18051 ;; Hardware stack levels used:    1
 18052 ;; This function calls:
 18053 ;;		Nothing
 18054 ;; This function is called by:
 18055 ;;		i2_xtoa
 18056 ;; This function uses a non-reentrant model
 18057 ;;
 18058                           
 18059                           	psect	text77
 18060  006512                     __ptext77:
 18061                           	opt callstack 0
 18062  006512                     i2_isupper:
 18063                           	opt callstack 12
 18064  006512  0EBF               	movlw	191
 18065  006514  6E03               	movwf	??i2_isupper^0,c
 18066  006516  0EFF               	movlw	255
 18067  006518  6E04               	movwf	(??i2_isupper+1)^0,c
 18068  00651A  C001  F005         	movff	i2isupper@c,??i2_isupper+2
 18069  00651E  C002  F006         	movff	i2isupper@c+1,??i2_isupper+3
 18070  006522  5003               	movf	??i2_isupper^0,w,c
 18071  006524  2605               	addwf	(??i2_isupper+2)^0,f,c
 18072  006526  5004               	movf	(??i2_isupper+1)^0,w,c
 18073  006528  2206               	addwfc	(??i2_isupper+3)^0,f,c
 18074  00652A  5006               	movf	(??i2_isupper+3)^0,w,c
 18075  00652C  E10A               	bnz	i2u867_40
 18076  00652E  0E1A               	movlw	26
 18077  006530  5C05               	subwf	(??i2_isupper+2)^0,w,c
 18078  006532  A0D8               	btfss	status,0,c
 18079  006534  EF9E  F032         	goto	i2u867_41
 18080  006538  EFA1  F032         	goto	i2u867_40
 18081  00653C                     i2u867_41:
 18082  00653C  0E01               	movlw	1
 18083  00653E  EFA2  F032         	goto	i2u868_40
 18084  006542                     i2u867_40:
 18085  006542  0E00               	movlw	0
 18086  006544                     i2u868_40:
 18087  006544  6E01               	movwf	?i2_isupper^0,c
 18088  006546  6A02               	clrf	(?i2_isupper+1)^0,c
 18089  006548  0012               	return		;funcret
 18090  00654A                     __end_ofi2_isupper:
 18091                           	opt callstack 0
 18092                           
 18093 ;; *************** function i2_isalpha *****************
 18094 ;; Defined at:
 18095 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
 18096 ;; Parameters:    Size  Location     Type
 18097 ;;  c               2    0[COMRAM] int 
 18098 ;; Auto vars:     Size  Location     Type
 18099 ;;		None
 18100 ;; Return value:  Size  Location     Type
 18101 ;;                  2    0[COMRAM] int 
 18102 ;; Registers used:
 18103 ;;		wreg, status,2, status,0
 18104 ;; Tracked objects:
 18105 ;;		On entry : 0/0
 18106 ;;		On exit  : 0/0
 18107 ;;		Unchanged: 0/0
 18108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18109 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18111 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18112 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18113 ;;Total ram usage:        6 bytes
 18114 ;; Hardware stack levels used:    1
 18115 ;; This function calls:
 18116 ;;		Nothing
 18117 ;; This function is called by:
 18118 ;;		i2_xtoa
 18119 ;; This function uses a non-reentrant model
 18120 ;;
 18121                           
 18122                           	psect	text78
 18123  00637E                     __ptext78:
 18124                           	opt callstack 0
 18125  00637E                     i2_isalpha:
 18126                           	opt callstack 12
 18127  00637E  0E9F               	movlw	159
 18128  006380  6E03               	movwf	??i2_isalpha^0,c
 18129  006382  0EFF               	movlw	255
 18130  006384  6E04               	movwf	(??i2_isalpha+1)^0,c
 18131  006386  0E20               	movlw	32
 18132  006388  1001               	iorwf	i2isalpha@c^0,w,c
 18133  00638A  6E05               	movwf	(??i2_isalpha+2)^0,c
 18134  00638C  0E00               	movlw	0
 18135  00638E  1002               	iorwf	(i2isalpha@c+1)^0,w,c
 18136  006390  6E06               	movwf	(??i2_isalpha+3)^0,c
 18137  006392  5003               	movf	??i2_isalpha^0,w,c
 18138  006394  2605               	addwf	(??i2_isalpha+2)^0,f,c
 18139  006396  5004               	movf	(??i2_isalpha+1)^0,w,c
 18140  006398  2206               	addwfc	(??i2_isalpha+3)^0,f,c
 18141  00639A  5006               	movf	(??i2_isalpha+3)^0,w,c
 18142  00639C  E10A               	bnz	i2u861_40
 18143  00639E  0E1A               	movlw	26
 18144  0063A0  5C05               	subwf	(??i2_isalpha+2)^0,w,c
 18145  0063A2  A0D8               	btfss	status,0,c
 18146  0063A4  EFD6  F031         	goto	i2u861_41
 18147  0063A8  EFD9  F031         	goto	i2u861_40
 18148  0063AC                     i2u861_41:
 18149  0063AC  0E01               	movlw	1
 18150  0063AE  EFDA  F031         	goto	i2u862_40
 18151  0063B2                     i2u861_40:
 18152  0063B2  0E00               	movlw	0
 18153  0063B4                     i2u862_40:
 18154  0063B4  6E01               	movwf	?i2_isalpha^0,c
 18155  0063B6  6A02               	clrf	(?i2_isalpha+1)^0,c
 18156  0063B8  0012               	return		;funcret
 18157  0063BA                     __end_ofi2_isalpha:
 18158                           	opt callstack 0
 18159                           
 18160 ;; *************** function i2_utoa *****************
 18161 ;; Defined at:
 18162 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 18163 ;; Parameters:    Size  Location     Type
 18164 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 18165 ;;		 -> vsnprintf@f(6), NULL(0), 
 18166 ;;  d               8   31[COMRAM] unsigned long long 
 18167 ;; Auto vars:     Size  Location     Type
 18168 ;;  utoa            8   51[COMRAM] unsigned long long 
 18169 ;;  utoa            2   59[COMRAM] int 
 18170 ;;  utoa            2   49[COMRAM] int 
 18171 ;;  utoa            2   47[COMRAM] int 
 18172 ;; Return value:  Size  Location     Type
 18173 ;;                  2   29[COMRAM] int 
 18174 ;; Registers used:
 18175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18176 ;; Tracked objects:
 18177 ;;		On entry : 0/0
 18178 ;;		On exit  : 0/0
 18179 ;;		Unchanged: 0/0
 18180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18181 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18182 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18183 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18184 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18185 ;;Total ram usage:       32 bytes
 18186 ;; Hardware stack levels used:    1
 18187 ;; Hardware stack levels required when called:    5
 18188 ;; This function calls:
 18189 ;;		i2___lodiv
 18190 ;;		i2___lomod
 18191 ;;		i2_pad
 18192 ;; This function is called by:
 18193 ;;		i2_vfpfcnvrt
 18194 ;; This function uses a non-reentrant model
 18195 ;;
 18196                           
 18197                           	psect	text79
 18198  003C48                     __ptext79:
 18199                           	opt callstack 0
 18200  003C48                     i2_utoa:
 18201                           	opt callstack 8
 18202  003C48                     
 18203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
 18204  003C48  0100               	movlb	0	; () banked
 18205  003C4A  BFBC               	btfsc	(_prec+1)& (0+255),7,b
 18206  003C4C  EF2A  F01E         	goto	i2u911_41
 18207  003C50  EF2C  F01E         	goto	i2u911_40
 18208  003C54                     i2u911_41:
 18209  003C54  EF2D  F01E         	goto	i2l7607
 18210  003C58                     i2u911_40:
 18211  003C58                     
 18212                           ; BSR set to: 0
 18213                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
 18214  003C58  93BD               	bcf	_flags& (0+255),1,b
 18215  003C5A                     i2l7607:
 18216                           
 18217                           ; BSR set to: 0
 18218                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
 18219  003C5A  BFBC               	btfsc	(_prec+1)& (0+255),7,b
 18220  003C5C  EF3A  F01E         	goto	i2u912_40
 18221  003C60  51BC               	movf	(_prec+1)& (0+255),w,b
 18222  003C62  E106               	bnz	i2u912_41
 18223  003C64  05BB               	decf	_prec& (0+255),w,b
 18224  003C66  B0D8               	btfsc	status,0,c
 18225  003C68  EF38  F01E         	goto	i2u912_41
 18226  003C6C  EF3A  F01E         	goto	i2u912_40
 18227  003C70                     i2u912_41:
 18228  003C70  EF40  F01E         	goto	i2l722
 18229  003C74                     i2u912_40:
 18230  003C74                     
 18231                           ; BSR set to: 0
 18232  003C74  0E00               	movlw	0
 18233  003C76  6E31               	movwf	(i2utoa@p+1)^0,c
 18234  003C78  0E01               	movlw	1
 18235  003C7A  6E30               	movwf	i2utoa@p^0,c
 18236  003C7C  EF44  F01E         	goto	i2l724
 18237  003C80                     i2l722:
 18238                           
 18239                           ; BSR set to: 0
 18240  003C80  C0BB  F030         	movff	_prec,i2utoa@p
 18241  003C84  C0BC  F031         	movff	_prec+1,i2utoa@p+1
 18242  003C88                     i2l724:
 18243                           
 18244                           ; BSR set to: 0
 18245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
 18246  003C88  C0B9  F032         	movff	_width,i2utoa@w
 18247  003C8C  C0BA  F033         	movff	_width+1,i2utoa@w+1
 18248                           
 18249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
 18250  003C90  C020  F034         	movff	i2utoa@d,i2utoa@n
 18251  003C94  C021  F035         	movff	i2utoa@d+1,i2utoa@n+1
 18252  003C98  C022  F036         	movff	i2utoa@d+2,i2utoa@n+2
 18253  003C9C  C023  F037         	movff	i2utoa@d+3,i2utoa@n+3
 18254  003CA0  C024  F038         	movff	i2utoa@d+4,i2utoa@n+4
 18255  003CA4  C025  F039         	movff	i2utoa@d+5,i2utoa@n+5
 18256  003CA8  C026  F03A         	movff	i2utoa@d+6,i2utoa@n+6
 18257  003CAC  C027  F03B         	movff	i2utoa@d+7,i2utoa@n+7
 18258  003CB0                     
 18259                           ; BSR set to: 0
 18260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
 18261  003CB0  0E00               	movlw	0
 18262  003CB2  6E3D               	movwf	(i2utoa@i+1)^0,c
 18263  003CB4  0E1F               	movlw	31
 18264  003CB6  6E3C               	movwf	i2utoa@i^0,c
 18265  003CB8                     
 18266                           ; BSR set to: 0
 18267                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
 18268  003CB8  0E00               	movlw	0
 18269  003CBA  0101               	movlb	1	; () banked
 18270  003CBC  6F97               	movwf	(_dbuf+31)& (0+255),b
 18271                           
 18272                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18273  003CBE  EFD7  F01E         	goto	i2l7625
 18274  003CC2                     i2l7615:
 18275                           
 18276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
 18277  003CC2  063C               	decf	i2utoa@i^0,f,c
 18278  003CC4  A0D8               	btfss	status,0,c
 18279  003CC6  063D               	decf	(i2utoa@i+1)^0,f,c
 18280  003CC8                     
 18281                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
 18282  003CC8  0E78               	movlw	low _dbuf
 18283  003CCA  243C               	addwf	i2utoa@i^0,w,c
 18284  003CCC  6ED9               	movwf	fsr2l,c
 18285  003CCE  0E01               	movlw	high _dbuf
 18286  003CD0  203D               	addwfc	(i2utoa@i+1)^0,w,c
 18287  003CD2  6EDA               	movwf	fsr2h,c
 18288  003CD4  C034  F001         	movff	i2utoa@n,i2___lomod@dividend
 18289  003CD8  C035  F002         	movff	i2utoa@n+1,i2___lomod@dividend+1
 18290  003CDC  C036  F003         	movff	i2utoa@n+2,i2___lomod@dividend+2
 18291  003CE0  C037  F004         	movff	i2utoa@n+3,i2___lomod@dividend+3
 18292  003CE4  C038  F005         	movff	i2utoa@n+4,i2___lomod@dividend+4
 18293  003CE8  C039  F006         	movff	i2utoa@n+5,i2___lomod@dividend+5
 18294  003CEC  C03A  F007         	movff	i2utoa@n+6,i2___lomod@dividend+6
 18295  003CF0  C03B  F008         	movff	i2utoa@n+7,i2___lomod@dividend+7
 18296  003CF4  0E0A               	movlw	10
 18297  003CF6  6E09               	movwf	i2___lomod@divisor^0,c
 18298  003CF8  0E00               	movlw	0
 18299  003CFA  6E0A               	movwf	(i2___lomod@divisor+1)^0,c
 18300  003CFC  0E00               	movlw	0
 18301  003CFE  6E0B               	movwf	(i2___lomod@divisor+2)^0,c
 18302  003D00  0E00               	movlw	0
 18303  003D02  6E0C               	movwf	(i2___lomod@divisor+3)^0,c
 18304  003D04  0E00               	movlw	0
 18305  003D06  6E0D               	movwf	(i2___lomod@divisor+4)^0,c
 18306  003D08  0E00               	movlw	0
 18307  003D0A  6E0E               	movwf	(i2___lomod@divisor+5)^0,c
 18308  003D0C  0E00               	movlw	0
 18309  003D0E  6E0F               	movwf	(i2___lomod@divisor+6)^0,c
 18310  003D10  0E00               	movlw	0
 18311  003D12  6E10               	movwf	(i2___lomod@divisor+7)^0,c
 18312  003D14  EC49  F02B         	call	i2___lomod	;wreg free
 18313  003D18  C001  F028         	movff	?i2___lomod,??i2_utoa
 18314  003D1C  C002  F029         	movff	?i2___lomod+1,??i2_utoa+1
 18315  003D20  C003  F02A         	movff	?i2___lomod+2,??i2_utoa+2
 18316  003D24  C004  F02B         	movff	?i2___lomod+3,??i2_utoa+3
 18317  003D28  C005  F02C         	movff	?i2___lomod+4,??i2_utoa+4
 18318  003D2C  C006  F02D         	movff	?i2___lomod+5,??i2_utoa+5
 18319  003D30  C007  F02E         	movff	?i2___lomod+6,??i2_utoa+6
 18320  003D34  C008  F02F         	movff	?i2___lomod+7,??i2_utoa+7
 18321  003D38  5028               	movf	??i2_utoa^0,w,c
 18322  003D3A  0F30               	addlw	48
 18323  003D3C  6EDF               	movwf	indf2,c
 18324  003D3E                     
 18325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
 18326  003D3E  0630               	decf	i2utoa@p^0,f,c
 18327  003D40  A0D8               	btfss	status,0,c
 18328  003D42  0631               	decf	(i2utoa@p+1)^0,f,c
 18329  003D44                     
 18330                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
 18331  003D44  0632               	decf	i2utoa@w^0,f,c
 18332  003D46  A0D8               	btfss	status,0,c
 18333  003D48  0633               	decf	(i2utoa@w+1)^0,f,c
 18334  003D4A                     
 18335                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
 18336  003D4A  C034  F001         	movff	i2utoa@n,i2___lodiv@dividend
 18337  003D4E  C035  F002         	movff	i2utoa@n+1,i2___lodiv@dividend+1
 18338  003D52  C036  F003         	movff	i2utoa@n+2,i2___lodiv@dividend+2
 18339  003D56  C037  F004         	movff	i2utoa@n+3,i2___lodiv@dividend+3
 18340  003D5A  C038  F005         	movff	i2utoa@n+4,i2___lodiv@dividend+4
 18341  003D5E  C039  F006         	movff	i2utoa@n+5,i2___lodiv@dividend+5
 18342  003D62  C03A  F007         	movff	i2utoa@n+6,i2___lodiv@dividend+6
 18343  003D66  C03B  F008         	movff	i2utoa@n+7,i2___lodiv@dividend+7
 18344  003D6A  0E0A               	movlw	10
 18345  003D6C  6E09               	movwf	i2___lodiv@divisor^0,c
 18346  003D6E  0E00               	movlw	0
 18347  003D70  6E0A               	movwf	(i2___lodiv@divisor+1)^0,c
 18348  003D72  0E00               	movlw	0
 18349  003D74  6E0B               	movwf	(i2___lodiv@divisor+2)^0,c
 18350  003D76  0E00               	movlw	0
 18351  003D78  6E0C               	movwf	(i2___lodiv@divisor+3)^0,c
 18352  003D7A  0E00               	movlw	0
 18353  003D7C  6E0D               	movwf	(i2___lodiv@divisor+4)^0,c
 18354  003D7E  0E00               	movlw	0
 18355  003D80  6E0E               	movwf	(i2___lodiv@divisor+5)^0,c
 18356  003D82  0E00               	movlw	0
 18357  003D84  6E0F               	movwf	(i2___lodiv@divisor+6)^0,c
 18358  003D86  0E00               	movlw	0
 18359  003D88  6E10               	movwf	(i2___lodiv@divisor+7)^0,c
 18360  003D8A  EC7D  F029         	call	i2___lodiv	;wreg free
 18361  003D8E  C001  F034         	movff	?i2___lodiv,i2utoa@n
 18362  003D92  C002  F035         	movff	?i2___lodiv+1,i2utoa@n+1
 18363  003D96  C003  F036         	movff	?i2___lodiv+2,i2utoa@n+2
 18364  003D9A  C004  F037         	movff	?i2___lodiv+3,i2utoa@n+3
 18365  003D9E  C005  F038         	movff	?i2___lodiv+4,i2utoa@n+4
 18366  003DA2  C006  F039         	movff	?i2___lodiv+5,i2utoa@n+5
 18367  003DA6  C007  F03A         	movff	?i2___lodiv+6,i2utoa@n+6
 18368  003DAA  C008  F03B         	movff	?i2___lodiv+7,i2utoa@n+7
 18369  003DAE                     i2l7625:
 18370                           
 18371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18372  003DAE  503C               	movf	i2utoa@i^0,w,c
 18373  003DB0  103D               	iorwf	(i2utoa@i+1)^0,w,c
 18374  003DB2  B4D8               	btfsc	status,2,c
 18375  003DB4  EFDE  F01E         	goto	i2u913_41
 18376  003DB8  EFE0  F01E         	goto	i2u913_40
 18377  003DBC                     i2u913_41:
 18378  003DBC  EF11  F01F         	goto	i2l7635
 18379  003DC0                     i2u913_40:
 18380  003DC0  5034               	movf	i2utoa@n^0,w,c
 18381  003DC2  1035               	iorwf	(i2utoa@n+1)^0,w,c
 18382  003DC4  1036               	iorwf	(i2utoa@n+2)^0,w,c
 18383  003DC6  1037               	iorwf	(i2utoa@n+3)^0,w,c
 18384  003DC8  1038               	iorwf	(i2utoa@n+4)^0,w,c
 18385  003DCA  1039               	iorwf	(i2utoa@n+5)^0,w,c
 18386  003DCC  103A               	iorwf	(i2utoa@n+6)^0,w,c
 18387  003DCE  103B               	iorwf	(i2utoa@n+7)^0,w,c
 18388  003DD0  A4D8               	btfss	status,2,c
 18389  003DD2  EFED  F01E         	goto	i2u914_41
 18390  003DD6  EFEF  F01E         	goto	i2u914_40
 18391  003DDA                     i2u914_41:
 18392  003DDA  EF61  F01E         	goto	i2l7615
 18393  003DDE                     i2u914_40:
 18394  003DDE  BE31               	btfsc	(i2utoa@p+1)^0,7,c
 18395  003DE0  EFFC  F01E         	goto	i2u915_40
 18396  003DE4  5031               	movf	(i2utoa@p+1)^0,w,c
 18397  003DE6  E106               	bnz	i2u915_41
 18398  003DE8  0430               	decf	i2utoa@p^0,w,c
 18399  003DEA  B0D8               	btfsc	status,0,c
 18400  003DEC  EFFA  F01E         	goto	i2u915_41
 18401  003DF0  EFFC  F01E         	goto	i2u915_40
 18402  003DF4                     i2u915_41:
 18403  003DF4  EF61  F01E         	goto	i2l7615
 18404  003DF8                     i2u915_40:
 18405  003DF8  BE33               	btfsc	(i2utoa@w+1)^0,7,c
 18406  003DFA  EF07  F01F         	goto	i2u916_41
 18407  003DFE  5033               	movf	(i2utoa@w+1)^0,w,c
 18408  003E00  E108               	bnz	i2u916_40
 18409  003E02  0432               	decf	i2utoa@w^0,w,c
 18410  003E04  A0D8               	btfss	status,0,c
 18411  003E06  EF07  F01F         	goto	i2u916_41
 18412  003E0A  EF09  F01F         	goto	i2u916_40
 18413  003E0E                     i2u916_41:
 18414  003E0E  EF11  F01F         	goto	i2l7635
 18415  003E12                     i2u916_40:
 18416  003E12  0100               	movlb	0	; () banked
 18417  003E14  B3BD               	btfsc	_flags& (0+255),1,b
 18418  003E16  EF0F  F01F         	goto	i2u917_41
 18419  003E1A  EF11  F01F         	goto	i2u917_40
 18420  003E1E                     i2u917_41:
 18421  003E1E  EF61  F01E         	goto	i2l7615
 18422  003E22                     i2u917_40:
 18423  003E22                     i2l7635:
 18424                           
 18425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
 18426  003E22  C01E  F013         	movff	i2utoa@fp,i2pad@fp
 18427  003E26  C01F  F014         	movff	i2utoa@fp+1,i2pad@fp+1
 18428  003E2A  0E78               	movlw	low _dbuf
 18429  003E2C  243C               	addwf	i2utoa@i^0,w,c
 18430  003E2E  6E15               	movwf	i2pad@buf^0,c
 18431  003E30  0E01               	movlw	high _dbuf
 18432  003E32  203D               	addwfc	(i2utoa@i+1)^0,w,c
 18433  003E34  6E16               	movwf	(i2pad@buf+1)^0,c
 18434  003E36  C032  F017         	movff	i2utoa@w,i2pad@p
 18435  003E3A  C033  F018         	movff	i2utoa@w+1,i2pad@p+1
 18436  003E3E  ECE1  F02C         	call	i2_pad	;wreg free
 18437  003E42  C013  F01E         	movff	?i2_pad,?i2_utoa
 18438  003E46  C014  F01F         	movff	?i2_pad+1,?i2_utoa+1
 18439  003E4A  0012               	return		;funcret
 18440  003E4C                     __end_ofi2_utoa:
 18441                           	opt callstack 0
 18442                           
 18443 ;; *************** function i2___lomod *****************
 18444 ;; Defined at:
 18445 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
 18446 ;; Parameters:    Size  Location     Type
 18447 ;;  dividend        8    0[COMRAM] unsigned long long 
 18448 ;;  divisor         8    8[COMRAM] unsigned long long 
 18449 ;; Auto vars:     Size  Location     Type
 18450 ;;  __lomod         1   16[COMRAM] unsigned char 
 18451 ;; Return value:  Size  Location     Type
 18452 ;;                  8    0[COMRAM] unsigned long long 
 18453 ;; Registers used:
 18454 ;;		wreg, status,2, status,0
 18455 ;; Tracked objects:
 18456 ;;		On entry : 0/0
 18457 ;;		On exit  : 0/0
 18458 ;;		Unchanged: 0/0
 18459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18460 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18461 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18463 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18464 ;;Total ram usage:       17 bytes
 18465 ;; Hardware stack levels used:    1
 18466 ;; This function calls:
 18467 ;;		Nothing
 18468 ;; This function is called by:
 18469 ;;		i2_utoa
 18470 ;; This function uses a non-reentrant model
 18471 ;;
 18472                           
 18473                           	psect	text80
 18474  005692                     __ptext80:
 18475                           	opt callstack 0
 18476  005692                     i2___lomod:
 18477                           	opt callstack 12
 18478  005692  5009               	movf	i2___lomod@divisor^0,w,c
 18479  005694  100A               	iorwf	(i2___lomod@divisor+1)^0,w,c
 18480  005696  100B               	iorwf	(i2___lomod@divisor+2)^0,w,c
 18481  005698  100C               	iorwf	(i2___lomod@divisor+3)^0,w,c
 18482  00569A  100D               	iorwf	(i2___lomod@divisor+4)^0,w,c
 18483  00569C  100E               	iorwf	(i2___lomod@divisor+5)^0,w,c
 18484  00569E  100F               	iorwf	(i2___lomod@divisor+6)^0,w,c
 18485  0056A0  1010               	iorwf	(i2___lomod@divisor+7)^0,w,c
 18486  0056A2  B4D8               	btfsc	status,2,c
 18487  0056A4  EF56  F02B         	goto	i2u857_41
 18488  0056A8  EF58  F02B         	goto	i2u857_40
 18489  0056AC                     i2u857_41:
 18490  0056AC  EFA0  F02B         	goto	i2l1295
 18491  0056B0                     i2u857_40:
 18492  0056B0  0E01               	movlw	1
 18493  0056B2  6E11               	movwf	i2___lomod@counter^0,c
 18494  0056B4  EF66  F02B         	goto	i2l7367
 18495  0056B8                     i2l7365:
 18496  0056B8  90D8               	bcf	status,0,c
 18497  0056BA  3609               	rlcf	i2___lomod@divisor^0,f,c
 18498  0056BC  360A               	rlcf	(i2___lomod@divisor+1)^0,f,c
 18499  0056BE  360B               	rlcf	(i2___lomod@divisor+2)^0,f,c
 18500  0056C0  360C               	rlcf	(i2___lomod@divisor+3)^0,f,c
 18501  0056C2  360D               	rlcf	(i2___lomod@divisor+4)^0,f,c
 18502  0056C4  360E               	rlcf	(i2___lomod@divisor+5)^0,f,c
 18503  0056C6  360F               	rlcf	(i2___lomod@divisor+6)^0,f,c
 18504  0056C8  3610               	rlcf	(i2___lomod@divisor+7)^0,f,c
 18505  0056CA  2A11               	incf	i2___lomod@counter^0,f,c
 18506  0056CC                     i2l7367:
 18507  0056CC  AE10               	btfss	(i2___lomod@divisor+7)^0,7,c
 18508  0056CE  EF6B  F02B         	goto	i2u858_41
 18509  0056D2  EF6D  F02B         	goto	i2u858_40
 18510  0056D6                     i2u858_41:
 18511  0056D6  EF5C  F02B         	goto	i2l7365
 18512  0056DA                     i2u858_40:
 18513  0056DA                     i2l7369:
 18514  0056DA  5009               	movf	i2___lomod@divisor^0,w,c
 18515  0056DC  5C01               	subwf	i2___lomod@dividend^0,w,c
 18516  0056DE  500A               	movf	(i2___lomod@divisor+1)^0,w,c
 18517  0056E0  5802               	subwfb	(i2___lomod@dividend+1)^0,w,c
 18518  0056E2  500B               	movf	(i2___lomod@divisor+2)^0,w,c
 18519  0056E4  5803               	subwfb	(i2___lomod@dividend+2)^0,w,c
 18520  0056E6  500C               	movf	(i2___lomod@divisor+3)^0,w,c
 18521  0056E8  5804               	subwfb	(i2___lomod@dividend+3)^0,w,c
 18522  0056EA  500D               	movf	(i2___lomod@divisor+4)^0,w,c
 18523  0056EC  5805               	subwfb	(i2___lomod@dividend+4)^0,w,c
 18524  0056EE  500E               	movf	(i2___lomod@divisor+5)^0,w,c
 18525  0056F0  5806               	subwfb	(i2___lomod@dividend+5)^0,w,c
 18526  0056F2  500F               	movf	(i2___lomod@divisor+6)^0,w,c
 18527  0056F4  5807               	subwfb	(i2___lomod@dividend+6)^0,w,c
 18528  0056F6  5010               	movf	(i2___lomod@divisor+7)^0,w,c
 18529  0056F8  5808               	subwfb	(i2___lomod@dividend+7)^0,w,c
 18530  0056FA  A0D8               	btfss	status,0,c
 18531  0056FC  EF82  F02B         	goto	i2u859_41
 18532  005700  EF84  F02B         	goto	i2u859_40
 18533  005704                     i2u859_41:
 18534  005704  EF94  F02B         	goto	i2l7373
 18535  005708                     i2u859_40:
 18536  005708  5009               	movf	i2___lomod@divisor^0,w,c
 18537  00570A  5E01               	subwf	i2___lomod@dividend^0,f,c
 18538  00570C  500A               	movf	(i2___lomod@divisor+1)^0,w,c
 18539  00570E  5A02               	subwfb	(i2___lomod@dividend+1)^0,f,c
 18540  005710  500B               	movf	(i2___lomod@divisor+2)^0,w,c
 18541  005712  5A03               	subwfb	(i2___lomod@dividend+2)^0,f,c
 18542  005714  500C               	movf	(i2___lomod@divisor+3)^0,w,c
 18543  005716  5A04               	subwfb	(i2___lomod@dividend+3)^0,f,c
 18544  005718  500D               	movf	(i2___lomod@divisor+4)^0,w,c
 18545  00571A  5A05               	subwfb	(i2___lomod@dividend+4)^0,f,c
 18546  00571C  500E               	movf	(i2___lomod@divisor+5)^0,w,c
 18547  00571E  5A06               	subwfb	(i2___lomod@dividend+5)^0,f,c
 18548  005720  500F               	movf	(i2___lomod@divisor+6)^0,w,c
 18549  005722  5A07               	subwfb	(i2___lomod@dividend+6)^0,f,c
 18550  005724  5010               	movf	(i2___lomod@divisor+7)^0,w,c
 18551  005726  5A08               	subwfb	(i2___lomod@dividend+7)^0,f,c
 18552  005728                     i2l7373:
 18553  005728  90D8               	bcf	status,0,c
 18554  00572A  3210               	rrcf	(i2___lomod@divisor+7)^0,f,c
 18555  00572C  320F               	rrcf	(i2___lomod@divisor+6)^0,f,c
 18556  00572E  320E               	rrcf	(i2___lomod@divisor+5)^0,f,c
 18557  005730  320D               	rrcf	(i2___lomod@divisor+4)^0,f,c
 18558  005732  320C               	rrcf	(i2___lomod@divisor+3)^0,f,c
 18559  005734  320B               	rrcf	(i2___lomod@divisor+2)^0,f,c
 18560  005736  320A               	rrcf	(i2___lomod@divisor+1)^0,f,c
 18561  005738  3209               	rrcf	i2___lomod@divisor^0,f,c
 18562  00573A  2E11               	decfsz	i2___lomod@counter^0,f,c
 18563  00573C  EF6D  F02B         	goto	i2l7369
 18564  005740                     i2l1295:
 18565  005740  C001  F001         	movff	i2___lomod@dividend,?i2___lomod
 18566  005744  C002  F002         	movff	i2___lomod@dividend+1,?i2___lomod+1
 18567  005748  C003  F003         	movff	i2___lomod@dividend+2,?i2___lomod+2
 18568  00574C  C004  F004         	movff	i2___lomod@dividend+3,?i2___lomod+3
 18569  005750  C005  F005         	movff	i2___lomod@dividend+4,?i2___lomod+4
 18570  005754  C006  F006         	movff	i2___lomod@dividend+5,?i2___lomod+5
 18571  005758  C007  F007         	movff	i2___lomod@dividend+6,?i2___lomod+6
 18572  00575C  C008  F008         	movff	i2___lomod@dividend+7,?i2___lomod+7
 18573  005760  0012               	return		;funcret
 18574  005762                     __end_ofi2___lomod:
 18575                           	opt callstack 0
 18576                           
 18577 ;; *************** function i2___lodiv *****************
 18578 ;; Defined at:
 18579 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
 18580 ;; Parameters:    Size  Location     Type
 18581 ;;  dividend        8    0[COMRAM] unsigned long long 
 18582 ;;  divisor         8    8[COMRAM] unsigned long long 
 18583 ;; Auto vars:     Size  Location     Type
 18584 ;;  __lodiv         8   16[COMRAM] unsigned long long 
 18585 ;;  __lodiv         1   24[COMRAM] unsigned char 
 18586 ;; Return value:  Size  Location     Type
 18587 ;;                  8    0[COMRAM] unsigned long long 
 18588 ;; Registers used:
 18589 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18590 ;; Tracked objects:
 18591 ;;		On entry : 0/0
 18592 ;;		On exit  : 0/0
 18593 ;;		Unchanged: 0/0
 18594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18595 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18596 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18598 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18599 ;;Total ram usage:       25 bytes
 18600 ;; Hardware stack levels used:    1
 18601 ;; This function calls:
 18602 ;;		Nothing
 18603 ;; This function is called by:
 18604 ;;		i2_utoa
 18605 ;; This function uses a non-reentrant model
 18606 ;;
 18607                           
 18608                           	psect	text81
 18609  0052FA                     __ptext81:
 18610                           	opt callstack 0
 18611  0052FA                     i2___lodiv:
 18612                           	opt callstack 12
 18613  0052FA  EE20  F011         	lfsr	2,i2___lodiv@quotient
 18614  0052FE  0E07               	movlw	7
 18615  005300                     i2u853_41:
 18616  005300  6ADE               	clrf	postinc2,c
 18617  005302  06E8               	decf	wreg,f,c
 18618  005304  E2FD               	bc	i2u853_41
 18619  005306  5009               	movf	i2___lodiv@divisor^0,w,c
 18620  005308  100A               	iorwf	(i2___lodiv@divisor+1)^0,w,c
 18621  00530A  100B               	iorwf	(i2___lodiv@divisor+2)^0,w,c
 18622  00530C  100C               	iorwf	(i2___lodiv@divisor+3)^0,w,c
 18623  00530E  100D               	iorwf	(i2___lodiv@divisor+4)^0,w,c
 18624  005310  100E               	iorwf	(i2___lodiv@divisor+5)^0,w,c
 18625  005312  100F               	iorwf	(i2___lodiv@divisor+6)^0,w,c
 18626  005314  1010               	iorwf	(i2___lodiv@divisor+7)^0,w,c
 18627  005316  B4D8               	btfsc	status,2,c
 18628  005318  EF90  F029         	goto	i2u854_41
 18629  00531C  EF92  F029         	goto	i2u854_40
 18630  005320                     i2u854_41:
 18631  005320  EFE4  F029         	goto	i2l1285
 18632  005324                     i2u854_40:
 18633  005324  0E01               	movlw	1
 18634  005326  6E19               	movwf	i2___lodiv@counter^0,c
 18635  005328  EFA0  F029         	goto	i2l7347
 18636  00532C                     i2l7345:
 18637  00532C  90D8               	bcf	status,0,c
 18638  00532E  3609               	rlcf	i2___lodiv@divisor^0,f,c
 18639  005330  360A               	rlcf	(i2___lodiv@divisor+1)^0,f,c
 18640  005332  360B               	rlcf	(i2___lodiv@divisor+2)^0,f,c
 18641  005334  360C               	rlcf	(i2___lodiv@divisor+3)^0,f,c
 18642  005336  360D               	rlcf	(i2___lodiv@divisor+4)^0,f,c
 18643  005338  360E               	rlcf	(i2___lodiv@divisor+5)^0,f,c
 18644  00533A  360F               	rlcf	(i2___lodiv@divisor+6)^0,f,c
 18645  00533C  3610               	rlcf	(i2___lodiv@divisor+7)^0,f,c
 18646  00533E  2A19               	incf	i2___lodiv@counter^0,f,c
 18647  005340                     i2l7347:
 18648  005340  AE10               	btfss	(i2___lodiv@divisor+7)^0,7,c
 18649  005342  EFA5  F029         	goto	i2u855_41
 18650  005346  EFA7  F029         	goto	i2u855_40
 18651  00534A                     i2u855_41:
 18652  00534A  EF96  F029         	goto	i2l7345
 18653  00534E                     i2u855_40:
 18654  00534E                     i2l7349:
 18655  00534E  90D8               	bcf	status,0,c
 18656  005350  3611               	rlcf	i2___lodiv@quotient^0,f,c
 18657  005352  3612               	rlcf	(i2___lodiv@quotient+1)^0,f,c
 18658  005354  3613               	rlcf	(i2___lodiv@quotient+2)^0,f,c
 18659  005356  3614               	rlcf	(i2___lodiv@quotient+3)^0,f,c
 18660  005358  3615               	rlcf	(i2___lodiv@quotient+4)^0,f,c
 18661  00535A  3616               	rlcf	(i2___lodiv@quotient+5)^0,f,c
 18662  00535C  3617               	rlcf	(i2___lodiv@quotient+6)^0,f,c
 18663  00535E  3618               	rlcf	(i2___lodiv@quotient+7)^0,f,c
 18664  005360  5009               	movf	i2___lodiv@divisor^0,w,c
 18665  005362  5C01               	subwf	i2___lodiv@dividend^0,w,c
 18666  005364  500A               	movf	(i2___lodiv@divisor+1)^0,w,c
 18667  005366  5802               	subwfb	(i2___lodiv@dividend+1)^0,w,c
 18668  005368  500B               	movf	(i2___lodiv@divisor+2)^0,w,c
 18669  00536A  5803               	subwfb	(i2___lodiv@dividend+2)^0,w,c
 18670  00536C  500C               	movf	(i2___lodiv@divisor+3)^0,w,c
 18671  00536E  5804               	subwfb	(i2___lodiv@dividend+3)^0,w,c
 18672  005370  500D               	movf	(i2___lodiv@divisor+4)^0,w,c
 18673  005372  5805               	subwfb	(i2___lodiv@dividend+4)^0,w,c
 18674  005374  500E               	movf	(i2___lodiv@divisor+5)^0,w,c
 18675  005376  5806               	subwfb	(i2___lodiv@dividend+5)^0,w,c
 18676  005378  500F               	movf	(i2___lodiv@divisor+6)^0,w,c
 18677  00537A  5807               	subwfb	(i2___lodiv@dividend+6)^0,w,c
 18678  00537C  5010               	movf	(i2___lodiv@divisor+7)^0,w,c
 18679  00537E  5808               	subwfb	(i2___lodiv@dividend+7)^0,w,c
 18680  005380  A0D8               	btfss	status,0,c
 18681  005382  EFC5  F029         	goto	i2u856_41
 18682  005386  EFC7  F029         	goto	i2u856_40
 18683  00538A                     i2u856_41:
 18684  00538A  EFD8  F029         	goto	i2l7357
 18685  00538E                     i2u856_40:
 18686  00538E  5009               	movf	i2___lodiv@divisor^0,w,c
 18687  005390  5E01               	subwf	i2___lodiv@dividend^0,f,c
 18688  005392  500A               	movf	(i2___lodiv@divisor+1)^0,w,c
 18689  005394  5A02               	subwfb	(i2___lodiv@dividend+1)^0,f,c
 18690  005396  500B               	movf	(i2___lodiv@divisor+2)^0,w,c
 18691  005398  5A03               	subwfb	(i2___lodiv@dividend+2)^0,f,c
 18692  00539A  500C               	movf	(i2___lodiv@divisor+3)^0,w,c
 18693  00539C  5A04               	subwfb	(i2___lodiv@dividend+3)^0,f,c
 18694  00539E  500D               	movf	(i2___lodiv@divisor+4)^0,w,c
 18695  0053A0  5A05               	subwfb	(i2___lodiv@dividend+4)^0,f,c
 18696  0053A2  500E               	movf	(i2___lodiv@divisor+5)^0,w,c
 18697  0053A4  5A06               	subwfb	(i2___lodiv@dividend+5)^0,f,c
 18698  0053A6  500F               	movf	(i2___lodiv@divisor+6)^0,w,c
 18699  0053A8  5A07               	subwfb	(i2___lodiv@dividend+6)^0,f,c
 18700  0053AA  5010               	movf	(i2___lodiv@divisor+7)^0,w,c
 18701  0053AC  5A08               	subwfb	(i2___lodiv@dividend+7)^0,f,c
 18702  0053AE  8011               	bsf	i2___lodiv@quotient^0,0,c
 18703  0053B0                     i2l7357:
 18704  0053B0  90D8               	bcf	status,0,c
 18705  0053B2  3210               	rrcf	(i2___lodiv@divisor+7)^0,f,c
 18706  0053B4  320F               	rrcf	(i2___lodiv@divisor+6)^0,f,c
 18707  0053B6  320E               	rrcf	(i2___lodiv@divisor+5)^0,f,c
 18708  0053B8  320D               	rrcf	(i2___lodiv@divisor+4)^0,f,c
 18709  0053BA  320C               	rrcf	(i2___lodiv@divisor+3)^0,f,c
 18710  0053BC  320B               	rrcf	(i2___lodiv@divisor+2)^0,f,c
 18711  0053BE  320A               	rrcf	(i2___lodiv@divisor+1)^0,f,c
 18712  0053C0  3209               	rrcf	i2___lodiv@divisor^0,f,c
 18713  0053C2  2E19               	decfsz	i2___lodiv@counter^0,f,c
 18714  0053C4  EFA7  F029         	goto	i2l7349
 18715  0053C8                     i2l1285:
 18716  0053C8  C011  F001         	movff	i2___lodiv@quotient,?i2___lodiv
 18717  0053CC  C012  F002         	movff	i2___lodiv@quotient+1,?i2___lodiv+1
 18718  0053D0  C013  F003         	movff	i2___lodiv@quotient+2,?i2___lodiv+2
 18719  0053D4  C014  F004         	movff	i2___lodiv@quotient+3,?i2___lodiv+3
 18720  0053D8  C015  F005         	movff	i2___lodiv@quotient+4,?i2___lodiv+4
 18721  0053DC  C016  F006         	movff	i2___lodiv@quotient+5,?i2___lodiv+5
 18722  0053E0  C017  F007         	movff	i2___lodiv@quotient+6,?i2___lodiv+6
 18723  0053E4  C018  F008         	movff	i2___lodiv@quotient+7,?i2___lodiv+7
 18724  0053E8  0012               	return		;funcret
 18725  0053EA                     __end_ofi2___lodiv:
 18726                           	opt callstack 0
 18727                           
 18728 ;; *************** function i2_strncmp *****************
 18729 ;; Defined at:
 18730 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
 18731 ;; Parameters:    Size  Location     Type
 18732 ;;  _l              2    0[COMRAM] PTR const unsigned char 
 18733 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
 18734 ;;		 -> STR_4(22), STR_3(12), STR_1(13), 
 18735 ;;  _r              2    2[COMRAM] PTR const unsigned char 
 18736 ;;		 -> STR_105(3), STR_101(3), STR_96(3), STR_92(3), 
 18737 ;;		 -> STR_87(4), STR_83(4), STR_78(3), STR_73(3), 
 18738 ;;		 -> STR_68(4), STR_63(3), STR_58(3), STR_53(4), 
 18739 ;;		 -> STR_48(3), STR_43(3), STR_38(4), STR_33(3), 
 18740 ;;		 -> STR_29(3), STR_24(3), STR_20(3), STR_15(4), 
 18741 ;;		 -> STR_11(4), 
 18742 ;;  n               2    4[COMRAM] unsigned int 
 18743 ;; Auto vars:     Size  Location     Type
 18744 ;;  strncmp         2    9[COMRAM] PTR const unsigned char 
 18745 ;;		 -> STR_105(3), STR_101(3), STR_96(3), STR_92(3), 
 18746 ;;		 -> STR_87(4), STR_83(4), STR_78(3), STR_73(3), 
 18747 ;;		 -> STR_68(4), STR_63(3), STR_58(3), STR_53(4), 
 18748 ;;		 -> STR_48(3), STR_43(3), STR_38(4), STR_33(3), 
 18749 ;;		 -> STR_29(3), STR_24(3), STR_20(3), STR_15(4), 
 18750 ;;		 -> STR_11(4), 
 18751 ;;  strncmp         2    7[COMRAM] PTR const unsigned char 
 18752 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
 18753 ;;		 -> STR_4(22), STR_3(12), STR_1(13), 
 18754 ;; Return value:  Size  Location     Type
 18755 ;;                  2    0[COMRAM] int 
 18756 ;; Registers used:
 18757 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 18758 ;; Tracked objects:
 18759 ;;		On entry : 0/0
 18760 ;;		On exit  : 0/0
 18761 ;;		Unchanged: 0/0
 18762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18763 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18764 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18765 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18766 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18767 ;;Total ram usage:       11 bytes
 18768 ;; Hardware stack levels used:    1
 18769 ;; This function calls:
 18770 ;;		Nothing
 18771 ;; This function is called by:
 18772 ;;		i2_vfpfcnvrt
 18773 ;; This function uses a non-reentrant model
 18774 ;;
 18775                           
 18776                           	psect	text82
 18777  0054D6                     __ptext82:
 18778                           	opt callstack 0
 18779  0054D6                     i2_strncmp:
 18780                           	opt callstack 13
 18781  0054D6  C001  F008         	movff	i2strncmp@_l,i2strncmp@l
 18782  0054DA  C002  F009         	movff	i2strncmp@_l+1,i2strncmp@l+1
 18783  0054DE  C003  F00A         	movff	i2strncmp@_r,i2strncmp@r
 18784  0054E2  C004  F00B         	movff	i2strncmp@_r+1,i2strncmp@r+1
 18785  0054E6  0605               	decf	i2strncmp@n^0,f,c
 18786  0054E8  A0D8               	btfss	status,0,c
 18787  0054EA  0606               	decf	(i2strncmp@n+1)^0,f,c
 18788  0054EC  2805               	incf	i2strncmp@n^0,w,c
 18789  0054EE  E106               	bnz	i2u947_41
 18790  0054F0  2806               	incf	(i2strncmp@n+1)^0,w,c
 18791  0054F2  A4D8               	btfss	status,2,c
 18792  0054F4  EF7E  F02A         	goto	i2u947_41
 18793  0054F8  EF80  F02A         	goto	i2u947_40
 18794  0054FC                     i2u947_41:
 18795  0054FC  EF8D  F02A         	goto	i2l7755
 18796  005500                     i2u947_40:
 18797  005500  0E00               	movlw	0
 18798  005502  6E02               	movwf	(?i2_strncmp+1)^0,c
 18799  005504  0E00               	movlw	0
 18800  005506  6E01               	movwf	?i2_strncmp^0,c
 18801  005508  EFDF  F02A         	goto	i2l1626
 18802  00550C                     i2l7753:
 18803  00550C  4A08               	infsnz	i2strncmp@l^0,f,c
 18804  00550E  2A09               	incf	(i2strncmp@l+1)^0,f,c
 18805  005510  4A0A               	infsnz	i2strncmp@r^0,f,c
 18806  005512  2A0B               	incf	(i2strncmp@r+1)^0,f,c
 18807  005514  0605               	decf	i2strncmp@n^0,f,c
 18808  005516  A0D8               	btfss	status,0,c
 18809  005518  0606               	decf	(i2strncmp@n+1)^0,f,c
 18810  00551A                     i2l7755:
 18811  00551A  C008  FFF6         	movff	i2strncmp@l,tblptrl
 18812  00551E  C009  FFF7         	movff	i2strncmp@l+1,tblptrh
 18813  005522                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18814  005522  6AF8               	clrf	tblptru,c
 18815  005524                     	endif
 18816  005524                     	if	0	;tblptru may be non-zero
 18817  005524                     	endif
 18818  005524  0008               	tblrd		*
 18819  005526  50F5               	movf	tablat,w,c
 18820  005528  0900               	iorlw	0
 18821  00552A  B4D8               	btfsc	status,2,c
 18822  00552C  EF9A  F02A         	goto	i2u948_41
 18823  005530  EF9C  F02A         	goto	i2u948_40
 18824  005534                     i2u948_41:
 18825  005534  EFCB  F02A         	goto	i2l7763
 18826  005538                     i2u948_40:
 18827  005538  C00A  FFF6         	movff	i2strncmp@r,tblptrl
 18828  00553C  C00B  FFF7         	movff	i2strncmp@r+1,tblptrh
 18829  005540                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18830  005540  6AF8               	clrf	tblptru,c
 18831  005542                     	endif
 18832  005542                     	if	0	;tblptru may be non-zero
 18833  005542                     	endif
 18834  005542  0008               	tblrd		*
 18835  005544  50F5               	movf	tablat,w,c
 18836  005546  0900               	iorlw	0
 18837  005548  B4D8               	btfsc	status,2,c
 18838  00554A  EFA9  F02A         	goto	i2u949_41
 18839  00554E  EFAB  F02A         	goto	i2u949_40
 18840  005552                     i2u949_41:
 18841  005552  EFCB  F02A         	goto	i2l7763
 18842  005556                     i2u949_40:
 18843  005556  5005               	movf	i2strncmp@n^0,w,c
 18844  005558  1006               	iorwf	(i2strncmp@n+1)^0,w,c
 18845  00555A  B4D8               	btfsc	status,2,c
 18846  00555C  EFB2  F02A         	goto	i2u950_41
 18847  005560  EFB4  F02A         	goto	i2u950_40
 18848  005564                     i2u950_41:
 18849  005564  EFCB  F02A         	goto	i2l7763
 18850  005568                     i2u950_40:
 18851  005568  C008  FFF6         	movff	i2strncmp@l,tblptrl
 18852  00556C  C009  FFF7         	movff	i2strncmp@l+1,tblptrh
 18853  005570                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18854  005570  6AF8               	clrf	tblptru,c
 18855  005572                     	endif
 18856  005572                     	if	0	;tblptru may be non-zero
 18857  005572                     	endif
 18858  005572  0008               	tblrd		*
 18859  005574  CFF5 F007          	movff	tablat,??i2_strncmp
 18860  005578  C00A  FFF6         	movff	i2strncmp@r,tblptrl
 18861  00557C  C00B  FFF7         	movff	i2strncmp@r+1,tblptrh
 18862  005580                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18863  005580  6AF8               	clrf	tblptru,c
 18864  005582                     	endif
 18865  005582                     	if	0	;tblptru may be non-zero
 18866  005582                     	endif
 18867  005582  0008               	tblrd		*
 18868  005584  50F5               	movf	tablat,w,c
 18869  005586  1807               	xorwf	??i2_strncmp^0,w,c
 18870  005588  B4D8               	btfsc	status,2,c
 18871  00558A  EFC9  F02A         	goto	i2u951_41
 18872  00558E  EFCB  F02A         	goto	i2u951_40
 18873  005592                     i2u951_41:
 18874  005592  EF86  F02A         	goto	i2l7753
 18875  005596                     i2u951_40:
 18876  005596                     i2l7763:
 18877  005596  C008  FFF6         	movff	i2strncmp@l,tblptrl
 18878  00559A  C009  FFF7         	movff	i2strncmp@l+1,tblptrh
 18879  00559E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18880  00559E  6AF8               	clrf	tblptru,c
 18881  0055A0                     	endif
 18882  0055A0                     	if	0	;tblptru may be non-zero
 18883  0055A0                     	endif
 18884  0055A0  0008               	tblrd		*
 18885  0055A2  CFF5 F007          	movff	tablat,??i2_strncmp
 18886  0055A6  C00A  FFF6         	movff	i2strncmp@r,tblptrl
 18887  0055AA  C00B  FFF7         	movff	i2strncmp@r+1,tblptrh
 18888  0055AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18889  0055AE  6AF8               	clrf	tblptru,c
 18890  0055B0                     	endif
 18891  0055B0                     	if	0	;tblptru may be non-zero
 18892  0055B0                     	endif
 18893  0055B0  0008               	tblrd		*
 18894  0055B2  50F5               	movf	tablat,w,c
 18895  0055B4  5C07               	subwf	??i2_strncmp^0,w,c
 18896  0055B6  6E01               	movwf	?i2_strncmp^0,c
 18897  0055B8  6A02               	clrf	(?i2_strncmp+1)^0,c
 18898  0055BA  A0D8               	btfss	status,0,c
 18899  0055BC  0602               	decf	(?i2_strncmp+1)^0,f,c
 18900  0055BE                     i2l1626:
 18901  0055BE  0012               	return		;funcret
 18902  0055C0                     __end_ofi2_strncmp:
 18903                           	opt callstack 0
 18904                           
 18905 ;; *************** function i2_stoa *****************
 18906 ;; Defined at:
 18907 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 18908 ;; Parameters:    Size  Location     Type
 18909 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 18910 ;;		 -> vsnprintf@f(6), NULL(0), 
 18911 ;;  s               2   13[COMRAM] PTR unsigned char 
 18912 ;;		 -> ?_snprintf(2), ?_printf(2), 
 18913 ;; Auto vars:     Size  Location     Type
 18914 ;;  stoa            7   16[COMRAM] unsigned char [7]
 18915 ;;  stoa            2   31[COMRAM] int 
 18916 ;;  stoa            2   29[COMRAM] int 
 18917 ;;  stoa            2   27[COMRAM] PTR unsigned char 
 18918 ;;		 -> i2stoa@nuls(7), ?_snprintf(2), ?_printf(2), stoa@nuls(7), 
 18919 ;;  stoa            2   25[COMRAM] int 
 18920 ;;  stoa            2   23[COMRAM] int 
 18921 ;; Return value:  Size  Location     Type
 18922 ;;                  2   11[COMRAM] int 
 18923 ;; Registers used:
 18924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18925 ;; Tracked objects:
 18926 ;;		On entry : 0/0
 18927 ;;		On exit  : 0/0
 18928 ;;		Unchanged: 0/0
 18929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18930 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18931 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18932 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18933 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18934 ;;Total ram usage:       22 bytes
 18935 ;; Hardware stack levels used:    1
 18936 ;; Hardware stack levels required when called:    3
 18937 ;; This function calls:
 18938 ;;		i2_fputc
 18939 ;;		i2_strlen
 18940 ;; This function is called by:
 18941 ;;		i2_vfpfcnvrt
 18942 ;; This function uses a non-reentrant model
 18943 ;;
 18944                           
 18945                           	psect	text83
 18946  0048DA                     __ptext83:
 18947                           	opt callstack 0
 18948  0048DA                     i2_stoa:
 18949                           	opt callstack 10
 18950  0048DA                     
 18951                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
 18952  0048DA  EE20  F0CC         	lfsr	2,stoa@F1152
 18953  0048DE  EE10  F011         	lfsr	1,i2stoa@nuls
 18954  0048E2  0E06               	movlw	6
 18955  0048E4                     i2u902_41:
 18956  0048E4  CFDB FFE3          	movff	plusw2,plusw1
 18957  0048E8  06E8               	decf	wreg,f,c
 18958  0048EA  E2FC               	bc	i2u902_41
 18959  0048EC                     
 18960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
 18961  0048EC  C00E  F01C         	movff	i2stoa@s,i2stoa@cp
 18962  0048F0  C00F  F01D         	movff	i2stoa@s+1,i2stoa@cp+1
 18963  0048F4                     
 18964                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
 18965  0048F4  501C               	movf	i2stoa@cp^0,w,c
 18966  0048F6  101D               	iorwf	(i2stoa@cp+1)^0,w,c
 18967  0048F8  A4D8               	btfss	status,2,c
 18968  0048FA  EF81  F024         	goto	i2u903_41
 18969  0048FE  EF83  F024         	goto	i2u903_40
 18970  004902                     i2u903_41:
 18971  004902  EF87  F024         	goto	i2l7569
 18972  004906                     i2u903_40:
 18973  004906                     
 18974                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
 18975  004906  0E11               	movlw	low i2stoa@nuls
 18976  004908  6E1C               	movwf	i2stoa@cp^0,c
 18977  00490A  0E00               	movlw	high i2stoa@nuls
 18978  00490C  6E1D               	movwf	(i2stoa@cp+1)^0,c
 18979  00490E                     i2l7569:
 18980                           
 18981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
 18982  00490E  C01C  F001         	movff	i2stoa@cp,i2strlen@s
 18983  004912  C01D  F002         	movff	i2stoa@cp+1,i2strlen@s+1
 18984  004916  ECC1  F032         	call	i2_strlen	;wreg free
 18985  00491A  C001  F020         	movff	?i2_strlen,i2stoa@l
 18986  00491E  C002  F021         	movff	?i2_strlen+1,i2stoa@l+1
 18987  004922                     
 18988                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
 18989  004922  C0BB  F01E         	movff	_prec,i2stoa@p
 18990  004926  C0BC  F01F         	movff	_prec+1,i2stoa@p+1
 18991  00492A                     
 18992                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
 18993  00492A  BE1F               	btfsc	(i2stoa@p+1)^0,7,c
 18994  00492C  EF9A  F024         	goto	i2u904_41
 18995  004930  EF9C  F024         	goto	i2u904_40
 18996  004934                     i2u904_41:
 18997  004934  EFB1  F024         	goto	i2l703
 18998  004938                     i2u904_40:
 18999  004938  5020               	movf	i2stoa@l^0,w,c
 19000  00493A  5C1E               	subwf	i2stoa@p^0,w,c
 19001  00493C  501F               	movf	(i2stoa@p+1)^0,w,c
 19002  00493E  0A80               	xorlw	128
 19003  004940  6E10               	movwf	??i2_stoa^0,c
 19004  004942  5021               	movf	(i2stoa@l+1)^0,w,c
 19005  004944  0A80               	xorlw	128
 19006  004946  5810               	subwfb	??i2_stoa^0,w,c
 19007  004948  A0D8               	btfss	status,0,c
 19008  00494A  EFA9  F024         	goto	i2u905_41
 19009  00494E  EFAB  F024         	goto	i2u905_40
 19010  004952                     i2u905_41:
 19011  004952  EFAD  F024         	goto	i2l701
 19012  004956                     i2u905_40:
 19013  004956  EFB1  F024         	goto	i2l703
 19014  00495A                     i2l701:
 19015  00495A  C01E  F020         	movff	i2stoa@p,i2stoa@l
 19016  00495E  C01F  F021         	movff	i2stoa@p+1,i2stoa@l+1
 19017  004962                     i2l703:
 19018                           
 19019                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
 19020  004962  C020  F01E         	movff	i2stoa@l,i2stoa@p
 19021  004966  C021  F01F         	movff	i2stoa@l+1,i2stoa@p+1
 19022                           
 19023                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
 19024  00496A  C0B9  F01A         	movff	_width,i2stoa@w
 19025  00496E  C0BA  F01B         	movff	_width+1,i2stoa@w+1
 19026                           
 19027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
 19028  004972  0100               	movlb	0	; () banked
 19029  004974  B1BD               	btfsc	_flags& (0+255),0,b
 19030  004976  EFBF  F024         	goto	i2u906_41
 19031  00497A  EFC1  F024         	goto	i2u906_40
 19032  00497E                     i2u906_41:
 19033  00497E  EFDE  F024         	goto	i2l7585
 19034  004982                     i2u906_40:
 19035  004982  EFCF  F024         	goto	i2l7583
 19036  004986                     i2l7579:
 19037                           
 19038                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
 19039  004986  0E00               	movlw	0
 19040  004988  6E04               	movwf	(i2fputc@c+1)^0,c
 19041  00498A  0E20               	movlw	32
 19042  00498C  6E03               	movwf	i2fputc@c^0,c
 19043  00498E  C00C  F005         	movff	i2stoa@fp,i2fputc@fp
 19044  004992  C00D  F006         	movff	i2stoa@fp+1,i2fputc@fp+1
 19045  004996  EC7C  F02C         	call	i2_fputc	;wreg free
 19046  00499A                     
 19047                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
 19048  00499A  4A20               	infsnz	i2stoa@l^0,f,c
 19049  00499C  2A21               	incf	(i2stoa@l+1)^0,f,c
 19050  00499E                     i2l7583:
 19051                           
 19052                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
 19053  00499E  501A               	movf	i2stoa@w^0,w,c
 19054  0049A0  5C20               	subwf	i2stoa@l^0,w,c
 19055  0049A2  5021               	movf	(i2stoa@l+1)^0,w,c
 19056  0049A4  0A80               	xorlw	128
 19057  0049A6  6E10               	movwf	??i2_stoa^0,c
 19058  0049A8  501B               	movf	(i2stoa@w+1)^0,w,c
 19059  0049AA  0A80               	xorlw	128
 19060  0049AC  5810               	subwfb	??i2_stoa^0,w,c
 19061  0049AE  A0D8               	btfss	status,0,c
 19062  0049B0  EFDC  F024         	goto	i2u907_41
 19063  0049B4  EFDE  F024         	goto	i2u907_40
 19064  0049B8                     i2u907_41:
 19065  0049B8  EFC3  F024         	goto	i2l7579
 19066  0049BC                     i2u907_40:
 19067  0049BC                     i2l7585:
 19068                           
 19069                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
 19070  0049BC  0E00               	movlw	0
 19071  0049BE  6E19               	movwf	(i2stoa@i+1)^0,c
 19072  0049C0  0E00               	movlw	0
 19073  0049C2  6E18               	movwf	i2stoa@i^0,c
 19074                           
 19075                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 19076  0049C4  EFF7  F024         	goto	i2l7593
 19077  0049C8                     i2l7587:
 19078                           
 19079                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
 19080  0049C8  C01C  FFD9         	movff	i2stoa@cp,fsr2l
 19081  0049CC  C01D  FFDA         	movff	i2stoa@cp+1,fsr2h
 19082  0049D0  50DF               	movf	indf2,w,c
 19083  0049D2  6E10               	movwf	??i2_stoa^0,c
 19084  0049D4  5010               	movf	??i2_stoa^0,w,c
 19085  0049D6  6E03               	movwf	i2fputc@c^0,c
 19086  0049D8  6A04               	clrf	(i2fputc@c+1)^0,c
 19087  0049DA  C00C  F005         	movff	i2stoa@fp,i2fputc@fp
 19088  0049DE  C00D  F006         	movff	i2stoa@fp+1,i2fputc@fp+1
 19089  0049E2  EC7C  F02C         	call	i2_fputc	;wreg free
 19090  0049E6                     
 19091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
 19092  0049E6  4A1C               	infsnz	i2stoa@cp^0,f,c
 19093  0049E8  2A1D               	incf	(i2stoa@cp+1)^0,f,c
 19094  0049EA                     
 19095                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
 19096  0049EA  4A18               	infsnz	i2stoa@i^0,f,c
 19097  0049EC  2A19               	incf	(i2stoa@i+1)^0,f,c
 19098  0049EE                     i2l7593:
 19099                           
 19100                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 19101  0049EE  501E               	movf	i2stoa@p^0,w,c
 19102  0049F0  5C18               	subwf	i2stoa@i^0,w,c
 19103  0049F2  5019               	movf	(i2stoa@i+1)^0,w,c
 19104  0049F4  0A80               	xorlw	128
 19105  0049F6  6E10               	movwf	??i2_stoa^0,c
 19106  0049F8  501F               	movf	(i2stoa@p+1)^0,w,c
 19107  0049FA  0A80               	xorlw	128
 19108  0049FC  5810               	subwfb	??i2_stoa^0,w,c
 19109  0049FE  A0D8               	btfss	status,0,c
 19110  004A00  EF04  F025         	goto	i2u908_41
 19111  004A04  EF06  F025         	goto	i2u908_40
 19112  004A08                     i2u908_41:
 19113  004A08  EFE4  F024         	goto	i2l7587
 19114  004A0C                     i2u908_40:
 19115  004A0C                     
 19116                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
 19117  004A0C  0100               	movlb	0	; () banked
 19118  004A0E  A1BD               	btfss	_flags& (0+255),0,b
 19119  004A10  EF0C  F025         	goto	i2u909_41
 19120  004A14  EF0E  F025         	goto	i2u909_40
 19121  004A18                     i2u909_41:
 19122  004A18  EF2B  F025         	goto	i2l713
 19123  004A1C                     i2u909_40:
 19124  004A1C  EF1C  F025         	goto	i2l7601
 19125  004A20                     i2l7597:
 19126                           
 19127                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
 19128  004A20  0E00               	movlw	0
 19129  004A22  6E04               	movwf	(i2fputc@c+1)^0,c
 19130  004A24  0E20               	movlw	32
 19131  004A26  6E03               	movwf	i2fputc@c^0,c
 19132  004A28  C00C  F005         	movff	i2stoa@fp,i2fputc@fp
 19133  004A2C  C00D  F006         	movff	i2stoa@fp+1,i2fputc@fp+1
 19134  004A30  EC7C  F02C         	call	i2_fputc	;wreg free
 19135  004A34                     
 19136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
 19137  004A34  4A20               	infsnz	i2stoa@l^0,f,c
 19138  004A36  2A21               	incf	(i2stoa@l+1)^0,f,c
 19139  004A38                     i2l7601:
 19140                           
 19141                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
 19142  004A38  501A               	movf	i2stoa@w^0,w,c
 19143  004A3A  5C20               	subwf	i2stoa@l^0,w,c
 19144  004A3C  5021               	movf	(i2stoa@l+1)^0,w,c
 19145  004A3E  0A80               	xorlw	128
 19146  004A40  6E10               	movwf	??i2_stoa^0,c
 19147  004A42  501B               	movf	(i2stoa@w+1)^0,w,c
 19148  004A44  0A80               	xorlw	128
 19149  004A46  5810               	subwfb	??i2_stoa^0,w,c
 19150  004A48  A0D8               	btfss	status,0,c
 19151  004A4A  EF29  F025         	goto	i2u910_41
 19152  004A4E  EF2B  F025         	goto	i2u910_40
 19153  004A52                     i2u910_41:
 19154  004A52  EF10  F025         	goto	i2l7597
 19155  004A56                     i2u910_40:
 19156  004A56                     i2l713:
 19157                           
 19158                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
 19159  004A56  C020  F00C         	movff	i2stoa@l,?i2_stoa
 19160  004A5A  C021  F00D         	movff	i2stoa@l+1,?i2_stoa+1
 19161  004A5E  0012               	return		;funcret
 19162  004A60                     __end_ofi2_stoa:
 19163                           	opt callstack 0
 19164                           
 19165 ;; *************** function i2_otoa *****************
 19166 ;; Defined at:
 19167 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 19168 ;; Parameters:    Size  Location     Type
 19169 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 19170 ;;		 -> vsnprintf@f(6), NULL(0), 
 19171 ;;  d               8   31[COMRAM] unsigned long long 
 19172 ;; Auto vars:     Size  Location     Type
 19173 ;;  otoa            8   53[COMRAM] unsigned long long 
 19174 ;;  otoa            2   61[COMRAM] int 
 19175 ;;  otoa            2   51[COMRAM] int 
 19176 ;;  otoa            2   49[COMRAM] int 
 19177 ;;  otoa            2   47[COMRAM] int 
 19178 ;; Return value:  Size  Location     Type
 19179 ;;                  2   29[COMRAM] int 
 19180 ;; Registers used:
 19181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19182 ;; Tracked objects:
 19183 ;;		On entry : 0/0
 19184 ;;		On exit  : 0/0
 19185 ;;		Unchanged: 0/0
 19186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19187 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19188 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19189 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19190 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19191 ;;Total ram usage:       34 bytes
 19192 ;; Hardware stack levels used:    1
 19193 ;; Hardware stack levels required when called:    5
 19194 ;; This function calls:
 19195 ;;		i2_pad
 19196 ;; This function is called by:
 19197 ;;		i2_vfpfcnvrt
 19198 ;; This function uses a non-reentrant model
 19199 ;;
 19200                           
 19201                           	psect	text84
 19202  00424C                     __ptext84:
 19203                           	opt callstack 0
 19204  00424C                     i2_otoa:
 19205                           	opt callstack 8
 19206  00424C                     
 19207                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
 19208  00424C  0100               	movlb	0	; () banked
 19209  00424E  BFBC               	btfsc	(_prec+1)& (0+255),7,b
 19210  004250  EF2C  F021         	goto	i2u892_41
 19211  004254  EF2E  F021         	goto	i2u892_40
 19212  004258                     i2u892_41:
 19213  004258  EF2F  F021         	goto	i2l7517
 19214  00425C                     i2u892_40:
 19215  00425C                     
 19216                           ; BSR set to: 0
 19217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
 19218  00425C  93BD               	bcf	_flags& (0+255),1,b
 19219  00425E                     i2l7517:
 19220                           
 19221                           ; BSR set to: 0
 19222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
 19223  00425E  BFBC               	btfsc	(_prec+1)& (0+255),7,b
 19224  004260  EF3C  F021         	goto	i2u893_40
 19225  004264  51BC               	movf	(_prec+1)& (0+255),w,b
 19226  004266  E106               	bnz	i2u893_41
 19227  004268  05BB               	decf	_prec& (0+255),w,b
 19228  00426A  B0D8               	btfsc	status,0,c
 19229  00426C  EF3A  F021         	goto	i2u893_41
 19230  004270  EF3C  F021         	goto	i2u893_40
 19231  004274                     i2u893_41:
 19232  004274  EF42  F021         	goto	i2l683
 19233  004278                     i2u893_40:
 19234  004278                     
 19235                           ; BSR set to: 0
 19236  004278  0E00               	movlw	0
 19237  00427A  6E31               	movwf	(i2otoa@p+1)^0,c
 19238  00427C  0E01               	movlw	1
 19239  00427E  6E30               	movwf	i2otoa@p^0,c
 19240  004280  EF46  F021         	goto	i2l685
 19241  004284                     i2l683:
 19242                           
 19243                           ; BSR set to: 0
 19244  004284  C0BB  F030         	movff	_prec,i2otoa@p
 19245  004288  C0BC  F031         	movff	_prec+1,i2otoa@p+1
 19246  00428C                     i2l685:
 19247                           
 19248                           ; BSR set to: 0
 19249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
 19250  00428C  C0B9  F034         	movff	_width,i2otoa@w
 19251  004290  C0BA  F035         	movff	_width+1,i2otoa@w+1
 19252                           
 19253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
 19254  004294  C020  F036         	movff	i2otoa@d,i2otoa@n
 19255  004298  C021  F037         	movff	i2otoa@d+1,i2otoa@n+1
 19256  00429C  C022  F038         	movff	i2otoa@d+2,i2otoa@n+2
 19257  0042A0  C023  F039         	movff	i2otoa@d+3,i2otoa@n+3
 19258  0042A4  C024  F03A         	movff	i2otoa@d+4,i2otoa@n+4
 19259  0042A8  C025  F03B         	movff	i2otoa@d+5,i2otoa@n+5
 19260  0042AC  C026  F03C         	movff	i2otoa@d+6,i2otoa@n+6
 19261  0042B0  C027  F03D         	movff	i2otoa@d+7,i2otoa@n+7
 19262  0042B4                     
 19263                           ; BSR set to: 0
 19264                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
 19265  0042B4  0E00               	movlw	0
 19266  0042B6  6E3F               	movwf	(i2otoa@i+1)^0,c
 19267  0042B8  0E1F               	movlw	31
 19268  0042BA  6E3E               	movwf	i2otoa@i^0,c
 19269  0042BC                     
 19270                           ; BSR set to: 0
 19271                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
 19272  0042BC  0E00               	movlw	0
 19273  0042BE  0101               	movlb	1	; () banked
 19274  0042C0  6F97               	movwf	(_dbuf+31)& (0+255),b
 19275  0042C2                     
 19276                           ; BSR set to: 1
 19277                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
 19278  0042C2  0E00               	movlw	0
 19279  0042C4  6E33               	movwf	(i2otoa@t+1)^0,c
 19280  0042C6  0E00               	movlw	0
 19281  0042C8  6E32               	movwf	i2otoa@t^0,c
 19282                           
 19283                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19284  0042CA  EFAC  F021         	goto	i2l7539
 19285  0042CE                     i2l7527:
 19286                           
 19287                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
 19288  0042CE  063E               	decf	i2otoa@i^0,f,c
 19289  0042D0  A0D8               	btfss	status,0,c
 19290  0042D2  063F               	decf	(i2otoa@i+1)^0,f,c
 19291  0042D4                     
 19292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
 19293  0042D4  0E07               	movlw	7
 19294  0042D6  1436               	andwf	i2otoa@n^0,w,c
 19295  0042D8  6E32               	movwf	i2otoa@t^0,c
 19296  0042DA  6A33               	clrf	(i2otoa@t+1)^0,c
 19297  0042DC                     
 19298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
 19299  0042DC  0E78               	movlw	low _dbuf
 19300  0042DE  243E               	addwf	i2otoa@i^0,w,c
 19301  0042E0  6ED9               	movwf	fsr2l,c
 19302  0042E2  0E01               	movlw	high _dbuf
 19303  0042E4  203F               	addwfc	(i2otoa@i+1)^0,w,c
 19304  0042E6  6EDA               	movwf	fsr2h,c
 19305  0042E8  5032               	movf	i2otoa@t^0,w,c
 19306  0042EA  0F30               	addlw	48
 19307  0042EC  6EDF               	movwf	indf2,c
 19308  0042EE                     
 19309                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
 19310  0042EE  0630               	decf	i2otoa@p^0,f,c
 19311  0042F0  A0D8               	btfss	status,0,c
 19312  0042F2  0631               	decf	(i2otoa@p+1)^0,f,c
 19313  0042F4                     
 19314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
 19315  0042F4  0634               	decf	i2otoa@w^0,f,c
 19316  0042F6  A0D8               	btfss	status,0,c
 19317  0042F8  0635               	decf	(i2otoa@w+1)^0,f,c
 19318  0042FA                     
 19319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
 19320  0042FA  C036  F028         	movff	i2otoa@n,??i2_otoa
 19321  0042FE  C037  F029         	movff	i2otoa@n+1,??i2_otoa+1
 19322  004302  C038  F02A         	movff	i2otoa@n+2,??i2_otoa+2
 19323  004306  C039  F02B         	movff	i2otoa@n+3,??i2_otoa+3
 19324  00430A  C03A  F02C         	movff	i2otoa@n+4,??i2_otoa+4
 19325  00430E  C03B  F02D         	movff	i2otoa@n+5,??i2_otoa+5
 19326  004312  C03C  F02E         	movff	i2otoa@n+6,??i2_otoa+6
 19327  004316  C03D  F02F         	movff	i2otoa@n+7,??i2_otoa+7
 19328  00431A  0E04               	movlw	4
 19329  00431C  EF99  F021         	goto	i2u894_40
 19330  004320                     i2u894_45:
 19331  004320  90D8               	bcf	status,0,c
 19332  004322  322F               	rrcf	(??i2_otoa+7)^0,f,c
 19333  004324  322E               	rrcf	(??i2_otoa+6)^0,f,c
 19334  004326  322D               	rrcf	(??i2_otoa+5)^0,f,c
 19335  004328  322C               	rrcf	(??i2_otoa+4)^0,f,c
 19336  00432A  322B               	rrcf	(??i2_otoa+3)^0,f,c
 19337  00432C  322A               	rrcf	(??i2_otoa+2)^0,f,c
 19338  00432E  3229               	rrcf	(??i2_otoa+1)^0,f,c
 19339  004330  3228               	rrcf	??i2_otoa^0,f,c
 19340  004332                     i2u894_40:
 19341  004332  2EE8               	decfsz	wreg,f,c
 19342  004334  EF90  F021         	goto	i2u894_45
 19343  004338  C028  F036         	movff	??i2_otoa,i2otoa@n
 19344  00433C  C029  F037         	movff	??i2_otoa+1,i2otoa@n+1
 19345  004340  C02A  F038         	movff	??i2_otoa+2,i2otoa@n+2
 19346  004344  C02B  F039         	movff	??i2_otoa+3,i2otoa@n+3
 19347  004348  C02C  F03A         	movff	??i2_otoa+4,i2otoa@n+4
 19348  00434C  C02D  F03B         	movff	??i2_otoa+5,i2otoa@n+5
 19349  004350  C02E  F03C         	movff	??i2_otoa+6,i2otoa@n+6
 19350  004354  C02F  F03D         	movff	??i2_otoa+7,i2otoa@n+7
 19351  004358                     i2l7539:
 19352                           
 19353                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19354  004358  BE3F               	btfsc	(i2otoa@i+1)^0,7,c
 19355  00435A  EFB7  F021         	goto	i2u895_41
 19356  00435E  503F               	movf	(i2otoa@i+1)^0,w,c
 19357  004360  E108               	bnz	i2u895_40
 19358  004362  043E               	decf	i2otoa@i^0,w,c
 19359  004364  A0D8               	btfss	status,0,c
 19360  004366  EFB7  F021         	goto	i2u895_41
 19361  00436A  EFB9  F021         	goto	i2u895_40
 19362  00436E                     i2u895_41:
 19363  00436E  EFEA  F021         	goto	i2l692
 19364  004372                     i2u895_40:
 19365  004372  5036               	movf	i2otoa@n^0,w,c
 19366  004374  1037               	iorwf	(i2otoa@n+1)^0,w,c
 19367  004376  1038               	iorwf	(i2otoa@n+2)^0,w,c
 19368  004378  1039               	iorwf	(i2otoa@n+3)^0,w,c
 19369  00437A  103A               	iorwf	(i2otoa@n+4)^0,w,c
 19370  00437C  103B               	iorwf	(i2otoa@n+5)^0,w,c
 19371  00437E  103C               	iorwf	(i2otoa@n+6)^0,w,c
 19372  004380  103D               	iorwf	(i2otoa@n+7)^0,w,c
 19373  004382  A4D8               	btfss	status,2,c
 19374  004384  EFC6  F021         	goto	i2u896_41
 19375  004388  EFC8  F021         	goto	i2u896_40
 19376  00438C                     i2u896_41:
 19377  00438C  EF67  F021         	goto	i2l7527
 19378  004390                     i2u896_40:
 19379  004390  BE31               	btfsc	(i2otoa@p+1)^0,7,c
 19380  004392  EFD5  F021         	goto	i2u897_40
 19381  004396  5031               	movf	(i2otoa@p+1)^0,w,c
 19382  004398  E106               	bnz	i2u897_41
 19383  00439A  0430               	decf	i2otoa@p^0,w,c
 19384  00439C  B0D8               	btfsc	status,0,c
 19385  00439E  EFD3  F021         	goto	i2u897_41
 19386  0043A2  EFD5  F021         	goto	i2u897_40
 19387  0043A6                     i2u897_41:
 19388  0043A6  EF67  F021         	goto	i2l7527
 19389  0043AA                     i2u897_40:
 19390  0043AA  BE35               	btfsc	(i2otoa@w+1)^0,7,c
 19391  0043AC  EFE0  F021         	goto	i2u898_41
 19392  0043B0  5035               	movf	(i2otoa@w+1)^0,w,c
 19393  0043B2  E108               	bnz	i2u898_40
 19394  0043B4  0434               	decf	i2otoa@w^0,w,c
 19395  0043B6  A0D8               	btfss	status,0,c
 19396  0043B8  EFE0  F021         	goto	i2u898_41
 19397  0043BC  EFE2  F021         	goto	i2u898_40
 19398  0043C0                     i2u898_41:
 19399  0043C0  EFEA  F021         	goto	i2l692
 19400  0043C4                     i2u898_40:
 19401  0043C4  0100               	movlb	0	; () banked
 19402  0043C6  B3BD               	btfsc	_flags& (0+255),1,b
 19403  0043C8  EFE8  F021         	goto	i2u899_41
 19404  0043CC  EFEA  F021         	goto	i2u899_40
 19405  0043D0                     i2u899_41:
 19406  0043D0  EF67  F021         	goto	i2l7527
 19407  0043D4                     i2u899_40:
 19408  0043D4                     i2l692:
 19409                           
 19410                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
 19411  0043D4  0100               	movlb	0	; () banked
 19412  0043D6  A9BD               	btfss	_flags& (0+255),4,b
 19413  0043D8  EFF0  F021         	goto	i2u900_41
 19414  0043DC  EFF2  F021         	goto	i2u900_40
 19415  0043E0                     i2u900_41:
 19416  0043E0  EF09  F022         	goto	i2l7557
 19417  0043E4                     i2u900_40:
 19418  0043E4                     
 19419                           ; BSR set to: 0
 19420  0043E4  5032               	movf	i2otoa@t^0,w,c
 19421  0043E6  1033               	iorwf	(i2otoa@t+1)^0,w,c
 19422  0043E8  B4D8               	btfsc	status,2,c
 19423  0043EA  EFF9  F021         	goto	i2u901_41
 19424  0043EE  EFFB  F021         	goto	i2u901_40
 19425  0043F2                     i2u901_41:
 19426  0043F2  EF09  F022         	goto	i2l7557
 19427  0043F6                     i2u901_40:
 19428  0043F6                     
 19429                           ; BSR set to: 0
 19430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
 19431  0043F6  063E               	decf	i2otoa@i^0,f,c
 19432  0043F8  A0D8               	btfss	status,0,c
 19433  0043FA  063F               	decf	(i2otoa@i+1)^0,f,c
 19434  0043FC                     
 19435                           ; BSR set to: 0
 19436                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
 19437  0043FC  0E78               	movlw	low _dbuf
 19438  0043FE  243E               	addwf	i2otoa@i^0,w,c
 19439  004400  6ED9               	movwf	fsr2l,c
 19440  004402  0E01               	movlw	high _dbuf
 19441  004404  203F               	addwfc	(i2otoa@i+1)^0,w,c
 19442  004406  6EDA               	movwf	fsr2h,c
 19443  004408  0E30               	movlw	48
 19444  00440A  6EDF               	movwf	indf2,c
 19445  00440C                     
 19446                           ; BSR set to: 0
 19447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
 19448  00440C  0634               	decf	i2otoa@w^0,f,c
 19449  00440E  A0D8               	btfss	status,0,c
 19450  004410  0635               	decf	(i2otoa@w+1)^0,f,c
 19451  004412                     i2l7557:
 19452                           
 19453                           ; BSR set to: 0
 19454                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
 19455  004412  C01E  F013         	movff	i2otoa@fp,i2pad@fp
 19456  004416  C01F  F014         	movff	i2otoa@fp+1,i2pad@fp+1
 19457  00441A  0E78               	movlw	low _dbuf
 19458  00441C  243E               	addwf	i2otoa@i^0,w,c
 19459  00441E  6E15               	movwf	i2pad@buf^0,c
 19460  004420  0E01               	movlw	high _dbuf
 19461  004422  203F               	addwfc	(i2otoa@i+1)^0,w,c
 19462  004424  6E16               	movwf	(i2pad@buf+1)^0,c
 19463  004426  C034  F017         	movff	i2otoa@w,i2pad@p
 19464  00442A  C035  F018         	movff	i2otoa@w+1,i2pad@p+1
 19465  00442E  ECE1  F02C         	call	i2_pad	;wreg free
 19466  004432  C013  F01E         	movff	?i2_pad,?i2_otoa
 19467  004436  C014  F01F         	movff	?i2_pad+1,?i2_otoa+1
 19468  00443A  0012               	return		;funcret
 19469  00443C                     __end_ofi2_otoa:
 19470                           	opt callstack 0
 19471                           
 19472 ;; *************** function i2_dtoa *****************
 19473 ;; Defined at:
 19474 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 19475 ;; Parameters:    Size  Location     Type
 19476 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 19477 ;;		 -> vsnprintf@f(6), NULL(0), 
 19478 ;;  d               8   31[COMRAM] long long 
 19479 ;; Auto vars:     Size  Location     Type
 19480 ;;  dtoa            8   55[COMRAM] long long 
 19481 ;;  dtoa            2   63[COMRAM] int 
 19482 ;;  dtoa            2   53[COMRAM] int 
 19483 ;;  dtoa            2   51[COMRAM] int 
 19484 ;;  dtoa            2   49[COMRAM] int 
 19485 ;; Return value:  Size  Location     Type
 19486 ;;                  2   29[COMRAM] int 
 19487 ;; Registers used:
 19488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19489 ;; Tracked objects:
 19490 ;;		On entry : 0/0
 19491 ;;		On exit  : 0/0
 19492 ;;		Unchanged: 0/0
 19493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19494 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19495 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19496 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19497 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19498 ;;Total ram usage:       36 bytes
 19499 ;; Hardware stack levels used:    1
 19500 ;; Hardware stack levels required when called:    5
 19501 ;; This function calls:
 19502 ;;		i2___aodiv
 19503 ;;		i2___aomod
 19504 ;;		i2_abs
 19505 ;;		i2_pad
 19506 ;; This function is called by:
 19507 ;;		i2_vfpfcnvrt
 19508 ;; This function uses a non-reentrant model
 19509 ;;
 19510                           
 19511                           	psect	text85
 19512  002FF8                     __ptext85:
 19513                           	opt callstack 0
 19514  002FF8                     i2_dtoa:
 19515                           	opt callstack 8
 19516  002FF8                     
 19517                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 19518  002FF8  C020  F038         	movff	i2dtoa@d,i2dtoa@n
 19519  002FFC  C021  F039         	movff	i2dtoa@d+1,i2dtoa@n+1
 19520  003000  C022  F03A         	movff	i2dtoa@d+2,i2dtoa@n+2
 19521  003004  C023  F03B         	movff	i2dtoa@d+3,i2dtoa@n+3
 19522  003008  C024  F03C         	movff	i2dtoa@d+4,i2dtoa@n+4
 19523  00300C  C025  F03D         	movff	i2dtoa@d+5,i2dtoa@n+5
 19524  003010  C026  F03E         	movff	i2dtoa@d+6,i2dtoa@n+6
 19525  003014  C027  F03F         	movff	i2dtoa@d+7,i2dtoa@n+7
 19526  003018                     
 19527                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 19528  003018  BE3F               	btfsc	(i2dtoa@n+7)^0,7,c
 19529  00301A  EF11  F018         	goto	i2u877_41
 19530  00301E  EF14  F018         	goto	i2u877_40
 19531  003022                     i2u877_41:
 19532  003022  0E01               	movlw	1
 19533  003024  EF15  F018         	goto	i2u878_40
 19534  003028                     i2u877_40:
 19535  003028  0E00               	movlw	0
 19536  00302A                     i2u878_40:
 19537  00302A  6E36               	movwf	i2dtoa@s^0,c
 19538  00302C  6A37               	clrf	(i2dtoa@s+1)^0,c
 19539                           
 19540                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 19541  00302E  5036               	movf	i2dtoa@s^0,w,c
 19542  003030  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 19543  003032  B4D8               	btfsc	status,2,c
 19544  003034  EF1E  F018         	goto	i2u879_41
 19545  003038  EF20  F018         	goto	i2u879_40
 19546  00303C                     i2u879_41:
 19547  00303C  EF30  F018         	goto	i2l7457
 19548  003040                     i2u879_40:
 19549  003040                     
 19550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 19551  003040  1E3F               	comf	(i2dtoa@n+7)^0,f,c
 19552  003042  1E3E               	comf	(i2dtoa@n+6)^0,f,c
 19553  003044  1E3D               	comf	(i2dtoa@n+5)^0,f,c
 19554  003046  1E3C               	comf	(i2dtoa@n+4)^0,f,c
 19555  003048  1E3B               	comf	(i2dtoa@n+3)^0,f,c
 19556  00304A  1E3A               	comf	(i2dtoa@n+2)^0,f,c
 19557  00304C  1E39               	comf	(i2dtoa@n+1)^0,f,c
 19558  00304E  6C38               	negf	i2dtoa@n^0,c
 19559  003050  0E00               	movlw	0
 19560  003052  2239               	addwfc	(i2dtoa@n+1)^0,f,c
 19561  003054  223A               	addwfc	(i2dtoa@n+2)^0,f,c
 19562  003056  223B               	addwfc	(i2dtoa@n+3)^0,f,c
 19563  003058  223C               	addwfc	(i2dtoa@n+4)^0,f,c
 19564  00305A  223D               	addwfc	(i2dtoa@n+5)^0,f,c
 19565  00305C  223E               	addwfc	(i2dtoa@n+6)^0,f,c
 19566  00305E  223F               	addwfc	(i2dtoa@n+7)^0,f,c
 19567  003060                     i2l7457:
 19568                           
 19569                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 19570  003060  0100               	movlb	0	; () banked
 19571  003062  BFBC               	btfsc	(_prec+1)& (0+255),7,b
 19572  003064  EF36  F018         	goto	i2u880_41
 19573  003068  EF38  F018         	goto	i2u880_40
 19574  00306C                     i2u880_41:
 19575  00306C  EF39  F018         	goto	i2l7461
 19576  003070                     i2u880_40:
 19577  003070                     
 19578                           ; BSR set to: 0
 19579                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 19580  003070  93BD               	bcf	_flags& (0+255),1,b
 19581  003072                     i2l7461:
 19582                           
 19583                           ; BSR set to: 0
 19584                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 19585  003072  BFBC               	btfsc	(_prec+1)& (0+255),7,b
 19586  003074  EF46  F018         	goto	i2u881_40
 19587  003078  51BC               	movf	(_prec+1)& (0+255),w,b
 19588  00307A  E106               	bnz	i2u881_41
 19589  00307C  05BB               	decf	_prec& (0+255),w,b
 19590  00307E  B0D8               	btfsc	status,0,c
 19591  003080  EF44  F018         	goto	i2u881_41
 19592  003084  EF46  F018         	goto	i2u881_40
 19593  003088                     i2u881_41:
 19594  003088  EF4C  F018         	goto	i2l658
 19595  00308C                     i2u881_40:
 19596  00308C                     
 19597                           ; BSR set to: 0
 19598  00308C  0E00               	movlw	0
 19599  00308E  6E33               	movwf	(i2dtoa@p+1)^0,c
 19600  003090  0E01               	movlw	1
 19601  003092  6E32               	movwf	i2dtoa@p^0,c
 19602  003094  EF50  F018         	goto	i2l660
 19603  003098                     i2l658:
 19604                           
 19605                           ; BSR set to: 0
 19606  003098  C0BB  F032         	movff	_prec,i2dtoa@p
 19607  00309C  C0BC  F033         	movff	_prec+1,i2dtoa@p+1
 19608  0030A0                     i2l660:
 19609                           
 19610                           ; BSR set to: 0
 19611                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 19612  0030A0  C0B9  F034         	movff	_width,i2dtoa@w
 19613  0030A4  C0BA  F035         	movff	_width+1,i2dtoa@w+1
 19614  0030A8                     
 19615                           ; BSR set to: 0
 19616                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 19617  0030A8  5036               	movf	i2dtoa@s^0,w,c
 19618  0030AA  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 19619  0030AC  A4D8               	btfss	status,2,c
 19620  0030AE  EF5B  F018         	goto	i2u882_41
 19621  0030B2  EF5D  F018         	goto	i2u882_40
 19622  0030B6                     i2u882_41:
 19623  0030B6  EF64  F018         	goto	i2l7469
 19624  0030BA                     i2u882_40:
 19625  0030BA                     
 19626                           ; BSR set to: 0
 19627  0030BA  A5BD               	btfss	_flags& (0+255),2,b
 19628  0030BC  EF62  F018         	goto	i2u883_41
 19629  0030C0  EF64  F018         	goto	i2u883_40
 19630  0030C4                     i2u883_41:
 19631  0030C4  EF67  F018         	goto	i2l7471
 19632  0030C8                     i2u883_40:
 19633  0030C8                     i2l7469:
 19634                           
 19635                           ; BSR set to: 0
 19636                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 19637  0030C8  0634               	decf	i2dtoa@w^0,f,c
 19638  0030CA  A0D8               	btfss	status,0,c
 19639  0030CC  0635               	decf	(i2dtoa@w+1)^0,f,c
 19640  0030CE                     i2l7471:
 19641                           
 19642                           ; BSR set to: 0
 19643                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 19644  0030CE  0E00               	movlw	0
 19645  0030D0  6E41               	movwf	(i2dtoa@i+1)^0,c
 19646  0030D2  0E1F               	movlw	31
 19647  0030D4  6E40               	movwf	i2dtoa@i^0,c
 19648  0030D6                     
 19649                           ; BSR set to: 0
 19650                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 19651  0030D6  0E00               	movlw	0
 19652  0030D8  0101               	movlb	1	; () banked
 19653  0030DA  6F97               	movwf	(_dbuf+31)& (0+255),b
 19654                           
 19655                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19656  0030DC  EFEC  F018         	goto	i2l7485
 19657  0030E0                     i2l7475:
 19658                           
 19659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 19660  0030E0  0640               	decf	i2dtoa@i^0,f,c
 19661  0030E2  A0D8               	btfss	status,0,c
 19662  0030E4  0641               	decf	(i2dtoa@i+1)^0,f,c
 19663  0030E6                     
 19664                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 19665  0030E6  0E78               	movlw	low _dbuf
 19666  0030E8  2440               	addwf	i2dtoa@i^0,w,c
 19667  0030EA  6ED9               	movwf	fsr2l,c
 19668  0030EC  0E01               	movlw	high _dbuf
 19669  0030EE  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 19670  0030F0  6EDA               	movwf	fsr2h,c
 19671  0030F2  C038  F001         	movff	i2dtoa@n,i2___aomod@dividend
 19672  0030F6  C039  F002         	movff	i2dtoa@n+1,i2___aomod@dividend+1
 19673  0030FA  C03A  F003         	movff	i2dtoa@n+2,i2___aomod@dividend+2
 19674  0030FE  C03B  F004         	movff	i2dtoa@n+3,i2___aomod@dividend+3
 19675  003102  C03C  F005         	movff	i2dtoa@n+4,i2___aomod@dividend+4
 19676  003106  C03D  F006         	movff	i2dtoa@n+5,i2___aomod@dividend+5
 19677  00310A  C03E  F007         	movff	i2dtoa@n+6,i2___aomod@dividend+6
 19678  00310E  C03F  F008         	movff	i2dtoa@n+7,i2___aomod@dividend+7
 19679  003112  0E0A               	movlw	10
 19680  003114  6E09               	movwf	i2___aomod@divisor^0,c
 19681  003116  0E00               	movlw	0
 19682  003118  6E0A               	movwf	(i2___aomod@divisor+1)^0,c
 19683  00311A  0E00               	movlw	0
 19684  00311C  6E0B               	movwf	(i2___aomod@divisor+2)^0,c
 19685  00311E  0E00               	movlw	0
 19686  003120  6E0C               	movwf	(i2___aomod@divisor+3)^0,c
 19687  003122  0E00               	movlw	0
 19688  003124  6E0D               	movwf	(i2___aomod@divisor+4)^0,c
 19689  003126  0E00               	movlw	0
 19690  003128  6E0E               	movwf	(i2___aomod@divisor+5)^0,c
 19691  00312A  0E00               	movlw	0
 19692  00312C  6E0F               	movwf	(i2___aomod@divisor+6)^0,c
 19693  00312E  0E00               	movlw	0
 19694  003130  6E10               	movwf	(i2___aomod@divisor+7)^0,c
 19695  003132  ECA4  F026         	call	i2___aomod	;wreg free
 19696  003136  C001  F028         	movff	?i2___aomod,??i2_dtoa
 19697  00313A  C002  F029         	movff	?i2___aomod+1,??i2_dtoa+1
 19698  00313E  C003  F02A         	movff	?i2___aomod+2,??i2_dtoa+2
 19699  003142  C004  F02B         	movff	?i2___aomod+3,??i2_dtoa+3
 19700  003146  C005  F02C         	movff	?i2___aomod+4,??i2_dtoa+4
 19701  00314A  C006  F02D         	movff	?i2___aomod+5,??i2_dtoa+5
 19702  00314E  C007  F02E         	movff	?i2___aomod+6,??i2_dtoa+6
 19703  003152  C008  F02F         	movff	?i2___aomod+7,??i2_dtoa+7
 19704  003156  C028  F013         	movff	??i2_dtoa,i2abs@a
 19705  00315A  C02A  F014         	movff	??i2_dtoa+2,i2abs@a+1
 19706  00315E  EC80  F031         	call	i2_abs	;wreg free
 19707  003162  5013               	movf	?i2_abs^0,w,c
 19708  003164  0F30               	addlw	48
 19709  003166  6EDF               	movwf	indf2,c
 19710  003168                     
 19711                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 19712  003168  0632               	decf	i2dtoa@p^0,f,c
 19713  00316A  A0D8               	btfss	status,0,c
 19714  00316C  0633               	decf	(i2dtoa@p+1)^0,f,c
 19715  00316E                     
 19716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 19717  00316E  0634               	decf	i2dtoa@w^0,f,c
 19718  003170  A0D8               	btfss	status,0,c
 19719  003172  0635               	decf	(i2dtoa@w+1)^0,f,c
 19720  003174                     
 19721                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 19722  003174  C038  F001         	movff	i2dtoa@n,i2___aodiv@dividend
 19723  003178  C039  F002         	movff	i2dtoa@n+1,i2___aodiv@dividend+1
 19724  00317C  C03A  F003         	movff	i2dtoa@n+2,i2___aodiv@dividend+2
 19725  003180  C03B  F004         	movff	i2dtoa@n+3,i2___aodiv@dividend+3
 19726  003184  C03C  F005         	movff	i2dtoa@n+4,i2___aodiv@dividend+4
 19727  003188  C03D  F006         	movff	i2dtoa@n+5,i2___aodiv@dividend+5
 19728  00318C  C03E  F007         	movff	i2dtoa@n+6,i2___aodiv@dividend+6
 19729  003190  C03F  F008         	movff	i2dtoa@n+7,i2___aodiv@dividend+7
 19730  003194  0E0A               	movlw	10
 19731  003196  6E09               	movwf	i2___aodiv@divisor^0,c
 19732  003198  0E00               	movlw	0
 19733  00319A  6E0A               	movwf	(i2___aodiv@divisor+1)^0,c
 19734  00319C  0E00               	movlw	0
 19735  00319E  6E0B               	movwf	(i2___aodiv@divisor+2)^0,c
 19736  0031A0  0E00               	movlw	0
 19737  0031A2  6E0C               	movwf	(i2___aodiv@divisor+3)^0,c
 19738  0031A4  0E00               	movlw	0
 19739  0031A6  6E0D               	movwf	(i2___aodiv@divisor+4)^0,c
 19740  0031A8  0E00               	movlw	0
 19741  0031AA  6E0E               	movwf	(i2___aodiv@divisor+5)^0,c
 19742  0031AC  0E00               	movlw	0
 19743  0031AE  6E0F               	movwf	(i2___aodiv@divisor+6)^0,c
 19744  0031B0  0E00               	movlw	0
 19745  0031B2  6E10               	movwf	(i2___aodiv@divisor+7)^0,c
 19746  0031B4  ECA9  F023         	call	i2___aodiv	;wreg free
 19747  0031B8  C001  F038         	movff	?i2___aodiv,i2dtoa@n
 19748  0031BC  C002  F039         	movff	?i2___aodiv+1,i2dtoa@n+1
 19749  0031C0  C003  F03A         	movff	?i2___aodiv+2,i2dtoa@n+2
 19750  0031C4  C004  F03B         	movff	?i2___aodiv+3,i2dtoa@n+3
 19751  0031C8  C005  F03C         	movff	?i2___aodiv+4,i2dtoa@n+4
 19752  0031CC  C006  F03D         	movff	?i2___aodiv+5,i2dtoa@n+5
 19753  0031D0  C007  F03E         	movff	?i2___aodiv+6,i2dtoa@n+6
 19754  0031D4  C008  F03F         	movff	?i2___aodiv+7,i2dtoa@n+7
 19755  0031D8                     i2l7485:
 19756                           
 19757                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19758  0031D8  BE41               	btfsc	(i2dtoa@i+1)^0,7,c
 19759  0031DA  EFF7  F018         	goto	i2u884_41
 19760  0031DE  5041               	movf	(i2dtoa@i+1)^0,w,c
 19761  0031E0  E108               	bnz	i2u884_40
 19762  0031E2  0440               	decf	i2dtoa@i^0,w,c
 19763  0031E4  A0D8               	btfss	status,0,c
 19764  0031E6  EFF7  F018         	goto	i2u884_41
 19765  0031EA  EFF9  F018         	goto	i2u884_40
 19766  0031EE                     i2u884_41:
 19767  0031EE  EF2A  F019         	goto	i2l7495
 19768  0031F2                     i2u884_40:
 19769  0031F2  5038               	movf	i2dtoa@n^0,w,c
 19770  0031F4  1039               	iorwf	(i2dtoa@n+1)^0,w,c
 19771  0031F6  103A               	iorwf	(i2dtoa@n+2)^0,w,c
 19772  0031F8  103B               	iorwf	(i2dtoa@n+3)^0,w,c
 19773  0031FA  103C               	iorwf	(i2dtoa@n+4)^0,w,c
 19774  0031FC  103D               	iorwf	(i2dtoa@n+5)^0,w,c
 19775  0031FE  103E               	iorwf	(i2dtoa@n+6)^0,w,c
 19776  003200  103F               	iorwf	(i2dtoa@n+7)^0,w,c
 19777  003202  A4D8               	btfss	status,2,c
 19778  003204  EF06  F019         	goto	i2u885_41
 19779  003208  EF08  F019         	goto	i2u885_40
 19780  00320C                     i2u885_41:
 19781  00320C  EF70  F018         	goto	i2l7475
 19782  003210                     i2u885_40:
 19783  003210  BE33               	btfsc	(i2dtoa@p+1)^0,7,c
 19784  003212  EF15  F019         	goto	i2u886_40
 19785  003216  5033               	movf	(i2dtoa@p+1)^0,w,c
 19786  003218  E106               	bnz	i2u886_41
 19787  00321A  0432               	decf	i2dtoa@p^0,w,c
 19788  00321C  B0D8               	btfsc	status,0,c
 19789  00321E  EF13  F019         	goto	i2u886_41
 19790  003222  EF15  F019         	goto	i2u886_40
 19791  003226                     i2u886_41:
 19792  003226  EF70  F018         	goto	i2l7475
 19793  00322A                     i2u886_40:
 19794  00322A  BE35               	btfsc	(i2dtoa@w+1)^0,7,c
 19795  00322C  EF20  F019         	goto	i2u887_41
 19796  003230  5035               	movf	(i2dtoa@w+1)^0,w,c
 19797  003232  E108               	bnz	i2u887_40
 19798  003234  0434               	decf	i2dtoa@w^0,w,c
 19799  003236  A0D8               	btfss	status,0,c
 19800  003238  EF20  F019         	goto	i2u887_41
 19801  00323C  EF22  F019         	goto	i2u887_40
 19802  003240                     i2u887_41:
 19803  003240  EF2A  F019         	goto	i2l7495
 19804  003244                     i2u887_40:
 19805  003244  0100               	movlb	0	; () banked
 19806  003246  B3BD               	btfsc	_flags& (0+255),1,b
 19807  003248  EF28  F019         	goto	i2u888_41
 19808  00324C  EF2A  F019         	goto	i2u888_40
 19809  003250                     i2u888_41:
 19810  003250  EF70  F018         	goto	i2l7475
 19811  003254                     i2u888_40:
 19812  003254                     i2l7495:
 19813                           
 19814                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 19815  003254  5036               	movf	i2dtoa@s^0,w,c
 19816  003256  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 19817  003258  A4D8               	btfss	status,2,c
 19818  00325A  EF31  F019         	goto	i2u889_41
 19819  00325E  EF33  F019         	goto	i2u889_40
 19820  003262                     i2u889_41:
 19821  003262  EF3B  F019         	goto	i2l7499
 19822  003266                     i2u889_40:
 19823  003266  0100               	movlb	0	; () banked
 19824  003268  A5BD               	btfss	_flags& (0+255),2,b
 19825  00326A  EF39  F019         	goto	i2u890_41
 19826  00326E  EF3B  F019         	goto	i2u890_40
 19827  003272                     i2u890_41:
 19828  003272  EF59  F019         	goto	i2l7509
 19829  003276                     i2u890_40:
 19830  003276                     i2l7499:
 19831                           
 19832                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 19833  003276  0640               	decf	i2dtoa@i^0,f,c
 19834  003278  A0D8               	btfss	status,0,c
 19835  00327A  0641               	decf	(i2dtoa@i+1)^0,f,c
 19836  00327C                     
 19837                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 19838  00327C  5036               	movf	i2dtoa@s^0,w,c
 19839  00327E  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 19840  003280  A4D8               	btfss	status,2,c
 19841  003282  EF45  F019         	goto	i2u891_41
 19842  003286  EF47  F019         	goto	i2u891_40
 19843  00328A                     i2u891_41:
 19844  00328A  EF4D  F019         	goto	i2l7505
 19845  00328E                     i2u891_40:
 19846  00328E  0E00               	movlw	0
 19847  003290  6E31               	movwf	(i2_dtoa$1672+1)^0,c
 19848  003292  0E2B               	movlw	43
 19849  003294  6E30               	movwf	i2_dtoa$1672^0,c
 19850  003296  EF51  F019         	goto	i2l7507
 19851  00329A                     i2l7505:
 19852  00329A  0E00               	movlw	0
 19853  00329C  6E31               	movwf	(i2_dtoa$1672+1)^0,c
 19854  00329E  0E2D               	movlw	45
 19855  0032A0  6E30               	movwf	i2_dtoa$1672^0,c
 19856  0032A2                     i2l7507:
 19857  0032A2  0E78               	movlw	low _dbuf
 19858  0032A4  2440               	addwf	i2dtoa@i^0,w,c
 19859  0032A6  6ED9               	movwf	fsr2l,c
 19860  0032A8  0E01               	movlw	high _dbuf
 19861  0032AA  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 19862  0032AC  6EDA               	movwf	fsr2h,c
 19863  0032AE  C030  FFDF         	movff	i2_dtoa$1672,indf2
 19864  0032B2                     i2l7509:
 19865                           
 19866                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 19867  0032B2  C01E  F013         	movff	i2dtoa@fp,i2pad@fp
 19868  0032B6  C01F  F014         	movff	i2dtoa@fp+1,i2pad@fp+1
 19869  0032BA  0E78               	movlw	low _dbuf
 19870  0032BC  2440               	addwf	i2dtoa@i^0,w,c
 19871  0032BE  6E15               	movwf	i2pad@buf^0,c
 19872  0032C0  0E01               	movlw	high _dbuf
 19873  0032C2  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 19874  0032C4  6E16               	movwf	(i2pad@buf+1)^0,c
 19875  0032C6  C034  F017         	movff	i2dtoa@w,i2pad@p
 19876  0032CA  C035  F018         	movff	i2dtoa@w+1,i2pad@p+1
 19877  0032CE  ECE1  F02C         	call	i2_pad	;wreg free
 19878  0032D2  C013  F01E         	movff	?i2_pad,?i2_dtoa
 19879  0032D6  C014  F01F         	movff	?i2_pad+1,?i2_dtoa+1
 19880  0032DA  0012               	return		;funcret
 19881  0032DC                     __end_ofi2_dtoa:
 19882                           	opt callstack 0
 19883                           
 19884 ;; *************** function i2_abs *****************
 19885 ;; Defined at:
 19886 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 19887 ;; Parameters:    Size  Location     Type
 19888 ;;  a               2   18[COMRAM] int 
 19889 ;; Auto vars:     Size  Location     Type
 19890 ;;		None
 19891 ;; Return value:  Size  Location     Type
 19892 ;;                  2   18[COMRAM] int 
 19893 ;; Registers used:
 19894 ;;		wreg, status,2, status,0
 19895 ;; Tracked objects:
 19896 ;;		On entry : 0/0
 19897 ;;		On exit  : 0/0
 19898 ;;		Unchanged: 0/0
 19899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19900 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19902 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19903 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19904 ;;Total ram usage:        4 bytes
 19905 ;; Hardware stack levels used:    1
 19906 ;; This function calls:
 19907 ;;		Nothing
 19908 ;; This function is called by:
 19909 ;;		i2_dtoa
 19910 ;; This function uses a non-reentrant model
 19911 ;;
 19912                           
 19913                           	psect	text86
 19914  006300                     __ptext86:
 19915                           	opt callstack 0
 19916  006300                     i2_abs:
 19917                           	opt callstack 12
 19918  006300  BE14               	btfsc	(i2abs@a+1)^0,7,c
 19919  006302  EF8D  F031         	goto	i2u860_40
 19920  006306  5014               	movf	(i2abs@a+1)^0,w,c
 19921  006308  E106               	bnz	i2u860_41
 19922  00630A  0413               	decf	i2abs@a^0,w,c
 19923  00630C  B0D8               	btfsc	status,0,c
 19924  00630E  EF8B  F031         	goto	i2u860_41
 19925  006312  EF8D  F031         	goto	i2u860_40
 19926  006316                     i2u860_41:
 19927  006316  EF9B  F031         	goto	i2l1522
 19928  00631A                     i2u860_40:
 19929  00631A  C013  F015         	movff	i2abs@a,??i2_abs
 19930  00631E  C014  F016         	movff	i2abs@a+1,??i2_abs+1
 19931  006322  1E15               	comf	??i2_abs^0,f,c
 19932  006324  1E16               	comf	(??i2_abs+1)^0,f,c
 19933  006326  4A15               	infsnz	??i2_abs^0,f,c
 19934  006328  2A16               	incf	(??i2_abs+1)^0,f,c
 19935  00632A  C015  F013         	movff	??i2_abs,?i2_abs
 19936  00632E  C016  F014         	movff	??i2_abs+1,?i2_abs+1
 19937  006332  EF9F  F031         	goto	i2l1525
 19938  006336                     i2l1522:
 19939  006336  C013  F013         	movff	i2abs@a,?i2_abs
 19940  00633A  C014  F014         	movff	i2abs@a+1,?i2_abs+1
 19941  00633E                     i2l1525:
 19942  00633E  0012               	return		;funcret
 19943  006340                     __end_ofi2_abs:
 19944                           	opt callstack 0
 19945                           
 19946 ;; *************** function i2___aomod *****************
 19947 ;; Defined at:
 19948 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 19949 ;; Parameters:    Size  Location     Type
 19950 ;;  dividend        8    0[COMRAM] long long 
 19951 ;;  divisor         8    8[COMRAM] long long 
 19952 ;; Auto vars:     Size  Location     Type
 19953 ;;  __aomod         1   17[COMRAM] unsigned char 
 19954 ;;  __aomod         1   16[COMRAM] unsigned char 
 19955 ;; Return value:  Size  Location     Type
 19956 ;;                  8    0[COMRAM] long long 
 19957 ;; Registers used:
 19958 ;;		wreg, status,2, status,0
 19959 ;; Tracked objects:
 19960 ;;		On entry : 0/0
 19961 ;;		On exit  : 0/0
 19962 ;;		Unchanged: 0/0
 19963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19964 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19965 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19967 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19968 ;;Total ram usage:       18 bytes
 19969 ;; Hardware stack levels used:    1
 19970 ;; This function calls:
 19971 ;;		Nothing
 19972 ;; This function is called by:
 19973 ;;		i2_dtoa
 19974 ;; This function uses a non-reentrant model
 19975 ;;
 19976                           
 19977                           	psect	text87
 19978  004D48                     __ptext87:
 19979                           	opt callstack 0
 19980  004D48                     i2___aomod:
 19981                           	opt callstack 12
 19982  004D48  0E00               	movlw	0
 19983  004D4A  6E12               	movwf	i2___aomod@sign^0,c
 19984  004D4C  BE08               	btfsc	(i2___aomod@dividend+7)^0,7,c
 19985  004D4E  EFAD  F026         	goto	i2u847_40
 19986  004D52  EFAB  F026         	goto	i2u847_41
 19987  004D56                     i2u847_41:
 19988  004D56  EFBF  F026         	goto	i2l7311
 19989  004D5A                     i2u847_40:
 19990  004D5A  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
 19991  004D5C  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
 19992  004D5E  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
 19993  004D60  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
 19994  004D62  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
 19995  004D64  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
 19996  004D66  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
 19997  004D68  6C01               	negf	i2___aomod@dividend^0,c
 19998  004D6A  0E00               	movlw	0
 19999  004D6C  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
 20000  004D6E  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
 20001  004D70  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
 20002  004D72  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
 20003  004D74  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
 20004  004D76  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
 20005  004D78  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
 20006  004D7A  0E01               	movlw	1
 20007  004D7C  6E12               	movwf	i2___aomod@sign^0,c
 20008  004D7E                     i2l7311:
 20009  004D7E  BE10               	btfsc	(i2___aomod@divisor+7)^0,7,c
 20010  004D80  EFC6  F026         	goto	i2u848_40
 20011  004D84  EFC4  F026         	goto	i2u848_41
 20012  004D88                     i2u848_41:
 20013  004D88  EFD6  F026         	goto	i2l7315
 20014  004D8C                     i2u848_40:
 20015  004D8C  1E10               	comf	(i2___aomod@divisor+7)^0,f,c
 20016  004D8E  1E0F               	comf	(i2___aomod@divisor+6)^0,f,c
 20017  004D90  1E0E               	comf	(i2___aomod@divisor+5)^0,f,c
 20018  004D92  1E0D               	comf	(i2___aomod@divisor+4)^0,f,c
 20019  004D94  1E0C               	comf	(i2___aomod@divisor+3)^0,f,c
 20020  004D96  1E0B               	comf	(i2___aomod@divisor+2)^0,f,c
 20021  004D98  1E0A               	comf	(i2___aomod@divisor+1)^0,f,c
 20022  004D9A  6C09               	negf	i2___aomod@divisor^0,c
 20023  004D9C  0E00               	movlw	0
 20024  004D9E  220A               	addwfc	(i2___aomod@divisor+1)^0,f,c
 20025  004DA0  220B               	addwfc	(i2___aomod@divisor+2)^0,f,c
 20026  004DA2  220C               	addwfc	(i2___aomod@divisor+3)^0,f,c
 20027  004DA4  220D               	addwfc	(i2___aomod@divisor+4)^0,f,c
 20028  004DA6  220E               	addwfc	(i2___aomod@divisor+5)^0,f,c
 20029  004DA8  220F               	addwfc	(i2___aomod@divisor+6)^0,f,c
 20030  004DAA  2210               	addwfc	(i2___aomod@divisor+7)^0,f,c
 20031  004DAC                     i2l7315:
 20032  004DAC  5009               	movf	i2___aomod@divisor^0,w,c
 20033  004DAE  100A               	iorwf	(i2___aomod@divisor+1)^0,w,c
 20034  004DB0  100B               	iorwf	(i2___aomod@divisor+2)^0,w,c
 20035  004DB2  100C               	iorwf	(i2___aomod@divisor+3)^0,w,c
 20036  004DB4  100D               	iorwf	(i2___aomod@divisor+4)^0,w,c
 20037  004DB6  100E               	iorwf	(i2___aomod@divisor+5)^0,w,c
 20038  004DB8  100F               	iorwf	(i2___aomod@divisor+6)^0,w,c
 20039  004DBA  1010               	iorwf	(i2___aomod@divisor+7)^0,w,c
 20040  004DBC  B4D8               	btfsc	status,2,c
 20041  004DBE  EFE3  F026         	goto	i2u849_41
 20042  004DC2  EFE5  F026         	goto	i2u849_40
 20043  004DC6                     i2u849_41:
 20044  004DC6  EF2D  F027         	goto	i2l7331
 20045  004DCA                     i2u849_40:
 20046  004DCA  0E01               	movlw	1
 20047  004DCC  6E11               	movwf	i2___aomod@counter^0,c
 20048  004DCE  EFF3  F026         	goto	i2l7321
 20049  004DD2                     i2l7319:
 20050  004DD2  90D8               	bcf	status,0,c
 20051  004DD4  3609               	rlcf	i2___aomod@divisor^0,f,c
 20052  004DD6  360A               	rlcf	(i2___aomod@divisor+1)^0,f,c
 20053  004DD8  360B               	rlcf	(i2___aomod@divisor+2)^0,f,c
 20054  004DDA  360C               	rlcf	(i2___aomod@divisor+3)^0,f,c
 20055  004DDC  360D               	rlcf	(i2___aomod@divisor+4)^0,f,c
 20056  004DDE  360E               	rlcf	(i2___aomod@divisor+5)^0,f,c
 20057  004DE0  360F               	rlcf	(i2___aomod@divisor+6)^0,f,c
 20058  004DE2  3610               	rlcf	(i2___aomod@divisor+7)^0,f,c
 20059  004DE4  2A11               	incf	i2___aomod@counter^0,f,c
 20060  004DE6                     i2l7321:
 20061  004DE6  AE10               	btfss	(i2___aomod@divisor+7)^0,7,c
 20062  004DE8  EFF8  F026         	goto	i2u850_41
 20063  004DEC  EFFA  F026         	goto	i2u850_40
 20064  004DF0                     i2u850_41:
 20065  004DF0  EFE9  F026         	goto	i2l7319
 20066  004DF4                     i2u850_40:
 20067  004DF4                     i2l7323:
 20068  004DF4  5009               	movf	i2___aomod@divisor^0,w,c
 20069  004DF6  5C01               	subwf	i2___aomod@dividend^0,w,c
 20070  004DF8  500A               	movf	(i2___aomod@divisor+1)^0,w,c
 20071  004DFA  5802               	subwfb	(i2___aomod@dividend+1)^0,w,c
 20072  004DFC  500B               	movf	(i2___aomod@divisor+2)^0,w,c
 20073  004DFE  5803               	subwfb	(i2___aomod@dividend+2)^0,w,c
 20074  004E00  500C               	movf	(i2___aomod@divisor+3)^0,w,c
 20075  004E02  5804               	subwfb	(i2___aomod@dividend+3)^0,w,c
 20076  004E04  500D               	movf	(i2___aomod@divisor+4)^0,w,c
 20077  004E06  5805               	subwfb	(i2___aomod@dividend+4)^0,w,c
 20078  004E08  500E               	movf	(i2___aomod@divisor+5)^0,w,c
 20079  004E0A  5806               	subwfb	(i2___aomod@dividend+5)^0,w,c
 20080  004E0C  500F               	movf	(i2___aomod@divisor+6)^0,w,c
 20081  004E0E  5807               	subwfb	(i2___aomod@dividend+6)^0,w,c
 20082  004E10  5010               	movf	(i2___aomod@divisor+7)^0,w,c
 20083  004E12  5808               	subwfb	(i2___aomod@dividend+7)^0,w,c
 20084  004E14  A0D8               	btfss	status,0,c
 20085  004E16  EF0F  F027         	goto	i2u851_41
 20086  004E1A  EF11  F027         	goto	i2u851_40
 20087  004E1E                     i2u851_41:
 20088  004E1E  EF21  F027         	goto	i2l7327
 20089  004E22                     i2u851_40:
 20090  004E22  5009               	movf	i2___aomod@divisor^0,w,c
 20091  004E24  5E01               	subwf	i2___aomod@dividend^0,f,c
 20092  004E26  500A               	movf	(i2___aomod@divisor+1)^0,w,c
 20093  004E28  5A02               	subwfb	(i2___aomod@dividend+1)^0,f,c
 20094  004E2A  500B               	movf	(i2___aomod@divisor+2)^0,w,c
 20095  004E2C  5A03               	subwfb	(i2___aomod@dividend+2)^0,f,c
 20096  004E2E  500C               	movf	(i2___aomod@divisor+3)^0,w,c
 20097  004E30  5A04               	subwfb	(i2___aomod@dividend+3)^0,f,c
 20098  004E32  500D               	movf	(i2___aomod@divisor+4)^0,w,c
 20099  004E34  5A05               	subwfb	(i2___aomod@dividend+4)^0,f,c
 20100  004E36  500E               	movf	(i2___aomod@divisor+5)^0,w,c
 20101  004E38  5A06               	subwfb	(i2___aomod@dividend+5)^0,f,c
 20102  004E3A  500F               	movf	(i2___aomod@divisor+6)^0,w,c
 20103  004E3C  5A07               	subwfb	(i2___aomod@dividend+6)^0,f,c
 20104  004E3E  5010               	movf	(i2___aomod@divisor+7)^0,w,c
 20105  004E40  5A08               	subwfb	(i2___aomod@dividend+7)^0,f,c
 20106  004E42                     i2l7327:
 20107  004E42  90D8               	bcf	status,0,c
 20108  004E44  3210               	rrcf	(i2___aomod@divisor+7)^0,f,c
 20109  004E46  320F               	rrcf	(i2___aomod@divisor+6)^0,f,c
 20110  004E48  320E               	rrcf	(i2___aomod@divisor+5)^0,f,c
 20111  004E4A  320D               	rrcf	(i2___aomod@divisor+4)^0,f,c
 20112  004E4C  320C               	rrcf	(i2___aomod@divisor+3)^0,f,c
 20113  004E4E  320B               	rrcf	(i2___aomod@divisor+2)^0,f,c
 20114  004E50  320A               	rrcf	(i2___aomod@divisor+1)^0,f,c
 20115  004E52  3209               	rrcf	i2___aomod@divisor^0,f,c
 20116  004E54  2E11               	decfsz	i2___aomod@counter^0,f,c
 20117  004E56  EFFA  F026         	goto	i2l7323
 20118  004E5A                     i2l7331:
 20119  004E5A  5012               	movf	i2___aomod@sign^0,w,c
 20120  004E5C  B4D8               	btfsc	status,2,c
 20121  004E5E  EF33  F027         	goto	i2u852_41
 20122  004E62  EF35  F027         	goto	i2u852_40
 20123  004E66                     i2u852_41:
 20124  004E66  EF45  F027         	goto	i2l7335
 20125  004E6A                     i2u852_40:
 20126  004E6A  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
 20127  004E6C  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
 20128  004E6E  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
 20129  004E70  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
 20130  004E72  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
 20131  004E74  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
 20132  004E76  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
 20133  004E78  6C01               	negf	i2___aomod@dividend^0,c
 20134  004E7A  0E00               	movlw	0
 20135  004E7C  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
 20136  004E7E  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
 20137  004E80  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
 20138  004E82  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
 20139  004E84  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
 20140  004E86  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
 20141  004E88  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
 20142  004E8A                     i2l7335:
 20143  004E8A  C001  F001         	movff	i2___aomod@dividend,?i2___aomod
 20144  004E8E  C002  F002         	movff	i2___aomod@dividend+1,?i2___aomod+1
 20145  004E92  C003  F003         	movff	i2___aomod@dividend+2,?i2___aomod+2
 20146  004E96  C004  F004         	movff	i2___aomod@dividend+3,?i2___aomod+3
 20147  004E9A  C005  F005         	movff	i2___aomod@dividend+4,?i2___aomod+4
 20148  004E9E  C006  F006         	movff	i2___aomod@dividend+5,?i2___aomod+5
 20149  004EA2  C007  F007         	movff	i2___aomod@dividend+6,?i2___aomod+6
 20150  004EA6  C008  F008         	movff	i2___aomod@dividend+7,?i2___aomod+7
 20151  004EAA  0012               	return		;funcret
 20152  004EAC                     __end_ofi2___aomod:
 20153                           	opt callstack 0
 20154                           
 20155 ;; *************** function i2___aodiv *****************
 20156 ;; Defined at:
 20157 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 20158 ;; Parameters:    Size  Location     Type
 20159 ;;  dividend        8    0[COMRAM] long long 
 20160 ;;  divisor         8    8[COMRAM] long long 
 20161 ;; Auto vars:     Size  Location     Type
 20162 ;;  __aodiv         8   18[COMRAM] long long 
 20163 ;;  __aodiv         1   17[COMRAM] unsigned char 
 20164 ;;  __aodiv         1   16[COMRAM] unsigned char 
 20165 ;; Return value:  Size  Location     Type
 20166 ;;                  8    0[COMRAM] long long 
 20167 ;; Registers used:
 20168 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20169 ;; Tracked objects:
 20170 ;;		On entry : 0/0
 20171 ;;		On exit  : 0/0
 20172 ;;		Unchanged: 0/0
 20173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20174 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20175 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20177 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20178 ;;Total ram usage:       26 bytes
 20179 ;; Hardware stack levels used:    1
 20180 ;; This function calls:
 20181 ;;		Nothing
 20182 ;; This function is called by:
 20183 ;;		i2_dtoa
 20184 ;; This function uses a non-reentrant model
 20185 ;;
 20186                           
 20187                           	psect	text88
 20188  004752                     __ptext88:
 20189                           	opt callstack 0
 20190  004752                     i2___aodiv:
 20191                           	opt callstack 12
 20192  004752  0E00               	movlw	0
 20193  004754  6E12               	movwf	i2___aodiv@sign^0,c
 20194  004756  BE10               	btfsc	(i2___aodiv@divisor+7)^0,7,c
 20195  004758  EFB2  F023         	goto	i2u840_40
 20196  00475C  EFB0  F023         	goto	i2u840_41
 20197  004760                     i2u840_41:
 20198  004760  EFC4  F023         	goto	i2l7267
 20199  004764                     i2u840_40:
 20200  004764  1E10               	comf	(i2___aodiv@divisor+7)^0,f,c
 20201  004766  1E0F               	comf	(i2___aodiv@divisor+6)^0,f,c
 20202  004768  1E0E               	comf	(i2___aodiv@divisor+5)^0,f,c
 20203  00476A  1E0D               	comf	(i2___aodiv@divisor+4)^0,f,c
 20204  00476C  1E0C               	comf	(i2___aodiv@divisor+3)^0,f,c
 20205  00476E  1E0B               	comf	(i2___aodiv@divisor+2)^0,f,c
 20206  004770  1E0A               	comf	(i2___aodiv@divisor+1)^0,f,c
 20207  004772  6C09               	negf	i2___aodiv@divisor^0,c
 20208  004774  0E00               	movlw	0
 20209  004776  220A               	addwfc	(i2___aodiv@divisor+1)^0,f,c
 20210  004778  220B               	addwfc	(i2___aodiv@divisor+2)^0,f,c
 20211  00477A  220C               	addwfc	(i2___aodiv@divisor+3)^0,f,c
 20212  00477C  220D               	addwfc	(i2___aodiv@divisor+4)^0,f,c
 20213  00477E  220E               	addwfc	(i2___aodiv@divisor+5)^0,f,c
 20214  004780  220F               	addwfc	(i2___aodiv@divisor+6)^0,f,c
 20215  004782  2210               	addwfc	(i2___aodiv@divisor+7)^0,f,c
 20216  004784  0E01               	movlw	1
 20217  004786  6E12               	movwf	i2___aodiv@sign^0,c
 20218  004788                     i2l7267:
 20219  004788  BE08               	btfsc	(i2___aodiv@dividend+7)^0,7,c
 20220  00478A  EFCB  F023         	goto	i2u841_40
 20221  00478E  EFC9  F023         	goto	i2u841_41
 20222  004792                     i2u841_41:
 20223  004792  EFDD  F023         	goto	i2l7273
 20224  004796                     i2u841_40:
 20225  004796  1E08               	comf	(i2___aodiv@dividend+7)^0,f,c
 20226  004798  1E07               	comf	(i2___aodiv@dividend+6)^0,f,c
 20227  00479A  1E06               	comf	(i2___aodiv@dividend+5)^0,f,c
 20228  00479C  1E05               	comf	(i2___aodiv@dividend+4)^0,f,c
 20229  00479E  1E04               	comf	(i2___aodiv@dividend+3)^0,f,c
 20230  0047A0  1E03               	comf	(i2___aodiv@dividend+2)^0,f,c
 20231  0047A2  1E02               	comf	(i2___aodiv@dividend+1)^0,f,c
 20232  0047A4  6C01               	negf	i2___aodiv@dividend^0,c
 20233  0047A6  0E00               	movlw	0
 20234  0047A8  2202               	addwfc	(i2___aodiv@dividend+1)^0,f,c
 20235  0047AA  2203               	addwfc	(i2___aodiv@dividend+2)^0,f,c
 20236  0047AC  2204               	addwfc	(i2___aodiv@dividend+3)^0,f,c
 20237  0047AE  2205               	addwfc	(i2___aodiv@dividend+4)^0,f,c
 20238  0047B0  2206               	addwfc	(i2___aodiv@dividend+5)^0,f,c
 20239  0047B2  2207               	addwfc	(i2___aodiv@dividend+6)^0,f,c
 20240  0047B4  2208               	addwfc	(i2___aodiv@dividend+7)^0,f,c
 20241  0047B6  0E01               	movlw	1
 20242  0047B8  1A12               	xorwf	i2___aodiv@sign^0,f,c
 20243  0047BA                     i2l7273:
 20244  0047BA  EE20  F013         	lfsr	2,i2___aodiv@quotient
 20245  0047BE  0E07               	movlw	7
 20246  0047C0                     i2u842_41:
 20247  0047C0  6ADE               	clrf	postinc2,c
 20248  0047C2  06E8               	decf	wreg,f,c
 20249  0047C4  E2FD               	bc	i2u842_41
 20250  0047C6  5009               	movf	i2___aodiv@divisor^0,w,c
 20251  0047C8  100A               	iorwf	(i2___aodiv@divisor+1)^0,w,c
 20252  0047CA  100B               	iorwf	(i2___aodiv@divisor+2)^0,w,c
 20253  0047CC  100C               	iorwf	(i2___aodiv@divisor+3)^0,w,c
 20254  0047CE  100D               	iorwf	(i2___aodiv@divisor+4)^0,w,c
 20255  0047D0  100E               	iorwf	(i2___aodiv@divisor+5)^0,w,c
 20256  0047D2  100F               	iorwf	(i2___aodiv@divisor+6)^0,w,c
 20257  0047D4  1010               	iorwf	(i2___aodiv@divisor+7)^0,w,c
 20258  0047D6  B4D8               	btfsc	status,2,c
 20259  0047D8  EFF0  F023         	goto	i2u843_41
 20260  0047DC  EFF2  F023         	goto	i2u843_40
 20261  0047E0                     i2u843_41:
 20262  0047E0  EF44  F024         	goto	i2l7295
 20263  0047E4                     i2u843_40:
 20264  0047E4  0E01               	movlw	1
 20265  0047E6  6E11               	movwf	i2___aodiv@counter^0,c
 20266  0047E8  EF00  F024         	goto	i2l7281
 20267  0047EC                     i2l7279:
 20268  0047EC  90D8               	bcf	status,0,c
 20269  0047EE  3609               	rlcf	i2___aodiv@divisor^0,f,c
 20270  0047F0  360A               	rlcf	(i2___aodiv@divisor+1)^0,f,c
 20271  0047F2  360B               	rlcf	(i2___aodiv@divisor+2)^0,f,c
 20272  0047F4  360C               	rlcf	(i2___aodiv@divisor+3)^0,f,c
 20273  0047F6  360D               	rlcf	(i2___aodiv@divisor+4)^0,f,c
 20274  0047F8  360E               	rlcf	(i2___aodiv@divisor+5)^0,f,c
 20275  0047FA  360F               	rlcf	(i2___aodiv@divisor+6)^0,f,c
 20276  0047FC  3610               	rlcf	(i2___aodiv@divisor+7)^0,f,c
 20277  0047FE  2A11               	incf	i2___aodiv@counter^0,f,c
 20278  004800                     i2l7281:
 20279  004800  AE10               	btfss	(i2___aodiv@divisor+7)^0,7,c
 20280  004802  EF05  F024         	goto	i2u844_41
 20281  004806  EF07  F024         	goto	i2u844_40
 20282  00480A                     i2u844_41:
 20283  00480A  EFF6  F023         	goto	i2l7279
 20284  00480E                     i2u844_40:
 20285  00480E                     i2l7283:
 20286  00480E  90D8               	bcf	status,0,c
 20287  004810  3613               	rlcf	i2___aodiv@quotient^0,f,c
 20288  004812  3614               	rlcf	(i2___aodiv@quotient+1)^0,f,c
 20289  004814  3615               	rlcf	(i2___aodiv@quotient+2)^0,f,c
 20290  004816  3616               	rlcf	(i2___aodiv@quotient+3)^0,f,c
 20291  004818  3617               	rlcf	(i2___aodiv@quotient+4)^0,f,c
 20292  00481A  3618               	rlcf	(i2___aodiv@quotient+5)^0,f,c
 20293  00481C  3619               	rlcf	(i2___aodiv@quotient+6)^0,f,c
 20294  00481E  361A               	rlcf	(i2___aodiv@quotient+7)^0,f,c
 20295  004820  5009               	movf	i2___aodiv@divisor^0,w,c
 20296  004822  5C01               	subwf	i2___aodiv@dividend^0,w,c
 20297  004824  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
 20298  004826  5802               	subwfb	(i2___aodiv@dividend+1)^0,w,c
 20299  004828  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
 20300  00482A  5803               	subwfb	(i2___aodiv@dividend+2)^0,w,c
 20301  00482C  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
 20302  00482E  5804               	subwfb	(i2___aodiv@dividend+3)^0,w,c
 20303  004830  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
 20304  004832  5805               	subwfb	(i2___aodiv@dividend+4)^0,w,c
 20305  004834  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
 20306  004836  5806               	subwfb	(i2___aodiv@dividend+5)^0,w,c
 20307  004838  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
 20308  00483A  5807               	subwfb	(i2___aodiv@dividend+6)^0,w,c
 20309  00483C  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
 20310  00483E  5808               	subwfb	(i2___aodiv@dividend+7)^0,w,c
 20311  004840  A0D8               	btfss	status,0,c
 20312  004842  EF25  F024         	goto	i2u845_41
 20313  004846  EF27  F024         	goto	i2u845_40
 20314  00484A                     i2u845_41:
 20315  00484A  EF38  F024         	goto	i2l7291
 20316  00484E                     i2u845_40:
 20317  00484E  5009               	movf	i2___aodiv@divisor^0,w,c
 20318  004850  5E01               	subwf	i2___aodiv@dividend^0,f,c
 20319  004852  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
 20320  004854  5A02               	subwfb	(i2___aodiv@dividend+1)^0,f,c
 20321  004856  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
 20322  004858  5A03               	subwfb	(i2___aodiv@dividend+2)^0,f,c
 20323  00485A  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
 20324  00485C  5A04               	subwfb	(i2___aodiv@dividend+3)^0,f,c
 20325  00485E  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
 20326  004860  5A05               	subwfb	(i2___aodiv@dividend+4)^0,f,c
 20327  004862  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
 20328  004864  5A06               	subwfb	(i2___aodiv@dividend+5)^0,f,c
 20329  004866  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
 20330  004868  5A07               	subwfb	(i2___aodiv@dividend+6)^0,f,c
 20331  00486A  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
 20332  00486C  5A08               	subwfb	(i2___aodiv@dividend+7)^0,f,c
 20333  00486E  8013               	bsf	i2___aodiv@quotient^0,0,c
 20334  004870                     i2l7291:
 20335  004870  90D8               	bcf	status,0,c
 20336  004872  3210               	rrcf	(i2___aodiv@divisor+7)^0,f,c
 20337  004874  320F               	rrcf	(i2___aodiv@divisor+6)^0,f,c
 20338  004876  320E               	rrcf	(i2___aodiv@divisor+5)^0,f,c
 20339  004878  320D               	rrcf	(i2___aodiv@divisor+4)^0,f,c
 20340  00487A  320C               	rrcf	(i2___aodiv@divisor+3)^0,f,c
 20341  00487C  320B               	rrcf	(i2___aodiv@divisor+2)^0,f,c
 20342  00487E  320A               	rrcf	(i2___aodiv@divisor+1)^0,f,c
 20343  004880  3209               	rrcf	i2___aodiv@divisor^0,f,c
 20344  004882  2E11               	decfsz	i2___aodiv@counter^0,f,c
 20345  004884  EF07  F024         	goto	i2l7283
 20346  004888                     i2l7295:
 20347  004888  5012               	movf	i2___aodiv@sign^0,w,c
 20348  00488A  B4D8               	btfsc	status,2,c
 20349  00488C  EF4A  F024         	goto	i2u846_41
 20350  004890  EF4C  F024         	goto	i2u846_40
 20351  004894                     i2u846_41:
 20352  004894  EF5C  F024         	goto	i2l7299
 20353  004898                     i2u846_40:
 20354  004898  1E1A               	comf	(i2___aodiv@quotient+7)^0,f,c
 20355  00489A  1E19               	comf	(i2___aodiv@quotient+6)^0,f,c
 20356  00489C  1E18               	comf	(i2___aodiv@quotient+5)^0,f,c
 20357  00489E  1E17               	comf	(i2___aodiv@quotient+4)^0,f,c
 20358  0048A0  1E16               	comf	(i2___aodiv@quotient+3)^0,f,c
 20359  0048A2  1E15               	comf	(i2___aodiv@quotient+2)^0,f,c
 20360  0048A4  1E14               	comf	(i2___aodiv@quotient+1)^0,f,c
 20361  0048A6  6C13               	negf	i2___aodiv@quotient^0,c
 20362  0048A8  0E00               	movlw	0
 20363  0048AA  2214               	addwfc	(i2___aodiv@quotient+1)^0,f,c
 20364  0048AC  2215               	addwfc	(i2___aodiv@quotient+2)^0,f,c
 20365  0048AE  2216               	addwfc	(i2___aodiv@quotient+3)^0,f,c
 20366  0048B0  2217               	addwfc	(i2___aodiv@quotient+4)^0,f,c
 20367  0048B2  2218               	addwfc	(i2___aodiv@quotient+5)^0,f,c
 20368  0048B4  2219               	addwfc	(i2___aodiv@quotient+6)^0,f,c
 20369  0048B6  221A               	addwfc	(i2___aodiv@quotient+7)^0,f,c
 20370  0048B8                     i2l7299:
 20371  0048B8  C013  F001         	movff	i2___aodiv@quotient,?i2___aodiv
 20372  0048BC  C014  F002         	movff	i2___aodiv@quotient+1,?i2___aodiv+1
 20373  0048C0  C015  F003         	movff	i2___aodiv@quotient+2,?i2___aodiv+2
 20374  0048C4  C016  F004         	movff	i2___aodiv@quotient+3,?i2___aodiv+3
 20375  0048C8  C017  F005         	movff	i2___aodiv@quotient+4,?i2___aodiv+4
 20376  0048CC  C018  F006         	movff	i2___aodiv@quotient+5,?i2___aodiv+5
 20377  0048D0  C019  F007         	movff	i2___aodiv@quotient+6,?i2___aodiv+6
 20378  0048D4  C01A  F008         	movff	i2___aodiv@quotient+7,?i2___aodiv+7
 20379  0048D8  0012               	return		;funcret
 20380  0048DA                     __end_ofi2___aodiv:
 20381                           	opt callstack 0
 20382                           
 20383 ;; *************** function i2_ctoa *****************
 20384 ;; Defined at:
 20385 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 20386 ;; Parameters:    Size  Location     Type
 20387 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 20388 ;;		 -> vsnprintf@f(6), NULL(0), 
 20389 ;;  c               1   31[COMRAM] unsigned char 
 20390 ;; Auto vars:     Size  Location     Type
 20391 ;;  ctoa            2   32[COMRAM] int 
 20392 ;;  ctoa            2    0        int 
 20393 ;; Return value:  Size  Location     Type
 20394 ;;                  2   29[COMRAM] int 
 20395 ;; Registers used:
 20396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20397 ;; Tracked objects:
 20398 ;;		On entry : 0/0
 20399 ;;		On exit  : 0/0
 20400 ;;		Unchanged: 0/0
 20401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20402 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20403 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20405 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20406 ;;Total ram usage:        5 bytes
 20407 ;; Hardware stack levels used:    1
 20408 ;; Hardware stack levels required when called:    5
 20409 ;; This function calls:
 20410 ;;		i2_pad
 20411 ;; This function is called by:
 20412 ;;		i2_vfpfcnvrt
 20413 ;; This function uses a non-reentrant model
 20414 ;;
 20415                           
 20416                           	psect	text89
 20417  005F36                     __ptext89:
 20418                           	opt callstack 0
 20419  005F36                     i2_ctoa:
 20420                           	opt callstack 8
 20421  005F36                     
 20422                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 20423  005F36  0100               	movlb	0	; () banked
 20424  005F38  51B9               	movf	_width& (0+255),w,b
 20425  005F3A  11BA               	iorwf	(_width+1)& (0+255),w,b
 20426  005F3C  A4D8               	btfss	status,2,c
 20427  005F3E  EFA3  F02F         	goto	i2u876_41
 20428  005F42  EFA5  F02F         	goto	i2u876_40
 20429  005F46                     i2u876_41:
 20430  005F46  EFAB  F02F         	goto	i2l7441
 20431  005F4A                     i2u876_40:
 20432  005F4A                     
 20433                           ; BSR set to: 0
 20434  005F4A  C0B9  F021         	movff	_width,i2ctoa@w
 20435  005F4E  C0BA  F022         	movff	_width+1,i2ctoa@w+1
 20436  005F52  EFB1  F02F         	goto	i2l7443
 20437  005F56                     i2l7441:
 20438                           
 20439                           ; BSR set to: 0
 20440  005F56  0EFF               	movlw	255
 20441  005F58  25B9               	addwf	_width& (0+255),w,b
 20442  005F5A  6E21               	movwf	i2ctoa@w^0,c
 20443  005F5C  0EFF               	movlw	255
 20444  005F5E  21BA               	addwfc	(_width+1)& (0+255),w,b
 20445  005F60  6E22               	movwf	(i2ctoa@w+1)^0,c
 20446  005F62                     i2l7443:
 20447                           
 20448                           ; BSR set to: 0
 20449                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 20450  005F62  C020  F178         	movff	i2ctoa@c,_dbuf
 20451  005F66                     
 20452                           ; BSR set to: 0
 20453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 20454  005F66  0E00               	movlw	0
 20455  005F68  0101               	movlb	1	; () banked
 20456  005F6A  6F79               	movwf	(_dbuf+1)& (0+255),b
 20457  005F6C                     
 20458                           ; BSR set to: 1
 20459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 20460  005F6C  C01E  F013         	movff	i2ctoa@fp,i2pad@fp
 20461  005F70  C01F  F014         	movff	i2ctoa@fp+1,i2pad@fp+1
 20462  005F74  0E78               	movlw	low _dbuf
 20463  005F76  6E15               	movwf	i2pad@buf^0,c
 20464  005F78  0E01               	movlw	high _dbuf
 20465  005F7A  6E16               	movwf	(i2pad@buf+1)^0,c
 20466  005F7C  C021  F017         	movff	i2ctoa@w,i2pad@p
 20467  005F80  C022  F018         	movff	i2ctoa@w+1,i2pad@p+1
 20468  005F84  ECE1  F02C         	call	i2_pad	;wreg free
 20469  005F88  C013  F01E         	movff	?i2_pad,?i2_ctoa
 20470  005F8C  C014  F01F         	movff	?i2_pad+1,?i2_ctoa+1
 20471  005F90  0012               	return		;funcret
 20472  005F92                     __end_ofi2_ctoa:
 20473                           	opt callstack 0
 20474                           
 20475 ;; *************** function i2_pad *****************
 20476 ;; Defined at:
 20477 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 20478 ;; Parameters:    Size  Location     Type
 20479 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
 20480 ;;		 -> vsnprintf@f(6), NULL(0), 
 20481 ;;  buf             2   20[COMRAM] PTR unsigned char 
 20482 ;;		 -> dbuf(32), 
 20483 ;;  p               2   22[COMRAM] int 
 20484 ;; Auto vars:     Size  Location     Type
 20485 ;;  pad             2   27[COMRAM] int 
 20486 ;;  pad             2   25[COMRAM] int 
 20487 ;; Return value:  Size  Location     Type
 20488 ;;                  2   18[COMRAM] int 
 20489 ;; Registers used:
 20490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20491 ;; Tracked objects:
 20492 ;;		On entry : 0/0
 20493 ;;		On exit  : 0/0
 20494 ;;		Unchanged: 0/0
 20495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20496 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20497 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20498 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20499 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20500 ;;Total ram usage:       11 bytes
 20501 ;; Hardware stack levels used:    1
 20502 ;; Hardware stack levels required when called:    4
 20503 ;; This function calls:
 20504 ;;		i2_fputc
 20505 ;;		i2_fputs
 20506 ;;		i2_strlen
 20507 ;; This function is called by:
 20508 ;;		i2_ctoa
 20509 ;;		i2_dtoa
 20510 ;;		i2_otoa
 20511 ;;		i2_utoa
 20512 ;;		i2_xtoa
 20513 ;; This function uses a non-reentrant model
 20514 ;;
 20515                           
 20516                           	psect	text90
 20517  0059C2                     __ptext90:
 20518                           	opt callstack 0
 20519  0059C2                     i2_pad:
 20520                           	opt callstack 8
 20521  0059C2                     
 20522                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 20523  0059C2  0100               	movlb	0	; () banked
 20524  0059C4  A1BD               	btfss	_flags& (0+255),0,b
 20525  0059C6  EFE7  F02C         	goto	i2u836_41
 20526  0059CA  EFE9  F02C         	goto	i2u836_40
 20527  0059CE                     i2u836_41:
 20528  0059CE  EFF3  F02C         	goto	i2l7235
 20529  0059D2                     i2u836_40:
 20530  0059D2                     
 20531                           ; BSR set to: 0
 20532                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 20533  0059D2  C015  F00C         	movff	i2pad@buf,i2fputs@s
 20534  0059D6  C016  F00D         	movff	i2pad@buf+1,i2fputs@s+1
 20535  0059DA  C013  F00E         	movff	i2pad@fp,i2fputs@fp
 20536  0059DE  C014  F00F         	movff	i2pad@fp+1,i2fputs@fp+1
 20537  0059E2  ECFC  F030         	call	i2_fputs	;wreg free
 20538  0059E6                     i2l7235:
 20539                           
 20540                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 20541  0059E6  BE18               	btfsc	(i2pad@p+1)^0,7,c
 20542  0059E8  EFF8  F02C         	goto	i2u837_41
 20543  0059EC  EFFA  F02C         	goto	i2u837_40
 20544  0059F0                     i2u837_41:
 20545  0059F0  EF00  F02D         	goto	i2l7239
 20546  0059F4                     i2u837_40:
 20547  0059F4  C017  F01C         	movff	i2pad@p,i2pad@w
 20548  0059F8  C018  F01D         	movff	i2pad@p+1,i2pad@w+1
 20549  0059FC  EF04  F02D         	goto	i2l640
 20550  005A00                     i2l7239:
 20551  005A00  0E00               	movlw	0
 20552  005A02  6E1D               	movwf	(i2pad@w+1)^0,c
 20553  005A04  0E00               	movlw	0
 20554  005A06  6E1C               	movwf	i2pad@w^0,c
 20555  005A08                     i2l640:
 20556                           
 20557                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 20558  005A08  0E00               	movlw	0
 20559  005A0A  6E1B               	movwf	(i2pad@i+1)^0,c
 20560  005A0C  0E00               	movlw	0
 20561  005A0E  6E1A               	movwf	i2pad@i^0,c
 20562                           
 20563                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 20564  005A10  EF16  F02D         	goto	i2l7245
 20565  005A14                     i2l7241:
 20566                           
 20567                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 20568  005A14  0E00               	movlw	0
 20569  005A16  6E04               	movwf	(i2fputc@c+1)^0,c
 20570  005A18  0E20               	movlw	32
 20571  005A1A  6E03               	movwf	i2fputc@c^0,c
 20572  005A1C  C013  F005         	movff	i2pad@fp,i2fputc@fp
 20573  005A20  C014  F006         	movff	i2pad@fp+1,i2fputc@fp+1
 20574  005A24  EC7C  F02C         	call	i2_fputc	;wreg free
 20575  005A28                     
 20576                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 20577  005A28  4A1A               	infsnz	i2pad@i^0,f,c
 20578  005A2A  2A1B               	incf	(i2pad@i+1)^0,f,c
 20579  005A2C                     i2l7245:
 20580                           
 20581                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 20582  005A2C  501C               	movf	i2pad@w^0,w,c
 20583  005A2E  5C1A               	subwf	i2pad@i^0,w,c
 20584  005A30  501B               	movf	(i2pad@i+1)^0,w,c
 20585  005A32  0A80               	xorlw	128
 20586  005A34  6E19               	movwf	??i2_pad^0,c
 20587  005A36  501D               	movf	(i2pad@w+1)^0,w,c
 20588  005A38  0A80               	xorlw	128
 20589  005A3A  5819               	subwfb	??i2_pad^0,w,c
 20590  005A3C  A0D8               	btfss	status,0,c
 20591  005A3E  EF23  F02D         	goto	i2u838_41
 20592  005A42  EF25  F02D         	goto	i2u838_40
 20593  005A46                     i2u838_41:
 20594  005A46  EF0A  F02D         	goto	i2l7241
 20595  005A4A                     i2u838_40:
 20596  005A4A                     
 20597                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 20598  005A4A  0100               	movlb	0	; () banked
 20599  005A4C  B1BD               	btfsc	_flags& (0+255),0,b
 20600  005A4E  EF2B  F02D         	goto	i2u839_41
 20601  005A52  EF2D  F02D         	goto	i2u839_40
 20602  005A56                     i2u839_41:
 20603  005A56  EF37  F02D         	goto	i2l7249
 20604  005A5A                     i2u839_40:
 20605  005A5A                     
 20606                           ; BSR set to: 0
 20607                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 20608  005A5A  C015  F00C         	movff	i2pad@buf,i2fputs@s
 20609  005A5E  C016  F00D         	movff	i2pad@buf+1,i2fputs@s+1
 20610  005A62  C013  F00E         	movff	i2pad@fp,i2fputs@fp
 20611  005A66  C014  F00F         	movff	i2pad@fp+1,i2fputs@fp+1
 20612  005A6A  ECFC  F030         	call	i2_fputs	;wreg free
 20613  005A6E                     i2l7249:
 20614                           
 20615                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 20616  005A6E  C015  F001         	movff	i2pad@buf,i2strlen@s
 20617  005A72  C016  F002         	movff	i2pad@buf+1,i2strlen@s+1
 20618  005A76  ECC1  F032         	call	i2_strlen	;wreg free
 20619  005A7A  501C               	movf	i2pad@w^0,w,c
 20620  005A7C  2401               	addwf	?i2_strlen^0,w,c
 20621  005A7E  6E13               	movwf	?i2_pad^0,c
 20622  005A80  501D               	movf	(i2pad@w+1)^0,w,c
 20623  005A82  2002               	addwfc	(?i2_strlen+1)^0,w,c
 20624  005A84  6E14               	movwf	(?i2_pad+1)^0,c
 20625  005A86  0012               	return		;funcret
 20626  005A88                     __end_ofi2_pad:
 20627                           	opt callstack 0
 20628                           
 20629 ;; *************** function i2_strlen *****************
 20630 ;; Defined at:
 20631 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 20632 ;; Parameters:    Size  Location     Type
 20633 ;;  s               2    0[COMRAM] PTR const unsigned char 
 20634 ;;		 -> i2stoa@nuls(7), ?_snprintf(2), ?_printf(2), stoa@nuls(7), 
 20635 ;;		 -> dbuf(32), 
 20636 ;; Auto vars:     Size  Location     Type
 20637 ;;  strlen          2    2[COMRAM] PTR const unsigned char 
 20638 ;;		 -> i2stoa@nuls(7), ?_snprintf(2), ?_printf(2), stoa@nuls(7), 
 20639 ;;		 -> dbuf(32), 
 20640 ;; Return value:  Size  Location     Type
 20641 ;;                  2    0[COMRAM] unsigned int 
 20642 ;; Registers used:
 20643 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20644 ;; Tracked objects:
 20645 ;;		On entry : 0/0
 20646 ;;		On exit  : 0/0
 20647 ;;		Unchanged: 0/0
 20648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20649 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20650 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20652 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20653 ;;Total ram usage:        4 bytes
 20654 ;; Hardware stack levels used:    1
 20655 ;; This function calls:
 20656 ;;		Nothing
 20657 ;; This function is called by:
 20658 ;;		i2_pad
 20659 ;;		i2_stoa
 20660 ;; This function uses a non-reentrant model
 20661 ;;
 20662                           
 20663                           	psect	text91
 20664  006582                     __ptext91:
 20665                           	opt callstack 0
 20666  006582                     i2_strlen:
 20667                           	opt callstack 11
 20668  006582  C001  F003         	movff	i2strlen@s,i2strlen@a
 20669  006586  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
 20670  00658A  EFC9  F032         	goto	i2l7207
 20671  00658E                     i2l7205:
 20672  00658E  4A01               	infsnz	i2strlen@s^0,f,c
 20673  006590  2A02               	incf	(i2strlen@s+1)^0,f,c
 20674  006592                     i2l7207:
 20675  006592  C001  FFD9         	movff	i2strlen@s,fsr2l
 20676  006596  C002  FFDA         	movff	i2strlen@s+1,fsr2h
 20677  00659A  50DF               	movf	indf2,w,c
 20678  00659C  A4D8               	btfss	status,2,c
 20679  00659E  EFD3  F032         	goto	i2u829_41
 20680  0065A2  EFD5  F032         	goto	i2u829_40
 20681  0065A6                     i2u829_41:
 20682  0065A6  EFC7  F032         	goto	i2l7205
 20683  0065AA                     i2u829_40:
 20684  0065AA  5003               	movf	i2strlen@a^0,w,c
 20685  0065AC  5C01               	subwf	i2strlen@s^0,w,c
 20686  0065AE  6E01               	movwf	?i2_strlen^0,c
 20687  0065B0  5004               	movf	(i2strlen@a+1)^0,w,c
 20688  0065B2  5802               	subwfb	(i2strlen@s+1)^0,w,c
 20689  0065B4  6E02               	movwf	(?i2_strlen+1)^0,c
 20690  0065B6  0012               	return		;funcret
 20691  0065B8                     __end_ofi2_strlen:
 20692                           	opt callstack 0
 20693                           
 20694 ;; *************** function i2_fputs *****************
 20695 ;; Defined at:
 20696 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 20697 ;; Parameters:    Size  Location     Type
 20698 ;;  s               2   11[COMRAM] PTR const unsigned char 
 20699 ;;		 -> dbuf(32), 
 20700 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
 20701 ;;		 -> vsnprintf@f(6), NULL(0), 
 20702 ;; Auto vars:     Size  Location     Type
 20703 ;;  fputs           2   16[COMRAM] int 
 20704 ;;  fputs           1   15[COMRAM] unsigned char 
 20705 ;; Return value:  Size  Location     Type
 20706 ;;                  2   11[COMRAM] int 
 20707 ;; Registers used:
 20708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20709 ;; Tracked objects:
 20710 ;;		On entry : 0/0
 20711 ;;		On exit  : 0/0
 20712 ;;		Unchanged: 0/0
 20713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20714 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20715 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20717 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20718 ;;Total ram usage:        7 bytes
 20719 ;; Hardware stack levels used:    1
 20720 ;; Hardware stack levels required when called:    3
 20721 ;; This function calls:
 20722 ;;		i2_fputc
 20723 ;; This function is called by:
 20724 ;;		i2_pad
 20725 ;; This function uses a non-reentrant model
 20726 ;;
 20727                           
 20728                           	psect	text92
 20729  0061F8                     __ptext92:
 20730                           	opt callstack 0
 20731  0061F8                     i2_fputs:
 20732                           	opt callstack 8
 20733  0061F8  0E00               	movlw	0
 20734  0061FA  6E12               	movwf	(i2fputs@i+1)^0,c
 20735  0061FC  0E00               	movlw	0
 20736  0061FE  6E11               	movwf	i2fputs@i^0,c
 20737  006200  EF0D  F031         	goto	i2l7201
 20738  006204                     i2l7197:
 20739  006204  C010  F003         	movff	i2fputs@c,i2fputc@c
 20740  006208  6A04               	clrf	(i2fputc@c+1)^0,c
 20741  00620A  C00E  F005         	movff	i2fputs@fp,i2fputc@fp
 20742  00620E  C00F  F006         	movff	i2fputs@fp+1,i2fputc@fp+1
 20743  006212  EC7C  F02C         	call	i2_fputc	;wreg free
 20744  006216  4A11               	infsnz	i2fputs@i^0,f,c
 20745  006218  2A12               	incf	(i2fputs@i+1)^0,f,c
 20746  00621A                     i2l7201:
 20747  00621A  5011               	movf	i2fputs@i^0,w,c
 20748  00621C  240C               	addwf	i2fputs@s^0,w,c
 20749  00621E  6ED9               	movwf	fsr2l,c
 20750  006220  5012               	movf	(i2fputs@i+1)^0,w,c
 20751  006222  200D               	addwfc	(i2fputs@s+1)^0,w,c
 20752  006224  6EDA               	movwf	fsr2h,c
 20753  006226  50DF               	movf	indf2,w,c
 20754  006228  6E10               	movwf	i2fputs@c^0,c
 20755  00622A  5010               	movf	i2fputs@c^0,w,c
 20756  00622C  A4D8               	btfss	status,2,c
 20757  00622E  EF1B  F031         	goto	i2u828_41
 20758  006232  EF1D  F031         	goto	i2u828_40
 20759  006236                     i2u828_41:
 20760  006236  EF02  F031         	goto	i2l7197
 20761  00623A                     i2u828_40:
 20762  00623A  0012               	return		;funcret
 20763  00623C                     __end_ofi2_fputs:
 20764                           	opt callstack 0
 20765                           
 20766 ;; *************** function i2_fputc *****************
 20767 ;; Defined at:
 20768 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 20769 ;; Parameters:    Size  Location     Type
 20770 ;;  c               2    2[COMRAM] int 
 20771 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
 20772 ;;		 -> vsnprintf@f(6), NULL(0), 
 20773 ;; Auto vars:     Size  Location     Type
 20774 ;;		None
 20775 ;; Return value:  Size  Location     Type
 20776 ;;                  2    2[COMRAM] int 
 20777 ;; Registers used:
 20778 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20779 ;; Tracked objects:
 20780 ;;		On entry : 0/0
 20781 ;;		On exit  : 0/0
 20782 ;;		Unchanged: 0/0
 20783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20784 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20786 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20787 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20788 ;;Total ram usage:        9 bytes
 20789 ;; Hardware stack levels used:    1
 20790 ;; Hardware stack levels required when called:    2
 20791 ;; This function calls:
 20792 ;;		i2_putch
 20793 ;; This function is called by:
 20794 ;;		i2_pad
 20795 ;;		i2_stoa
 20796 ;;		i2_vfpfcnvrt
 20797 ;;		i2_fputs
 20798 ;; This function uses a non-reentrant model
 20799 ;;
 20800                           
 20801                           	psect	text93
 20802  0058F8                     __ptext93:
 20803                           	opt callstack 0
 20804  0058F8                     i2_fputc:
 20805                           	opt callstack 8
 20806  0058F8  5005               	movf	i2fputc@fp^0,w,c
 20807  0058FA  1006               	iorwf	(i2fputc@fp+1)^0,w,c
 20808  0058FC  B4D8               	btfsc	status,2,c
 20809  0058FE  EF83  F02C         	goto	i2u824_41
 20810  005902  EF85  F02C         	goto	i2u824_40
 20811  005906                     i2u824_41:
 20812  005906  EF8E  F02C         	goto	i2l7183
 20813  00590A                     i2u824_40:
 20814  00590A  5005               	movf	i2fputc@fp^0,w,c
 20815  00590C  1006               	iorwf	(i2fputc@fp+1)^0,w,c
 20816  00590E  A4D8               	btfss	status,2,c
 20817  005910  EF8C  F02C         	goto	i2u825_41
 20818  005914  EF8E  F02C         	goto	i2u825_40
 20819  005918                     i2u825_41:
 20820  005918  EF93  F02C         	goto	i2l7185
 20821  00591C                     i2u825_40:
 20822  00591C                     i2l7183:
 20823  00591C  5003               	movf	i2fputc@c^0,w,c
 20824  00591E  EC63  F034         	call	i2_putch
 20825  005922  EFE0  F02C         	goto	i2l1594
 20826  005926                     i2l7185:
 20827  005926  EE20 F004          	lfsr	2,4
 20828  00592A  5005               	movf	i2fputc@fp^0,w,c
 20829  00592C  26D9               	addwf	fsr2l,f,c
 20830  00592E  5006               	movf	(i2fputc@fp+1)^0,w,c
 20831  005930  22DA               	addwfc	fsr2h,f,c
 20832  005932  50DE               	movf	postinc2,w,c
 20833  005934  10DE               	iorwf	postinc2,w,c
 20834  005936  B4D8               	btfsc	status,2,c
 20835  005938  EFA0  F02C         	goto	i2u826_41
 20836  00593C  EFA2  F02C         	goto	i2u826_40
 20837  005940                     i2u826_41:
 20838  005940  EFBD  F02C         	goto	i2l7189
 20839  005944                     i2u826_40:
 20840  005944  EE20 F004          	lfsr	2,4
 20841  005948  5005               	movf	i2fputc@fp^0,w,c
 20842  00594A  26D9               	addwf	fsr2l,f,c
 20843  00594C  5006               	movf	(i2fputc@fp+1)^0,w,c
 20844  00594E  22DA               	addwfc	fsr2h,f,c
 20845  005950  EE10 F002          	lfsr	1,2
 20846  005954  5005               	movf	i2fputc@fp^0,w,c
 20847  005956  26E1               	addwf	fsr1l,f,c
 20848  005958  5006               	movf	(i2fputc@fp+1)^0,w,c
 20849  00595A  22E2               	addwfc	fsr1h,f,c
 20850  00595C  50DE               	movf	postinc2,w,c
 20851  00595E  5CE6               	subwf	postinc1,w,c
 20852  005960  50E6               	movf	postinc1,w,c
 20853  005962  0A80               	xorlw	128
 20854  005964  6E0B               	movwf	(??i2_fputc+4)^0,c
 20855  005966  50DE               	movf	postinc2,w,c
 20856  005968  0A80               	xorlw	128
 20857  00596A  580B               	subwfb	(??i2_fputc+4)^0,w,c
 20858  00596C  B0D8               	btfsc	status,0,c
 20859  00596E  EFBB  F02C         	goto	i2u827_41
 20860  005972  EFBD  F02C         	goto	i2u827_40
 20861  005976                     i2u827_41:
 20862  005976  EFE0  F02C         	goto	i2l1594
 20863  00597A                     i2u827_40:
 20864  00597A                     i2l7189:
 20865  00597A  EE20 F002          	lfsr	2,2
 20866  00597E  5005               	movf	i2fputc@fp^0,w,c
 20867  005980  26D9               	addwf	fsr2l,f,c
 20868  005982  5006               	movf	(i2fputc@fp+1)^0,w,c
 20869  005984  22DA               	addwfc	fsr2h,f,c
 20870  005986  CFDE F007          	movff	postinc2,??i2_fputc
 20871  00598A  CFDD F008          	movff	postdec2,??i2_fputc+1
 20872  00598E  C005  FFD9         	movff	i2fputc@fp,fsr2l
 20873  005992  C006  FFDA         	movff	i2fputc@fp+1,fsr2h
 20874  005996  CFDE F009          	movff	postinc2,??i2_fputc+2
 20875  00599A  CFDD F00A          	movff	postdec2,??i2_fputc+3
 20876  00599E  5007               	movf	??i2_fputc^0,w,c
 20877  0059A0  2409               	addwf	(??i2_fputc+2)^0,w,c
 20878  0059A2  6ED9               	movwf	fsr2l,c
 20879  0059A4  5008               	movf	(??i2_fputc+1)^0,w,c
 20880  0059A6  200A               	addwfc	(??i2_fputc+3)^0,w,c
 20881  0059A8  6EDA               	movwf	fsr2h,c
 20882  0059AA  C003  FFDF         	movff	i2fputc@c,indf2
 20883  0059AE  EE20 F002          	lfsr	2,2
 20884  0059B2  5005               	movf	i2fputc@fp^0,w,c
 20885  0059B4  26D9               	addwf	fsr2l,f,c
 20886  0059B6  5006               	movf	(i2fputc@fp+1)^0,w,c
 20887  0059B8  22DA               	addwfc	fsr2h,f,c
 20888  0059BA  2ADE               	incf	postinc2,f,c
 20889  0059BC  0E00               	movlw	0
 20890  0059BE  22DD               	addwfc	postdec2,f,c
 20891  0059C0                     i2l1594:
 20892  0059C0  0012               	return		;funcret
 20893  0059C2                     __end_ofi2_fputc:
 20894                           	opt callstack 0
 20895                           
 20896 ;; *************** function i2_putch *****************
 20897 ;; Defined at:
 20898 ;;		line 146 in file "mcc_generated_files/eusart1.c"
 20899 ;; Parameters:    Size  Location     Type
 20900 ;;  txData          1    wreg     unsigned char 
 20901 ;; Auto vars:     Size  Location     Type
 20902 ;;  txData          1    1[COMRAM] unsigned char 
 20903 ;; Return value:  Size  Location     Type
 20904 ;;                  1    wreg      void 
 20905 ;; Registers used:
 20906 ;;		wreg, status,2, cstack
 20907 ;; Tracked objects:
 20908 ;;		On entry : 0/0
 20909 ;;		On exit  : 0/0
 20910 ;;		Unchanged: 0/0
 20911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20913 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20915 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20916 ;;Total ram usage:        1 bytes
 20917 ;; Hardware stack levels used:    1
 20918 ;; Hardware stack levels required when called:    1
 20919 ;; This function calls:
 20920 ;;		i2_EUSART1_Write
 20921 ;; This function is called by:
 20922 ;;		i2_fputc
 20923 ;; This function uses a non-reentrant model
 20924 ;;
 20925                           
 20926                           	psect	text94
 20927  0068C6                     __ptext94:
 20928                           	opt callstack 0
 20929  0068C6                     i2_putch:
 20930                           	opt callstack 8
 20931                           
 20932                           ;incstack = 0
 20933                           ;i2putch@txData stored from wreg
 20934  0068C6  6E02               	movwf	i2putch@txData^0,c
 20935  0068C8                     
 20936                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
 20937  0068C8  5002               	movf	i2putch@txData^0,w,c
 20938  0068CA  EC1B  F034         	call	i2_EUSART1_Write
 20939  0068CE  0012               	return		;funcret
 20940  0068D0                     __end_ofi2_putch:
 20941                           	opt callstack 0
 20942                           
 20943 ;; *************** function i2_EUSART1_Write *****************
 20944 ;; Defined at:
 20945 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 20946 ;; Parameters:    Size  Location     Type
 20947 ;;  txData          1    wreg     unsigned char 
 20948 ;; Auto vars:     Size  Location     Type
 20949 ;;  txData          1    0[COMRAM] unsigned char 
 20950 ;; Return value:  Size  Location     Type
 20951 ;;                  1    wreg      void 
 20952 ;; Registers used:
 20953 ;;		wreg
 20954 ;; Tracked objects:
 20955 ;;		On entry : 0/0
 20956 ;;		On exit  : 0/0
 20957 ;;		Unchanged: 0/0
 20958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20960 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20962 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20963 ;;Total ram usage:        1 bytes
 20964 ;; Hardware stack levels used:    1
 20965 ;; This function calls:
 20966 ;;		Nothing
 20967 ;; This function is called by:
 20968 ;;		i2_putch
 20969 ;; This function uses a non-reentrant model
 20970 ;;
 20971                           
 20972                           	psect	text95
 20973  006836                     __ptext95:
 20974                           	opt callstack 0
 20975  006836                     i2_EUSART1_Write:
 20976                           	opt callstack 8
 20977                           
 20978                           ;incstack = 0
 20979                           ;i2EUSART1_Write@txData stored from wreg
 20980  006836  6E01               	movwf	i2EUSART1_Write@txData^0,c
 20981  006838                     i2l297:
 20982                           
 20983                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
 20984  006838  A89E               	btfss	158,4,c	;volatile
 20985  00683A  EF21  F034         	goto	i2u822_41
 20986  00683E  EF23  F034         	goto	i2u822_40
 20987  006842                     i2u822_41:
 20988  006842  EF1C  F034         	goto	i2l297
 20989  006846                     i2u822_40:
 20990  006846                     
 20991                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
 20992  006846  C001  FFAD         	movff	i2EUSART1_Write@txData,4013	;volatile
 20993  00684A  0012               	return		;funcret
 20994  00684C                     __end_ofi2_EUSART1_Write:
 20995                           	opt callstack 0
 20996                           
 20997 ;; *************** function i2_atoi *****************
 20998 ;; Defined at:
 20999 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 21000 ;; Parameters:    Size  Location     Type
 21001 ;;  s               2    7[COMRAM] PTR const unsigned char 
 21002 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
 21003 ;;		 -> STR_4(22), STR_3(12), read_from_usart@data(10), STR_1(13), 
 21004 ;; Auto vars:     Size  Location     Type
 21005 ;;  atoi            2   20[COMRAM] int 
 21006 ;;  atoi            2   13[COMRAM] int 
 21007 ;; Return value:  Size  Location     Type
 21008 ;;                  2    7[COMRAM] int 
 21009 ;; Registers used:
 21010 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21011 ;; Tracked objects:
 21012 ;;		On entry : 0/0
 21013 ;;		On exit  : 0/0
 21014 ;;		Unchanged: 0/0
 21015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21016 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21017 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21018 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21019 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21020 ;;Total ram usage:       15 bytes
 21021 ;; Hardware stack levels used:    1
 21022 ;; Hardware stack levels required when called:    1
 21023 ;; This function calls:
 21024 ;;		i2___wmul
 21025 ;;		i2_isdigit
 21026 ;;		i2_isspace
 21027 ;; This function is called by:
 21028 ;;		i2_vfpfcnvrt
 21029 ;; This function uses a non-reentrant model
 21030 ;;
 21031                           
 21032                           	psect	text96
 21033  003E4C                     __ptext96:
 21034                           	opt callstack 0
 21035  003E4C                     i2_atoi:
 21036                           	opt callstack 12
 21037  003E4C  0E00               	movlw	0
 21038  003E4E  6E16               	movwf	(i2atoi@n+1)^0,c
 21039  003E50  0E00               	movlw	0
 21040  003E52  6E15               	movwf	i2atoi@n^0,c
 21041  003E54  0E00               	movlw	0
 21042  003E56  6E0F               	movwf	(i2atoi@neg+1)^0,c
 21043  003E58  0E00               	movlw	0
 21044  003E5A  6E0E               	movwf	i2atoi@neg^0,c
 21045  003E5C  EF32  F01F         	goto	i2l7709
 21046  003E60                     i2l7707:
 21047  003E60  4A08               	infsnz	i2atoi@s^0,f,c
 21048  003E62  2A09               	incf	(i2atoi@s+1)^0,f,c
 21049  003E64                     i2l7709:
 21050  003E64  0E01               	movlw	1
 21051  003E66  6E14               	movwf	i2_atoi$2286^0,c
 21052  003E68  C008  FFF6         	movff	i2atoi@s,tblptrl
 21053  003E6C  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 21054  003E70  0E00               	movlw	low (__mediumconst shr (0+16))
 21055  003E72  6EF8               	movwf	tblptru,c
 21056  003E74  0E0E               	movlw	(high __ramtop+-1)
 21057  003E76  64F7               	cpfsgt	tblptrh,c
 21058  003E78  D003               	bra	i2u935_47
 21059  003E7A  0008               	tblrd		*
 21060  003E7C  50F5               	movf	tablat,w,c
 21061  003E7E  D005               	bra	i2u935_40
 21062  003E80                     i2u935_47:
 21063  003E80  CFF6 FFE1          	movff	tblptrl,fsr1l
 21064  003E84  CFF7 FFE2          	movff	tblptrh,fsr1h
 21065  003E88  50E7               	movf	indf1,w,c
 21066  003E8A                     i2u935_40:
 21067  003E8A  0A20               	xorlw	32
 21068  003E8C  B4D8               	btfsc	status,2,c
 21069  003E8E  EF4B  F01F         	goto	i2u936_41
 21070  003E92  EF4D  F01F         	goto	i2u936_40
 21071  003E96                     i2u936_41:
 21072  003E96  EF75  F01F         	goto	i2l7717
 21073  003E9A                     i2u936_40:
 21074  003E9A  0EF7               	movlw	247
 21075  003E9C  6E0A               	movwf	??i2_atoi^0,c
 21076  003E9E  0EFF               	movlw	255
 21077  003EA0  6E0B               	movwf	(??i2_atoi+1)^0,c
 21078  003EA2  C008  FFF6         	movff	i2atoi@s,tblptrl
 21079  003EA6  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 21080  003EAA  0E00               	movlw	low (__mediumconst shr (0+16))
 21081  003EAC  6EF8               	movwf	tblptru,c
 21082  003EAE  0E0E               	movlw	(high __ramtop+-1)
 21083  003EB0  64F7               	cpfsgt	tblptrh,c
 21084  003EB2  D003               	bra	i2u937_47
 21085  003EB4  0008               	tblrd		*
 21086  003EB6  50F5               	movf	tablat,w,c
 21087  003EB8  D005               	bra	i2u937_40
 21088  003EBA                     i2u937_47:
 21089  003EBA  CFF6 FFE1          	movff	tblptrl,fsr1l
 21090  003EBE  CFF7 FFE2          	movff	tblptrh,fsr1h
 21091  003EC2  50E7               	movf	indf1,w,c
 21092  003EC4                     i2u937_40:
 21093  003EC4  6E0C               	movwf	(??i2_atoi+2)^0,c
 21094  003EC6  6A0D               	clrf	(??i2_atoi+3)^0,c
 21095  003EC8  500A               	movf	??i2_atoi^0,w,c
 21096  003ECA  260C               	addwf	(??i2_atoi+2)^0,f,c
 21097  003ECC  500B               	movf	(??i2_atoi+1)^0,w,c
 21098  003ECE  220D               	addwfc	(??i2_atoi+3)^0,f,c
 21099  003ED0  500D               	movf	(??i2_atoi+3)^0,w,c
 21100  003ED2  E109               	bnz	i2u938_40
 21101  003ED4  0E05               	movlw	5
 21102  003ED6  5C0C               	subwf	(??i2_atoi+2)^0,w,c
 21103  003ED8  A0D8               	btfss	status,0,c
 21104  003EDA  EF71  F01F         	goto	i2u938_41
 21105  003EDE  EF73  F01F         	goto	i2u938_40
 21106  003EE2                     i2u938_41:
 21107  003EE2  EF75  F01F         	goto	i2l7717
 21108  003EE6                     i2u938_40:
 21109  003EE6  0E00               	movlw	0
 21110  003EE8  6E14               	movwf	i2_atoi$2286^0,c
 21111  003EEA                     i2l7717:
 21112  003EEA  C014  F010         	movff	i2_atoi$2286,i2_atoi$2285
 21113  003EEE  6A11               	clrf	(i2_atoi$2285+1)^0,c
 21114  003EF0  5010               	movf	i2_atoi$2285^0,w,c
 21115  003EF2  1011               	iorwf	(i2_atoi$2285+1)^0,w,c
 21116  003EF4  A4D8               	btfss	status,2,c
 21117  003EF6  EF7F  F01F         	goto	i2u939_41
 21118  003EFA  EF81  F01F         	goto	i2u939_40
 21119  003EFE                     i2u939_41:
 21120  003EFE  EF30  F01F         	goto	i2l7707
 21121  003F02                     i2u939_40:
 21122  003F02  EF8B  F01F         	goto	i2l7727
 21123  003F06                     i2l7723:
 21124  003F06  0E00               	movlw	0
 21125  003F08  6E0F               	movwf	(i2atoi@neg+1)^0,c
 21126  003F0A  0E01               	movlw	1
 21127  003F0C  6E0E               	movwf	i2atoi@neg^0,c
 21128  003F0E                     i2l7725:
 21129  003F0E  4A08               	infsnz	i2atoi@s^0,f,c
 21130  003F10  2A09               	incf	(i2atoi@s+1)^0,f,c
 21131  003F12  EFD8  F01F         	goto	i2l7733
 21132  003F16                     i2l7727:
 21133  003F16  C008  FFF6         	movff	i2atoi@s,tblptrl
 21134  003F1A  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 21135  003F1E  0E00               	movlw	low (__mediumconst shr (0+16))
 21136  003F20  6EF8               	movwf	tblptru,c
 21137  003F22  0E0E               	movlw	(high __ramtop+-1)
 21138  003F24  64F7               	cpfsgt	tblptrh,c
 21139  003F26  D003               	bra	i2u940_47
 21140  003F28  0008               	tblrd		*
 21141  003F2A  50F5               	movf	tablat,w,c
 21142  003F2C  D005               	bra	i2u940_40
 21143  003F2E                     i2u940_47:
 21144  003F2E  CFF6 FFE1          	movff	tblptrl,fsr1l
 21145  003F32  CFF7 FFE2          	movff	tblptrh,fsr1h
 21146  003F36  50E7               	movf	indf1,w,c
 21147  003F38                     i2u940_40:
 21148  003F38  6E0A               	movwf	??i2_atoi^0,c
 21149  003F3A  6A0B               	clrf	(??i2_atoi+1)^0,c
 21150                           
 21151                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21152                           ; Switch size 1, requested type "simple"
 21153                           ; Number of cases is 1, Range of values is 0 to 0
 21154                           ; switch strategies available:
 21155                           ; Name         Instructions Cycles
 21156                           ; simple_byte            4     3 (average)
 21157                           ;	Chosen strategy is simple_byte
 21158  003F3C  500B               	movf	(??i2_atoi+1)^0,w,c
 21159  003F3E  0A00               	xorlw	0	; case 0
 21160  003F40  B4D8               	btfsc	status,2,c
 21161  003F42  EFA5  F01F         	goto	i2l9219
 21162  003F46  EFD8  F01F         	goto	i2l7733
 21163  003F4A                     i2l9219:
 21164                           
 21165                           ; Switch size 1, requested type "simple"
 21166                           ; Number of cases is 2, Range of values is 43 to 45
 21167                           ; switch strategies available:
 21168                           ; Name         Instructions Cycles
 21169                           ; simple_byte            7     4 (average)
 21170                           ;	Chosen strategy is simple_byte
 21171  003F4A  500A               	movf	??i2_atoi^0,w,c
 21172  003F4C  0A2B               	xorlw	43	; case 43
 21173  003F4E  B4D8               	btfsc	status,2,c
 21174  003F50  EF87  F01F         	goto	i2l7725
 21175  003F54  0A06               	xorlw	6	; case 45
 21176  003F56  B4D8               	btfsc	status,2,c
 21177  003F58  EF83  F01F         	goto	i2l7723
 21178  003F5C  EFD8  F01F         	goto	i2l7733
 21179  003F60                     i2l7729:
 21180  003F60  C015  F001         	movff	i2atoi@n,i2___wmul@multiplier
 21181  003F64  C016  F002         	movff	i2atoi@n+1,i2___wmul@multiplier+1
 21182  003F68  0E00               	movlw	0
 21183  003F6A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 21184  003F6C  0E0A               	movlw	10
 21185  003F6E  6E03               	movwf	i2___wmul@multiplicand^0,c
 21186  003F70  EC9B  F033         	call	i2___wmul	;wreg free
 21187  003F74  C008  FFF6         	movff	i2atoi@s,tblptrl
 21188  003F78  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 21189  003F7C  0E00               	movlw	low (__mediumconst shr (0+16))
 21190  003F7E  6EF8               	movwf	tblptru,c
 21191  003F80  0E0E               	movlw	(high __ramtop+-1)
 21192  003F82  64F7               	cpfsgt	tblptrh,c
 21193  003F84  D003               	bra	i2u941_47
 21194  003F86  0008               	tblrd		*
 21195  003F88  50F5               	movf	tablat,w,c
 21196  003F8A  D005               	bra	i2u941_40
 21197  003F8C                     i2u941_47:
 21198  003F8C  CFF6 FFE1          	movff	tblptrl,fsr1l
 21199  003F90  CFF7 FFE2          	movff	tblptrh,fsr1h
 21200  003F94  50E7               	movf	indf1,w,c
 21201  003F96                     i2u941_40:
 21202  003F96  6E0A               	movwf	??i2_atoi^0,c
 21203  003F98  500A               	movf	??i2_atoi^0,w,c
 21204  003F9A  5E01               	subwf	?i2___wmul^0,f,c
 21205  003F9C  0E00               	movlw	0
 21206  003F9E  5A02               	subwfb	(?i2___wmul+1)^0,f,c
 21207  003FA0  0E30               	movlw	48
 21208  003FA2  2401               	addwf	?i2___wmul^0,w,c
 21209  003FA4  6E15               	movwf	i2atoi@n^0,c
 21210  003FA6  0E00               	movlw	0
 21211  003FA8  2002               	addwfc	(?i2___wmul+1)^0,w,c
 21212  003FAA  6E16               	movwf	(i2atoi@n+1)^0,c
 21213  003FAC  EF87  F01F         	goto	i2l7725
 21214  003FB0                     i2l7733:
 21215  003FB0  0ED0               	movlw	208
 21216  003FB2  6E0A               	movwf	??i2_atoi^0,c
 21217  003FB4  0EFF               	movlw	255
 21218  003FB6  6E0B               	movwf	(??i2_atoi+1)^0,c
 21219  003FB8  C008  FFF6         	movff	i2atoi@s,tblptrl
 21220  003FBC  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 21221  003FC0  0E00               	movlw	low (__mediumconst shr (0+16))
 21222  003FC2  6EF8               	movwf	tblptru,c
 21223  003FC4  0E0E               	movlw	(high __ramtop+-1)
 21224  003FC6  64F7               	cpfsgt	tblptrh,c
 21225  003FC8  D003               	bra	i2u942_47
 21226  003FCA  0008               	tblrd		*
 21227  003FCC  50F5               	movf	tablat,w,c
 21228  003FCE  D005               	bra	i2u942_40
 21229  003FD0                     i2u942_47:
 21230  003FD0  CFF6 FFE1          	movff	tblptrl,fsr1l
 21231  003FD4  CFF7 FFE2          	movff	tblptrh,fsr1h
 21232  003FD8  50E7               	movf	indf1,w,c
 21233  003FDA                     i2u942_40:
 21234  003FDA  6E0C               	movwf	(??i2_atoi+2)^0,c
 21235  003FDC  6A0D               	clrf	(??i2_atoi+3)^0,c
 21236  003FDE  500A               	movf	??i2_atoi^0,w,c
 21237  003FE0  260C               	addwf	(??i2_atoi+2)^0,f,c
 21238  003FE2  500B               	movf	(??i2_atoi+1)^0,w,c
 21239  003FE4  220D               	addwfc	(??i2_atoi+3)^0,f,c
 21240  003FE6  500D               	movf	(??i2_atoi+3)^0,w,c
 21241  003FE8  E10A               	bnz	i2u943_40
 21242  003FEA  0E0A               	movlw	10
 21243  003FEC  5C0C               	subwf	(??i2_atoi+2)^0,w,c
 21244  003FEE  A0D8               	btfss	status,0,c
 21245  003FF0  EFFC  F01F         	goto	i2u943_41
 21246  003FF4  EFFF  F01F         	goto	i2u943_40
 21247  003FF8                     i2u943_41:
 21248  003FF8  0E01               	movlw	1
 21249  003FFA  EF00  F020         	goto	i2u944_40
 21250  003FFE                     i2u943_40:
 21251  003FFE  0E00               	movlw	0
 21252  004000                     i2u944_40:
 21253  004000  6E12               	movwf	i2_atoi$2287^0,c
 21254  004002  6A13               	clrf	(i2_atoi$2287+1)^0,c
 21255  004004  5012               	movf	i2_atoi$2287^0,w,c
 21256  004006  1013               	iorwf	(i2_atoi$2287+1)^0,w,c
 21257  004008  A4D8               	btfss	status,2,c
 21258  00400A  EF09  F020         	goto	i2u945_41
 21259  00400E  EF0B  F020         	goto	i2u945_40
 21260  004012                     i2u945_41:
 21261  004012  EFB0  F01F         	goto	i2l7729
 21262  004016                     i2u945_40:
 21263  004016  500E               	movf	i2atoi@neg^0,w,c
 21264  004018  100F               	iorwf	(i2atoi@neg+1)^0,w,c
 21265  00401A  A4D8               	btfss	status,2,c
 21266  00401C  EF12  F020         	goto	i2u946_41
 21267  004020  EF14  F020         	goto	i2u946_40
 21268  004024                     i2u946_41:
 21269  004024  EF22  F020         	goto	i2l1553
 21270  004028                     i2u946_40:
 21271  004028  C015  F00A         	movff	i2atoi@n,??i2_atoi
 21272  00402C  C016  F00B         	movff	i2atoi@n+1,??i2_atoi+1
 21273  004030  1E0A               	comf	??i2_atoi^0,f,c
 21274  004032  1E0B               	comf	(??i2_atoi+1)^0,f,c
 21275  004034  4A0A               	infsnz	??i2_atoi^0,f,c
 21276  004036  2A0B               	incf	(??i2_atoi+1)^0,f,c
 21277  004038  C00A  F008         	movff	??i2_atoi,?i2_atoi
 21278  00403C  C00B  F009         	movff	??i2_atoi+1,?i2_atoi+1
 21279  004040  EF26  F020         	goto	i2l1556
 21280  004044                     i2l1553:
 21281  004044  C015  F008         	movff	i2atoi@n,?i2_atoi
 21282  004048  C016  F009         	movff	i2atoi@n+1,?i2_atoi+1
 21283  00404C                     i2l1556:
 21284  00404C  0012               	return		;funcret
 21285  00404E                     __end_ofi2_atoi:
 21286                           	opt callstack 0
 21287                           
 21288 ;; *************** function i2_isspace *****************
 21289 ;; Defined at:
 21290 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 21291 ;; Parameters:    Size  Location     Type
 21292 ;;  c               2    0[COMRAM] int 
 21293 ;; Auto vars:     Size  Location     Type
 21294 ;;		None
 21295 ;; Return value:  Size  Location     Type
 21296 ;;                  2    0[COMRAM] int 
 21297 ;; Registers used:
 21298 ;;		wreg, status,2, status,0
 21299 ;; Tracked objects:
 21300 ;;		On entry : 0/0
 21301 ;;		On exit  : 0/0
 21302 ;;		Unchanged: 0/0
 21303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21304 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21305 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21306 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21307 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21308 ;;Total ram usage:        7 bytes
 21309 ;; Hardware stack levels used:    1
 21310 ;; This function calls:
 21311 ;;		Nothing
 21312 ;; This function is called by:
 21313 ;;		i2_atoi
 21314 ;; This function uses a non-reentrant model
 21315 ;;
 21316                           
 21317                           	psect	text97
 21318  005FE6                     __ptext97:
 21319                           	opt callstack 0
 21320  005FE6                     i2_isspace:
 21321                           	opt callstack 12
 21322  005FE6  0E01               	movlw	1
 21323  005FE8  6E07               	movwf	i2_isspace$2312^0,c
 21324  005FEA  0E20               	movlw	32
 21325  005FEC  1801               	xorwf	i2isspace@c^0,w,c
 21326  005FEE  1002               	iorwf	(i2isspace@c+1)^0,w,c
 21327  005FF0  B4D8               	btfsc	status,2,c
 21328  005FF2  EFFD  F02F         	goto	i2u865_41
 21329  005FF6  EFFF  F02F         	goto	i2u865_40
 21330  005FFA                     i2u865_41:
 21331  005FFA  EF18  F030         	goto	i2l7397
 21332  005FFE                     i2u865_40:
 21333  005FFE  0EF7               	movlw	247
 21334  006000  6E03               	movwf	??i2_isspace^0,c
 21335  006002  0EFF               	movlw	255
 21336  006004  6E04               	movwf	(??i2_isspace+1)^0,c
 21337  006006  C001  F005         	movff	i2isspace@c,??i2_isspace+2
 21338  00600A  C002  F006         	movff	i2isspace@c+1,??i2_isspace+3
 21339  00600E  5003               	movf	??i2_isspace^0,w,c
 21340  006010  2605               	addwf	(??i2_isspace+2)^0,f,c
 21341  006012  5004               	movf	(??i2_isspace+1)^0,w,c
 21342  006014  2206               	addwfc	(??i2_isspace+3)^0,f,c
 21343  006016  5006               	movf	(??i2_isspace+3)^0,w,c
 21344  006018  E109               	bnz	i2u866_40
 21345  00601A  0E05               	movlw	5
 21346  00601C  5C05               	subwf	(??i2_isspace+2)^0,w,c
 21347  00601E  A0D8               	btfss	status,0,c
 21348  006020  EF14  F030         	goto	i2u866_41
 21349  006024  EF16  F030         	goto	i2u866_40
 21350  006028                     i2u866_41:
 21351  006028  EF18  F030         	goto	i2l7397
 21352  00602C                     i2u866_40:
 21353  00602C  0E00               	movlw	0
 21354  00602E  6E07               	movwf	i2_isspace$2312^0,c
 21355  006030                     i2l7397:
 21356  006030  C007  F001         	movff	i2_isspace$2312,?i2_isspace
 21357  006034  6A02               	clrf	(?i2_isspace+1)^0,c
 21358  006036  0012               	return		;funcret
 21359  006038                     __end_ofi2_isspace:
 21360                           	opt callstack 0
 21361                           
 21362 ;; *************** function i2_isdigit *****************
 21363 ;; Defined at:
 21364 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 21365 ;; Parameters:    Size  Location     Type
 21366 ;;  c               2    0[COMRAM] int 
 21367 ;; Auto vars:     Size  Location     Type
 21368 ;;		None
 21369 ;; Return value:  Size  Location     Type
 21370 ;;                  2    0[COMRAM] int 
 21371 ;; Registers used:
 21372 ;;		wreg, status,2, status,0
 21373 ;; Tracked objects:
 21374 ;;		On entry : 0/0
 21375 ;;		On exit  : 0/0
 21376 ;;		Unchanged: 0/0
 21377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21378 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21380 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21381 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21382 ;;Total ram usage:        6 bytes
 21383 ;; Hardware stack levels used:    1
 21384 ;; This function calls:
 21385 ;;		Nothing
 21386 ;; This function is called by:
 21387 ;;		i2_vfpfcnvrt
 21388 ;;		i2_atoi
 21389 ;; This function uses a non-reentrant model
 21390 ;;
 21391                           
 21392                           	psect	text98
 21393  00654A                     __ptext98:
 21394                           	opt callstack 0
 21395  00654A                     i2_isdigit:
 21396                           	opt callstack 13
 21397  00654A  0ED0               	movlw	208
 21398  00654C  6E03               	movwf	??i2_isdigit^0,c
 21399  00654E  0EFF               	movlw	255
 21400  006550  6E04               	movwf	(??i2_isdigit+1)^0,c
 21401  006552  C001  F005         	movff	i2isdigit@c,??i2_isdigit+2
 21402  006556  C002  F006         	movff	i2isdigit@c+1,??i2_isdigit+3
 21403  00655A  5003               	movf	??i2_isdigit^0,w,c
 21404  00655C  2605               	addwf	(??i2_isdigit+2)^0,f,c
 21405  00655E  5004               	movf	(??i2_isdigit+1)^0,w,c
 21406  006560  2206               	addwfc	(??i2_isdigit+3)^0,f,c
 21407  006562  5006               	movf	(??i2_isdigit+3)^0,w,c
 21408  006564  E10A               	bnz	i2u863_40
 21409  006566  0E0A               	movlw	10
 21410  006568  5C05               	subwf	(??i2_isdigit+2)^0,w,c
 21411  00656A  A0D8               	btfss	status,0,c
 21412  00656C  EFBA  F032         	goto	i2u863_41
 21413  006570  EFBD  F032         	goto	i2u863_40
 21414  006574                     i2u863_41:
 21415  006574  0E01               	movlw	1
 21416  006576  EFBE  F032         	goto	i2u864_40
 21417  00657A                     i2u863_40:
 21418  00657A  0E00               	movlw	0
 21419  00657C                     i2u864_40:
 21420  00657C  6E01               	movwf	?i2_isdigit^0,c
 21421  00657E  6A02               	clrf	(?i2_isdigit+1)^0,c
 21422  006580  0012               	return		;funcret
 21423  006582                     __end_ofi2_isdigit:
 21424                           	opt callstack 0
 21425                           
 21426 ;; *************** function i2___wmul *****************
 21427 ;; Defined at:
 21428 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 21429 ;; Parameters:    Size  Location     Type
 21430 ;;  multiplier      2    0[COMRAM] unsigned int 
 21431 ;;  multiplicand    2    2[COMRAM] unsigned int 
 21432 ;; Auto vars:     Size  Location     Type
 21433 ;;  __wmul          2    4[COMRAM] unsigned int 
 21434 ;; Return value:  Size  Location     Type
 21435 ;;                  2    0[COMRAM] unsigned int 
 21436 ;; Registers used:
 21437 ;;		wreg, status,2, status,0, prodl, prodh
 21438 ;; Tracked objects:
 21439 ;;		On entry : 0/0
 21440 ;;		On exit  : 0/0
 21441 ;;		Unchanged: 0/0
 21442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21443 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21444 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21446 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21447 ;;Total ram usage:        6 bytes
 21448 ;; Hardware stack levels used:    1
 21449 ;; This function calls:
 21450 ;;		Nothing
 21451 ;; This function is called by:
 21452 ;;		i2_atoi
 21453 ;; This function uses a non-reentrant model
 21454 ;;
 21455                           
 21456                           	psect	text99
 21457  006736                     __ptext99:
 21458                           	opt callstack 0
 21459  006736                     i2___wmul:
 21460                           	opt callstack 12
 21461  006736  5001               	movf	i2___wmul@multiplier^0,w,c
 21462  006738  0203               	mulwf	i2___wmul@multiplicand^0,c
 21463  00673A  CFF3 F005          	movff	prodl,i2___wmul@product
 21464  00673E  CFF4 F006          	movff	prodh,i2___wmul@product+1
 21465  006742  5001               	movf	i2___wmul@multiplier^0,w,c
 21466  006744  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 21467  006746  50F3               	movf	243,w,c
 21468  006748  2606               	addwf	(i2___wmul@product+1)^0,f,c
 21469  00674A  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 21470  00674C  0203               	mulwf	i2___wmul@multiplicand^0,c
 21471  00674E  50F3               	movf	243,w,c
 21472  006750  2606               	addwf	(i2___wmul@product+1)^0,f,c
 21473  006752  C005  F001         	movff	i2___wmul@product,?i2___wmul
 21474  006756  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 21475  00675A  0012               	return		;funcret
 21476  00675C                     __end_ofi2___wmul:
 21477                           	opt callstack 0
 21478                           
 21479 ;; *************** function i2_TMR0_WriteTimer *****************
 21480 ;; Defined at:
 21481 ;;		line 115 in file "mcc_generated_files/tmr0.c"
 21482 ;; Parameters:    Size  Location     Type
 21483 ;;  timerVal        2    0[COMRAM] unsigned short 
 21484 ;; Auto vars:     Size  Location     Type
 21485 ;;		None
 21486 ;; Return value:  Size  Location     Type
 21487 ;;                  1    wreg      void 
 21488 ;; Registers used:
 21489 ;;		wreg, status,2
 21490 ;; Tracked objects:
 21491 ;;		On entry : 0/0
 21492 ;;		On exit  : 0/0
 21493 ;;		Unchanged: 0/0
 21494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21495 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21498 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21499 ;;Total ram usage:        2 bytes
 21500 ;; Hardware stack levels used:    1
 21501 ;; This function calls:
 21502 ;;		Nothing
 21503 ;; This function is called by:
 21504 ;;		_INTERRUPT_S1_CALLBACK
 21505 ;; This function uses a non-reentrant model
 21506 ;;
 21507                           
 21508                           	psect	text100
 21509  0068D0                     __ptext100:
 21510                           	opt callstack 0
 21511  0068D0                     i2_TMR0_WriteTimer:
 21512                           	opt callstack 16
 21513  0068D0                     
 21514                           ;mcc_generated_files/tmr0.c: 115: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 116: {;mcc_generated_files/tmr0.c: 118:     TMR0H = timerVal >> 8;
 21515  0068D0  5002               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
 21516  0068D2  6ED7               	movwf	215,c	;volatile
 21517  0068D4                     
 21518                           ;mcc_generated_files/tmr0.c: 119:     TMR0L = (uint8_t) timerVal;
 21519  0068D4  C001  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
 21520  0068D8  0012               	return		;funcret
 21521  0068DA                     __end_ofi2_TMR0_WriteTimer:
 21522                           	opt callstack 0
 21523                           
 21524 ;; *************** function _TMR0_StopTimer *****************
 21525 ;; Defined at:
 21526 ;;		line 96 in file "mcc_generated_files/tmr0.c"
 21527 ;; Parameters:    Size  Location     Type
 21528 ;;		None
 21529 ;; Auto vars:     Size  Location     Type
 21530 ;;		None
 21531 ;; Return value:  Size  Location     Type
 21532 ;;                  1    wreg      void 
 21533 ;; Registers used:
 21534 ;;		None
 21535 ;; Tracked objects:
 21536 ;;		On entry : 0/0
 21537 ;;		On exit  : 0/0
 21538 ;;		Unchanged: 0/0
 21539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21544 ;;Total ram usage:        0 bytes
 21545 ;; Hardware stack levels used:    1
 21546 ;; This function calls:
 21547 ;;		Nothing
 21548 ;; This function is called by:
 21549 ;;		_INTERRUPT_S1_CALLBACK
 21550 ;; This function uses a non-reentrant model
 21551 ;;
 21552                           
 21553                           	psect	text101
 21554  0068EA                     __ptext101:
 21555                           	opt callstack 0
 21556  0068EA                     _TMR0_StopTimer:
 21557                           	opt callstack 16
 21558  0068EA                     
 21559                           ;mcc_generated_files/tmr0.c: 99:     T0CONbits.TMR0ON = 0;
 21560  0068EA  9ED5               	bcf	213,7,c	;volatile
 21561  0068EC  0012               	return		;funcret
 21562  0068EE                     __end_of_TMR0_StopTimer:
 21563                           	opt callstack 0
 21564                           
 21565 ;; *************** function _TMR0_StartTimer *****************
 21566 ;; Defined at:
 21567 ;;		line 90 in file "mcc_generated_files/tmr0.c"
 21568 ;; Parameters:    Size  Location     Type
 21569 ;;		None
 21570 ;; Auto vars:     Size  Location     Type
 21571 ;;		None
 21572 ;; Return value:  Size  Location     Type
 21573 ;;                  1    wreg      void 
 21574 ;; Registers used:
 21575 ;;		None
 21576 ;; Tracked objects:
 21577 ;;		On entry : 0/0
 21578 ;;		On exit  : 0/0
 21579 ;;		Unchanged: 0/0
 21580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21585 ;;Total ram usage:        0 bytes
 21586 ;; Hardware stack levels used:    1
 21587 ;; This function calls:
 21588 ;;		Nothing
 21589 ;; This function is called by:
 21590 ;;		_INTERRUPT_S1_CALLBACK
 21591 ;; This function uses a non-reentrant model
 21592 ;;
 21593                           
 21594                           	psect	text102
 21595  0068EE                     __ptext102:
 21596                           	opt callstack 0
 21597  0068EE                     _TMR0_StartTimer:
 21598                           	opt callstack 16
 21599  0068EE                     
 21600                           ;mcc_generated_files/tmr0.c: 93:     T0CONbits.TMR0ON = 1;
 21601  0068EE  8ED5               	bsf	213,7,c	;volatile
 21602  0068F0  0012               	return		;funcret
 21603  0068F2                     __end_of_TMR0_StartTimer:
 21604                           	opt callstack 0
 21605                           
 21606                           	psect	text103
 21607  000000                     __ptext103:
 21608                           	opt callstack 0
 21609  000000                     
 21610                           	psect	rparam
 21611  0000                     
 21612                           	psect	temp
 21613  00005F                     btemp:
 21614                           	opt callstack 0
 21615  00005F                     	ds	1
 21616  0000                     int$flags	set	btemp
 21617  0000                     wtemp8	set	btemp+1
 21618  0000                     ttemp5	set	btemp+1
 21619  0000                     ttemp6	set	btemp+4
 21620  0000                     ttemp7	set	btemp+8
 21621                           tosu	equ	0xFFF
 21622                           tosh	equ	0xFFE
 21623                           tosl	equ	0xFFD
 21624                           stkptr	equ	0xFFC
 21625                           pclatu	equ	0xFFB
 21626                           pclath	equ	0xFFA
 21627                           pcl	equ	0xFF9
 21628                           tblptru	equ	0xFF8
 21629                           tblptrh	equ	0xFF7
 21630                           tblptrl	equ	0xFF6
 21631                           tablat	equ	0xFF5
 21632                           prodh	equ	0xFF4
 21633                           prodl	equ	0xFF3
 21634                           indf0	equ	0xFEF
 21635                           postinc0	equ	0xFEE
 21636                           postdec0	equ	0xFED
 21637                           preinc0	equ	0xFEC
 21638                           plusw0	equ	0xFEB
 21639                           fsr0h	equ	0xFEA
 21640                           fsr0l	equ	0xFE9
 21641                           wreg	equ	0xFE8
 21642                           indf1	equ	0xFE7
 21643                           postinc1	equ	0xFE6
 21644                           postdec1	equ	0xFE5
 21645                           preinc1	equ	0xFE4
 21646                           plusw1	equ	0xFE3
 21647                           fsr1h	equ	0xFE2
 21648                           fsr1l	equ	0xFE1
 21649                           bsr	equ	0xFE0
 21650                           indf2	equ	0xFDF
 21651                           postinc2	equ	0xFDE
 21652                           postdec2	equ	0xFDD
 21653                           preinc2	equ	0xFDC
 21654                           plusw2	equ	0xFDB
 21655                           fsr2h	equ	0xFDA
 21656                           fsr2l	equ	0xFD9
 21657                           status	equ	0xFD8


Data Sizes:
    Strings     249
    Constant    3536
    Data        11
    BSS         83
    Persistent  12
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      94
    BANK0           160     85     115
    BANK1           256    116     188
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[12]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_105(CODE[3]), STR_101(CODE[3]), STR_96(CODE[3]), STR_92(CODE[3]), 
		 -> STR_87(CODE[4]), STR_83(CODE[4]), STR_78(CODE[3]), STR_73(CODE[3]), 
		 -> STR_68(CODE[4]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[4]), 
		 -> STR_48(CODE[3]), STR_43(CODE[3]), STR_38(CODE[4]), STR_33(CODE[3]), 
		 -> STR_29(CODE[3]), STR_24(CODE[3]), STR_20(CODE[3]), STR_15(CODE[4]), 
		 -> STR_11(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_105(CODE[3]), STR_101(CODE[3]), STR_96(CODE[3]), STR_92(CODE[3]), 
		 -> STR_87(CODE[4]), STR_83(CODE[4]), STR_78(CODE[3]), STR_73(CODE[3]), 
		 -> STR_68(CODE[4]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[4]), 
		 -> STR_48(CODE[3]), STR_43(CODE[3]), STR_38(CODE[4]), STR_33(CODE[3]), 
		 -> STR_29(CODE[3]), STR_24(CODE[3]), STR_20(CODE[3]), STR_15(CODE[4]), 
		 -> STR_11(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_8(CODE[40]), STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[39]), 
		 -> STR_4(CODE[22]), STR_3(CODE[12]), STR_1(CODE[13]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_8(CODE[40]), STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[39]), 
		 -> STR_4(CODE[22]), STR_3(CODE[12]), STR_1(CODE[13]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK1[32]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[12]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_8(CODE[40]), STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[39]), 
		 -> STR_4(CODE[22]), STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    S2325_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_8(CODE[40]), STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[39]), 
		 -> STR_4(CODE[22]), STR_3(CODE[12]), read_from_usart@data(BANK0[10]), STR_1(CODE[13]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_8(CODE[40]), STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[39]), 
		 -> STR_4(CODE[22]), STR_3(CODE[12]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 40
		 -> STR_8(CODE[40]), STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[39]), 
		 -> STR_4(CODE[22]), STR_3(CODE[12]), STR_1(CODE[13]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    lcd_draw_string@pS	PTR const unsigned char  size(2) Largest target is 33
		 -> string(BANK1[30]), STR_2(CODE[33]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INTERRUPT_S1_CALLBACK(), IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INTERRUPT_S1_CALLBACK(), Absolute function(), IOCB4_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_S1_CALLBACK->i2_printf
    i2_printf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_xtoa
    i2_xtoa->i2_pad
    i2_toupper->i2_islower
    i2_utoa->i2_pad
    i2_stoa->i2_fputc
    i2_otoa->i2_pad
    i2_dtoa->i2_pad
    i2_abs->i2___aomod
    i2_ctoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_fputc->i2_putch
    i2_putch->i2_EUSART1_Write
    i2_atoi->i2_isspace

Critical Paths under _main in BANK0

    _read_from_usart->_atoi
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace
    _lcd_init->_lcd_fill
    _lcd_fill->_lcd_set_cursor
    _lcd_draw_string->_lcd_draw_char
    _lcd_draw_char->_lcd_set_cursor
    _lcd_set_cursor->_lcd_set_cursor_x
    _lcd_set_cursor->_lcd_set_cursor_y
    _lcd_set_cursor_y->_lcd_send
    _lcd_set_cursor_x->_lcd_send
    _lcd_draw_pixel->_lcd_send
    _lcd_send->_SPI_ExchangeByte
    ___aldiv->___lmul
    _SYSTEM_Initialize->_TMR0_Initialize
    _SYSTEM_Initialize->_TMR1_Initialize
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_S1_CALLBACK->i2_printf
    i2_vfprintf->i2_vfpfcnvrt

Critical Paths under _main in BANK1

    _main->_snprintf
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0  180991
                                            109 BANK1      7     7      0
                  _ADC_GetConversion
          _IOCB4_SetInterruptHandler
                           _SPI_Open
                  _SYSTEM_Initialize
                     _TMR0_ReadTimer
                    _TMR0_WriteTimer
                            ___aldiv
                             ___lmul
                    _lcd_draw_string
                           _lcd_init
                             _printf
                    _read_from_usart
                           _snprintf
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            14     4     10   59971
                                             95 BANK1     14     4     10
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   59264
                                             73 BANK1     22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _read_from_usart                                     17    15      2    3077
                                             67 BANK0     17    15      2
                       _EUSART1_Read
                      _EUSART1_Write
                _EUSART1_is_rx_ready
                _EUSART1_is_tx_ready
                    _TMR0_WriteTimer
                               _atoi
 ---------------------------------------------------------------------------------
 (2) _TMR0_WriteTimer                                      2     0      2     246
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_tx_ready                                  1     1      0      24
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   59086
                                             73 BANK1     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   58206
                                             65 BANK1      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   56776
                                             28 BANK1     37    31      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    8901
                                             74 BANK0     11     0     11
                                              0 BANK1     28    28      0
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                             51 BANK0      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    7743
                                             74 BANK0     10     0     10
                                              0 BANK1     22    22      0
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                             45 BANK0     17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                             45 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    5995
                                             45 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2800
                                             56 BANK0     22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    7015
                                             74 BANK0     10     0     10
                                              0 BANK1     24    24      0
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    8597
                                             74 BANK0     10     0     10
                                              0 BANK1     26    26      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             63 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                             45 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                             45 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    6070
                                             74 BANK0      5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    5791
                                             63 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     310
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2139
                                             56 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1639
                                             47 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      62
                                             46 BANK0      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Write                                       1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2285
                                             52 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                             45 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     371
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     912
                                             45 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0   31303
                           _lcd_fill
                           _lcd_send
                            _msDelay
 ---------------------------------------------------------------------------------
 (2) _msDelay                                              3     3      0      46
                                             45 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _lcd_fill                                             6     4      2   23819
                                             54 BANK0      6     4      2
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_draw_string                                     18     8     10   25662
                                             76 BANK0      8     8      0
                                              0 BANK1     10     0     10
                      _lcd_draw_char
 ---------------------------------------------------------------------------------
 (2) _lcd_draw_char                                       22    12     10   24434
                                             54 BANK0     22    12     10
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       4     0      4   15812
                                             50 BANK0      4     0      4
                   _lcd_set_cursor_x
                   _lcd_set_cursor_y
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_y                                     2     0      2    7580
                                             48 BANK0      2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_x                                     2     0      2    7580
                                             48 BANK0      2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_draw_pixel                                       2     0      2    7862
                                             48 BANK0      2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_send                                             2     1      1    7438
                                             46 BANK0      2     1      1
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI_ExchangeByte                                     1     1      0      22
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     370
                                             45 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     452
                                             57 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _TMR0_ReadTimer                                       8     6      2      69
                                             45 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     174
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Open                                             2     2      0      88
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      22
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                         12    12      0   34209
                                             33 BANK0     12    12      0
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (12) _PIN_MANAGER_IOC                                     0     0      0   34209
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (13) _IOCB4_ISR                                           0     0      0   34209
                   Absolute function *
              _INTERRUPT_S1_CALLBACK *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_S1_CALLBACK                               0     0      0   34209
                    _TMR0_StartTimer
                     _TMR0_StopTimer
                  i2_TMR0_WriteTimer
                           i2_printf
 ---------------------------------------------------------------------------------
 (15) i2_printf                                           10     4      6   34139
                                             86 COMRAM     4     4      0
                                             27 BANK0      6     0      6
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (16) i2_vfprintf                                          8     2      6   33879
                                             78 COMRAM     8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (17) i2_vfpfcnvrt                                        46    40      6   33250
                                             68 COMRAM    10     4      6
                                              0 BANK0     27    27      0
                             i2_atoi
                             i2_ctoa
                             i2_dtoa
                            i2_fputc
                          i2_isdigit
                             i2_otoa
                             i2_stoa
                          i2_strncmp
                             i2_utoa
                             i2_xtoa
 ---------------------------------------------------------------------------------
 (18) i2_xtoa                                             39    28     11    4881
                                             29 COMRAM    39    28     11
                          i2_isalpha
                          i2_isupper
                              i2_pad
                          i2_toupper
 ---------------------------------------------------------------------------------
 (19) i2_toupper                                           8     6      2     262
                                              6 COMRAM     8     6      2
                          i2_islower
 ---------------------------------------------------------------------------------
 (20) i2_islower                                           6     4      2      66
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (19) i2_isupper                                           6     4      2      66
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (19) i2_isalpha                                           6     4      2      66
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (18) i2_utoa                                             32    22     10    4388
                                             29 COMRAM    32    22     10
                          i2___lodiv
                          i2___lomod
                              i2_pad
 ---------------------------------------------------------------------------------
 (19) i2___lomod                                          17     1     16     302
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (19) i2___lodiv                                          25     9     16     311
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (18) i2_strncmp                                          11     5      6    2530
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (18) i2_stoa                                             22    18      4    1804
                                             11 COMRAM    22    18      4
                            i2_fputc
                           i2_strlen
 ---------------------------------------------------------------------------------
 (18) i2_otoa                                             34    24     10    3880
                                             29 COMRAM    34    24     10
                              i2_pad
 ---------------------------------------------------------------------------------
 (18) i2_dtoa                                             36    26     10    5187
                                             29 COMRAM    36    26     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (19) i2_abs                                               4     2      2     128
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (19) i2___aomod                                          18     2     16     503
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (19) i2___aodiv                                          26    10     16     515
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (18) i2_ctoa                                              7     4      3    3265
                                             29 COMRAM     5     2      3
                              i2_pad
 ---------------------------------------------------------------------------------
 (19) i2_pad                                              11     5      6    3096
                                             18 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (20) i2_strlen                                            4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (20) i2_fputs                                             7     3      4    1149
                                             11 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (21) i2_fputc                                             9     5      4     869
                                              2 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (22) i2_putch                                             1     1      0      62
                                              1 COMRAM     1     1      0
                    i2_EUSART1_Write
 ---------------------------------------------------------------------------------
 (23) i2_EUSART1_Write                                     1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (18) i2_atoi                                             15    13      2    1115
                                              7 COMRAM    15    13      2
                           i2___wmul
                          i2_isdigit
                          i2_isspace
 ---------------------------------------------------------------------------------
 (19) i2_isspace                                           7     5      2     134
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (18) i2_isdigit                                           6     4      2     136
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (19) i2___wmul                                            6     2      4     302
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (15) i2_TMR0_WriteTimer                                   2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR0_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _IOCB4_SetInterruptHandler
   _SPI_Open
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
   _TMR0_ReadTimer
   _TMR0_WriteTimer
   ___aldiv
     ___lmul (ARG)
   ___lmul
   _lcd_draw_string
     _lcd_draw_char
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
   _lcd_init
     _lcd_fill
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
     _lcd_send
       _SPI_ExchangeByte
     _msDelay
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
         _isdigit
         _otoa
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _stoa
           _fputc
             _putch
               _EUSART1_Write
           _strlen
         _strncmp
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
           _toupper
             _islower
   _read_from_usart
     _EUSART1_Read
     _EUSART1_Write
     _EUSART1_is_rx_ready
     _EUSART1_is_tx_ready
     _TMR0_WriteTimer
     _atoi
       ___wmul
       _isdigit
       _isspace
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _stoa
             _fputc
               _putch
                 _EUSART1_Write
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _INTERRUPT_S1_CALLBACK *
         _TMR0_StartTimer
         _TMR0_StopTimer
         i2_TMR0_WriteTimer
         i2_printf
           i2_vfprintf
             i2_vfpfcnvrt
               i2_atoi
                 i2___wmul
                 i2_isdigit
                 i2_isspace
               i2_ctoa
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_EUSART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                   i2_strlen
               i2_dtoa
                 i2___aodiv
                 i2___aomod
                 i2_abs
                   i2___aomod (ARG)
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_EUSART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                   i2_strlen
               i2_fputc
                 i2_putch
                   i2_EUSART1_Write
               i2_isdigit
               i2_otoa
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_EUSART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                   i2_strlen
               i2_stoa
                 i2_fputc
                   i2_putch
                     i2_EUSART1_Write
                 i2_strlen
               i2_strncmp
               i2_utoa
                 i2___lodiv
                 i2___lomod
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_EUSART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                   i2_strlen
               i2_xtoa
                 i2_isalpha
                 i2_isupper
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_EUSART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                   i2_strlen
                 i2_toupper
                   i2_islower
       _IOCB4_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     74      BC       8       73.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     55      73       5       71.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5E       1      100.0%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     18D       6        0.0%
DATA                 0      0     18D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Dec 08 15:34:31 2020

                                _SPI_Initialize 6860                                     _SSPSTATbits 000FC7  
                                            l30 6882                                              l51 6870  
                                            l27 677C                                              l61 67C4  
                                            l55 5BF6                                              l63 67D2  
                                            l64 67D6                             ___wmul@multiplicand 008F  
            __size_of_IOCB4_SetInterruptHandler 000A                                     __CFG_BORV$3 000000  
                               _timer0ReloadVal 005B                      ?_IOCB4_SetInterruptHandler 008D  
                                  __CFG_CP0$OFF 000000                                    __CFG_CP1$OFF 000000  
                                  __CFG_CP2$OFF 000000                                    __CFG_CP3$OFF 000000  
                                           l204 6640                                             l300 67EE  
                                           l134 61B0                                             l321 68B0  
                                           l145 68A6                                             l306 6890  
                                           l324 68C4                                             l333 68E8  
                                           l182 62FE                                             l318 68BA  
                                           l502 67BA                                             l167 6834  
                                           l512 6122                                             l273 61F6  
                                           l601 4FE8                                             l281 685E  
                                           l290 666C                                             l179 62DC  
                                           l355 66BE                                             l523 5C7E  
                                           l364 679C                                             l516 60D4  
                                           l508 62BE                                             l452 371E  
                                           l701 44C0                                             l277 6668  
                                           l445 5B42                                             l294 6694  
                                           l278 666A                                             l519 6806  
                                           l703 44C8                                             l367 689C  
                                           l439 5A96                                             l455 3768  
                                           l640 5876                                             l712 4574  
                                           l297 67DC                                             l713 45BE  
                                           l490 64D8                                             l722 385A  
                                           l643 58BA                                             l652 5ED6  
                                           l660 2AAC                                             l732 3A36  
                                           l724 3862                                             l645 58F6  
                                           l717 45C6                                             l592 4BE0  
                                           l760 2F88                                             l737 2D40  
                                           l658 2AA4                                             l762 2FF6  
                                           l746 2DE4                                             l499 29FE  
                                           l683 4088                                             l739 2D48  
                                           l843 5DAC                                             l692 41DA  
                                           l844 5DB4                                             l685 4090  
                                           l926 5206                                             l678 2D04  
                                           l694 424A                                             l847 670E  
                                           l776 0196                                             l961 4750  
                                           l858 5CDA                                             l859 5CEA  
                                           l974 4D46                                             l799 1350  
                                  __CFG_CPB$OFF 000000                                    __CFG_CPD$OFF 000000  
                            i2___aodiv@quotient 0013                                 _timer1ReloadVal 00C8  
                                           _abs 623C                                             _pad 582E  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                             __end_ofi2_vfpfcnvrt 25CA  
                               ?_lcd_set_cursor 0092                              __size_of_IOCB4_ISR 002E  
                                          ?_abs 009F                                            l1302 5690  
                                          l1602 616A                                            l1522 6274  
                                          l1292 52F8                                            l1525 627C  
                                          l1285 52D8                                            l1622 6466  
                                          l1295 5670                                            l1616 65E6  
                                          l1553 3C3E                                            l1641 5E78  
                                          l1609 66E6                                            l1626 54D4  
                                          l1556 3C46                                            l1636 5E70  
                                          l1565 64A0                                            l1573 5FE4  
                                          l1559 637C                                            l1647 63F2  
                                          l1663 50D8                                            l1594 582C  
                                          l1658 50F8                                            l5051 67C0  
                                          l1579 642C                                            ?_pad 009F  
                                          l6313 62BC                                            l6305 627E  
                                          l6331 6860                                            l5611 67A2  
                                          l6307 629A                                            l6411 6692  
                                          l6403 666C                                            l6341 618E  
                                          l6333 686C                                            l5613 67AE  
                                          l6317 67F0                                            l6309 62B6  
                                          l6421 64B0                                            l7221 5788  
                                          l6405 667A                                            l6351 61AE  
                                          l6343 6190                                            l6335 686E  
                                          l6511 675C                                            l5615 67B0  
                                          l6423 64C2                                            l7223 5792  
                                          l6407 6680                                            l6415 6892  
                                          l6329 68E6                                            l6353 6872  
                                          l6345 619C                                            l6337 616C  
                                          l6361 6624                                            l6521 6770  
                                          l6513 6760                                            l5617 67B8  
                                          l6433 5C32                                            l6425 64C6  
                                          l7225 57B0                                            l7217 5762  
                                          l6409 668E                                            l6417 6898  
                                          l9001 5078                                            l6531 5B98  
                                          l6355 6820                                            l6291 68BC  
                                          l6347 619E                                            l6339 6188  
                                          l6371 66B8                                            l6363 663C  
                                          l6523 6774                                            l6515 6764  
                                          l6435 5C3E                                            l6427 5BF8  
                                          l6419 64A6                                            l6611 25DC  
                                          l7227 57E6                                            l7219 5776  
                                          l9003 508C                                            l9011 50F0  
                                          l6533 5B9C                                            l6381 61E2  
                                          l6285 689E                                            l6349 61A0  
                                          l6373 66BA                                            l6365 6696  
                                          l6357 6616                                            l6525 6778  
                                          l6517 6768                                            l6461 4AB8  
                                          l6445 4A60                                            l6437 5C5A  
                                          l6429 5C0A                                            l6701 27F8  
                                          l6621 2618                                            l6613 25E8  
                                          l8301 3AFA                                            l7421 614A  
                                          l9021 66C0                                            l9005 509A  
                                          l9101 367E                                            l6551 62DA  
                                          l6535 5BC0                                            l6527 5B48  
                                          l6287 68B2                                            l6383 61F0  
                                          l6375 61B2                                            l6367 6698  
                                          l6359 6622                                            l6519 676C  
                                          l6471 4B94                                            l6463 4B64  
                                          l6455 4AB4                                            l6447 4A6A  
                                          l6439 5C62                                            l6711 2834  
                                          l6703 2804                                            l6631 2654  
                                          l6623 2624                                            l6615 25F4  
                                          l6607 25CA                                            l8311 3BA8  
                                          l8303 3B02                                            l7175 67DC  
                                          l7415 6124                                            l7423 642E  
                                          l9023 66CA                                            l6391 6648  
                                          l9031 5AB8                                            l9007 50C8  
                                          l9111 3786                                            l9103 36AC  
                                          l6553 62EA                                            l6537 5BF4  
                                          l6529 5B56                                            l6289 68A8  
                                          l6377 61C6                                            l6369 66A0  
                                          l5921 60EE                                            l6473 4B96  
                                          l6465 4B74                                            l6449 4AAE  
                                          l6721 2870                                            l6713 2840  
                                          l6705 2810                                            l6641 2690  
                                          l6633 2660                                            l6625 2630  
                                          l6617 2600                                            l6609 25D6  
                                          l8305 3B0A                                            l7177 67EA  
                                          l7193 6888                                            l7417 6132  
                                          l7425 643A                                            l8401 404E  
                                          l7433 63BA                                            l6393 6656  
                                          l9033 5ACC                                            l9041 5B08  
                                          l9009 50E0                                            l9105 36D8  
                                          l6547 62C4                                            l6379 61D4  
                                          l6571 677E                                            l5931 6088  
                                          l6475 4BA6                                            l6467 4B80  
                                          l9051 4EB0                                            l6731 28AC  
                                          l6723 287C                                            l6715 284C  
                                          l6707 281C                                            l6651 26CC  
                                          l6643 269C                                            l6635 266C  
                                          l6627 263C                                            l6619 260C  
                                          l8315 3BFE                                            l8307 3B56  
                                          l7419 6144                                            l7427 6440  
                                          l8331 5EA6                                            l8411 40C2  
                                          l8403 405E                                            l6395 6664  
                                          l9043 5B26                                            l9035 5AE0  
                                          l9027 5A88                                            l9107 3720  
                                          l6549 62D8                                            l6573 6786  
                                          l5925 60F4                                            l5933 60A0  
                                          l6469 4B84                                            l6477 4BA8  
                                          l9061 4F7E                                            l9053 4EC6  
                                          l6741 28E8                                            l6733 28B8  
                                          l6725 2888                                            l6717 2858  
                                          l6709 2828                                            l6661 2708  
                                          l6653 26D8                                            l6645 26A8  
                                          l6637 2678                                            l6629 2648  
                                          l8317 3C10                                            l7429 6458  
                                          l8333 5EAA                                            l8325 5E7A  
                                          l8341 2A20                                            l8421 40F4  
                                          l8413 40C6                                            l8405 4060  
                                          l8501 3894                                            l9213 0154  
                                          l6389 6642                                            l9045 5B3A  
                                          l9037 5AF4                                            l9029 5AA4  
                                          l9109 376A                                            l6575 6794  
                                          l5927 6120                                            l5919 60D6  
                                          l9063 4FB2                                            l9055 4F00  
                                          l6751 2924                                            l6743 28F4  
                                          l6735 28C4                                            l6727 2894  
                                          l6719 2864                                            l6671 2744  
                                          l6663 2714                                            l6655 26E4  
                                          l6647 26B4                                            l6639 2684  
                                          l8319 3C22                                            l9215 3B40  
                                          l8335 5EB0                                            l8327 5E8E  
                                          l8351 2A96                                            l8343 2A4A  
                                          l8431 4196                                            l8423 40FA  
                                          l8415 40D2                                            l8407 407A  
                                          l8511 392A                                            l8503 389C  
                                          l6399 684C                                            l9039 5B02  
                                          l5937 60A6                                            l9057 4F04  
                                          l9065 4FB6                                            l9049 4EAC  
                                          l6761 2960                                            l6753 2930  
                                          l6745 2900                                            l6737 28D0  
                                          l6729 28A0                                            l6681 2780  
                                          l6673 2750                                            l6665 2720  
                                          l6657 26F0                                            l6649 26C0  
                                          l8329 5E9A                                            l8361 2AEA  
                                          l8353 2AB4                                            l8345 2A6A  
                                          l8441 4204                                            l8433 41B0  
                                          l8425 4100                                            l8417 40DA  
                                          l8409 40B8                                            l8601 5430  
                                          l8521 39F6                                            l8505 38A4  
                                          l8513 3990                                            l7801 5E1A  
                                          l9081 35BA                                            l6851 5C92  
                                          l5939 60D2                                            l9059 4F52  
                                          l6771 299C                                            l6763 296C  
                                          l6755 293C                                            l6747 290C  
                                          l6739 28DC                                            l6691 27BC  
                                          l6683 278C                                            l6675 275C  
                                          l6667 272C                                            l6659 26FC  
                                          l7811 6468                                            l8291 3A88  
                                          l8283 3A38                                            l8371 2B8E  
                                          l8363 2AF2                                            l8355 2AC8  
                                          l8347 2A7A                                            l8339 2A00  
                                          l8443 4214                                            l8435 41CA  
                                          l8419 40E2                                            l8427 415E  
                                          l8451 444E                                            l8603 544E  
                                          l8515 39A4                                            l8523 3A06  
                                          l8507 391E                                            l8531 2D18  
                                          l9067 65B8                                            l9091 35D6  
                                          l9083 35C0                                            l6861 5100  
                                          l6853 5CA0                                            l6781 29DE  
                                          l6773 29A8                                            l6765 2978  
                                          l6757 2948                                            l6749 2918  
                                          l6693 27C8                                            l6685 2798  
                                          l6677 2768                                            l6669 2738  
                                          l8293 3AD8                                            l8285 3A4E  
                                          l7821 45C8                                            l8381 2C62  
                                          l8365 2AFA                                            l8373 2BF4  
                                          l8357 2AD8                                            l8349 2A7C  
                                          l8437 41EA                                            l8445 421A  
                                          l8429 4178                                            l8461 448E  
                                          l8453 4456                                            l8605 546C  
                                          l7901 5208                                            l8517 39C2  
                                          l8509 3924                                            l7805 5E52  
                                          l8541 2D94                                            l8533 2D32  
                                          l8701 03F8                                            l8621 0092  
                                          l9069 65C2                                            l9093 35D8  
                                          l9085 35C4                                            l6871 5140  
                                          l6863 510E                                            l6855 5CB0  
                                          l6783 29EA                                            l6775 29B4  
                                          l6767 2984                                            l6759 2954  
                                          l6695 27D4                                            l6687 27A4  
                                          l6679 2774                                            l7815 66E8  
                                          l8295 3ADC                                            l8287 3A52  
                                          l7831 460E                                            l7823 45CE  
                                          l8391 2CB0                                            l8375 2C10  
                                          l8383 2C72                                            l8367 2B80  
                                          l8359 2AE0                                            l8439 41FE  
                                          l8471 4504                                            l8463 449E  
                                          l8455 446A                                            l8607 547E  
                                          l7911 525E                                            l7903 5214  
                                          l8519 39DC                                            l7807 5E64  
                                          l8551 2DD8                                            l8543 2D9C  
                                          l8535 2D60                                            l8527 2D06  
                                          l8711 04BA                                            l8703 042C  
                                          l8631 00EA                                            l8623 00B8  
                                          l9095 3604                                            l9087 35C6  
                                          l9079 35B6                                            l6881 517E  
                                          l6873 5144                                            l6865 511E  
                                          l6857 5CBA                                            l6849 5C80  
                                          l6785 29F0                                            l6777 29C0  
                                          l6769 2990                                            l6697 27E0  
                                          l6689 27B0                                            l7817 6706  
                                          l8289 3A56                                            l7841 4664  
                                          l7833 462E                                            l7825 45DC  
                                          l8393 2CBC                                            l8385 2C86  
                                          l8377 2C2E                                            l8369 2B88  
                                          l8481 4556                                            l8473 4522  
                                          l8457 4472                                            l8449 443C  
                                          l8609 54AC                                            l7921 52D2  
                                          l7913 5270                                            l7905 5234  
                                          l8561 2E68                                            l8545 2DA4  
                                          l8537 2D6A                                            l8529 2D16  
                                          l8801 0ACE                                            l8721 05AC  
                                          l8713 0504                                            l8633 00EE  
                                          l8625 00C6                                            l9097 3612  
                                          l9089 35C8                                            l6891 51C6  
                                          l6883 518C                                            l6875 5154  
                                          l6867 5122                                            l6859 50FA  
                                          l6779 29CC                                            l6699 27EC  
                                          l8299 3AE4                                            l7771 5852  
                                          l7851 46E6                                            l7843 4678  
                                          l7835 4632                                            l7827 45FC  
                                          l8395 2CC4                                            l8387 2C96  
                                          l8379 2C48                                            l8475 452E  
                                          l8467 44EA                                            l8459 4486  
                                          l7915 529E                                            l7907 523C  
                                          l7931 560A                                            l7923 55C0  
                                          l8491 3820                                            l8571 2EAC  
                                          l8563 2E7A                                            l8555 2E1C  
                                          l8547 2DAC                                            l8539 2D8A  
                                          l8811 0B50                                            l8803 0B04  
                                          l8731 0648                                            l8707 0448  
                                          l8651 0120                                            l8643 0110  
                                          l8635 0100                                            l8627 00D8  
                                          l9099 3620                                            l6893 51D0  
                                          l6885 5196                                            l6877 516A  
                                          l6869 5130                                            l7941 5F98  
                                          l7781 589C                                            l7773 5862  
                                          l7861 4730                                            l7853 46E8  
                                          l7845 4686                                            l7837 463E  
                                          l7829 4600                                            l8389 2C9E  
                                          l8397 2CD4                                            l8485 4586  
                                          l8477 454C                                            l8469 44FE  
                                          l7917 52BE                                            l7909 5250  
                                          l7933 5638                                            l7925 55E0  
                                          l8493 3830                                            l8581 2F78  
                                          l8557 2E2E                                            l8565 2E8E  
                                          l8549 2DC8                                            l8573 2F0A  
                                          l8901 1174                                            l8821 0BC2  
                                          l8813 0B88                                            l8741 0706  
                                          l8717 053C                                            l8709 0482  
                                          l8661 01A8                                            l8629 00DC  
                                          l6887 51B4                                            l6879 5172  
                                          l6895 51D6                                            l7943 5FAC  
                                          l7783 58C8                                            l7775 586E  
                                          l7767 582E                                            l7855 46FA  
                                          l7847 4698                                            l7839 465C  
                                          l7871 4C16                                            l7791 6258  
                                          l8487 459A                                            l8479 4552  
                                          l7919 52C0                                            l7935 5658  
                                          l7927 55E8                                            l8495 3832  
                                          l8583 2F98                                            l8575 2F26  
                                          l8567 2EA0                                            l8911 11FC  
                                          l8903 1182                                            l8831 0CA8  
                                          l8823 0C0E                                            l8751 07D8  
                                          l8727 05FC                                            l8719 0574  
                                          l8671 0240                                            l8663 01CE  
                                          l8655 012C                                            l8647 0118  
                                          l8639 0108                                            l6897 51E6  
                                          l6889 51C4                                            l7945 5FDA  
                                          l7785 58DC                                            l7777 5882  
                                          l7769 583E                                            l7849 46C6  
                                          l7857 4700                                            l7881 4C6E  
                                          l7873 4C1A                                            l7865 4BE2  
                                          l8489 45A0                                            l8593 53EA  
                                          l7937 566A                                            l7929 55FC  
                                          l8497 384C                                            l7793 63F4  
                                          l8585 2FA0                                            l8577 2F44  
                                          l8569 2EA6                                            l8913 1234  
                                          l8809 0B18                                            l8737 0696  
                                          l8729 0622                                            l8681 02D0  
                                          l8673 024E                                            l8665 0204  
                                          l8657 0182                                            l6899 51F6  
                                          l7947 5FDE                                            l7939 5F92  
                                          l7779 5896                                            l7859 4710  
                                          l7891 4CF0                                            l7883 4C82  
                                          l7875 4C28                                            l7867 4BE8  
                                          l8595 5416                                            l8499 388A  
                                          l8587 2FB0                                            l8579 2F5E  
                                          l8915 125E                                            l8923 12AE  
                                          l8851 0E0A                                            l8843 0D80  
                                          l8835 0CC8                                            l8827 0C4C  
                                          l8819 0B9C                                            l8771 0910  
                                          l8763 089A                                            l8755 0810  
                                          l8747 0758                                            l8739 06CE  
                                          l8691 0368                                            l8683 02DA  
                                          l8667 0212                                            l8659 01A6  
                                          l7885 4C90                                            l7893 4CF6  
                                          l7877 4C48                                            l7869 4BF6  
                                          l7789 623C                                            l7797 6340  
                                          l8589 2FC6                                            l8941 133E  
                                          l8925 12D4                                            l8933 1304  
                                          l8917 126E                                            l8909 11C4  
                                          l8861 0EB8                                            l8853 0E30  
                                          l8845 0DB8                                            l8837 0D00  
                                          l8829 0C72                                            l8781 09D2  
                                          l8773 0948                                            l8765 08C0  
                                          l8757 0848                                            l8749 0790  
                                          l8693 0376                                            l8685 02E8  
                                          l8677 0298                                            l8669 0220  
                                          l7895 4D06                                            l7887 4CBE  
                                          l7879 4C66                                            l8599 5422  
                                          l8927 12E2                                            l8871 0F7A  
                                          l8839 0D48                                            l8791 0A5C  
                                          l8783 0A0A                                            l8687 030E  
                                          l8679 02AA                                            l7897 4D26  
                                          l7889 4CDE                                            l8929 12F6  
                                          l8873 0FA4                                            l8881 1026  
                                          l8793 0A94                                            l8785 0A16  
                                          l8697 03C0                                            l8689 0348  
                                          l8883 105E                                            l8875 0FB4  
                                          l8867 0F0A                                            l8859 0E80  
                                          l8779 099A                                            l8699 03D2  
                                          l8939 1316                                            l8971 5D52  
                                          l8885 1096                                            l8877 0FEA  
                                          l8869 0F42                                            l8789 0A24  
                                          l8973 5D5A                                            l8887 10C0  
                                          l8895 1110                                            l8799 0AA8  
                                          l8975 5D68                                            l8991 500E  
                                          l8983 4FEA                                            STR_1 FFB4  
                                          STR_2 FF54                                            l8897 1136  
                                          l8889 10D0                                            l8977 5D8E  
                                          l8993 502C                                            l8985 4FFE  
                                          STR_3 FFC1                                            STR_4 FF75  
                                          l8899 115C                                            l8995 5038  
                                          l8987 5006                                            STR_5 FF2D  
                                          STR_6 FFA0                                            l8997 5044  
                                          STR_7 FF8B                                            STR_8 FF05  
                                          l8999 5054                                            STR_9 FFD1  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            _LATD 000F8C  
                                          _LATE 000F8D                                            u5430 67D2  
                                          u7030 60EE                                            u5431 67CE  
                                          u7031 60EA                                            u8000 5130  
                                          u7040 60A0                                            u8001 512C  
                                          u7041 609C                                            u8010 516A  
                                          u8011 5166                                            u8020 518C  
                                          u8021 5188                                            u8030 51B4  
                                          u8031 51B0                                            u8040 51E6  
                                          u8041 51E2                                            u8230 67EA  
                                          u6375 67AC                                            u8231 67E6  
                                          u6376 67AE                                            u7520 629A  
                                          u8320 5776                                            u7600 667A  
                                          u7521 6296                                            u8321 5772  
                                          u7601 6676                                            u7530 62B6  
                                          u8330 5788                                            u7610 668E  
                                          u7531 62B2                                            u8331 5784  
                                          u7611 668A                                            u7700 4BA6  
                                          u7620 64D8                                            u8340 57B0  
                                          u7701 4BA2                                            u7621 64D4  
                                          u8341 57AC                                            u7710 4BE0  
                                          u7630 5C2E                                            u8350 57E6  
                                          u7711 4BDC                                            u7631 5C2A  
                                          u8351 57E2                                            u7640 5C5A  
                                          u7641 5C56                                            u7650 5C7E  
                                          u7570 6656                                            u7651 5C7A  
                                          u7571 6652                                            u7580 6664  
                                          u7581 6660                                            u7590 685C  
                                          u7591 6856                                            u7680 4B64  
                                          u8720 616A                                            u9520 583E  
                                          u9600 6378                                            u7681 4B60  
                                          u8721 6166                                            u9521 583A  
                                          u7770 5B56                                            u7690 4B94  
                                          u7674 4B42                                            u8730 6458  
                                          u9530 5862                                            u9610 5E4C  
                                          u7771 5B52                                            u7691 4B90  
                                          u7675 4B3C                                            u8731 6454  
                                          u9531 585E                                            u9611 5E46  
                                          u9540 58BA                                            u9700 4686  
                                          u8740 63EC                                            u9620 5E4E  
                                          u7596 685E                                            u9541 58B6  
                                          u9701 4682                                            u8741 63E6  
                                          u7790 62EA                                            u9550 58C8  
                                          u9710 46C6                                            u8750 63EE  
                                          u9630 5E64                                            u7791 62E6  
                                          u9551 58C4                                            u9711 46C2  
                                          u9631 5E60                                            u9640 649A  
                                          u9720 4710                                            u9560 6258  
                                          u9800 5234                                            u9641 6494  
                                          u9721 470C                                            u9561 6254  
                                          u9801 5230                                            u7970 5CA0  
                                          u9650 649C                                            u9730 4BF6  
                                          u9810 525E                                            u9570 6426  
                                          u7971 5C9C                                            u9731 4BF2  
                                          u9811 525A                                            u9571 6420  
                                          u7980 5CDA                                            u9660 45DC  
                                          u9740 4C28                                            u9820 529E  
                                          u9580 6428                                            u7981 5CD6  
                                          u9661 45D8                                            u9741 4C24  
                                          u9821 529A                                            u7990 510E  
                                          u9670 460E                                            u9750 4C66  
                                          u9830 55E0                                            u9590 6376  
                                          u7991 510A                                            u9671 460A  
                                          u9751 4C62                                            u9831 55DC  
                                          u9591 6370                                            u9760 4C90  
                                          u9840 560A                                            u9681 4638  
                                          u9761 4C8C                                            u9841 5606  
                                          u9690 465C                                            u9770 4CBE  
                                          u9850 5638                                            u9691 4658  
                                          u9771 4CBA                                            u9851 5634  
                                          u9860 5FAC                                            u9780 4D06  
                                          u9861 5FA8                                            u9781 4D02  
                                          u9870 5FDA                                            u9871 5FD6  
                                          u9791 520E                                            _WPUB 000F5B  
                                 _EUSART1_Write 67D8                                            abs@a 009F  
                                          _dbuf 0178                                            _atoi 3A38  
                                          _ctoa 5E7A                                            _main 35B6  
                                          _dtoa 2A00                                            _font F135  
                                 ?_EUSART1_Read 0001                                            _prec 00BB  
                               _TMR0_StartTimer 68EE                                            _otoa 404E  
                                          _nout 0174                                            pad@i 00A6  
                                          pad@p 00A3                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf1 000FE7  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 00A8                                            fsr2l 000FD9  
                                          _stoa 443C                                            btemp 005F  
                                          _utoa 3820                                            _xtoa 2D06  
                                   i2_atoi$2285 0010                                     i2_atoi$2286 0014  
                                   i2_atoi$2287 0012                                            prodh 000FF4  
                                          prodl 000FF3                                            start 008E  
                                 __CFG_IESO$OFF 000000                                 __end_ofi2_fputc 59C2  
                               __end_ofi2_fputs 623C                          __end_of_SPI_Initialize 6872  
                               __end_ofi2_putch 68D0                                   lcd_fill@width 009A  
                                 __CFG_MCLRE$ON 000000                                     i2_dtoa$1672 0030  
                                  ___param_bank 000000                        __size_ofi2_EUSART1_Write 0016  
                                         ??_abs 00A1                                           ??_pad 00A5  
                                    i2_vfprintf 5DB6                         __end_of_TMR0_Initialize 66C0  
                __size_of_OSCILLATOR_Initialize 0012                   __end_of_OSCILLATOR_Initialize 6884  
                               __end_of___aldiv 5208                                 __end_of___aodiv 4752  
                                         ?_atoi 0094                                           ?_ctoa 00AA  
                                         ?_main 0001                                           ?_dtoa 00AA  
                               __end_of___aomod 4D48                                           STR_11 FFD1  
                                         STR_20 FFD2                                           STR_13 FFD5  
                                         STR_15 FFD5                                           STR_31 FFEF  
                                         STR_24 FFD6                                           STR_33 FFEF  
                                         STR_43 FFDE                                           STR_27 FFEC  
                                         STR_51 FFD9                                           STR_36 FFDD  
                                         STR_29 FFEC                                           STR_53 FFD9  
                                         STR_61 FFF2                                           STR_38 FFDD  
                                         STR_46 FFF5                                           STR_63 FFF2  
                                         STR_48 FFF5                                           STR_73 FFE2  
                                         STR_81 FFE5                                           STR_58 FFDA  
                                         STR_66 FFE1                                           STR_83 FFE5  
                                         STR_68 FFE1                                           STR_92 FFE6  
                                         STR_76 FFF8                                           STR_85 FFCD  
                                         STR_78 FFF8                                           STR_87 FFCD  
                                         STR_96 FFCE                                           ?_otoa 00AA  
                                         STR_99 FFFB                       TMR0_ReadTimer@readValHigh 0094  
             __end_of_IOCB4_SetInterruptHandler 68A8                                           ?_stoa 0098  
                                         ?_utoa 00AA                                           u11000 2F5E  
                                         u11001 2F5A                                           u11010 2F78  
                                         u11011 2F74                                           u11020 2F88  
                                         u11100 00B8                                           u11021 2F84  
                                         u11101 00B4                                           u11030 2F98  
                                         u11110 0196                                           u11031 2F94  
                                         u11111 0192                                           u10400 3BD2  
                                         u11040 5416                                           u11200 03BA  
                                         u11120 01A6                                           u11041 5412  
                                         u11201 03B4                                           u11121 01A2  
                                         u10410 3BF8                                           u10330 3A78  
                                         u11050 544E                                           u11210 03BC  
                                         u11130 01CE                                           u10411 3BF2  
                                         u11051 544A                                           u11131 01CA  
                                         u10420 3BFA                                           u10340 3A88  
                                         u10500 2A96                                           u11060 546C  
                                         u11300 06CE                                           u11220 03D2  
                                         u11140 0212                                           u10341 3A84  
                                         u10501 2A92                                           u11061 5468  
                                         u11301 06CA                                           u11221 03CE  
                                         u11141 020E                                           u10430 3C10  
                                         u10350 3AB4                                           u10510 2AC8  
                                         u11070 547E                                           u11310 0706  
                                         u11230 03F8                                           u11150 0292  
                                         u10431 3C0C                                           u10407 3BC8  
                                         u10511 2AC4                                           u11071 547A  
                                         u11311 0702                                           u11231 03F4  
                                         u11151 028C                                           u10440 3C22  
                                         u10360 3AD8                                           u10600 2CB0  
                                         u10520 2AD8                                           u11080 54AC  
                                         u11400 0BC2                                           u11320 0790  
                                         u11240 0482                                           u11160 0294  
                                         _T0CON 000FD5                                           u10441 3C1E  
                                         u10361 3AD4                                           u10337 3A6E  
                                         u10601 2CAC                                           u10521 2AD4  
                                         u11081 54A8                                           u11401 0BBE  
                                         u11321 078C                                           u11241 047E  
                                         u10370 3AF6                                           u10450 5E8E  
                                         u10530 2C10                                           u10610 405E  
                                         u11410 0C72                                           u11330 0848  
                                         u11250 04BA                                           u11170 02AA  
                                         u10371 3AF2                                           u10451 5E8A  
                                         u10531 2C0C                                           u10611 405A  
                               __end_of___lodiv 52FA                                           u11411 0C6E  
                                         u11331 0844                                           u11251 04B6  
                                         u11171 02A6                                           u10380 3B2C  
                                         u10540 2C2E                                           u10460 2A32  
                                         u10700 41FE                                           u10620 407A  
                                         u11500 1136                                           u11420 0D00  
                                         u11340 08C0                                           u11260 0574  
                                         u11180 02D0                                           u10357 3AAA  
                                         u10541 2C2A                                           u10461 2A2C  
                                         u10701 41FA                                           u10621 4076  
                                         u11501 1132                                           u11421 0CFC  
                                         u11341 08BC                                           u11261 0570  
                                         u11181 02CC                                           u10390 3B8C  
                                         u10550 2C48                                           u10470 2A34  
                                         u10630 4138                                           u11510 115C  
                                         u11430 0DB8                                           u11350 0948  
                                         u11270 05AC                                           u11190 030E  
                                         u10551 2C44                                           u10711 4446  
                                         u11511 1158                                           u11431 0DB4  
                                         u11351 0944                                           u11271 05A8  
                                         u11191 030A                                           ?_xtoa 00AA  
                                         u10560 2C62                                           u10480 2A4A  
                                         u10640 4178                                           u10720 446A  
                                         u10800 3830                                           u11520 11FC  
                                         u11440 0E30                                           u11360 09D2  
                                         u11280 0622                                           u11600 4FFE  
                                         _T1CON 000FCD                                           u10561 2C5E  
                                         u10481 2A46                                           u10641 4174  
                                         u10721 4466                                           u10801 382C  
                                         u11521 11F8                                           u11441 0E2C  
                                         u11361 09CE                                           u11281 061E  
                                         u11601 4FFA                                           u10570 2C72  
                                         u10490 2A7A                                           u10650 4196  
                                         u10730 449E                                           u10810 384C  
                                         u11530 1234                                           u11450 0EB8  
                                         u11370 0A5C                                           u11290 0648  
                                         u11610 502C                                           u10387 3B22  
                                         u10571 2C6E                                           u10491 2A76  
                                         u10651 4192                                           u10635 4126  
                                         u10731 449A                                           u10811 3848  
                                         u11531 1230                                           u11451 0EB4  
                                         u11371 0A58                                           u11291 0644  
                                         u11611 5028                                           u11700 4F2E  
                                         u10580 2C86                                           u10660 41B0  
                                         u10740 44BC                                           u10820 39A4  
                                         u10900 2DC8                                           u11540 12D4  
                                         u11460 0F42                                           u11380 0ACE  
                                         u11620 508C                                           u10397 3B82  
                                         u10581 2C82                                           u10661 41AC  
                                         u10741 44B8                                           u10821 39A0  
                                         u10901 2DC4                                           u11541 12D0  
                                         u11461 0F3E                                           u11381 0ACA  
                                         u11621 5088                                           u11710 4F52  
                                         u10590 2C96                                           u10670 41CA  
                                         u10750 44E6                                           u10830 39C2  
                                         u10910 2E16                                           u11470 0F7A  
                                         u11390 0B50                                           u11630 509A  
                                         u11711 4F4E                                           u10591 2C92  
                                         u10671 41C6                                           u10751 44E2  
                                         u10831 39BE                                           u10911 2E10  
                                         u11471 0F76                                           u11391 0B4C  
                                         u11631 5096                                           u11720 4FD8  
                                         u10680 41DA                                           u10760 4522  
                                         u10840 39DC                                           u10920 2E18  
                                         u11480 105E                                           u11640 50C8  
                                         u10681 41D6                                           u10761 451E  
                                         u10841 39D8                                           u11481 105A  
                                         u11641 50C4                                           u11730 4FE8  
                                         u10690 41EA                                           u10770 4574  
                                         u10850 39F6                                           u10930 2E2E  
                                         u11490 1096                                           u11570 5DAC  
                                         u11731 4FE4                                           u11707 4F24  
                                         u10691 41E6                                           u10771 4570  
                                         u10851 39F2                                           u10931 2E2A  
                                         u11491 1092                                           u11571 5DA8  
                                         u10780 4582                                           u10860 3A06  
                                         u10940 2E62                                           u11660 5AA4  
                                         u10781 457E                                           u10861 3A02  
                                         u10941 2E5C                                           u11661 5AA0  
                                         u10790 45BE                                           u10950 2E64  
                                         u10870 2D16                                           u11670 5AB8  
                                         u11727 4FCE                                           u10791 45BA  
                                         u10871 2D12                                           u11671 5AB4  
                                         u10960 2E7A                                           u10880 2D32  
                                         u11680 5AE0                                           u11760 371E  
                                         u10961 2E76                                           u10881 2D2E  
                                         u11681 5ADC                                           u11761 371A  
                                         u10970 2EE4                                           u10890 2D60  
                                         u11690 5B26                                           u11770 3768  
                                         u10891 2D5C                                           u11691 5B22  
                                         u11771 3764                                           u10980 2F26  
                                         u11780 3786                                           u10981 2F22  
                                         u11781 3782                                           u10990 2F44  
                                         u10991 2F40                                           u10975 2ED2  
                               __end_of___lomod 5692                                           u11797 64B8  
                                         i2l300 684A                                           i2l142 6614  
                                         i2l306 68CE                                           i2l138 681E  
                                         i2l148 68F2                                           i2l340 005A  
                               _TMR0_WriteTimer 6892                                           i2l361 68EC  
                                         i2l434 6086                                           i2l701 495A  
                                         i2l358 68F0                                           i2l367 68D8  
                                         i2l703 4962                                           i2l640 5A08  
                                         i2l712 4A0C                                           i2l297 6838  
                                         i2l713 4A56                                           i2l722 3C80  
                                         i2l643 5A4A                                           i2l652 5F90  
                                         i2l660 30A0                                           i2l732 3E4A  
                                         i2l724 3C88                                           i2l645 5A86  
                                         i2l717 4A5E                                           i2l760 3550  
                                         i2l737 3314                                           i2l658 3098  
                                         i2l762 35B4                                           i2l746 33B2  
                                         i2l683 4284                                           i2l739 331C  
                                         i2l843 5E10                                           i2l692 43D4  
                                         i2l844 5E18                                           i2l685 428C  
                                         i2l678 32DA                                           i2l694 443A  
                                         i2l847 675A                                           i2l776 1448  
                                         i2l961 48D8                                           i2l974 4EAA  
                                         i2l799 25C8                                    vfpfcnvrt@fmt 011E  
                                         _TMR0H 000FD7                                    vfpfcnvrt@llu 0139  
                                         _TMR1H 000FCF                                           _TMR0L 000FD6  
                                         _TMR1L 000FCE                                           _PORTB 000F81  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           _TRISD 000F95  
                                         _TRISE 000F96                                           i2_abs 6300  
                                         i2_pad 59C2                                   __CFG_WRT0$OFF 000000  
                               ??_lcd_draw_char 00A0                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                             ___lmul@multiplicand 0091  
                                 __CFG_WRT3$OFF 000000                                  __CFG_EBTR0$OFF 000000  
                                __CFG_FCMEN$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                                 __CFG_WRTB$OFF 000000                                   __CFG_WRTC$OFF 000000  
                                 __CFG_WRTD$OFF 000000                                 __end_of_msDelay 64DA  
                                    i2isalpha@c 0001                                  __CFG_EBTRB$OFF 000000  
                                    i2isdigit@c 0001                         __end_of_PIN_MANAGER_IOC 6820  
                                         _flags 00BD                                           _errno 0172  
                                         _fputc 5762                                 __end_of_isalpha 637E  
                                         _fputs 6124                                 __end_of_isdigit 64A2  
                                         atoi@n 00A1                                           pad@fp 009F  
                                         atoi@s 0094                                           _width 00B9  
                                         ctoa@c 00AC                                           _putch 6884  
                                         ctoa@w 00AD                                           dtoa@d 00AC  
                                         dtoa@i 0118                                           dtoa@n 0110  
                                         dtoa@p 010A                                           dtoa@s 010E  
                                         dtoa@w 010C                                __end_of_SPI_Open 5BF8  
                               __end_of_islower 63F4                                 __end_of_isspace 5FE6  
                                ?_EUSART1_Write 0001                         __end_of_TMR1_Initialize 6642  
                               __end_of_isupper 642E                                           pclath 000FFA  
                                         tablat 000FF5                                           otoa@d 00AC  
                                         otoa@i 0116                                           otoa@n 010E  
                                         otoa@p 0108                                           otoa@t 010A  
                                         otoa@w 010C                                __end_ofi2___wmul 675C  
                                ??_EUSART1_Read 008D                                           plusw1 000FE3  
                                         plusw2 000FDB                                           stoa@i 00A4  
                                         stoa@l 00AC                                           stoa@p 00AA  
                                         stoa@s 009A                                           stoa@w 00A6  
                                         ttemp5 0060                                           ttemp6 0063  
                                         ttemp7 0067                                      i2islower@c 0001  
                                         utoa@d 00AC                                           utoa@i 0114  
                                         utoa@n 010C                                           utoa@p 0108  
                                         utoa@w 010A                                           status 000FD8  
                                    i2isspace@c 0001                                           wtemp8 0060  
                                         xtoa@c 011A                                           xtoa@d 00AC  
                                         xtoa@i 0118                                           xtoa@n 0110  
                                         xtoa@p 010C                                           xtoa@w 010E  
                                         xtoa@x 00B4                                 __end_of_strncmp 54D6  
                               __end_of_toupper 5E7A                                  lcd_fill@height 0098  
                              ___lodiv@dividend 008D              _EUSART1_DefaultFramingErrorHandler 000000  
                            __size_ofi2___aodiv 0188                              __size_ofi2___aomod 0164  
                                    i2isupper@c 0001                              __size_ofi2___lodiv 00F0  
                            __size_ofi2___lomod 00D0                                __end_ofi2_printf 6736  
                               ?_SPI_Initialize 0001                 ??_IOCB4_DefaultInterruptHandler 0001  
                                  _toupper$2399 0099                                __end_ofi2_strlen 65B8  
                               __initialization 5CEC                               ??_read_from_usart 00A5  
                                  __end_of_atoi 3C48                                    __end_of_ctoa 5ED8  
                    __end_of_EUSART1_Initialize 61F8                                    __end_of_main 3820  
                                  __end_of_dtoa 2D06                                    __end_of_font FF01  
                                  __end_of_otoa 424C                                    __end_of_stoa 45C8  
                                    i2printf@ap 0059                                    __end_of_utoa 3A38  
                                  __end_of_xtoa 2FF8                               __end_of_IOCB4_ISR 6616  
                            __size_ofi2_isalpha 003C                              __size_ofi2_isdigit 0038  
                   ?_INTERRUPT_InterruptManager 0001                                      i2stoa@nuls 0011  
                                   i2_vfpfcnvrt 1352                              __size_ofi2_islower 0038  
                            __size_ofi2_isspace 0052                                   i2vfpfcnvrt@ap 0049  
                                 i2vfpfcnvrt@cp 0060                                   i2vfpfcnvrt@fp 0045  
                                 i2vfpfcnvrt@ll 0068                                     i2_xtoa$1708 0031  
                                   i2_xtoa$1709 0033                                   i2vfpfcnvrt@vp 0070  
                            __size_ofi2_isupper 0038                                          ??_atoi 0096  
                                        ??_ctoa 00AD                                          ??_main 016D  
                                        ??_dtoa 0100                               ?_lcd_set_cursor_x 0090  
                             ?_lcd_set_cursor_y 0090                                   lcd_send@value 008E  
                                        ??_otoa 0100                                          ??_stoa 009C  
                                        ??_utoa 0100                                          ??_xtoa 0100  
                                 __activetblptr 000003                              ??_lcd_set_cursor_x 0092  
                            ??_lcd_set_cursor_y 0092                                          ?i2_abs 0013  
                                __CFG_RETEN$OFF 000000                              __size_ofi2_strncmp 00EA  
                            __size_ofi2_toupper 005E                                          ?i2_pad 0013  
                              ___lodiv@quotient 009D                                      i2strncmp@l 0008  
                                    i2strncmp@n 0005                                      i2strncmp@r 000A  
                                    i2toupper@c 0007                                  lcd_draw_char@i 00AB  
                                lcd_draw_char@j 00A9                                  lcd_draw_char@k 00AA  
                      __end_of_SPI_ExchangeByte 67D8                         __end_of_TMR0_StartTimer 68F2  
                                lcd_draw_char@x 0096                                  lcd_draw_char@y 0098  
                                        _ADCON0 000FC2                                          _ADCON1 000FC1  
                                        _ADCON2 000FC0                                          ?_fputc 008F  
                                        STR_101 FFFB                                          ?_fputs 0098  
                                        STR_103 FFE9                                          STR_105 FFE9  
                                        _ADRESH 000FC4                                          _ADRESL 000FC3  
                                        _ANCON0 000F5D                                          _ANCON1 000F5C  
                                        ?_putch 0001                                          _T1GCON 000FAA  
                  __size_of_EUSART1_is_rx_ready 0014                                          i2l1302 5760  
                               __CFG_BBSIZ$BB2K 000000                                          i2l1602 623A  
                                        i2l1522 6336                                          i2l1292 53E8  
                                        i2l1525 633E                                          i2l1285 53C8  
                                        i2l1622 65B6                                          i2l1295 5740  
                                        i2l1553 4044                                          i2l1641 5F34  
                                        i2l1609 6734                                          i2l1626 55BE  
                                        i2l1556 404C                                          i2l1636 5F2C  
                                        i2l1565 6580                                          i2l1573 6036  
                                __CFG_WDTEN$OFF 000000                                          i2l1559 63B8  
                                        i2l1647 6510                                          i2l1594 59C0  
                                        i2l1579 6548                                          i2l7201 621A  
                                        i2l8001 14F0                                          i2l7203 6582  
                                        i2l8011 1580                                          i2l8003 14FE  
                                        i2l7205 658E                                          i2l7213 64DA  
                                        i2l8101 1BAA                                          i2l8021 1616  
                                        i2l8013 1588                                          i2l7207 6592  
                                        i2l7231 59C2                                          i2l7311 4D7E  
                                        i2l7303 4D48                                          i2l8111 1C68  
                                        i2l8103 1BE0                                          i2l8031 16A6  
                                        i2l8023 1624                                          i2l8015 1596  
                                        i2l8007 1548                                          i2l7209 65AA  
                                        i2l7241 5A14                                          i2l7233 59D2  
                                        i2l7321 4DE6                                          i2l7313 4D8C  
                                        i2l7305 4D4C                                          i2l7401 6512  
                                        i2l8201 21FE                                          i2l8121 1CEE  
                                        i2l8113 1CA0                                          i2l8041 1760  
                                        i2l8033 16D8                                          i2l8017 15BC  
                                        i2l8009 155A                                          i2l6275 68D0  
                                        i2l7171 6846                                          i2l7243 5A28  
                                        i2l7235 59E6                                          i2l7323 4DF4  
                                        i2l7331 4E5A                                          i2l7315 4DAC  
                                        i2l7307 4D5A                                          i2l7411 5F20  
                                        i2l8203 2226                                          i2l8211 22AA  
                                        i2l8131 1D60                                          i2l8123 1D26  
                                        i2l8115 1CAC                                          i2l8051 184E  
                                        i2l8043 17AA                                          i2l8027 166E  
                                        i2l8019 15F6                                          i2l6277 68D4  
                                        i2l7253 6736                                          i2l7173 68C8  
                                        i2l7181 590A                                          i2l7245 5A2C  
                                        i2l7237 59F4                                          i2l7261 4756  
                                        i2l7333 4E6A                                          i2l7325 4E22  
                                        i2l7317 4DCA                                          i2l7309 4D7A  
                                        i2l7501 327C                                          i2l7341 5306  
                                        i2l7405 5ED8                                          i2l8213 22E0  
                                        i2l8205 2236                                          i2l8141 1DE0  
                                        i2l8133 1D96                                          i2l8109 1C32  
                                        i2l8061 18EA                                          i2l8037 16F4  
                                        i2l8029 1680                                          i2l7255 6752  
                                        i2l7183 591C                                          i2l7247 5A5A  
                                        i2l7239 5A00                                          i2l7271 47B6  
                                        i2l7263 4764                                          i2l7335 4E8A  
                                        i2l7327 4E42                                          i2l7319 4DD2  
                                        i2l7503 328E                                          i2l7351 5360  
                                        i2l7343 5324                                          i2l8231 23F4  
                                        i2l8215 2316                                          i2l8207 226E  
                                        i2l8151 1E52                                          i2l8143 1E18  
                                        i2l8119 1CB8                                          i2l8071 19A4  
                                        i2l8047 17E2                                          i2l8039 172A  
                                        i2l9015 6808                                          i2l7169 6838  
                                        i2l7185 5926                                          i2l7249 5A6E  
                                        i2l7441 5F56                                          i2l7281 4800  
                                        i2l7273 47BA                                          i2l7265 4784  
                                        i2l7329 4E54                                          i2l7505 329A  
                                        i2l7521 42B4                                          i2l7513 424C  
                                        i2l7601 4A38                                          i2l7353 538E  
                                        i2l7345 532C                                          i2l7361 5692  
                                        i2l7409 5F0E                                          i2l8241 247A  
                                        i2l8233 2402                                          i2l8217 233E  
                                        i2l8225 2390                                          i2l8161 1F36  
                                        i2l8153 1E9E                                          i2l8129 1D3A  
                                        i2l8081 1A74                                          i2l8057 189E  
                                        i2l8049 1818                                          i2l9017 6818  
                                        i2l5915 68EE                                          i2l7187 5944  
                                        i2l7179 58F8                                          i2l7195 61F8  
                                        i2l7443 5F62                                          i2l7291 4870  
                                        i2l7283 480E                                          i2l7275 47C6  
                                        i2l7267 4788                                          i2l7259 4752  
                                        i2l7507 32A2                                          i2l7451 2FF8  
                                        i2l7531 42DC                                          i2l7523 42BC  
                                        i2l7515 425C                                          i2l7355 53AE  
                                        i2l7347 5340                                          i2l7339 52FA  
                                        i2l7371 5708                                          i2l7363 56B0  
                                        i2l7611 3CB0                                          i2l7603 3C48  
                                        i2l8243 24B0                                          i2l8227 23B6  
                                        i2l8219 234E                                          i2l8139 1DAA  
                                        i2l8067 1938                                          i2l8059 18C4  
                                        i2l9019 681C                                          i2l5917 68EA  
                                        i2l7189 597A                                          i2l7197 6204  
                                        i2l7445 5F66                                          i2l7437 5F36  
                                        i2l7293 4882                                          i2l7285 4820  
                                        i2l7277 47E4                                          i2l7269 4796  
                                        i2l7509 32B2                                          i2l7461 3072  
                                        i2l7453 3018                                          i2l7541 4372  
                                        i2l7533 42EE                                          i2l7525 42C2  
                                        i2l7517 425E                                          i2l7357 53B0  
                                        i2l7349 534E                                          i2l7373 5728  
                                        i2l7365 56B8                                          i2l7621 3D44  
                                        i2l7613 3CB8                                          i2l7605 3C58  
                                        i2l7381 637E                                          i2l7701 358C  
                                        i2l8245 24D8                                          i2l8253 252A  
                                        i2l8229 23DC                                          i2l8181 2094  
                                        i2l8173 200C                                          i2l8165 1F56  
                                        i2l8157 1EDA                                          i2l8149 1E2C  
                                        i2l8093 1B34                                          i2l8085 1AAC  
                                        i2l8077 19F6                                          i2l8069 196E  
                                        i2l7391 5FEA                                          i2l7711 3E68  
                                        i2l7199 6216                                          i2l7447 5F6C  
                                        i2l7439 5F4A                                          i2l7287 484E  
                                        i2l7279 47EC                                          i2l7295 4888  
                                        i2l7471 30CE                                          i2l7463 308C  
                                        i2l7455 3040                                          i2l7551 43F6  
                                        i2l7543 4390                                          i2l7535 42F4  
                                        i2l7527 42CE                                          i2l7519 4278  
                                        i2l7359 53C2                                          i2l7375 573A  
                                        i2l7367 56CC                                          i2l7631 3DF8  
                                        i2l7623 3D4A                                          i2l7615 3CC2  
                                        i2l7607 3C5A                                          i2l8271 25B6  
                                        i2l8255 2550                                          i2l8263 257E  
                                        i2l8247 24E8                                          i2l8239 2444  
                                        i2l8191 2140                                          i2l8183 20BA  
                                        i2l8175 2042                                          i2l8167 1F8C  
                                        i2l8159 1F00                                          i2l8095 1B5A  
                                        i2l8087 1AE2                                          i2l8079 1A2C  
                                 i2putch@txData 0002                                          i2l7385 654A  
                                        i2l7393 5FFE                                          i2l7721 3EF0  
                                        i2l7713 3E9A                                          i2l7705 3E4C  
                                        i2l7297 4898                                          i2l7289 486E  
                                        i2l7377 6300                                          i2l7481 316E  
                                        i2l7473 30D6                                          i2l7465 30A8  
                                        i2l7457 3060                                          i2l7553 43FC  
                                        i2l7545 43AA                                          i2l7537 42FA  
                                        i2l7529 42D4                                          i2l7561 48DA  
                                        i2l7369 56DA                                          i2l7633 3E12  
                                        i2l7617 3CC8                                          i2l7625 3DAE  
                                        i2l7609 3C74                                          i2l7641 32EC  
                                        i2l8257 255E                                          i2l8169 1FD4  
                                        i2l9217 1408                                          i2l9073 003A  
                                        i2l7395 602C                                          i2l9219 3F4A  
                                        i2l7723 3F06                                          i2l7715 3EE6  
                                        i2l7707 3E60                                          i2l7299 48B8  
                                        i2l7379 631A                                          i2l7491 322A  
                                        i2l7483 3174                                          i2l7475 30E0  
                                        i2l7467 30BA                                          i2l7459 3070  
                                        i2l7555 440C                                          i2l7547 43C4  
                                        i2l7539 4358                                          i2l7571 4922  
                                        i2l7563 48EC                                          i2l7627 3DC0  
                                        i2l7635 3E22                                          i2l7619 3D3E  
                                        i2l7651 335A                                          i2l7643 32EE  
                                        i2l8259 2572                                          i2l9075 0048  
                                        i2l7397 6030                                          i2l7389 5FE6  
                                        i2l7741 4028                                          i2l7733 3FB0  
                                        i2l7725 3F0E                                          i2l7717 3EEA  
                                        i2l7709 3E64                                          i2l7493 3244  
                                        i2l7477 30E6                                          i2l7485 31D8  
                                        i2l7469 30C8                                          i2l7549 43E4  
                                        i2l7557 4412                                          i2l7581 499A  
                                        i2l7573 492A                                          i2l7565 48F4  
                                        i2l7629 3DDE                                          i2l7661 3396  
                                        i2l7653 3362                                          i2l7645 3308  
                                        i2l8197 2192                                          i2l8189 210A  
                                        i2l8269 2590                                          i2l8613 5DB6  
                                        i2l9077 0056                                          i2l7727 3F16  
                                        i2l7487 31F2                                          i2l7495 3254  
                                        i2l7479 3168                                          i2l7591 49EA  
                                        i2l7583 499E                                          i2l7575 4938  
                                        i2l7567 4906                                          i2l7663 33A6  
                                        i2l7655 336C                                          i2l7647 3332  
                                        i2l7639 32DC                                          i2l8199 21C8  
                                        i2l8615 5DBE                                          i2l7737 4004  
                                        i2l7729 3F60                                          i2l7497 3266  
                                        i2l7489 3210                                          i2l7593 49EE  
                                        i2l7585 49BC                                          i2l7569 490E  
                                        i2l7761 5568                                          i2l7753 550C  
                                        i2l7681 346E                                          i2l7673 3432  
                                        i2l7657 3372                                          i2l7649 333A  
                                        i2l8617 5DCC                                          i2l7739 4016  
                                        i2l7499 3276                                          i2l7587 49C8  
                                        i2l7579 4986                                          i2l7763 5596  
                                        i2l7755 551A                                          i2l7747 54D6  
                                        i2l7691 3526                                          i2l7683 3474  
                                        i2l7675 3444                                          i2l7667 33E6  
                                        i2l7659 337A                                          i2l8619 5DF2  
                                        i2l7597 4A20                                          i2l7589 49E6  
                                        i2l7757 5538                                          i2l7749 5500  
                                        i2l7693 3540                                          i2l7669 33F8  
                                        i2l7677 3458                                          i2l7685 34D2  
                                        i2l7599 4A34                                          i2l7759 5556  
                                        i2l7695 3560                                          i2l7687 34EE  
                                        i2l7679 3468                                          i2l7951 1352  
                                        i2l7697 3566                                          i2l7689 350C  
                                        i2l7961 13A8                                          i2l7953 1378  
                                        i2l7699 3576                                          i2l7963 13AA  
                                        i2l7955 1386                                          i2l7981 13D4  
                                        i2l7973 13C8                                          i2l7965 13BC  
                                        i2l7957 1398                                          i2l7991 1458  
                                        i2l7959 139C                                          i2l7993 147E  
                                        i2l7985 13E0                                          i2l7977 13CE  
                                        i2l7969 13C2                                          i2l8953 6710  
                                        i2l8961 6046                                          i2l7995 14B4  
                                        i2l7987 1436                                          i2l8955 6718  
                                        i2l8963 6064                                          i2l7997 14C2  
                                        i2l7989 1456                                          i2l8965 6070  
                                        i2l8981 65FC                                          i2l7999 14D0  
                                        i2l8967 6074                                          i2l8959 6038  
                                        i2l8969 6082                                          i2l8979 65E8  
                                     ??i2_fputc 0007                                          _RCREG1 000FAE  
                                     ??i2_fputs 0010                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                   vfpfcnvrt@done 0128  
                  __size_of_EUSART1_is_tx_ready 002A                                          _SPBRG1 000FAF  
                                     ??i2_putch 0002                                          _SSPADD 000FC8  
                                        _SSPBUF 000FC9                                  i2___aodiv@sign 0012  
                                        _TXREG1 000FAD                                          i2abs@a 0013  
                                        _TXSTA1 000FAC                                          i2_atoi 3E4C  
                                        i2_ctoa 5F36                                          i2_dtoa 2FF8  
                                        i2_otoa 424C                                          i2pad@i 001A  
                                        i2pad@p 0017                                          i2pad@w 001C  
                                        i2_stoa 48DA                                          i2_utoa 3C48  
                                        i2_xtoa 32DC                                 _global_bg_color 00BF  
                                __CFG_XINST$OFF 000000                                ??_lcd_draw_pixel 0092  
                              __end_of_lcd_fill 5C80                                    vfprintf@cfmt 0147  
                              __end_of_lcd_init 2A00                                __end_of_lcd_send 67BC  
                                i2___aomod@sign 0012                                          ___lmul 5C80  
                                     ??___aldiv 00A1                                       ??___aodiv 009D  
                                 i2vfprintf@fmt 0051                                       ??___aomod 009D  
                                        ___wmul 66E8                                  __CFG_STVREN$ON 000000  
                       __end_of_TMR0_WriteTimer 689E                                       ??___lodiv 009D  
                                     ??___lomod 009D                                     ?i2_vfprintf 004F  
                     i2TMR0_WriteTimer@timerVal 0001                        ?_EUSART1_SetErrorHandler 008D  
                              ?_TMR0_Initialize 0001                                          clear_0 5D32  
                                        clear_1 5D3E                                          _printf 66C0  
                                        pad@buf 00A1                ??_EUSART1_SetOverrunErrorHandler 008F  
               ?_EUSART1_SetOverrunErrorHandler 008D                                          ctoa@fp 00AA  
                                        dtoa@fp 00AA                                          _string 0198  
                                        _strlen 642E                                       ??_msDelay 008D  
                             ??i2_EUSART1_Write 0001                                          fputc@c 008F  
                                        fputs@c 009C                                          fputs@i 009D  
                             __end_ofi2___aodiv 48DA                                          fputs@s 0098  
                                     ??_isalpha 008F                                       ??_isdigit 008F  
                             __end_ofi2___aomod 4EAC                               __end_ofi2___lodiv 53EA  
                             __end_ofi2___lomod 5762                                       ??_islower 008F  
                                  __mediumconst F134                                       ??_isspace 008F  
                                        otoa@fp 00AA                                          tblptrh 000FF7  
                                     ??_isupper 008F                                          tblptrl 000FF6  
                                        tblptru 000FF8                        ADC_GetConversion@channel 0091  
                                        stoa@cp 00A8                                          stoa@fp 0098  
                            i2___aomod@dividend 0001                                __end_of_vfprintf 5DB6  
                             i2___lodiv@divisor 0009                                 ??_EUSART1_Write 008D  
                                        utoa@fp 00AA       IOCB4_SetInterruptHandler@InterruptHandler 008D  
                              ?_PIN_MANAGER_IOC 0001                                __end_of_snprintf 65E8  
                             i2___lodiv@counter 0019                                          xtoa@fp 00AA  
                       ??_INTERRUPT_S1_CALLBACK 005B                                       ??_strncmp 0093  
                                     ??_toupper 0095                   __size_of_INTERRUPT_Initialize 0004  
                              ?_TMR1_Initialize 0001                               __end_ofi2_isalpha 63BA  
                             __end_ofi2_isdigit 6582                               _SYSTEM_Initialize 675C  
                                    __accesstop 0060                        __size_of_lcd_draw_string 013E  
                       __end_of__initialization 5D48                               __end_ofi2_islower 6512  
                             __end_ofi2_isspace 6038                               __end_ofi2_isupper 654A  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                             __end_ofi2_strncmp 55C0                               __end_ofi2_toupper 5F36  
                                 __end_ofi2_abs 6340                                   __end_ofi2_pad 5A88  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 68DA  
                                  __pidataBANK1 68E1                             ??_SYSTEM_Initialize 008F  
                                 __end_of_fputc 582E                                   __end_of_fputs 616C  
         __end_of_IOCB4_DefaultInterruptHandler 68F4          __size_of_IOCB4_DefaultInterruptHandler 0002  
                 _IOCB4_DefaultInterruptHandler 68F2                                   __end_of_putch 6892  
                       __size_of_TMR0_ReadTimer 0020                                     i2printf@fmt 007B  
                                     ?_SPI_Open 0001                     ??_IOCB4_SetInterruptHandler 008F  
                          __end_of_EUSART1_Read 6696                                       ?i2___wmul 0001  
                              ??_lcd_set_cursor 0096                                         ??i2_abs 0015  
                                       ??i2_pad 0019                                  i2vfpfcnvrt@fmt 0047  
                                     ?i2_printf 007B                                  i2vfpfcnvrt@llu 0073  
                                     ?i2_strlen 0001                           i2EUSART1_Write@txData 0001  
                              ?_TMR0_StartTimer 0001                                         ??_fputc 0093  
                     __end_of_SYSTEM_Initialize 677E                                         ??_fputs 009C  
                                       ??_putch 008E                                      __pbssBANK0 00B5  
                                    __pbssBANK1 0172                             __size_ofi2_vfprintf 0064  
                               __CFG_PLLCFG$OFF 000000                                      __pnvCOMRAM 005B  
                                       ?i2_atoi 0008                                         ?i2_ctoa 001E  
                                       ?i2_dtoa 001E                                         ?i2_otoa 001E  
                                       ?i2_stoa 000C                                         ?i2_utoa 001E  
                                       ?i2_xtoa 001E                                     i2strncmp@_l 0001  
                                   i2strncmp@_r 0003                 __end_of_EUSART1_SetErrorHandler 68C6  
                       __size_of_TMR0_StopTimer 0004                                         ?___lmul 008D  
                                       ?___wmul 008D                                  i2_toupper$2399 000D  
                              ?_TMR0_WriteTimer 008D                                  ___lmul@product 0095  
                                    ??_SPI_Open 008D                                         ?_printf 0149  
                       __size_of_ADC_Initialize 0016                                         ?_strlen 008D  
        __end_of_EUSART1_SetFramingErrorHandler 68BC         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 68B2                                      ??i2___wmul 0005  
                              __CFG_CANMX$PORTB 000000                                         _REFOCON 000F9A  
                             i2___lomod@divisor 0009                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 12C0                               i2___lomod@counter 0011  
                                    ??i2_printf 0057                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000F7D                                      ??i2_strlen 0003  
                                       _SSPCON1 000FC6                                         _SSPCON2 000FC5  
                                     ?_lcd_fill 0096                                       ?_lcd_init 0001  
                                     ?_lcd_send 008E                                         _SSPSTAT 000FC7  
                              ___lomod@dividend 008D                                 _read_from_usart 5A88  
                                       i2_fputc 58F8                                ??_SPI_Initialize 008D  
                                       i2_fputs 61F8                       _IOCB4_SetInterruptHandler 689E  
                                       i2atoi@n 0015                                         i2pad@fp 0013  
                                       i2atoi@s 0008                                         i2ctoa@c 0020  
                                       i2_putch 68C6                                         i2ctoa@w 0021  
                                       i2dtoa@d 0020                                         i2dtoa@i 0040  
                                       i2dtoa@n 0038                                         i2dtoa@p 0032  
                                       i2dtoa@s 0036                                         i2dtoa@w 0034  
                                       i2otoa@d 0020                                         i2otoa@i 003E  
                                       i2otoa@n 0036                                         i2otoa@p 0030  
                                       i2otoa@t 0032                                         i2otoa@w 0034  
                               __size_ofi2_atoi 0202                                 __size_ofi2_ctoa 005C  
                               __size_ofi2_dtoa 02E4                                         i2stoa@i 0018  
                                       i2stoa@l 0020                                         i2stoa@p 001E  
                                       i2stoa@s 000E                                         i2stoa@w 001A  
                                       i2utoa@d 0020                                         i2utoa@i 003C  
                               __size_ofi2_otoa 01F0                                         i2utoa@n 0034  
                                       i2utoa@p 0030                                 __CFG_PWRTEN$OFF 000000  
                                       i2utoa@w 0032                                 __size_ofi2_stoa 0186  
                               __size_ofi2_utoa 0204                                 __size_ofi2_xtoa 02DA  
                                       i2xtoa@c 0043                                         i2xtoa@d 0020  
                                       i2xtoa@i 0041                                         i2xtoa@n 0039  
                                       i2xtoa@p 0035                                         i2xtoa@w 0037  
                                       i2xtoa@x 0028                            _ADC_InterruptHandler 005D  
                                       __Hparam 0000                                         __Lparam 0000  
                            __size_of_vsnprintf 0110                               ??_lcd_draw_string 00AC  
                                 _turn_on_value 01B8                                         ___aldiv 50FA  
                                       ___aodiv 45C8                                         ___aomod 4BE2  
                               __size_of___lmul 006C                                 __size_of___wmul 0028  
                                       ___lodiv 5208                                         ___lomod 55C0  
                                     ?_vfprintf 0141                                  i2vfprintf@cfmt 0055  
                                     ?_snprintf 015F                             _EUSART1_is_rx_ready 684C  
                                  ?i2_vfpfcnvrt 0045                                         __pcinit 5CEC  
                                       __ramtop 0F00                             _EUSART1_is_tx_ready 6642  
                                       __ptext0 35B6                                         __ptext1 65B8  
                                       __ptext2 4FEA                                         __ptext3 5A88  
                                       __ptext4 6892                                         __ptext5 6642  
                                       __ptext6 684C                                         __ptext7 666C  
                                       __ptext8 66C0                                         __ptext9 5D52  
                               __size_of_printf 0028                                       _T0CONbits 000FD5  
                                       _msDelay 64A2                                       _IOCB4_ISR 65E8  
                               __size_of_strlen 003A                                       _T1CONbits 000FCD  
                         _OSCILLATOR_Initialize 6872                                    __size_of_abs 0042  
                                  __size_of_pad 00CA                                         _isalpha 6340  
                                       _isdigit 6468                                ___aldiv@dividend 0099  
                            _EUSART1_Initialize 61B2                                         _islower 63BA  
                      ??_PIN_MANAGER_Initialize 008F                                         _isspace 5F92  
                             __CFG_MSSPMSK$MSK7 000000                                         _isupper 63F4  
                                       atoi@neg 009A                           __end_of_lcd_draw_char 4BE2  
                    __size_of_SYSTEM_Initialize 0022                                      ??_lcd_fill 0098  
                             ?_SPI_ExchangeByte 0001                                      ??_lcd_init 009C  
                                    ??_lcd_send 008F                                         _strncmp 53EA  
                                       _toupper 5E1A                            end_of_initialization 5D48  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                            ??_SPI_ExchangeByte 008D                            ?_EUSART1_is_tx_ready 0001  
                     __size_of_lcd_set_cursor_x 004E                       __size_of_lcd_set_cursor_y 004E  
                                       fputc@fp 0091                     _EUSART1_OverrunErrorHandler 00C4  
                                       fputs@fp 009A                             i2___wmul@multiplier 0001  
                                     i2u1000_40 1680                                       i2u1000_41 167C  
                                     i2u1001_40 16A6                                       i2u1001_41 16A2  
                                     i2u1010_40 1A2C                                       i2u1002_40 172A  
                                     i2u1010_41 1A28                                       i2u1002_41 1726  
                                     i2u1011_40 1AE2                                       i2u1003_40 1760  
                                     i2u1011_41 1ADE                                       i2u1003_41 175C  
                                     i2u1020_40 1F8C                                       i2u1012_40 1B5A  
                                     i2u1004_40 1818                                       i2u1020_41 1F88  
                                     i2u1012_41 1B56                                       i2u1004_41 1814  
                                     i2u1021_40 2042                                       i2u1013_40 1BE0  
                                     i2u1005_40 184E                                       i2u1021_41 203E  
                                     i2u1013_41 1BDC                                       i2u1005_41 184A  
                                     i2u1030_40 247A                                       i2u1022_40 20BA  
                                     i2u1014_40 1C68                                       i2u1006_40 18C4  
                                     i2u1030_41 2476                                       i2u1022_41 20B6  
                                     i2u1014_41 1C64                                       i2u1006_41 18C0  
                                     i2u1031_40 24B0                                       i2u1023_40 2140  
                                     i2u1015_40 1CEE                                       i2u1007_40 18EA  
                                     i2u1031_41 24AC                                       i2u1023_41 213C  
                                     i2u1015_41 1CEA                                       i2u1007_41 18E6  
                                     i2u1032_40 2550                                       i2u1024_40 21C8  
                                     i2u1016_40 1D60                                       i2u1008_40 196E  
                                     i2u1032_41 254C                                       i2u1024_41 21C4  
                                     i2u1016_41 1D5C                                       i2u1008_41 196A  
                                     i2u1025_40 21FE                                       i2u1017_40 1DE0  
                                     i2u1009_40 19A4                                       i2u1025_41 21FA  
                                     i2u1017_41 1DDC                                       i2u1009_41 19A0  
                                     i2u1026_40 22E0                                       i2u1018_40 1E52  
                                     i2u1026_41 22DC                                       i2u1018_41 1E4E  
                                     i2u1027_40 2316                                       i2u1019_40 1F00  
                                     i2u1027_41 2312                                       i2u1019_41 1EFC  
                                     i2u1028_40 23B6                                       i2u1028_41 23B2  
                                     i2u1029_40 23DC                                       i2u1109_40 5E10  
                                     i2u1029_41 23D8                                       i2u1109_41 5E0C  
                                     i2u1155_40 6046                                       i2u1155_41 6042  
                                     i2u1156_40 6082                                       i2u1156_41 607E  
                                     i2u1165_40 6818                                       i2u1165_41 6814  
                                     i2u1158_40 65FC                                       i2u1174_40 0048  
                                     i2u1158_41 65F8                                       i2u1174_41 0044  
                                     i2u1175_40 0056                                       i2u1175_41 0052  
                                     i2u1159_48 6602                                       i2u1159_49 6614  
                           lcd_draw_char@fIndex 009A                             read_from_usart@data 00A6  
                               i2_EUSART1_Write 6836                               __end_of_vfpfcnvrt 1352  
                         TMR0_ReadTimer@readVal 0091                                ___aldiv@quotient 00A3  
                                       postdec1 000FE5                                         postdec2 000FDD  
                            i2___lodiv@dividend 0001                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 002A                                lcd_fill@bg_color 0096  
                                  ??i2_vfprintf 0055                                      ??_vfprintf 00B5  
                                _TMR0_ReadTimer 677E                            ??_EUSART1_Initialize 008F  
                                    ??_snprintf 00B5                                         strlen@a 008F  
                                       strlen@s 008D                               lcd_draw_string@pS 0104  
                                     _PORTBbits 000F81                               _spi_configuration FF01  
                                    ?_IOCB4_ISR 0001                               i2___aodiv@divisor 0009  
                              __CFG_FOSC$INTIO2 000000                               i2___aodiv@counter 0011  
                       __end_of_read_from_usart 5B44                                       _TRISCbits 000F94  
                             __end_of_vsnprintf 50FA                                       i2___aodiv 4752  
              __size_of_EUSART1_SetErrorHandler 000A                                       i2___aomod 4D48  
                           EUSART1_Write@txData 008D                                       i2___lodiv 52FA  
                         ??_EUSART1_is_rx_ready 008D                                       i2___lomod 5692  
                            i2___lodiv@quotient 0011                           ??_EUSART1_is_tx_ready 008D  
                __size_of_INTERRUPT_S1_CALLBACK 0050                   __end_of_INTERRUPT_S1_CALLBACK 6088  
                                    lcd_send@dc 008F                              __end_ofi2_vfprintf 5E1A  
                                  _EUSART1_Read 666C                                       i2_isalpha 637E  
                                     i2_isdigit 654A                                  __end_ofi2_atoi 404E  
                                __end_ofi2_ctoa 5F92                                  __end_ofi2_dtoa 32DC  
                                     i2_islower 64DA                                       i2_isspace 5FE6  
                                __end_ofi2_otoa 443C                                  __end_ofi2_stoa 4A60  
                                __end_ofi2_utoa 3E4C                                  __end_ofi2_xtoa 35B6  
                                     i2_isupper 6512                                  _TMR0_StopTimer 68EA  
                        __end_of_TMR0_ReadTimer 679E                                       i2atoi@neg 000E  
                  __end_of_INTERRUPT_Initialize 68EA                            SPI_ExchangeByte@data 008D  
                                     i2_strncmp 54D6                                       i2_toupper 5ED8  
                     __end_of_spi_configuration FF05                                  __end_of___lmul 5CEC  
                                   vfpfcnvrt@ap 0120                                     vfpfcnvrt@cp 0126  
                                   vfpfcnvrt@fp 011C                                     vfpfcnvrt@ll 012E  
                                __end_of___wmul 6710                                     vfpfcnvrt@vp 0136  
                                _ADC_Initialize 6820                                       i2fputc@fp 0005  
                        ?_OSCILLATOR_Initialize 0001                                       i2fputs@fp 000E  
                              i2___wmul@product 0005                                  __end_of_printf 66E8  
                             __size_of_SPI_Open 00B4                                  __end_of_strlen 6468  
                           start_initialization 5CEC                                 ___lodiv@divisor 0095  
                               ___lodiv@counter 00A5                               __size_ofi2___wmul 0026  
                      __size_of_TMR0_Initialize 002A                 __size_of_PIN_MANAGER_Initialize 0046  
                                   __end_of_abs 627E                                     __end_of_pad 58F8  
                                    ?i2___aodiv 0001                                      ?i2___aomod 0001  
                                  i2vfpfcnvrt@c 0072                                      ?i2___lodiv 0001  
                                    ?i2___lomod 0001                                     putch@txData 008E  
                             __size_ofi2_printf 0026                           __end_of_EUSART1_Write 67F0  
                             __size_ofi2_strlen 0036                                       i2strlen@a 0003  
                                     i2strlen@s 0001                         __end_ofi2_EUSART1_Write 684C  
                                      ??i2_atoi 000A                                        ??i2_ctoa 0021  
                                      ??i2_dtoa 0028                                        ??i2_otoa 0028  
                                      ??i2_stoa 0010                                        ??i2_utoa 0028  
                      __size_of_PIN_MANAGER_IOC 0018                                        ??i2_xtoa 0029  
                                    ?i2_isalpha 0001                          __end_of_TMR0_StopTimer 68EE  
                                    ?i2_isdigit 0001                                      ?i2_islower 0001  
                                    ?i2_isspace 0001                  SPI_Open@spiUniqueConfiguration 008E  
                                    ?i2_isupper 0001                        __size_of_TMR1_Initialize 002C  
                                   vfprintf@fmt 0143                                    i2vfprintf@ap 0053  
                               i2vfpfcnvrt@done 0062                                    i2vfprintf@fp 004F  
                               ?_TMR0_ReadTimer 008D                                        ??___lmul 0095  
                                      ??___wmul 0091                                      ?i2_strncmp 0001  
                                    ?i2_toupper 0007                          __end_of_ADC_Initialize 6836  
                                   __pdataBANK0 00CC                                     __pdataBANK1 01B6  
                                      ??_printf 00B5                               i2___aomod@divisor 0009  
                                      ??_strlen 008F                               i2___aomod@counter 0011  
                                   ??_IOCB4_ISR 005B                         __size_of_lcd_draw_pixel 0018  
                          __size_ofi2_vfpfcnvrt 1278                                    vsnprintf@cnt 0157  
                                  vsnprintf@fmt 014D                                     __pbssCOMRAM 005D  
                                 __pcstackBANK0 0060                                   __pcstackBANK1 0100  
                              ?_read_from_usart 00A3                                ___aodiv@dividend 008D  
                                   snprintf@fmt 0163                                       _adc_value 0176  
                               _lcd_draw_string 4EAC                                        ?i2_fputc 0003  
                                      ?i2_fputs 000C                                _lcd_set_cursor_x 60D6  
                              _lcd_set_cursor_y 6088                ??_EUSART1_SetFramingErrorHandler 008F  
               ?_EUSART1_SetFramingErrorHandler 008D                               __size_of_lcd_fill 0088  
                             __size_of_lcd_init 0436                                        ?i2_putch 0001  
                             __size_of_lcd_send 001E                                       _atoi$2285 009C  
                                     _atoi$2286 00A0                                       _atoi$2287 009E  
                                     __pnvBANK0 00C2                        __size_of_TMR0_StartTimer 0004  
                               ?_TMR0_StopTimer 0001                          _PIN_MANAGER_Initialize 616C  
                                     _dtoa$1672 0108                        fp__INTERRUPT_S1_CALLBACK 0000  
                       _EUSART1_is_tx_ready$859 008D                                       __pintcode 0008  
                                 __pmediumconst F134                                        ?___aldiv 0099  
                                      ?___aodiv 008D                                        ?___aomod 008D  
                                     __ptext100 68D0                                       __ptext101 68EA  
                                     __ptext102 68EE                                ___aodiv@quotient 009F  
                                     __ptext103 0000                                        ?___lodiv 008D  
                                      ?___lomod 008D                                 ?_ADC_Initialize 0001  
                              read_from_usart@i 00B2                    ??_INTERRUPT_InterruptManager 0081  
                             __size_of_vfprintf 0064                               __size_of_snprintf 0030  
                                      ?_msDelay 0001                                 ___lomod@divisor 0095  
                               ___lomod@counter 009D                                        _BAUDCON1 000FA7  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        ?_isalpha 008D  
                                      ?_isdigit 008D                                  __size_ofi2_abs 0040  
                      __size_of_TMR0_WriteTimer 000C                            _EUSART1_ErrorHandler 00C2  
                                __size_ofi2_pad 00C6                                        ?_islower 008D  
                                      ?_isspace 008D                                        ?_isupper 008D  
                       _EUSART1_SetErrorHandler 68BC                                     ??i2___aodiv 0011  
                                   ??i2___aomod 0011                                  __size_of_fputc 00CC  
                                   ??i2___lodiv 0011                                  __size_of_fputs 0048  
                                   ??i2___lomod 0011                                        ?_strncmp 008D  
                                      ?_toupper 0093                                  __size_of_putch 000E  
                          _INTERRUPT_Initialize 68E6                         __size_of_lcd_set_cursor 0042  
                               ___aldiv@divisor 009D                               ??_TMR0_Initialize 008D  
                               ___aldiv@counter 00A1                                ?i2_EUSART1_Write 0001  
                                ___wmul@product 0091                                        _IOCBbits 000F5A  
                                      _LATAbits 000F89         EUSART1_SetErrorHandler@interruptHandler 008D  
                                      _LATEbits 000F8D                                     ??i2_isalpha 0003  
                            i2___lomod@dividend 0001                                     ??i2_isdigit 0003  
                               lcd_set_cursor@x 0092                                 lcd_set_cursor@y 0094  
                                   ??i2_islower 0003                                i2_vfpfcnvrt$1723 0064  
                              i2_vfpfcnvrt$1724 0066                                     ??i2_isspace 0003  
           __size_of_INTERRUPT_InterruptManager 0086                                        _PIR1bits 000F9E  
                                   ??i2_isupper 0003                           lcd_draw_string@lIndex 00B2  
                                      i2u900_40 43E4                                        i2u900_41 43E0  
                                      i2u901_40 43F6                                        i2u901_41 43F2  
                                      i2u822_40 6846                                        i2u910_40 4A56  
                                      i2u830_40 650A                                        i2u822_41 6842  
                                      i2u910_41 4A52                                        i2u902_41 48E4  
                                      i2u830_41 6504                                        i2u903_40 4906  
                                      i2u911_40 3C58                                        i2u831_40 650C  
                                      i2u903_41 4902                                        i2u911_41 3C54  
                                      i2u824_40 590A                                        i2u840_40 4764  
                                      i2u904_40 4938                                        i2u912_40 3C74  
                                      i2u920_40 3332                                        i2u824_41 5906  
                                      i2u840_41 4760                                        i2u904_41 4934  
                                      i2u912_41 3C70                                        i2u920_41 332E  
                                      i2u825_40 591C                                        i2u841_40 4796  
                                      i2u905_40 4956                                        i2u913_40 3DC0  
                                      i2u921_40 3396                                        i2u825_41 5918  
                                      i2u841_41 4792                                        i2u905_41 4952  
                                      i2u913_41 3DBC                                        i2u921_41 3392  
                                      i2u826_40 5944                                        i2u850_40 4DF4  
                                      i2u906_40 4982                                        i2u914_40 3DDE  
                                      i2u930_40 350C                                        i2u922_40 33E0  
                                      i2u826_41 5940                                        i2u842_41 47C0  
                                      i2u850_41 4DF0                                        i2u906_41 497E  
                                      i2u914_41 3DDA                                        i2u930_41 3508  
                                      i2u922_41 33DA                                        i2u827_40 597A  
                                      i2u843_40 47E4                                        i2u851_40 4E22  
                                      i2u907_40 49BC                                        i2u915_40 3DF8  
                                      i2u931_40 3526                                        i2u923_40 33E2  
                                      i2u827_41 5976                                        i2u843_41 47E0  
                                      i2u851_41 4E1E                                        i2u907_41 49B8  
                                      i2u915_41 3DF4                                        i2u931_41 3522  
                                      i2u940_40 3F38                                        i2u828_40 623A  
                                      i2u836_40 59D2                                        i2u844_40 480E  
                                      i2u852_40 4E6A                                        i2u860_40 631A  
                                      i2u908_40 4A0C                                        i2u916_40 3E12  
                                      i2u932_40 3540                                        i2u924_40 33F8  
                                      i2u828_41 6236                                        i2u836_41 59CE  
                                      i2u844_41 480A                                        i2u852_41 4E66  
                                      i2u860_41 6316                                        i2u908_41 4A08  
                                      i2u916_41 3E0E                                        i2u932_41 353C  
                                      i2u924_41 33F4                                        i2u940_47 3F2E  
                                      i2u941_40 3F96                                        i2u829_40 65AA  
                                      i2u837_40 59F4                                        i2u845_40 484E  
                                      i2u909_40 4A1C                                        i2u917_40 3E22  
                                      i2u861_40 63B2                                        i2u933_40 3550  
                                      i2u925_40 342C                                        i2u829_41 65A6  
                                      i2u837_41 59F0                                        i2u845_41 484A  
                                      i2u909_41 4A18                                        i2u853_41 5300  
                                      i2u917_41 3E1E                                        i2u861_41 63AC  
                                      i2u933_41 354C                                        i2u925_41 3426  
                                      i2u941_47 3F8C                                        i2u942_40 3FDA  
                                      i2u838_40 5A4A                                        i2u846_40 4898  
                                      i2u950_40 5568                                        i2u854_40 5324  
                                      i2u862_40 63B4                                        i2u870_40 5F0A  
                                      i2u934_40 3560                                        i2u926_40 342E  
                                      i2u918_40 32EC                                        i2u838_41 5A46  
                                      i2u846_41 4894                                        i2u950_41 5564  
                                      i2u854_41 5320                                        i2u934_41 355C  
                                      i2u918_41 32E8                                        i2u942_47 3FD0  
                                      i2u863_40 657A                                        i2u943_40 3FFE  
                                      i2u935_40 3E8A                                        i2u839_40 5A5A  
                                      i2u847_40 4D5A                                        i2u951_40 5596  
                                      i2u855_40 534E                                        i2u871_40 5F20  
                                      i2u927_40 3444                                        i2u919_40 3308  
                                      i2u863_41 6574                                        i2u943_41 3FF8  
                                      i2u839_41 5A56                                        i2u847_41 4D56  
                                      i2u951_41 5592                                        i2u855_41 534A  
                                      i2u871_41 5F1C                                        i2u927_41 3440  
                                      i2u919_41 3304                                        i2u935_47 3E80  
                                      i2u864_40 657C                                        i2u944_40 4000  
                                      i2u936_40 3E9A                                        i2u848_40 4D8C  
                                      i2u880_40 3070                                        i2u856_40 538E  
                                      i2u928_40 34AC                                        i2u936_41 3E96  
                                      i2u848_41 4D88                                        i2u880_41 306C  
                                      i2u856_41 538A                                        i2u928_45 349A  
                                      i2u865_40 5FFE                                        i2u945_40 4016  
                                      i2u937_40 3EC4                                        i2u849_40 4DCA  
                                      i2u881_40 308C                                        i2u857_40 56B0  
                                      i2u929_40 34EE                                        i2u865_41 5FFA  
                                      i2u945_41 4012                                        i2u849_41 4DC6  
                                      i2u881_41 3088                                        i2u857_41 56AC  
                                      i2u929_41 34EA                                        i2u937_47 3EBA  
                                      i2u866_40 602C                                        i2u946_40 4028  
                                      i2u938_40 3EE6                                        i2u890_40 3276  
                                      i2u882_40 30BA                                        i2u858_40 56DA  
                                      i2u866_41 6028                                        i2u946_41 4024  
                                      i2u938_41 3EE2                                        i2u890_41 3272  
                                      i2u882_41 30B6                                        i2u858_41 56D6  
                                      i2u939_40 3F02                                        i2u891_40 328E  
                                      i2u883_40 30C8                                        i2u947_40 5500  
                                      i2u859_40 5708                                        i2u867_40 6542  
                                      i2u939_41 3EFE                                        i2u891_41 328A  
                                      i2u883_41 30C4                                        i2u947_41 54FC  
                                      i2u859_41 5704                                        i2u867_41 653C  
                                      i2u876_40 5F4A                                        i2u884_40 31F2  
                                      i2u892_40 425C                                        i2u948_40 5538  
                                      i2u868_40 6544                                        i2u876_41 5F46  
                                      i2u884_41 31EE                                        i2u892_41 4258  
                                      i2u948_41 5534                                        i2u885_40 3210  
                                      i2u877_40 3028                                        i2u893_40 4278  
                                      i2u949_40 5556                                        i2u869_40 5F08  
                                      i2u885_41 320C                                        i2u877_41 3022  
                                      i2u893_41 4274                                        i2u949_41 5552  
                                      i2u869_41 5F02                                        i2u886_40 322A  
                                      i2u878_40 302A                                        i2u894_40 4332  
                                      i2u990_40 1456                                        i2u886_41 3226  
                                      i2u990_41 1452                                        i2u894_45 4320  
                                      i2u887_40 3244                                        i2u879_40 3040  
                                      i2u895_40 4372                                        i2u991_40 147E  
                                      i2u887_41 3240                                        i2u879_41 303C  
                                      i2u895_41 436E                                        i2u991_41 147A  
                                      _RCONbits 000FD0                                        i2u888_40 3254  
                                      i2u896_40 4390                                        i2u992_40 14C2  
                                      i2u888_41 3250                                        i2u896_41 438C  
                                      i2u992_41 14BE                                        i2u889_40 3266  
                                      i2u897_40 43AA                                        i2u993_40 1540  
                                      i2u889_41 3262                                        i2u897_41 43A6  
                                      i2u993_41 153A                                        i2u898_40 43C4  
                                      i2u994_40 1542                                        i2u898_41 43C0  
                                      i2u899_40 43D4                                        i2u995_40 155A  
                                      i2u899_41 43D0                                        i2u995_41 1556  
                                      i2u996_40 1580                                        i2u988_40 1378  
                                      i2u996_41 157C                                        i2u988_41 1374  
                                      i2u997_40 15BC                                        i2u989_40 1448  
                                      i2u997_41 15B8                                        i2u989_41 1444  
                                      i2u998_40 1666                                        i2u998_41 1660  
                                      i2u999_40 1668                       __size_of_SPI_ExchangeByte 001C  
                              lcd_draw_string@k 00B0                                     ??i2_strncmp 0007  
                              lcd_draw_string@x 0100                                lcd_draw_string@y 0102  
                                   ??i2_toupper 0009                               ??_PIN_MANAGER_IOC 005B  
                                     _vfpfcnvrt 0092                        TMR0_ReadTimer@readValLow 0093  
                                     _xtoa$1708 0108                                       _xtoa$1709 010A  
                                      _SPI_Open 5B44                               ??_TMR1_Initialize 008D  
                                    _ADCON0bits 000FC2                               ___wmul@multiplier 008D  
                              __CFG_SOSCSEL$DIG 000000                                        i2___wmul 6736  
                       __end_of_lcd_draw_string 4FEA                               i2_TMR0_WriteTimer 68D0  
                                  _isspace$2312 0093                                        i2_printf 6710  
                                      i2pad@buf 0015                                        i2ctoa@fp 001E  
                                     msDelay@ms 008E                                        i2dtoa@fp 001E  
                                      i2_strlen 6582                                      vfpfcnvrt@c 0138  
                            ?i2_TMR0_WriteTimer 0001                               ___lmul@multiplier 008D  
                                   _INTCON2bits 000FF1                                       copy_data0 5D00  
                                     copy_data1 5D20                                        i2fputc@c 0003  
                         ?_INTERRUPT_Initialize 0001                                        i2fputs@c 0010  
                                      i2fputs@i 0011                                        i2fputs@s 000C  
                                     _vsnprintf 4FEA                                        i2otoa@fp 001E  
                                      i2stoa@cp 001C                                        i2stoa@fp 000C  
                              __size_ofi2_fputc 00CA                                __size_ofi2_fputs 0044  
                                _turn_off_value 01B6                                        i2utoa@fp 001E  
                              __size_ofi2_putch 000A                             ??i2_TMR0_WriteTimer 0003  
                                      i2xtoa@fp 001E                             lcd_draw_pixel@color 0090  
                                      __Hrparam 0000                                      vfprintf@ap 0145  
                                      __Lrparam 0000                                      vfprintf@fp 0141  
                             _ADC_GetConversion 62C0                              __CFG_BOREN$SBORDIS 000000  
                       __size_of_SPI_Initialize 0012                         ??_OSCILLATOR_Initialize 008D  
                        __size_of_lcd_draw_char 0182                              ?_ADC_GetConversion 008D  
                             ??_TMR0_StartTimer 0001                                __size_of___aldiv 010E  
                              __size_of___aodiv 018A                                __size_of___aomod 0166  
                                   vsnprintf@ap 014F                           i2___wmul@multiplicand 0003  
                              __size_of___lodiv 00F2                     __size_of_EUSART1_Initialize 0046  
                              __size_of___lomod 00D2                                      ?_vfpfcnvrt 011C  
                                    snprintf@ap 016B                                 ___aodiv@divisor 0095  
                                      _adc_perc 00B5                                 ___aodiv@counter 009D  
                        _IOCB4_InterruptHandler 00CA                                  _lcd_draw_pixel 67F0  
                     __end_ofi2_TMR0_WriteTimer 68DA                       ??_EUSART1_SetErrorHandler 008F  
                   _EUSART1_DefaultErrorHandler 000000                             ??_ADC_GetConversion 008F  
                              __size_of_msDelay 0038                     __end_of_EUSART1_is_rx_ready 6860  
                              __size_of_isalpha 003E                                __size_of_isdigit 003A  
                   __end_of_EUSART1_is_tx_ready 666C                fp__IOCB4_DefaultInterruptHandler 0000  
                ?_IOCB4_DefaultInterruptHandler 0001                                __size_of_islower 003A  
                              __size_of_isspace 0054                                        __ptext10 0092  
                                      __ptext11 2D06                                        __ptext20 443C  
                                      __ptext12 5E1A                                        __ptext21 404E  
                                      __ptext13 63BA                                      _T1GCONbits 000FAA  
                                      __ptext30 5762                                        __ptext22 2A00  
                                      __ptext14 63F4                                        __ptext31 6884  
                                      __ptext23 623C                                        __ptext15 6340  
                                      __ptext40 4EAC                                        __ptext32 67D8  
                                      __ptext24 4BE2                                        __ptext16 3820  
                                      __ptext41 4A60                                        __ptext33 3A38  
                                      __ptext25 45C8                                        __ptext17 55C0  
                                      __ptext50 677E                                        __ptext42 627E  
                                      __ptext34 5F92                                        __ptext26 5E7A  
                                      __ptext18 5208                                        __ptext51 675C  
                                      __ptext43 6088                                        __ptext35 6468  
                                      __ptext27 582E                                        __ptext19 53EA  
                                      __ptext60 68A8                                        __ptext52 6616  
                                      __ptext44 60D6                                        __ptext36 66E8  
                                      __ptext28 642E                                        __ptext61 68B2  
                                      __ptext53 6696                                        __ptext45 67F0  
                                      __ptext37 25CA                                        __ptext29 6124  
                                      __ptext70 68F2                                        __ptext62 68BC  
                                      __ptext54 6860                                        __ptext46 679E  
                                      __ptext38 64A2                                        __ptext71 6710  
                                      __ptext63 6820                                        __ptext55 616C  
                                      __ptext47 67BC                                        __ptext39 5BF8  
                                      __ptext80 5692                                        __ptext72 5DB6  
                                      __ptext64 5B44                                        __ptext56 689E  
                                      __ptext48 5C80                                        __ptext81 52FA  
                                      __ptext73 1352                                        __ptext65 62C0  
                                      __ptext57 6872                                        __ptext49 50FA  
                                      __ptext90 59C2                                        __ptext82 54D6  
                                      __ptext74 32DC                                        __ptext58 68E6  
                                      __ptext91 6582                                        __ptext83 48DA  
                                      __ptext75 5ED8                                        __ptext67 6808  
                                      __ptext59 61B2                                        __ptext92 61F8  
                                      __ptext84 424C                                        __ptext76 64DA  
                                      __ptext68 65E8                                        __ptext93 58F8  
                                      __ptext85 2FF8                                        __ptext77 6512  
                                      __ptext69 6038                                        __ptext94 68C6  
                                      __ptext86 6300                                        __ptext78 637E  
                                      __ptext95 6836                                        __ptext87 4D48  
                                      __ptext79 3C48                                        __ptext96 3E4C  
                                      __ptext88 4752                                        __ptext97 5FE6  
                                      __ptext89 5F36                                        __ptext98 654A  
                                      __ptext99 6736                                __size_of_isupper 003A  
                                      _lcd_fill 5BF8                                        _lcd_init 25CA  
                                      _lcd_send 679E                         TMR0_WriteTimer@timerVal 008D  
                             ??_TMR0_WriteTimer 008F                                __size_of_strncmp 00EC  
                              __size_of_toupper 0060                                      ?_vsnprintf 0149  
                                 __size_of_atoi 0210                                   __size_of_ctoa 005E  
                                 __size_of_main 026A                                   __size_of_dtoa 0306  
                                 __size_of_otoa 01FE                                   __size_of_stoa 018C  
                                 __size_of_utoa 0218                                ??_TMR0_ReadTimer 008F  
                                 __size_of_xtoa 02F2                           _INTERRUPT_S1_CALLBACK 6038  
                         read_from_usart@length 00A3                       __end_of_ADC_GetConversion 6300  
                                     stoa@F1152 00CC  EUSART1_SetOverrunErrorHandler@interruptHandler 008D  
                         lcd_draw_char@bg_color 009E                                        int$flags 005F  
                                      _vfprintf 5D52                           lcd_draw_char@fg_color 009C  
            __end_of_INTERRUPT_InterruptManager 008E                      _INTERRUPT_InterruptManager 0008  
                        __end_of_lcd_draw_pixel 6808                                        _snprintf 65B8  
                                     printf@fmt 0149                        __end_of_lcd_set_cursor_x 6124  
                      __end_of_lcd_set_cursor_y 60D6                     _EUSART1_FramingErrorHandler 00C6  
                           __CFG_INTOSCSEL$HIGH 000000                                        msDelay@k 008F  
                              ___aomod@dividend 008D                                  _vfpfcnvrt$1723 012A  
                                _vfpfcnvrt$1724 012C                                      _INTCONbits 000FF2  
                              ?_lcd_draw_string 0100                                        isalpha@c 008D  
                                      isdigit@c 008D                          ??_INTERRUPT_Initialize 008D  
                                    vsnprintf@f 0159                                      vsnprintf@n 014B  
                                    vsnprintf@s 0149                                   _lcd_draw_char 4A60  
                                     snprintf@n 0161                                       snprintf@s 015F  
                                      intlevel2 0000                                  _lcd_set_cursor 627E  
                              ??_TMR0_StopTimer 0001                               lcd_set_cursor_x@x 0090  
                             lcd_set_cursor_y@y 0090                                        islower@c 008D  
                                      isspace@c 008D                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 68B2         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 68A8                                      _RCSTA1bits 000FAB  
                                      isupper@c 008D                                       strncmp@_l 008D  
                                     strncmp@_r 008F                                ??_ADC_Initialize 008D  
                          read_from_usart@value 00B0                                _SPI_ExchangeByte 67BC  
                       lcd_draw_string@bg_color 0108                                        printf@ap 0151  
                            __CFG_WDTPS$1048576 000000  EUSART1_SetFramingErrorHandler@interruptHandler 008D  
                               ___aomod@divisor 0095                         lcd_draw_string@fg_color 0106  
                                 ??i2_vfpfcnvrt 004B                                 ?_lcd_draw_pixel 0090  
                                   ??_vfpfcnvrt 0122                                        stoa@nuls 009D  
                               ___aomod@counter 009D                          __size_of_EUSART1_Write 0018  
                            _eusart1RxLastError 00C1                      __size_ofi2_TMR0_WriteTimer 000A  
                                _vsnprintf$2430 0155                                 _TMR0_Initialize 6696  
                                      strncmp@l 0094                                        strncmp@n 0091  
                                      strncmp@r 0096                                        toupper@c 0093  
                                  ___aldiv@sign 00A2                                     _SSPCON1bits 000FC6  
                        __end_of_lcd_set_cursor 62C0                                  ?_lcd_draw_char 0096  
                                i2_isspace$2312 0007                                    ___aodiv@sign 009E  
                __end_of_PIN_MANAGER_Initialize 61B2                                     ??_vsnprintf 0151  
                            i2___aodiv@dividend 0001                             __CFG_BORPWR$ZPBORMV 000000  
                      __size_of_read_from_usart 00BC                          ?_INTERRUPT_S1_CALLBACK 0001  
                               _PIN_MANAGER_IOC 6808                      __size_of_ADC_GetConversion 0040  
                                  ___aomod@sign 009E                                 _TMR1_Initialize 6616  
