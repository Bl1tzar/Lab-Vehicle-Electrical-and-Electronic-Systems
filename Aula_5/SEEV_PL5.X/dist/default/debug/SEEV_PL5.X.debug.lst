

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Dec 09 13:57:40 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	text100,global,reloc=2,class=CODE,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1
   122                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   123                           	psect	text103,global,reloc=2,class=CODE,delta=1
   124                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   125                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   126  0000                     
   127                           ; Version 2.10
   128                           ; Generated 31/07/2019 GMT
   129                           ; 
   130                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   131                           ; All rights reserved.
   132                           ; 
   133                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   134                           ; 
   135                           ; Redistribution and use in source and binary forms, with or without modification, are
   136                           ; permitted provided that the following conditions are met:
   137                           ; 
   138                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   139                           ;        conditions and the following disclaimer.
   140                           ; 
   141                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   142                           ;        of conditions and the following disclaimer in the documentation and/or other
   143                           ;        materials provided with the distribution.
   144                           ; 
   145                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   146                           ;        software without specific prior written permission.
   147                           ; 
   148                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   149                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   150                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   151                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   152                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   153                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   154                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   155                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   156                           ; 
   157                           ; 
   158                           ; Code-generator required, PIC18F46K80 Definitions
   159                           ; 
   160                           ; SFR Addresses
   161  0000                     
   162 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   163  0000                     
   164 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   165  0000                     
   166 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   167  0000                     
   168                           	psect	idataBANK0
   169  006964                     __pidataBANK0:
   170                           	opt callstack 0
   171                           
   172                           ;initializer for stoa@F1152
   173  006964  28                 	db	40
   174  006965  6E                 	db	110
   175  006966  75                 	db	117
   176  006967  6C                 	db	108
   177  006968  6C                 	db	108
   178  006969  29                 	db	41
   179  00696A  00                 	db	0
   180                           
   181                           	psect	idataBANK1
   182  00696B                     __pidataBANK1:
   183                           	opt callstack 0
   184                           
   185                           ;initializer for _turn_off_value
   186  00696B  0050               	dw	80
   187                           
   188                           ;initializer for _turn_on_value
   189  00696D  005A               	dw	90
   190                           
   191                           	psect	mediumconst
   192  00F134                     __pmediumconst:
   193                           	opt callstack 0
   194  00F134  00                 	db	0
   195  00F135                     _font:
   196                           	opt callstack 0
   197  00F135  0004               	dw	4
   198  00F137  0000               	dw	0
   199  00F139  0000               	dw	0
   200  00F13B  0000               	dw	0
   201  00F13D  0000               	dw	0
   202  00F13F  0000               	dw	0
   203  00F141  0000               	dw	0
   204  00F143  0000               	dw	0
   205  00F145  0000               	dw	0
   206  00F147  0003               	dw	3
   207  00F149  0000               	dw	0
   208  00F14B  0000               	dw	0
   209  00F14D  00FE               	dw	254
   210  00F14F  001B               	dw	27
   211  00F151  0000               	dw	0
   212  00F153  0000               	dw	0
   213  00F155  0005               	dw	5
   214  00F157  001E               	dw	30
   215  00F159  0000               	dw	0
   216  00F15B  0000               	dw	0
   217  00F15D  0000               	dw	0
   218  00F15F  0000               	dw	0
   219  00F161  0000               	dw	0
   220  00F163  001E               	dw	30
   221  00F165  0000               	dw	0
   222  00F167  0000               	dw	0
   223  00F169  0000               	dw	0
   224  00F16B  000B               	dw	11
   225  00F16D  0000               	dw	0
   226  00F16F  0000               	dw	0
   227  00F171  0010               	dw	16
   228  00F173  0001               	dw	1
   229  00F175  0010               	dw	16
   230  00F177  001D               	dw	29
   231  00F179  00F0               	dw	240
   232  00F17B  0003               	dw	3
   233  00F17D  001E               	dw	30
   234  00F17F  0001               	dw	1
   235  00F181  0010               	dw	16
   236  00F183  0001               	dw	1
   237  00F185  0010               	dw	16
   238  00F187  001D               	dw	29
   239  00F189  00F0               	dw	240
   240  00F18B  0003               	dw	3
   241  00F18D  001E               	dw	30
   242  00F18F  0001               	dw	1
   243  00F191  0010               	dw	16
   244  00F193  0001               	dw	1
   245  00F195  0000               	dw	0
   246  00F197  0000               	dw	0
   247  00F199  0009               	dw	9
   248  00F19B  0000               	dw	0
   249  00F19D  0004               	dw	4
   250  00F19F  001C               	dw	28
   251  00F1A1  0008               	dw	8
   252  00F1A3  0022               	dw	34
   253  00F1A5  0010               	dw	16
   254  00F1A7  0042               	dw	66
   255  00F1A9  0010               	dw	16
   256  00F1AB  00FF               	dw	255
   257  00F1AD  007F               	dw	127
   258  00F1AF  0042               	dw	66
   259  00F1B1  0010               	dw	16
   260  00F1B3  0084               	dw	132
   261  00F1B5  0010               	dw	16
   262  00F1B7  0000               	dw	0
   263  00F1B9  000F               	dw	15
   264  00F1BB  0000               	dw	0
   265  00F1BD  0000               	dw	0
   266  00F1BF  000C               	dw	12
   267  00F1C1  001C               	dw	28
   268  00F1C3  0000               	dw	0
   269  00F1C5  0022               	dw	34
   270  00F1C7  0010               	dw	16
   271  00F1C9  0022               	dw	34
   272  00F1CB  0008               	dw	8
   273  00F1CD  0022               	dw	34
   274  00F1CF  0006               	dw	6
   275  00F1D1  001C               	dw	28
   276  00F1D3  0001               	dw	1
   277  00F1D5  00C0               	dw	192
   278  00F1D7  0000               	dw	0
   279  00F1D9  0020               	dw	32
   280  00F1DB  000E               	dw	14
   281  00F1DD  0018               	dw	24
   282  00F1DF  0011               	dw	17
   283  00F1E1  0004               	dw	4
   284  00F1E3  0011               	dw	17
   285  00F1E5  0002               	dw	2
   286  00F1E7  0011               	dw	17
   287  00F1E9  0000               	dw	0
   288  00F1EB  000E               	dw	14
   289  00F1ED  0000               	dw	0
   290  00F1EF  0000               	dw	0
   291  00F1F1  000B               	dw	11
   292  00F1F3  0000               	dw	0
   293  00F1F5  0000               	dw	0
   294  00F1F7  0000               	dw	0
   295  00F1F9  000E               	dw	14
   296  00F1FB  001C               	dw	28
   297  00F1FD  0011               	dw	17
   298  00F1FF  00A2               	dw	162
   299  00F201  0010               	dw	16
   300  00F203  00C2               	dw	194
   301  00F205  0010               	dw	16
   302  00F207  0022               	dw	34
   303  00F209  0011               	dw	17
   304  00F20B  001C               	dw	28
   305  00F20D  000A               	dw	10
   306  00F20F  0000               	dw	0
   307  00F211  000C               	dw	12
   308  00F213  0000               	dw	0
   309  00F215  000C               	dw	12
   310  00F217  0000               	dw	0
   311  00F219  0012               	dw	18
   312  00F21B  0000               	dw	0
   313  00F21D  0000               	dw	0
   314  00F21F  0003               	dw	3
   315  00F221  0000               	dw	0
   316  00F223  0000               	dw	0
   317  00F225  001E               	dw	30
   318  00F227  0000               	dw	0
   319  00F229  0000               	dw	0
   320  00F22B  0000               	dw	0
   321  00F22D  0006               	dw	6
   322  00F22F  0000               	dw	0
   323  00F231  0000               	dw	0
   324  00F233  0000               	dw	0
   325  00F235  0000               	dw	0
   326  00F237  00E0               	dw	224
   327  00F239  001F               	dw	31
   328  00F23B  001C               	dw	28
   329  00F23D  0060               	dw	96
   330  00F23F  0002               	dw	2
   331  00F241  0080               	dw	128
   332  00F243  0000               	dw	0
   333  00F245  0000               	dw	0
   334  00F247  0004               	dw	4
   335  00F249  0000               	dw	0
   336  00F24B  0000               	dw	0
   337  00F24D  0006               	dw	6
   338  00F24F  00C0               	dw	192
   339  00F251  00F8               	dw	248
   340  00F253  003F               	dw	63
   341  00F255  0000               	dw	0
   342  00F257  0000               	dw	0
   343  00F259  0006               	dw	6
   344  00F25B  0024               	dw	36
   345  00F25D  0000               	dw	0
   346  00F25F  0018               	dw	24
   347  00F261  0000               	dw	0
   348  00F263  007E               	dw	126
   349  00F265  0000               	dw	0
   350  00F267  0018               	dw	24
   351  00F269  0000               	dw	0
   352  00F26B  0024               	dw	36
   353  00F26D  0000               	dw	0
   354  00F26F  0000               	dw	0
   355  00F271  0000               	dw	0
   356  00F273  0009               	dw	9
   357  00F275  0000               	dw	0
   358  00F277  0000               	dw	0
   359  00F279  0080               	dw	128
   360  00F27B  0000               	dw	0
   361  00F27D  0080               	dw	128
   362  00F27F  0000               	dw	0
   363  00F281  0080               	dw	128
   364  00F283  0000               	dw	0
   365  00F285  00F0               	dw	240
   366  00F287  0007               	dw	7
   367  00F289  0080               	dw	128
   368  00F28B  0000               	dw	0
   369  00F28D  0080               	dw	128
   370  00F28F  0000               	dw	0
   371  00F291  0080               	dw	128
   372  00F293  0000               	dw	0
   373  00F295  0000               	dw	0
   374  00F297  0000               	dw	0
   375  00F299  0004               	dw	4
   376  00F29B  0000               	dw	0
   377  00F29D  0000               	dw	0
   378  00F29F  0000               	dw	0
   379  00F2A1  0060               	dw	96
   380  00F2A3  0000               	dw	0
   381  00F2A5  0018               	dw	24
   382  00F2A7  0000               	dw	0
   383  00F2A9  0000               	dw	0
   384  00F2AB  0005               	dw	5
   385  00F2AD  0000               	dw	0
   386  00F2AF  0001               	dw	1
   387  00F2B1  0000               	dw	0
   388  00F2B3  0001               	dw	1
   389  00F2B5  0000               	dw	0
   390  00F2B7  0001               	dw	1
   391  00F2B9  0000               	dw	0
   392  00F2BB  0001               	dw	1
   393  00F2BD  0000               	dw	0
   394  00F2BF  0000               	dw	0
   395  00F2C1  0004               	dw	4
   396  00F2C3  0000               	dw	0
   397  00F2C5  0000               	dw	0
   398  00F2C7  0000               	dw	0
   399  00F2C9  0018               	dw	24
   400  00F2CB  0000               	dw	0
   401  00F2CD  0018               	dw	24
   402  00F2CF  0000               	dw	0
   403  00F2D1  0000               	dw	0
   404  00F2D3  0008               	dw	8
   405  00F2D5  0000               	dw	0
   406  00F2D7  0000               	dw	0
   407  00F2D9  0000               	dw	0
   408  00F2DB  0040               	dw	64
   409  00F2DD  0000               	dw	0
   410  00F2DF  0038               	dw	56
   411  00F2E1  0000               	dw	0
   412  00F2E3  0007               	dw	7
   413  00F2E5  00E0               	dw	224
   414  00F2E7  0000               	dw	0
   415  00F2E9  001C               	dw	28
   416  00F2EB  0000               	dw	0
   417  00F2ED  0002               	dw	2
   418  00F2EF  0000               	dw	0
   419  00F2F1  0000               	dw	0
   420  00F2F3  0000               	dw	0
   421  00F2F5  0009               	dw	9
   422  00F2F7  00F8               	dw	248
   423  00F2F9  0007               	dw	7
   424  00F2FB  0004               	dw	4
   425  00F2FD  0008               	dw	8
   426  00F2FF  0002               	dw	2
   427  00F301  0010               	dw	16
   428  00F303  0002               	dw	2
   429  00F305  0010               	dw	16
   430  00F307  0002               	dw	2
   431  00F309  0010               	dw	16
   432  00F30B  0002               	dw	2
   433  00F30D  0010               	dw	16
   434  00F30F  0004               	dw	4
   435  00F311  0008               	dw	8
   436  00F313  00F8               	dw	248
   437  00F315  0007               	dw	7
   438  00F317  0000               	dw	0
   439  00F319  0000               	dw	0
   440  00F31B  0006               	dw	6
   441  00F31D  0000               	dw	0
   442  00F31F  0000               	dw	0
   443  00F321  0000               	dw	0
   444  00F323  0000               	dw	0
   445  00F325  0002               	dw	2
   446  00F327  0000               	dw	0
   447  00F329  0002               	dw	2
   448  00F32B  0000               	dw	0
   449  00F32D  00FE               	dw	254
   450  00F32F  001F               	dw	31
   451  00F331  0000               	dw	0
   452  00F333  0000               	dw	0
   453  00F335  0009               	dw	9
   454  00F337  0018               	dw	24
   455  00F339  0010               	dw	16
   456  00F33B  0004               	dw	4
   457  00F33D  0018               	dw	24
   458  00F33F  0002               	dw	2
   459  00F341  0014               	dw	20
   460  00F343  0002               	dw	2
   461  00F345  0012               	dw	18
   462  00F347  0002               	dw	2
   463  00F349  0011               	dw	17
   464  00F34B  0082               	dw	130
   465  00F34D  0010               	dw	16
   466  00F34F  0044               	dw	68
   467  00F351  0010               	dw	16
   468  00F353  0038               	dw	56
   469  00F355  0010               	dw	16
   470  00F357  0000               	dw	0
   471  00F359  0000               	dw	0
   472  00F35B  0009               	dw	9
   473  00F35D  0008               	dw	8
   474  00F35F  000C               	dw	12
   475  00F361  0004               	dw	4
   476  00F363  0010               	dw	16
   477  00F365  0002               	dw	2
   478  00F367  0010               	dw	16
   479  00F369  0042               	dw	66
   480  00F36B  0010               	dw	16
   481  00F36D  0042               	dw	66
   482  00F36F  0010               	dw	16
   483  00F371  0044               	dw	68
   484  00F373  0010               	dw	16
   485  00F375  00B8               	dw	184
   486  00F377  0008               	dw	8
   487  00F379  0000               	dw	0
   488  00F37B  0007               	dw	7
   489  00F37D  0000               	dw	0
   490  00F37F  0000               	dw	0
   491  00F381  0009               	dw	9
   492  00F383  0000               	dw	0
   493  00F385  0002               	dw	2
   494  00F387  0000               	dw	0
   495  00F389  0003               	dw	3
   496  00F38B  0080               	dw	128
   497  00F38D  0002               	dw	2
   498  00F38F  0060               	dw	96
   499  00F391  0002               	dw	2
   500  00F393  0010               	dw	16
   501  00F395  0002               	dw	2
   502  00F397  0008               	dw	8
   503  00F399  0002               	dw	2
   504  00F39B  00FE               	dw	254
   505  00F39D  001F               	dw	31
   506  00F39F  0000               	dw	0
   507  00F3A1  0002               	dw	2
   508  00F3A3  0000               	dw	0
   509  00F3A5  0000               	dw	0
   510  00F3A7  0009               	dw	9
   511  00F3A9  0000               	dw	0
   512  00F3AB  0004               	dw	4
   513  00F3AD  0070               	dw	112
   514  00F3AF  0008               	dw	8
   515  00F3B1  002E               	dw	46
   516  00F3B3  0010               	dw	16
   517  00F3B5  0022               	dw	34
   518  00F3B7  0010               	dw	16
   519  00F3B9  0022               	dw	34
   520  00F3BB  0010               	dw	16
   521  00F3BD  0022               	dw	34
   522  00F3BF  0010               	dw	16
   523  00F3C1  0042               	dw	66
   524  00F3C3  0008               	dw	8
   525  00F3C5  0082               	dw	130
   526  00F3C7  0007               	dw	7
   527  00F3C9  0000               	dw	0
   528  00F3CB  0000               	dw	0
   529  00F3CD  0009               	dw	9
   530  00F3CF  0000               	dw	0
   531  00F3D1  0000               	dw	0
   532  00F3D3  0000               	dw	0
   533  00F3D5  0007               	dw	7
   534  00F3D7  00C0               	dw	192
   535  00F3D9  0008               	dw	8
   536  00F3DB  0060               	dw	96
   537  00F3DD  0010               	dw	16
   538  00F3DF  0058               	dw	88
   539  00F3E1  0010               	dw	16
   540  00F3E3  0044               	dw	68
   541  00F3E5  0010               	dw	16
   542  00F3E7  0082               	dw	130
   543  00F3E9  0008               	dw	8
   544  00F3EB  0000               	dw	0
   545  00F3ED  0007               	dw	7
   546  00F3EF  0000               	dw	0
   547  00F3F1  0000               	dw	0
   548  00F3F3  0009               	dw	9
   549  00F3F5  0000               	dw	0
   550  00F3F7  0000               	dw	0
   551  00F3F9  0002               	dw	2
   552  00F3FB  0010               	dw	16
   553  00F3FD  0002               	dw	2
   554  00F3FF  000C               	dw	12
   555  00F401  0002               	dw	2
   556  00F403  0003               	dw	3
   557  00F405  00C2               	dw	194
   558  00F407  0000               	dw	0
   559  00F409  0032               	dw	50
   560  00F40B  0000               	dw	0
   561  00F40D  000E               	dw	14
   562  00F40F  0000               	dw	0
   563  00F411  0002               	dw	2
   564  00F413  0000               	dw	0
   565  00F415  0000               	dw	0
   566  00F417  0000               	dw	0
   567  00F419  0009               	dw	9
   568  00F41B  0000               	dw	0
   569  00F41D  0007               	dw	7
   570  00F41F  0098               	dw	152
   571  00F421  0008               	dw	8
   572  00F423  0064               	dw	100
   573  00F425  0010               	dw	16
   574  00F427  0042               	dw	66
   575  00F429  0010               	dw	16
   576  00F42B  0042               	dw	66
   577  00F42D  0010               	dw	16
   578  00F42F  0064               	dw	100
   579  00F431  0010               	dw	16
   580  00F433  0098               	dw	152
   581  00F435  0008               	dw	8
   582  00F437  0000               	dw	0
   583  00F439  0007               	dw	7
   584  00F43B  0000               	dw	0
   585  00F43D  0000               	dw	0
   586  00F43F  0009               	dw	9
   587  00F441  0000               	dw	0
   588  00F443  0000               	dw	0
   589  00F445  0038               	dw	56
   590  00F447  0000               	dw	0
   591  00F449  0044               	dw	68
   592  00F44B  0010               	dw	16
   593  00F44D  0082               	dw	130
   594  00F44F  0008               	dw	8
   595  00F451  0082               	dw	130
   596  00F453  0004               	dw	4
   597  00F455  0082               	dw	130
   598  00F457  0003               	dw	3
   599  00F459  0084               	dw	132
   600  00F45B  0000               	dw	0
   601  00F45D  0078               	dw	120
   602  00F45F  0000               	dw	0
   603  00F461  0000               	dw	0
   604  00F463  0000               	dw	0
   605  00F465  0004               	dw	4
   606  00F467  0000               	dw	0
   607  00F469  0000               	dw	0
   608  00F46B  0030               	dw	48
   609  00F46D  0018               	dw	24
   610  00F46F  0030               	dw	48
   611  00F471  0018               	dw	24
   612  00F473  0000               	dw	0
   613  00F475  0000               	dw	0
   614  00F477  0004               	dw	4
   615  00F479  0000               	dw	0
   616  00F47B  0000               	dw	0
   617  00F47D  0030               	dw	48
   618  00F47F  0060               	dw	96
   619  00F481  0030               	dw	48
   620  00F483  0018               	dw	24
   621  00F485  0000               	dw	0
   622  00F487  0000               	dw	0
   623  00F489  000A               	dw	10
   624  00F48B  0000               	dw	0
   625  00F48D  0000               	dw	0
   626  00F48F  0080               	dw	128
   627  00F491  0000               	dw	0
   628  00F493  0080               	dw	128
   629  00F495  0000               	dw	0
   630  00F497  0040               	dw	64
   631  00F499  0001               	dw	1
   632  00F49B  0020               	dw	32
   633  00F49D  0002               	dw	2
   634  00F49F  0020               	dw	32
   635  00F4A1  0002               	dw	2
   636  00F4A3  0010               	dw	16
   637  00F4A5  0004               	dw	4
   638  00F4A7  0010               	dw	16
   639  00F4A9  0004               	dw	4
   640  00F4AB  0008               	dw	8
   641  00F4AD  0008               	dw	8
   642  00F4AF  0000               	dw	0
   643  00F4B1  0000               	dw	0
   644  00F4B3  000A               	dw	10
   645  00F4B5  0000               	dw	0
   646  00F4B7  0000               	dw	0
   647  00F4B9  0020               	dw	32
   648  00F4BB  0001               	dw	1
   649  00F4BD  0020               	dw	32
   650  00F4BF  0001               	dw	1
   651  00F4C1  0020               	dw	32
   652  00F4C3  0001               	dw	1
   653  00F4C5  0020               	dw	32
   654  00F4C7  0001               	dw	1
   655  00F4C9  0020               	dw	32
   656  00F4CB  0001               	dw	1
   657  00F4CD  0020               	dw	32
   658  00F4CF  0001               	dw	1
   659  00F4D1  0020               	dw	32
   660  00F4D3  0001               	dw	1
   661  00F4D5  0020               	dw	32
   662  00F4D7  0001               	dw	1
   663  00F4D9  0000               	dw	0
   664  00F4DB  0000               	dw	0
   665  00F4DD  000A               	dw	10
   666  00F4DF  0000               	dw	0
   667  00F4E1  0000               	dw	0
   668  00F4E3  0008               	dw	8
   669  00F4E5  0008               	dw	8
   670  00F4E7  0010               	dw	16
   671  00F4E9  0004               	dw	4
   672  00F4EB  0010               	dw	16
   673  00F4ED  0004               	dw	4
   674  00F4EF  0020               	dw	32
   675  00F4F1  0002               	dw	2
   676  00F4F3  0020               	dw	32
   677  00F4F5  0002               	dw	2
   678  00F4F7  0040               	dw	64
   679  00F4F9  0001               	dw	1
   680  00F4FB  0080               	dw	128
   681  00F4FD  0000               	dw	0
   682  00F4FF  0080               	dw	128
   683  00F501  0000               	dw	0
   684  00F503  0000               	dw	0
   685  00F505  0000               	dw	0
   686  00F507  0008               	dw	8
   687  00F509  0000               	dw	0
   688  00F50B  0000               	dw	0
   689  00F50D  000C               	dw	12
   690  00F50F  0000               	dw	0
   691  00F511  0082               	dw	130
   692  00F513  0001               	dw	1
   693  00F515  0042               	dw	66
   694  00F517  0002               	dw	2
   695  00F519  0022               	dw	34
   696  00F51B  001A               	dw	26
   697  00F51D  0022               	dw	34
   698  00F51F  001A               	dw	26
   699  00F521  009C               	dw	156
   700  00F523  0001               	dw	1
   701  00F525  0000               	dw	0
   702  00F527  0000               	dw	0
   703  00F529  000E               	dw	14
   704  00F52B  0000               	dw	0
   705  00F52D  0000               	dw	0
   706  00F52F  00F0               	dw	240
   707  00F531  0003               	dw	3
   708  00F533  0008               	dw	8
   709  00F535  0004               	dw	4
   710  00F537  0004               	dw	4
   711  00F539  0008               	dw	8
   712  00F53B  00C2               	dw	194
   713  00F53D  0011               	dw	17
   714  00F53F  0022               	dw	34
   715  00F541  0012               	dw	18
   716  00F543  0012               	dw	18
   717  00F545  0012               	dw	18
   718  00F547  0012               	dw	18
   719  00F549  0012               	dw	18
   720  00F54B  00E2               	dw	226
   721  00F54D  0011               	dw	17
   722  00F54F  0012               	dw	18
   723  00F551  0012               	dw	18
   724  00F553  0004               	dw	4
   725  00F555  0012               	dw	18
   726  00F557  0008               	dw	8
   727  00F559  0009               	dw	9
   728  00F55B  00F0               	dw	240
   729  00F55D  0004               	dw	4
   730  00F55F  0000               	dw	0
   731  00F561  0000               	dw	0
   732  00F563  000D               	dw	13
   733  00F565  0000               	dw	0
   734  00F567  0000               	dw	0
   735  00F569  0000               	dw	0
   736  00F56B  0010               	dw	16
   737  00F56D  0000               	dw	0
   738  00F56F  000E               	dw	14
   739  00F571  0080               	dw	128
   740  00F573  0001               	dw	1
   741  00F575  0060               	dw	96
   742  00F577  0001               	dw	1
   743  00F579  001C               	dw	28
   744  00F57B  0001               	dw	1
   745  00F57D  0002               	dw	2
   746  00F57F  0001               	dw	1
   747  00F581  001C               	dw	28
   748  00F583  0001               	dw	1
   749  00F585  0060               	dw	96
   750  00F587  0001               	dw	1
   751  00F589  0080               	dw	128
   752  00F58B  0001               	dw	1
   753  00F58D  0000               	dw	0
   754  00F58F  000E               	dw	14
   755  00F591  0000               	dw	0
   756  00F593  0010               	dw	16
   757  00F595  0000               	dw	0
   758  00F597  0000               	dw	0
   759  00F599  0009               	dw	9
   760  00F59B  0000               	dw	0
   761  00F59D  0000               	dw	0
   762  00F59F  0000               	dw	0
   763  00F5A1  0000               	dw	0
   764  00F5A3  00FE               	dw	254
   765  00F5A5  001F               	dw	31
   766  00F5A7  0042               	dw	66
   767  00F5A9  0010               	dw	16
   768  00F5AB  0042               	dw	66
   769  00F5AD  0010               	dw	16
   770  00F5AF  0064               	dw	100
   771  00F5B1  0010               	dw	16
   772  00F5B3  0098               	dw	152
   773  00F5B5  0008               	dw	8
   774  00F5B7  0000               	dw	0
   775  00F5B9  0007               	dw	7
   776  00F5BB  0000               	dw	0
   777  00F5BD  0000               	dw	0
   778  00F5BF  000D               	dw	13
   779  00F5C1  0000               	dw	0
   780  00F5C3  0000               	dw	0
   781  00F5C5  00F0               	dw	240
   782  00F5C7  0003               	dw	3
   783  00F5C9  0008               	dw	8
   784  00F5CB  0004               	dw	4
   785  00F5CD  0004               	dw	4
   786  00F5CF  0008               	dw	8
   787  00F5D1  0002               	dw	2
   788  00F5D3  0010               	dw	16
   789  00F5D5  0002               	dw	2
   790  00F5D7  0010               	dw	16
   791  00F5D9  0002               	dw	2
   792  00F5DB  0010               	dw	16
   793  00F5DD  0002               	dw	2
   794  00F5DF  0010               	dw	16
   795  00F5E1  0002               	dw	2
   796  00F5E3  0010               	dw	16
   797  00F5E5  0004               	dw	4
   798  00F5E7  0008               	dw	8
   799  00F5E9  0004               	dw	4
   800  00F5EB  0008               	dw	8
   801  00F5ED  0008               	dw	8
   802  00F5EF  0004               	dw	4
   803  00F5F1  0000               	dw	0
   804  00F5F3  0000               	dw	0
   805  00F5F5  000C               	dw	12
   806  00F5F7  0000               	dw	0
   807  00F5F9  0000               	dw	0
   808  00F5FB  0000               	dw	0
   809  00F5FD  0000               	dw	0
   810  00F5FF  00FE               	dw	254
   811  00F601  001F               	dw	31
   812  00F603  0002               	dw	2
   813  00F605  0010               	dw	16
   814  00F607  0002               	dw	2
   815  00F609  0010               	dw	16
   816  00F60B  0002               	dw	2
   817  00F60D  0010               	dw	16
   818  00F60F  0002               	dw	2
   819  00F611  0010               	dw	16
   820  00F613  0002               	dw	2
   821  00F615  0010               	dw	16
   822  00F617  0004               	dw	4
   823  00F619  0008               	dw	8
   824  00F61B  0008               	dw	8
   825  00F61D  0004               	dw	4
   826  00F61F  00F0               	dw	240
   827  00F621  0003               	dw	3
   828  00F623  0000               	dw	0
   829  00F625  0000               	dw	0
   830  00F627  0009               	dw	9
   831  00F629  0000               	dw	0
   832  00F62B  0000               	dw	0
   833  00F62D  0000               	dw	0
   834  00F62F  0000               	dw	0
   835  00F631  00FE               	dw	254
   836  00F633  001F               	dw	31
   837  00F635  0042               	dw	66
   838  00F637  0010               	dw	16
   839  00F639  0042               	dw	66
   840  00F63B  0010               	dw	16
   841  00F63D  0042               	dw	66
   842  00F63F  0010               	dw	16
   843  00F641  0042               	dw	66
   844  00F643  0010               	dw	16
   845  00F645  0042               	dw	66
   846  00F647  0010               	dw	16
   847  00F649  0000               	dw	0
   848  00F64B  0000               	dw	0
   849  00F64D  0008               	dw	8
   850  00F64F  0000               	dw	0
   851  00F651  0000               	dw	0
   852  00F653  0000               	dw	0
   853  00F655  0000               	dw	0
   854  00F657  00FE               	dw	254
   855  00F659  001F               	dw	31
   856  00F65B  0042               	dw	66
   857  00F65D  0000               	dw	0
   858  00F65F  0042               	dw	66
   859  00F661  0000               	dw	0
   860  00F663  0042               	dw	66
   861  00F665  0000               	dw	0
   862  00F667  0042               	dw	66
   863  00F669  0000               	dw	0
   864  00F66B  0000               	dw	0
   865  00F66D  0000               	dw	0
   866  00F66F  000E               	dw	14
   867  00F671  0000               	dw	0
   868  00F673  0000               	dw	0
   869  00F675  00F0               	dw	240
   870  00F677  0003               	dw	3
   871  00F679  0008               	dw	8
   872  00F67B  0004               	dw	4
   873  00F67D  0004               	dw	4
   874  00F67F  0008               	dw	8
   875  00F681  0002               	dw	2
   876  00F683  0010               	dw	16
   877  00F685  0002               	dw	2
   878  00F687  0010               	dw	16
   879  00F689  0002               	dw	2
   880  00F68B  0010               	dw	16
   881  00F68D  0002               	dw	2
   882  00F68F  0010               	dw	16
   883  00F691  0082               	dw	130
   884  00F693  0010               	dw	16
   885  00F695  0084               	dw	132
   886  00F697  0010               	dw	16
   887  00F699  0084               	dw	132
   888  00F69B  0008               	dw	8
   889  00F69D  0088               	dw	136
   890  00F69F  0004               	dw	4
   891  00F6A1  0080               	dw	128
   892  00F6A3  0003               	dw	3
   893  00F6A5  0000               	dw	0
   894  00F6A7  0000               	dw	0
   895  00F6A9  000A               	dw	10
   896  00F6AB  0000               	dw	0
   897  00F6AD  0000               	dw	0
   898  00F6AF  0000               	dw	0
   899  00F6B1  0000               	dw	0
   900  00F6B3  00FE               	dw	254
   901  00F6B5  001F               	dw	31
   902  00F6B7  0040               	dw	64
   903  00F6B9  0000               	dw	0
   904  00F6BB  0040               	dw	64
   905  00F6BD  0000               	dw	0
   906  00F6BF  0040               	dw	64
   907  00F6C1  0000               	dw	0
   908  00F6C3  0040               	dw	64
   909  00F6C5  0000               	dw	0
   910  00F6C7  0040               	dw	64
   911  00F6C9  0000               	dw	0
   912  00F6CB  00FE               	dw	254
   913  00F6CD  001F               	dw	31
   914  00F6CF  0000               	dw	0
   915  00F6D1  0000               	dw	0
   916  00F6D3  0004               	dw	4
   917  00F6D5  0000               	dw	0
   918  00F6D7  0000               	dw	0
   919  00F6D9  0000               	dw	0
   920  00F6DB  0000               	dw	0
   921  00F6DD  00FE               	dw	254
   922  00F6DF  001F               	dw	31
   923  00F6E1  0000               	dw	0
   924  00F6E3  0000               	dw	0
   925  00F6E5  0007               	dw	7
   926  00F6E7  0000               	dw	0
   927  00F6E9  0000               	dw	0
   928  00F6EB  0000               	dw	0
   929  00F6ED  0008               	dw	8
   930  00F6EF  0000               	dw	0
   931  00F6F1  0010               	dw	16
   932  00F6F3  0000               	dw	0
   933  00F6F5  0010               	dw	16
   934  00F6F7  0000               	dw	0
   935  00F6F9  0008               	dw	8
   936  00F6FB  00FE               	dw	254
   937  00F6FD  0007               	dw	7
   938  00F6FF  0000               	dw	0
   939  00F701  0000               	dw	0
   940  00F703  0009               	dw	9
   941  00F705  0000               	dw	0
   942  00F707  0000               	dw	0
   943  00F709  0000               	dw	0
   944  00F70B  0000               	dw	0
   945  00F70D  00FE               	dw	254
   946  00F70F  001F               	dw	31
   947  00F711  0060               	dw	96
   948  00F713  0000               	dw	0
   949  00F715  0090               	dw	144
   950  00F717  0001               	dw	1
   951  00F719  0008               	dw	8
   952  00F71B  0002               	dw	2
   953  00F71D  0004               	dw	4
   954  00F71F  000C               	dw	12
   955  00F721  0002               	dw	2
   956  00F723  0010               	dw	16
   957  00F725  0000               	dw	0
   958  00F727  0000               	dw	0
   959  00F729  0008               	dw	8
   960  00F72B  0000               	dw	0
   961  00F72D  0000               	dw	0
   962  00F72F  0000               	dw	0
   963  00F731  0000               	dw	0
   964  00F733  00FE               	dw	254
   965  00F735  001F               	dw	31
   966  00F737  0000               	dw	0
   967  00F739  0010               	dw	16
   968  00F73B  0000               	dw	0
   969  00F73D  0010               	dw	16
   970  00F73F  0000               	dw	0
   971  00F741  0010               	dw	16
   972  00F743  0000               	dw	0
   973  00F745  0010               	dw	16
   974  00F747  0000               	dw	0
   975  00F749  0000               	dw	0
   976  00F74B  000F               	dw	15
   977  00F74D  0000               	dw	0
   978  00F74F  0000               	dw	0
   979  00F751  0000               	dw	0
   980  00F753  001C               	dw	28
   981  00F755  00F8               	dw	248
   982  00F757  0003               	dw	3
   983  00F759  0006               	dw	6
   984  00F75B  0000               	dw	0
   985  00F75D  0038               	dw	56
   986  00F75F  0000               	dw	0
   987  00F761  00C0               	dw	192
   988  00F763  0001               	dw	1
   989  00F765  0000               	dw	0
   990  00F767  000E               	dw	14
   991  00F769  0000               	dw	0
   992  00F76B  0010               	dw	16
   993  00F76D  0000               	dw	0
   994  00F76F  000E               	dw	14
   995  00F771  00C0               	dw	192
   996  00F773  0001               	dw	1
   997  00F775  0038               	dw	56
   998  00F777  0000               	dw	0
   999  00F779  0006               	dw	6
  1000  00F77B  0000               	dw	0
  1001  00F77D  00F8               	dw	248
  1002  00F77F  0003               	dw	3
  1003  00F781  0000               	dw	0
  1004  00F783  001C               	dw	28
  1005  00F785  0000               	dw	0
  1006  00F787  0000               	dw	0
  1007  00F789  000B               	dw	11
  1008  00F78B  0000               	dw	0
  1009  00F78D  0000               	dw	0
  1010  00F78F  0000               	dw	0
  1011  00F791  0000               	dw	0
  1012  00F793  00FE               	dw	254
  1013  00F795  001F               	dw	31
  1014  00F797  0008               	dw	8
  1015  00F799  0000               	dw	0
  1016  00F79B  0030               	dw	48
  1017  00F79D  0000               	dw	0
  1018  00F79F  0040               	dw	64
  1019  00F7A1  0000               	dw	0
  1020  00F7A3  0080               	dw	128
  1021  00F7A5  0000               	dw	0
  1022  00F7A7  0000               	dw	0
  1023  00F7A9  0003               	dw	3
  1024  00F7AB  0000               	dw	0
  1025  00F7AD  0004               	dw	4
  1026  00F7AF  00FE               	dw	254
  1027  00F7B1  001F               	dw	31
  1028  00F7B3  0000               	dw	0
  1029  00F7B5  0000               	dw	0
  1030  00F7B7  000E               	dw	14
  1031  00F7B9  0000               	dw	0
  1032  00F7BB  0000               	dw	0
  1033  00F7BD  00F0               	dw	240
  1034  00F7BF  0003               	dw	3
  1035  00F7C1  0008               	dw	8
  1036  00F7C3  0004               	dw	4
  1037  00F7C5  0004               	dw	4
  1038  00F7C7  0008               	dw	8
  1039  00F7C9  0002               	dw	2
  1040  00F7CB  0010               	dw	16
  1041  00F7CD  0002               	dw	2
  1042  00F7CF  0010               	dw	16
  1043  00F7D1  0002               	dw	2
  1044  00F7D3  0010               	dw	16
  1045  00F7D5  0002               	dw	2
  1046  00F7D7  0010               	dw	16
  1047  00F7D9  0002               	dw	2
  1048  00F7DB  0010               	dw	16
  1049  00F7DD  0002               	dw	2
  1050  00F7DF  0010               	dw	16
  1051  00F7E1  0004               	dw	4
  1052  00F7E3  0008               	dw	8
  1053  00F7E5  0008               	dw	8
  1054  00F7E7  0004               	dw	4
  1055  00F7E9  00F0               	dw	240
  1056  00F7EB  0003               	dw	3
  1057  00F7ED  0000               	dw	0
  1058  00F7EF  0000               	dw	0
  1059  00F7F1  0009               	dw	9
  1060  00F7F3  0000               	dw	0
  1061  00F7F5  0000               	dw	0
  1062  00F7F7  0000               	dw	0
  1063  00F7F9  0000               	dw	0
  1064  00F7FB  00FE               	dw	254
  1065  00F7FD  001F               	dw	31
  1066  00F7FF  0042               	dw	66
  1067  00F801  0000               	dw	0
  1068  00F803  0042               	dw	66
  1069  00F805  0000               	dw	0
  1070  00F807  0042               	dw	66
  1071  00F809  0000               	dw	0
  1072  00F80B  0024               	dw	36
  1073  00F80D  0000               	dw	0
  1074  00F80F  0018               	dw	24
  1075  00F811  0000               	dw	0
  1076  00F813  0000               	dw	0
  1077  00F815  0000               	dw	0
  1078  00F817  000E               	dw	14
  1079  00F819  0000               	dw	0
  1080  00F81B  0000               	dw	0
  1081  00F81D  00F0               	dw	240
  1082  00F81F  0003               	dw	3
  1083  00F821  0008               	dw	8
  1084  00F823  0004               	dw	4
  1085  00F825  0004               	dw	4
  1086  00F827  0008               	dw	8
  1087  00F829  0002               	dw	2
  1088  00F82B  0010               	dw	16
  1089  00F82D  0002               	dw	2
  1090  00F82F  0010               	dw	16
  1091  00F831  0002               	dw	2
  1092  00F833  0010               	dw	16
  1093  00F835  0002               	dw	2
  1094  00F837  0011               	dw	17
  1095  00F839  0002               	dw	2
  1096  00F83B  0012               	dw	18
  1097  00F83D  0002               	dw	2
  1098  00F83F  000C               	dw	12
  1099  00F841  0004               	dw	4
  1100  00F843  0008               	dw	8
  1101  00F845  0008               	dw	8
  1102  00F847  0016               	dw	22
  1103  00F849  00F0               	dw	240
  1104  00F84B  0021               	dw	33
  1105  00F84D  0000               	dw	0
  1106  00F84F  0000               	dw	0
  1107  00F851  000A               	dw	10
  1108  00F853  0000               	dw	0
  1109  00F855  0000               	dw	0
  1110  00F857  0000               	dw	0
  1111  00F859  0000               	dw	0
  1112  00F85B  00FE               	dw	254
  1113  00F85D  001F               	dw	31
  1114  00F85F  0042               	dw	66
  1115  00F861  0000               	dw	0
  1116  00F863  00C2               	dw	194
  1117  00F865  0000               	dw	0
  1118  00F867  0042               	dw	66
  1119  00F869  0001               	dw	1
  1120  00F86B  0042               	dw	66
  1121  00F86D  0006               	dw	6
  1122  00F86F  0024               	dw	36
  1123  00F871  0008               	dw	8
  1124  00F873  0018               	dw	24
  1125  00F875  0010               	dw	16
  1126  00F877  0000               	dw	0
  1127  00F879  0000               	dw	0
  1128  00F87B  0008               	dw	8
  1129  00F87D  0000               	dw	0
  1130  00F87F  0004               	dw	4
  1131  00F881  0018               	dw	24
  1132  00F883  0008               	dw	8
  1133  00F885  0024               	dw	36
  1134  00F887  0010               	dw	16
  1135  00F889  0042               	dw	66
  1136  00F88B  0010               	dw	16
  1137  00F88D  0042               	dw	66
  1138  00F88F  0010               	dw	16
  1139  00F891  0084               	dw	132
  1140  00F893  0008               	dw	8
  1141  00F895  0008               	dw	8
  1142  00F897  0007               	dw	7
  1143  00F899  0000               	dw	0
  1144  00F89B  0000               	dw	0
  1145  00F89D  0008               	dw	8
  1146  00F89F  0002               	dw	2
  1147  00F8A1  0000               	dw	0
  1148  00F8A3  0002               	dw	2
  1149  00F8A5  0000               	dw	0
  1150  00F8A7  0002               	dw	2
  1151  00F8A9  0000               	dw	0
  1152  00F8AB  00FE               	dw	254
  1153  00F8AD  001F               	dw	31
  1154  00F8AF  0002               	dw	2
  1155  00F8B1  0000               	dw	0
  1156  00F8B3  0002               	dw	2
  1157  00F8B5  0000               	dw	0
  1158  00F8B7  0002               	dw	2
  1159  00F8B9  0000               	dw	0
  1160  00F8BB  0000               	dw	0
  1161  00F8BD  0000               	dw	0
  1162  00F8BF  000A               	dw	10
  1163  00F8C1  0000               	dw	0
  1164  00F8C3  0000               	dw	0
  1165  00F8C5  0000               	dw	0
  1166  00F8C7  0000               	dw	0
  1167  00F8C9  00FE               	dw	254
  1168  00F8CB  0007               	dw	7
  1169  00F8CD  0000               	dw	0
  1170  00F8CF  0008               	dw	8
  1171  00F8D1  0000               	dw	0
  1172  00F8D3  0010               	dw	16
  1173  00F8D5  0000               	dw	0
  1174  00F8D7  0010               	dw	16
  1175  00F8D9  0000               	dw	0
  1176  00F8DB  0010               	dw	16
  1177  00F8DD  0000               	dw	0
  1178  00F8DF  0008               	dw	8
  1179  00F8E1  00FE               	dw	254
  1180  00F8E3  0007               	dw	7
  1181  00F8E5  0000               	dw	0
  1182  00F8E7  0000               	dw	0
  1183  00F8E9  000C               	dw	12
  1184  00F8EB  0002               	dw	2
  1185  00F8ED  0000               	dw	0
  1186  00F8EF  001C               	dw	28
  1187  00F8F1  0000               	dw	0
  1188  00F8F3  0060               	dw	96
  1189  00F8F5  0000               	dw	0
  1190  00F8F7  0080               	dw	128
  1191  00F8F9  0001               	dw	1
  1192  00F8FB  0000               	dw	0
  1193  00F8FD  000E               	dw	14
  1194  00F8FF  0000               	dw	0
  1195  00F901  0010               	dw	16
  1196  00F903  0000               	dw	0
  1197  00F905  000E               	dw	14
  1198  00F907  0080               	dw	128
  1199  00F909  0001               	dw	1
  1200  00F90B  0060               	dw	96
  1201  00F90D  0000               	dw	0
  1202  00F90F  001C               	dw	28
  1203  00F911  0000               	dw	0
  1204  00F913  0002               	dw	2
  1205  00F915  0000               	dw	0
  1206  00F917  0000               	dw	0
  1207  00F919  0000               	dw	0
  1208  00F91B  000F               	dw	15
  1209  00F91D  0000               	dw	0
  1210  00F91F  0000               	dw	0
  1211  00F921  0006               	dw	6
  1212  00F923  0000               	dw	0
  1213  00F925  0078               	dw	120
  1214  00F927  0000               	dw	0
  1215  00F929  0080               	dw	128
  1216  00F92B  0007               	dw	7
  1217  00F92D  0000               	dw	0
  1218  00F92F  0018               	dw	24
  1219  00F931  0080               	dw	128
  1220  00F933  0007               	dw	7
  1221  00F935  0078               	dw	120
  1222  00F937  0000               	dw	0
  1223  00F939  0006               	dw	6
  1224  00F93B  0000               	dw	0
  1225  00F93D  0078               	dw	120
  1226  00F93F  0000               	dw	0
  1227  00F941  0080               	dw	128
  1228  00F943  0007               	dw	7
  1229  00F945  0000               	dw	0
  1230  00F947  0018               	dw	24
  1231  00F949  0080               	dw	128
  1232  00F94B  0007               	dw	7
  1233  00F94D  0078               	dw	120
  1234  00F94F  0000               	dw	0
  1235  00F951  0006               	dw	6
  1236  00F953  0000               	dw	0
  1237  00F955  0000               	dw	0
  1238  00F957  0000               	dw	0
  1239  00F959  0009               	dw	9
  1240  00F95B  0000               	dw	0
  1241  00F95D  0000               	dw	0
  1242  00F95F  0006               	dw	6
  1243  00F961  0018               	dw	24
  1244  00F963  0008               	dw	8
  1245  00F965  0004               	dw	4
  1246  00F967  0030               	dw	48
  1247  00F969  0003               	dw	3
  1248  00F96B  00C0               	dw	192
  1249  00F96D  0000               	dw	0
  1250  00F96F  0030               	dw	48
  1251  00F971  0003               	dw	3
  1252  00F973  0008               	dw	8
  1253  00F975  0004               	dw	4
  1254  00F977  0006               	dw	6
  1255  00F979  0018               	dw	24
  1256  00F97B  0000               	dw	0
  1257  00F97D  0000               	dw	0
  1258  00F97F  000B               	dw	11
  1259  00F981  0000               	dw	0
  1260  00F983  0000               	dw	0
  1261  00F985  0002               	dw	2
  1262  00F987  0000               	dw	0
  1263  00F989  0004               	dw	4
  1264  00F98B  0000               	dw	0
  1265  00F98D  0018               	dw	24
  1266  00F98F  0000               	dw	0
  1267  00F991  0060               	dw	96
  1268  00F993  0000               	dw	0
  1269  00F995  0080               	dw	128
  1270  00F997  001F               	dw	31
  1271  00F999  0060               	dw	96
  1272  00F99B  0000               	dw	0
  1273  00F99D  0018               	dw	24
  1274  00F99F  0000               	dw	0
  1275  00F9A1  0004               	dw	4
  1276  00F9A3  0000               	dw	0
  1277  00F9A5  0002               	dw	2
  1278  00F9A7  0000               	dw	0
  1279  00F9A9  0000               	dw	0
  1280  00F9AB  0000               	dw	0
  1281  00F9AD  0008               	dw	8
  1282  00F9AF  0002               	dw	2
  1283  00F9B1  0010               	dw	16
  1284  00F9B3  0002               	dw	2
  1285  00F9B5  001C               	dw	28
  1286  00F9B7  0002               	dw	2
  1287  00F9B9  0013               	dw	19
  1288  00F9BB  00C2               	dw	194
  1289  00F9BD  0010               	dw	16
  1290  00F9BF  0032               	dw	50
  1291  00F9C1  0010               	dw	16
  1292  00F9C3  000E               	dw	14
  1293  00F9C5  0010               	dw	16
  1294  00F9C7  0002               	dw	2
  1295  00F9C9  0010               	dw	16
  1296  00F9CB  0000               	dw	0
  1297  00F9CD  0000               	dw	0
  1298  00F9CF  0006               	dw	6
  1299  00F9D1  0000               	dw	0
  1300  00F9D3  0000               	dw	0
  1301  00F9D5  0000               	dw	0
  1302  00F9D7  0000               	dw	0
  1303  00F9D9  00FE               	dw	254
  1304  00F9DB  00FF               	dw	255
  1305  00F9DD  0002               	dw	2
  1306  00F9DF  0080               	dw	128
  1307  00F9E1  0002               	dw	2
  1308  00F9E3  0080               	dw	128
  1309  00F9E5  0000               	dw	0
  1310  00F9E7  0000               	dw	0
  1311  00F9E9  000A               	dw	10
  1312  00F9EB  0002               	dw	2
  1313  00F9ED  0000               	dw	0
  1314  00F9EF  000C               	dw	12
  1315  00F9F1  0000               	dw	0
  1316  00F9F3  0010               	dw	16
  1317  00F9F5  0000               	dw	0
  1318  00F9F7  0060               	dw	96
  1319  00F9F9  0000               	dw	0
  1320  00F9FB  0080               	dw	128
  1321  00F9FD  0001               	dw	1
  1322  00F9FF  0000               	dw	0
  1323  00FA01  0006               	dw	6
  1324  00FA03  0000               	dw	0
  1325  00FA05  0008               	dw	8
  1326  00FA07  0000               	dw	0
  1327  00FA09  0030               	dw	48
  1328  00FA0B  0000               	dw	0
  1329  00FA0D  0040               	dw	64
  1330  00FA0F  0000               	dw	0
  1331  00FA11  0000               	dw	0
  1332  00FA13  0005               	dw	5
  1333  00FA15  0000               	dw	0
  1334  00FA17  0000               	dw	0
  1335  00FA19  0002               	dw	2
  1336  00FA1B  0080               	dw	128
  1337  00FA1D  0002               	dw	2
  1338  00FA1F  0080               	dw	128
  1339  00FA21  00FE               	dw	254
  1340  00FA23  00FF               	dw	255
  1341  00FA25  0000               	dw	0
  1342  00FA27  0000               	dw	0
  1343  00FA29  000B               	dw	11
  1344  00FA2B  0000               	dw	0
  1345  00FA2D  0000               	dw	0
  1346  00FA2F  0000               	dw	0
  1347  00FA31  0002               	dw	2
  1348  00FA33  0080               	dw	128
  1349  00FA35  0001               	dw	1
  1350  00FA37  0070               	dw	112
  1351  00FA39  0000               	dw	0
  1352  00FA3B  000C               	dw	12
  1353  00FA3D  0000               	dw	0
  1354  00FA3F  0002               	dw	2
  1355  00FA41  0000               	dw	0
  1356  00FA43  000C               	dw	12
  1357  00FA45  0000               	dw	0
  1358  00FA47  0070               	dw	112
  1359  00FA49  0000               	dw	0
  1360  00FA4B  0080               	dw	128
  1361  00FA4D  0001               	dw	1
  1362  00FA4F  0000               	dw	0
  1363  00FA51  0002               	dw	2
  1364  00FA53  0000               	dw	0
  1365  00FA55  0000               	dw	0
  1366  00FA57  0009               	dw	9
  1367  00FA59  0000               	dw	0
  1368  00FA5B  0040               	dw	64
  1369  00FA5D  0000               	dw	0
  1370  00FA5F  0040               	dw	64
  1371  00FA61  0000               	dw	0
  1372  00FA63  0040               	dw	64
  1373  00FA65  0000               	dw	0
  1374  00FA67  0040               	dw	64
  1375  00FA69  0000               	dw	0
  1376  00FA6B  0040               	dw	64
  1377  00FA6D  0000               	dw	0
  1378  00FA6F  0040               	dw	64
  1379  00FA71  0000               	dw	0
  1380  00FA73  0040               	dw	64
  1381  00FA75  0000               	dw	0
  1382  00FA77  0040               	dw	64
  1383  00FA79  0000               	dw	0
  1384  00FA7B  0000               	dw	0
  1385  00FA7D  0005               	dw	5
  1386  00FA7F  0000               	dw	0
  1387  00FA81  0000               	dw	0
  1388  00FA83  0000               	dw	0
  1389  00FA85  0000               	dw	0
  1390  00FA87  0002               	dw	2
  1391  00FA89  0000               	dw	0
  1392  00FA8B  0004               	dw	4
  1393  00FA8D  0000               	dw	0
  1394  00FA8F  0000               	dw	0
  1395  00FA91  0000               	dw	0
  1396  00FA93  000B               	dw	11
  1397  00FA95  0000               	dw	0
  1398  00FA97  0000               	dw	0
  1399  00FA99  00C0               	dw	192
  1400  00FA9B  0007               	dw	7
  1401  00FA9D  0020               	dw	32
  1402  00FA9F  0008               	dw	8
  1403  00FAA1  0010               	dw	16
  1404  00FAA3  0010               	dw	16
  1405  00FAA5  0010               	dw	16
  1406  00FAA7  0010               	dw	16
  1407  00FAA9  0010               	dw	16
  1408  00FAAB  0010               	dw	16
  1409  00FAAD  0010               	dw	16
  1410  00FAAF  0010               	dw	16
  1411  00FAB1  0010               	dw	16
  1412  00FAB3  0010               	dw	16
  1413  00FAB5  0020               	dw	32
  1414  00FAB7  0008               	dw	8
  1415  00FAB9  00F0               	dw	240
  1416  00FABB  001F               	dw	31
  1417  00FABD  0000               	dw	0
  1418  00FABF  0000               	dw	0
  1419  00FAC1  000B               	dw	11
  1420  00FAC3  0000               	dw	0
  1421  00FAC5  0000               	dw	0
  1422  00FAC7  00FE               	dw	254
  1423  00FAC9  001F               	dw	31
  1424  00FACB  0020               	dw	32
  1425  00FACD  0008               	dw	8
  1426  00FACF  0010               	dw	16
  1427  00FAD1  0010               	dw	16
  1428  00FAD3  0010               	dw	16
  1429  00FAD5  0010               	dw	16
  1430  00FAD7  0010               	dw	16
  1431  00FAD9  0010               	dw	16
  1432  00FADB  0010               	dw	16
  1433  00FADD  0010               	dw	16
  1434  00FADF  0010               	dw	16
  1435  00FAE1  0010               	dw	16
  1436  00FAE3  0020               	dw	32
  1437  00FAE5  0008               	dw	8
  1438  00FAE7  00C0               	dw	192
  1439  00FAE9  0007               	dw	7
  1440  00FAEB  0000               	dw	0
  1441  00FAED  0000               	dw	0
  1442  00FAEF  000A               	dw	10
  1443  00FAF1  0000               	dw	0
  1444  00FAF3  0000               	dw	0
  1445  00FAF5  00C0               	dw	192
  1446  00FAF7  0007               	dw	7
  1447  00FAF9  0020               	dw	32
  1448  00FAFB  0008               	dw	8
  1449  00FAFD  0010               	dw	16
  1450  00FAFF  0010               	dw	16
  1451  00FB01  0010               	dw	16
  1452  00FB03  0010               	dw	16
  1453  00FB05  0010               	dw	16
  1454  00FB07  0010               	dw	16
  1455  00FB09  0010               	dw	16
  1456  00FB0B  0010               	dw	16
  1457  00FB0D  0020               	dw	32
  1458  00FB0F  0008               	dw	8
  1459  00FB11  0040               	dw	64
  1460  00FB13  0004               	dw	4
  1461  00FB15  0000               	dw	0
  1462  00FB17  0000               	dw	0
  1463  00FB19  000B               	dw	11
  1464  00FB1B  0000               	dw	0
  1465  00FB1D  0000               	dw	0
  1466  00FB1F  00C0               	dw	192
  1467  00FB21  0007               	dw	7
  1468  00FB23  0020               	dw	32
  1469  00FB25  0008               	dw	8
  1470  00FB27  0010               	dw	16
  1471  00FB29  0010               	dw	16
  1472  00FB2B  0010               	dw	16
  1473  00FB2D  0010               	dw	16
  1474  00FB2F  0010               	dw	16
  1475  00FB31  0010               	dw	16
  1476  00FB33  0010               	dw	16
  1477  00FB35  0010               	dw	16
  1478  00FB37  0010               	dw	16
  1479  00FB39  0010               	dw	16
  1480  00FB3B  0020               	dw	32
  1481  00FB3D  0008               	dw	8
  1482  00FB3F  00FE               	dw	254
  1483  00FB41  001F               	dw	31
  1484  00FB43  0000               	dw	0
  1485  00FB45  0000               	dw	0
  1486  00FB47  000A               	dw	10
  1487  00FB49  0000               	dw	0
  1488  00FB4B  0000               	dw	0
  1489  00FB4D  00C0               	dw	192
  1490  00FB4F  0007               	dw	7
  1491  00FB51  0020               	dw	32
  1492  00FB53  0009               	dw	9
  1493  00FB55  0010               	dw	16
  1494  00FB57  0011               	dw	17
  1495  00FB59  0010               	dw	16
  1496  00FB5B  0011               	dw	17
  1497  00FB5D  0010               	dw	16
  1498  00FB5F  0011               	dw	17
  1499  00FB61  0010               	dw	16
  1500  00FB63  0011               	dw	17
  1501  00FB65  0020               	dw	32
  1502  00FB67  0009               	dw	9
  1503  00FB69  00C0               	dw	192
  1504  00FB6B  0005               	dw	5
  1505  00FB6D  0000               	dw	0
  1506  00FB6F  0000               	dw	0
  1507  00FB71  0006               	dw	6
  1508  00FB73  0000               	dw	0
  1509  00FB75  0000               	dw	0
  1510  00FB77  0010               	dw	16
  1511  00FB79  0000               	dw	0
  1512  00FB7B  00FC               	dw	252
  1513  00FB7D  001F               	dw	31
  1514  00FB7F  0012               	dw	18
  1515  00FB81  0000               	dw	0
  1516  00FB83  0012               	dw	18
  1517  00FB85  0000               	dw	0
  1518  00FB87  0000               	dw	0
  1519  00FB89  0000               	dw	0
  1520  00FB8B  000B               	dw	11
  1521  00FB8D  0000               	dw	0
  1522  00FB8F  0000               	dw	0
  1523  00FB91  00C0               	dw	192
  1524  00FB93  0027               	dw	39
  1525  00FB95  0020               	dw	32
  1526  00FB97  0048               	dw	72
  1527  00FB99  0010               	dw	16
  1528  00FB9B  0090               	dw	144
  1529  00FB9D  0010               	dw	16
  1530  00FB9F  0090               	dw	144
  1531  00FBA1  0010               	dw	16
  1532  00FBA3  0090               	dw	144
  1533  00FBA5  0010               	dw	16
  1534  00FBA7  0090               	dw	144
  1535  00FBA9  0010               	dw	16
  1536  00FBAB  0090               	dw	144
  1537  00FBAD  0020               	dw	32
  1538  00FBAF  0048               	dw	72
  1539  00FBB1  00F0               	dw	240
  1540  00FBB3  003F               	dw	63
  1541  00FBB5  0000               	dw	0
  1542  00FBB7  0000               	dw	0
  1543  00FBB9  000A               	dw	10
  1544  00FBBB  0000               	dw	0
  1545  00FBBD  0000               	dw	0
  1546  00FBBF  00FE               	dw	254
  1547  00FBC1  001F               	dw	31
  1548  00FBC3  0020               	dw	32
  1549  00FBC5  0000               	dw	0
  1550  00FBC7  0010               	dw	16
  1551  00FBC9  0000               	dw	0
  1552  00FBCB  0010               	dw	16
  1553  00FBCD  0000               	dw	0
  1554  00FBCF  0010               	dw	16
  1555  00FBD1  0000               	dw	0
  1556  00FBD3  0010               	dw	16
  1557  00FBD5  0000               	dw	0
  1558  00FBD7  0020               	dw	32
  1559  00FBD9  0000               	dw	0
  1560  00FBDB  00C0               	dw	192
  1561  00FBDD  001F               	dw	31
  1562  00FBDF  0000               	dw	0
  1563  00FBE1  0000               	dw	0
  1564  00FBE3  0003               	dw	3
  1565  00FBE5  0000               	dw	0
  1566  00FBE7  0000               	dw	0
  1567  00FBE9  00F6               	dw	246
  1568  00FBEB  001F               	dw	31
  1569  00FBED  0000               	dw	0
  1570  00FBEF  0000               	dw	0
  1571  00FBF1  0003               	dw	3
  1572  00FBF3  0000               	dw	0
  1573  00FBF5  0080               	dw	128
  1574  00FBF7  00F6               	dw	246
  1575  00FBF9  007F               	dw	127
  1576  00FBFB  0000               	dw	0
  1577  00FBFD  0000               	dw	0
  1578  00FBFF  0008               	dw	8
  1579  00FC01  0000               	dw	0
  1580  00FC03  0000               	dw	0
  1581  00FC05  00FE               	dw	254
  1582  00FC07  001F               	dw	31
  1583  00FC09  0000               	dw	0
  1584  00FC0B  0001               	dw	1
  1585  00FC0D  0080               	dw	128
  1586  00FC0F  0002               	dw	2
  1587  00FC11  0040               	dw	64
  1588  00FC13  0004               	dw	4
  1589  00FC15  0020               	dw	32
  1590  00FC17  0008               	dw	8
  1591  00FC19  0010               	dw	16
  1592  00FC1B  0010               	dw	16
  1593  00FC1D  0000               	dw	0
  1594  00FC1F  0000               	dw	0
  1595  00FC21  0003               	dw	3
  1596  00FC23  0000               	dw	0
  1597  00FC25  0000               	dw	0
  1598  00FC27  00FE               	dw	254
  1599  00FC29  001F               	dw	31
  1600  00FC2B  0000               	dw	0
  1601  00FC2D  0000               	dw	0
  1602  00FC2F  000F               	dw	15
  1603  00FC31  0000               	dw	0
  1604  00FC33  0000               	dw	0
  1605  00FC35  00F0               	dw	240
  1606  00FC37  001F               	dw	31
  1607  00FC39  0020               	dw	32
  1608  00FC3B  0000               	dw	0
  1609  00FC3D  0010               	dw	16
  1610  00FC3F  0000               	dw	0
  1611  00FC41  0010               	dw	16
  1612  00FC43  0000               	dw	0
  1613  00FC45  0010               	dw	16
  1614  00FC47  0000               	dw	0
  1615  00FC49  0020               	dw	32
  1616  00FC4B  0000               	dw	0
  1617  00FC4D  00C0               	dw	192
  1618  00FC4F  001F               	dw	31
  1619  00FC51  0020               	dw	32
  1620  00FC53  0000               	dw	0
  1621  00FC55  0010               	dw	16
  1622  00FC57  0000               	dw	0
  1623  00FC59  0010               	dw	16
  1624  00FC5B  0000               	dw	0
  1625  00FC5D  0010               	dw	16
  1626  00FC5F  0000               	dw	0
  1627  00FC61  0020               	dw	32
  1628  00FC63  0000               	dw	0
  1629  00FC65  00C0               	dw	192
  1630  00FC67  001F               	dw	31
  1631  00FC69  0000               	dw	0
  1632  00FC6B  0000               	dw	0
  1633  00FC6D  000A               	dw	10
  1634  00FC6F  0000               	dw	0
  1635  00FC71  0000               	dw	0
  1636  00FC73  00F0               	dw	240
  1637  00FC75  001F               	dw	31
  1638  00FC77  0020               	dw	32
  1639  00FC79  0000               	dw	0
  1640  00FC7B  0010               	dw	16
  1641  00FC7D  0000               	dw	0
  1642  00FC7F  0010               	dw	16
  1643  00FC81  0000               	dw	0
  1644  00FC83  0010               	dw	16
  1645  00FC85  0000               	dw	0
  1646  00FC87  0010               	dw	16
  1647  00FC89  0000               	dw	0
  1648  00FC8B  0020               	dw	32
  1649  00FC8D  0000               	dw	0
  1650  00FC8F  00C0               	dw	192
  1651  00FC91  001F               	dw	31
  1652  00FC93  0000               	dw	0
  1653  00FC95  0000               	dw	0
  1654  00FC97  000A               	dw	10
  1655  00FC99  0000               	dw	0
  1656  00FC9B  0000               	dw	0
  1657  00FC9D  00C0               	dw	192
  1658  00FC9F  0007               	dw	7
  1659  00FCA1  0020               	dw	32
  1660  00FCA3  0008               	dw	8
  1661  00FCA5  0010               	dw	16
  1662  00FCA7  0010               	dw	16
  1663  00FCA9  0010               	dw	16
  1664  00FCAB  0010               	dw	16
  1665  00FCAD  0010               	dw	16
  1666  00FCAF  0010               	dw	16
  1667  00FCB1  0010               	dw	16
  1668  00FCB3  0010               	dw	16
  1669  00FCB5  0020               	dw	32
  1670  00FCB7  0008               	dw	8
  1671  00FCB9  00C0               	dw	192
  1672  00FCBB  0007               	dw	7
  1673  00FCBD  0000               	dw	0
  1674  00FCBF  0000               	dw	0
  1675  00FCC1  000B               	dw	11
  1676  00FCC3  0000               	dw	0
  1677  00FCC5  0000               	dw	0
  1678  00FCC7  00F0               	dw	240
  1679  00FCC9  00FF               	dw	255
  1680  00FCCB  0020               	dw	32
  1681  00FCCD  0008               	dw	8
  1682  00FCCF  0010               	dw	16
  1683  00FCD1  0010               	dw	16
  1684  00FCD3  0010               	dw	16
  1685  00FCD5  0010               	dw	16
  1686  00FCD7  0010               	dw	16
  1687  00FCD9  0010               	dw	16
  1688  00FCDB  0010               	dw	16
  1689  00FCDD  0010               	dw	16
  1690  00FCDF  0010               	dw	16
  1691  00FCE1  0010               	dw	16
  1692  00FCE3  0020               	dw	32
  1693  00FCE5  0008               	dw	8
  1694  00FCE7  00C0               	dw	192
  1695  00FCE9  0007               	dw	7
  1696  00FCEB  0000               	dw	0
  1697  00FCED  0000               	dw	0
  1698  00FCEF  000B               	dw	11
  1699  00FCF1  0000               	dw	0
  1700  00FCF3  0000               	dw	0
  1701  00FCF5  00C0               	dw	192
  1702  00FCF7  0007               	dw	7
  1703  00FCF9  0020               	dw	32
  1704  00FCFB  0008               	dw	8
  1705  00FCFD  0010               	dw	16
  1706  00FCFF  0010               	dw	16
  1707  00FD01  0010               	dw	16
  1708  00FD03  0010               	dw	16
  1709  00FD05  0010               	dw	16
  1710  00FD07  0010               	dw	16
  1711  00FD09  0010               	dw	16
  1712  00FD0B  0010               	dw	16
  1713  00FD0D  0010               	dw	16
  1714  00FD0F  0010               	dw	16
  1715  00FD11  0020               	dw	32
  1716  00FD13  0008               	dw	8
  1717  00FD15  00F0               	dw	240
  1718  00FD17  00FF               	dw	255
  1719  00FD19  0000               	dw	0
  1720  00FD1B  0000               	dw	0
  1721  00FD1D  0006               	dw	6
  1722  00FD1F  0000               	dw	0
  1723  00FD21  0000               	dw	0
  1724  00FD23  00F0               	dw	240
  1725  00FD25  001F               	dw	31
  1726  00FD27  0020               	dw	32
  1727  00FD29  0000               	dw	0
  1728  00FD2B  0010               	dw	16
  1729  00FD2D  0000               	dw	0
  1730  00FD2F  0010               	dw	16
  1731  00FD31  0000               	dw	0
  1732  00FD33  0000               	dw	0
  1733  00FD35  0000               	dw	0
  1734  00FD37  0006               	dw	6
  1735  00FD39  0060               	dw	96
  1736  00FD3B  0008               	dw	8
  1737  00FD3D  0090               	dw	144
  1738  00FD3F  0010               	dw	16
  1739  00FD41  0010               	dw	16
  1740  00FD43  0011               	dw	17
  1741  00FD45  0010               	dw	16
  1742  00FD47  0011               	dw	17
  1743  00FD49  0020               	dw	32
  1744  00FD4B  000E               	dw	14
  1745  00FD4D  0000               	dw	0
  1746  00FD4F  0000               	dw	0
  1747  00FD51  0007               	dw	7
  1748  00FD53  0000               	dw	0
  1749  00FD55  0000               	dw	0
  1750  00FD57  0010               	dw	16
  1751  00FD59  0000               	dw	0
  1752  00FD5B  0010               	dw	16
  1753  00FD5D  0000               	dw	0
  1754  00FD5F  00FE               	dw	254
  1755  00FD61  001F               	dw	31
  1756  00FD63  0010               	dw	16
  1757  00FD65  0000               	dw	0
  1758  00FD67  0010               	dw	16
  1759  00FD69  0000               	dw	0
  1760  00FD6B  0000               	dw	0
  1761  00FD6D  0000               	dw	0
  1762  00FD6F  000A               	dw	10
  1763  00FD71  0000               	dw	0
  1764  00FD73  0000               	dw	0
  1765  00FD75  00F0               	dw	240
  1766  00FD77  0007               	dw	7
  1767  00FD79  0000               	dw	0
  1768  00FD7B  0008               	dw	8
  1769  00FD7D  0000               	dw	0
  1770  00FD7F  0010               	dw	16
  1771  00FD81  0000               	dw	0
  1772  00FD83  0010               	dw	16
  1773  00FD85  0000               	dw	0
  1774  00FD87  0010               	dw	16
  1775  00FD89  0000               	dw	0
  1776  00FD8B  0010               	dw	16
  1777  00FD8D  0000               	dw	0
  1778  00FD8F  0008               	dw	8
  1779  00FD91  00F0               	dw	240
  1780  00FD93  0007               	dw	7
  1781  00FD95  0000               	dw	0
  1782  00FD97  0000               	dw	0
  1783  00FD99  000A               	dw	10
  1784  00FD9B  0010               	dw	16
  1785  00FD9D  0000               	dw	0
  1786  00FD9F  0060               	dw	96
  1787  00FDA1  0000               	dw	0
  1788  00FDA3  0080               	dw	128
  1789  00FDA5  0003               	dw	3
  1790  00FDA7  0000               	dw	0
  1791  00FDA9  000C               	dw	12
  1792  00FDAB  0000               	dw	0
  1793  00FDAD  0010               	dw	16
  1794  00FDAF  0000               	dw	0
  1795  00FDB1  000C               	dw	12
  1796  00FDB3  0080               	dw	128
  1797  00FDB5  0003               	dw	3
  1798  00FDB7  0060               	dw	96
  1799  00FDB9  0000               	dw	0
  1800  00FDBB  0010               	dw	16
  1801  00FDBD  0000               	dw	0
  1802  00FDBF  0000               	dw	0
  1803  00FDC1  0000               	dw	0
  1804  00FDC3  000E               	dw	14
  1805  00FDC5  0010               	dw	16
  1806  00FDC7  0000               	dw	0
  1807  00FDC9  00E0               	dw	224
  1808  00FDCB  0000               	dw	0
  1809  00FDCD  0000               	dw	0
  1810  00FDCF  0007               	dw	7
  1811  00FDD1  0000               	dw	0
  1812  00FDD3  0018               	dw	24
  1813  00FDD5  0000               	dw	0
  1814  00FDD7  0007               	dw	7
  1815  00FDD9  00E0               	dw	224
  1816  00FDDB  0000               	dw	0
  1817  00FDDD  0010               	dw	16
  1818  00FDDF  0000               	dw	0
  1819  00FDE1  00E0               	dw	224
  1820  00FDE3  0000               	dw	0
  1821  00FDE5  0000               	dw	0
  1822  00FDE7  0007               	dw	7
  1823  00FDE9  0000               	dw	0
  1824  00FDEB  0018               	dw	24
  1825  00FDED  0000               	dw	0
  1826  00FDEF  0007               	dw	7
  1827  00FDF1  00E0               	dw	224
  1828  00FDF3  0000               	dw	0
  1829  00FDF5  0010               	dw	16
  1830  00FDF7  0000               	dw	0
  1831  00FDF9  0000               	dw	0
  1832  00FDFB  0000               	dw	0
  1833  00FDFD  0009               	dw	9
  1834  00FDFF  0010               	dw	16
  1835  00FE01  0010               	dw	16
  1836  00FE03  0020               	dw	32
  1837  00FE05  0008               	dw	8
  1838  00FE07  0040               	dw	64
  1839  00FE09  0004               	dw	4
  1840  00FE0B  0080               	dw	128
  1841  00FE0D  0003               	dw	3
  1842  00FE0F  0080               	dw	128
  1843  00FE11  0003               	dw	3
  1844  00FE13  0040               	dw	64
  1845  00FE15  0004               	dw	4
  1846  00FE17  0020               	dw	32
  1847  00FE19  0008               	dw	8
  1848  00FE1B  0010               	dw	16
  1849  00FE1D  0010               	dw	16
  1850  00FE1F  0000               	dw	0
  1851  00FE21  0000               	dw	0
  1852  00FE23  0009               	dw	9
  1853  00FE25  0010               	dw	16
  1854  00FE27  0000               	dw	0
  1855  00FE29  00E0               	dw	224
  1856  00FE2B  0000               	dw	0
  1857  00FE2D  0000               	dw	0
  1858  00FE2F  0083               	dw	131
  1859  00FE31  0000               	dw	0
  1860  00FE33  007C               	dw	124
  1861  00FE35  0000               	dw	0
  1862  00FE37  000C               	dw	12
  1863  00FE39  0000               	dw	0
  1864  00FE3B  0003               	dw	3
  1865  00FE3D  00E0               	dw	224
  1866  00FE3F  0000               	dw	0
  1867  00FE41  0010               	dw	16
  1868  00FE43  0000               	dw	0
  1869  00FE45  0000               	dw	0
  1870  00FE47  0000               	dw	0
  1871  00FE49  0008               	dw	8
  1872  00FE4B  0010               	dw	16
  1873  00FE4D  0010               	dw	16
  1874  00FE4F  0010               	dw	16
  1875  00FE51  0018               	dw	24
  1876  00FE53  0010               	dw	16
  1877  00FE55  0016               	dw	22
  1878  00FE57  0010               	dw	16
  1879  00FE59  0011               	dw	17
  1880  00FE5B  00D0               	dw	208
  1881  00FE5D  0010               	dw	16
  1882  00FE5F  0030               	dw	48
  1883  00FE61  0010               	dw	16
  1884  00FE63  0010               	dw	16
  1885  00FE65  0010               	dw	16
  1886  00FE67  0000               	dw	0
  1887  00FE69  0000               	dw	0
  1888  00FE6B  0007               	dw	7
  1889  00FE6D  0000               	dw	0
  1890  00FE6F  0000               	dw	0
  1891  00FE71  0000               	dw	0
  1892  00FE73  0001               	dw	1
  1893  00FE75  0080               	dw	128
  1894  00FE77  0002               	dw	2
  1895  00FE79  00FC               	dw	252
  1896  00FE7B  007E               	dw	126
  1897  00FE7D  0002               	dw	2
  1898  00FE7F  0080               	dw	128
  1899  00FE81  0002               	dw	2
  1900  00FE83  0080               	dw	128
  1901  00FE85  0000               	dw	0
  1902  00FE87  0000               	dw	0
  1903  00FE89  0007               	dw	7
  1904  00FE8B  0000               	dw	0
  1905  00FE8D  0000               	dw	0
  1906  00FE8F  0000               	dw	0
  1907  00FE91  0000               	dw	0
  1908  00FE93  0000               	dw	0
  1909  00FE95  0000               	dw	0
  1910  00FE97  0000               	dw	0
  1911  00FE99  0000               	dw	0
  1912  00FE9B  0000               	dw	0
  1913  00FE9D  0000               	dw	0
  1914  00FE9F  00FE               	dw	254
  1915  00FEA1  00FF               	dw	255
  1916  00FEA3  0000               	dw	0
  1917  00FEA5  0000               	dw	0
  1918  00FEA7  0006               	dw	6
  1919  00FEA9  0002               	dw	2
  1920  00FEAB  0080               	dw	128
  1921  00FEAD  0002               	dw	2
  1922  00FEAF  0080               	dw	128
  1923  00FEB1  00FC               	dw	252
  1924  00FEB3  007E               	dw	126
  1925  00FEB5  0080               	dw	128
  1926  00FEB7  0002               	dw	2
  1927  00FEB9  0000               	dw	0
  1928  00FEBB  0001               	dw	1
  1929  00FEBD  0000               	dw	0
  1930  00FEBF  0000               	dw	0
  1931  00FEC1  000A               	dw	10
  1932  00FEC3  0000               	dw	0
  1933  00FEC5  0000               	dw	0
  1934  00FEC7  0080               	dw	128
  1935  00FEC9  0000               	dw	0
  1936  00FECB  0040               	dw	64
  1937  00FECD  0000               	dw	0
  1938  00FECF  0040               	dw	64
  1939  00FED1  0000               	dw	0
  1940  00FED3  0040               	dw	64
  1941  00FED5  0000               	dw	0
  1942  00FED7  0080               	dw	128
  1943  00FED9  0000               	dw	0
  1944  00FEDB  0080               	dw	128
  1945  00FEDD  0000               	dw	0
  1946  00FEDF  0080               	dw	128
  1947  00FEE1  0000               	dw	0
  1948  00FEE3  0040               	dw	64
  1949  00FEE5  0000               	dw	0
  1950  00FEE7  0000               	dw	0
  1951  00FEE9  0000               	dw	0
  1952  00FEEB  0005               	dw	5
  1953  00FEED  00FF               	dw	255
  1954  00FEEF  000F               	dw	15
  1955  00FEF1  0001               	dw	1
  1956  00FEF3  0008               	dw	8
  1957  00FEF5  0001               	dw	1
  1958  00FEF7  0008               	dw	8
  1959  00FEF9  00FF               	dw	255
  1960  00FEFB  000F               	dw	15
  1961  00FEFD  0000               	dw	0
  1962  00FEFF  0000               	dw	0
  1963  00FF01                     __end_of_font:
  1964                           	opt callstack 0
  1965  00FF01                     _spi_configuration:
  1966                           	opt callstack 0
  1967  00FF01  00                 	db	0
  1968  00FF02  40                 	db	64
  1969  00FF03  01                 	db	1
  1970  00FF04  00                 	db	0
  1971  00FF05                     __end_of_spi_configuration:
  1972                           	opt callstack 0
  1973  00FF05                     STR_8:
  1974  00FF05  0A                 	db	10
  1975  00FF06  0A                 	db	10
  1976  00FF07  0D                 	db	13
  1977  00FF08  54                 	db	84	;'T'
  1978  00FF09  55                 	db	85	;'U'
  1979  00FF0A  52                 	db	82	;'R'
  1980  00FF0B  4E                 	db	78	;'N'
  1981  00FF0C  20                 	db	32
  1982  00FF0D  56                 	db	86	;'V'
  1983  00FF0E  41                 	db	65	;'A'
  1984  00FF0F  4C                 	db	76	;'L'
  1985  00FF10  55                 	db	85	;'U'
  1986  00FF11  45                 	db	69	;'E'
  1987  00FF12  53                 	db	83	;'S'
  1988  00FF13  20                 	db	32
  1989  00FF14  53                 	db	83	;'S'
  1990  00FF15  41                 	db	65	;'A'
  1991  00FF16  56                 	db	86	;'V'
  1992  00FF17  45                 	db	69	;'E'
  1993  00FF18  44                 	db	68	;'D'
  1994  00FF19  20                 	db	32
  1995  00FF1A  20                 	db	32
  1996  00FF1B  20                 	db	32
  1997  00FF1C  4F                 	db	79	;'O'
  1998  00FF1D  4E                 	db	78	;'N'
  1999  00FF1E  3A                 	db	58	;':'
  2000  00FF1F  20                 	db	32
  2001  00FF20  25                 	db	37
  2002  00FF21  64                 	db	100	;'d'
  2003  00FF22  20                 	db	32
  2004  00FF23  4F                 	db	79	;'O'
  2005  00FF24  46                 	db	70	;'F'
  2006  00FF25  46                 	db	70	;'F'
  2007  00FF26  3A                 	db	58	;':'
  2008  00FF27  20                 	db	32
  2009  00FF28  25                 	db	37
  2010  00FF29  64                 	db	100	;'d'
  2011  00FF2A  0A                 	db	10
  2012  00FF2B  0D                 	db	13
  2013  00FF2C  00                 	db	0
  2014  00FF2D                     STR_5:
  2015  00FF2D  0A                 	db	10
  2016  00FF2E  0D                 	db	13
  2017  00FF2F  41                 	db	65	;'A'
  2018  00FF30  43                 	db	67	;'C'
  2019  00FF31  54                 	db	84	;'T'
  2020  00FF32  55                 	db	85	;'U'
  2021  00FF33  41                 	db	65	;'A'
  2022  00FF34  4C                 	db	76	;'L'
  2023  00FF35  20                 	db	32
  2024  00FF36  54                 	db	84	;'T'
  2025  00FF37  55                 	db	85	;'U'
  2026  00FF38  52                 	db	82	;'R'
  2027  00FF39  4E                 	db	78	;'N'
  2028  00FF3A  20                 	db	32
  2029  00FF3B  56                 	db	86	;'V'
  2030  00FF3C  41                 	db	65	;'A'
  2031  00FF3D  4C                 	db	76	;'L'
  2032  00FF3E  55                 	db	85	;'U'
  2033  00FF3F  45                 	db	69	;'E'
  2034  00FF40  53                 	db	83	;'S'
  2035  00FF41  20                 	db	32
  2036  00FF42  20                 	db	32
  2037  00FF43  4F                 	db	79	;'O'
  2038  00FF44  4E                 	db	78	;'N'
  2039  00FF45  3A                 	db	58	;':'
  2040  00FF46  20                 	db	32
  2041  00FF47  25                 	db	37
  2042  00FF48  64                 	db	100	;'d'
  2043  00FF49  20                 	db	32
  2044  00FF4A  4F                 	db	79	;'O'
  2045  00FF4B  46                 	db	70	;'F'
  2046  00FF4C  46                 	db	70	;'F'
  2047  00FF4D  3A                 	db	58	;':'
  2048  00FF4E  20                 	db	32
  2049  00FF4F  25                 	db	37
  2050  00FF50  64                 	db	100	;'d'
  2051  00FF51  0A                 	db	10
  2052  00FF52  0D                 	db	13
  2053  00FF53  00                 	db	0
  2054  00FF54                     STR_2:
  2055  00FF54  45                 	db	69	;'E'
  2056  00FF55  41                 	db	65	;'A'
  2057  00FF56  55                 	db	85	;'U'
  2058  00FF57  20                 	db	32
  2059  00FF58  20                 	db	32
  2060  00FF59  20                 	db	32
  2061  00FF5A  20                 	db	32
  2062  00FF5B  20                 	db	32
  2063  00FF5C  20                 	db	32
  2064  00FF5D  20                 	db	32
  2065  00FF5E  20                 	db	32
  2066  00FF5F  20                 	db	32
  2067  00FF60  20                 	db	32
  2068  00FF61  53                 	db	83	;'S'
  2069  00FF62  45                 	db	69	;'E'
  2070  00FF63  45                 	db	69	;'E'
  2071  00FF64  56                 	db	86	;'V'
  2072  00FF65  20                 	db	32
  2073  00FF66  20                 	db	32
  2074  00FF67  20                 	db	32
  2075  00FF68  20                 	db	32
  2076  00FF69  20                 	db	32
  2077  00FF6A  20                 	db	32
  2078  00FF6B  20                 	db	32
  2079  00FF6C  20                 	db	32
  2080  00FF6D  20                 	db	32
  2081  00FF6E  41                 	db	65	;'A'
  2082  00FF6F  55                 	db	85	;'U'
  2083  00FF70  4C                 	db	76	;'L'
  2084  00FF71  41                 	db	65	;'A'
  2085  00FF72  5F                 	db	95	;'_'
  2086  00FF73  35                 	db	53	;'5'
  2087  00FF74  00                 	db	0
  2088  00FF75                     STR_4:
  2089  00FF75  43                 	db	67	;'C'
  2090  00FF76  6F                 	db	111	;'o'
  2091  00FF77  6E                 	db	110	;'n'
  2092  00FF78  66                 	db	102	;'f'
  2093  00FF79  69                 	db	105	;'i'
  2094  00FF7A  67                 	db	103	;'g'
  2095  00FF7B  75                 	db	117	;'u'
  2096  00FF7C  72                 	db	114	;'r'
  2097  00FF7D  61                 	db	97	;'a'
  2098  00FF7E  74                 	db	116	;'t'
  2099  00FF7F  69                 	db	105	;'i'
  2100  00FF80  6F                 	db	111	;'o'
  2101  00FF81  6E                 	db	110	;'n'
  2102  00FF82  20                 	db	32
  2103  00FF83  4D                 	db	77	;'M'
  2104  00FF84  4F                 	db	79	;'O'
  2105  00FF85  44                 	db	68	;'D'
  2106  00FF86  45                 	db	69	;'E'
  2107  00FF87  20                 	db	32
  2108  00FF88  0A                 	db	10
  2109  00FF89  0D                 	db	13
  2110  00FF8A  00                 	db	0
  2111  00FF8B                     STR_7:
  2112  00FF8B  0A                 	db	10
  2113  00FF8C  0D                 	db	13
  2114  00FF8D  54                 	db	84	;'T'
  2115  00FF8E  75                 	db	117	;'u'
  2116  00FF8F  72                 	db	114	;'r'
  2117  00FF90  6E                 	db	110	;'n'
  2118  00FF91  20                 	db	32
  2119  00FF92  4F                 	db	79	;'O'
  2120  00FF93  46                 	db	70	;'F'
  2121  00FF94  46                 	db	70	;'F'
  2122  00FF95  20                 	db	32
  2123  00FF96  56                 	db	86	;'V'
  2124  00FF97  61                 	db	97	;'a'
  2125  00FF98  6C                 	db	108	;'l'
  2126  00FF99  75                 	db	117	;'u'
  2127  00FF9A  65                 	db	101	;'e'
  2128  00FF9B  3A                 	db	58	;':'
  2129  00FF9C  20                 	db	32
  2130  00FF9D  0A                 	db	10
  2131  00FF9E  0D                 	db	13
  2132  00FF9F  00                 	db	0
  2133  00FFA0                     STR_6:
  2134  00FFA0  0A                 	db	10
  2135  00FFA1  0D                 	db	13
  2136  00FFA2  54                 	db	84	;'T'
  2137  00FFA3  75                 	db	117	;'u'
  2138  00FFA4  72                 	db	114	;'r'
  2139  00FFA5  6E                 	db	110	;'n'
  2140  00FFA6  20                 	db	32
  2141  00FFA7  4F                 	db	79	;'O'
  2142  00FFA8  4E                 	db	78	;'N'
  2143  00FFA9  20                 	db	32
  2144  00FFAA  56                 	db	86	;'V'
  2145  00FFAB  61                 	db	97	;'a'
  2146  00FFAC  6C                 	db	108	;'l'
  2147  00FFAD  75                 	db	117	;'u'
  2148  00FFAE  65                 	db	101	;'e'
  2149  00FFAF  3A                 	db	58	;':'
  2150  00FFB0  20                 	db	32
  2151  00FFB1  0A                 	db	10
  2152  00FFB2  0D                 	db	13
  2153  00FFB3  00                 	db	0
  2154  00FFB4                     STR_1:
  2155  00FFB4  0C                 	db	12
  2156  00FFB5  0D                 	db	13
  2157  00FFB6  50                 	db	80	;'P'
  2158  00FFB7  4F                 	db	79	;'O'
  2159  00FFB8  54                 	db	84	;'T'
  2160  00FFB9  3A                 	db	58	;':'
  2161  00FFBA  20                 	db	32
  2162  00FFBB  25                 	db	37
  2163  00FFBC  33                 	db	51	;'3'
  2164  00FFBD  64                 	db	100	;'d'
  2165  00FFBE  20                 	db	32
  2166  00FFBF  0D                 	db	13
  2167  00FFC0  00                 	db	0
  2168  00FFC1                     STR_3:
  2169  00FFC1  50                 	db	80	;'P'
  2170  00FFC2  4F                 	db	79	;'O'
  2171  00FFC3  54                 	db	84	;'T'
  2172  00FFC4  3A                 	db	58	;':'
  2173  00FFC5  20                 	db	32
  2174  00FFC6  25                 	db	37
  2175  00FFC7  33                 	db	51	;'3'
  2176  00FFC8  64                 	db	100	;'d'
  2177  00FFC9  20                 	db	32
  2178  00FFCA  25                 	db	37
  2179  00FFCB  25                 	db	37
  2180  00FFCC  00                 	db	0
  2181  00FFCD                     STR_85:
  2182  00FFCD  68                 	db	104	;'h'
  2183  00FFCE  68                 	db	104	;'h'
  2184  00FFCF  58                 	db	88	;'X'
  2185  00FFD0  00                 	db	0
  2186  00FFD1                     STR_9:
  2187  00FFD1  68                 	db	104	;'h'
  2188  00FFD2  68                 	db	104	;'h'
  2189  00FFD3  64                 	db	100	;'d'
  2190  00FFD4  00                 	db	0
  2191  00FFD5                     STR_13:
  2192  00FFD5  68                 	db	104	;'h'
  2193  00FFD6  68                 	db	104	;'h'
  2194  00FFD7  69                 	db	105	;'i'
  2195  00FFD8  00                 	db	0
  2196  00FFD9                     STR_51:
  2197  00FFD9  68                 	db	104	;'h'
  2198  00FFDA  68                 	db	104	;'h'
  2199  00FFDB  6E                 	db	110	;'n'
  2200  00FFDC  00                 	db	0
  2201  00FFDD                     STR_36:
  2202  00FFDD  68                 	db	104	;'h'
  2203  00FFDE  68                 	db	104	;'h'
  2204  00FFDF  6F                 	db	111	;'o'
  2205  00FFE0  00                 	db	0
  2206  00FFE1                     STR_66:
  2207  00FFE1  68                 	db	104	;'h'
  2208  00FFE2  68                 	db	104	;'h'
  2209  00FFE3  75                 	db	117	;'u'
  2210  00FFE4  00                 	db	0
  2211  00FFE5                     STR_81:
  2212  00FFE5  68                 	db	104	;'h'
  2213  00FFE6  68                 	db	104	;'h'
  2214  00FFE7  78                 	db	120	;'x'
  2215  00FFE8  00                 	db	0
  2216  00FFE9                     STR_103:
  2217  00FFE9  7A                 	db	122	;'z'
  2218  00FFEA  58                 	db	88	;'X'
  2219  00FFEB  00                 	db	0
  2220  00FFEC                     STR_27:
  2221  00FFEC  7A                 	db	122	;'z'
  2222  00FFED  64                 	db	100	;'d'
  2223  00FFEE  00                 	db	0
  2224  00FFEF                     STR_31:
  2225  00FFEF  7A                 	db	122	;'z'
  2226  00FFF0  69                 	db	105	;'i'
  2227  00FFF1  00                 	db	0
  2228  00FFF2                     STR_61:
  2229  00FFF2  7A                 	db	122	;'z'
  2230  00FFF3  6E                 	db	110	;'n'
  2231  00FFF4  00                 	db	0
  2232  00FFF5                     STR_46:
  2233  00FFF5  7A                 	db	122	;'z'
  2234  00FFF6  6F                 	db	111	;'o'
  2235  00FFF7  00                 	db	0
  2236  00FFF8                     STR_76:
  2237  00FFF8  7A                 	db	122	;'z'
  2238  00FFF9  75                 	db	117	;'u'
  2239  00FFFA  00                 	db	0
  2240  00FFFB                     STR_99:
  2241  00FFFB  7A                 	db	122	;'z'
  2242  00FFFC  78                 	db	120	;'x'
  2243  00FFFD  00                 	db	0
  2244  0000                     
  2245                           ; #config settings
  2246  00FFFE  00                 	db	0	; dummy byte at the end
  2247  0000                     
  2248                           	psect	nvCOMRAM
  2249  00005B                     __pnvCOMRAM:
  2250                           	opt callstack 0
  2251  00005B                     _timer0ReloadVal:
  2252                           	opt callstack 0
  2253  00005B                     	ds	2
  2254                           
  2255                           	psect	nvBANK0
  2256  0000C0                     __pnvBANK0:
  2257                           	opt callstack 0
  2258  0000C0                     _EUSART1_ErrorHandler:
  2259                           	opt callstack 0
  2260  0000C0                     	ds	2
  2261  0000C2                     _EUSART1_OverrunErrorHandler:
  2262                           	opt callstack 0
  2263  0000C2                     	ds	2
  2264  0000C4                     _EUSART1_FramingErrorHandler:
  2265                           	opt callstack 0
  2266  0000C4                     	ds	2
  2267  0000C6                     _timer1ReloadVal:
  2268                           	opt callstack 0
  2269  0000C6                     	ds	2
  2270  0000C8                     _IOCB4_InterruptHandler:
  2271                           	opt callstack 0
  2272  0000C8                     	ds	2
  2273  0000                     _IOCBbits	set	3930
  2274  0000                     _WPUB	set	3931
  2275  0000                     _ANCON1	set	3932
  2276  0000                     _ANCON0	set	3933
  2277  0000                     _LATEbits	set	3981
  2278  0000                     _SSPSTATbits	set	4039
  2279  0000                     _LATAbits	set	3977
  2280  0000                     _PORTB	set	3969
  2281  0000                     _PORTBbits	set	3969
  2282  0000                     _PIR4bits	set	4023
  2283  0000                     _EEDATA	set	3955
  2284  0000                     _EEADR	set	3956
  2285  0000                     _EEADRH	set	3957
  2286  0000                     _EECON2	set	3966
  2287  0000                     _EECON1bits	set	3967
  2288  0000                     _TABLAT	set	4085
  2289  0000                     _TBLPTRL	set	4086
  2290  0000                     _TBLPTRH	set	4087
  2291  0000                     _TBLPTRU	set	4088
  2292  0000                     _T0CON	set	4053
  2293  0000                     _TMR0L	set	4054
  2294  0000                     _TMR0H	set	4055
  2295  0000                     _T0CONbits	set	4053
  2296  0000                     _RCONbits	set	4048
  2297  0000                     _TXREG1	set	4013
  2298  0000                     _RCREG1	set	4014
  2299  0000                     _RCSTA1bits	set	4011
  2300  0000                     _TXSTA1bits	set	4012
  2301  0000                     _SPBRGH1	set	3965
  2302  0000                     _SPBRG1	set	4015
  2303  0000                     _TXSTA1	set	4012
  2304  0000                     _RCSTA1	set	4011
  2305  0000                     _BAUDCON1	set	4007
  2306  0000                     _T1GCONbits	set	4010
  2307  0000                     _T1CONbits	set	4045
  2308  0000                     _T1CON	set	4045
  2309  0000                     _TMR1L	set	4046
  2310  0000                     _TMR1H	set	4047
  2311  0000                     _T1GCON	set	4010
  2312  0000                     _ADCON0bits	set	4034
  2313  0000                     _ADRESL	set	4035
  2314  0000                     _ADRESH	set	4036
  2315  0000                     _ADCON2	set	4032
  2316  0000                     _ADCON1	set	4033
  2317  0000                     _ADCON0	set	4034
  2318  0000                     _INTCONbits	set	4082
  2319  0000                     _INTCON2bits	set	4081
  2320  0000                     _TRISD	set	3989
  2321  0000                     _TRISC	set	3988
  2322  0000                     _TRISB	set	3987
  2323  0000                     _TRISA	set	3986
  2324  0000                     _TRISE	set	3990
  2325  0000                     _LATC	set	3979
  2326  0000                     _LATB	set	3978
  2327  0000                     _LATA	set	3977
  2328  0000                     _LATD	set	3980
  2329  0000                     _LATE	set	3981
  2330  0000                     _PIR1bits	set	3998
  2331  0000                     _SSPBUF	set	4041
  2332  0000                     _SSPCON2	set	4037
  2333  0000                     _SSPCON1bits	set	4038
  2334  0000                     _TRISCbits	set	3988
  2335  0000                     _SSPADD	set	4040
  2336  0000                     _SSPCON1	set	4038
  2337  0000                     _SSPSTAT	set	4039
  2338  0000                     _REFOCON	set	3994
  2339  0000                     _OSCTUNE	set	3995
  2340  0000                     _OSCCON2	set	4050
  2341  0000                     _OSCCON	set	4051
  2342                           
  2343                           	psect	cinit
  2344  005D4E                     __pcinit:
  2345                           	opt callstack 0
  2346  005D4E                     start_initialization:
  2347                           	opt callstack 0
  2348  005D4E                     __initialization:
  2349                           	opt callstack 0
  2350                           
  2351                           ; Initialize objects allocated to BANK1 (4 bytes)
  2352                           ; load TBLPTR registers with __pidataBANK1
  2353  005D4E  0E6B               	movlw	low __pidataBANK1
  2354  005D50  6EF6               	movwf	tblptrl,c
  2355  005D52  0E69               	movlw	high __pidataBANK1
  2356  005D54  6EF7               	movwf	tblptrh,c
  2357  005D56  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2358  005D58  6EF8               	movwf	tblptru,c
  2359  005D5A  EE01  F0C7         	lfsr	0,__pdataBANK1
  2360  005D5E  EE10 F004          	lfsr	1,4
  2361  005D62                     copy_data0:
  2362  005D62  0009               	tblrd		*+
  2363  005D64  CFF5 FFEE          	movff	tablat,postinc0
  2364  005D68  50E5               	movf	postdec1,w,c
  2365  005D6A  50E1               	movf	fsr1l,w,c
  2366  005D6C  E1FA               	bnz	copy_data0
  2367                           
  2368                           ; Initialize objects allocated to BANK0 (7 bytes)
  2369                           ; load TBLPTR registers with __pidataBANK0
  2370  005D6E  0E64               	movlw	low __pidataBANK0
  2371  005D70  6EF6               	movwf	tblptrl,c
  2372  005D72  0E69               	movlw	high __pidataBANK0
  2373  005D74  6EF7               	movwf	tblptrh,c
  2374  005D76  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2375  005D78  6EF8               	movwf	tblptru,c
  2376  005D7A  EE00  F0CA         	lfsr	0,__pdataBANK0
  2377  005D7E  EE10 F007          	lfsr	1,7
  2378  005D82                     copy_data1:
  2379  005D82  0009               	tblrd		*+
  2380  005D84  CFF5 FFEE          	movff	tablat,postinc0
  2381  005D88  50E5               	movf	postdec1,w,c
  2382  005D8A  50E1               	movf	fsr1l,w,c
  2383  005D8C  E1FA               	bnz	copy_data1
  2384                           
  2385                           ; Clear objects allocated to BANK1 (74 bytes)
  2386  005D8E  EE01  F07D         	lfsr	0,__pbssBANK1
  2387  005D92  0E4A               	movlw	74
  2388  005D94                     clear_0:
  2389  005D94  6AEE               	clrf	postinc0,c
  2390  005D96  06E8               	decf	wreg,f,c
  2391  005D98  E1FD               	bnz	clear_0
  2392                           
  2393                           ; Clear objects allocated to BANK0 (15 bytes)
  2394  005D9A  EE00  F0B1         	lfsr	0,__pbssBANK0
  2395  005D9E  0E0F               	movlw	15
  2396  005DA0                     clear_1:
  2397  005DA0  6AEE               	clrf	postinc0,c
  2398  005DA2  06E8               	decf	wreg,f,c
  2399  005DA4  E1FD               	bnz	clear_1
  2400                           
  2401                           ; Clear objects allocated to COMRAM (2 bytes)
  2402  005DA6  6A5E               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2403  005DA8  6A5D               	clrf	__pbssCOMRAM& (0+255),c
  2404  005DAA                     end_of_initialization:
  2405                           	opt callstack 0
  2406  005DAA                     __end_of__initialization:
  2407                           	opt callstack 0
  2408  005DAA  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2409  005DAC  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2410  005DAE  0100               	movlb	0
  2411  005DB0  EFE0  F01A         	goto	_main	;jump to C main() function
  2412                           
  2413                           	psect	bssCOMRAM
  2414  00005D                     __pbssCOMRAM:
  2415                           	opt callstack 0
  2416  00005D                     _ADC_InterruptHandler:
  2417                           	opt callstack 0
  2418  00005D                     	ds	2
  2419                           
  2420                           	psect	bssBANK0
  2421  0000B1                     __pbssBANK0:
  2422                           	opt callstack 0
  2423  0000B1                     _adc_perc:
  2424                           	opt callstack 0
  2425  0000B1                     	ds	4
  2426  0000B5                     _width:
  2427                           	opt callstack 0
  2428  0000B5                     	ds	2
  2429  0000B7                     _prec:
  2430                           	opt callstack 0
  2431  0000B7                     	ds	2
  2432  0000B9                     _flags:
  2433                           	opt callstack 0
  2434  0000B9                     	ds	2
  2435  0000BB                     _global_bg_color:
  2436                           	opt callstack 0
  2437  0000BB                     	ds	2
  2438  0000BD                     _acess:
  2439                           	opt callstack 0
  2440  0000BD                     	ds	2
  2441  0000BF                     _eusart1RxLastError:
  2442                           	opt callstack 0
  2443  0000BF                     	ds	1
  2444                           
  2445                           	psect	dataBANK0
  2446  0000CA                     __pdataBANK0:
  2447                           	opt callstack 0
  2448  0000CA                     stoa@F1152:
  2449                           	opt callstack 0
  2450  0000CA                     	ds	7
  2451                           
  2452                           	psect	bssBANK1
  2453  00017D                     __pbssBANK1:
  2454                           	opt callstack 0
  2455  00017D                     _errno:
  2456                           	opt callstack 0
  2457  00017D                     	ds	2
  2458  00017F                     _nout:
  2459                           	opt callstack 0
  2460  00017F                     	ds	2
  2461  000181                     _rx_data:
  2462                           	opt callstack 0
  2463  000181                     	ds	2
  2464  000183                     _b:
  2465                           	opt callstack 0
  2466  000183                     	ds	2
  2467  000185                     _a:
  2468                           	opt callstack 0
  2469  000185                     	ds	2
  2470  000187                     _adc_value:
  2471                           	opt callstack 0
  2472  000187                     	ds	2
  2473  000189                     _dbuf:
  2474                           	opt callstack 0
  2475  000189                     	ds	32
  2476  0001A9                     _string:
  2477                           	opt callstack 0
  2478  0001A9                     	ds	30
  2479                           
  2480                           	psect	dataBANK1
  2481  0001C7                     __pdataBANK1:
  2482                           	opt callstack 0
  2483  0001C7                     _turn_off_value:
  2484                           	opt callstack 0
  2485  0001C7                     	ds	2
  2486  0001C9                     _turn_on_value:
  2487                           	opt callstack 0
  2488  0001C9                     	ds	2
  2489                           
  2490                           	psect	cstackBANK1
  2491  000100                     __pcstackBANK1:
  2492                           	opt callstack 0
  2493  000100                     ?_dtoa:
  2494                           	opt callstack 0
  2495  000100                     ?_otoa:
  2496                           	opt callstack 0
  2497  000100                     ?_utoa:
  2498                           	opt callstack 0
  2499  000100                     ?_xtoa:
  2500                           	opt callstack 0
  2501  000100                     lcd_draw_string@x:
  2502                           	opt callstack 0
  2503  000100                     dtoa@fp:
  2504                           	opt callstack 0
  2505  000100                     otoa@fp:
  2506                           	opt callstack 0
  2507  000100                     utoa@fp:
  2508                           	opt callstack 0
  2509  000100                     xtoa@fp:
  2510                           	opt callstack 0
  2511  000100                     read_from_usart@data:
  2512                           	opt callstack 0
  2513                           
  2514                           ; 10 bytes @ 0x0
  2515  000100                     	ds	2
  2516  000102                     lcd_draw_string@y:
  2517                           	opt callstack 0
  2518  000102                     dtoa@d:
  2519                           	opt callstack 0
  2520  000102                     otoa@d:
  2521                           	opt callstack 0
  2522  000102                     utoa@d:
  2523                           	opt callstack 0
  2524  000102                     xtoa@d:
  2525                           	opt callstack 0
  2526                           
  2527                           ; 8 bytes @ 0x2
  2528  000102                     	ds	2
  2529  000104                     lcd_draw_string@pS:
  2530                           	opt callstack 0
  2531                           
  2532                           ; 2 bytes @ 0x4
  2533  000104                     	ds	2
  2534  000106                     lcd_draw_string@fg_color:
  2535                           	opt callstack 0
  2536                           
  2537                           ; 2 bytes @ 0x6
  2538  000106                     	ds	2
  2539  000108                     lcd_draw_string@bg_color:
  2540                           	opt callstack 0
  2541                           
  2542                           ; 2 bytes @ 0x8
  2543  000108                     	ds	2
  2544  00010A                     ??_lcd_draw_string:
  2545  00010A                     ??_dtoa:
  2546  00010A                     ??_otoa:
  2547  00010A                     ??_utoa:
  2548  00010A                     xtoa@x:
  2549                           	opt callstack 0
  2550  00010A                     read_from_usart@value:
  2551                           	opt callstack 0
  2552                           
  2553                           ; 2 bytes @ 0xA
  2554  00010A                     	ds	1
  2555  00010B                     ??_xtoa:
  2556                           
  2557                           ; 1 bytes @ 0xB
  2558  00010B                     	ds	1
  2559  00010C                     read_from_usart@i:
  2560                           	opt callstack 0
  2561                           
  2562                           ; 2 bytes @ 0xC
  2563  00010C                     	ds	2
  2564  00010E                     lcd_draw_string@k:
  2565                           	opt callstack 0
  2566                           
  2567                           ; 2 bytes @ 0xE
  2568  00010E                     	ds	2
  2569  000110                     lcd_draw_string@lIndex:
  2570                           	opt callstack 0
  2571                           
  2572                           ; 2 bytes @ 0x10
  2573  000110                     	ds	2
  2574  000112                     _dtoa$1823:
  2575                           	opt callstack 0
  2576  000112                     otoa@p:
  2577                           	opt callstack 0
  2578  000112                     utoa@p:
  2579                           	opt callstack 0
  2580                           
  2581                           ; 2 bytes @ 0x12
  2582  000112                     	ds	1
  2583  000113                     _xtoa$1859:
  2584                           	opt callstack 0
  2585                           
  2586                           ; 2 bytes @ 0x13
  2587  000113                     	ds	1
  2588  000114                     dtoa@p:
  2589                           	opt callstack 0
  2590  000114                     otoa@t:
  2591                           	opt callstack 0
  2592  000114                     utoa@w:
  2593                           	opt callstack 0
  2594                           
  2595                           ; 2 bytes @ 0x14
  2596  000114                     	ds	1
  2597  000115                     _xtoa$1860:
  2598                           	opt callstack 0
  2599                           
  2600                           ; 2 bytes @ 0x15
  2601  000115                     	ds	1
  2602  000116                     dtoa@w:
  2603                           	opt callstack 0
  2604  000116                     otoa@w:
  2605                           	opt callstack 0
  2606  000116                     utoa@n:
  2607                           	opt callstack 0
  2608                           
  2609                           ; 8 bytes @ 0x16
  2610  000116                     	ds	1
  2611  000117                     xtoa@p:
  2612                           	opt callstack 0
  2613                           
  2614                           ; 2 bytes @ 0x17
  2615  000117                     	ds	1
  2616  000118                     dtoa@s:
  2617                           	opt callstack 0
  2618  000118                     otoa@n:
  2619                           	opt callstack 0
  2620                           
  2621                           ; 8 bytes @ 0x18
  2622  000118                     	ds	1
  2623  000119                     xtoa@w:
  2624                           	opt callstack 0
  2625                           
  2626                           ; 2 bytes @ 0x19
  2627  000119                     	ds	1
  2628  00011A                     dtoa@n:
  2629                           	opt callstack 0
  2630                           
  2631                           ; 8 bytes @ 0x1A
  2632  00011A                     	ds	1
  2633  00011B                     xtoa@n:
  2634                           	opt callstack 0
  2635                           
  2636                           ; 8 bytes @ 0x1B
  2637  00011B                     	ds	3
  2638  00011E                     utoa@i:
  2639                           	opt callstack 0
  2640                           
  2641                           ; 2 bytes @ 0x1E
  2642  00011E                     	ds	2
  2643  000120                     otoa@i:
  2644                           	opt callstack 0
  2645                           
  2646                           ; 2 bytes @ 0x20
  2647  000120                     	ds	2
  2648  000122                     dtoa@i:
  2649                           	opt callstack 0
  2650                           
  2651                           ; 2 bytes @ 0x22
  2652  000122                     	ds	1
  2653  000123                     xtoa@i:
  2654                           	opt callstack 0
  2655                           
  2656                           ; 2 bytes @ 0x23
  2657  000123                     	ds	2
  2658  000125                     xtoa@c:
  2659                           	opt callstack 0
  2660                           
  2661                           ; 2 bytes @ 0x25
  2662  000125                     	ds	2
  2663  000127                     ?_vfpfcnvrt:
  2664                           	opt callstack 0
  2665  000127                     vfpfcnvrt@fp:
  2666                           	opt callstack 0
  2667                           
  2668                           ; 2 bytes @ 0x27
  2669  000127                     	ds	2
  2670  000129                     vfpfcnvrt@fmt:
  2671                           	opt callstack 0
  2672                           
  2673                           ; 2 bytes @ 0x29
  2674  000129                     	ds	2
  2675  00012B                     vfpfcnvrt@ap:
  2676                           	opt callstack 0
  2677                           
  2678                           ; 2 bytes @ 0x2B
  2679  00012B                     	ds	2
  2680  00012D                     ??_vfpfcnvrt:
  2681                           
  2682                           ; 1 bytes @ 0x2D
  2683  00012D                     	ds	4
  2684  000131                     vfpfcnvrt@cp:
  2685                           	opt callstack 0
  2686                           
  2687                           ; 2 bytes @ 0x31
  2688  000131                     	ds	2
  2689  000133                     vfpfcnvrt@done:
  2690                           	opt callstack 0
  2691                           
  2692                           ; 2 bytes @ 0x33
  2693  000133                     	ds	2
  2694  000135                     _vfpfcnvrt$1874:
  2695                           	opt callstack 0
  2696                           
  2697                           ; 2 bytes @ 0x35
  2698  000135                     	ds	2
  2699  000137                     _vfpfcnvrt$1875:
  2700                           	opt callstack 0
  2701                           
  2702                           ; 2 bytes @ 0x37
  2703  000137                     	ds	2
  2704  000139                     vfpfcnvrt@ll:
  2705                           	opt callstack 0
  2706                           
  2707                           ; 8 bytes @ 0x39
  2708  000139                     	ds	8
  2709  000141                     vfpfcnvrt@vp:
  2710                           	opt callstack 0
  2711                           
  2712                           ; 2 bytes @ 0x41
  2713  000141                     	ds	2
  2714  000143                     vfpfcnvrt@c:
  2715                           	opt callstack 0
  2716                           
  2717                           ; 1 bytes @ 0x43
  2718  000143                     	ds	1
  2719  000144                     vfpfcnvrt@llu:
  2720                           	opt callstack 0
  2721                           
  2722                           ; 8 bytes @ 0x44
  2723  000144                     	ds	8
  2724  00014C                     ?_vfprintf:
  2725                           	opt callstack 0
  2726  00014C                     vfprintf@fp:
  2727                           	opt callstack 0
  2728                           
  2729                           ; 2 bytes @ 0x4C
  2730  00014C                     	ds	2
  2731  00014E                     vfprintf@fmt:
  2732                           	opt callstack 0
  2733                           
  2734                           ; 2 bytes @ 0x4E
  2735  00014E                     	ds	2
  2736  000150                     vfprintf@ap:
  2737                           	opt callstack 0
  2738                           
  2739                           ; 2 bytes @ 0x50
  2740  000150                     	ds	2
  2741  000152                     vfprintf@cfmt:
  2742                           	opt callstack 0
  2743                           
  2744                           ; 2 bytes @ 0x52
  2745  000152                     	ds	2
  2746  000154                     ?_printf:
  2747                           	opt callstack 0
  2748  000154                     ?_vsnprintf:
  2749                           	opt callstack 0
  2750  000154                     printf@fmt:
  2751                           	opt callstack 0
  2752  000154                     vsnprintf@s:
  2753                           	opt callstack 0
  2754                           
  2755                           ; 2 bytes @ 0x54
  2756  000154                     	ds	2
  2757  000156                     vsnprintf@n:
  2758                           	opt callstack 0
  2759                           
  2760                           ; 2 bytes @ 0x56
  2761  000156                     	ds	2
  2762  000158                     vsnprintf@fmt:
  2763                           	opt callstack 0
  2764                           
  2765                           ; 2 bytes @ 0x58
  2766  000158                     	ds	2
  2767  00015A                     vsnprintf@ap:
  2768                           	opt callstack 0
  2769                           
  2770                           ; 2 bytes @ 0x5A
  2771  00015A                     	ds	2
  2772  00015C                     ??_vsnprintf:
  2773  00015C                     printf@ap:
  2774                           	opt callstack 0
  2775                           
  2776                           ; 2 bytes @ 0x5C
  2777  00015C                     	ds	4
  2778  000160                     _vsnprintf$2581:
  2779                           	opt callstack 0
  2780                           
  2781                           ; 2 bytes @ 0x60
  2782  000160                     	ds	2
  2783  000162                     vsnprintf@cnt:
  2784                           	opt callstack 0
  2785                           
  2786                           ; 2 bytes @ 0x62
  2787  000162                     	ds	2
  2788  000164                     vsnprintf@f:
  2789                           	opt callstack 0
  2790                           
  2791                           ; 6 bytes @ 0x64
  2792  000164                     	ds	6
  2793  00016A                     ?_snprintf:
  2794                           	opt callstack 0
  2795  00016A                     snprintf@s:
  2796                           	opt callstack 0
  2797                           
  2798                           ; 2 bytes @ 0x6A
  2799  00016A                     	ds	2
  2800  00016C                     snprintf@n:
  2801                           	opt callstack 0
  2802                           
  2803                           ; 2 bytes @ 0x6C
  2804  00016C                     	ds	2
  2805  00016E                     snprintf@fmt:
  2806                           	opt callstack 0
  2807                           
  2808                           ; 2 bytes @ 0x6E
  2809  00016E                     	ds	8
  2810  000176                     snprintf@ap:
  2811                           	opt callstack 0
  2812                           
  2813                           ; 2 bytes @ 0x76
  2814  000176                     	ds	2
  2815  000178                     ??_main:
  2816                           
  2817                           ; 1 bytes @ 0x78
  2818  000178                     	ds	5
  2819                           
  2820                           	psect	cstackBANK0
  2821  000060                     __pcstackBANK0:
  2822                           	opt callstack 0
  2823  000060                     i2vfpfcnvrt@cp:
  2824                           	opt callstack 0
  2825                           
  2826                           ; 2 bytes @ 0x0
  2827  000060                     	ds	2
  2828  000062                     i2vfpfcnvrt@done:
  2829                           	opt callstack 0
  2830                           
  2831                           ; 2 bytes @ 0x2
  2832  000062                     	ds	2
  2833  000064                     i2_vfpfcnvrt$1874:
  2834                           	opt callstack 0
  2835                           
  2836                           ; 2 bytes @ 0x4
  2837  000064                     	ds	2
  2838  000066                     i2_vfpfcnvrt$1875:
  2839                           	opt callstack 0
  2840                           
  2841                           ; 2 bytes @ 0x6
  2842  000066                     	ds	2
  2843  000068                     i2vfpfcnvrt@ll:
  2844                           	opt callstack 0
  2845                           
  2846                           ; 8 bytes @ 0x8
  2847  000068                     	ds	8
  2848  000070                     i2vfpfcnvrt@vp:
  2849                           	opt callstack 0
  2850                           
  2851                           ; 2 bytes @ 0x10
  2852  000070                     	ds	2
  2853  000072                     i2vfpfcnvrt@c:
  2854                           	opt callstack 0
  2855                           
  2856                           ; 1 bytes @ 0x12
  2857  000072                     	ds	1
  2858  000073                     i2vfpfcnvrt@llu:
  2859                           	opt callstack 0
  2860                           
  2861                           ; 8 bytes @ 0x13
  2862  000073                     	ds	8
  2863  00007B                     ?i2_printf:
  2864                           	opt callstack 0
  2865  00007B                     i2printf@fmt:
  2866                           	opt callstack 0
  2867                           
  2868                           ; 2 bytes @ 0x1B
  2869  00007B                     	ds	6
  2870  000081                     ??_INTERRUPT_InterruptManager:
  2871                           
  2872                           ; 1 bytes @ 0x21
  2873  000081                     	ds	14
  2874  00008F                     ??_TMR1_Initialize:
  2875  00008F                     ??_TMR0_Initialize:
  2876  00008F                     ??_SPI_Open:
  2877  00008F                     ??_msDelay:
  2878  00008F                     ?_strlen:
  2879                           	opt callstack 0
  2880  00008F                     ?_isupper:
  2881                           	opt callstack 0
  2882  00008F                     ?_isalpha:
  2883                           	opt callstack 0
  2884  00008F                     ?_isdigit:
  2885                           	opt callstack 0
  2886  00008F                     ?_strncmp:
  2887                           	opt callstack 0
  2888  00008F                     ?_isspace:
  2889                           	opt callstack 0
  2890  00008F                     ?_islower:
  2891                           	opt callstack 0
  2892  00008F                     ?_ADC_GetConversion:
  2893                           	opt callstack 0
  2894  00008F                     ?___wmul:
  2895                           	opt callstack 0
  2896  00008F                     ?___lmul:
  2897                           	opt callstack 0
  2898  00008F                     ?___aodiv:
  2899                           	opt callstack 0
  2900  00008F                     ?___aomod:
  2901                           	opt callstack 0
  2902  00008F                     ?___lodiv:
  2903                           	opt callstack 0
  2904  00008F                     ?___lomod:
  2905                           	opt callstack 0
  2906  00008F                     SPI_ExchangeByte@data:
  2907                           	opt callstack 0
  2908  00008F                     _EUSART1_is_tx_ready$859:
  2909                           	opt callstack 0
  2910  00008F                     EUSART1_Write@txData:
  2911                           	opt callstack 0
  2912  00008F                     IOCB4_SetInterruptHandler@InterruptHandler:
  2913                           	opt callstack 0
  2914  00008F                     EUSART1_SetFramingErrorHandler@interruptHandler:
  2915                           	opt callstack 0
  2916  00008F                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  2917                           	opt callstack 0
  2918  00008F                     EUSART1_SetErrorHandler@interruptHandler:
  2919                           	opt callstack 0
  2920  00008F                     TMR0_WriteTimer@timerVal:
  2921                           	opt callstack 0
  2922  00008F                     DATAEE_WriteByte@bAdd:
  2923                           	opt callstack 0
  2924  00008F                     ___wmul@multiplier:
  2925                           	opt callstack 0
  2926  00008F                     isalpha@c:
  2927                           	opt callstack 0
  2928  00008F                     isdigit@c:
  2929                           	opt callstack 0
  2930  00008F                     isspace@c:
  2931                           	opt callstack 0
  2932  00008F                     isupper@c:
  2933                           	opt callstack 0
  2934  00008F                     strlen@s:
  2935                           	opt callstack 0
  2936  00008F                     strncmp@_l:
  2937                           	opt callstack 0
  2938  00008F                     islower@c:
  2939                           	opt callstack 0
  2940  00008F                     ___lmul@multiplier:
  2941                           	opt callstack 0
  2942  00008F                     ___aodiv@dividend:
  2943                           	opt callstack 0
  2944  00008F                     ___aomod@dividend:
  2945                           	opt callstack 0
  2946  00008F                     ___lodiv@dividend:
  2947                           	opt callstack 0
  2948  00008F                     ___lomod@dividend:
  2949                           	opt callstack 0
  2950                           
  2951                           ; 8 bytes @ 0x2F
  2952  00008F                     	ds	1
  2953  000090                     SPI_Open@spiUniqueConfiguration:
  2954                           	opt callstack 0
  2955  000090                     putch@txData:
  2956                           	opt callstack 0
  2957  000090                     msDelay@ms:
  2958                           	opt callstack 0
  2959  000090                     lcd_send@value:
  2960                           	opt callstack 0
  2961                           
  2962                           ; 1 bytes @ 0x30
  2963  000090                     	ds	1
  2964  000091                     ??_isupper:
  2965  000091                     ??_isalpha:
  2966  000091                     ??_isdigit:
  2967  000091                     ??_isspace:
  2968  000091                     ??_islower:
  2969  000091                     ??_ADC_GetConversion:
  2970  000091                     DATAEE_WriteByte@bData:
  2971                           	opt callstack 0
  2972  000091                     msDelay@k:
  2973                           	opt callstack 0
  2974  000091                     lcd_send@dc:
  2975                           	opt callstack 0
  2976  000091                     ___wmul@multiplicand:
  2977                           	opt callstack 0
  2978  000091                     fputc@c:
  2979                           	opt callstack 0
  2980  000091                     strlen@a:
  2981                           	opt callstack 0
  2982  000091                     strncmp@_r:
  2983                           	opt callstack 0
  2984                           
  2985                           ; 2 bytes @ 0x31
  2986  000091                     	ds	1
  2987  000092                     DATAEE_WriteByte@GIEBitValue:
  2988                           	opt callstack 0
  2989  000092                     lcd_set_cursor_x@x:
  2990                           	opt callstack 0
  2991  000092                     lcd_set_cursor_y@y:
  2992                           	opt callstack 0
  2993  000092                     lcd_draw_pixel@color:
  2994                           	opt callstack 0
  2995                           
  2996                           ; 2 bytes @ 0x32
  2997  000092                     	ds	1
  2998  000093                     ADC_GetConversion@channel:
  2999                           	opt callstack 0
  3000  000093                     ___wmul@product:
  3001                           	opt callstack 0
  3002  000093                     fputc@fp:
  3003                           	opt callstack 0
  3004  000093                     strncmp@n:
  3005                           	opt callstack 0
  3006  000093                     ___lmul@multiplicand:
  3007                           	opt callstack 0
  3008                           
  3009                           ; 4 bytes @ 0x33
  3010  000093                     	ds	1
  3011  000094                     lcd_set_cursor@x:
  3012                           	opt callstack 0
  3013                           
  3014                           ; 2 bytes @ 0x34
  3015  000094                     	ds	1
  3016  000095                     ??_fputc:
  3017  000095                     ??_strncmp:
  3018  000095                     ?_toupper:
  3019                           	opt callstack 0
  3020  000095                     _isspace$2463:
  3021                           	opt callstack 0
  3022  000095                     toupper@c:
  3023                           	opt callstack 0
  3024                           
  3025                           ; 2 bytes @ 0x35
  3026  000095                     	ds	1
  3027  000096                     ?_atoi:
  3028                           	opt callstack 0
  3029  000096                     lcd_set_cursor@y:
  3030                           	opt callstack 0
  3031  000096                     atoi@s:
  3032                           	opt callstack 0
  3033  000096                     strncmp@l:
  3034                           	opt callstack 0
  3035                           
  3036                           ; 2 bytes @ 0x36
  3037  000096                     	ds	1
  3038  000097                     ??_toupper:
  3039  000097                     ___lmul@product:
  3040                           	opt callstack 0
  3041  000097                     ___aodiv@divisor:
  3042                           	opt callstack 0
  3043  000097                     ___aomod@divisor:
  3044                           	opt callstack 0
  3045  000097                     ___lodiv@divisor:
  3046                           	opt callstack 0
  3047  000097                     ___lomod@divisor:
  3048                           	opt callstack 0
  3049                           
  3050                           ; 8 bytes @ 0x37
  3051  000097                     	ds	1
  3052  000098                     ??_atoi:
  3053  000098                     lcd_fill@bg_color:
  3054                           	opt callstack 0
  3055  000098                     lcd_draw_char@x:
  3056                           	opt callstack 0
  3057  000098                     strncmp@r:
  3058                           	opt callstack 0
  3059                           
  3060                           ; 2 bytes @ 0x38
  3061  000098                     	ds	2
  3062  00009A                     ?_stoa:
  3063                           	opt callstack 0
  3064  00009A                     lcd_fill@height:
  3065                           	opt callstack 0
  3066  00009A                     lcd_draw_char@y:
  3067                           	opt callstack 0
  3068  00009A                     stoa@fp:
  3069                           	opt callstack 0
  3070  00009A                     fputs@s:
  3071                           	opt callstack 0
  3072                           
  3073                           ; 2 bytes @ 0x3A
  3074  00009A                     	ds	1
  3075  00009B                     ?___aldiv:
  3076                           	opt callstack 0
  3077  00009B                     _toupper$2550:
  3078                           	opt callstack 0
  3079  00009B                     ___aldiv@dividend:
  3080                           	opt callstack 0
  3081                           
  3082                           ; 4 bytes @ 0x3B
  3083  00009B                     	ds	1
  3084  00009C                     lcd_fill@width:
  3085                           	opt callstack 0
  3086  00009C                     lcd_draw_char@fIndex:
  3087                           	opt callstack 0
  3088  00009C                     stoa@s:
  3089                           	opt callstack 0
  3090  00009C                     atoi@neg:
  3091                           	opt callstack 0
  3092  00009C                     fputs@fp:
  3093                           	opt callstack 0
  3094                           
  3095                           ; 2 bytes @ 0x3C
  3096  00009C                     	ds	2
  3097  00009E                     ??_stoa:
  3098  00009E                     fputs@c:
  3099                           	opt callstack 0
  3100  00009E                     lcd_draw_char@fg_color:
  3101                           	opt callstack 0
  3102  00009E                     _atoi$2436:
  3103                           	opt callstack 0
  3104                           
  3105                           ; 2 bytes @ 0x3E
  3106  00009E                     	ds	1
  3107  00009F                     ___aodiv@counter:
  3108                           	opt callstack 0
  3109  00009F                     ___aomod@counter:
  3110                           	opt callstack 0
  3111  00009F                     ___lomod@counter:
  3112                           	opt callstack 0
  3113  00009F                     fputs@i:
  3114                           	opt callstack 0
  3115  00009F                     ___aldiv@divisor:
  3116                           	opt callstack 0
  3117  00009F                     stoa@nuls:
  3118                           	opt callstack 0
  3119  00009F                     ___lodiv@quotient:
  3120                           	opt callstack 0
  3121                           
  3122                           ; 8 bytes @ 0x3F
  3123  00009F                     	ds	1
  3124  0000A0                     ___aodiv@sign:
  3125                           	opt callstack 0
  3126  0000A0                     ___aomod@sign:
  3127                           	opt callstack 0
  3128  0000A0                     lcd_draw_char@bg_color:
  3129                           	opt callstack 0
  3130  0000A0                     _atoi$2438:
  3131                           	opt callstack 0
  3132                           
  3133                           ; 2 bytes @ 0x40
  3134  0000A0                     	ds	1
  3135  0000A1                     ?_abs:
  3136                           	opt callstack 0
  3137  0000A1                     ?_pad:
  3138                           	opt callstack 0
  3139  0000A1                     pad@fp:
  3140                           	opt callstack 0
  3141  0000A1                     abs@a:
  3142                           	opt callstack 0
  3143  0000A1                     ___aodiv@quotient:
  3144                           	opt callstack 0
  3145                           
  3146                           ; 8 bytes @ 0x41
  3147  0000A1                     	ds	1
  3148  0000A2                     ??_lcd_draw_char:
  3149  0000A2                     _atoi$2437:
  3150                           	opt callstack 0
  3151                           
  3152                           ; 1 bytes @ 0x42
  3153  0000A2                     	ds	1
  3154  0000A3                     ??_abs:
  3155  0000A3                     ___aldiv@counter:
  3156                           	opt callstack 0
  3157  0000A3                     pad@buf:
  3158                           	opt callstack 0
  3159  0000A3                     atoi@n:
  3160                           	opt callstack 0
  3161                           
  3162                           ; 2 bytes @ 0x43
  3163  0000A3                     	ds	1
  3164  0000A4                     ___aldiv@sign:
  3165                           	opt callstack 0
  3166                           
  3167                           ; 1 bytes @ 0x44
  3168  0000A4                     	ds	1
  3169  0000A5                     ?_read_from_usart:
  3170                           	opt callstack 0
  3171  0000A5                     read_from_usart@length:
  3172                           	opt callstack 0
  3173  0000A5                     pad@p:
  3174                           	opt callstack 0
  3175  0000A5                     ___aldiv@quotient:
  3176                           	opt callstack 0
  3177                           
  3178                           ; 4 bytes @ 0x45
  3179  0000A5                     	ds	1
  3180  0000A6                     stoa@i:
  3181                           	opt callstack 0
  3182                           
  3183                           ; 2 bytes @ 0x46
  3184  0000A6                     	ds	1
  3185  0000A7                     ??_read_from_usart:
  3186  0000A7                     ??_pad:
  3187  0000A7                     ___lodiv@counter:
  3188                           	opt callstack 0
  3189                           
  3190                           ; 1 bytes @ 0x47
  3191  0000A7                     	ds	1
  3192  0000A8                     pad@i:
  3193                           	opt callstack 0
  3194  0000A8                     stoa@w:
  3195                           	opt callstack 0
  3196                           
  3197                           ; 2 bytes @ 0x48
  3198  0000A8                     	ds	2
  3199  0000AA                     pad@w:
  3200                           	opt callstack 0
  3201  0000AA                     stoa@cp:
  3202                           	opt callstack 0
  3203                           
  3204                           ; 2 bytes @ 0x4A
  3205  0000AA                     	ds	1
  3206  0000AB                     lcd_draw_char@j:
  3207                           	opt callstack 0
  3208                           
  3209                           ; 1 bytes @ 0x4B
  3210  0000AB                     	ds	1
  3211  0000AC                     ?_ctoa:
  3212                           	opt callstack 0
  3213  0000AC                     lcd_draw_char@k:
  3214                           	opt callstack 0
  3215  0000AC                     ctoa@fp:
  3216                           	opt callstack 0
  3217  0000AC                     stoa@p:
  3218                           	opt callstack 0
  3219                           
  3220                           ; 2 bytes @ 0x4C
  3221  0000AC                     	ds	1
  3222  0000AD                     lcd_draw_char@i:
  3223                           	opt callstack 0
  3224                           
  3225                           ; 1 bytes @ 0x4D
  3226  0000AD                     	ds	1
  3227  0000AE                     ctoa@c:
  3228                           	opt callstack 0
  3229  0000AE                     stoa@l:
  3230                           	opt callstack 0
  3231                           
  3232                           ; 2 bytes @ 0x4E
  3233  0000AE                     	ds	1
  3234  0000AF                     ctoa@w:
  3235                           	opt callstack 0
  3236                           
  3237                           ; 2 bytes @ 0x4F
  3238  0000AF                     	ds	2
  3239  0000B1                     
  3240                           ; 1 bytes @ 0x51
  3241                           
  3242                           	psect	cstackCOMRAM
  3243  000001                     __pcstackCOMRAM:
  3244                           	opt callstack 0
  3245  000001                     ?i2___wmul:
  3246                           	opt callstack 0
  3247  000001                     ?i2_isalpha:
  3248                           	opt callstack 0
  3249  000001                     ?i2_isdigit:
  3250                           	opt callstack 0
  3251  000001                     ?i2_isspace:
  3252                           	opt callstack 0
  3253  000001                     ?i2_isupper:
  3254                           	opt callstack 0
  3255  000001                     ?i2_strlen:
  3256                           	opt callstack 0
  3257  000001                     ?i2_strncmp:
  3258                           	opt callstack 0
  3259  000001                     ?i2_islower:
  3260                           	opt callstack 0
  3261  000001                     ?i2___aodiv:
  3262                           	opt callstack 0
  3263  000001                     ?i2___aomod:
  3264                           	opt callstack 0
  3265  000001                     ?i2___lodiv:
  3266                           	opt callstack 0
  3267  000001                     ?i2___lomod:
  3268                           	opt callstack 0
  3269  000001                     i2EUSART1_Write@txData:
  3270                           	opt callstack 0
  3271  000001                     i2TMR0_WriteTimer@timerVal:
  3272                           	opt callstack 0
  3273  000001                     i2___wmul@multiplier:
  3274                           	opt callstack 0
  3275  000001                     i2isalpha@c:
  3276                           	opt callstack 0
  3277  000001                     i2isdigit@c:
  3278                           	opt callstack 0
  3279  000001                     i2isspace@c:
  3280                           	opt callstack 0
  3281  000001                     i2isupper@c:
  3282                           	opt callstack 0
  3283  000001                     i2strlen@s:
  3284                           	opt callstack 0
  3285  000001                     i2strncmp@_l:
  3286                           	opt callstack 0
  3287  000001                     i2islower@c:
  3288                           	opt callstack 0
  3289  000001                     i2___aodiv@dividend:
  3290                           	opt callstack 0
  3291  000001                     i2___aomod@dividend:
  3292                           	opt callstack 0
  3293  000001                     i2___lodiv@dividend:
  3294                           	opt callstack 0
  3295  000001                     i2___lomod@dividend:
  3296                           	opt callstack 0
  3297                           
  3298                           ; 8 bytes @ 0x0
  3299  000001                     	ds	1
  3300  000002                     i2putch@txData:
  3301                           	opt callstack 0
  3302                           
  3303                           ; 1 bytes @ 0x1
  3304  000002                     	ds	1
  3305  000003                     ??i2_isalpha:
  3306  000003                     ??i2_isdigit:
  3307  000003                     ??i2_isspace:
  3308  000003                     ??i2_isupper:
  3309  000003                     ??i2_islower:
  3310  000003                     i2___wmul@multiplicand:
  3311                           	opt callstack 0
  3312  000003                     i2fputc@c:
  3313                           	opt callstack 0
  3314  000003                     i2strlen@a:
  3315                           	opt callstack 0
  3316  000003                     i2strncmp@_r:
  3317                           	opt callstack 0
  3318                           
  3319                           ; 2 bytes @ 0x2
  3320  000003                     	ds	2
  3321  000005                     i2___wmul@product:
  3322                           	opt callstack 0
  3323  000005                     i2fputc@fp:
  3324                           	opt callstack 0
  3325  000005                     i2strncmp@n:
  3326                           	opt callstack 0
  3327                           
  3328                           ; 2 bytes @ 0x4
  3329  000005                     	ds	2
  3330  000007                     ??i2_fputc:
  3331  000007                     ??i2_strncmp:
  3332  000007                     ?i2_toupper:
  3333                           	opt callstack 0
  3334  000007                     i2_isspace$2463:
  3335                           	opt callstack 0
  3336  000007                     i2toupper@c:
  3337                           	opt callstack 0
  3338                           
  3339                           ; 2 bytes @ 0x6
  3340  000007                     	ds	1
  3341  000008                     ?i2_atoi:
  3342                           	opt callstack 0
  3343  000008                     i2atoi@s:
  3344                           	opt callstack 0
  3345  000008                     i2strncmp@l:
  3346                           	opt callstack 0
  3347                           
  3348                           ; 2 bytes @ 0x7
  3349  000008                     	ds	1
  3350  000009                     ??i2_toupper:
  3351  000009                     i2___aodiv@divisor:
  3352                           	opt callstack 0
  3353  000009                     i2___aomod@divisor:
  3354                           	opt callstack 0
  3355  000009                     i2___lodiv@divisor:
  3356                           	opt callstack 0
  3357  000009                     i2___lomod@divisor:
  3358                           	opt callstack 0
  3359                           
  3360                           ; 8 bytes @ 0x8
  3361  000009                     	ds	1
  3362  00000A                     ??i2_atoi:
  3363  00000A                     i2strncmp@r:
  3364                           	opt callstack 0
  3365                           
  3366                           ; 2 bytes @ 0x9
  3367  00000A                     	ds	2
  3368  00000C                     ?i2_stoa:
  3369                           	opt callstack 0
  3370  00000C                     i2stoa@fp:
  3371                           	opt callstack 0
  3372  00000C                     i2fputs@s:
  3373                           	opt callstack 0
  3374                           
  3375                           ; 2 bytes @ 0xB
  3376  00000C                     	ds	1
  3377  00000D                     i2_toupper$2550:
  3378                           	opt callstack 0
  3379                           
  3380                           ; 2 bytes @ 0xC
  3381  00000D                     	ds	1
  3382  00000E                     i2stoa@s:
  3383                           	opt callstack 0
  3384  00000E                     i2atoi@neg:
  3385                           	opt callstack 0
  3386  00000E                     i2fputs@fp:
  3387                           	opt callstack 0
  3388                           
  3389                           ; 2 bytes @ 0xD
  3390  00000E                     	ds	2
  3391  000010                     ??i2_stoa:
  3392  000010                     i2fputs@c:
  3393                           	opt callstack 0
  3394  000010                     i2_atoi$2436:
  3395                           	opt callstack 0
  3396                           
  3397                           ; 2 bytes @ 0xF
  3398  000010                     	ds	1
  3399  000011                     i2___aodiv@counter:
  3400                           	opt callstack 0
  3401  000011                     i2___aomod@counter:
  3402                           	opt callstack 0
  3403  000011                     i2___lomod@counter:
  3404                           	opt callstack 0
  3405  000011                     i2fputs@i:
  3406                           	opt callstack 0
  3407  000011                     i2stoa@nuls:
  3408                           	opt callstack 0
  3409  000011                     i2___lodiv@quotient:
  3410                           	opt callstack 0
  3411                           
  3412                           ; 8 bytes @ 0x10
  3413  000011                     	ds	1
  3414  000012                     i2___aodiv@sign:
  3415                           	opt callstack 0
  3416  000012                     i2___aomod@sign:
  3417                           	opt callstack 0
  3418  000012                     i2_atoi$2438:
  3419                           	opt callstack 0
  3420                           
  3421                           ; 2 bytes @ 0x11
  3422  000012                     	ds	1
  3423  000013                     ?i2_pad:
  3424                           	opt callstack 0
  3425  000013                     ?i2_abs:
  3426                           	opt callstack 0
  3427  000013                     i2pad@fp:
  3428                           	opt callstack 0
  3429  000013                     i2abs@a:
  3430                           	opt callstack 0
  3431  000013                     i2___aodiv@quotient:
  3432                           	opt callstack 0
  3433                           
  3434                           ; 8 bytes @ 0x12
  3435  000013                     	ds	1
  3436  000014                     i2_atoi$2437:
  3437                           	opt callstack 0
  3438                           
  3439                           ; 1 bytes @ 0x13
  3440  000014                     	ds	1
  3441  000015                     ??i2_abs:
  3442  000015                     i2pad@buf:
  3443                           	opt callstack 0
  3444  000015                     i2atoi@n:
  3445                           	opt callstack 0
  3446                           
  3447                           ; 2 bytes @ 0x14
  3448  000015                     	ds	2
  3449  000017                     i2pad@p:
  3450                           	opt callstack 0
  3451                           
  3452                           ; 2 bytes @ 0x16
  3453  000017                     	ds	1
  3454  000018                     i2stoa@i:
  3455                           	opt callstack 0
  3456                           
  3457                           ; 2 bytes @ 0x17
  3458  000018                     	ds	1
  3459  000019                     ??i2_pad:
  3460  000019                     i2___lodiv@counter:
  3461                           	opt callstack 0
  3462                           
  3463                           ; 1 bytes @ 0x18
  3464  000019                     	ds	1
  3465  00001A                     i2pad@i:
  3466                           	opt callstack 0
  3467  00001A                     i2stoa@w:
  3468                           	opt callstack 0
  3469                           
  3470                           ; 2 bytes @ 0x19
  3471  00001A                     	ds	2
  3472  00001C                     i2pad@w:
  3473                           	opt callstack 0
  3474  00001C                     i2stoa@cp:
  3475                           	opt callstack 0
  3476                           
  3477                           ; 2 bytes @ 0x1B
  3478  00001C                     	ds	2
  3479  00001E                     ?i2_ctoa:
  3480                           	opt callstack 0
  3481  00001E                     ?i2_dtoa:
  3482                           	opt callstack 0
  3483  00001E                     ?i2_otoa:
  3484                           	opt callstack 0
  3485  00001E                     ?i2_utoa:
  3486                           	opt callstack 0
  3487  00001E                     ?i2_xtoa:
  3488                           	opt callstack 0
  3489  00001E                     i2ctoa@fp:
  3490                           	opt callstack 0
  3491  00001E                     i2dtoa@fp:
  3492                           	opt callstack 0
  3493  00001E                     i2otoa@fp:
  3494                           	opt callstack 0
  3495  00001E                     i2stoa@p:
  3496                           	opt callstack 0
  3497  00001E                     i2utoa@fp:
  3498                           	opt callstack 0
  3499  00001E                     i2xtoa@fp:
  3500                           	opt callstack 0
  3501                           
  3502                           ; 2 bytes @ 0x1D
  3503  00001E                     	ds	2
  3504  000020                     i2ctoa@c:
  3505                           	opt callstack 0
  3506  000020                     i2stoa@l:
  3507                           	opt callstack 0
  3508  000020                     i2dtoa@d:
  3509                           	opt callstack 0
  3510  000020                     i2otoa@d:
  3511                           	opt callstack 0
  3512  000020                     i2utoa@d:
  3513                           	opt callstack 0
  3514  000020                     i2xtoa@d:
  3515                           	opt callstack 0
  3516                           
  3517                           ; 8 bytes @ 0x1F
  3518  000020                     	ds	1
  3519  000021                     i2ctoa@w:
  3520                           	opt callstack 0
  3521                           
  3522                           ; 2 bytes @ 0x20
  3523  000021                     	ds	7
  3524  000028                     ??i2_dtoa:
  3525  000028                     ??i2_otoa:
  3526  000028                     ??i2_utoa:
  3527  000028                     i2xtoa@x:
  3528                           	opt callstack 0
  3529                           
  3530                           ; 1 bytes @ 0x27
  3531  000028                     	ds	1
  3532  000029                     ??i2_xtoa:
  3533                           
  3534                           ; 1 bytes @ 0x28
  3535  000029                     	ds	7
  3536  000030                     i2_dtoa$1823:
  3537                           	opt callstack 0
  3538  000030                     i2otoa@p:
  3539                           	opt callstack 0
  3540  000030                     i2utoa@p:
  3541                           	opt callstack 0
  3542                           
  3543                           ; 2 bytes @ 0x2F
  3544  000030                     	ds	1
  3545  000031                     i2_xtoa$1859:
  3546                           	opt callstack 0
  3547                           
  3548                           ; 2 bytes @ 0x30
  3549  000031                     	ds	1
  3550  000032                     i2dtoa@p:
  3551                           	opt callstack 0
  3552  000032                     i2otoa@t:
  3553                           	opt callstack 0
  3554  000032                     i2utoa@w:
  3555                           	opt callstack 0
  3556                           
  3557                           ; 2 bytes @ 0x31
  3558  000032                     	ds	1
  3559  000033                     i2_xtoa$1860:
  3560                           	opt callstack 0
  3561                           
  3562                           ; 2 bytes @ 0x32
  3563  000033                     	ds	1
  3564  000034                     i2dtoa@w:
  3565                           	opt callstack 0
  3566  000034                     i2otoa@w:
  3567                           	opt callstack 0
  3568  000034                     i2utoa@n:
  3569                           	opt callstack 0
  3570                           
  3571                           ; 8 bytes @ 0x33
  3572  000034                     	ds	1
  3573  000035                     i2xtoa@p:
  3574                           	opt callstack 0
  3575                           
  3576                           ; 2 bytes @ 0x34
  3577  000035                     	ds	1
  3578  000036                     i2dtoa@s:
  3579                           	opt callstack 0
  3580  000036                     i2otoa@n:
  3581                           	opt callstack 0
  3582                           
  3583                           ; 8 bytes @ 0x35
  3584  000036                     	ds	1
  3585  000037                     i2xtoa@w:
  3586                           	opt callstack 0
  3587                           
  3588                           ; 2 bytes @ 0x36
  3589  000037                     	ds	1
  3590  000038                     i2dtoa@n:
  3591                           	opt callstack 0
  3592                           
  3593                           ; 8 bytes @ 0x37
  3594  000038                     	ds	1
  3595  000039                     i2xtoa@n:
  3596                           	opt callstack 0
  3597                           
  3598                           ; 8 bytes @ 0x38
  3599  000039                     	ds	3
  3600  00003C                     i2utoa@i:
  3601                           	opt callstack 0
  3602                           
  3603                           ; 2 bytes @ 0x3B
  3604  00003C                     	ds	2
  3605  00003E                     i2otoa@i:
  3606                           	opt callstack 0
  3607                           
  3608                           ; 2 bytes @ 0x3D
  3609  00003E                     	ds	2
  3610  000040                     i2dtoa@i:
  3611                           	opt callstack 0
  3612                           
  3613                           ; 2 bytes @ 0x3F
  3614  000040                     	ds	1
  3615  000041                     i2xtoa@i:
  3616                           	opt callstack 0
  3617                           
  3618                           ; 2 bytes @ 0x40
  3619  000041                     	ds	2
  3620  000043                     i2xtoa@c:
  3621                           	opt callstack 0
  3622                           
  3623                           ; 2 bytes @ 0x42
  3624  000043                     	ds	2
  3625  000045                     ?i2_vfpfcnvrt:
  3626                           	opt callstack 0
  3627  000045                     i2vfpfcnvrt@fp:
  3628                           	opt callstack 0
  3629                           
  3630                           ; 2 bytes @ 0x44
  3631  000045                     	ds	2
  3632  000047                     i2vfpfcnvrt@fmt:
  3633                           	opt callstack 0
  3634                           
  3635                           ; 2 bytes @ 0x46
  3636  000047                     	ds	2
  3637  000049                     i2vfpfcnvrt@ap:
  3638                           	opt callstack 0
  3639                           
  3640                           ; 2 bytes @ 0x48
  3641  000049                     	ds	2
  3642  00004B                     ??i2_vfpfcnvrt:
  3643                           
  3644                           ; 1 bytes @ 0x4A
  3645  00004B                     	ds	4
  3646  00004F                     ?i2_vfprintf:
  3647                           	opt callstack 0
  3648  00004F                     i2vfprintf@fp:
  3649                           	opt callstack 0
  3650                           
  3651                           ; 2 bytes @ 0x4E
  3652  00004F                     	ds	2
  3653  000051                     i2vfprintf@fmt:
  3654                           	opt callstack 0
  3655                           
  3656                           ; 2 bytes @ 0x50
  3657  000051                     	ds	2
  3658  000053                     i2vfprintf@ap:
  3659                           	opt callstack 0
  3660                           
  3661                           ; 2 bytes @ 0x52
  3662  000053                     	ds	2
  3663  000055                     i2vfprintf@cfmt:
  3664                           	opt callstack 0
  3665                           
  3666                           ; 2 bytes @ 0x54
  3667  000055                     	ds	2
  3668  000057                     
  3669                           ; 1 bytes @ 0x56
  3670  000057                     	ds	2
  3671  000059                     i2printf@ap:
  3672                           	opt callstack 0
  3673                           
  3674                           ; 2 bytes @ 0x58
  3675  000059                     	ds	2
  3676  00005B                     
  3677                           ; 1 bytes @ 0x5A
  3678 ;;
  3679 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  3680 ;;
  3681 ;; *************** function _main *****************
  3682 ;; Defined at:
  3683 ;;		line 48 in file "main.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;		None
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;  dummy           2    0        int 
  3688 ;; Return value:  Size  Location     Type
  3689 ;;                  1    wreg      void 
  3690 ;; Registers used:
  3691 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3698 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3699 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3700 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3701 ;;Total ram usage:        7 bytes
  3702 ;; Hardware stack levels required when called:   23
  3703 ;; This function calls:
  3704 ;;		_ADC_GetConversion
  3705 ;;		_DATAEE_WriteByte
  3706 ;;		_EUSART1_Read
  3707 ;;		_IOCB4_SetInterruptHandler
  3708 ;;		_SPI_Open
  3709 ;;		_SYSTEM_Initialize
  3710 ;;		_TMR0_WriteTimer
  3711 ;;		___aldiv
  3712 ;;		___lmul
  3713 ;;		_lcd_draw_string
  3714 ;;		_lcd_init
  3715 ;;		_printf
  3716 ;;		_read_from_usart
  3717 ;;		_snprintf
  3718 ;; This function is called by:
  3719 ;;		Startup code after reset
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723                           	psect	text0
  3724  0035C0                     __ptext0:
  3725                           	opt callstack 0
  3726  0035C0                     _main:
  3727                           	opt callstack 8
  3728  0035C0                     
  3729                           ;main.c: 49:     int dummy;;main.c: 52:     SYSTEM_Initialize();
  3730  0035C0  EC03  F034         	call	_SYSTEM_Initialize	;wreg free
  3731  0035C4                     
  3732                           ;main.c: 53:     SPI_Open(SPI_DEFAULT);
  3733  0035C4  0E00               	movlw	0
  3734  0035C6  ECD3  F02D         	call	_SPI_Open
  3735  0035CA                     
  3736                           ;main.c: 54:     lcd_init();
  3737  0035CA  ECEC  F012         	call	_lcd_init	;wreg free
  3738  0035CE  5081               	movf	129,w,c	;volatile
  3739  0035D0                     
  3740                           ;main.c: 58:     INTCONbits.RBIF = 0;
  3741  0035D0  90F2               	bcf	242,0,c	;volatile
  3742  0035D2                     
  3743                           ;main.c: 61:     IOCB4_SetInterruptHandler(INTERRUPT_S1_CALLBACK);
  3744  0035D2  0E9A               	movlw	low _INTERRUPT_S1_CALLBACK
  3745  0035D4  0100               	movlb	0	; () banked
  3746  0035D6  6F8F               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  3747  0035D8  0E60               	movlw	high _INTERRUPT_S1_CALLBACK
  3748  0035DA  6F90               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3749  0035DC  EC94  F034         	call	_IOCB4_SetInterruptHandler	;wreg free
  3750  0035E0                     
  3751                           ;main.c: 68:     (INTCONbits.GIE = 1);
  3752  0035E0  8EF2               	bsf	242,7,c	;volatile
  3753  0035E2                     
  3754                           ;main.c: 78:     lcd_draw_string(60, 220, "EAU          SEEV         AULA_5", 0xFFFF, 0x
      +                          0000);
  3755  0035E2  0E00               	movlw	0
  3756  0035E4  0101               	movlb	1	; () banked
  3757  0035E6  6F01               	movwf	(lcd_draw_string@x+1)& (0+255),b
  3758  0035E8  0E3C               	movlw	60
  3759  0035EA  6F00               	movwf	lcd_draw_string@x& (0+255),b
  3760  0035EC  0E00               	movlw	0
  3761  0035EE  6F03               	movwf	(lcd_draw_string@y+1)& (0+255),b
  3762  0035F0  0EDC               	movlw	220
  3763  0035F2  6F02               	movwf	lcd_draw_string@y& (0+255),b
  3764  0035F4  0E54               	movlw	low STR_2
  3765  0035F6  6F04               	movwf	lcd_draw_string@pS& (0+255),b
  3766  0035F8  0EFF               	movlw	high STR_2
  3767  0035FA  6F05               	movwf	(lcd_draw_string@pS+1)& (0+255),b
  3768  0035FC  0EFF               	movlw	255
  3769  0035FE  6F07               	movwf	(lcd_draw_string@fg_color+1)& (0+255),b
  3770  003600  6906               	setf	lcd_draw_string@fg_color& (0+255),b
  3771  003602  0E00               	movlw	0
  3772  003604  6F09               	movwf	(lcd_draw_string@bg_color+1)& (0+255),b
  3773  003606  0E00               	movlw	0
  3774  003608  6F08               	movwf	lcd_draw_string@bg_color& (0+255),b
  3775  00360A  EC87  F027         	call	_lcd_draw_string	;wreg free
  3776  00360E                     
  3777                           ;main.c: 79:     TMR0_WriteTimer(0x00);
  3778  00360E  0E00               	movlw	0
  3779  003610  0100               	movlb	0	; () banked
  3780  003612  6F90               	movwf	(TMR0_WriteTimer@timerVal+1)& (0+255),b
  3781  003614  0E00               	movlw	0
  3782  003616  6F8F               	movwf	TMR0_WriteTimer@timerVal& (0+255),b
  3783  003618  EC8E  F034         	call	_TMR0_WriteTimer	;wreg free
  3784  00361C                     l9725:
  3785                           
  3786                           ;main.c: 95:         adc_value = ADC_GetConversion(POT_PIN);
  3787  00361C  0E00               	movlw	0
  3788  00361E  ECB5  F031         	call	_ADC_GetConversion
  3789  003622  C08F  F187         	movff	?_ADC_GetConversion,_adc_value
  3790  003626  C090  F188         	movff	?_ADC_GetConversion+1,_adc_value+1
  3791  00362A                     
  3792                           ;main.c: 96:         adc_perc = (long int) adc_value * 100 / 4095;
  3793  00362A  C187  F08F         	movff	_adc_value,___lmul@multiplier
  3794  00362E  C188  F090         	movff	_adc_value+1,___lmul@multiplier+1
  3795  003632  0100               	movlb	0	; () banked
  3796  003634  0E00               	movlw	0
  3797  003636  BF90               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
  3798  003638  0EFF               	movlw	-1
  3799  00363A  6F91               	movwf	(___lmul@multiplier+2)& (0+255),b
  3800  00363C  6F92               	movwf	(___lmul@multiplier+3)& (0+255),b
  3801  00363E  0E64               	movlw	100
  3802  003640  6F93               	movwf	___lmul@multiplicand& (0+255),b
  3803  003642  0E00               	movlw	0
  3804  003644  6F94               	movwf	(___lmul@multiplicand+1)& (0+255),b
  3805  003646  0E00               	movlw	0
  3806  003648  6F95               	movwf	(___lmul@multiplicand+2)& (0+255),b
  3807  00364A  0E00               	movlw	0
  3808  00364C  6F96               	movwf	(___lmul@multiplicand+3)& (0+255),b
  3809  00364E  EC71  F02E         	call	___lmul	;wreg free
  3810  003652  C08F  F09B         	movff	?___lmul,___aldiv@dividend
  3811  003656  C090  F09C         	movff	?___lmul+1,___aldiv@dividend+1
  3812  00365A  C091  F09D         	movff	?___lmul+2,___aldiv@dividend+2
  3813  00365E  C092  F09E         	movff	?___lmul+3,___aldiv@dividend+3
  3814  003662  0EFF               	movlw	255
  3815  003664  0100               	movlb	0	; () banked
  3816  003666  6F9F               	movwf	___aldiv@divisor& (0+255),b
  3817  003668  0E0F               	movlw	15
  3818  00366A  6FA0               	movwf	(___aldiv@divisor+1)& (0+255),b
  3819  00366C  0E00               	movlw	0
  3820  00366E  6FA1               	movwf	(___aldiv@divisor+2)& (0+255),b
  3821  003670  0E00               	movlw	0
  3822  003672  6FA2               	movwf	(___aldiv@divisor+3)& (0+255),b
  3823  003674  ECAB  F028         	call	___aldiv	;wreg free
  3824  003678  C09B  F0B1         	movff	?___aldiv,_adc_perc
  3825  00367C  C09C  F0B2         	movff	?___aldiv+1,_adc_perc+1
  3826  003680  C09D  F0B3         	movff	?___aldiv+2,_adc_perc+2
  3827  003684  C09E  F0B4         	movff	?___aldiv+3,_adc_perc+3
  3828  003688                     
  3829                           ;main.c: 97:         snprintf(string, sizeof (string), "POT: %3d %%", adc_perc);
  3830  003688  0EA9               	movlw	low _string
  3831  00368A  0101               	movlb	1	; () banked
  3832  00368C  6F6A               	movwf	snprintf@s& (0+255),b
  3833  00368E  0E01               	movlw	high _string
  3834  003690  6F6B               	movwf	(snprintf@s+1)& (0+255),b
  3835  003692  0E00               	movlw	0
  3836  003694  6F6D               	movwf	(snprintf@n+1)& (0+255),b
  3837  003696  0E1E               	movlw	30
  3838  003698  6F6C               	movwf	snprintf@n& (0+255),b
  3839  00369A  0EC1               	movlw	low STR_3
  3840  00369C  6F6E               	movwf	snprintf@fmt& (0+255),b
  3841  00369E  0EFF               	movlw	high STR_3
  3842  0036A0  6F6F               	movwf	(snprintf@fmt+1)& (0+255),b
  3843  0036A2  C0B1  F170         	movff	_adc_perc,?_snprintf+6
  3844  0036A6  C0B2  F171         	movff	_adc_perc+1,?_snprintf+7
  3845  0036AA  C0B3  F172         	movff	_adc_perc+2,?_snprintf+8
  3846  0036AE  C0B4  F173         	movff	_adc_perc+3,?_snprintf+9
  3847  0036B2  EC31  F033         	call	_snprintf	;wreg free
  3848  0036B6                     
  3849                           ;main.c: 98:         lcd_draw_string(100, 100, string, 0xFFFF, 0x0000);
  3850  0036B6  0E00               	movlw	0
  3851  0036B8  0101               	movlb	1	; () banked
  3852  0036BA  6F01               	movwf	(lcd_draw_string@x+1)& (0+255),b
  3853  0036BC  0E64               	movlw	100
  3854  0036BE  6F00               	movwf	lcd_draw_string@x& (0+255),b
  3855  0036C0  0E00               	movlw	0
  3856  0036C2  6F03               	movwf	(lcd_draw_string@y+1)& (0+255),b
  3857  0036C4  0E64               	movlw	100
  3858  0036C6  6F02               	movwf	lcd_draw_string@y& (0+255),b
  3859  0036C8  0EA9               	movlw	low _string
  3860  0036CA  6F04               	movwf	lcd_draw_string@pS& (0+255),b
  3861  0036CC  0E01               	movlw	high _string
  3862  0036CE  6F05               	movwf	(lcd_draw_string@pS+1)& (0+255),b
  3863  0036D0  0EFF               	movlw	255
  3864  0036D2  6F07               	movwf	(lcd_draw_string@fg_color+1)& (0+255),b
  3865  0036D4  6906               	setf	lcd_draw_string@fg_color& (0+255),b
  3866  0036D6  0E00               	movlw	0
  3867  0036D8  6F09               	movwf	(lcd_draw_string@bg_color+1)& (0+255),b
  3868  0036DA  0E00               	movlw	0
  3869  0036DC  6F08               	movwf	lcd_draw_string@bg_color& (0+255),b
  3870  0036DE  EC87  F027         	call	_lcd_draw_string	;wreg free
  3871  0036E2                     
  3872                           ;main.c: 101:         if (adc_perc >= turn_on_value) {
  3873  0036E2  C1C9  F178         	movff	_turn_on_value,??_main
  3874  0036E6  C1CA  F179         	movff	_turn_on_value+1,??_main+1
  3875  0036EA  0E00               	movlw	0
  3876  0036EC  0101               	movlb	1	; () banked
  3877  0036EE  BF79               	btfsc	(??_main+1)& (0+255),7,b
  3878  0036F0  0EFF               	movlw	255
  3879  0036F2  6F7A               	movwf	(??_main+2)& (0+255),b
  3880  0036F4  6F7B               	movwf	(??_main+3)& (0+255),b
  3881  0036F6  5178               	movf	??_main& (0+255),w,b
  3882  0036F8  0100               	movlb	0	; () banked
  3883  0036FA  5DB1               	subwf	_adc_perc& (0+255),w,b
  3884  0036FC  0101               	movlb	1	; () banked
  3885  0036FE  5179               	movf	(??_main+1)& (0+255),w,b
  3886  003700  0100               	movlb	0	; () banked
  3887  003702  59B2               	subwfb	(_adc_perc+1)& (0+255),w,b
  3888  003704  0101               	movlb	1	; () banked
  3889  003706  517A               	movf	(??_main+2)& (0+255),w,b
  3890  003708  0100               	movlb	0	; () banked
  3891  00370A  59B3               	subwfb	(_adc_perc+2)& (0+255),w,b
  3892  00370C  51B4               	movf	(_adc_perc+3)& (0+255),w,b
  3893  00370E  0A80               	xorlw	128
  3894  003710  0101               	movlb	1	; () banked
  3895  003712  6F7C               	movwf	(??_main+4)& (0+255),b
  3896  003714  517B               	movf	(??_main+3)& (0+255),w,b
  3897  003716  0A80               	xorlw	128
  3898  003718  597C               	subwfb	(??_main+4)& (0+255),w,b
  3899  00371A  A0D8               	btfss	status,0,c
  3900  00371C  EF92  F01B         	goto	u12211
  3901  003720  EF94  F01B         	goto	u12210
  3902  003724                     u12211:
  3903  003724  EF95  F01B         	goto	l9735
  3904  003728                     u12210:
  3905  003728                     
  3906                           ; BSR set to: 1
  3907  003728  8A89               	bsf	137,5,c	;volatile
  3908  00372A                     l9735:
  3909                           
  3910                           ; BSR set to: 1
  3911                           ;main.c: 104:         if (adc_perc <= turn_off_value) {
  3912  00372A  C1C7  F178         	movff	_turn_off_value,??_main
  3913  00372E  C1C8  F179         	movff	_turn_off_value+1,??_main+1
  3914  003732  0E00               	movlw	0
  3915  003734  BF79               	btfsc	(??_main+1)& (0+255),7,b
  3916  003736  0EFF               	movlw	255
  3917  003738  6F7A               	movwf	(??_main+2)& (0+255),b
  3918  00373A  6F7B               	movwf	(??_main+3)& (0+255),b
  3919  00373C  0100               	movlb	0	; () banked
  3920  00373E  51B1               	movf	_adc_perc& (0+255),w,b
  3921  003740  0101               	movlb	1	; () banked
  3922  003742  5D78               	subwf	??_main& (0+255),w,b
  3923  003744  0100               	movlb	0	; () banked
  3924  003746  51B2               	movf	(_adc_perc+1)& (0+255),w,b
  3925  003748  0101               	movlb	1	; () banked
  3926  00374A  5979               	subwfb	(??_main+1)& (0+255),w,b
  3927  00374C  0100               	movlb	0	; () banked
  3928  00374E  51B3               	movf	(_adc_perc+2)& (0+255),w,b
  3929  003750  0101               	movlb	1	; () banked
  3930  003752  597A               	subwfb	(??_main+2)& (0+255),w,b
  3931  003754  517B               	movf	(??_main+3)& (0+255),w,b
  3932  003756  0A80               	xorlw	128
  3933  003758  6F7C               	movwf	(??_main+4)& (0+255),b
  3934  00375A  0100               	movlb	0	; () banked
  3935  00375C  51B4               	movf	(_adc_perc+3)& (0+255),w,b
  3936  00375E  0A80               	xorlw	128
  3937  003760  0101               	movlb	1	; () banked
  3938  003762  597C               	subwfb	(??_main+4)& (0+255),w,b
  3939  003764  A0D8               	btfss	status,0,c
  3940  003766  EFB7  F01B         	goto	u12221
  3941  00376A  EFB9  F01B         	goto	u12220
  3942  00376E                     u12221:
  3943  00376E  EFBA  F01B         	goto	l9737
  3944  003772                     u12220:
  3945  003772                     
  3946                           ; BSR set to: 1
  3947  003772  9A89               	bcf	137,5,c	;volatile
  3948  003774                     l9737:
  3949                           
  3950                           ; BSR set to: 1
  3951                           ;main.c: 110:             rx_data=EUSART1_Read();
  3952  003774  EC8B  F033         	call	_EUSART1_Read	;wreg free
  3953  003778  0101               	movlb	1	; () banked
  3954  00377A  6F78               	movwf	??_main& (0+255),b
  3955  00377C  5178               	movf	??_main& (0+255),w,b
  3956  00377E  6F81               	movwf	_rx_data& (0+255),b
  3957  003780  6B82               	clrf	(_rx_data+1)& (0+255),b
  3958  003782                     
  3959                           ; BSR set to: 1
  3960                           ;main.c: 111:             if (rx_data==32){
  3961  003782  0E20               	movlw	32
  3962  003784  1981               	xorwf	_rx_data& (0+255),w,b
  3963  003786  1182               	iorwf	(_rx_data+1)& (0+255),w,b
  3964  003788  A4D8               	btfss	status,2,c
  3965  00378A  EFC9  F01B         	goto	u12231
  3966  00378E  EFCB  F01B         	goto	u12230
  3967  003792                     u12231:
  3968  003792  EF0E  F01B         	goto	l9725
  3969  003796                     u12230:
  3970  003796                     
  3971                           ; BSR set to: 1
  3972                           ;main.c: 113:                 printf("Configuration MODE \n\r");
  3973  003796  0E75               	movlw	low STR_4
  3974  003798  6F54               	movwf	printf@fmt& (0+255),b
  3975  00379A  0EFF               	movlw	high STR_4
  3976  00379C  6F55               	movwf	(printf@fmt+1)& (0+255),b
  3977  00379E  ECB5  F033         	call	_printf	;wreg free
  3978                           
  3979                           ;main.c: 114:                 printf("\n\rACTUAL TURN VALUES  ON: %d OFF: %d\n\r", turn_
      +                          on_value, turn_off_value);
  3980  0037A2  0E2D               	movlw	low STR_5
  3981  0037A4  0101               	movlb	1	; () banked
  3982  0037A6  6F54               	movwf	printf@fmt& (0+255),b
  3983  0037A8  0EFF               	movlw	high STR_5
  3984  0037AA  6F55               	movwf	(printf@fmt+1)& (0+255),b
  3985  0037AC  C1C9  F156         	movff	_turn_on_value,?_printf+2
  3986  0037B0  C1CA  F157         	movff	_turn_on_value+1,?_printf+3
  3987  0037B4  C1C7  F158         	movff	_turn_off_value,?_printf+4
  3988  0037B8  C1C8  F159         	movff	_turn_off_value+1,?_printf+5
  3989  0037BC  ECB5  F033         	call	_printf	;wreg free
  3990  0037C0                     l532:
  3991                           
  3992                           ;main.c: 117:                     printf("\n\rTurn ON Value: \n\r");
  3993  0037C0  0EA0               	movlw	low STR_6
  3994  0037C2  0101               	movlb	1	; () banked
  3995  0037C4  6F54               	movwf	printf@fmt& (0+255),b
  3996  0037C6  0EFF               	movlw	high STR_6
  3997  0037C8  6F55               	movwf	(printf@fmt+1)& (0+255),b
  3998  0037CA  ECB5  F033         	call	_printf	;wreg free
  3999  0037CE                     
  4000                           ;main.c: 118:                     turn_on_value = read_from_usart(2);
  4001  0037CE  0E00               	movlw	0
  4002  0037D0  0100               	movlb	0	; () banked
  4003  0037D2  6FA6               	movwf	(read_from_usart@length+1)& (0+255),b
  4004  0037D4  0E02               	movlw	2
  4005  0037D6  6FA5               	movwf	read_from_usart@length& (0+255),b
  4006  0037D8  EC72  F02D         	call	_read_from_usart	;wreg free
  4007  0037DC  C0A5  F1C9         	movff	?_read_from_usart,_turn_on_value
  4008  0037E0  C0A6  F1CA         	movff	?_read_from_usart+1,_turn_on_value+1
  4009  0037E4                     
  4010                           ;main.c: 119:                     a=turn_on_value;
  4011  0037E4  C1C9  F185         	movff	_turn_on_value,_a
  4012  0037E8  C1CA  F186         	movff	_turn_on_value+1,_a+1
  4013  0037EC                     
  4014                           ;main.c: 120:                     printf("\n\rTurn OFF Value: \n\r");
  4015  0037EC  0E8B               	movlw	low STR_7
  4016  0037EE  0101               	movlb	1	; () banked
  4017  0037F0  6F54               	movwf	printf@fmt& (0+255),b
  4018  0037F2  0EFF               	movlw	high STR_7
  4019  0037F4  6F55               	movwf	(printf@fmt+1)& (0+255),b
  4020  0037F6  ECB5  F033         	call	_printf	;wreg free
  4021                           
  4022                           ;main.c: 121:                     turn_off_value = read_from_usart(2);
  4023  0037FA  0E00               	movlw	0
  4024  0037FC  0100               	movlb	0	; () banked
  4025  0037FE  6FA6               	movwf	(read_from_usart@length+1)& (0+255),b
  4026  003800  0E02               	movlw	2
  4027  003802  6FA5               	movwf	read_from_usart@length& (0+255),b
  4028  003804  EC72  F02D         	call	_read_from_usart	;wreg free
  4029  003808  C0A5  F1C7         	movff	?_read_from_usart,_turn_off_value
  4030  00380C  C0A6  F1C8         	movff	?_read_from_usart+1,_turn_off_value+1
  4031  003810                     
  4032                           ;main.c: 122:                     b=turn_off_value;
  4033  003810  C1C7  F183         	movff	_turn_off_value,_b
  4034  003814  C1C8  F184         	movff	_turn_off_value+1,_b+1
  4035  003818                     
  4036                           ;main.c: 123:                 }while (a<=b);
  4037  003818  0101               	movlb	1	; () banked
  4038  00381A  5185               	movf	_a& (0+255),w,b
  4039  00381C  5D83               	subwf	_b& (0+255),w,b
  4040  00381E  5184               	movf	(_b+1)& (0+255),w,b
  4041  003820  0A80               	xorlw	128
  4042  003822  6F78               	movwf	??_main& (0+255),b
  4043  003824  5186               	movf	(_a+1)& (0+255),w,b
  4044  003826  0A80               	xorlw	128
  4045  003828  5978               	subwfb	??_main& (0+255),w,b
  4046  00382A  B0D8               	btfsc	status,0,c
  4047  00382C  EF1A  F01C         	goto	u12241
  4048  003830  EF1C  F01C         	goto	u12240
  4049  003834                     u12241:
  4050  003834  EFE0  F01B         	goto	l532
  4051  003838                     u12240:
  4052  003838                     
  4053                           ; BSR set to: 1
  4054                           ;main.c: 125:                 DATAEE_WriteByte(0x00,turn_on_value);
  4055  003838  0E00               	movlw	0
  4056  00383A  0100               	movlb	0	; () banked
  4057  00383C  6F90               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  4058  00383E  0E00               	movlw	0
  4059  003840  6F8F               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  4060  003842  C1C9  F091         	movff	_turn_on_value,DATAEE_WriteByte@bData
  4061  003846  ECE7  F030         	call	_DATAEE_WriteByte	;wreg free
  4062                           
  4063                           ;main.c: 126:                 DATAEE_WriteByte(0x01,turn_off_value);
  4064  00384A  0E00               	movlw	0
  4065  00384C  0100               	movlb	0	; () banked
  4066  00384E  6F90               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  4067  003850  0E01               	movlw	1
  4068  003852  6F8F               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  4069  003854  C1C7  F091         	movff	_turn_off_value,DATAEE_WriteByte@bData
  4070  003858  ECE7  F030         	call	_DATAEE_WriteByte	;wreg free
  4071  00385C                     
  4072                           ;main.c: 128:                 printf("\n\n\rTURN VALUES SAVED   ON: %d OFF: %d\n\r", tur
      +                          n_on_value, turn_off_value);
  4073  00385C  0E05               	movlw	low STR_8
  4074  00385E  0101               	movlb	1	; () banked
  4075  003860  6F54               	movwf	printf@fmt& (0+255),b
  4076  003862  0EFF               	movlw	high STR_8
  4077  003864  6F55               	movwf	(printf@fmt+1)& (0+255),b
  4078  003866  C1C9  F156         	movff	_turn_on_value,?_printf+2
  4079  00386A  C1CA  F157         	movff	_turn_on_value+1,?_printf+3
  4080  00386E  C1C7  F158         	movff	_turn_off_value,?_printf+4
  4081  003872  C1C8  F159         	movff	_turn_off_value+1,?_printf+5
  4082  003876  ECB5  F033         	call	_printf	;wreg free
  4083  00387A  EF0E  F01B         	goto	l9725
  4084  00387E  EF4F  F000         	goto	start
  4085  003882                     __end_of_main:
  4086                           	opt callstack 0
  4087                           
  4088 ;; *************** function _snprintf *****************
  4089 ;; Defined at:
  4090 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\snprintf.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;  s               2  106[BANK1 ] PTR unsigned char 
  4093 ;;		 -> string(30), 
  4094 ;;  n               2  108[BANK1 ] unsigned int 
  4095 ;;  fmt             2  110[BANK1 ] PTR const unsigned char 
  4096 ;;		 -> STR_3(12), 
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;  ap              2  118[BANK1 ] PTR void [1]
  4099 ;;		 -> ?_snprintf(2), ?_printf(2), 
  4100 ;;  ret             2    0        int 
  4101 ;; Return value:  Size  Location     Type
  4102 ;;                  2  106[BANK1 ] int 
  4103 ;; Registers used:
  4104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4105 ;; Tracked objects:
  4106 ;;		On entry : 0/0
  4107 ;;		On exit  : 0/0
  4108 ;;		Unchanged: 0/0
  4109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4110 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4111 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4113 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4114 ;;Total ram usage:       14 bytes
  4115 ;; Hardware stack levels used:    1
  4116 ;; Hardware stack levels required when called:   22
  4117 ;; This function calls:
  4118 ;;		_vsnprintf
  4119 ;; This function is called by:
  4120 ;;		_main
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           	psect	text1
  4125  006662                     __ptext1:
  4126                           	opt callstack 0
  4127  006662                     _snprintf:
  4128                           	opt callstack 8
  4129  006662  0E70               	movlw	low (?_snprintf+6)
  4130  006664  0101               	movlb	1	; () banked
  4131  006666  6F76               	movwf	snprintf@ap& (0+255),b
  4132  006668  0E01               	movlw	high (?_snprintf+6)
  4133  00666A  6F77               	movwf	(snprintf@ap+1)& (0+255),b
  4134  00666C                     
  4135                           ; BSR set to: 1
  4136  00666C  C16A  F154         	movff	snprintf@s,vsnprintf@s
  4137  006670  C16B  F155         	movff	snprintf@s+1,vsnprintf@s+1
  4138  006674  C16C  F156         	movff	snprintf@n,vsnprintf@n
  4139  006678  C16D  F157         	movff	snprintf@n+1,vsnprintf@n+1
  4140  00667C  C16E  F158         	movff	snprintf@fmt,vsnprintf@fmt
  4141  006680  C16F  F159         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  4142  006684  0E76               	movlw	low snprintf@ap
  4143  006686  6F5A               	movwf	vsnprintf@ap& (0+255),b
  4144  006688  0E01               	movlw	high snprintf@ap
  4145  00668A  6F5B               	movwf	(vsnprintf@ap+1)& (0+255),b
  4146  00668C  EC23  F028         	call	_vsnprintf	;wreg free
  4147  006690  0012               	return		;funcret
  4148  006692                     __end_of_snprintf:
  4149                           	opt callstack 0
  4150                           
  4151 ;; *************** function _vsnprintf *****************
  4152 ;; Defined at:
  4153 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_vsnprintf.c"
  4154 ;; Parameters:    Size  Location     Type
  4155 ;;  s               2   84[BANK1 ] PTR unsigned char 
  4156 ;;		 -> string(30), 
  4157 ;;  n               2   86[BANK1 ] unsigned int 
  4158 ;;  fmt             2   88[BANK1 ] PTR const unsigned char 
  4159 ;;		 -> STR_3(12), 
  4160 ;;  ap              2   90[BANK1 ] PTR PTR void 
  4161 ;;		 -> snprintf@ap(2), 
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;  f               6  100[BANK1 ] struct _IO_FILE
  4164 ;;  cnt             2   98[BANK1 ] int 
  4165 ;; Return value:  Size  Location     Type
  4166 ;;                  2   84[BANK1 ] int 
  4167 ;; Registers used:
  4168 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 0/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4174 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4175 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4176 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4177 ;;      Totals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4178 ;;Total ram usage:       22 bytes
  4179 ;; Hardware stack levels used:    1
  4180 ;; Hardware stack levels required when called:   21
  4181 ;; This function calls:
  4182 ;;		_vfprintf
  4183 ;; This function is called by:
  4184 ;;		_snprintf
  4185 ;; This function uses a non-reentrant model
  4186 ;;
  4187                           
  4188                           	psect	text2
  4189  005046                     __ptext2:
  4190                           	opt callstack 0
  4191  005046                     _vsnprintf:
  4192                           	opt callstack 8
  4193  005046  0E80               	movlw	128
  4194  005048  0101               	movlb	1	; () banked
  4195  00504A  5D57               	subwf	(vsnprintf@n+1)& (0+255),w,b
  4196  00504C  A0D8               	btfss	status,0,c
  4197  00504E  EF2B  F028         	goto	u11951
  4198  005052  EF2D  F028         	goto	u11950
  4199  005056                     u11951:
  4200  005056  EF35  F028         	goto	l9381
  4201  00505A                     u11950:
  4202  00505A                     
  4203                           ; BSR set to: 1
  4204  00505A  0E00               	movlw	0
  4205  00505C  6F7E               	movwf	(_errno+1)& (0+255),b
  4206  00505E  0E4B               	movlw	75
  4207  005060  6F7D               	movwf	_errno& (0+255),b
  4208  005062                     
  4209                           ; BSR set to: 1
  4210  005062  6954               	setf	?_vsnprintf& (0+255),b
  4211  005064  6955               	setf	(?_vsnprintf+1)& (0+255),b
  4212  005066  EFAA  F028         	goto	l1734
  4213  00506A                     l9381:
  4214                           
  4215                           ; BSR set to: 1
  4216  00506A  C154  F164         	movff	vsnprintf@s,vsnprintf@f
  4217  00506E  C155  F165         	movff	vsnprintf@s+1,vsnprintf@f+1
  4218  005072  5157               	movf	(vsnprintf@n+1)& (0+255),w,b
  4219  005074  E109               	bnz	u11960
  4220  005076  0E02               	movlw	2
  4221  005078  5D56               	subwf	vsnprintf@n& (0+255),w,b
  4222  00507A  A0D8               	btfss	status,0,c
  4223  00507C  EF42  F028         	goto	u11961
  4224  005080  EF44  F028         	goto	u11960
  4225  005084                     u11961:
  4226  005084  EF50  F028         	goto	l9387
  4227  005088                     u11960:
  4228  005088                     
  4229                           ; BSR set to: 1
  4230  005088  0EFF               	movlw	255
  4231  00508A  2556               	addwf	vsnprintf@n& (0+255),w,b
  4232  00508C  6F68               	movwf	(vsnprintf@f+4)& (0+255),b
  4233  00508E  0EFF               	movlw	255
  4234  005090  2157               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  4235  005092  6F69               	movwf	(vsnprintf@f+5)& (0+255),b
  4236  005094                     
  4237                           ; BSR set to: 1
  4238  005094  0E00               	movlw	0
  4239  005096  6F67               	movwf	(vsnprintf@f+3)& (0+255),b
  4240  005098  0E00               	movlw	0
  4241  00509A  6F66               	movwf	(vsnprintf@f+2)& (0+255),b
  4242  00509C  EF58  F028         	goto	l9389
  4243  0050A0                     l9387:
  4244                           
  4245                           ; BSR set to: 1
  4246  0050A0  0E00               	movlw	0
  4247  0050A2  6F69               	movwf	(vsnprintf@f+5)& (0+255),b
  4248  0050A4  0E01               	movlw	1
  4249  0050A6  6F68               	movwf	(vsnprintf@f+4)& (0+255),b
  4250  0050A8  0E00               	movlw	0
  4251  0050AA  6F67               	movwf	(vsnprintf@f+3)& (0+255),b
  4252  0050AC  0E01               	movlw	1
  4253  0050AE  6F66               	movwf	(vsnprintf@f+2)& (0+255),b
  4254  0050B0                     l9389:
  4255                           
  4256                           ; BSR set to: 1
  4257  0050B0  0E64               	movlw	low vsnprintf@f
  4258  0050B2  6F4C               	movwf	vfprintf@fp& (0+255),b
  4259  0050B4  0E01               	movlw	high vsnprintf@f
  4260  0050B6  6F4D               	movwf	(vfprintf@fp+1)& (0+255),b
  4261  0050B8  C158  F14E         	movff	vsnprintf@fmt,vfprintf@fmt
  4262  0050BC  C159  F14F         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  4263  0050C0  C15A  F150         	movff	vsnprintf@ap,vfprintf@ap
  4264  0050C4  C15B  F151         	movff	vsnprintf@ap+1,vfprintf@ap+1
  4265  0050C8  ECDA  F02E         	call	_vfprintf	;wreg free
  4266  0050CC  C14C  F162         	movff	?_vfprintf,vsnprintf@cnt
  4267  0050D0  C14D  F163         	movff	?_vfprintf+1,vsnprintf@cnt+1
  4268  0050D4  0101               	movlb	1	; () banked
  4269  0050D6  5156               	movf	vsnprintf@n& (0+255),w,b
  4270  0050D8  1157               	iorwf	(vsnprintf@n+1)& (0+255),w,b
  4271  0050DA  B4D8               	btfsc	status,2,c
  4272  0050DC  EF72  F028         	goto	u11971
  4273  0050E0  EF74  F028         	goto	u11970
  4274  0050E4                     u11971:
  4275  0050E4  EFA6  F028         	goto	l9401
  4276  0050E8                     u11970:
  4277  0050E8                     
  4278                           ; BSR set to: 1
  4279  0050E8  BF63               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  4280  0050EA  EF79  F028         	goto	u11981
  4281  0050EE  EF7B  F028         	goto	u11980
  4282  0050F2                     u11981:
  4283  0050F2  EFA6  F028         	goto	l9401
  4284  0050F6                     u11980:
  4285  0050F6                     
  4286                           ; BSR set to: 1
  4287  0050F6  0EFF               	movlw	255
  4288  0050F8  6F5C               	movwf	??_vsnprintf& (0+255),b
  4289  0050FA  0EFF               	movlw	255
  4290  0050FC  6F5D               	movwf	(??_vsnprintf+1)& (0+255),b
  4291  0050FE  C156  F15E         	movff	vsnprintf@n,??_vsnprintf+2
  4292  005102  C157  F15F         	movff	vsnprintf@n+1,??_vsnprintf+3
  4293  005106  515C               	movf	??_vsnprintf& (0+255),w,b
  4294  005108  275E               	addwf	(??_vsnprintf+2)& (0+255),f,b
  4295  00510A  515D               	movf	(??_vsnprintf+1)& (0+255),w,b
  4296  00510C  235F               	addwfc	(??_vsnprintf+3)& (0+255),f,b
  4297  00510E  515E               	movf	(??_vsnprintf+2)& (0+255),w,b
  4298  005110  5D62               	subwf	vsnprintf@cnt& (0+255),w,b
  4299  005112  515F               	movf	(??_vsnprintf+3)& (0+255),w,b
  4300  005114  5963               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  4301  005116  A0D8               	btfss	status,0,c
  4302  005118  EF90  F028         	goto	u11991
  4303  00511C  EF92  F028         	goto	u11990
  4304  005120                     u11991:
  4305  005120  EF9A  F028         	goto	l1739
  4306  005124                     u11990:
  4307  005124                     
  4308                           ; BSR set to: 1
  4309  005124  0EFF               	movlw	255
  4310  005126  2556               	addwf	vsnprintf@n& (0+255),w,b
  4311  005128  6F60               	movwf	_vsnprintf$2581& (0+255),b
  4312  00512A  0EFF               	movlw	255
  4313  00512C  2157               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  4314  00512E  6F61               	movwf	(_vsnprintf$2581+1)& (0+255),b
  4315  005130  EF9E  F028         	goto	l9399
  4316  005134                     l1739:
  4317                           
  4318                           ; BSR set to: 1
  4319  005134  C162  F160         	movff	vsnprintf@cnt,_vsnprintf$2581
  4320  005138  C163  F161         	movff	vsnprintf@cnt+1,_vsnprintf$2581+1
  4321  00513C                     l9399:
  4322                           
  4323                           ; BSR set to: 1
  4324  00513C  5160               	movf	_vsnprintf$2581& (0+255),w,b
  4325  00513E  2554               	addwf	vsnprintf@s& (0+255),w,b
  4326  005140  6ED9               	movwf	fsr2l,c
  4327  005142  5161               	movf	(_vsnprintf$2581+1)& (0+255),w,b
  4328  005144  2155               	addwfc	(vsnprintf@s+1)& (0+255),w,b
  4329  005146  6EDA               	movwf	fsr2h,c
  4330  005148  0E00               	movlw	0
  4331  00514A  6EDF               	movwf	indf2,c
  4332  00514C                     l9401:
  4333                           
  4334                           ; BSR set to: 1
  4335  00514C  C162  F154         	movff	vsnprintf@cnt,?_vsnprintf
  4336  005150  C163  F155         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  4337  005154                     l1734:
  4338                           
  4339                           ; BSR set to: 1
  4340  005154  0012               	return		;funcret
  4341  005156                     __end_of_vsnprintf:
  4342                           	opt callstack 0
  4343                           
  4344 ;; *************** function _read_from_usart *****************
  4345 ;; Defined at:
  4346 ;;		line 27 in file "main.c"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;  length          2   69[BANK0 ] int 
  4349 ;; Auto vars:     Size  Location     Type
  4350 ;;  i               2   12[BANK1 ] int 
  4351 ;;  data           10    0[BANK1 ] unsigned char [10]
  4352 ;;  value           2   10[BANK1 ] int 
  4353 ;; Return value:  Size  Location     Type
  4354 ;;                  2   69[BANK0 ] int 
  4355 ;; Registers used:
  4356 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4357 ;; Tracked objects:
  4358 ;;		On entry : 0/0
  4359 ;;		On exit  : 0/0
  4360 ;;		Unchanged: 0/0
  4361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4362 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4363 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4364 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4365 ;;      Totals:         0       3      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4366 ;;Total ram usage:       17 bytes
  4367 ;; Hardware stack levels used:    1
  4368 ;; Hardware stack levels required when called:   15
  4369 ;; This function calls:
  4370 ;;		_EUSART1_Read
  4371 ;;		_EUSART1_Write
  4372 ;;		_EUSART1_is_rx_ready
  4373 ;;		_EUSART1_is_tx_ready
  4374 ;;		_TMR0_WriteTimer
  4375 ;;		_atoi
  4376 ;; This function is called by:
  4377 ;;		_main
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           
  4381                           	psect	text3
  4382  005AE4                     __ptext3:
  4383                           	opt callstack 0
  4384  005AE4                     _read_from_usart:
  4385                           	opt callstack 15
  4386  005AE4                     
  4387                           ;main.c: 31:     for (int i = 0; i < length; i++) {
  4388  005AE4  0E00               	movlw	0
  4389  005AE6  0101               	movlb	1	; () banked
  4390  005AE8  6F0D               	movwf	(read_from_usart@i+1)& (0+255),b
  4391  005AEA  0E00               	movlw	0
  4392  005AEC  6F0C               	movwf	read_from_usart@i& (0+255),b
  4393  005AEE  EFB2  F02D         	goto	l9431
  4394  005AF2                     l512:
  4395  005AF2  AA9E               	btfss	158,5,c	;volatile
  4396  005AF4  EF7E  F02D         	goto	u12011
  4397  005AF8  EF80  F02D         	goto	u12010
  4398  005AFC                     u12011:
  4399  005AFC  EF79  F02D         	goto	l512
  4400  005B00                     u12010:
  4401  005B00                     
  4402                           ;main.c: 33:         if (EUSART1_is_rx_ready()) {
  4403  005B00  EC6B  F034         	call	_EUSART1_is_rx_ready	;wreg free
  4404  005B04  0900               	iorlw	0
  4405  005B06  B4D8               	btfsc	status,2,c
  4406  005B08  EF88  F02D         	goto	u12021
  4407  005B0C  EF8A  F02D         	goto	u12020
  4408  005B10                     u12021:
  4409  005B10  EFAF  F02D         	goto	l9429
  4410  005B14                     u12020:
  4411  005B14                     
  4412                           ;main.c: 34:             data[i] = EUSART1_Read();
  4413  005B14  0E00               	movlw	low read_from_usart@data
  4414  005B16  0101               	movlb	1	; () banked
  4415  005B18  250C               	addwf	read_from_usart@i& (0+255),w,b
  4416  005B1A  6ED9               	movwf	fsr2l,c
  4417  005B1C  0E01               	movlw	high read_from_usart@data
  4418  005B1E  210D               	addwfc	(read_from_usart@i+1)& (0+255),w,b
  4419  005B20  6EDA               	movwf	fsr2h,c
  4420  005B22  EC8B  F033         	call	_EUSART1_Read	;wreg free
  4421  005B26  6EDF               	movwf	indf2,c
  4422  005B28                     
  4423                           ;main.c: 35:             if (EUSART1_is_tx_ready()) {
  4424  005B28  EC76  F033         	call	_EUSART1_is_tx_ready	;wreg free
  4425  005B2C  0900               	iorlw	0
  4426  005B2E  B4D8               	btfsc	status,2,c
  4427  005B30  EF9C  F02D         	goto	u12031
  4428  005B34  EF9E  F02D         	goto	u12030
  4429  005B38                     u12031:
  4430  005B38  EFAF  F02D         	goto	l9429
  4431  005B3C                     u12030:
  4432  005B3C                     
  4433                           ;main.c: 36:                 EUSART1_Write(data[i]);
  4434  005B3C  0E00               	movlw	low read_from_usart@data
  4435  005B3E  0101               	movlb	1	; () banked
  4436  005B40  250C               	addwf	read_from_usart@i& (0+255),w,b
  4437  005B42  6ED9               	movwf	fsr2l,c
  4438  005B44  0E01               	movlw	high read_from_usart@data
  4439  005B46  210D               	addwfc	(read_from_usart@i+1)& (0+255),w,b
  4440  005B48  6EDA               	movwf	fsr2h,c
  4441  005B4A  50DF               	movf	indf2,w,c
  4442  005B4C  EC31  F034         	call	_EUSART1_Write
  4443  005B50                     
  4444                           ;main.c: 37:                 TMR0_WriteTimer(0x00);
  4445  005B50  0E00               	movlw	0
  4446  005B52  0100               	movlb	0	; () banked
  4447  005B54  6F90               	movwf	(TMR0_WriteTimer@timerVal+1)& (0+255),b
  4448  005B56  0E00               	movlw	0
  4449  005B58  6F8F               	movwf	TMR0_WriteTimer@timerVal& (0+255),b
  4450  005B5A  EC8E  F034         	call	_TMR0_WriteTimer	;wreg free
  4451  005B5E                     l9429:
  4452                           
  4453                           ;main.c: 40:     }
  4454  005B5E  0101               	movlb	1	; () banked
  4455  005B60  4B0C               	infsnz	read_from_usart@i& (0+255),f,b
  4456  005B62  2B0D               	incf	(read_from_usart@i+1)& (0+255),f,b
  4457  005B64                     l9431:
  4458                           
  4459                           ; BSR set to: 1
  4460  005B64  0100               	movlb	0	; () banked
  4461  005B66  51A5               	movf	read_from_usart@length& (0+255),w,b
  4462  005B68  0101               	movlb	1	; () banked
  4463  005B6A  5D0C               	subwf	read_from_usart@i& (0+255),w,b
  4464  005B6C  510D               	movf	(read_from_usart@i+1)& (0+255),w,b
  4465  005B6E  0A80               	xorlw	128
  4466  005B70  0100               	movlb	0	; () banked
  4467  005B72  6FA7               	movwf	??_read_from_usart& (0+255),b
  4468  005B74  51A6               	movf	(read_from_usart@length+1)& (0+255),w,b
  4469  005B76  0A80               	xorlw	128
  4470  005B78  59A7               	subwfb	??_read_from_usart& (0+255),w,b
  4471  005B7A  A0D8               	btfss	status,0,c
  4472  005B7C  EFC2  F02D         	goto	u12041
  4473  005B80  EFC4  F02D         	goto	u12040
  4474  005B84                     u12041:
  4475  005B84  EF79  F02D         	goto	l512
  4476  005B88                     u12040:
  4477  005B88                     
  4478                           ; BSR set to: 0
  4479                           ;main.c: 41:     value = atoi(data);
  4480  005B88  0E00               	movlw	low read_from_usart@data
  4481  005B8A  6F96               	movwf	atoi@s& (0+255),b
  4482  005B8C  0E01               	movlw	high read_from_usart@data
  4483  005B8E  6F97               	movwf	(atoi@s+1)& (0+255),b
  4484  005B90  EC4D  F01D         	call	_atoi	;wreg free
  4485  005B94  C096  F10A         	movff	?_atoi,read_from_usart@value
  4486  005B98  C097  F10B         	movff	?_atoi+1,read_from_usart@value+1
  4487  005B9C                     
  4488                           ;main.c: 42:     return value;
  4489  005B9C  C10A  F0A5         	movff	read_from_usart@value,?_read_from_usart
  4490  005BA0  C10B  F0A6         	movff	read_from_usart@value+1,?_read_from_usart+1
  4491  005BA4  0012               	return		;funcret
  4492  005BA6                     __end_of_read_from_usart:
  4493                           	opt callstack 0
  4494                           
  4495 ;; *************** function _TMR0_WriteTimer *****************
  4496 ;; Defined at:
  4497 ;;		line 115 in file "mcc_generated_files/tmr0.c"
  4498 ;; Parameters:    Size  Location     Type
  4499 ;;  timerVal        2   47[BANK0 ] unsigned short 
  4500 ;; Auto vars:     Size  Location     Type
  4501 ;;		None
  4502 ;; Return value:  Size  Location     Type
  4503 ;;                  1    wreg      void 
  4504 ;; Registers used:
  4505 ;;		wreg, status,2
  4506 ;; Tracked objects:
  4507 ;;		On entry : 0/0
  4508 ;;		On exit  : 0/0
  4509 ;;		Unchanged: 0/0
  4510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4511 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4514 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4515 ;;Total ram usage:        2 bytes
  4516 ;; Hardware stack levels used:    1
  4517 ;; Hardware stack levels required when called:   13
  4518 ;; This function calls:
  4519 ;;		Nothing
  4520 ;; This function is called by:
  4521 ;;		_read_from_usart
  4522 ;;		_main
  4523 ;; This function uses a non-reentrant model
  4524 ;;
  4525                           
  4526                           	psect	text4
  4527  00691C                     __ptext4:
  4528                           	opt callstack 0
  4529  00691C                     _TMR0_WriteTimer:
  4530                           	opt callstack 16
  4531  00691C                     
  4532                           ;mcc_generated_files/tmr0.c: 115: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 116: {;mcc_generated_files/tmr0.c: 118:     TMR0H = timerVal >> 8;
  4533  00691C  0100               	movlb	0	; () banked
  4534  00691E  5190               	movf	(TMR0_WriteTimer@timerVal+1)& (0+255),w,b
  4535  006920  6ED7               	movwf	215,c	;volatile
  4536  006922                     
  4537                           ; BSR set to: 0
  4538                           ;mcc_generated_files/tmr0.c: 119:     TMR0L = (uint8_t) timerVal;
  4539  006922  C08F  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  4540  006926                     
  4541                           ; BSR set to: 0
  4542  006926  0012               	return		;funcret
  4543  006928                     __end_of_TMR0_WriteTimer:
  4544                           	opt callstack 0
  4545                           
  4546 ;; *************** function _EUSART1_is_tx_ready *****************
  4547 ;; Defined at:
  4548 ;;		line 94 in file "mcc_generated_files/eusart1.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;		None
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;		None
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  1    wreg      _Bool 
  4555 ;; Registers used:
  4556 ;;		wreg, status,2
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4563 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4565 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4566 ;;Total ram usage:        1 bytes
  4567 ;; Hardware stack levels used:    1
  4568 ;; Hardware stack levels required when called:   13
  4569 ;; This function calls:
  4570 ;;		Nothing
  4571 ;; This function is called by:
  4572 ;;		_read_from_usart
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           	psect	text5
  4577  0066EC                     __ptext5:
  4578                           	opt callstack 0
  4579  0066EC                     _EUSART1_is_tx_ready:
  4580                           	opt callstack 16
  4581  0066EC                     
  4582                           ;mcc_generated_files/eusart1.c: 96:     return (_Bool)(PIR1bits.TX1IF && TXSTA1bits.TXEN
      +                          );
  4583  0066EC  0E00               	movlw	0
  4584  0066EE  0100               	movlb	0	; () banked
  4585  0066F0  6F8F               	movwf	_EUSART1_is_tx_ready$859& (0+255),b
  4586  0066F2                     
  4587                           ; BSR set to: 0
  4588  0066F2  A89E               	btfss	158,4,c	;volatile
  4589  0066F4  EF7E  F033         	goto	u11811
  4590  0066F8  EF80  F033         	goto	u11810
  4591  0066FC                     u11811:
  4592  0066FC  EF89  F033         	goto	l277
  4593  006700                     u11810:
  4594  006700                     
  4595                           ; BSR set to: 0
  4596  006700  AAAC               	btfss	172,5,c	;volatile
  4597  006702  EF85  F033         	goto	u11821
  4598  006706  EF87  F033         	goto	u11820
  4599  00670A                     u11821:
  4600  00670A  EF89  F033         	goto	l277
  4601  00670E                     u11820:
  4602  00670E                     
  4603                           ; BSR set to: 0
  4604  00670E  0E01               	movlw	1
  4605  006710  6F8F               	movwf	_EUSART1_is_tx_ready$859& (0+255),b
  4606  006712                     l277:
  4607                           
  4608                           ; BSR set to: 0
  4609  006712  518F               	movf	_EUSART1_is_tx_ready$859& (0+255),w,b
  4610  006714                     
  4611                           ; BSR set to: 0
  4612  006714  0012               	return		;funcret
  4613  006716                     __end_of_EUSART1_is_tx_ready:
  4614                           	opt callstack 0
  4615                           
  4616 ;; *************** function _EUSART1_is_rx_ready *****************
  4617 ;; Defined at:
  4618 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;		None
  4621 ;; Auto vars:     Size  Location     Type
  4622 ;;		None
  4623 ;; Return value:  Size  Location     Type
  4624 ;;                  1    wreg      _Bool 
  4625 ;; Registers used:
  4626 ;;		wreg
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4636 ;;Total ram usage:        0 bytes
  4637 ;; Hardware stack levels used:    1
  4638 ;; Hardware stack levels required when called:   13
  4639 ;; This function calls:
  4640 ;;		Nothing
  4641 ;; This function is called by:
  4642 ;;		_read_from_usart
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646                           	psect	text6
  4647  0068D6                     __ptext6:
  4648                           	opt callstack 0
  4649  0068D6                     _EUSART1_is_rx_ready:
  4650                           	opt callstack 16
  4651  0068D6                     
  4652                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  4653  0068D6  BA9E               	btfsc	158,5,c	;volatile
  4654  0068D8  EF70  F034         	goto	u11831
  4655  0068DC  EF73  F034         	goto	u11830
  4656  0068E0                     u11831:
  4657  0068E0  0E01               	movlw	1
  4658  0068E2  EF74  F034         	goto	u11836
  4659  0068E6                     u11830:
  4660  0068E6  0E00               	movlw	0
  4661  0068E8                     u11836:
  4662  0068E8  0012               	return		;funcret
  4663  0068EA                     __end_of_EUSART1_is_rx_ready:
  4664                           	opt callstack 0
  4665                           
  4666 ;; *************** function _EUSART1_Read *****************
  4667 ;; Defined at:
  4668 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;		None
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;		None
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  1    wreg      unsigned char 
  4675 ;; Registers used:
  4676 ;;		wreg, status,2
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4686 ;;Total ram usage:        0 bytes
  4687 ;; Hardware stack levels used:    1
  4688 ;; Hardware stack levels required when called:   13
  4689 ;; This function calls:
  4690 ;;		Nothing
  4691 ;; This function is called by:
  4692 ;;		_read_from_usart
  4693 ;;		_main
  4694 ;;		_getch
  4695 ;; This function uses a non-reentrant model
  4696 ;;
  4697                           
  4698                           	psect	text7
  4699  006716                     __ptext7:
  4700                           	opt callstack 0
  4701  006716                     _EUSART1_Read:
  4702                           	opt callstack 16
  4703  006716                     l290:
  4704                           
  4705                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  4706  006716  AA9E               	btfss	158,5,c	;volatile
  4707  006718  EF90  F033         	goto	u11841
  4708  00671C  EF92  F033         	goto	u11840
  4709  006720                     u11841:
  4710  006720  EF8B  F033         	goto	l290
  4711  006724                     u11840:
  4712  006724                     
  4713                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  4714  006724  0E00               	movlw	0
  4715  006726  0100               	movlb	0	; () banked
  4716  006728  6FBF               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  4717  00672A                     
  4718                           ; BSR set to: 0
  4719                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  4720  00672A  A2AB               	btfss	171,1,c	;volatile
  4721  00672C  EF9A  F033         	goto	u11851
  4722  006730  EF9C  F033         	goto	u11850
  4723  006734                     u11851:
  4724  006734  EF9E  F033         	goto	l9313
  4725  006738                     u11850:
  4726  006738                     
  4727                           ; BSR set to: 0
  4728                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  4729  006738  98AB               	bcf	171,4,c	;volatile
  4730                           
  4731                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  4732  00673A  88AB               	bsf	171,4,c	;volatile
  4733  00673C                     l9313:
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  4737  00673C  50AE               	movf	174,w,c	;volatile
  4738  00673E                     
  4739                           ; BSR set to: 0
  4740  00673E  0012               	return		;funcret
  4741  006740                     __end_of_EUSART1_Read:
  4742                           	opt callstack 0
  4743                           
  4744 ;; *************** function _printf *****************
  4745 ;; Defined at:
  4746 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  4747 ;; Parameters:    Size  Location     Type
  4748 ;;  fmt             2   84[BANK1 ] PTR const unsigned char 
  4749 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
  4750 ;;		 -> STR_4(22), STR_1(13), 
  4751 ;; Auto vars:     Size  Location     Type
  4752 ;;  ap              2   92[BANK1 ] PTR void [1]
  4753 ;;		 -> ?_snprintf(2), ?_printf(2), 
  4754 ;;  ret             2    0        int 
  4755 ;; Return value:  Size  Location     Type
  4756 ;;                  2   84[BANK1 ] int 
  4757 ;; Registers used:
  4758 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4759 ;; Tracked objects:
  4760 ;;		On entry : 0/0
  4761 ;;		On exit  : 0/0
  4762 ;;		Unchanged: 0/0
  4763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4764 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4765 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4767 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4768 ;;Total ram usage:       10 bytes
  4769 ;; Hardware stack levels used:    1
  4770 ;; Hardware stack levels required when called:   21
  4771 ;; This function calls:
  4772 ;;		_vfprintf
  4773 ;; This function is called by:
  4774 ;;		_main
  4775 ;; This function uses a non-reentrant model
  4776 ;;
  4777                           
  4778                           	psect	text8
  4779  00676A                     __ptext8:
  4780                           	opt callstack 0
  4781  00676A                     _printf:
  4782                           	opt callstack 9
  4783  00676A  0E56               	movlw	low (?_printf+2)
  4784  00676C  0101               	movlb	1	; () banked
  4785  00676E  6F5C               	movwf	printf@ap& (0+255),b
  4786  006770  0E01               	movlw	high (?_printf+2)
  4787  006772  6F5D               	movwf	(printf@ap+1)& (0+255),b
  4788  006774                     
  4789                           ; BSR set to: 1
  4790  006774  0E00               	movlw	0
  4791  006776  6F4C               	movwf	vfprintf@fp& (0+255),b
  4792  006778  0E00               	movlw	0
  4793  00677A  6F4D               	movwf	(vfprintf@fp+1)& (0+255),b
  4794  00677C  C154  F14E         	movff	printf@fmt,vfprintf@fmt
  4795  006780  C155  F14F         	movff	printf@fmt+1,vfprintf@fmt+1
  4796  006784  0E5C               	movlw	low printf@ap
  4797  006786  6F50               	movwf	vfprintf@ap& (0+255),b
  4798  006788  0E01               	movlw	high printf@ap
  4799  00678A  6F51               	movwf	(vfprintf@ap+1)& (0+255),b
  4800  00678C  ECDA  F02E         	call	_vfprintf	;wreg free
  4801  006790  0012               	return		;funcret
  4802  006792                     __end_of_printf:
  4803                           	opt callstack 0
  4804                           
  4805 ;; *************** function _vfprintf *****************
  4806 ;; Defined at:
  4807 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4808 ;; Parameters:    Size  Location     Type
  4809 ;;  fp              2   76[BANK1 ] PTR struct _IO_FILE
  4810 ;;		 -> vsnprintf@f(6), NULL(0), 
  4811 ;;  fmt             2   78[BANK1 ] PTR const unsigned char 
  4812 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
  4813 ;;		 -> STR_4(22), STR_3(12), STR_1(13), 
  4814 ;;  ap              2   80[BANK1 ] PTR PTR void 
  4815 ;;		 -> snprintf@ap(2), printf@ap(2), 
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;  cfmt            2   82[BANK1 ] PTR unsigned char 
  4818 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
  4819 ;;		 -> STR_4(22), STR_3(12), STR_1(13), 
  4820 ;; Return value:  Size  Location     Type
  4821 ;;                  2   76[BANK1 ] int 
  4822 ;; Registers used:
  4823 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4824 ;; Tracked objects:
  4825 ;;		On entry : 0/0
  4826 ;;		On exit  : 0/0
  4827 ;;		Unchanged: 0/0
  4828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4829 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4830 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4832 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4833 ;;Total ram usage:        8 bytes
  4834 ;; Hardware stack levels used:    1
  4835 ;; Hardware stack levels required when called:   20
  4836 ;; This function calls:
  4837 ;;		_vfpfcnvrt
  4838 ;; This function is called by:
  4839 ;;		_printf
  4840 ;;		_vsnprintf
  4841 ;; This function uses a non-reentrant model
  4842 ;;
  4843                           
  4844                           	psect	text9
  4845  005DB4                     __ptext9:
  4846                           	opt callstack 0
  4847  005DB4                     _vfprintf:
  4848                           	opt callstack 8
  4849  005DB4                     
  4850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4851  005DB4  C14E  F152         	movff	vfprintf@fmt,vfprintf@cfmt
  4852  005DB8  C14F  F153         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4853  005DBC                     
  4854                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  4855  005DBC  0E00               	movlw	0
  4856  005DBE  0101               	movlb	1	; () banked
  4857  005DC0  6F80               	movwf	(_nout+1)& (0+255),b
  4858  005DC2  0E00               	movlw	0
  4859  005DC4  6F7F               	movwf	_nout& (0+255),b
  4860                           
  4861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4862  005DC6  EFF8  F02E         	goto	l9285
  4863  005DCA                     l9283:
  4864                           
  4865                           ; BSR set to: 1
  4866                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4867  005DCA  C14C  F127         	movff	vfprintf@fp,vfpfcnvrt@fp
  4868  005DCE  C14D  F128         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4869  005DD2  0E52               	movlw	low vfprintf@cfmt
  4870  005DD4  6F29               	movwf	vfpfcnvrt@fmt& (0+255),b
  4871  005DD6  0E01               	movlw	high vfprintf@cfmt
  4872  005DD8  6F2A               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  4873  005DDA  C150  F12B         	movff	vfprintf@ap,vfpfcnvrt@ap
  4874  005DDE  C151  F12C         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4875  005DE2  EC51  F000         	call	_vfpfcnvrt	;wreg free
  4876  005DE6  0101               	movlb	1	; () banked
  4877  005DE8  5127               	movf	?_vfpfcnvrt& (0+255),w,b
  4878  005DEA  277F               	addwf	_nout& (0+255),f,b
  4879  005DEC  5128               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  4880  005DEE  2380               	addwfc	(_nout+1)& (0+255),f,b
  4881  005DF0                     l9285:
  4882                           
  4883                           ; BSR set to: 1
  4884                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4885  005DF0  C152  FFF6         	movff	vfprintf@cfmt,tblptrl
  4886  005DF4  C153  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4887  005DF8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4888  005DF8  6AF8               	clrf	tblptru,c
  4889  005DFA                     	endif
  4890  005DFA                     	if	0	;tblptru may be non-zero
  4891  005DFA                     	endif
  4892  005DFA  0008               	tblrd		*
  4893  005DFC  50F5               	movf	tablat,w,c
  4894  005DFE  0900               	iorlw	0
  4895  005E00  A4D8               	btfss	status,2,c
  4896  005E02  EF05  F02F         	goto	u11781
  4897  005E06  EF07  F02F         	goto	u11780
  4898  005E0A                     u11781:
  4899  005E0A  EFE5  F02E         	goto	l9283
  4900  005E0E                     u11780:
  4901  005E0E                     
  4902                           ; BSR set to: 1
  4903                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4904  005E0E  C17F  F14C         	movff	_nout,?_vfprintf
  4905  005E12  C180  F14D         	movff	_nout+1,?_vfprintf+1
  4906  005E16                     
  4907                           ; BSR set to: 1
  4908  005E16  0012               	return		;funcret
  4909  005E18                     __end_of_vfprintf:
  4910                           	opt callstack 0
  4911                           
  4912 ;; *************** function _vfpfcnvrt *****************
  4913 ;; Defined at:
  4914 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4915 ;; Parameters:    Size  Location     Type
  4916 ;;  fp              2   39[BANK1 ] PTR struct _IO_FILE
  4917 ;;		 -> vsnprintf@f(6), NULL(0), 
  4918 ;;  fmt             2   41[BANK1 ] PTR PTR unsigned char 
  4919 ;;		 -> vfprintf@cfmt(2), 
  4920 ;;  ap              2   43[BANK1 ] PTR PTR void 
  4921 ;;		 -> snprintf@ap(2), printf@ap(2), 
  4922 ;; Auto vars:     Size  Location     Type
  4923 ;;  llu             8   68[BANK1 ] unsigned long long 
  4924 ;;  ll              8   57[BANK1 ] long long 
  4925 ;;  f               4    0        long long 
  4926 ;;  ct              3    0        unsigned char [3]
  4927 ;;  vp              2   65[BANK1 ] PTR void 
  4928 ;;		 -> ?_snprintf(2), ?_printf(2), 
  4929 ;;  done            2   51[BANK1 ] int 
  4930 ;;  cp              2   49[BANK1 ] PTR unsigned char 
  4931 ;;		 -> ?_snprintf(2), ?_printf(2), 
  4932 ;;  i               2    0        int 
  4933 ;;  c               1   67[BANK1 ] unsigned char 
  4934 ;; Return value:  Size  Location     Type
  4935 ;;                  2   39[BANK1 ] int 
  4936 ;; Registers used:
  4937 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4938 ;; Tracked objects:
  4939 ;;		On entry : 0/0
  4940 ;;		On exit  : 0/0
  4941 ;;		Unchanged: 0/0
  4942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4943 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4944 ;;      Locals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4945 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4946 ;;      Totals:         0       0      37       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4947 ;;Total ram usage:       37 bytes
  4948 ;; Hardware stack levels used:    1
  4949 ;; Hardware stack levels required when called:   19
  4950 ;; This function calls:
  4951 ;;		_atoi
  4952 ;;		_ctoa
  4953 ;;		_dtoa
  4954 ;;		_fputc
  4955 ;;		_isdigit
  4956 ;;		_otoa
  4957 ;;		_stoa
  4958 ;;		_strncmp
  4959 ;;		_utoa
  4960 ;;		_xtoa
  4961 ;; This function is called by:
  4962 ;;		_vfprintf
  4963 ;; This function uses a non-reentrant model
  4964 ;;
  4965                           
  4966                           	psect	text10
  4967  0000A2                     __ptext10:
  4968                           	opt callstack 0
  4969  0000A2                     _vfpfcnvrt:
  4970                           	opt callstack 8
  4971  0000A2                     
  4972                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4973  0000A2  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4974  0000A6  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4975  0000AA  CFDE FFF6          	movff	postinc2,tblptrl
  4976  0000AE  CFDD FFF7          	movff	postdec2,tblptrh
  4977  0000B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4978  0000B2  6AF8               	clrf	tblptru,c
  4979  0000B4                     	endif
  4980  0000B4                     	if	0	;tblptru may be non-zero
  4981  0000B4                     	endif
  4982  0000B4  0008               	tblrd		*
  4983  0000B6  50F5               	movf	tablat,w,c
  4984  0000B8  0A25               	xorlw	37
  4985  0000BA  A4D8               	btfss	status,2,c
  4986  0000BC  EF62  F000         	goto	u11291
  4987  0000C0  EF64  F000         	goto	u11290
  4988  0000C4                     u11291:
  4989  0000C4  EF92  F009         	goto	l9231
  4990  0000C8                     u11290:
  4991  0000C8                     
  4992                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4993  0000C8  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4994  0000CC  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4995  0000D0  2ADE               	incf	postinc2,f,c
  4996  0000D2  0E00               	movlw	0
  4997  0000D4  22DD               	addwfc	postdec2,f,c
  4998  0000D6                     
  4999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5000  0000D6  0E00               	movlw	0
  5001  0000D8  0100               	movlb	0	; () banked
  5002  0000DA  6FB6               	movwf	(_width+1)& (0+255),b
  5003  0000DC  0E00               	movlw	0
  5004  0000DE  6FB5               	movwf	_width& (0+255),b
  5005  0000E0  C0B5  F0B9         	movff	_width,_flags
  5006  0000E4  C0B6  F0BA         	movff	_width+1,_flags+1
  5007  0000E8                     
  5008                           ; BSR set to: 0
  5009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5010  0000E8  69B7               	setf	_prec& (0+255),b
  5011  0000EA  69B8               	setf	(_prec+1)& (0+255),b
  5012  0000EC                     
  5013                           ; BSR set to: 0
  5014                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  5015  0000EC  0E00               	movlw	0
  5016  0000EE  0101               	movlb	1	; () banked
  5017  0000F0  6F34               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  5018  0000F2  0E00               	movlw	0
  5019  0000F4  6F33               	movwf	vfpfcnvrt@done& (0+255),b
  5020                           
  5021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  5022  0000F6  EFC9  F000         	goto	l8949
  5023  0000FA                     l8923:
  5024                           
  5025                           ; BSR set to: 1
  5026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  5027  0000FA  0100               	movlb	0	; () banked
  5028  0000FC  81B9               	bsf	_flags& (0+255),0,b
  5029  0000FE                     l8925:
  5030                           
  5031                           ; BSR set to: 0
  5032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  5033  0000FE  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5034  000102  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5035  000106  2ADE               	incf	postinc2,f,c
  5036  000108  0E00               	movlw	0
  5037  00010A  22DD               	addwfc	postdec2,f,c
  5038                           
  5039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  5040  00010C  EFC9  F000         	goto	l8949
  5041  000110                     l8927:
  5042                           
  5043                           ; BSR set to: 1
  5044                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  5045  000110  0100               	movlb	0	; () banked
  5046  000112  83B9               	bsf	_flags& (0+255),1,b
  5047  000114  EF7F  F000         	goto	l8925
  5048  000118                     l8931:
  5049                           
  5050                           ; BSR set to: 1
  5051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  5052  000118  0100               	movlb	0	; () banked
  5053  00011A  85B9               	bsf	_flags& (0+255),2,b
  5054  00011C  EF7F  F000         	goto	l8925
  5055  000120                     l8935:
  5056                           
  5057                           ; BSR set to: 1
  5058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  5059  000120  0100               	movlb	0	; () banked
  5060  000122  87B9               	bsf	_flags& (0+255),3,b
  5061  000124  EF7F  F000         	goto	l8925
  5062  000128                     l8939:
  5063                           
  5064                           ; BSR set to: 1
  5065                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  5066  000128  0100               	movlb	0	; () banked
  5067  00012A  89B9               	bsf	_flags& (0+255),4,b
  5068  00012C  EF7F  F000         	goto	l8925
  5069  000130                     l8943:
  5070                           
  5071                           ; BSR set to: 1
  5072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  5073  000130  0E00               	movlw	0
  5074  000132  6F34               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  5075  000134  0E01               	movlw	1
  5076  000136  6F33               	movwf	vfpfcnvrt@done& (0+255),b
  5077                           
  5078                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  5079  000138  EFC9  F000         	goto	l8949
  5080  00013C                     l8947:
  5081                           
  5082                           ; BSR set to: 1
  5083  00013C  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5084  000140  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5085  000144  CFDE FFF6          	movff	postinc2,tblptrl
  5086  000148  CFDD FFF7          	movff	postdec2,tblptrh
  5087  00014C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5088  00014C  6AF8               	clrf	tblptru,c
  5089  00014E                     	endif
  5090  00014E                     	if	0	;tblptru may be non-zero
  5091  00014E                     	endif
  5092  00014E  0008               	tblrd		*
  5093  000150  50F5               	movf	tablat,w,c
  5094  000152  6F2D               	movwf	??_vfpfcnvrt& (0+255),b
  5095  000154  6B2E               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  5096                           
  5097                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5098                           ; Switch size 1, requested type "simple"
  5099                           ; Number of cases is 1, Range of values is 0 to 0
  5100                           ; switch strategies available:
  5101                           ; Name         Instructions Cycles
  5102                           ; simple_byte            4     3 (average)
  5103                           ;	Chosen strategy is simple_byte
  5104  000156  512E               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5105  000158  0A00               	xorlw	0	; case 0
  5106  00015A  B4D8               	btfsc	status,2,c
  5107  00015C  EFB2  F000         	goto	l9961
  5108  000160  EF98  F000         	goto	l8943
  5109  000164                     l9961:
  5110                           
  5111                           ; BSR set to: 1
  5112                           ; Switch size 1, requested type "simple"
  5113                           ; Number of cases is 5, Range of values is 32 to 48
  5114                           ; switch strategies available:
  5115                           ; Name         Instructions Cycles
  5116                           ; simple_byte           16     9 (average)
  5117                           ;	Chosen strategy is simple_byte
  5118  000164  512D               	movf	??_vfpfcnvrt& (0+255),w,b
  5119  000166  0A20               	xorlw	32	; case 32
  5120  000168  B4D8               	btfsc	status,2,c
  5121  00016A  EF90  F000         	goto	l8935
  5122  00016E  0A03               	xorlw	3	; case 35
  5123  000170  B4D8               	btfsc	status,2,c
  5124  000172  EF94  F000         	goto	l8939
  5125  000176  0A08               	xorlw	8	; case 43
  5126  000178  B4D8               	btfsc	status,2,c
  5127  00017A  EF8C  F000         	goto	l8931
  5128  00017E  0A06               	xorlw	6	; case 45
  5129  000180  B4D8               	btfsc	status,2,c
  5130  000182  EF7D  F000         	goto	l8923
  5131  000186  0A1D               	xorlw	29	; case 48
  5132  000188  B4D8               	btfsc	status,2,c
  5133  00018A  EF88  F000         	goto	l8927
  5134  00018E  EF98  F000         	goto	l8943
  5135  000192                     l8949:
  5136                           
  5137                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  5138  000192  0101               	movlb	1	; () banked
  5139  000194  5133               	movf	vfpfcnvrt@done& (0+255),w,b
  5140  000196  1134               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  5141  000198  B4D8               	btfsc	status,2,c
  5142  00019A  EFD1  F000         	goto	u11301
  5143  00019E  EFD3  F000         	goto	u11300
  5144  0001A2                     u11301:
  5145  0001A2  EF9E  F000         	goto	l8947
  5146  0001A6                     u11300:
  5147  0001A6                     
  5148                           ; BSR set to: 1
  5149                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  5150  0001A6  0100               	movlb	0	; () banked
  5151  0001A8  A1B9               	btfss	_flags& (0+255),0,b
  5152  0001AA  EFD9  F000         	goto	u11311
  5153  0001AE  EFDB  F000         	goto	u11310
  5154  0001B2                     u11311:
  5155  0001B2  EFDC  F000         	goto	l8953
  5156  0001B6                     u11310:
  5157  0001B6                     
  5158                           ; BSR set to: 0
  5159                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  5160  0001B6  93B9               	bcf	_flags& (0+255),1,b
  5161  0001B8                     l8953:
  5162                           
  5163                           ; BSR set to: 0
  5164                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  5165  0001B8  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5166  0001BC  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5167  0001C0  CFDE FFF6          	movff	postinc2,tblptrl
  5168  0001C4  CFDD FFF7          	movff	postdec2,tblptrh
  5169  0001C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5170  0001C8  6AF8               	clrf	tblptru,c
  5171  0001CA                     	endif
  5172  0001CA                     	if	0	;tblptru may be non-zero
  5173  0001CA                     	endif
  5174  0001CA  0008               	tblrd		*
  5175  0001CC  50F5               	movf	tablat,w,c
  5176  0001CE  0A2A               	xorlw	42
  5177  0001D0  A4D8               	btfss	status,2,c
  5178  0001D2  EFED  F000         	goto	u11321
  5179  0001D6  EFEF  F000         	goto	u11320
  5180  0001DA                     u11321:
  5181  0001DA  EF18  F001         	goto	l8961
  5182  0001DE                     u11320:
  5183  0001DE                     
  5184                           ; BSR set to: 0
  5185                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  5186  0001DE  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5187  0001E2  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5188  0001E6  2ADE               	incf	postinc2,f,c
  5189  0001E8  0E00               	movlw	0
  5190  0001EA  22DD               	addwfc	postdec2,f,c
  5191                           
  5192                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  5193  0001EC  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5194  0001F0  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5195  0001F4  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  5196  0001F8  0E02               	movlw	2
  5197  0001FA  26DE               	addwf	postinc2,f,c
  5198  0001FC  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  5199  000200  0E00               	movlw	0
  5200  000202  22DD               	addwfc	postdec2,f,c
  5201  000204  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5202  000208  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5203  00020C  CFDE F0B5          	movff	postinc2,_width
  5204  000210  CFDD F0B6          	movff	postdec2,_width+1
  5205  000214                     
  5206                           ; BSR set to: 0
  5207                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  5208  000214  BFB6               	btfsc	(_width+1)& (0+255),7,b
  5209  000216  EF11  F001         	goto	u11330
  5210  00021A  EF0F  F001         	goto	u11331
  5211  00021E                     u11331:
  5212  00021E  EF5D  F001         	goto	l8971
  5213  000222                     u11330:
  5214  000222                     
  5215                           ; BSR set to: 0
  5216                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  5217  000222  81B9               	bsf	_flags& (0+255),0,b
  5218                           
  5219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  5220  000224  6DB5               	negf	_width& (0+255),b
  5221  000226  1FB6               	comf	(_width+1)& (0+255),f,b
  5222  000228  B0D8               	btfsc	status,0,c
  5223  00022A  2BB6               	incf	(_width+1)& (0+255),f,b
  5224  00022C  EF5D  F001         	goto	l8971
  5225  000230                     l8961:
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  5229  000230  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5230  000234  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5231  000238  CFDE F096          	movff	postinc2,atoi@s
  5232  00023C  CFDD F097          	movff	postdec2,atoi@s+1
  5233  000240  EC4D  F01D         	call	_atoi	;wreg free
  5234  000244  C096  F0B5         	movff	?_atoi,_width
  5235  000248  C097  F0B6         	movff	?_atoi+1,_width+1
  5236                           
  5237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5238  00024C  EF2F  F001         	goto	l8965
  5239  000250                     l8963:
  5240                           
  5241                           ; BSR set to: 1
  5242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  5243  000250  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5244  000254  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5245  000258  2ADE               	incf	postinc2,f,c
  5246  00025A  0E00               	movlw	0
  5247  00025C  22DD               	addwfc	postdec2,f,c
  5248  00025E                     l8965:
  5249  00025E  0ED0               	movlw	208
  5250  000260  0101               	movlb	1	; () banked
  5251  000262  6F2D               	movwf	??_vfpfcnvrt& (0+255),b
  5252  000264  0EFF               	movlw	255
  5253  000266  6F2E               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5254  000268  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5255  00026C  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5256  000270  CFDE FFF6          	movff	postinc2,tblptrl
  5257  000274  CFDD FFF7          	movff	postdec2,tblptrh
  5258  000278                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5259  000278  6AF8               	clrf	tblptru,c
  5260  00027A                     	endif
  5261  00027A                     	if	0	;tblptru may be non-zero
  5262  00027A                     	endif
  5263  00027A  0008               	tblrd		*
  5264  00027C  50F5               	movf	tablat,w,c
  5265  00027E  6F2F               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5266  000280  6B30               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5267  000282  512D               	movf	??_vfpfcnvrt& (0+255),w,b
  5268  000284  272F               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5269  000286  512E               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5270  000288  2330               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5271  00028A  5130               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5272  00028C  E10A               	bnz	u11340
  5273  00028E  0E0A               	movlw	10
  5274  000290  5D2F               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5275  000292  A0D8               	btfss	status,0,c
  5276  000294  EF4E  F001         	goto	u11341
  5277  000298  EF51  F001         	goto	u11340
  5278  00029C                     u11341:
  5279  00029C  0E01               	movlw	1
  5280  00029E  EF52  F001         	goto	u11350
  5281  0002A2                     u11340:
  5282  0002A2  0E00               	movlw	0
  5283  0002A4                     u11350:
  5284  0002A4  6F35               	movwf	_vfpfcnvrt$1874& (0+255),b
  5285  0002A6  6B36               	clrf	(_vfpfcnvrt$1874+1)& (0+255),b
  5286  0002A8                     
  5287                           ; BSR set to: 1
  5288  0002A8  5135               	movf	_vfpfcnvrt$1874& (0+255),w,b
  5289  0002AA  1136               	iorwf	(_vfpfcnvrt$1874+1)& (0+255),w,b
  5290  0002AC  A4D8               	btfss	status,2,c
  5291  0002AE  EF5B  F001         	goto	u11361
  5292  0002B2  EF5D  F001         	goto	u11360
  5293  0002B6                     u11361:
  5294  0002B6  EF28  F001         	goto	l8963
  5295  0002BA                     u11360:
  5296  0002BA                     l8971:
  5297                           
  5298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  5299  0002BA  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5300  0002BE  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5301  0002C2  CFDE FFF6          	movff	postinc2,tblptrl
  5302  0002C6  CFDD FFF7          	movff	postdec2,tblptrh
  5303  0002CA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5304  0002CA  6AF8               	clrf	tblptru,c
  5305  0002CC                     	endif
  5306  0002CC                     	if	0	;tblptru may be non-zero
  5307  0002CC                     	endif
  5308  0002CC  0008               	tblrd		*
  5309  0002CE  50F5               	movf	tablat,w,c
  5310  0002D0  0A2E               	xorlw	46
  5311  0002D2  A4D8               	btfss	status,2,c
  5312  0002D4  EF6E  F001         	goto	u11371
  5313  0002D8  EF70  F001         	goto	u11370
  5314  0002DC                     u11371:
  5315  0002DC  EFF1  F001         	goto	l8991
  5316  0002E0                     u11370:
  5317  0002E0                     
  5318                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  5319  0002E0  0E00               	movlw	0
  5320  0002E2  0100               	movlb	0	; () banked
  5321  0002E4  6FB8               	movwf	(_prec+1)& (0+255),b
  5322  0002E6  0E00               	movlw	0
  5323  0002E8  6FB7               	movwf	_prec& (0+255),b
  5324  0002EA                     
  5325                           ; BSR set to: 0
  5326                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  5327  0002EA  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5328  0002EE  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5329  0002F2  2ADE               	incf	postinc2,f,c
  5330  0002F4  0E00               	movlw	0
  5331  0002F6  22DD               	addwfc	postdec2,f,c
  5332  0002F8                     
  5333                           ; BSR set to: 0
  5334                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  5335  0002F8  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5336  0002FC  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5337  000300  CFDE FFF6          	movff	postinc2,tblptrl
  5338  000304  CFDD FFF7          	movff	postdec2,tblptrh
  5339  000308                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5340  000308  6AF8               	clrf	tblptru,c
  5341  00030A                     	endif
  5342  00030A                     	if	0	;tblptru may be non-zero
  5343  00030A                     	endif
  5344  00030A  0008               	tblrd		*
  5345  00030C  50F5               	movf	tablat,w,c
  5346  00030E  0A2A               	xorlw	42
  5347  000310  A4D8               	btfss	status,2,c
  5348  000312  EF8D  F001         	goto	u11381
  5349  000316  EF8F  F001         	goto	u11380
  5350  00031A                     u11381:
  5351  00031A  EFAC  F001         	goto	l8981
  5352  00031E                     u11380:
  5353  00031E                     
  5354                           ; BSR set to: 0
  5355                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  5356  00031E  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5357  000322  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5358  000326  2ADE               	incf	postinc2,f,c
  5359  000328  0E00               	movlw	0
  5360  00032A  22DD               	addwfc	postdec2,f,c
  5361                           
  5362                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  5363  00032C  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5364  000330  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5365  000334  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  5366  000338  0E02               	movlw	2
  5367  00033A  26DE               	addwf	postinc2,f,c
  5368  00033C  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  5369  000340  0E00               	movlw	0
  5370  000342  22DD               	addwfc	postdec2,f,c
  5371  000344  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5372  000348  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5373  00034C  CFDE F0B7          	movff	postinc2,_prec
  5374  000350  CFDD F0B8          	movff	postdec2,_prec+1
  5375                           
  5376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  5377  000354  EFF1  F001         	goto	l8991
  5378  000358                     l8981:
  5379                           
  5380                           ; BSR set to: 0
  5381                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  5382  000358  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5383  00035C  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5384  000360  CFDE F096          	movff	postinc2,atoi@s
  5385  000364  CFDD F097          	movff	postdec2,atoi@s+1
  5386  000368  EC4D  F01D         	call	_atoi	;wreg free
  5387  00036C  C096  F0B7         	movff	?_atoi,_prec
  5388  000370  C097  F0B8         	movff	?_atoi+1,_prec+1
  5389                           
  5390                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5391  000374  EFC3  F001         	goto	l8985
  5392  000378                     l8983:
  5393                           
  5394                           ; BSR set to: 1
  5395                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  5396  000378  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5397  00037C  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5398  000380  2ADE               	incf	postinc2,f,c
  5399  000382  0E00               	movlw	0
  5400  000384  22DD               	addwfc	postdec2,f,c
  5401  000386                     l8985:
  5402  000386  0ED0               	movlw	208
  5403  000388  0101               	movlb	1	; () banked
  5404  00038A  6F2D               	movwf	??_vfpfcnvrt& (0+255),b
  5405  00038C  0EFF               	movlw	255
  5406  00038E  6F2E               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5407  000390  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5408  000394  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5409  000398  CFDE FFF6          	movff	postinc2,tblptrl
  5410  00039C  CFDD FFF7          	movff	postdec2,tblptrh
  5411  0003A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5412  0003A0  6AF8               	clrf	tblptru,c
  5413  0003A2                     	endif
  5414  0003A2                     	if	0	;tblptru may be non-zero
  5415  0003A2                     	endif
  5416  0003A2  0008               	tblrd		*
  5417  0003A4  50F5               	movf	tablat,w,c
  5418  0003A6  6F2F               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5419  0003A8  6B30               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5420  0003AA  512D               	movf	??_vfpfcnvrt& (0+255),w,b
  5421  0003AC  272F               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5422  0003AE  512E               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5423  0003B0  2330               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5424  0003B2  5130               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5425  0003B4  E10A               	bnz	u11390
  5426  0003B6  0E0A               	movlw	10
  5427  0003B8  5D2F               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5428  0003BA  A0D8               	btfss	status,0,c
  5429  0003BC  EFE2  F001         	goto	u11391
  5430  0003C0  EFE5  F001         	goto	u11390
  5431  0003C4                     u11391:
  5432  0003C4  0E01               	movlw	1
  5433  0003C6  EFE6  F001         	goto	u11400
  5434  0003CA                     u11390:
  5435  0003CA  0E00               	movlw	0
  5436  0003CC                     u11400:
  5437  0003CC  6F37               	movwf	_vfpfcnvrt$1875& (0+255),b
  5438  0003CE  6B38               	clrf	(_vfpfcnvrt$1875+1)& (0+255),b
  5439  0003D0                     
  5440                           ; BSR set to: 1
  5441  0003D0  5137               	movf	_vfpfcnvrt$1875& (0+255),w,b
  5442  0003D2  1138               	iorwf	(_vfpfcnvrt$1875+1)& (0+255),w,b
  5443  0003D4  A4D8               	btfss	status,2,c
  5444  0003D6  EFEF  F001         	goto	u11411
  5445  0003DA  EFF1  F001         	goto	u11410
  5446  0003DE                     u11411:
  5447  0003DE  EFBC  F001         	goto	l8983
  5448  0003E2                     u11410:
  5449  0003E2                     l8991:
  5450                           
  5451                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  5452  0003E2  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5453  0003E6  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5454  0003EA  CFDE FFF6          	movff	postinc2,tblptrl
  5455  0003EE  CFDD FFF7          	movff	postdec2,tblptrh
  5456  0003F2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5457  0003F2  6AF8               	clrf	tblptru,c
  5458  0003F4                     	endif
  5459  0003F4                     	if	0	;tblptru may be non-zero
  5460  0003F4                     	endif
  5461  0003F4  0008               	tblrd		*
  5462  0003F6  50F5               	movf	tablat,w,c
  5463  0003F8  0A63               	xorlw	99
  5464  0003FA  A4D8               	btfss	status,2,c
  5465  0003FC  EF02  F002         	goto	u11421
  5466  000400  EF04  F002         	goto	u11420
  5467  000404                     u11421:
  5468  000404  EF2C  F002         	goto	l8999
  5469  000408                     u11420:
  5470  000408                     
  5471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  5472  000408  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5473  00040C  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5474  000410  2ADE               	incf	postinc2,f,c
  5475  000412  0E00               	movlw	0
  5476  000414  22DD               	addwfc	postdec2,f,c
  5477                           
  5478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5479  000416  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5480  00041A  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5481  00041E  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  5482  000422  0E02               	movlw	2
  5483  000424  26DE               	addwf	postinc2,f,c
  5484  000426  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  5485  00042A  0E00               	movlw	0
  5486  00042C  22DD               	addwfc	postdec2,f,c
  5487  00042E  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5488  000432  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5489  000436  50DF               	movf	indf2,w,c
  5490  000438  0101               	movlb	1	; () banked
  5491  00043A  6F43               	movwf	vfpfcnvrt@c& (0+255),b
  5492  00043C                     
  5493                           ; BSR set to: 1
  5494                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  5495  00043C  C127  F0AC         	movff	vfpfcnvrt@fp,ctoa@fp
  5496  000440  C128  F0AD         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  5497  000444  C143  F0AE         	movff	vfpfcnvrt@c,ctoa@c
  5498  000448  EC6E  F02F         	call	_ctoa	;wreg free
  5499  00044C  C0AC  F127         	movff	?_ctoa,?_vfpfcnvrt
  5500  000450  C0AD  F128         	movff	?_ctoa+1,?_vfpfcnvrt+1
  5501  000454  EFAF  F009         	goto	l875
  5502  000458                     l8999:
  5503                           
  5504                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
  5505  000458  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5506  00045C  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5507  000460  CFDE F08F          	movff	postinc2,strncmp@_l
  5508  000464  CFDD F090          	movff	postdec2,strncmp@_l+1
  5509  000468  0ED1               	movlw	low STR_9
  5510  00046A  0100               	movlb	0	; () banked
  5511  00046C  6F91               	movwf	strncmp@_r& (0+255),b
  5512  00046E  0EFF               	movlw	high STR_9
  5513  000470  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  5514  000472  0E00               	movlw	0
  5515  000474  6F94               	movwf	(strncmp@n+1)& (0+255),b
  5516  000476  0E03               	movlw	3
  5517  000478  6F93               	movwf	strncmp@n& (0+255),b
  5518  00047A  EC23  F02A         	call	_strncmp	;wreg free
  5519  00047E  0100               	movlb	0	; () banked
  5520  000480  518F               	movf	?_strncmp& (0+255),w,b
  5521  000482  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  5522  000484  B4D8               	btfsc	status,2,c
  5523  000486  EF47  F002         	goto	u11431
  5524  00048A  EF49  F002         	goto	u11430
  5525  00048E                     u11431:
  5526  00048E  EF65  F002         	goto	l9003
  5527  000492                     u11430:
  5528  000492                     
  5529                           ; BSR set to: 0
  5530  000492  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5531  000496  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5532  00049A  CFDE F08F          	movff	postinc2,strncmp@_l
  5533  00049E  CFDD F090          	movff	postdec2,strncmp@_l+1
  5534  0004A2  0ED5               	movlw	low STR_13
  5535  0004A4  6F91               	movwf	strncmp@_r& (0+255),b
  5536  0004A6  0EFF               	movlw	high STR_13
  5537  0004A8  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  5538  0004AA  0E00               	movlw	0
  5539  0004AC  6F94               	movwf	(strncmp@n+1)& (0+255),b
  5540  0004AE  0E03               	movlw	3
  5541  0004B0  6F93               	movwf	strncmp@n& (0+255),b
  5542  0004B2  EC23  F02A         	call	_strncmp	;wreg free
  5543  0004B6  0100               	movlb	0	; () banked
  5544  0004B8  518F               	movf	?_strncmp& (0+255),w,b
  5545  0004BA  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  5546  0004BC  A4D8               	btfss	status,2,c
  5547  0004BE  EF63  F002         	goto	u11441
  5548  0004C2  EF65  F002         	goto	u11440
  5549  0004C6                     u11441:
  5550  0004C6  EFA6  F002         	goto	l9009
  5551  0004CA                     u11440:
  5552  0004CA                     l9003:
  5553                           
  5554                           ; BSR set to: 0
  5555                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
  5556  0004CA  0E03               	movlw	3
  5557  0004CC  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5558  0004D0  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5559  0004D4  26DE               	addwf	postinc2,f,c
  5560  0004D6  0E00               	movlw	0
  5561  0004D8  22DD               	addwfc	postdec2,f,c
  5562                           
  5563                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5564  0004DA  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5565  0004DE  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5566  0004E2  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  5567  0004E6  0E02               	movlw	2
  5568  0004E8  26DE               	addwf	postinc2,f,c
  5569  0004EA  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  5570  0004EE  0E00               	movlw	0
  5571  0004F0  22DD               	addwfc	postdec2,f,c
  5572  0004F2  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5573  0004F6  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5574  0004FA  50DF               	movf	indf2,w,c
  5575  0004FC  0101               	movlb	1	; () banked
  5576  0004FE  6F39               	movwf	vfpfcnvrt@ll& (0+255),b
  5577  000500  0E00               	movlw	0
  5578  000502  BF39               	btfsc	vfpfcnvrt@ll& (0+255),7,b
  5579  000504  0EFF               	movlw	-1
  5580  000506  6F3A               	movwf	(vfpfcnvrt@ll+1)& (0+255),b
  5581  000508  6F3B               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  5582  00050A  6F3C               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  5583  00050C  6F3D               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  5584  00050E  6F3E               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  5585  000510  6F3F               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  5586  000512  6F40               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  5587  000514                     l9005:
  5588                           
  5589                           ; BSR set to: 1
  5590                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
  5591  000514  C127  F100         	movff	vfpfcnvrt@fp,dtoa@fp
  5592  000518  C128  F101         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5593  00051C  C139  F102         	movff	vfpfcnvrt@ll,dtoa@d
  5594  000520  C13A  F103         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5595  000524  C13B  F104         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5596  000528  C13C  F105         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5597  00052C  C13D  F106         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5598  000530  C13E  F107         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5599  000534  C13F  F108         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5600  000538  C140  F109         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5601  00053C  EC07  F015         	call	_dtoa	;wreg free
  5602  000540  C100  F127         	movff	?_dtoa,?_vfpfcnvrt
  5603  000544  C101  F128         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5604  000548  EFAF  F009         	goto	l875
  5605  00054C                     l9009:
  5606                           
  5607                           ; BSR set to: 0
  5608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
  5609  00054C  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5610  000550  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5611  000554  CFDE F08F          	movff	postinc2,strncmp@_l
  5612  000558  CFDD F090          	movff	postdec2,strncmp@_l+1
  5613  00055C  0ED2               	movlw	low (STR_9+1)
  5614  00055E  6F91               	movwf	strncmp@_r& (0+255),b
  5615  000560  0EFF               	movlw	high (STR_9+1)
  5616  000562  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  5617  000564  0E00               	movlw	0
  5618  000566  6F94               	movwf	(strncmp@n+1)& (0+255),b
  5619  000568  0E02               	movlw	2
  5620  00056A  6F93               	movwf	strncmp@n& (0+255),b
  5621  00056C  EC23  F02A         	call	_strncmp	;wreg free
  5622  000570  0100               	movlb	0	; () banked
  5623  000572  518F               	movf	?_strncmp& (0+255),w,b
  5624  000574  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  5625  000576  B4D8               	btfsc	status,2,c
  5626  000578  EFC0  F002         	goto	u11451
  5627  00057C  EFC2  F002         	goto	u11450
  5628  000580                     u11451:
  5629  000580  EFDE  F002         	goto	l9013
  5630  000584                     u11450:
  5631  000584                     
  5632                           ; BSR set to: 0
  5633  000584  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5634  000588  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5635  00058C  CFDE F08F          	movff	postinc2,strncmp@_l
  5636  000590  CFDD F090          	movff	postdec2,strncmp@_l+1
  5637  000594  0ED6               	movlw	low (STR_13+1)
  5638  000596  6F91               	movwf	strncmp@_r& (0+255),b
  5639  000598  0EFF               	movlw	high (STR_13+1)
  5640  00059A  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  5641  00059C  0E00               	movlw	0
  5642  00059E  6F94               	movwf	(strncmp@n+1)& (0+255),b
  5643  0005A0  0E02               	movlw	2
  5644  0005A2  6F93               	movwf	strncmp@n& (0+255),b
  5645  0005A4  EC23  F02A         	call	_strncmp	;wreg free
  5646  0005A8  0100               	movlb	0	; () banked
  5647  0005AA  518F               	movf	?_strncmp& (0+255),w,b
  5648  0005AC  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  5649  0005AE  A4D8               	btfss	status,2,c
  5650  0005B0  EFDC  F002         	goto	u11461
  5651  0005B4  EFDE  F002         	goto	u11460
  5652  0005B8                     u11461:
  5653  0005B8  EF06  F003         	goto	l9019
  5654  0005BC                     u11460:
  5655  0005BC                     l9013:
  5656                           
  5657                           ; BSR set to: 0
  5658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
  5659  0005BC  0E02               	movlw	2
  5660  0005BE  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5661  0005C2  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5662  0005C6  26DE               	addwf	postinc2,f,c
  5663  0005C8  0E00               	movlw	0
  5664  0005CA  22DD               	addwfc	postdec2,f,c
  5665                           
  5666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5667  0005CC  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5668  0005D0  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5669  0005D4  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  5670  0005D8  0E02               	movlw	2
  5671  0005DA  26DE               	addwf	postinc2,f,c
  5672  0005DC  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  5673  0005E0  0E00               	movlw	0
  5674  0005E2  22DD               	addwfc	postdec2,f,c
  5675  0005E4  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5676  0005E8  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5677  0005EC  CFDE F139          	movff	postinc2,vfpfcnvrt@ll
  5678  0005F0  CFDD F13A          	movff	postdec2,vfpfcnvrt@ll+1
  5679  0005F4  0101               	movlb	1	; () banked
  5680  0005F6  0E00               	movlw	0
  5681  0005F8  BF3A               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  5682  0005FA  0EFF               	movlw	-1
  5683  0005FC  6F3B               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  5684  0005FE  6F3C               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  5685  000600  6F3D               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  5686  000602  6F3E               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  5687  000604  6F3F               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  5688  000606  6F40               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  5689  000608  EF8A  F002         	goto	l9005
  5690  00060C                     l9019:
  5691                           
  5692                           ; BSR set to: 0
  5693                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5694  00060C  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5695  000610  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5696  000614  CFDE FFF6          	movff	postinc2,tblptrl
  5697  000618  CFDD FFF7          	movff	postdec2,tblptrh
  5698  00061C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5699  00061C  6AF8               	clrf	tblptru,c
  5700  00061E                     	endif
  5701  00061E                     	if	0	;tblptru may be non-zero
  5702  00061E                     	endif
  5703  00061E  0008               	tblrd		*
  5704  000620  50F5               	movf	tablat,w,c
  5705  000622  0A64               	xorlw	100
  5706  000624  B4D8               	btfsc	status,2,c
  5707  000626  EF17  F003         	goto	u11471
  5708  00062A  EF19  F003         	goto	u11470
  5709  00062E                     u11471:
  5710  00062E  EF2C  F003         	goto	l9023
  5711  000632                     u11470:
  5712  000632                     
  5713                           ; BSR set to: 0
  5714  000632  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5715  000636  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5716  00063A  CFDE FFF6          	movff	postinc2,tblptrl
  5717  00063E  CFDD FFF7          	movff	postdec2,tblptrh
  5718  000642                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5719  000642  6AF8               	clrf	tblptru,c
  5720  000644                     	endif
  5721  000644                     	if	0	;tblptru may be non-zero
  5722  000644                     	endif
  5723  000644  0008               	tblrd		*
  5724  000646  50F5               	movf	tablat,w,c
  5725  000648  0A69               	xorlw	105
  5726  00064A  A4D8               	btfss	status,2,c
  5727  00064C  EF2A  F003         	goto	u11481
  5728  000650  EF2C  F003         	goto	u11480
  5729  000654                     u11481:
  5730  000654  EF53  F003         	goto	l9029
  5731  000658                     u11480:
  5732  000658                     l9023:
  5733                           
  5734                           ; BSR set to: 0
  5735                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  5736  000658  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5737  00065C  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5738  000660  2ADE               	incf	postinc2,f,c
  5739  000662  0E00               	movlw	0
  5740  000664  22DD               	addwfc	postdec2,f,c
  5741                           
  5742                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5743  000666  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5744  00066A  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5745  00066E  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  5746  000672  0E02               	movlw	2
  5747  000674  26DE               	addwf	postinc2,f,c
  5748  000676  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  5749  00067A  0E00               	movlw	0
  5750  00067C  22DD               	addwfc	postdec2,f,c
  5751  00067E  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5752  000682  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5753  000686  CFDE F139          	movff	postinc2,vfpfcnvrt@ll
  5754  00068A  CFDD F13A          	movff	postdec2,vfpfcnvrt@ll+1
  5755  00068E  0101               	movlb	1	; () banked
  5756  000690  0E00               	movlw	0
  5757  000692  BF3A               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  5758  000694  0EFF               	movlw	-1
  5759  000696  6F3B               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  5760  000698  6F3C               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  5761  00069A  6F3D               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  5762  00069C  6F3E               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  5763  00069E  6F3F               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  5764  0006A0  6F40               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  5765  0006A2  EF8A  F002         	goto	l9005
  5766  0006A6                     l9029:
  5767                           
  5768                           ; BSR set to: 0
  5769                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
  5770  0006A6  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5771  0006AA  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5772  0006AE  CFDE F08F          	movff	postinc2,strncmp@_l
  5773  0006B2  CFDD F090          	movff	postdec2,strncmp@_l+1
  5774  0006B6  0EEC               	movlw	low STR_27
  5775  0006B8  6F91               	movwf	strncmp@_r& (0+255),b
  5776  0006BA  0EFF               	movlw	high STR_27
  5777  0006BC  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  5778  0006BE  0E00               	movlw	0
  5779  0006C0  6F94               	movwf	(strncmp@n+1)& (0+255),b
  5780  0006C2  0E02               	movlw	2
  5781  0006C4  6F93               	movwf	strncmp@n& (0+255),b
  5782  0006C6  EC23  F02A         	call	_strncmp	;wreg free
  5783  0006CA  0100               	movlb	0	; () banked
  5784  0006CC  518F               	movf	?_strncmp& (0+255),w,b
  5785  0006CE  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  5786  0006D0  B4D8               	btfsc	status,2,c
  5787  0006D2  EF6D  F003         	goto	u11491
  5788  0006D6  EF6F  F003         	goto	u11490
  5789  0006DA                     u11491:
  5790  0006DA  EF8B  F003         	goto	l9033
  5791  0006DE                     u11490:
  5792  0006DE                     
  5793                           ; BSR set to: 0
  5794  0006DE  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5795  0006E2  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5796  0006E6  CFDE F08F          	movff	postinc2,strncmp@_l
  5797  0006EA  CFDD F090          	movff	postdec2,strncmp@_l+1
  5798  0006EE  0EEF               	movlw	low STR_31
  5799  0006F0  6F91               	movwf	strncmp@_r& (0+255),b
  5800  0006F2  0EFF               	movlw	high STR_31
  5801  0006F4  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  5802  0006F6  0E00               	movlw	0
  5803  0006F8  6F94               	movwf	(strncmp@n+1)& (0+255),b
  5804  0006FA  0E02               	movlw	2
  5805  0006FC  6F93               	movwf	strncmp@n& (0+255),b
  5806  0006FE  EC23  F02A         	call	_strncmp	;wreg free
  5807  000702  0100               	movlb	0	; () banked
  5808  000704  518F               	movf	?_strncmp& (0+255),w,b
  5809  000706  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  5810  000708  A4D8               	btfss	status,2,c
  5811  00070A  EF89  F003         	goto	u11501
  5812  00070E  EF8B  F003         	goto	u11500
  5813  000712                     u11501:
  5814  000712  EFB4  F003         	goto	l9039
  5815  000716                     u11500:
  5816  000716                     l9033:
  5817                           
  5818                           ; BSR set to: 0
  5819                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
  5820  000716  0E02               	movlw	2
  5821  000718  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5822  00071C  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5823  000720  26DE               	addwf	postinc2,f,c
  5824  000722  0E00               	movlw	0
  5825  000724  22DD               	addwfc	postdec2,f,c
  5826                           
  5827                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5828  000726  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5829  00072A  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5830  00072E  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  5831  000732  0E02               	movlw	2
  5832  000734  26DE               	addwf	postinc2,f,c
  5833  000736  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  5834  00073A  0E00               	movlw	0
  5835  00073C  22DD               	addwfc	postdec2,f,c
  5836  00073E  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5837  000742  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5838  000746  CFDE F12F          	movff	postinc2,??_vfpfcnvrt+2
  5839  00074A  CFDD F130          	movff	postdec2,??_vfpfcnvrt+3
  5840  00074E  C12F  F139         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  5841  000752  C130  F13A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  5842  000756  0101               	movlb	1	; () banked
  5843  000758  6B3B               	clrf	(vfpfcnvrt@ll+2)& (0+255),b
  5844  00075A  6B3C               	clrf	(vfpfcnvrt@ll+3)& (0+255),b
  5845  00075C  6B3D               	clrf	(vfpfcnvrt@ll+4)& (0+255),b
  5846  00075E  6B3E               	clrf	(vfpfcnvrt@ll+5)& (0+255),b
  5847  000760  6B3F               	clrf	(vfpfcnvrt@ll+6)& (0+255),b
  5848  000762  6B40               	clrf	(vfpfcnvrt@ll+7)& (0+255),b
  5849  000764  EF8A  F002         	goto	l9005
  5850  000768                     l9039:
  5851                           
  5852                           ; BSR set to: 0
  5853                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  5854  000768  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5855  00076C  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5856  000770  CFDE F08F          	movff	postinc2,strncmp@_l
  5857  000774  CFDD F090          	movff	postdec2,strncmp@_l+1
  5858  000778  0EDD               	movlw	low STR_36
  5859  00077A  6F91               	movwf	strncmp@_r& (0+255),b
  5860  00077C  0EFF               	movlw	high STR_36
  5861  00077E  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  5862  000780  0E00               	movlw	0
  5863  000782  6F94               	movwf	(strncmp@n+1)& (0+255),b
  5864  000784  0E03               	movlw	3
  5865  000786  6F93               	movwf	strncmp@n& (0+255),b
  5866  000788  EC23  F02A         	call	_strncmp	;wreg free
  5867  00078C  0100               	movlb	0	; () banked
  5868  00078E  518F               	movf	?_strncmp& (0+255),w,b
  5869  000790  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  5870  000792  A4D8               	btfss	status,2,c
  5871  000794  EFCE  F003         	goto	u11511
  5872  000798  EFD0  F003         	goto	u11510
  5873  00079C                     u11511:
  5874  00079C  EF10  F004         	goto	l9047
  5875  0007A0                     u11510:
  5876  0007A0                     
  5877                           ; BSR set to: 0
  5878                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  5879  0007A0  0E03               	movlw	3
  5880  0007A2  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5881  0007A6  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5882  0007AA  26DE               	addwf	postinc2,f,c
  5883  0007AC  0E00               	movlw	0
  5884  0007AE  22DD               	addwfc	postdec2,f,c
  5885                           
  5886                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5887  0007B0  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5888  0007B4  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5889  0007B8  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  5890  0007BC  0E02               	movlw	2
  5891  0007BE  26DE               	addwf	postinc2,f,c
  5892  0007C0  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  5893  0007C4  0E00               	movlw	0
  5894  0007C6  22DD               	addwfc	postdec2,f,c
  5895  0007C8  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5896  0007CC  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5897  0007D0  50DF               	movf	indf2,w,c
  5898  0007D2  0101               	movlb	1	; () banked
  5899  0007D4  6F2F               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5900  0007D6  512F               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  5901  0007D8  6F44               	movwf	vfpfcnvrt@llu& (0+255),b
  5902  0007DA  6B45               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  5903  0007DC  6B46               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5904  0007DE  6B47               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5905  0007E0  6B48               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5906  0007E2  6B49               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5907  0007E4  6B4A               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5908  0007E6  6B4B               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5909  0007E8                     l9043:
  5910                           
  5911                           ; BSR set to: 1
  5912                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
  5913  0007E8  C127  F100         	movff	vfpfcnvrt@fp,otoa@fp
  5914  0007EC  C128  F101         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  5915  0007F0  C144  F102         	movff	vfpfcnvrt@llu,otoa@d
  5916  0007F4  C145  F103         	movff	vfpfcnvrt@llu+1,otoa@d+1
  5917  0007F8  C146  F104         	movff	vfpfcnvrt@llu+2,otoa@d+2
  5918  0007FC  C147  F105         	movff	vfpfcnvrt@llu+3,otoa@d+3
  5919  000800  C148  F106         	movff	vfpfcnvrt@llu+4,otoa@d+4
  5920  000804  C149  F107         	movff	vfpfcnvrt@llu+5,otoa@d+5
  5921  000808  C14A  F108         	movff	vfpfcnvrt@llu+6,otoa@d+6
  5922  00080C  C14B  F109         	movff	vfpfcnvrt@llu+7,otoa@d+7
  5923  000810  EC58  F020         	call	_otoa	;wreg free
  5924  000814  C100  F127         	movff	?_otoa,?_vfpfcnvrt
  5925  000818  C101  F128         	movff	?_otoa+1,?_vfpfcnvrt+1
  5926  00081C  EFAF  F009         	goto	l875
  5927  000820                     l9047:
  5928                           
  5929                           ; BSR set to: 0
  5930                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  5931  000820  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5932  000824  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5933  000828  CFDE F08F          	movff	postinc2,strncmp@_l
  5934  00082C  CFDD F090          	movff	postdec2,strncmp@_l+1
  5935  000830  0EDE               	movlw	low (STR_36+1)
  5936  000832  6F91               	movwf	strncmp@_r& (0+255),b
  5937  000834  0EFF               	movlw	high (STR_36+1)
  5938  000836  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  5939  000838  0E00               	movlw	0
  5940  00083A  6F94               	movwf	(strncmp@n+1)& (0+255),b
  5941  00083C  0E02               	movlw	2
  5942  00083E  6F93               	movwf	strncmp@n& (0+255),b
  5943  000840  EC23  F02A         	call	_strncmp	;wreg free
  5944  000844  0100               	movlb	0	; () banked
  5945  000846  518F               	movf	?_strncmp& (0+255),w,b
  5946  000848  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  5947  00084A  A4D8               	btfss	status,2,c
  5948  00084C  EF2A  F004         	goto	u11521
  5949  000850  EF2C  F004         	goto	u11520
  5950  000854                     u11521:
  5951  000854  EF55  F004         	goto	l9055
  5952  000858                     u11520:
  5953  000858                     
  5954                           ; BSR set to: 0
  5955                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  5956  000858  0E02               	movlw	2
  5957  00085A  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5958  00085E  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5959  000862  26DE               	addwf	postinc2,f,c
  5960  000864  0E00               	movlw	0
  5961  000866  22DD               	addwfc	postdec2,f,c
  5962                           
  5963                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5964  000868  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5965  00086C  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5966  000870  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  5967  000874  0E02               	movlw	2
  5968  000876  26DE               	addwf	postinc2,f,c
  5969  000878  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  5970  00087C  0E00               	movlw	0
  5971  00087E  22DD               	addwfc	postdec2,f,c
  5972  000880  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5973  000884  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5974  000888  CFDE F12F          	movff	postinc2,??_vfpfcnvrt+2
  5975  00088C  CFDD F130          	movff	postdec2,??_vfpfcnvrt+3
  5976  000890  C12F  F144         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5977  000894  C130  F145         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5978  000898  0101               	movlb	1	; () banked
  5979  00089A  6B46               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5980  00089C  6B47               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5981  00089E  6B48               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5982  0008A0  6B49               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5983  0008A2  6B4A               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5984  0008A4  6B4B               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5985  0008A6  EFF4  F003         	goto	l9043
  5986  0008AA                     l9055:
  5987                           
  5988                           ; BSR set to: 0
  5989                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
  5990  0008AA  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5991  0008AE  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5992  0008B2  CFDE FFF6          	movff	postinc2,tblptrl
  5993  0008B6  CFDD FFF7          	movff	postdec2,tblptrh
  5994  0008BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5995  0008BA  6AF8               	clrf	tblptru,c
  5996  0008BC                     	endif
  5997  0008BC                     	if	0	;tblptru may be non-zero
  5998  0008BC                     	endif
  5999  0008BC  0008               	tblrd		*
  6000  0008BE  50F5               	movf	tablat,w,c
  6001  0008C0  0A6F               	xorlw	111
  6002  0008C2  A4D8               	btfss	status,2,c
  6003  0008C4  EF66  F004         	goto	u11531
  6004  0008C8  EF68  F004         	goto	u11530
  6005  0008CC                     u11531:
  6006  0008CC  EF90  F004         	goto	l9063
  6007  0008D0                     u11530:
  6008  0008D0                     
  6009                           ; BSR set to: 0
  6010                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
  6011  0008D0  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6012  0008D4  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6013  0008D8  2ADE               	incf	postinc2,f,c
  6014  0008DA  0E00               	movlw	0
  6015  0008DC  22DD               	addwfc	postdec2,f,c
  6016                           
  6017                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
  6018  0008DE  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6019  0008E2  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6020  0008E6  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  6021  0008EA  0E02               	movlw	2
  6022  0008EC  26DE               	addwf	postinc2,f,c
  6023  0008EE  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  6024  0008F2  0E00               	movlw	0
  6025  0008F4  22DD               	addwfc	postdec2,f,c
  6026  0008F6  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6027  0008FA  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6028  0008FE  CFDE F12F          	movff	postinc2,??_vfpfcnvrt+2
  6029  000902  CFDD F130          	movff	postdec2,??_vfpfcnvrt+3
  6030  000906  C12F  F144         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6031  00090A  C130  F145         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6032  00090E  0101               	movlb	1	; () banked
  6033  000910  6B46               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6034  000912  6B47               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6035  000914  6B48               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6036  000916  6B49               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6037  000918  6B4A               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6038  00091A  6B4B               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6039  00091C  EFF4  F003         	goto	l9043
  6040  000920                     l9063:
  6041                           
  6042                           ; BSR set to: 0
  6043                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  6044  000920  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6045  000924  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6046  000928  CFDE F08F          	movff	postinc2,strncmp@_l
  6047  00092C  CFDD F090          	movff	postdec2,strncmp@_l+1
  6048  000930  0EF5               	movlw	low STR_46
  6049  000932  6F91               	movwf	strncmp@_r& (0+255),b
  6050  000934  0EFF               	movlw	high STR_46
  6051  000936  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  6052  000938  0E00               	movlw	0
  6053  00093A  6F94               	movwf	(strncmp@n+1)& (0+255),b
  6054  00093C  0E02               	movlw	2
  6055  00093E  6F93               	movwf	strncmp@n& (0+255),b
  6056  000940  EC23  F02A         	call	_strncmp	;wreg free
  6057  000944  0100               	movlb	0	; () banked
  6058  000946  518F               	movf	?_strncmp& (0+255),w,b
  6059  000948  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  6060  00094A  A4D8               	btfss	status,2,c
  6061  00094C  EFAA  F004         	goto	u11541
  6062  000950  EFAC  F004         	goto	u11540
  6063  000954                     u11541:
  6064  000954  EFD5  F004         	goto	l9071
  6065  000958                     u11540:
  6066  000958                     
  6067                           ; BSR set to: 0
  6068                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  6069  000958  0E02               	movlw	2
  6070  00095A  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6071  00095E  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6072  000962  26DE               	addwf	postinc2,f,c
  6073  000964  0E00               	movlw	0
  6074  000966  22DD               	addwfc	postdec2,f,c
  6075                           
  6076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6077  000968  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6078  00096C  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6079  000970  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  6080  000974  0E02               	movlw	2
  6081  000976  26DE               	addwf	postinc2,f,c
  6082  000978  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  6083  00097C  0E00               	movlw	0
  6084  00097E  22DD               	addwfc	postdec2,f,c
  6085  000980  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6086  000984  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6087  000988  CFDE F12F          	movff	postinc2,??_vfpfcnvrt+2
  6088  00098C  CFDD F130          	movff	postdec2,??_vfpfcnvrt+3
  6089  000990  C12F  F144         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6090  000994  C130  F145         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6091  000998  0101               	movlb	1	; () banked
  6092  00099A  6B46               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6093  00099C  6B47               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6094  00099E  6B48               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6095  0009A0  6B49               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6096  0009A2  6B4A               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6097  0009A4  6B4B               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6098  0009A6  EFF4  F003         	goto	l9043
  6099  0009AA                     l9071:
  6100                           
  6101                           ; BSR set to: 0
  6102                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  6103  0009AA  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6104  0009AE  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6105  0009B2  CFDE F08F          	movff	postinc2,strncmp@_l
  6106  0009B6  CFDD F090          	movff	postdec2,strncmp@_l+1
  6107  0009BA  0ED9               	movlw	low STR_51
  6108  0009BC  6F91               	movwf	strncmp@_r& (0+255),b
  6109  0009BE  0EFF               	movlw	high STR_51
  6110  0009C0  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  6111  0009C2  0E00               	movlw	0
  6112  0009C4  6F94               	movwf	(strncmp@n+1)& (0+255),b
  6113  0009C6  0E03               	movlw	3
  6114  0009C8  6F93               	movwf	strncmp@n& (0+255),b
  6115  0009CA  EC23  F02A         	call	_strncmp	;wreg free
  6116  0009CE  0100               	movlb	0	; () banked
  6117  0009D0  518F               	movf	?_strncmp& (0+255),w,b
  6118  0009D2  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  6119  0009D4  A4D8               	btfss	status,2,c
  6120  0009D6  EFEF  F004         	goto	u11551
  6121  0009DA  EFF1  F004         	goto	u11550
  6122  0009DE                     u11551:
  6123  0009DE  EF1A  F005         	goto	l9081
  6124  0009E2                     u11550:
  6125  0009E2                     
  6126                           ; BSR set to: 0
  6127                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  6128  0009E2  0E03               	movlw	3
  6129  0009E4  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6130  0009E8  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6131  0009EC  26DE               	addwf	postinc2,f,c
  6132  0009EE  0E00               	movlw	0
  6133  0009F0  22DD               	addwfc	postdec2,f,c
  6134                           
  6135                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  6136  0009F2  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6137  0009F6  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6138  0009FA  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  6139  0009FE  0E02               	movlw	2
  6140  000A00  26DE               	addwf	postinc2,f,c
  6141  000A02  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  6142  000A06  0E00               	movlw	0
  6143  000A08  22DD               	addwfc	postdec2,f,c
  6144  000A0A  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6145  000A0E  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6146  000A12  CFDE F141          	movff	postinc2,vfpfcnvrt@vp
  6147  000A16  CFDD F142          	movff	postdec2,vfpfcnvrt@vp+1
  6148  000A1A                     
  6149                           ; BSR set to: 0
  6150                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
  6151  000A1A  C141  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  6152  000A1E  C142  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  6153  000A22  C17F  FFDF         	movff	_nout,indf2
  6154  000A26                     l9077:
  6155                           
  6156                           ; BSR set to: 0
  6157                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
  6158  000A26  0E00               	movlw	0
  6159  000A28  0101               	movlb	1	; () banked
  6160  000A2A  6F28               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  6161  000A2C  0E00               	movlw	0
  6162  000A2E  6F27               	movwf	?_vfpfcnvrt& (0+255),b
  6163  000A30  EFAF  F009         	goto	l875
  6164  000A34                     l9081:
  6165                           
  6166                           ; BSR set to: 0
  6167                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  6168  000A34  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6169  000A38  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6170  000A3C  CFDE F08F          	movff	postinc2,strncmp@_l
  6171  000A40  CFDD F090          	movff	postdec2,strncmp@_l+1
  6172  000A44  0EDA               	movlw	low (STR_51+1)
  6173  000A46  6F91               	movwf	strncmp@_r& (0+255),b
  6174  000A48  0EFF               	movlw	high (STR_51+1)
  6175  000A4A  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  6176  000A4C  0E00               	movlw	0
  6177  000A4E  6F94               	movwf	(strncmp@n+1)& (0+255),b
  6178  000A50  0E02               	movlw	2
  6179  000A52  6F93               	movwf	strncmp@n& (0+255),b
  6180  000A54  EC23  F02A         	call	_strncmp	;wreg free
  6181  000A58  0100               	movlb	0	; () banked
  6182  000A5A  518F               	movf	?_strncmp& (0+255),w,b
  6183  000A5C  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  6184  000A5E  A4D8               	btfss	status,2,c
  6185  000A60  EF34  F005         	goto	u11561
  6186  000A64  EF36  F005         	goto	u11560
  6187  000A68                     u11561:
  6188  000A68  EF5C  F005         	goto	l9091
  6189  000A6C                     u11560:
  6190  000A6C                     
  6191                           ; BSR set to: 0
  6192                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  6193  000A6C  0E02               	movlw	2
  6194  000A6E  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6195  000A72  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6196  000A76  26DE               	addwf	postinc2,f,c
  6197  000A78  0E00               	movlw	0
  6198  000A7A  22DD               	addwfc	postdec2,f,c
  6199                           
  6200                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  6201  000A7C  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6202  000A80  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6203  000A84  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  6204  000A88  0E02               	movlw	2
  6205  000A8A  26DE               	addwf	postinc2,f,c
  6206  000A8C  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  6207  000A90  0E00               	movlw	0
  6208  000A92  22DD               	addwfc	postdec2,f,c
  6209  000A94  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6210  000A98  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6211  000A9C  CFDE F141          	movff	postinc2,vfpfcnvrt@vp
  6212  000AA0  CFDD F142          	movff	postdec2,vfpfcnvrt@vp+1
  6213  000AA4                     
  6214                           ; BSR set to: 0
  6215                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
  6216  000AA4  C141  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  6217  000AA8  C142  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  6218  000AAC  C17F  FFDE         	movff	_nout,postinc2
  6219  000AB0  C180  FFDD         	movff	_nout+1,postdec2
  6220  000AB4  EF13  F005         	goto	l9077
  6221  000AB8                     l9091:
  6222                           
  6223                           ; BSR set to: 0
  6224                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  6225  000AB8  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6226  000ABC  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6227  000AC0  CFDE FFF6          	movff	postinc2,tblptrl
  6228  000AC4  CFDD FFF7          	movff	postdec2,tblptrh
  6229  000AC8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6230  000AC8  6AF8               	clrf	tblptru,c
  6231  000ACA                     	endif
  6232  000ACA                     	if	0	;tblptru may be non-zero
  6233  000ACA                     	endif
  6234  000ACA  0008               	tblrd		*
  6235  000ACC  50F5               	movf	tablat,w,c
  6236  000ACE  0A6E               	xorlw	110
  6237  000AD0  A4D8               	btfss	status,2,c
  6238  000AD2  EF6D  F005         	goto	u11571
  6239  000AD6  EF6F  F005         	goto	u11570
  6240  000ADA                     u11571:
  6241  000ADA  EF94  F005         	goto	l9101
  6242  000ADE                     u11570:
  6243  000ADE                     
  6244                           ; BSR set to: 0
  6245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  6246  000ADE  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6247  000AE2  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6248  000AE6  2ADE               	incf	postinc2,f,c
  6249  000AE8  0E00               	movlw	0
  6250  000AEA  22DD               	addwfc	postdec2,f,c
  6251                           
  6252                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  6253  000AEC  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6254  000AF0  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6255  000AF4  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  6256  000AF8  0E02               	movlw	2
  6257  000AFA  26DE               	addwf	postinc2,f,c
  6258  000AFC  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  6259  000B00  0E00               	movlw	0
  6260  000B02  22DD               	addwfc	postdec2,f,c
  6261  000B04  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6262  000B08  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6263  000B0C  CFDE F141          	movff	postinc2,vfpfcnvrt@vp
  6264  000B10  CFDD F142          	movff	postdec2,vfpfcnvrt@vp+1
  6265  000B14                     
  6266                           ; BSR set to: 0
  6267                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  6268  000B14  C141  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  6269  000B18  C142  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  6270  000B1C  C17F  FFDE         	movff	_nout,postinc2
  6271  000B20  C180  FFDD         	movff	_nout+1,postdec2
  6272  000B24  EF13  F005         	goto	l9077
  6273  000B28                     l9101:
  6274                           
  6275                           ; BSR set to: 0
  6276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  6277  000B28  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6278  000B2C  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6279  000B30  CFDE F08F          	movff	postinc2,strncmp@_l
  6280  000B34  CFDD F090          	movff	postdec2,strncmp@_l+1
  6281  000B38  0EF2               	movlw	low STR_61
  6282  000B3A  6F91               	movwf	strncmp@_r& (0+255),b
  6283  000B3C  0EFF               	movlw	high STR_61
  6284  000B3E  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  6285  000B40  0E00               	movlw	0
  6286  000B42  6F94               	movwf	(strncmp@n+1)& (0+255),b
  6287  000B44  0E02               	movlw	2
  6288  000B46  6F93               	movwf	strncmp@n& (0+255),b
  6289  000B48  EC23  F02A         	call	_strncmp	;wreg free
  6290  000B4C  0100               	movlb	0	; () banked
  6291  000B4E  518F               	movf	?_strncmp& (0+255),w,b
  6292  000B50  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  6293  000B52  A4D8               	btfss	status,2,c
  6294  000B54  EFAE  F005         	goto	u11581
  6295  000B58  EFB0  F005         	goto	u11580
  6296  000B5C                     u11581:
  6297  000B5C  EFD6  F005         	goto	l9111
  6298  000B60                     u11580:
  6299  000B60                     
  6300                           ; BSR set to: 0
  6301                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  6302  000B60  0E02               	movlw	2
  6303  000B62  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6304  000B66  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6305  000B6A  26DE               	addwf	postinc2,f,c
  6306  000B6C  0E00               	movlw	0
  6307  000B6E  22DD               	addwfc	postdec2,f,c
  6308                           
  6309                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  6310  000B70  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6311  000B74  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6312  000B78  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  6313  000B7C  0E02               	movlw	2
  6314  000B7E  26DE               	addwf	postinc2,f,c
  6315  000B80  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  6316  000B84  0E00               	movlw	0
  6317  000B86  22DD               	addwfc	postdec2,f,c
  6318  000B88  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6319  000B8C  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6320  000B90  CFDE F141          	movff	postinc2,vfpfcnvrt@vp
  6321  000B94  CFDD F142          	movff	postdec2,vfpfcnvrt@vp+1
  6322  000B98                     
  6323                           ; BSR set to: 0
  6324                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
  6325  000B98  C141  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  6326  000B9C  C142  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  6327  000BA0  C17F  FFDE         	movff	_nout,postinc2
  6328  000BA4  C180  FFDD         	movff	_nout+1,postdec2
  6329  000BA8  EF13  F005         	goto	l9077
  6330  000BAC                     l9111:
  6331                           
  6332                           ; BSR set to: 0
  6333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
  6334  000BAC  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6335  000BB0  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6336  000BB4  CFDE FFF6          	movff	postinc2,tblptrl
  6337  000BB8  CFDD FFF7          	movff	postdec2,tblptrh
  6338  000BBC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6339  000BBC  6AF8               	clrf	tblptru,c
  6340  000BBE                     	endif
  6341  000BBE                     	if	0	;tblptru may be non-zero
  6342  000BBE                     	endif
  6343  000BBE  0008               	tblrd		*
  6344  000BC0  50F5               	movf	tablat,w,c
  6345  000BC2  0A70               	xorlw	112
  6346  000BC4  A4D8               	btfss	status,2,c
  6347  000BC6  EFE7  F005         	goto	u11591
  6348  000BCA  EFE9  F005         	goto	u11590
  6349  000BCE                     u11591:
  6350  000BCE  EF2D  F006         	goto	l9119
  6351  000BD2                     u11590:
  6352  000BD2                     
  6353                           ; BSR set to: 0
  6354                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
  6355  000BD2  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6356  000BD6  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6357  000BDA  2ADE               	incf	postinc2,f,c
  6358  000BDC  0E00               	movlw	0
  6359  000BDE  22DD               	addwfc	postdec2,f,c
  6360                           
  6361                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
  6362  000BE0  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6363  000BE4  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6364  000BE8  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  6365  000BEC  0E02               	movlw	2
  6366  000BEE  26DE               	addwf	postinc2,f,c
  6367  000BF0  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  6368  000BF4  0E00               	movlw	0
  6369  000BF6  22DD               	addwfc	postdec2,f,c
  6370  000BF8  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6371  000BFC  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6372  000C00  CFDE F12F          	movff	postinc2,??_vfpfcnvrt+2
  6373  000C04  CFDD F130          	movff	postdec2,??_vfpfcnvrt+3
  6374  000C08  C12F  F144         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6375  000C0C  C130  F145         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6376  000C10  0101               	movlb	1	; () banked
  6377  000C12  6B46               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6378  000C14  6B47               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6379  000C16  6B48               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6380  000C18  6B49               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6381  000C1A  6B4A               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6382  000C1C  6B4B               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6383  000C1E                     
  6384                           ; BSR set to: 1
  6385                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
  6386  000C1E  C127  F100         	movff	vfpfcnvrt@fp,xtoa@fp
  6387  000C22  C128  F101         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6388  000C26  C144  F102         	movff	vfpfcnvrt@llu,xtoa@d
  6389  000C2A  C145  F103         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6390  000C2E  C146  F104         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6391  000C32  C147  F105         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6392  000C36  C148  F106         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6393  000C3A  C149  F107         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6394  000C3E  C14A  F108         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6395  000C42  C14B  F109         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6396  000C46  0E78               	movlw	120
  6397  000C48  6F0A               	movwf	xtoa@x& (0+255),b
  6398  000C4A  EC8A  F016         	call	_xtoa	;wreg free
  6399  000C4E  C100  F127         	movff	?_xtoa,?_vfpfcnvrt
  6400  000C52  C101  F128         	movff	?_xtoa+1,?_vfpfcnvrt+1
  6401  000C56  EFAF  F009         	goto	l875
  6402  000C5A                     l9119:
  6403                           
  6404                           ; BSR set to: 0
  6405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  6406  000C5A  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6407  000C5E  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6408  000C62  CFDE FFF6          	movff	postinc2,tblptrl
  6409  000C66  CFDD FFF7          	movff	postdec2,tblptrh
  6410  000C6A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6411  000C6A  6AF8               	clrf	tblptru,c
  6412  000C6C                     	endif
  6413  000C6C                     	if	0	;tblptru may be non-zero
  6414  000C6C                     	endif
  6415  000C6C  0008               	tblrd		*
  6416  000C6E  50F5               	movf	tablat,w,c
  6417  000C70  0A73               	xorlw	115
  6418  000C72  A4D8               	btfss	status,2,c
  6419  000C74  EF3E  F006         	goto	u11601
  6420  000C78  EF40  F006         	goto	u11600
  6421  000C7C                     u11601:
  6422  000C7C  EF6B  F006         	goto	l9127
  6423  000C80                     u11600:
  6424  000C80                     
  6425                           ; BSR set to: 0
  6426                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  6427  000C80  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6428  000C84  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6429  000C88  2ADE               	incf	postinc2,f,c
  6430  000C8A  0E00               	movlw	0
  6431  000C8C  22DD               	addwfc	postdec2,f,c
  6432                           
  6433                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  6434  000C8E  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6435  000C92  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6436  000C96  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  6437  000C9A  0E02               	movlw	2
  6438  000C9C  26DE               	addwf	postinc2,f,c
  6439  000C9E  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  6440  000CA2  0E00               	movlw	0
  6441  000CA4  22DD               	addwfc	postdec2,f,c
  6442  000CA6  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6443  000CAA  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6444  000CAE  CFDE F131          	movff	postinc2,vfpfcnvrt@cp
  6445  000CB2  CFDD F132          	movff	postdec2,vfpfcnvrt@cp+1
  6446  000CB6                     
  6447                           ; BSR set to: 0
  6448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  6449  000CB6  C127  F09A         	movff	vfpfcnvrt@fp,stoa@fp
  6450  000CBA  C128  F09B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  6451  000CBE  C131  F09C         	movff	vfpfcnvrt@cp,stoa@s
  6452  000CC2  C132  F09D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  6453  000CC6  EC4F  F022         	call	_stoa	;wreg free
  6454  000CCA  C09A  F127         	movff	?_stoa,?_vfpfcnvrt
  6455  000CCE  C09B  F128         	movff	?_stoa+1,?_vfpfcnvrt+1
  6456  000CD2  EFAF  F009         	goto	l875
  6457  000CD6                     l9127:
  6458                           
  6459                           ; BSR set to: 0
  6460                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  6461  000CD6  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6462  000CDA  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6463  000CDE  CFDE F08F          	movff	postinc2,strncmp@_l
  6464  000CE2  CFDD F090          	movff	postdec2,strncmp@_l+1
  6465  000CE6  0EE1               	movlw	low STR_66
  6466  000CE8  6F91               	movwf	strncmp@_r& (0+255),b
  6467  000CEA  0EFF               	movlw	high STR_66
  6468  000CEC  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  6469  000CEE  0E00               	movlw	0
  6470  000CF0  6F94               	movwf	(strncmp@n+1)& (0+255),b
  6471  000CF2  0E03               	movlw	3
  6472  000CF4  6F93               	movwf	strncmp@n& (0+255),b
  6473  000CF6  EC23  F02A         	call	_strncmp	;wreg free
  6474  000CFA  0100               	movlb	0	; () banked
  6475  000CFC  518F               	movf	?_strncmp& (0+255),w,b
  6476  000CFE  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  6477  000D00  A4D8               	btfss	status,2,c
  6478  000D02  EF85  F006         	goto	u11611
  6479  000D06  EF87  F006         	goto	u11610
  6480  000D0A                     u11611:
  6481  000D0A  EFC7  F006         	goto	l9135
  6482  000D0E                     u11610:
  6483  000D0E                     
  6484                           ; BSR set to: 0
  6485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  6486  000D0E  0E03               	movlw	3
  6487  000D10  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6488  000D14  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6489  000D18  26DE               	addwf	postinc2,f,c
  6490  000D1A  0E00               	movlw	0
  6491  000D1C  22DD               	addwfc	postdec2,f,c
  6492                           
  6493                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6494  000D1E  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6495  000D22  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6496  000D26  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  6497  000D2A  0E02               	movlw	2
  6498  000D2C  26DE               	addwf	postinc2,f,c
  6499  000D2E  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  6500  000D32  0E00               	movlw	0
  6501  000D34  22DD               	addwfc	postdec2,f,c
  6502  000D36  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6503  000D3A  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6504  000D3E  50DF               	movf	indf2,w,c
  6505  000D40  0101               	movlb	1	; () banked
  6506  000D42  6F2F               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6507  000D44  512F               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  6508  000D46  6F44               	movwf	vfpfcnvrt@llu& (0+255),b
  6509  000D48  6B45               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  6510  000D4A  6B46               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6511  000D4C  6B47               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6512  000D4E  6B48               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6513  000D50  6B49               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6514  000D52  6B4A               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6515  000D54  6B4B               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6516  000D56                     l9131:
  6517                           
  6518                           ; BSR set to: 1
  6519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
  6520  000D56  C127  F100         	movff	vfpfcnvrt@fp,utoa@fp
  6521  000D5A  C128  F101         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  6522  000D5E  C144  F102         	movff	vfpfcnvrt@llu,utoa@d
  6523  000D62  C145  F103         	movff	vfpfcnvrt@llu+1,utoa@d+1
  6524  000D66  C146  F104         	movff	vfpfcnvrt@llu+2,utoa@d+2
  6525  000D6A  C147  F105         	movff	vfpfcnvrt@llu+3,utoa@d+3
  6526  000D6E  C148  F106         	movff	vfpfcnvrt@llu+4,utoa@d+4
  6527  000D72  C149  F107         	movff	vfpfcnvrt@llu+5,utoa@d+5
  6528  000D76  C14A  F108         	movff	vfpfcnvrt@llu+6,utoa@d+6
  6529  000D7A  C14B  F109         	movff	vfpfcnvrt@llu+7,utoa@d+7
  6530  000D7E  EC41  F01C         	call	_utoa	;wreg free
  6531  000D82  C100  F127         	movff	?_utoa,?_vfpfcnvrt
  6532  000D86  C101  F128         	movff	?_utoa+1,?_vfpfcnvrt+1
  6533  000D8A  EFAF  F009         	goto	l875
  6534  000D8E                     l9135:
  6535                           
  6536                           ; BSR set to: 0
  6537                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  6538  000D8E  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6539  000D92  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6540  000D96  CFDE F08F          	movff	postinc2,strncmp@_l
  6541  000D9A  CFDD F090          	movff	postdec2,strncmp@_l+1
  6542  000D9E  0EE2               	movlw	low (STR_66+1)
  6543  000DA0  6F91               	movwf	strncmp@_r& (0+255),b
  6544  000DA2  0EFF               	movlw	high (STR_66+1)
  6545  000DA4  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  6546  000DA6  0E00               	movlw	0
  6547  000DA8  6F94               	movwf	(strncmp@n+1)& (0+255),b
  6548  000DAA  0E02               	movlw	2
  6549  000DAC  6F93               	movwf	strncmp@n& (0+255),b
  6550  000DAE  EC23  F02A         	call	_strncmp	;wreg free
  6551  000DB2  0100               	movlb	0	; () banked
  6552  000DB4  518F               	movf	?_strncmp& (0+255),w,b
  6553  000DB6  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  6554  000DB8  A4D8               	btfss	status,2,c
  6555  000DBA  EFE1  F006         	goto	u11621
  6556  000DBE  EFE3  F006         	goto	u11620
  6557  000DC2                     u11621:
  6558  000DC2  EF0C  F007         	goto	l9143
  6559  000DC6                     u11620:
  6560  000DC6                     
  6561                           ; BSR set to: 0
  6562                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  6563  000DC6  0E02               	movlw	2
  6564  000DC8  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6565  000DCC  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6566  000DD0  26DE               	addwf	postinc2,f,c
  6567  000DD2  0E00               	movlw	0
  6568  000DD4  22DD               	addwfc	postdec2,f,c
  6569                           
  6570                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  6571  000DD6  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6572  000DDA  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6573  000DDE  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  6574  000DE2  0E02               	movlw	2
  6575  000DE4  26DE               	addwf	postinc2,f,c
  6576  000DE6  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  6577  000DEA  0E00               	movlw	0
  6578  000DEC  22DD               	addwfc	postdec2,f,c
  6579  000DEE  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6580  000DF2  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6581  000DF6  CFDE F12F          	movff	postinc2,??_vfpfcnvrt+2
  6582  000DFA  CFDD F130          	movff	postdec2,??_vfpfcnvrt+3
  6583  000DFE  C12F  F144         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6584  000E02  C130  F145         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6585  000E06  0101               	movlb	1	; () banked
  6586  000E08  6B46               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6587  000E0A  6B47               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6588  000E0C  6B48               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6589  000E0E  6B49               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6590  000E10  6B4A               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6591  000E12  6B4B               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6592  000E14  EFAB  F006         	goto	l9131
  6593  000E18                     l9143:
  6594                           
  6595                           ; BSR set to: 0
  6596                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  6597  000E18  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6598  000E1C  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6599  000E20  CFDE FFF6          	movff	postinc2,tblptrl
  6600  000E24  CFDD FFF7          	movff	postdec2,tblptrh
  6601  000E28                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6602  000E28  6AF8               	clrf	tblptru,c
  6603  000E2A                     	endif
  6604  000E2A                     	if	0	;tblptru may be non-zero
  6605  000E2A                     	endif
  6606  000E2A  0008               	tblrd		*
  6607  000E2C  50F5               	movf	tablat,w,c
  6608  000E2E  0A75               	xorlw	117
  6609  000E30  A4D8               	btfss	status,2,c
  6610  000E32  EF1D  F007         	goto	u11631
  6611  000E36  EF1F  F007         	goto	u11630
  6612  000E3A                     u11631:
  6613  000E3A  EF47  F007         	goto	l9151
  6614  000E3E                     u11630:
  6615  000E3E                     
  6616                           ; BSR set to: 0
  6617                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  6618  000E3E  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6619  000E42  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6620  000E46  2ADE               	incf	postinc2,f,c
  6621  000E48  0E00               	movlw	0
  6622  000E4A  22DD               	addwfc	postdec2,f,c
  6623                           
  6624                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  6625  000E4C  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6626  000E50  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6627  000E54  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  6628  000E58  0E02               	movlw	2
  6629  000E5A  26DE               	addwf	postinc2,f,c
  6630  000E5C  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  6631  000E60  0E00               	movlw	0
  6632  000E62  22DD               	addwfc	postdec2,f,c
  6633  000E64  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6634  000E68  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6635  000E6C  CFDE F12F          	movff	postinc2,??_vfpfcnvrt+2
  6636  000E70  CFDD F130          	movff	postdec2,??_vfpfcnvrt+3
  6637  000E74  C12F  F144         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6638  000E78  C130  F145         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6639  000E7C  0101               	movlb	1	; () banked
  6640  000E7E  6B46               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6641  000E80  6B47               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6642  000E82  6B48               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6643  000E84  6B49               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6644  000E86  6B4A               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6645  000E88  6B4B               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6646  000E8A  EFAB  F006         	goto	l9131
  6647  000E8E                     l9151:
  6648                           
  6649                           ; BSR set to: 0
  6650                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  6651  000E8E  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6652  000E92  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6653  000E96  CFDE F08F          	movff	postinc2,strncmp@_l
  6654  000E9A  CFDD F090          	movff	postdec2,strncmp@_l+1
  6655  000E9E  0EF8               	movlw	low STR_76
  6656  000EA0  6F91               	movwf	strncmp@_r& (0+255),b
  6657  000EA2  0EFF               	movlw	high STR_76
  6658  000EA4  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  6659  000EA6  0E00               	movlw	0
  6660  000EA8  6F94               	movwf	(strncmp@n+1)& (0+255),b
  6661  000EAA  0E02               	movlw	2
  6662  000EAC  6F93               	movwf	strncmp@n& (0+255),b
  6663  000EAE  EC23  F02A         	call	_strncmp	;wreg free
  6664  000EB2  0100               	movlb	0	; () banked
  6665  000EB4  518F               	movf	?_strncmp& (0+255),w,b
  6666  000EB6  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  6667  000EB8  A4D8               	btfss	status,2,c
  6668  000EBA  EF61  F007         	goto	u11641
  6669  000EBE  EF63  F007         	goto	u11640
  6670  000EC2                     u11641:
  6671  000EC2  EF8C  F007         	goto	l9159
  6672  000EC6                     u11640:
  6673  000EC6                     
  6674                           ; BSR set to: 0
  6675                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  6676  000EC6  0E02               	movlw	2
  6677  000EC8  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6678  000ECC  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6679  000ED0  26DE               	addwf	postinc2,f,c
  6680  000ED2  0E00               	movlw	0
  6681  000ED4  22DD               	addwfc	postdec2,f,c
  6682                           
  6683                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6684  000ED6  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6685  000EDA  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6686  000EDE  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  6687  000EE2  0E02               	movlw	2
  6688  000EE4  26DE               	addwf	postinc2,f,c
  6689  000EE6  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  6690  000EEA  0E00               	movlw	0
  6691  000EEC  22DD               	addwfc	postdec2,f,c
  6692  000EEE  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6693  000EF2  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6694  000EF6  CFDE F12F          	movff	postinc2,??_vfpfcnvrt+2
  6695  000EFA  CFDD F130          	movff	postdec2,??_vfpfcnvrt+3
  6696  000EFE  C12F  F144         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6697  000F02  C130  F145         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6698  000F06  0101               	movlb	1	; () banked
  6699  000F08  6B46               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6700  000F0A  6B47               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6701  000F0C  6B48               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6702  000F0E  6B49               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6703  000F10  6B4A               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6704  000F12  6B4B               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6705  000F14  EFAB  F006         	goto	l9131
  6706  000F18                     l9159:
  6707                           
  6708                           ; BSR set to: 0
  6709                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  6710  000F18  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6711  000F1C  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6712  000F20  CFDE F08F          	movff	postinc2,strncmp@_l
  6713  000F24  CFDD F090          	movff	postdec2,strncmp@_l+1
  6714  000F28  0EE5               	movlw	low STR_81
  6715  000F2A  6F91               	movwf	strncmp@_r& (0+255),b
  6716  000F2C  0EFF               	movlw	high STR_81
  6717  000F2E  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  6718  000F30  0E00               	movlw	0
  6719  000F32  6F94               	movwf	(strncmp@n+1)& (0+255),b
  6720  000F34  0E03               	movlw	3
  6721  000F36  6F93               	movwf	strncmp@n& (0+255),b
  6722  000F38  EC23  F02A         	call	_strncmp	;wreg free
  6723  000F3C  0100               	movlb	0	; () banked
  6724  000F3E  518F               	movf	?_strncmp& (0+255),w,b
  6725  000F40  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  6726  000F42  B4D8               	btfsc	status,2,c
  6727  000F44  EFA6  F007         	goto	u11651
  6728  000F48  EFA8  F007         	goto	u11650
  6729  000F4C                     u11651:
  6730  000F4C  EFC4  F007         	goto	l9163
  6731  000F50                     u11650:
  6732  000F50                     
  6733                           ; BSR set to: 0
  6734  000F50  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6735  000F54  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6736  000F58  CFDE F08F          	movff	postinc2,strncmp@_l
  6737  000F5C  CFDD F090          	movff	postdec2,strncmp@_l+1
  6738  000F60  0ECD               	movlw	low STR_85
  6739  000F62  6F91               	movwf	strncmp@_r& (0+255),b
  6740  000F64  0EFF               	movlw	high STR_85
  6741  000F66  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  6742  000F68  0E00               	movlw	0
  6743  000F6A  6F94               	movwf	(strncmp@n+1)& (0+255),b
  6744  000F6C  0E03               	movlw	3
  6745  000F6E  6F93               	movwf	strncmp@n& (0+255),b
  6746  000F70  EC23  F02A         	call	_strncmp	;wreg free
  6747  000F74  0100               	movlb	0	; () banked
  6748  000F76  518F               	movf	?_strncmp& (0+255),w,b
  6749  000F78  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  6750  000F7A  A4D8               	btfss	status,2,c
  6751  000F7C  EFC2  F007         	goto	u11661
  6752  000F80  EFC4  F007         	goto	u11660
  6753  000F84                     u11661:
  6754  000F84  EF1A  F008         	goto	l9173
  6755  000F88                     u11660:
  6756  000F88                     l9163:
  6757                           
  6758                           ; BSR set to: 0
  6759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
  6760  000F88  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6761  000F8C  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6762  000F90  CFDE F12D          	movff	postinc2,??_vfpfcnvrt
  6763  000F94  CFDD F12E          	movff	postdec2,??_vfpfcnvrt+1
  6764  000F98  0E02               	movlw	2
  6765  000F9A  0101               	movlb	1	; () banked
  6766  000F9C  272D               	addwf	??_vfpfcnvrt& (0+255),f,b
  6767  000F9E  0E00               	movlw	0
  6768  000FA0  232E               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6769  000FA2  C12D  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6770  000FA6  C12E  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6771  000FAA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6772  000FAA  6AF8               	clrf	tblptru,c
  6773  000FAC                     	endif
  6774  000FAC                     	if	0	;tblptru may be non-zero
  6775  000FAC                     	endif
  6776  000FAC  0008               	tblrd		*
  6777  000FAE  CFF5 F143          	movff	tablat,vfpfcnvrt@c
  6778  000FB2                     
  6779                           ; BSR set to: 1
  6780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  6781  000FB2  0E03               	movlw	3
  6782  000FB4  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6783  000FB8  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6784  000FBC  26DE               	addwf	postinc2,f,c
  6785  000FBE  0E00               	movlw	0
  6786  000FC0  22DD               	addwfc	postdec2,f,c
  6787  000FC2                     
  6788                           ; BSR set to: 1
  6789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6790  000FC2  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6791  000FC6  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6792  000FCA  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  6793  000FCE  0E02               	movlw	2
  6794  000FD0  26DE               	addwf	postinc2,f,c
  6795  000FD2  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  6796  000FD6  0E00               	movlw	0
  6797  000FD8  22DD               	addwfc	postdec2,f,c
  6798  000FDA  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6799  000FDE  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6800  000FE2  50DF               	movf	indf2,w,c
  6801  000FE4  6F2F               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6802  000FE6  512F               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  6803  000FE8  6F44               	movwf	vfpfcnvrt@llu& (0+255),b
  6804  000FEA  6B45               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  6805  000FEC  6B46               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6806  000FEE  6B47               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6807  000FF0  6B48               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6808  000FF2  6B49               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6809  000FF4  6B4A               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6810  000FF6  6B4B               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6811  000FF8                     l9169:
  6812                           
  6813                           ; BSR set to: 1
  6814                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
  6815  000FF8  C127  F100         	movff	vfpfcnvrt@fp,xtoa@fp
  6816  000FFC  C128  F101         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6817  001000  C144  F102         	movff	vfpfcnvrt@llu,xtoa@d
  6818  001004  C145  F103         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6819  001008  C146  F104         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6820  00100C  C147  F105         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6821  001010  C148  F106         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6822  001014  C149  F107         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6823  001018  C14A  F108         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6824  00101C  C14B  F109         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6825  001020  C143  F10A         	movff	vfpfcnvrt@c,xtoa@x
  6826  001024  EC8A  F016         	call	_xtoa	;wreg free
  6827  001028  C100  F127         	movff	?_xtoa,?_vfpfcnvrt
  6828  00102C  C101  F128         	movff	?_xtoa+1,?_vfpfcnvrt+1
  6829  001030  EFAF  F009         	goto	l875
  6830  001034                     l9173:
  6831                           
  6832                           ; BSR set to: 0
  6833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
  6834  001034  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6835  001038  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6836  00103C  CFDE F08F          	movff	postinc2,strncmp@_l
  6837  001040  CFDD F090          	movff	postdec2,strncmp@_l+1
  6838  001044  0EE6               	movlw	low (STR_81+1)
  6839  001046  6F91               	movwf	strncmp@_r& (0+255),b
  6840  001048  0EFF               	movlw	high (STR_81+1)
  6841  00104A  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  6842  00104C  0E00               	movlw	0
  6843  00104E  6F94               	movwf	(strncmp@n+1)& (0+255),b
  6844  001050  0E02               	movlw	2
  6845  001052  6F93               	movwf	strncmp@n& (0+255),b
  6846  001054  EC23  F02A         	call	_strncmp	;wreg free
  6847  001058  0100               	movlb	0	; () banked
  6848  00105A  518F               	movf	?_strncmp& (0+255),w,b
  6849  00105C  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  6850  00105E  B4D8               	btfsc	status,2,c
  6851  001060  EF34  F008         	goto	u11671
  6852  001064  EF36  F008         	goto	u11670
  6853  001068                     u11671:
  6854  001068  EF52  F008         	goto	l9177
  6855  00106C                     u11670:
  6856  00106C                     
  6857                           ; BSR set to: 0
  6858  00106C  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6859  001070  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6860  001074  CFDE F08F          	movff	postinc2,strncmp@_l
  6861  001078  CFDD F090          	movff	postdec2,strncmp@_l+1
  6862  00107C  0ECE               	movlw	low (STR_85+1)
  6863  00107E  6F91               	movwf	strncmp@_r& (0+255),b
  6864  001080  0EFF               	movlw	high (STR_85+1)
  6865  001082  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  6866  001084  0E00               	movlw	0
  6867  001086  6F94               	movwf	(strncmp@n+1)& (0+255),b
  6868  001088  0E02               	movlw	2
  6869  00108A  6F93               	movwf	strncmp@n& (0+255),b
  6870  00108C  EC23  F02A         	call	_strncmp	;wreg free
  6871  001090  0100               	movlb	0	; () banked
  6872  001092  518F               	movf	?_strncmp& (0+255),w,b
  6873  001094  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  6874  001096  A4D8               	btfss	status,2,c
  6875  001098  EF50  F008         	goto	u11681
  6876  00109C  EF52  F008         	goto	u11680
  6877  0010A0                     u11681:
  6878  0010A0  EF8F  F008         	goto	l9187
  6879  0010A4                     u11680:
  6880  0010A4                     l9177:
  6881                           
  6882                           ; BSR set to: 0
  6883                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
  6884  0010A4  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6885  0010A8  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6886  0010AC  CFDE F12D          	movff	postinc2,??_vfpfcnvrt
  6887  0010B0  CFDD F12E          	movff	postdec2,??_vfpfcnvrt+1
  6888  0010B4  0E01               	movlw	1
  6889  0010B6  0101               	movlb	1	; () banked
  6890  0010B8  272D               	addwf	??_vfpfcnvrt& (0+255),f,b
  6891  0010BA  0E00               	movlw	0
  6892  0010BC  232E               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6893  0010BE  C12D  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6894  0010C2  C12E  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6895  0010C6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6896  0010C6  6AF8               	clrf	tblptru,c
  6897  0010C8                     	endif
  6898  0010C8                     	if	0	;tblptru may be non-zero
  6899  0010C8                     	endif
  6900  0010C8  0008               	tblrd		*
  6901  0010CA  CFF5 F143          	movff	tablat,vfpfcnvrt@c
  6902  0010CE                     
  6903                           ; BSR set to: 1
  6904                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  6905  0010CE  0E02               	movlw	2
  6906  0010D0  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6907  0010D4  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6908  0010D8  26DE               	addwf	postinc2,f,c
  6909  0010DA  0E00               	movlw	0
  6910  0010DC  22DD               	addwfc	postdec2,f,c
  6911  0010DE                     
  6912                           ; BSR set to: 1
  6913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  6914  0010DE  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6915  0010E2  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6916  0010E6  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  6917  0010EA  0E02               	movlw	2
  6918  0010EC  26DE               	addwf	postinc2,f,c
  6919  0010EE  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  6920  0010F2  0E00               	movlw	0
  6921  0010F4  22DD               	addwfc	postdec2,f,c
  6922  0010F6  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6923  0010FA  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6924  0010FE  CFDE F12F          	movff	postinc2,??_vfpfcnvrt+2
  6925  001102  CFDD F130          	movff	postdec2,??_vfpfcnvrt+3
  6926  001106  C12F  F144         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6927  00110A  C130  F145         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6928  00110E  6B46               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6929  001110  6B47               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6930  001112  6B48               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6931  001114  6B49               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6932  001116  6B4A               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6933  001118  6B4B               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6934  00111A  EFFC  F007         	goto	l9169
  6935  00111E                     l9187:
  6936                           
  6937                           ; BSR set to: 0
  6938                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  6939  00111E  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6940  001122  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6941  001126  CFDE FFF6          	movff	postinc2,tblptrl
  6942  00112A  CFDD FFF7          	movff	postdec2,tblptrh
  6943  00112E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6944  00112E  6AF8               	clrf	tblptru,c
  6945  001130                     	endif
  6946  001130                     	if	0	;tblptru may be non-zero
  6947  001130                     	endif
  6948  001130  0008               	tblrd		*
  6949  001132  50F5               	movf	tablat,w,c
  6950  001134  0A78               	xorlw	120
  6951  001136  B4D8               	btfsc	status,2,c
  6952  001138  EFA0  F008         	goto	u11691
  6953  00113C  EFA2  F008         	goto	u11690
  6954  001140                     u11691:
  6955  001140  EFB5  F008         	goto	l9191
  6956  001144                     u11690:
  6957  001144                     
  6958                           ; BSR set to: 0
  6959  001144  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6960  001148  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6961  00114C  CFDE FFF6          	movff	postinc2,tblptrl
  6962  001150  CFDD FFF7          	movff	postdec2,tblptrh
  6963  001154                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6964  001154  6AF8               	clrf	tblptru,c
  6965  001156                     	endif
  6966  001156                     	if	0	;tblptru may be non-zero
  6967  001156                     	endif
  6968  001156  0008               	tblrd		*
  6969  001158  50F5               	movf	tablat,w,c
  6970  00115A  0A58               	xorlw	88
  6971  00115C  A4D8               	btfss	status,2,c
  6972  00115E  EFB3  F008         	goto	u11701
  6973  001162  EFB5  F008         	goto	u11700
  6974  001166                     u11701:
  6975  001166  EFE9  F008         	goto	l9201
  6976  00116A                     u11700:
  6977  00116A                     l9191:
  6978                           
  6979                           ; BSR set to: 0
  6980                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  6981  00116A  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6982  00116E  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6983  001172  CFDE FFF6          	movff	postinc2,tblptrl
  6984  001176  CFDD FFF7          	movff	postdec2,tblptrh
  6985  00117A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6986  00117A  6AF8               	clrf	tblptru,c
  6987  00117C                     	endif
  6988  00117C                     	if	0	;tblptru may be non-zero
  6989  00117C                     	endif
  6990  00117C  0008               	tblrd		*
  6991  00117E  CFF5 F143          	movff	tablat,vfpfcnvrt@c
  6992  001182                     
  6993                           ; BSR set to: 0
  6994                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  6995  001182  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6996  001186  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6997  00118A  2ADE               	incf	postinc2,f,c
  6998  00118C  0E00               	movlw	0
  6999  00118E  22DD               	addwfc	postdec2,f,c
  7000  001190                     
  7001                           ; BSR set to: 0
  7002                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  7003  001190  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7004  001194  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7005  001198  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  7006  00119C  0E02               	movlw	2
  7007  00119E  26DE               	addwf	postinc2,f,c
  7008  0011A0  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  7009  0011A4  0E00               	movlw	0
  7010  0011A6  22DD               	addwfc	postdec2,f,c
  7011  0011A8  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7012  0011AC  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7013  0011B0  CFDE F12F          	movff	postinc2,??_vfpfcnvrt+2
  7014  0011B4  CFDD F130          	movff	postdec2,??_vfpfcnvrt+3
  7015  0011B8  C12F  F144         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  7016  0011BC  C130  F145         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  7017  0011C0  0101               	movlb	1	; () banked
  7018  0011C2  6B46               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  7019  0011C4  6B47               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  7020  0011C6  6B48               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  7021  0011C8  6B49               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  7022  0011CA  6B4A               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  7023  0011CC  6B4B               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  7024  0011CE  EFFC  F007         	goto	l9169
  7025  0011D2                     l9201:
  7026                           
  7027                           ; BSR set to: 0
  7028                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
  7029  0011D2  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7030  0011D6  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7031  0011DA  CFDE F08F          	movff	postinc2,strncmp@_l
  7032  0011DE  CFDD F090          	movff	postdec2,strncmp@_l+1
  7033  0011E2  0EFB               	movlw	low STR_99
  7034  0011E4  6F91               	movwf	strncmp@_r& (0+255),b
  7035  0011E6  0EFF               	movlw	high STR_99
  7036  0011E8  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  7037  0011EA  0E00               	movlw	0
  7038  0011EC  6F94               	movwf	(strncmp@n+1)& (0+255),b
  7039  0011EE  0E02               	movlw	2
  7040  0011F0  6F93               	movwf	strncmp@n& (0+255),b
  7041  0011F2  EC23  F02A         	call	_strncmp	;wreg free
  7042  0011F6  0100               	movlb	0	; () banked
  7043  0011F8  518F               	movf	?_strncmp& (0+255),w,b
  7044  0011FA  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  7045  0011FC  B4D8               	btfsc	status,2,c
  7046  0011FE  EF03  F009         	goto	u11711
  7047  001202  EF05  F009         	goto	u11710
  7048  001206                     u11711:
  7049  001206  EF21  F009         	goto	l9205
  7050  00120A                     u11710:
  7051  00120A                     
  7052                           ; BSR set to: 0
  7053  00120A  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7054  00120E  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7055  001212  CFDE F08F          	movff	postinc2,strncmp@_l
  7056  001216  CFDD F090          	movff	postdec2,strncmp@_l+1
  7057  00121A  0EE9               	movlw	low STR_103
  7058  00121C  6F91               	movwf	strncmp@_r& (0+255),b
  7059  00121E  0EFF               	movlw	high STR_103
  7060  001220  6F92               	movwf	(strncmp@_r+1)& (0+255),b
  7061  001222  0E00               	movlw	0
  7062  001224  6F94               	movwf	(strncmp@n+1)& (0+255),b
  7063  001226  0E02               	movlw	2
  7064  001228  6F93               	movwf	strncmp@n& (0+255),b
  7065  00122A  EC23  F02A         	call	_strncmp	;wreg free
  7066  00122E  0100               	movlb	0	; () banked
  7067  001230  518F               	movf	?_strncmp& (0+255),w,b
  7068  001232  1190               	iorwf	(?_strncmp+1)& (0+255),w,b
  7069  001234  A4D8               	btfss	status,2,c
  7070  001236  EF1F  F009         	goto	u11721
  7071  00123A  EF21  F009         	goto	u11720
  7072  00123E                     u11721:
  7073  00123E  EF5E  F009         	goto	l9215
  7074  001242                     u11720:
  7075  001242                     l9205:
  7076                           
  7077                           ; BSR set to: 0
  7078                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
  7079  001242  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7080  001246  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7081  00124A  CFDE F12D          	movff	postinc2,??_vfpfcnvrt
  7082  00124E  CFDD F12E          	movff	postdec2,??_vfpfcnvrt+1
  7083  001252  0E01               	movlw	1
  7084  001254  0101               	movlb	1	; () banked
  7085  001256  272D               	addwf	??_vfpfcnvrt& (0+255),f,b
  7086  001258  0E00               	movlw	0
  7087  00125A  232E               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  7088  00125C  C12D  FFF6         	movff	??_vfpfcnvrt,tblptrl
  7089  001260  C12E  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  7090  001264                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7091  001264  6AF8               	clrf	tblptru,c
  7092  001266                     	endif
  7093  001266                     	if	0	;tblptru may be non-zero
  7094  001266                     	endif
  7095  001266  0008               	tblrd		*
  7096  001268  CFF5 F143          	movff	tablat,vfpfcnvrt@c
  7097  00126C                     
  7098                           ; BSR set to: 1
  7099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  7100  00126C  0E02               	movlw	2
  7101  00126E  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7102  001272  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7103  001276  26DE               	addwf	postinc2,f,c
  7104  001278  0E00               	movlw	0
  7105  00127A  22DD               	addwfc	postdec2,f,c
  7106  00127C                     
  7107                           ; BSR set to: 1
  7108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  7109  00127C  C12B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7110  001280  C12C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7111  001284  CFDF F12D          	movff	indf2,??_vfpfcnvrt
  7112  001288  0E02               	movlw	2
  7113  00128A  26DE               	addwf	postinc2,f,c
  7114  00128C  CFDF F12E          	movff	indf2,??_vfpfcnvrt+1
  7115  001290  0E00               	movlw	0
  7116  001292  22DD               	addwfc	postdec2,f,c
  7117  001294  C12D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7118  001298  C12E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7119  00129C  CFDE F12F          	movff	postinc2,??_vfpfcnvrt+2
  7120  0012A0  CFDD F130          	movff	postdec2,??_vfpfcnvrt+3
  7121  0012A4  C12F  F144         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  7122  0012A8  C130  F145         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  7123  0012AC  6B46               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  7124  0012AE  6B47               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  7125  0012B0  6B48               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  7126  0012B2  6B49               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  7127  0012B4  6B4A               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  7128  0012B6  6B4B               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  7129  0012B8  EFFC  F007         	goto	l9169
  7130  0012BC                     l9215:
  7131                           
  7132                           ; BSR set to: 0
  7133                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  7134  0012BC  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7135  0012C0  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7136  0012C4  CFDE FFF6          	movff	postinc2,tblptrl
  7137  0012C8  CFDD FFF7          	movff	postdec2,tblptrh
  7138  0012CC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7139  0012CC  6AF8               	clrf	tblptru,c
  7140  0012CE                     	endif
  7141  0012CE                     	if	0	;tblptru may be non-zero
  7142  0012CE                     	endif
  7143  0012CE  0008               	tblrd		*
  7144  0012D0  50F5               	movf	tablat,w,c
  7145  0012D2  0A25               	xorlw	37
  7146  0012D4  A4D8               	btfss	status,2,c
  7147  0012D6  EF6F  F009         	goto	u11731
  7148  0012DA  EF71  F009         	goto	u11730
  7149  0012DE                     u11731:
  7150  0012DE  EF89  F009         	goto	l9225
  7151  0012E2                     u11730:
  7152  0012E2                     
  7153                           ; BSR set to: 0
  7154                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  7155  0012E2  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7156  0012E6  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7157  0012EA  2ADE               	incf	postinc2,f,c
  7158  0012EC  0E00               	movlw	0
  7159  0012EE  22DD               	addwfc	postdec2,f,c
  7160  0012F0                     
  7161                           ; BSR set to: 0
  7162                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  7163  0012F0  0E00               	movlw	0
  7164  0012F2  6F92               	movwf	(fputc@c+1)& (0+255),b
  7165  0012F4  0E25               	movlw	37
  7166  0012F6  6F91               	movwf	fputc@c& (0+255),b
  7167  0012F8  C127  F093         	movff	vfpfcnvrt@fp,fputc@fp
  7168  0012FC  C128  F094         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7169  001300  ECDF  F02B         	call	_fputc	;wreg free
  7170  001304                     l9221:
  7171                           
  7172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  7173  001304  0E00               	movlw	0
  7174  001306  0101               	movlb	1	; () banked
  7175  001308  6F28               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7176  00130A  0E01               	movlw	1
  7177  00130C  6F27               	movwf	?_vfpfcnvrt& (0+255),b
  7178  00130E  EFAF  F009         	goto	l875
  7179  001312                     l9225:
  7180                           
  7181                           ; BSR set to: 0
  7182                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  7183  001312  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7184  001316  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7185  00131A  2ADE               	incf	postinc2,f,c
  7186  00131C  0E00               	movlw	0
  7187  00131E  22DD               	addwfc	postdec2,f,c
  7188  001320  EF13  F005         	goto	l9077
  7189  001324                     l9231:
  7190                           
  7191                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  7192  001324  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7193  001328  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7194  00132C  CFDE FFF6          	movff	postinc2,tblptrl
  7195  001330  CFDD FFF7          	movff	postdec2,tblptrh
  7196  001334                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7197  001334  6AF8               	clrf	tblptru,c
  7198  001336                     	endif
  7199  001336                     	if	0	;tblptru may be non-zero
  7200  001336                     	endif
  7201  001336  0008               	tblrd		*
  7202  001338  50F5               	movf	tablat,w,c
  7203  00133A  0100               	movlb	0	; () banked
  7204  00133C  6F91               	movwf	fputc@c& (0+255),b
  7205  00133E  6B92               	clrf	(fputc@c+1)& (0+255),b
  7206  001340  C127  F093         	movff	vfpfcnvrt@fp,fputc@fp
  7207  001344  C128  F094         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7208  001348  ECDF  F02B         	call	_fputc	;wreg free
  7209  00134C                     
  7210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  7211  00134C  C129  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7212  001350  C12A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7213  001354  2ADE               	incf	postinc2,f,c
  7214  001356  0E00               	movlw	0
  7215  001358  22DD               	addwfc	postdec2,f,c
  7216  00135A  EF82  F009         	goto	l9221
  7217  00135E                     l875:
  7218  00135E  0012               	return		;funcret
  7219  001360                     __end_of_vfpfcnvrt:
  7220                           	opt callstack 0
  7221                           
  7222 ;; *************** function _xtoa *****************
  7223 ;; Defined at:
  7224 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7225 ;; Parameters:    Size  Location     Type
  7226 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  7227 ;;		 -> vsnprintf@f(6), NULL(0), 
  7228 ;;  d               8    2[BANK1 ] unsigned long long 
  7229 ;;  x               1   10[BANK1 ] unsigned char 
  7230 ;; Auto vars:     Size  Location     Type
  7231 ;;  n               8   27[BANK1 ] unsigned long long 
  7232 ;;  c               2   37[BANK1 ] int 
  7233 ;;  i               2   35[BANK1 ] int 
  7234 ;;  w               2   25[BANK1 ] int 
  7235 ;;  p               2   23[BANK1 ] int 
  7236 ;; Return value:  Size  Location     Type
  7237 ;;                  2    0[BANK1 ] int 
  7238 ;; Registers used:
  7239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7240 ;; Tracked objects:
  7241 ;;		On entry : 0/0
  7242 ;;		On exit  : 0/0
  7243 ;;		Unchanged: 0/0
  7244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7245 ;;      Params:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7246 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7247 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7248 ;;      Totals:         0       0      39       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7249 ;;Total ram usage:       39 bytes
  7250 ;; Hardware stack levels used:    1
  7251 ;; Hardware stack levels required when called:   18
  7252 ;; This function calls:
  7253 ;;		_isalpha
  7254 ;;		_isupper
  7255 ;;		_pad
  7256 ;;		_toupper
  7257 ;; This function is called by:
  7258 ;;		_vfpfcnvrt
  7259 ;; This function uses a non-reentrant model
  7260 ;;
  7261                           
  7262                           	psect	text11
  7263  002D14                     __ptext11:
  7264                           	opt callstack 0
  7265  002D14                     _xtoa:
  7266                           	opt callstack 8
  7267  002D14                     
  7268                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  7269  002D14  0100               	movlb	0	; () banked
  7270  002D16  BFB8               	btfsc	(_prec+1)& (0+255),7,b
  7271  002D18  EF90  F016         	goto	u11041
  7272  002D1C  EF92  F016         	goto	u11040
  7273  002D20                     u11041:
  7274  002D20  EF93  F016         	goto	l8799
  7275  002D24                     u11040:
  7276  002D24                     
  7277                           ; BSR set to: 0
  7278                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  7279  002D24  93B9               	bcf	_flags& (0+255),1,b
  7280  002D26                     l8799:
  7281                           
  7282                           ; BSR set to: 0
  7283                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  7284  002D26  BFB8               	btfsc	(_prec+1)& (0+255),7,b
  7285  002D28  EFA0  F016         	goto	u11050
  7286  002D2C  51B8               	movf	(_prec+1)& (0+255),w,b
  7287  002D2E  E106               	bnz	u11051
  7288  002D30  05B7               	decf	_prec& (0+255),w,b
  7289  002D32  B0D8               	btfsc	status,0,c
  7290  002D34  EF9E  F016         	goto	u11051
  7291  002D38  EFA0  F016         	goto	u11050
  7292  002D3C                     u11051:
  7293  002D3C  EFA7  F016         	goto	l813
  7294  002D40                     u11050:
  7295  002D40                     
  7296                           ; BSR set to: 0
  7297  002D40  0E00               	movlw	0
  7298  002D42  0101               	movlb	1	; () banked
  7299  002D44  6F18               	movwf	(xtoa@p+1)& (0+255),b
  7300  002D46  0E01               	movlw	1
  7301  002D48  6F17               	movwf	xtoa@p& (0+255),b
  7302  002D4A  EFAB  F016         	goto	l815
  7303  002D4E                     l813:
  7304                           
  7305                           ; BSR set to: 0
  7306  002D4E  C0B7  F117         	movff	_prec,xtoa@p
  7307  002D52  C0B8  F118         	movff	_prec+1,xtoa@p+1
  7308  002D56                     l815:
  7309                           
  7310                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  7311  002D56  C0B5  F119         	movff	_width,xtoa@w
  7312  002D5A  C0B6  F11A         	movff	_width+1,xtoa@w+1
  7313                           
  7314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  7315  002D5E  0100               	movlb	0	; () banked
  7316  002D60  A9B9               	btfss	_flags& (0+255),4,b
  7317  002D62  EFB5  F016         	goto	u11061
  7318  002D66  EFB7  F016         	goto	u11060
  7319  002D6A                     u11061:
  7320  002D6A  EFBC  F016         	goto	l8805
  7321  002D6E                     u11060:
  7322  002D6E                     
  7323                           ; BSR set to: 0
  7324                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  7325  002D6E  0101               	movlb	1	; () banked
  7326  002D70  0EFE               	movlw	254
  7327  002D72  2719               	addwf	xtoa@w& (0+255),f,b
  7328  002D74  0EFF               	movlw	255
  7329  002D76  231A               	addwfc	(xtoa@w+1)& (0+255),f,b
  7330  002D78                     l8805:
  7331                           
  7332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  7333  002D78  C102  F11B         	movff	xtoa@d,xtoa@n
  7334  002D7C  C103  F11C         	movff	xtoa@d+1,xtoa@n+1
  7335  002D80  C104  F11D         	movff	xtoa@d+2,xtoa@n+2
  7336  002D84  C105  F11E         	movff	xtoa@d+3,xtoa@n+3
  7337  002D88  C106  F11F         	movff	xtoa@d+4,xtoa@n+4
  7338  002D8C  C107  F120         	movff	xtoa@d+5,xtoa@n+5
  7339  002D90  C108  F121         	movff	xtoa@d+6,xtoa@n+6
  7340  002D94  C109  F122         	movff	xtoa@d+7,xtoa@n+7
  7341  002D98                     
  7342                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  7343  002D98  0E00               	movlw	0
  7344  002D9A  0101               	movlb	1	; () banked
  7345  002D9C  6F24               	movwf	(xtoa@i+1)& (0+255),b
  7346  002D9E  0E1F               	movlw	31
  7347  002DA0  6F23               	movwf	xtoa@i& (0+255),b
  7348  002DA2                     
  7349                           ; BSR set to: 1
  7350                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  7351  002DA2  0E00               	movlw	0
  7352  002DA4  6FA8               	movwf	(_dbuf+31)& (0+255),b
  7353                           
  7354                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7355  002DA6  EF8A  F017         	goto	l8841
  7356  002DAA                     l8811:
  7357                           
  7358                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  7359  002DAA  0101               	movlb	1	; () banked
  7360  002DAC  0723               	decf	xtoa@i& (0+255),f,b
  7361  002DAE  A0D8               	btfss	status,0,c
  7362  002DB0  0724               	decf	(xtoa@i+1)& (0+255),f,b
  7363  002DB2                     
  7364                           ; BSR set to: 1
  7365                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  7366  002DB2  0E0F               	movlw	15
  7367  002DB4  151B               	andwf	xtoa@n& (0+255),w,b
  7368  002DB6  6F25               	movwf	xtoa@c& (0+255),b
  7369  002DB8  6B26               	clrf	(xtoa@c+1)& (0+255),b
  7370  002DBA                     
  7371                           ; BSR set to: 1
  7372                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  7373  002DBA  BF26               	btfsc	(xtoa@c+1)& (0+255),7,b
  7374  002DBC  EFE9  F016         	goto	u11071
  7375  002DC0  5126               	movf	(xtoa@c+1)& (0+255),w,b
  7376  002DC2  E109               	bnz	u11070
  7377  002DC4  0E0A               	movlw	10
  7378  002DC6  5D25               	subwf	xtoa@c& (0+255),w,b
  7379  002DC8  A0D8               	btfss	status,0,c
  7380  002DCA  EFE9  F016         	goto	u11071
  7381  002DCE  EFEB  F016         	goto	u11070
  7382  002DD2                     u11071:
  7383  002DD2  EFF3  F016         	goto	l8819
  7384  002DD6                     u11070:
  7385  002DD6                     
  7386                           ; BSR set to: 1
  7387  002DD6  0E57               	movlw	87
  7388  002DD8  2525               	addwf	xtoa@c& (0+255),w,b
  7389  002DDA  6F25               	movwf	xtoa@c& (0+255),b
  7390  002DDC  0E00               	movlw	0
  7391  002DDE  2126               	addwfc	(xtoa@c+1)& (0+255),w,b
  7392  002DE0  6F26               	movwf	(xtoa@c+1)& (0+255),b
  7393  002DE2  EFF9  F016         	goto	l822
  7394  002DE6                     l8819:
  7395                           
  7396                           ; BSR set to: 1
  7397  002DE6  0E30               	movlw	48
  7398  002DE8  2525               	addwf	xtoa@c& (0+255),w,b
  7399  002DEA  6F25               	movwf	xtoa@c& (0+255),b
  7400  002DEC  0E00               	movlw	0
  7401  002DEE  2126               	addwfc	(xtoa@c+1)& (0+255),w,b
  7402  002DF0  6F26               	movwf	(xtoa@c+1)& (0+255),b
  7403  002DF2                     l822:
  7404                           
  7405                           ; BSR set to: 1
  7406  002DF2  0EBF               	movlw	191
  7407  002DF4  6F0B               	movwf	??_xtoa& (0+255),b
  7408  002DF6  0EFF               	movlw	255
  7409  002DF8  6F0C               	movwf	(??_xtoa+1)& (0+255),b
  7410  002DFA  510A               	movf	xtoa@x& (0+255),w,b
  7411  002DFC  6F0D               	movwf	(??_xtoa+2)& (0+255),b
  7412  002DFE  6B0E               	clrf	(??_xtoa+3)& (0+255),b
  7413  002E00  510B               	movf	??_xtoa& (0+255),w,b
  7414  002E02  270D               	addwf	(??_xtoa+2)& (0+255),f,b
  7415  002E04  510C               	movf	(??_xtoa+1)& (0+255),w,b
  7416  002E06  230E               	addwfc	(??_xtoa+3)& (0+255),f,b
  7417  002E08  510E               	movf	(??_xtoa+3)& (0+255),w,b
  7418  002E0A  E10A               	bnz	u11080
  7419  002E0C  0E1A               	movlw	26
  7420  002E0E  5D0D               	subwf	(??_xtoa+2)& (0+255),w,b
  7421  002E10  A0D8               	btfss	status,0,c
  7422  002E12  EF0D  F017         	goto	u11081
  7423  002E16  EF10  F017         	goto	u11080
  7424  002E1A                     u11081:
  7425  002E1A  0E01               	movlw	1
  7426  002E1C  EF11  F017         	goto	u11090
  7427  002E20                     u11080:
  7428  002E20  0E00               	movlw	0
  7429  002E22                     u11090:
  7430  002E22  6F13               	movwf	_xtoa$1859& (0+255),b
  7431  002E24  6B14               	clrf	(_xtoa$1859+1)& (0+255),b
  7432  002E26                     
  7433                           ; BSR set to: 1
  7434  002E26  5113               	movf	_xtoa$1859& (0+255),w,b
  7435  002E28  1114               	iorwf	(_xtoa$1859+1)& (0+255),w,b
  7436  002E2A  B4D8               	btfsc	status,2,c
  7437  002E2C  EF1A  F017         	goto	u11101
  7438  002E30  EF1C  F017         	goto	u11100
  7439  002E34                     u11101:
  7440  002E34  EF4C  F017         	goto	l8833
  7441  002E38                     u11100:
  7442  002E38                     
  7443                           ; BSR set to: 1
  7444  002E38  0E9F               	movlw	159
  7445  002E3A  6F0B               	movwf	??_xtoa& (0+255),b
  7446  002E3C  0EFF               	movlw	255
  7447  002E3E  6F0C               	movwf	(??_xtoa+1)& (0+255),b
  7448  002E40  0E20               	movlw	32
  7449  002E42  1125               	iorwf	xtoa@c& (0+255),w,b
  7450  002E44  6F0D               	movwf	(??_xtoa+2)& (0+255),b
  7451  002E46  0E00               	movlw	0
  7452  002E48  1126               	iorwf	(xtoa@c+1)& (0+255),w,b
  7453  002E4A  6F0E               	movwf	(??_xtoa+3)& (0+255),b
  7454  002E4C  510B               	movf	??_xtoa& (0+255),w,b
  7455  002E4E  270D               	addwf	(??_xtoa+2)& (0+255),f,b
  7456  002E50  510C               	movf	(??_xtoa+1)& (0+255),w,b
  7457  002E52  230E               	addwfc	(??_xtoa+3)& (0+255),f,b
  7458  002E54  510E               	movf	(??_xtoa+3)& (0+255),w,b
  7459  002E56  E10A               	bnz	u11110
  7460  002E58  0E1A               	movlw	26
  7461  002E5A  5D0D               	subwf	(??_xtoa+2)& (0+255),w,b
  7462  002E5C  A0D8               	btfss	status,0,c
  7463  002E5E  EF33  F017         	goto	u11111
  7464  002E62  EF36  F017         	goto	u11110
  7465  002E66                     u11111:
  7466  002E66  0E01               	movlw	1
  7467  002E68  EF37  F017         	goto	u11120
  7468  002E6C                     u11110:
  7469  002E6C  0E00               	movlw	0
  7470  002E6E                     u11120:
  7471  002E6E  6F15               	movwf	_xtoa$1860& (0+255),b
  7472  002E70  6B16               	clrf	(_xtoa$1860+1)& (0+255),b
  7473  002E72                     
  7474                           ; BSR set to: 1
  7475  002E72  5115               	movf	_xtoa$1860& (0+255),w,b
  7476  002E74  1116               	iorwf	(_xtoa$1860+1)& (0+255),w,b
  7477  002E76  B4D8               	btfsc	status,2,c
  7478  002E78  EF40  F017         	goto	u11131
  7479  002E7C  EF42  F017         	goto	u11130
  7480  002E80                     u11131:
  7481  002E80  EF4C  F017         	goto	l8833
  7482  002E84                     u11130:
  7483  002E84                     
  7484                           ; BSR set to: 1
  7485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  7486  002E84  C125  F095         	movff	xtoa@c,toupper@c
  7487  002E88  C126  F096         	movff	xtoa@c+1,toupper@c+1
  7488  002E8C  EC3E  F02F         	call	_toupper	;wreg free
  7489  002E90  C095  F125         	movff	?_toupper,xtoa@c
  7490  002E94  C096  F126         	movff	?_toupper+1,xtoa@c+1
  7491  002E98                     l8833:
  7492                           
  7493                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  7494  002E98  0E89               	movlw	low _dbuf
  7495  002E9A  0101               	movlb	1	; () banked
  7496  002E9C  2523               	addwf	xtoa@i& (0+255),w,b
  7497  002E9E  6ED9               	movwf	fsr2l,c
  7498  002EA0  0E01               	movlw	high _dbuf
  7499  002EA2  2124               	addwfc	(xtoa@i+1)& (0+255),w,b
  7500  002EA4  6EDA               	movwf	fsr2h,c
  7501  002EA6  C125  FFDF         	movff	xtoa@c,indf2
  7502  002EAA                     
  7503                           ; BSR set to: 1
  7504                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  7505  002EAA  0717               	decf	xtoa@p& (0+255),f,b
  7506  002EAC  A0D8               	btfss	status,0,c
  7507  002EAE  0718               	decf	(xtoa@p+1)& (0+255),f,b
  7508  002EB0                     
  7509                           ; BSR set to: 1
  7510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  7511  002EB0  0719               	decf	xtoa@w& (0+255),f,b
  7512  002EB2  A0D8               	btfss	status,0,c
  7513  002EB4  071A               	decf	(xtoa@w+1)& (0+255),f,b
  7514  002EB6                     
  7515                           ; BSR set to: 1
  7516                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  7517  002EB6  C11B  F10B         	movff	xtoa@n,??_xtoa
  7518  002EBA  C11C  F10C         	movff	xtoa@n+1,??_xtoa+1
  7519  002EBE  C11D  F10D         	movff	xtoa@n+2,??_xtoa+2
  7520  002EC2  C11E  F10E         	movff	xtoa@n+3,??_xtoa+3
  7521  002EC6  C11F  F10F         	movff	xtoa@n+4,??_xtoa+4
  7522  002ECA  C120  F110         	movff	xtoa@n+5,??_xtoa+5
  7523  002ECE  C121  F111         	movff	xtoa@n+6,??_xtoa+6
  7524  002ED2  C122  F112         	movff	xtoa@n+7,??_xtoa+7
  7525  002ED6  0E05               	movlw	5
  7526  002ED8  EF77  F017         	goto	u11140
  7527  002EDC                     u11145:
  7528  002EDC  90D8               	bcf	status,0,c
  7529  002EDE  3312               	rrcf	(??_xtoa+7)& (0+255),f,b
  7530  002EE0  3311               	rrcf	(??_xtoa+6)& (0+255),f,b
  7531  002EE2  3310               	rrcf	(??_xtoa+5)& (0+255),f,b
  7532  002EE4  330F               	rrcf	(??_xtoa+4)& (0+255),f,b
  7533  002EE6  330E               	rrcf	(??_xtoa+3)& (0+255),f,b
  7534  002EE8  330D               	rrcf	(??_xtoa+2)& (0+255),f,b
  7535  002EEA  330C               	rrcf	(??_xtoa+1)& (0+255),f,b
  7536  002EEC  330B               	rrcf	??_xtoa& (0+255),f,b
  7537  002EEE                     u11140:
  7538  002EEE  2EE8               	decfsz	wreg,f,c
  7539  002EF0  EF6E  F017         	goto	u11145
  7540  002EF4  C10B  F11B         	movff	??_xtoa,xtoa@n
  7541  002EF8  C10C  F11C         	movff	??_xtoa+1,xtoa@n+1
  7542  002EFC  C10D  F11D         	movff	??_xtoa+2,xtoa@n+2
  7543  002F00  C10E  F11E         	movff	??_xtoa+3,xtoa@n+3
  7544  002F04  C10F  F11F         	movff	??_xtoa+4,xtoa@n+4
  7545  002F08  C110  F120         	movff	??_xtoa+5,xtoa@n+5
  7546  002F0C  C111  F121         	movff	??_xtoa+6,xtoa@n+6
  7547  002F10  C112  F122         	movff	??_xtoa+7,xtoa@n+7
  7548  002F14                     l8841:
  7549                           
  7550                           ; BSR set to: 1
  7551                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7552  002F14  BF24               	btfsc	(xtoa@i+1)& (0+255),7,b
  7553  002F16  EF96  F017         	goto	u11151
  7554  002F1A  5124               	movf	(xtoa@i+1)& (0+255),w,b
  7555  002F1C  E109               	bnz	u11150
  7556  002F1E  0E02               	movlw	2
  7557  002F20  5D23               	subwf	xtoa@i& (0+255),w,b
  7558  002F22  A0D8               	btfss	status,0,c
  7559  002F24  EF96  F017         	goto	u11151
  7560  002F28  EF98  F017         	goto	u11150
  7561  002F2C                     u11151:
  7562  002F2C  EFC9  F017         	goto	l836
  7563  002F30                     u11150:
  7564  002F30                     
  7565                           ; BSR set to: 1
  7566  002F30  511B               	movf	xtoa@n& (0+255),w,b
  7567  002F32  111C               	iorwf	(xtoa@n+1)& (0+255),w,b
  7568  002F34  111D               	iorwf	(xtoa@n+2)& (0+255),w,b
  7569  002F36  111E               	iorwf	(xtoa@n+3)& (0+255),w,b
  7570  002F38  111F               	iorwf	(xtoa@n+4)& (0+255),w,b
  7571  002F3A  1120               	iorwf	(xtoa@n+5)& (0+255),w,b
  7572  002F3C  1121               	iorwf	(xtoa@n+6)& (0+255),w,b
  7573  002F3E  1122               	iorwf	(xtoa@n+7)& (0+255),w,b
  7574  002F40  A4D8               	btfss	status,2,c
  7575  002F42  EFA5  F017         	goto	u11161
  7576  002F46  EFA7  F017         	goto	u11160
  7577  002F4A                     u11161:
  7578  002F4A  EFD5  F016         	goto	l8811
  7579  002F4E                     u11160:
  7580  002F4E                     
  7581                           ; BSR set to: 1
  7582  002F4E  BF18               	btfsc	(xtoa@p+1)& (0+255),7,b
  7583  002F50  EFB4  F017         	goto	u11170
  7584  002F54  5118               	movf	(xtoa@p+1)& (0+255),w,b
  7585  002F56  E106               	bnz	u11171
  7586  002F58  0517               	decf	xtoa@p& (0+255),w,b
  7587  002F5A  B0D8               	btfsc	status,0,c
  7588  002F5C  EFB2  F017         	goto	u11171
  7589  002F60  EFB4  F017         	goto	u11170
  7590  002F64                     u11171:
  7591  002F64  EFD5  F016         	goto	l8811
  7592  002F68                     u11170:
  7593  002F68                     
  7594                           ; BSR set to: 1
  7595  002F68  BF1A               	btfsc	(xtoa@w+1)& (0+255),7,b
  7596  002F6A  EFBF  F017         	goto	u11181
  7597  002F6E  511A               	movf	(xtoa@w+1)& (0+255),w,b
  7598  002F70  E108               	bnz	u11180
  7599  002F72  0519               	decf	xtoa@w& (0+255),w,b
  7600  002F74  A0D8               	btfss	status,0,c
  7601  002F76  EFBF  F017         	goto	u11181
  7602  002F7A  EFC1  F017         	goto	u11180
  7603  002F7E                     u11181:
  7604  002F7E  EFC9  F017         	goto	l836
  7605  002F82                     u11180:
  7606  002F82                     
  7607                           ; BSR set to: 1
  7608  002F82  0100               	movlb	0	; () banked
  7609  002F84  B3B9               	btfsc	_flags& (0+255),1,b
  7610  002F86  EFC7  F017         	goto	u11191
  7611  002F8A  EFC9  F017         	goto	u11190
  7612  002F8E                     u11191:
  7613  002F8E  EFD5  F016         	goto	l8811
  7614  002F92                     u11190:
  7615  002F92                     l836:
  7616                           
  7617                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  7618  002F92  0100               	movlb	0	; () banked
  7619  002F94  A9B9               	btfss	_flags& (0+255),4,b
  7620  002F96  EFCF  F017         	goto	u11201
  7621  002F9A  EFD1  F017         	goto	u11200
  7622  002F9E                     u11201:
  7623  002F9E  EFE8  F017         	goto	l8857
  7624  002FA2                     u11200:
  7625  002FA2                     
  7626                           ; BSR set to: 0
  7627                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  7628  002FA2  0101               	movlb	1	; () banked
  7629  002FA4  0723               	decf	xtoa@i& (0+255),f,b
  7630  002FA6  A0D8               	btfss	status,0,c
  7631  002FA8  0724               	decf	(xtoa@i+1)& (0+255),f,b
  7632  002FAA                     
  7633                           ; BSR set to: 1
  7634                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  7635  002FAA  0E89               	movlw	low _dbuf
  7636  002FAC  2523               	addwf	xtoa@i& (0+255),w,b
  7637  002FAE  6ED9               	movwf	fsr2l,c
  7638  002FB0  0E01               	movlw	high _dbuf
  7639  002FB2  2124               	addwfc	(xtoa@i+1)& (0+255),w,b
  7640  002FB4  6EDA               	movwf	fsr2h,c
  7641  002FB6  C10A  FFDF         	movff	xtoa@x,indf2
  7642  002FBA                     
  7643                           ; BSR set to: 1
  7644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  7645  002FBA  0723               	decf	xtoa@i& (0+255),f,b
  7646  002FBC  A0D8               	btfss	status,0,c
  7647  002FBE  0724               	decf	(xtoa@i+1)& (0+255),f,b
  7648                           
  7649                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  7650  002FC0  0E89               	movlw	low _dbuf
  7651  002FC2  2523               	addwf	xtoa@i& (0+255),w,b
  7652  002FC4  6ED9               	movwf	fsr2l,c
  7653  002FC6  0E01               	movlw	high _dbuf
  7654  002FC8  2124               	addwfc	(xtoa@i+1)& (0+255),w,b
  7655  002FCA  6EDA               	movwf	fsr2h,c
  7656  002FCC  0E30               	movlw	48
  7657  002FCE  6EDF               	movwf	indf2,c
  7658  002FD0                     l8857:
  7659                           
  7660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  7661  002FD0  C100  F0A1         	movff	xtoa@fp,pad@fp
  7662  002FD4  C101  F0A2         	movff	xtoa@fp+1,pad@fp+1
  7663  002FD8  0E89               	movlw	low _dbuf
  7664  002FDA  0101               	movlb	1	; () banked
  7665  002FDC  2523               	addwf	xtoa@i& (0+255),w,b
  7666  002FDE  0100               	movlb	0	; () banked
  7667  002FE0  6FA3               	movwf	pad@buf& (0+255),b
  7668  002FE2  0E01               	movlw	high _dbuf
  7669  002FE4  0101               	movlb	1	; () banked
  7670  002FE6  2124               	addwfc	(xtoa@i+1)& (0+255),w,b
  7671  002FE8  0100               	movlb	0	; () banked
  7672  002FEA  6FA4               	movwf	(pad@buf+1)& (0+255),b
  7673  002FEC  C119  F0A5         	movff	xtoa@w,pad@p
  7674  002FF0  C11A  F0A6         	movff	xtoa@w+1,pad@p+1
  7675  002FF4  EC45  F02C         	call	_pad	;wreg free
  7676  002FF8  C0A1  F100         	movff	?_pad,?_xtoa
  7677  002FFC  C0A2  F101         	movff	?_pad+1,?_xtoa+1
  7678  003000  0012               	return		;funcret
  7679  003002                     __end_of_xtoa:
  7680                           	opt callstack 0
  7681                           
  7682 ;; *************** function _toupper *****************
  7683 ;; Defined at:
  7684 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  7685 ;; Parameters:    Size  Location     Type
  7686 ;;  c               2   53[BANK0 ] int 
  7687 ;; Auto vars:     Size  Location     Type
  7688 ;;		None
  7689 ;; Return value:  Size  Location     Type
  7690 ;;                  2   53[BANK0 ] int 
  7691 ;; Registers used:
  7692 ;;		wreg, status,2, status,0
  7693 ;; Tracked objects:
  7694 ;;		On entry : 0/0
  7695 ;;		On exit  : 0/0
  7696 ;;		Unchanged: 0/0
  7697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7698 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7699 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7700 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7701 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7702 ;;Total ram usage:        8 bytes
  7703 ;; Hardware stack levels used:    1
  7704 ;; Hardware stack levels required when called:   14
  7705 ;; This function calls:
  7706 ;;		_islower
  7707 ;; This function is called by:
  7708 ;;		_xtoa
  7709 ;; This function uses a non-reentrant model
  7710 ;;
  7711                           
  7712                           	psect	text12
  7713  005E7C                     __ptext12:
  7714                           	opt callstack 0
  7715  005E7C                     _toupper:
  7716                           	opt callstack 11
  7717  005E7C  0E9F               	movlw	159
  7718  005E7E  0100               	movlb	0	; () banked
  7719  005E80  6F97               	movwf	??_toupper& (0+255),b
  7720  005E82  0EFF               	movlw	255
  7721  005E84  6F98               	movwf	(??_toupper+1)& (0+255),b
  7722  005E86  C095  F099         	movff	toupper@c,??_toupper+2
  7723  005E8A  C096  F09A         	movff	toupper@c+1,??_toupper+3
  7724  005E8E  5197               	movf	??_toupper& (0+255),w,b
  7725  005E90  2799               	addwf	(??_toupper+2)& (0+255),f,b
  7726  005E92  5198               	movf	(??_toupper+1)& (0+255),w,b
  7727  005E94  239A               	addwfc	(??_toupper+3)& (0+255),f,b
  7728  005E96  519A               	movf	(??_toupper+3)& (0+255),w,b
  7729  005E98  E10A               	bnz	u9770
  7730  005E9A  0E1A               	movlw	26
  7731  005E9C  5D99               	subwf	(??_toupper+2)& (0+255),w,b
  7732  005E9E  A0D8               	btfss	status,0,c
  7733  005EA0  EF54  F02F         	goto	u9771
  7734  005EA4  EF57  F02F         	goto	u9770
  7735  005EA8                     u9771:
  7736  005EA8  0E01               	movlw	1
  7737  005EAA  EF58  F02F         	goto	u9780
  7738  005EAE                     u9770:
  7739  005EAE  0E00               	movlw	0
  7740  005EB0                     u9780:
  7741  005EB0  6F9B               	movwf	_toupper$2550& (0+255),b
  7742  005EB2  6B9C               	clrf	(_toupper$2550+1)& (0+255),b
  7743  005EB4                     
  7744                           ; BSR set to: 0
  7745  005EB4  519B               	movf	_toupper$2550& (0+255),w,b
  7746  005EB6  119C               	iorwf	(_toupper$2550+1)& (0+255),w,b
  7747  005EB8  B4D8               	btfsc	status,2,c
  7748  005EBA  EF61  F02F         	goto	u9791
  7749  005EBE  EF63  F02F         	goto	u9790
  7750  005EC2                     u9791:
  7751  005EC2  EF69  F02F         	goto	l1712
  7752  005EC6                     u9790:
  7753  005EC6                     
  7754                           ; BSR set to: 0
  7755  005EC6  0E5F               	movlw	95
  7756  005EC8  1595               	andwf	toupper@c& (0+255),w,b
  7757  005ECA  6F95               	movwf	?_toupper& (0+255),b
  7758  005ECC  6B96               	clrf	(?_toupper+1)& (0+255),b
  7759  005ECE  EF6D  F02F         	goto	l1717
  7760  005ED2                     l1712:
  7761                           
  7762                           ; BSR set to: 0
  7763  005ED2  C095  F095         	movff	toupper@c,?_toupper
  7764  005ED6  C096  F096         	movff	toupper@c+1,?_toupper+1
  7765  005EDA                     l1717:
  7766                           
  7767                           ; BSR set to: 0
  7768  005EDA  0012               	return		;funcret
  7769  005EDC                     __end_of_toupper:
  7770                           	opt callstack 0
  7771                           
  7772 ;; *************** function _islower *****************
  7773 ;; Defined at:
  7774 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  7775 ;; Parameters:    Size  Location     Type
  7776 ;;  c               2   47[BANK0 ] int 
  7777 ;; Auto vars:     Size  Location     Type
  7778 ;;		None
  7779 ;; Return value:  Size  Location     Type
  7780 ;;                  2   47[BANK0 ] int 
  7781 ;; Registers used:
  7782 ;;		wreg, status,2, status,0
  7783 ;; Tracked objects:
  7784 ;;		On entry : 0/0
  7785 ;;		On exit  : 0/0
  7786 ;;		Unchanged: 0/0
  7787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7788 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7790 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7791 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7792 ;;Total ram usage:        6 bytes
  7793 ;; Hardware stack levels used:    1
  7794 ;; Hardware stack levels required when called:   13
  7795 ;; This function calls:
  7796 ;;		Nothing
  7797 ;; This function is called by:
  7798 ;;		_toupper
  7799 ;; This function uses a non-reentrant model
  7800 ;;
  7801                           
  7802                           	psect	text13
  7803  006464                     __ptext13:
  7804                           	opt callstack 0
  7805  006464                     _islower:
  7806                           	opt callstack 11
  7807  006464  0E9F               	movlw	159
  7808  006466  0100               	movlb	0	; () banked
  7809  006468  6F91               	movwf	??_islower& (0+255),b
  7810  00646A  0EFF               	movlw	255
  7811  00646C  6F92               	movwf	(??_islower+1)& (0+255),b
  7812  00646E  C08F  F093         	movff	islower@c,??_islower+2
  7813  006472  C090  F094         	movff	islower@c+1,??_islower+3
  7814  006476  5191               	movf	??_islower& (0+255),w,b
  7815  006478  2793               	addwf	(??_islower+2)& (0+255),f,b
  7816  00647A  5192               	movf	(??_islower+1)& (0+255),w,b
  7817  00647C  2394               	addwfc	(??_islower+3)& (0+255),f,b
  7818  00647E  5194               	movf	(??_islower+3)& (0+255),w,b
  7819  006480  E10A               	bnz	u8890
  7820  006482  0E1A               	movlw	26
  7821  006484  5D93               	subwf	(??_islower+2)& (0+255),w,b
  7822  006486  A0D8               	btfss	status,0,c
  7823  006488  EF48  F032         	goto	u8891
  7824  00648C  EF4B  F032         	goto	u8890
  7825  006490                     u8891:
  7826  006490  0E01               	movlw	1
  7827  006492  EF4C  F032         	goto	u8900
  7828  006496                     u8890:
  7829  006496  0E00               	movlw	0
  7830  006498                     u8900:
  7831  006498  6F8F               	movwf	?_islower& (0+255),b
  7832  00649A  6B90               	clrf	(?_islower+1)& (0+255),b
  7833  00649C                     
  7834                           ; BSR set to: 0
  7835  00649C  0012               	return		;funcret
  7836  00649E                     __end_of_islower:
  7837                           	opt callstack 0
  7838                           
  7839 ;; *************** function _isupper *****************
  7840 ;; Defined at:
  7841 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  7842 ;; Parameters:    Size  Location     Type
  7843 ;;  c               2   47[BANK0 ] int 
  7844 ;; Auto vars:     Size  Location     Type
  7845 ;;		None
  7846 ;; Return value:  Size  Location     Type
  7847 ;;                  2   47[BANK0 ] int 
  7848 ;; Registers used:
  7849 ;;		wreg, status,2, status,0
  7850 ;; Tracked objects:
  7851 ;;		On entry : 0/0
  7852 ;;		On exit  : 0/0
  7853 ;;		Unchanged: 0/0
  7854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7855 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7857 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7858 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7859 ;;Total ram usage:        6 bytes
  7860 ;; Hardware stack levels used:    1
  7861 ;; Hardware stack levels required when called:   13
  7862 ;; This function calls:
  7863 ;;		Nothing
  7864 ;; This function is called by:
  7865 ;;		_xtoa
  7866 ;; This function uses a non-reentrant model
  7867 ;;
  7868                           
  7869                           	psect	text14
  7870  00649E                     __ptext14:
  7871                           	opt callstack 0
  7872  00649E                     _isupper:
  7873                           	opt callstack 12
  7874  00649E  0EBF               	movlw	191
  7875  0064A0  0100               	movlb	0	; () banked
  7876  0064A2  6F91               	movwf	??_isupper& (0+255),b
  7877  0064A4  0EFF               	movlw	255
  7878  0064A6  6F92               	movwf	(??_isupper+1)& (0+255),b
  7879  0064A8  C08F  F093         	movff	isupper@c,??_isupper+2
  7880  0064AC  C090  F094         	movff	isupper@c+1,??_isupper+3
  7881  0064B0  5191               	movf	??_isupper& (0+255),w,b
  7882  0064B2  2793               	addwf	(??_isupper+2)& (0+255),f,b
  7883  0064B4  5192               	movf	(??_isupper+1)& (0+255),w,b
  7884  0064B6  2394               	addwfc	(??_isupper+3)& (0+255),f,b
  7885  0064B8  5194               	movf	(??_isupper+3)& (0+255),w,b
  7886  0064BA  E10A               	bnz	u9730
  7887  0064BC  0E1A               	movlw	26
  7888  0064BE  5D93               	subwf	(??_isupper+2)& (0+255),w,b
  7889  0064C0  A0D8               	btfss	status,0,c
  7890  0064C2  EF65  F032         	goto	u9731
  7891  0064C6  EF68  F032         	goto	u9730
  7892  0064CA                     u9731:
  7893  0064CA  0E01               	movlw	1
  7894  0064CC  EF69  F032         	goto	u9740
  7895  0064D0                     u9730:
  7896  0064D0  0E00               	movlw	0
  7897  0064D2                     u9740:
  7898  0064D2  6F8F               	movwf	?_isupper& (0+255),b
  7899  0064D4  6B90               	clrf	(?_isupper+1)& (0+255),b
  7900  0064D6                     
  7901                           ; BSR set to: 0
  7902  0064D6  0012               	return		;funcret
  7903  0064D8                     __end_of_isupper:
  7904                           	opt callstack 0
  7905                           
  7906 ;; *************** function _isalpha *****************
  7907 ;; Defined at:
  7908 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  7909 ;; Parameters:    Size  Location     Type
  7910 ;;  c               2   47[BANK0 ] int 
  7911 ;; Auto vars:     Size  Location     Type
  7912 ;;		None
  7913 ;; Return value:  Size  Location     Type
  7914 ;;                  2   47[BANK0 ] int 
  7915 ;; Registers used:
  7916 ;;		wreg, status,2, status,0
  7917 ;; Tracked objects:
  7918 ;;		On entry : 0/0
  7919 ;;		On exit  : 0/0
  7920 ;;		Unchanged: 0/0
  7921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7922 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7924 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7925 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7926 ;;Total ram usage:        6 bytes
  7927 ;; Hardware stack levels used:    1
  7928 ;; Hardware stack levels required when called:   13
  7929 ;; This function calls:
  7930 ;;		Nothing
  7931 ;; This function is called by:
  7932 ;;		_xtoa
  7933 ;; This function uses a non-reentrant model
  7934 ;;
  7935                           
  7936                           	psect	text15
  7937  0063EA                     __ptext15:
  7938                           	opt callstack 0
  7939  0063EA                     _isalpha:
  7940                           	opt callstack 12
  7941  0063EA  0E9F               	movlw	159
  7942  0063EC  0100               	movlb	0	; () banked
  7943  0063EE  6F91               	movwf	??_isalpha& (0+255),b
  7944  0063F0  0EFF               	movlw	255
  7945  0063F2  6F92               	movwf	(??_isalpha+1)& (0+255),b
  7946  0063F4  0E20               	movlw	32
  7947  0063F6  118F               	iorwf	isalpha@c& (0+255),w,b
  7948  0063F8  6F93               	movwf	(??_isalpha+2)& (0+255),b
  7949  0063FA  0E00               	movlw	0
  7950  0063FC  1190               	iorwf	(isalpha@c+1)& (0+255),w,b
  7951  0063FE  6F94               	movwf	(??_isalpha+3)& (0+255),b
  7952  006400  5191               	movf	??_isalpha& (0+255),w,b
  7953  006402  2793               	addwf	(??_isalpha+2)& (0+255),f,b
  7954  006404  5192               	movf	(??_isalpha+1)& (0+255),w,b
  7955  006406  2394               	addwfc	(??_isalpha+3)& (0+255),f,b
  7956  006408  5194               	movf	(??_isalpha+3)& (0+255),w,b
  7957  00640A  E10A               	bnz	u9750
  7958  00640C  0E1A               	movlw	26
  7959  00640E  5D93               	subwf	(??_isalpha+2)& (0+255),w,b
  7960  006410  A0D8               	btfss	status,0,c
  7961  006412  EF0D  F032         	goto	u9751
  7962  006416  EF10  F032         	goto	u9750
  7963  00641A                     u9751:
  7964  00641A  0E01               	movlw	1
  7965  00641C  EF11  F032         	goto	u9760
  7966  006420                     u9750:
  7967  006420  0E00               	movlw	0
  7968  006422                     u9760:
  7969  006422  6F8F               	movwf	?_isalpha& (0+255),b
  7970  006424  6B90               	clrf	(?_isalpha+1)& (0+255),b
  7971  006426                     
  7972                           ; BSR set to: 0
  7973  006426  0012               	return		;funcret
  7974  006428                     __end_of_isalpha:
  7975                           	opt callstack 0
  7976                           
  7977 ;; *************** function _utoa *****************
  7978 ;; Defined at:
  7979 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7980 ;; Parameters:    Size  Location     Type
  7981 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  7982 ;;		 -> vsnprintf@f(6), NULL(0), 
  7983 ;;  d               8    2[BANK1 ] unsigned long long 
  7984 ;; Auto vars:     Size  Location     Type
  7985 ;;  n               8   22[BANK1 ] unsigned long long 
  7986 ;;  i               2   30[BANK1 ] int 
  7987 ;;  w               2   20[BANK1 ] int 
  7988 ;;  p               2   18[BANK1 ] int 
  7989 ;; Return value:  Size  Location     Type
  7990 ;;                  2    0[BANK1 ] int 
  7991 ;; Registers used:
  7992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7993 ;; Tracked objects:
  7994 ;;		On entry : 0/0
  7995 ;;		On exit  : 0/0
  7996 ;;		Unchanged: 0/0
  7997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7998 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7999 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8000 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8001 ;;      Totals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8002 ;;Total ram usage:       32 bytes
  8003 ;; Hardware stack levels used:    1
  8004 ;; Hardware stack levels required when called:   18
  8005 ;; This function calls:
  8006 ;;		___lodiv
  8007 ;;		___lomod
  8008 ;;		_pad
  8009 ;; This function is called by:
  8010 ;;		_vfpfcnvrt
  8011 ;; This function uses a non-reentrant model
  8012 ;;
  8013                           
  8014                           	psect	text16
  8015  003882                     __ptext16:
  8016                           	opt callstack 0
  8017  003882                     _utoa:
  8018                           	opt callstack 8
  8019  003882                     
  8020                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  8021  003882  0100               	movlb	0	; () banked
  8022  003884  BFB8               	btfsc	(_prec+1)& (0+255),7,b
  8023  003886  EF47  F01C         	goto	u10971
  8024  00388A  EF49  F01C         	goto	u10970
  8025  00388E                     u10971:
  8026  00388E  EF4A  F01C         	goto	l8763
  8027  003892                     u10970:
  8028  003892                     
  8029                           ; BSR set to: 0
  8030                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  8031  003892  93B9               	bcf	_flags& (0+255),1,b
  8032  003894                     l8763:
  8033                           
  8034                           ; BSR set to: 0
  8035                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  8036  003894  BFB8               	btfsc	(_prec+1)& (0+255),7,b
  8037  003896  EF57  F01C         	goto	u10980
  8038  00389A  51B8               	movf	(_prec+1)& (0+255),w,b
  8039  00389C  E106               	bnz	u10981
  8040  00389E  05B7               	decf	_prec& (0+255),w,b
  8041  0038A0  B0D8               	btfsc	status,0,c
  8042  0038A2  EF55  F01C         	goto	u10981
  8043  0038A6  EF57  F01C         	goto	u10980
  8044  0038AA                     u10981:
  8045  0038AA  EF5E  F01C         	goto	l798
  8046  0038AE                     u10980:
  8047  0038AE                     
  8048                           ; BSR set to: 0
  8049  0038AE  0E00               	movlw	0
  8050  0038B0  0101               	movlb	1	; () banked
  8051  0038B2  6F13               	movwf	(utoa@p+1)& (0+255),b
  8052  0038B4  0E01               	movlw	1
  8053  0038B6  6F12               	movwf	utoa@p& (0+255),b
  8054  0038B8  EF62  F01C         	goto	l800
  8055  0038BC                     l798:
  8056                           
  8057                           ; BSR set to: 0
  8058  0038BC  C0B7  F112         	movff	_prec,utoa@p
  8059  0038C0  C0B8  F113         	movff	_prec+1,utoa@p+1
  8060  0038C4                     l800:
  8061                           
  8062                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  8063  0038C4  C0B5  F114         	movff	_width,utoa@w
  8064  0038C8  C0B6  F115         	movff	_width+1,utoa@w+1
  8065                           
  8066                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  8067  0038CC  C102  F116         	movff	utoa@d,utoa@n
  8068  0038D0  C103  F117         	movff	utoa@d+1,utoa@n+1
  8069  0038D4  C104  F118         	movff	utoa@d+2,utoa@n+2
  8070  0038D8  C105  F119         	movff	utoa@d+3,utoa@n+3
  8071  0038DC  C106  F11A         	movff	utoa@d+4,utoa@n+4
  8072  0038E0  C107  F11B         	movff	utoa@d+5,utoa@n+5
  8073  0038E4  C108  F11C         	movff	utoa@d+6,utoa@n+6
  8074  0038E8  C109  F11D         	movff	utoa@d+7,utoa@n+7
  8075  0038EC                     
  8076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  8077  0038EC  0E00               	movlw	0
  8078  0038EE  0101               	movlb	1	; () banked
  8079  0038F0  6F1F               	movwf	(utoa@i+1)& (0+255),b
  8080  0038F2  0E1F               	movlw	31
  8081  0038F4  6F1E               	movwf	utoa@i& (0+255),b
  8082  0038F6                     
  8083                           ; BSR set to: 1
  8084                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  8085  0038F6  0E00               	movlw	0
  8086  0038F8  6FA8               	movwf	(_dbuf+31)& (0+255),b
  8087                           
  8088                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8089  0038FA  EFF9  F01C         	goto	l8781
  8090  0038FE                     l8771:
  8091                           
  8092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  8093  0038FE  0101               	movlb	1	; () banked
  8094  003900  071E               	decf	utoa@i& (0+255),f,b
  8095  003902  A0D8               	btfss	status,0,c
  8096  003904  071F               	decf	(utoa@i+1)& (0+255),f,b
  8097  003906                     
  8098                           ; BSR set to: 1
  8099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  8100  003906  0E89               	movlw	low _dbuf
  8101  003908  251E               	addwf	utoa@i& (0+255),w,b
  8102  00390A  6ED9               	movwf	fsr2l,c
  8103  00390C  0E01               	movlw	high _dbuf
  8104  00390E  211F               	addwfc	(utoa@i+1)& (0+255),w,b
  8105  003910  6EDA               	movwf	fsr2h,c
  8106  003912  C116  F08F         	movff	utoa@n,___lomod@dividend
  8107  003916  C117  F090         	movff	utoa@n+1,___lomod@dividend+1
  8108  00391A  C118  F091         	movff	utoa@n+2,___lomod@dividend+2
  8109  00391E  C119  F092         	movff	utoa@n+3,___lomod@dividend+3
  8110  003922  C11A  F093         	movff	utoa@n+4,___lomod@dividend+4
  8111  003926  C11B  F094         	movff	utoa@n+5,___lomod@dividend+5
  8112  00392A  C11C  F095         	movff	utoa@n+6,___lomod@dividend+6
  8113  00392E  C11D  F096         	movff	utoa@n+7,___lomod@dividend+7
  8114  003932  0E0A               	movlw	10
  8115  003934  0100               	movlb	0	; () banked
  8116  003936  6F97               	movwf	___lomod@divisor& (0+255),b
  8117  003938  0E00               	movlw	0
  8118  00393A  6F98               	movwf	(___lomod@divisor+1)& (0+255),b
  8119  00393C  0E00               	movlw	0
  8120  00393E  6F99               	movwf	(___lomod@divisor+2)& (0+255),b
  8121  003940  0E00               	movlw	0
  8122  003942  6F9A               	movwf	(___lomod@divisor+3)& (0+255),b
  8123  003944  0E00               	movlw	0
  8124  003946  6F9B               	movwf	(___lomod@divisor+4)& (0+255),b
  8125  003948  0E00               	movlw	0
  8126  00394A  6F9C               	movwf	(___lomod@divisor+5)& (0+255),b
  8127  00394C  0E00               	movlw	0
  8128  00394E  6F9D               	movwf	(___lomod@divisor+6)& (0+255),b
  8129  003950  0E00               	movlw	0
  8130  003952  6F9E               	movwf	(___lomod@divisor+7)& (0+255),b
  8131  003954  EC0E  F02B         	call	___lomod	;wreg free
  8132  003958  C08F  F10A         	movff	?___lomod,??_utoa
  8133  00395C  C090  F10B         	movff	?___lomod+1,??_utoa+1
  8134  003960  C091  F10C         	movff	?___lomod+2,??_utoa+2
  8135  003964  C092  F10D         	movff	?___lomod+3,??_utoa+3
  8136  003968  C093  F10E         	movff	?___lomod+4,??_utoa+4
  8137  00396C  C094  F10F         	movff	?___lomod+5,??_utoa+5
  8138  003970  C095  F110         	movff	?___lomod+6,??_utoa+6
  8139  003974  C096  F111         	movff	?___lomod+7,??_utoa+7
  8140  003978  0101               	movlb	1	; () banked
  8141  00397A  510A               	movf	??_utoa& (0+255),w,b
  8142  00397C  0F30               	addlw	48
  8143  00397E  6EDF               	movwf	indf2,c
  8144  003980                     
  8145                           ; BSR set to: 1
  8146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  8147  003980  0712               	decf	utoa@p& (0+255),f,b
  8148  003982  A0D8               	btfss	status,0,c
  8149  003984  0713               	decf	(utoa@p+1)& (0+255),f,b
  8150  003986                     
  8151                           ; BSR set to: 1
  8152                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  8153  003986  0714               	decf	utoa@w& (0+255),f,b
  8154  003988  A0D8               	btfss	status,0,c
  8155  00398A  0715               	decf	(utoa@w+1)& (0+255),f,b
  8156  00398C                     
  8157                           ; BSR set to: 1
  8158                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  8159  00398C  C116  F08F         	movff	utoa@n,___lodiv@dividend
  8160  003990  C117  F090         	movff	utoa@n+1,___lodiv@dividend+1
  8161  003994  C118  F091         	movff	utoa@n+2,___lodiv@dividend+2
  8162  003998  C119  F092         	movff	utoa@n+3,___lodiv@dividend+3
  8163  00399C  C11A  F093         	movff	utoa@n+4,___lodiv@dividend+4
  8164  0039A0  C11B  F094         	movff	utoa@n+5,___lodiv@dividend+5
  8165  0039A4  C11C  F095         	movff	utoa@n+6,___lodiv@dividend+6
  8166  0039A8  C11D  F096         	movff	utoa@n+7,___lodiv@dividend+7
  8167  0039AC  0E0A               	movlw	10
  8168  0039AE  0100               	movlb	0	; () banked
  8169  0039B0  6F97               	movwf	___lodiv@divisor& (0+255),b
  8170  0039B2  0E00               	movlw	0
  8171  0039B4  6F98               	movwf	(___lodiv@divisor+1)& (0+255),b
  8172  0039B6  0E00               	movlw	0
  8173  0039B8  6F99               	movwf	(___lodiv@divisor+2)& (0+255),b
  8174  0039BA  0E00               	movlw	0
  8175  0039BC  6F9A               	movwf	(___lodiv@divisor+3)& (0+255),b
  8176  0039BE  0E00               	movlw	0
  8177  0039C0  6F9B               	movwf	(___lodiv@divisor+4)& (0+255),b
  8178  0039C2  0E00               	movlw	0
  8179  0039C4  6F9C               	movwf	(___lodiv@divisor+5)& (0+255),b
  8180  0039C6  0E00               	movlw	0
  8181  0039C8  6F9D               	movwf	(___lodiv@divisor+6)& (0+255),b
  8182  0039CA  0E00               	movlw	0
  8183  0039CC  6F9E               	movwf	(___lodiv@divisor+7)& (0+255),b
  8184  0039CE  EC32  F029         	call	___lodiv	;wreg free
  8185  0039D2  C08F  F116         	movff	?___lodiv,utoa@n
  8186  0039D6  C090  F117         	movff	?___lodiv+1,utoa@n+1
  8187  0039DA  C091  F118         	movff	?___lodiv+2,utoa@n+2
  8188  0039DE  C092  F119         	movff	?___lodiv+3,utoa@n+3
  8189  0039E2  C093  F11A         	movff	?___lodiv+4,utoa@n+4
  8190  0039E6  C094  F11B         	movff	?___lodiv+5,utoa@n+5
  8191  0039EA  C095  F11C         	movff	?___lodiv+6,utoa@n+6
  8192  0039EE  C096  F11D         	movff	?___lodiv+7,utoa@n+7
  8193  0039F2                     l8781:
  8194                           
  8195                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8196  0039F2  0101               	movlb	1	; () banked
  8197  0039F4  511E               	movf	utoa@i& (0+255),w,b
  8198  0039F6  111F               	iorwf	(utoa@i+1)& (0+255),w,b
  8199  0039F8  B4D8               	btfsc	status,2,c
  8200  0039FA  EF01  F01D         	goto	u10991
  8201  0039FE  EF03  F01D         	goto	u10990
  8202  003A02                     u10991:
  8203  003A02  EF34  F01D         	goto	l8791
  8204  003A06                     u10990:
  8205  003A06                     
  8206                           ; BSR set to: 1
  8207  003A06  5116               	movf	utoa@n& (0+255),w,b
  8208  003A08  1117               	iorwf	(utoa@n+1)& (0+255),w,b
  8209  003A0A  1118               	iorwf	(utoa@n+2)& (0+255),w,b
  8210  003A0C  1119               	iorwf	(utoa@n+3)& (0+255),w,b
  8211  003A0E  111A               	iorwf	(utoa@n+4)& (0+255),w,b
  8212  003A10  111B               	iorwf	(utoa@n+5)& (0+255),w,b
  8213  003A12  111C               	iorwf	(utoa@n+6)& (0+255),w,b
  8214  003A14  111D               	iorwf	(utoa@n+7)& (0+255),w,b
  8215  003A16  A4D8               	btfss	status,2,c
  8216  003A18  EF10  F01D         	goto	u11001
  8217  003A1C  EF12  F01D         	goto	u11000
  8218  003A20                     u11001:
  8219  003A20  EF7F  F01C         	goto	l8771
  8220  003A24                     u11000:
  8221  003A24                     
  8222                           ; BSR set to: 1
  8223  003A24  BF13               	btfsc	(utoa@p+1)& (0+255),7,b
  8224  003A26  EF1F  F01D         	goto	u11010
  8225  003A2A  5113               	movf	(utoa@p+1)& (0+255),w,b
  8226  003A2C  E106               	bnz	u11011
  8227  003A2E  0512               	decf	utoa@p& (0+255),w,b
  8228  003A30  B0D8               	btfsc	status,0,c
  8229  003A32  EF1D  F01D         	goto	u11011
  8230  003A36  EF1F  F01D         	goto	u11010
  8231  003A3A                     u11011:
  8232  003A3A  EF7F  F01C         	goto	l8771
  8233  003A3E                     u11010:
  8234  003A3E                     
  8235                           ; BSR set to: 1
  8236  003A3E  BF15               	btfsc	(utoa@w+1)& (0+255),7,b
  8237  003A40  EF2A  F01D         	goto	u11021
  8238  003A44  5115               	movf	(utoa@w+1)& (0+255),w,b
  8239  003A46  E108               	bnz	u11020
  8240  003A48  0514               	decf	utoa@w& (0+255),w,b
  8241  003A4A  A0D8               	btfss	status,0,c
  8242  003A4C  EF2A  F01D         	goto	u11021
  8243  003A50  EF2C  F01D         	goto	u11020
  8244  003A54                     u11021:
  8245  003A54  EF34  F01D         	goto	l8791
  8246  003A58                     u11020:
  8247  003A58                     
  8248                           ; BSR set to: 1
  8249  003A58  0100               	movlb	0	; () banked
  8250  003A5A  B3B9               	btfsc	_flags& (0+255),1,b
  8251  003A5C  EF32  F01D         	goto	u11031
  8252  003A60  EF34  F01D         	goto	u11030
  8253  003A64                     u11031:
  8254  003A64  EF7F  F01C         	goto	l8771
  8255  003A68                     u11030:
  8256  003A68                     l8791:
  8257                           
  8258                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  8259  003A68  C100  F0A1         	movff	utoa@fp,pad@fp
  8260  003A6C  C101  F0A2         	movff	utoa@fp+1,pad@fp+1
  8261  003A70  0E89               	movlw	low _dbuf
  8262  003A72  0101               	movlb	1	; () banked
  8263  003A74  251E               	addwf	utoa@i& (0+255),w,b
  8264  003A76  0100               	movlb	0	; () banked
  8265  003A78  6FA3               	movwf	pad@buf& (0+255),b
  8266  003A7A  0E01               	movlw	high _dbuf
  8267  003A7C  0101               	movlb	1	; () banked
  8268  003A7E  211F               	addwfc	(utoa@i+1)& (0+255),w,b
  8269  003A80  0100               	movlb	0	; () banked
  8270  003A82  6FA4               	movwf	(pad@buf+1)& (0+255),b
  8271  003A84  C114  F0A5         	movff	utoa@w,pad@p
  8272  003A88  C115  F0A6         	movff	utoa@w+1,pad@p+1
  8273  003A8C  EC45  F02C         	call	_pad	;wreg free
  8274  003A90  C0A1  F100         	movff	?_pad,?_utoa
  8275  003A94  C0A2  F101         	movff	?_pad+1,?_utoa+1
  8276  003A98  0012               	return		;funcret
  8277  003A9A                     __end_of_utoa:
  8278                           	opt callstack 0
  8279                           
  8280 ;; *************** function ___lomod *****************
  8281 ;; Defined at:
  8282 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  8283 ;; Parameters:    Size  Location     Type
  8284 ;;  dividend        8   47[BANK0 ] unsigned long long 
  8285 ;;  divisor         8   55[BANK0 ] unsigned long long 
  8286 ;; Auto vars:     Size  Location     Type
  8287 ;;  counter         1   63[BANK0 ] unsigned char 
  8288 ;; Return value:  Size  Location     Type
  8289 ;;                  8   47[BANK0 ] unsigned long long 
  8290 ;; Registers used:
  8291 ;;		wreg, status,2, status,0
  8292 ;; Tracked objects:
  8293 ;;		On entry : 0/0
  8294 ;;		On exit  : 0/0
  8295 ;;		Unchanged: 0/0
  8296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8297 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8298 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8300 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8301 ;;Total ram usage:       17 bytes
  8302 ;; Hardware stack levels used:    1
  8303 ;; Hardware stack levels required when called:   13
  8304 ;; This function calls:
  8305 ;;		Nothing
  8306 ;; This function is called by:
  8307 ;;		_utoa
  8308 ;; This function uses a non-reentrant model
  8309 ;;
  8310                           
  8311                           	psect	text17
  8312  00561C                     __ptext17:
  8313                           	opt callstack 0
  8314  00561C                     ___lomod:
  8315                           	opt callstack 12
  8316  00561C  0100               	movlb	0	; () banked
  8317  00561E  5197               	movf	___lomod@divisor& (0+255),w,b
  8318  005620  1198               	iorwf	(___lomod@divisor+1)& (0+255),w,b
  8319  005622  1199               	iorwf	(___lomod@divisor+2)& (0+255),w,b
  8320  005624  119A               	iorwf	(___lomod@divisor+3)& (0+255),w,b
  8321  005626  119B               	iorwf	(___lomod@divisor+4)& (0+255),w,b
  8322  005628  119C               	iorwf	(___lomod@divisor+5)& (0+255),w,b
  8323  00562A  119D               	iorwf	(___lomod@divisor+6)& (0+255),w,b
  8324  00562C  119E               	iorwf	(___lomod@divisor+7)& (0+255),w,b
  8325  00562E  B4D8               	btfsc	status,2,c
  8326  005630  EF1C  F02B         	goto	u9991
  8327  005634  EF1E  F02B         	goto	u9990
  8328  005638                     u9991:
  8329  005638  EF66  F02B         	goto	l1371
  8330  00563C                     u9990:
  8331  00563C                     
  8332                           ; BSR set to: 0
  8333  00563C  0E01               	movlw	1
  8334  00563E  6F9F               	movwf	___lomod@counter& (0+255),b
  8335  005640  EF2C  F02B         	goto	l8189
  8336  005644                     l8187:
  8337                           
  8338                           ; BSR set to: 0
  8339  005644  90D8               	bcf	status,0,c
  8340  005646  3797               	rlcf	___lomod@divisor& (0+255),f,b
  8341  005648  3798               	rlcf	(___lomod@divisor+1)& (0+255),f,b
  8342  00564A  3799               	rlcf	(___lomod@divisor+2)& (0+255),f,b
  8343  00564C  379A               	rlcf	(___lomod@divisor+3)& (0+255),f,b
  8344  00564E  379B               	rlcf	(___lomod@divisor+4)& (0+255),f,b
  8345  005650  379C               	rlcf	(___lomod@divisor+5)& (0+255),f,b
  8346  005652  379D               	rlcf	(___lomod@divisor+6)& (0+255),f,b
  8347  005654  379E               	rlcf	(___lomod@divisor+7)& (0+255),f,b
  8348  005656  2B9F               	incf	___lomod@counter& (0+255),f,b
  8349  005658                     l8189:
  8350                           
  8351                           ; BSR set to: 0
  8352  005658  AF9E               	btfss	(___lomod@divisor+7)& (0+255),7,b
  8353  00565A  EF31  F02B         	goto	u10001
  8354  00565E  EF33  F02B         	goto	u10000
  8355  005662                     u10001:
  8356  005662  EF22  F02B         	goto	l8187
  8357  005666                     u10000:
  8358  005666                     l8191:
  8359                           
  8360                           ; BSR set to: 0
  8361  005666  5197               	movf	___lomod@divisor& (0+255),w,b
  8362  005668  5D8F               	subwf	___lomod@dividend& (0+255),w,b
  8363  00566A  5198               	movf	(___lomod@divisor+1)& (0+255),w,b
  8364  00566C  5990               	subwfb	(___lomod@dividend+1)& (0+255),w,b
  8365  00566E  5199               	movf	(___lomod@divisor+2)& (0+255),w,b
  8366  005670  5991               	subwfb	(___lomod@dividend+2)& (0+255),w,b
  8367  005672  519A               	movf	(___lomod@divisor+3)& (0+255),w,b
  8368  005674  5992               	subwfb	(___lomod@dividend+3)& (0+255),w,b
  8369  005676  519B               	movf	(___lomod@divisor+4)& (0+255),w,b
  8370  005678  5993               	subwfb	(___lomod@dividend+4)& (0+255),w,b
  8371  00567A  519C               	movf	(___lomod@divisor+5)& (0+255),w,b
  8372  00567C  5994               	subwfb	(___lomod@dividend+5)& (0+255),w,b
  8373  00567E  519D               	movf	(___lomod@divisor+6)& (0+255),w,b
  8374  005680  5995               	subwfb	(___lomod@dividend+6)& (0+255),w,b
  8375  005682  519E               	movf	(___lomod@divisor+7)& (0+255),w,b
  8376  005684  5996               	subwfb	(___lomod@dividend+7)& (0+255),w,b
  8377  005686  A0D8               	btfss	status,0,c
  8378  005688  EF48  F02B         	goto	u10011
  8379  00568C  EF4A  F02B         	goto	u10010
  8380  005690                     u10011:
  8381  005690  EF5A  F02B         	goto	l8195
  8382  005694                     u10010:
  8383  005694                     
  8384                           ; BSR set to: 0
  8385  005694  5197               	movf	___lomod@divisor& (0+255),w,b
  8386  005696  5F8F               	subwf	___lomod@dividend& (0+255),f,b
  8387  005698  5198               	movf	(___lomod@divisor+1)& (0+255),w,b
  8388  00569A  5B90               	subwfb	(___lomod@dividend+1)& (0+255),f,b
  8389  00569C  5199               	movf	(___lomod@divisor+2)& (0+255),w,b
  8390  00569E  5B91               	subwfb	(___lomod@dividend+2)& (0+255),f,b
  8391  0056A0  519A               	movf	(___lomod@divisor+3)& (0+255),w,b
  8392  0056A2  5B92               	subwfb	(___lomod@dividend+3)& (0+255),f,b
  8393  0056A4  519B               	movf	(___lomod@divisor+4)& (0+255),w,b
  8394  0056A6  5B93               	subwfb	(___lomod@dividend+4)& (0+255),f,b
  8395  0056A8  519C               	movf	(___lomod@divisor+5)& (0+255),w,b
  8396  0056AA  5B94               	subwfb	(___lomod@dividend+5)& (0+255),f,b
  8397  0056AC  519D               	movf	(___lomod@divisor+6)& (0+255),w,b
  8398  0056AE  5B95               	subwfb	(___lomod@dividend+6)& (0+255),f,b
  8399  0056B0  519E               	movf	(___lomod@divisor+7)& (0+255),w,b
  8400  0056B2  5B96               	subwfb	(___lomod@dividend+7)& (0+255),f,b
  8401  0056B4                     l8195:
  8402                           
  8403                           ; BSR set to: 0
  8404  0056B4  90D8               	bcf	status,0,c
  8405  0056B6  339E               	rrcf	(___lomod@divisor+7)& (0+255),f,b
  8406  0056B8  339D               	rrcf	(___lomod@divisor+6)& (0+255),f,b
  8407  0056BA  339C               	rrcf	(___lomod@divisor+5)& (0+255),f,b
  8408  0056BC  339B               	rrcf	(___lomod@divisor+4)& (0+255),f,b
  8409  0056BE  339A               	rrcf	(___lomod@divisor+3)& (0+255),f,b
  8410  0056C0  3399               	rrcf	(___lomod@divisor+2)& (0+255),f,b
  8411  0056C2  3398               	rrcf	(___lomod@divisor+1)& (0+255),f,b
  8412  0056C4  3397               	rrcf	___lomod@divisor& (0+255),f,b
  8413  0056C6                     
  8414                           ; BSR set to: 0
  8415  0056C6  2F9F               	decfsz	___lomod@counter& (0+255),f,b
  8416  0056C8  EF33  F02B         	goto	l8191
  8417  0056CC                     l1371:
  8418                           
  8419                           ; BSR set to: 0
  8420  0056CC  C08F  F08F         	movff	___lomod@dividend,?___lomod
  8421  0056D0  C090  F090         	movff	___lomod@dividend+1,?___lomod+1
  8422  0056D4  C091  F091         	movff	___lomod@dividend+2,?___lomod+2
  8423  0056D8  C092  F092         	movff	___lomod@dividend+3,?___lomod+3
  8424  0056DC  C093  F093         	movff	___lomod@dividend+4,?___lomod+4
  8425  0056E0  C094  F094         	movff	___lomod@dividend+5,?___lomod+5
  8426  0056E4  C095  F095         	movff	___lomod@dividend+6,?___lomod+6
  8427  0056E8  C096  F096         	movff	___lomod@dividend+7,?___lomod+7
  8428  0056EC                     
  8429                           ; BSR set to: 0
  8430  0056EC  0012               	return		;funcret
  8431  0056EE                     __end_of___lomod:
  8432                           	opt callstack 0
  8433                           
  8434 ;; *************** function ___lodiv *****************
  8435 ;; Defined at:
  8436 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  8437 ;; Parameters:    Size  Location     Type
  8438 ;;  dividend        8   47[BANK0 ] unsigned long long 
  8439 ;;  divisor         8   55[BANK0 ] unsigned long long 
  8440 ;; Auto vars:     Size  Location     Type
  8441 ;;  quotient        8   63[BANK0 ] unsigned long long 
  8442 ;;  counter         1   71[BANK0 ] unsigned char 
  8443 ;; Return value:  Size  Location     Type
  8444 ;;                  8   47[BANK0 ] unsigned long long 
  8445 ;; Registers used:
  8446 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8447 ;; Tracked objects:
  8448 ;;		On entry : 0/0
  8449 ;;		On exit  : 0/0
  8450 ;;		Unchanged: 0/0
  8451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8452 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8453 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8455 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8456 ;;Total ram usage:       25 bytes
  8457 ;; Hardware stack levels used:    1
  8458 ;; Hardware stack levels required when called:   13
  8459 ;; This function calls:
  8460 ;;		Nothing
  8461 ;; This function is called by:
  8462 ;;		_utoa
  8463 ;; This function uses a non-reentrant model
  8464 ;;
  8465                           
  8466                           	psect	text18
  8467  005264                     __ptext18:
  8468                           	opt callstack 0
  8469  005264                     ___lodiv:
  8470                           	opt callstack 12
  8471  005264  EE20  F09F         	lfsr	2,___lodiv@quotient
  8472  005268  0E07               	movlw	7
  8473  00526A                     u9951:
  8474  00526A  6ADE               	clrf	postinc2,c
  8475  00526C  06E8               	decf	wreg,f,c
  8476  00526E  E2FD               	bc	u9951
  8477  005270  0100               	movlb	0	; () banked
  8478  005272  5197               	movf	___lodiv@divisor& (0+255),w,b
  8479  005274  1198               	iorwf	(___lodiv@divisor+1)& (0+255),w,b
  8480  005276  1199               	iorwf	(___lodiv@divisor+2)& (0+255),w,b
  8481  005278  119A               	iorwf	(___lodiv@divisor+3)& (0+255),w,b
  8482  00527A  119B               	iorwf	(___lodiv@divisor+4)& (0+255),w,b
  8483  00527C  119C               	iorwf	(___lodiv@divisor+5)& (0+255),w,b
  8484  00527E  119D               	iorwf	(___lodiv@divisor+6)& (0+255),w,b
  8485  005280  119E               	iorwf	(___lodiv@divisor+7)& (0+255),w,b
  8486  005282  B4D8               	btfsc	status,2,c
  8487  005284  EF46  F029         	goto	u9961
  8488  005288  EF48  F029         	goto	u9960
  8489  00528C                     u9961:
  8490  00528C  EF9A  F029         	goto	l1361
  8491  005290                     u9960:
  8492  005290                     
  8493                           ; BSR set to: 0
  8494  005290  0E01               	movlw	1
  8495  005292  6FA7               	movwf	___lodiv@counter& (0+255),b
  8496  005294  EF56  F029         	goto	l8169
  8497  005298                     l8167:
  8498                           
  8499                           ; BSR set to: 0
  8500  005298  90D8               	bcf	status,0,c
  8501  00529A  3797               	rlcf	___lodiv@divisor& (0+255),f,b
  8502  00529C  3798               	rlcf	(___lodiv@divisor+1)& (0+255),f,b
  8503  00529E  3799               	rlcf	(___lodiv@divisor+2)& (0+255),f,b
  8504  0052A0  379A               	rlcf	(___lodiv@divisor+3)& (0+255),f,b
  8505  0052A2  379B               	rlcf	(___lodiv@divisor+4)& (0+255),f,b
  8506  0052A4  379C               	rlcf	(___lodiv@divisor+5)& (0+255),f,b
  8507  0052A6  379D               	rlcf	(___lodiv@divisor+6)& (0+255),f,b
  8508  0052A8  379E               	rlcf	(___lodiv@divisor+7)& (0+255),f,b
  8509  0052AA  2BA7               	incf	___lodiv@counter& (0+255),f,b
  8510  0052AC                     l8169:
  8511                           
  8512                           ; BSR set to: 0
  8513  0052AC  AF9E               	btfss	(___lodiv@divisor+7)& (0+255),7,b
  8514  0052AE  EF5B  F029         	goto	u9971
  8515  0052B2  EF5D  F029         	goto	u9970
  8516  0052B6                     u9971:
  8517  0052B6  EF4C  F029         	goto	l8167
  8518  0052BA                     u9970:
  8519  0052BA                     l8171:
  8520                           
  8521                           ; BSR set to: 0
  8522  0052BA  90D8               	bcf	status,0,c
  8523  0052BC  379F               	rlcf	___lodiv@quotient& (0+255),f,b
  8524  0052BE  37A0               	rlcf	(___lodiv@quotient+1)& (0+255),f,b
  8525  0052C0  37A1               	rlcf	(___lodiv@quotient+2)& (0+255),f,b
  8526  0052C2  37A2               	rlcf	(___lodiv@quotient+3)& (0+255),f,b
  8527  0052C4  37A3               	rlcf	(___lodiv@quotient+4)& (0+255),f,b
  8528  0052C6  37A4               	rlcf	(___lodiv@quotient+5)& (0+255),f,b
  8529  0052C8  37A5               	rlcf	(___lodiv@quotient+6)& (0+255),f,b
  8530  0052CA  37A6               	rlcf	(___lodiv@quotient+7)& (0+255),f,b
  8531  0052CC                     
  8532                           ; BSR set to: 0
  8533  0052CC  5197               	movf	___lodiv@divisor& (0+255),w,b
  8534  0052CE  5D8F               	subwf	___lodiv@dividend& (0+255),w,b
  8535  0052D0  5198               	movf	(___lodiv@divisor+1)& (0+255),w,b
  8536  0052D2  5990               	subwfb	(___lodiv@dividend+1)& (0+255),w,b
  8537  0052D4  5199               	movf	(___lodiv@divisor+2)& (0+255),w,b
  8538  0052D6  5991               	subwfb	(___lodiv@dividend+2)& (0+255),w,b
  8539  0052D8  519A               	movf	(___lodiv@divisor+3)& (0+255),w,b
  8540  0052DA  5992               	subwfb	(___lodiv@dividend+3)& (0+255),w,b
  8541  0052DC  519B               	movf	(___lodiv@divisor+4)& (0+255),w,b
  8542  0052DE  5993               	subwfb	(___lodiv@dividend+4)& (0+255),w,b
  8543  0052E0  519C               	movf	(___lodiv@divisor+5)& (0+255),w,b
  8544  0052E2  5994               	subwfb	(___lodiv@dividend+5)& (0+255),w,b
  8545  0052E4  519D               	movf	(___lodiv@divisor+6)& (0+255),w,b
  8546  0052E6  5995               	subwfb	(___lodiv@dividend+6)& (0+255),w,b
  8547  0052E8  519E               	movf	(___lodiv@divisor+7)& (0+255),w,b
  8548  0052EA  5996               	subwfb	(___lodiv@dividend+7)& (0+255),w,b
  8549  0052EC  A0D8               	btfss	status,0,c
  8550  0052EE  EF7B  F029         	goto	u9981
  8551  0052F2  EF7D  F029         	goto	u9980
  8552  0052F6                     u9981:
  8553  0052F6  EF8E  F029         	goto	l8179
  8554  0052FA                     u9980:
  8555  0052FA                     
  8556                           ; BSR set to: 0
  8557  0052FA  5197               	movf	___lodiv@divisor& (0+255),w,b
  8558  0052FC  5F8F               	subwf	___lodiv@dividend& (0+255),f,b
  8559  0052FE  5198               	movf	(___lodiv@divisor+1)& (0+255),w,b
  8560  005300  5B90               	subwfb	(___lodiv@dividend+1)& (0+255),f,b
  8561  005302  5199               	movf	(___lodiv@divisor+2)& (0+255),w,b
  8562  005304  5B91               	subwfb	(___lodiv@dividend+2)& (0+255),f,b
  8563  005306  519A               	movf	(___lodiv@divisor+3)& (0+255),w,b
  8564  005308  5B92               	subwfb	(___lodiv@dividend+3)& (0+255),f,b
  8565  00530A  519B               	movf	(___lodiv@divisor+4)& (0+255),w,b
  8566  00530C  5B93               	subwfb	(___lodiv@dividend+4)& (0+255),f,b
  8567  00530E  519C               	movf	(___lodiv@divisor+5)& (0+255),w,b
  8568  005310  5B94               	subwfb	(___lodiv@dividend+5)& (0+255),f,b
  8569  005312  519D               	movf	(___lodiv@divisor+6)& (0+255),w,b
  8570  005314  5B95               	subwfb	(___lodiv@dividend+6)& (0+255),f,b
  8571  005316  519E               	movf	(___lodiv@divisor+7)& (0+255),w,b
  8572  005318  5B96               	subwfb	(___lodiv@dividend+7)& (0+255),f,b
  8573  00531A                     
  8574                           ; BSR set to: 0
  8575  00531A  819F               	bsf	___lodiv@quotient& (0+255),0,b
  8576  00531C                     l8179:
  8577                           
  8578                           ; BSR set to: 0
  8579  00531C  90D8               	bcf	status,0,c
  8580  00531E  339E               	rrcf	(___lodiv@divisor+7)& (0+255),f,b
  8581  005320  339D               	rrcf	(___lodiv@divisor+6)& (0+255),f,b
  8582  005322  339C               	rrcf	(___lodiv@divisor+5)& (0+255),f,b
  8583  005324  339B               	rrcf	(___lodiv@divisor+4)& (0+255),f,b
  8584  005326  339A               	rrcf	(___lodiv@divisor+3)& (0+255),f,b
  8585  005328  3399               	rrcf	(___lodiv@divisor+2)& (0+255),f,b
  8586  00532A  3398               	rrcf	(___lodiv@divisor+1)& (0+255),f,b
  8587  00532C  3397               	rrcf	___lodiv@divisor& (0+255),f,b
  8588  00532E                     
  8589                           ; BSR set to: 0
  8590  00532E  2FA7               	decfsz	___lodiv@counter& (0+255),f,b
  8591  005330  EF5D  F029         	goto	l8171
  8592  005334                     l1361:
  8593                           
  8594                           ; BSR set to: 0
  8595  005334  C09F  F08F         	movff	___lodiv@quotient,?___lodiv
  8596  005338  C0A0  F090         	movff	___lodiv@quotient+1,?___lodiv+1
  8597  00533C  C0A1  F091         	movff	___lodiv@quotient+2,?___lodiv+2
  8598  005340  C0A2  F092         	movff	___lodiv@quotient+3,?___lodiv+3
  8599  005344  C0A3  F093         	movff	___lodiv@quotient+4,?___lodiv+4
  8600  005348  C0A4  F094         	movff	___lodiv@quotient+5,?___lodiv+5
  8601  00534C  C0A5  F095         	movff	___lodiv@quotient+6,?___lodiv+6
  8602  005350  C0A6  F096         	movff	___lodiv@quotient+7,?___lodiv+7
  8603  005354                     
  8604                           ; BSR set to: 0
  8605  005354  0012               	return		;funcret
  8606  005356                     __end_of___lodiv:
  8607                           	opt callstack 0
  8608                           
  8609 ;; *************** function _strncmp *****************
  8610 ;; Defined at:
  8611 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  8612 ;; Parameters:    Size  Location     Type
  8613 ;;  _l              2   47[BANK0 ] PTR const unsigned char 
  8614 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
  8615 ;;		 -> STR_4(22), STR_3(12), STR_1(13), 
  8616 ;;  _r              2   49[BANK0 ] PTR const unsigned char 
  8617 ;;		 -> STR_105(3), STR_101(3), STR_96(3), STR_92(3), 
  8618 ;;		 -> STR_87(4), STR_83(4), STR_78(3), STR_73(3), 
  8619 ;;		 -> STR_68(4), STR_63(3), STR_58(3), STR_53(4), 
  8620 ;;		 -> STR_48(3), STR_43(3), STR_38(4), STR_33(3), 
  8621 ;;		 -> STR_29(3), STR_24(3), STR_20(3), STR_15(4), 
  8622 ;;		 -> STR_11(4), 
  8623 ;;  n               2   51[BANK0 ] unsigned int 
  8624 ;; Auto vars:     Size  Location     Type
  8625 ;;  r               2   56[BANK0 ] PTR const unsigned char 
  8626 ;;		 -> STR_105(3), STR_101(3), STR_96(3), STR_92(3), 
  8627 ;;		 -> STR_87(4), STR_83(4), STR_78(3), STR_73(3), 
  8628 ;;		 -> STR_68(4), STR_63(3), STR_58(3), STR_53(4), 
  8629 ;;		 -> STR_48(3), STR_43(3), STR_38(4), STR_33(3), 
  8630 ;;		 -> STR_29(3), STR_24(3), STR_20(3), STR_15(4), 
  8631 ;;		 -> STR_11(4), 
  8632 ;;  l               2   54[BANK0 ] PTR const unsigned char 
  8633 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
  8634 ;;		 -> STR_4(22), STR_3(12), STR_1(13), 
  8635 ;; Return value:  Size  Location     Type
  8636 ;;                  2   47[BANK0 ] int 
  8637 ;; Registers used:
  8638 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  8639 ;; Tracked objects:
  8640 ;;		On entry : 0/0
  8641 ;;		On exit  : 0/0
  8642 ;;		Unchanged: 0/0
  8643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8644 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8645 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8646 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8647 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8648 ;;Total ram usage:       11 bytes
  8649 ;; Hardware stack levels used:    1
  8650 ;; Hardware stack levels required when called:   13
  8651 ;; This function calls:
  8652 ;;		Nothing
  8653 ;; This function is called by:
  8654 ;;		_vfpfcnvrt
  8655 ;; This function uses a non-reentrant model
  8656 ;;
  8657                           
  8658                           	psect	text19
  8659  005446                     __ptext19:
  8660                           	opt callstack 0
  8661  005446                     _strncmp:
  8662                           	opt callstack 13
  8663  005446  C08F  F096         	movff	strncmp@_l,strncmp@l
  8664  00544A  C090  F097         	movff	strncmp@_l+1,strncmp@l+1
  8665  00544E  C091  F098         	movff	strncmp@_r,strncmp@r
  8666  005452  C092  F099         	movff	strncmp@_r+1,strncmp@r+1
  8667  005456  0100               	movlb	0	; () banked
  8668  005458  0793               	decf	strncmp@n& (0+255),f,b
  8669  00545A  A0D8               	btfss	status,0,c
  8670  00545C  0794               	decf	(strncmp@n+1)& (0+255),f,b
  8671  00545E  2993               	incf	strncmp@n& (0+255),w,b
  8672  005460  E106               	bnz	u11211
  8673  005462  2994               	incf	(strncmp@n+1)& (0+255),w,b
  8674  005464  A4D8               	btfss	status,2,c
  8675  005466  EF37  F02A         	goto	u11211
  8676  00546A  EF39  F02A         	goto	u11210
  8677  00546E                     u11211:
  8678  00546E  EF46  F02A         	goto	l8869
  8679  005472                     u11210:
  8680  005472                     
  8681                           ; BSR set to: 0
  8682  005472  0E00               	movlw	0
  8683  005474  6F90               	movwf	(?_strncmp+1)& (0+255),b
  8684  005476  0E00               	movlw	0
  8685  005478  6F8F               	movwf	?_strncmp& (0+255),b
  8686  00547A  EF98  F02A         	goto	l1702
  8687  00547E                     l8867:
  8688                           
  8689                           ; BSR set to: 0
  8690  00547E  4B96               	infsnz	strncmp@l& (0+255),f,b
  8691  005480  2B97               	incf	(strncmp@l+1)& (0+255),f,b
  8692  005482  4B98               	infsnz	strncmp@r& (0+255),f,b
  8693  005484  2B99               	incf	(strncmp@r+1)& (0+255),f,b
  8694  005486  0793               	decf	strncmp@n& (0+255),f,b
  8695  005488  A0D8               	btfss	status,0,c
  8696  00548A  0794               	decf	(strncmp@n+1)& (0+255),f,b
  8697  00548C                     l8869:
  8698                           
  8699                           ; BSR set to: 0
  8700  00548C  C096  FFF6         	movff	strncmp@l,tblptrl
  8701  005490  C097  FFF7         	movff	strncmp@l+1,tblptrh
  8702  005494                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8703  005494  6AF8               	clrf	tblptru,c
  8704  005496                     	endif
  8705  005496                     	if	0	;tblptru may be non-zero
  8706  005496                     	endif
  8707  005496  0008               	tblrd		*
  8708  005498  50F5               	movf	tablat,w,c
  8709  00549A  0900               	iorlw	0
  8710  00549C  B4D8               	btfsc	status,2,c
  8711  00549E  EF53  F02A         	goto	u11221
  8712  0054A2  EF55  F02A         	goto	u11220
  8713  0054A6                     u11221:
  8714  0054A6  EF84  F02A         	goto	l8877
  8715  0054AA                     u11220:
  8716  0054AA                     
  8717                           ; BSR set to: 0
  8718  0054AA  C098  FFF6         	movff	strncmp@r,tblptrl
  8719  0054AE  C099  FFF7         	movff	strncmp@r+1,tblptrh
  8720  0054B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8721  0054B2  6AF8               	clrf	tblptru,c
  8722  0054B4                     	endif
  8723  0054B4                     	if	0	;tblptru may be non-zero
  8724  0054B4                     	endif
  8725  0054B4  0008               	tblrd		*
  8726  0054B6  50F5               	movf	tablat,w,c
  8727  0054B8  0900               	iorlw	0
  8728  0054BA  B4D8               	btfsc	status,2,c
  8729  0054BC  EF62  F02A         	goto	u11231
  8730  0054C0  EF64  F02A         	goto	u11230
  8731  0054C4                     u11231:
  8732  0054C4  EF84  F02A         	goto	l8877
  8733  0054C8                     u11230:
  8734  0054C8                     
  8735                           ; BSR set to: 0
  8736  0054C8  5193               	movf	strncmp@n& (0+255),w,b
  8737  0054CA  1194               	iorwf	(strncmp@n+1)& (0+255),w,b
  8738  0054CC  B4D8               	btfsc	status,2,c
  8739  0054CE  EF6B  F02A         	goto	u11241
  8740  0054D2  EF6D  F02A         	goto	u11240
  8741  0054D6                     u11241:
  8742  0054D6  EF84  F02A         	goto	l8877
  8743  0054DA                     u11240:
  8744  0054DA                     
  8745                           ; BSR set to: 0
  8746  0054DA  C096  FFF6         	movff	strncmp@l,tblptrl
  8747  0054DE  C097  FFF7         	movff	strncmp@l+1,tblptrh
  8748  0054E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8749  0054E2  6AF8               	clrf	tblptru,c
  8750  0054E4                     	endif
  8751  0054E4                     	if	0	;tblptru may be non-zero
  8752  0054E4                     	endif
  8753  0054E4  0008               	tblrd		*
  8754  0054E6  CFF5 F095          	movff	tablat,??_strncmp
  8755  0054EA  C098  FFF6         	movff	strncmp@r,tblptrl
  8756  0054EE  C099  FFF7         	movff	strncmp@r+1,tblptrh
  8757  0054F2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8758  0054F2  6AF8               	clrf	tblptru,c
  8759  0054F4                     	endif
  8760  0054F4                     	if	0	;tblptru may be non-zero
  8761  0054F4                     	endif
  8762  0054F4  0008               	tblrd		*
  8763  0054F6  50F5               	movf	tablat,w,c
  8764  0054F8  1995               	xorwf	??_strncmp& (0+255),w,b
  8765  0054FA  B4D8               	btfsc	status,2,c
  8766  0054FC  EF82  F02A         	goto	u11251
  8767  005500  EF84  F02A         	goto	u11250
  8768  005504                     u11251:
  8769  005504  EF3F  F02A         	goto	l8867
  8770  005508                     u11250:
  8771  005508                     l8877:
  8772                           
  8773                           ; BSR set to: 0
  8774  005508  C096  FFF6         	movff	strncmp@l,tblptrl
  8775  00550C  C097  FFF7         	movff	strncmp@l+1,tblptrh
  8776  005510                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8777  005510  6AF8               	clrf	tblptru,c
  8778  005512                     	endif
  8779  005512                     	if	0	;tblptru may be non-zero
  8780  005512                     	endif
  8781  005512  0008               	tblrd		*
  8782  005514  CFF5 F095          	movff	tablat,??_strncmp
  8783  005518  C098  FFF6         	movff	strncmp@r,tblptrl
  8784  00551C  C099  FFF7         	movff	strncmp@r+1,tblptrh
  8785  005520                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8786  005520  6AF8               	clrf	tblptru,c
  8787  005522                     	endif
  8788  005522                     	if	0	;tblptru may be non-zero
  8789  005522                     	endif
  8790  005522  0008               	tblrd		*
  8791  005524  50F5               	movf	tablat,w,c
  8792  005526  5D95               	subwf	??_strncmp& (0+255),w,b
  8793  005528  6F8F               	movwf	?_strncmp& (0+255),b
  8794  00552A  6B90               	clrf	(?_strncmp+1)& (0+255),b
  8795  00552C  A0D8               	btfss	status,0,c
  8796  00552E  0790               	decf	(?_strncmp+1)& (0+255),f,b
  8797  005530                     l1702:
  8798                           
  8799                           ; BSR set to: 0
  8800  005530  0012               	return		;funcret
  8801  005532                     __end_of_strncmp:
  8802                           	opt callstack 0
  8803                           
  8804 ;; *************** function _stoa *****************
  8805 ;; Defined at:
  8806 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8807 ;; Parameters:    Size  Location     Type
  8808 ;;  fp              2   58[BANK0 ] PTR struct _IO_FILE
  8809 ;;		 -> vsnprintf@f(6), NULL(0), 
  8810 ;;  s               2   60[BANK0 ] PTR unsigned char 
  8811 ;;		 -> ?_snprintf(2), ?_printf(2), 
  8812 ;; Auto vars:     Size  Location     Type
  8813 ;;  nuls            7   63[BANK0 ] unsigned char [7]
  8814 ;;  l               2   78[BANK0 ] int 
  8815 ;;  p               2   76[BANK0 ] int 
  8816 ;;  cp              2   74[BANK0 ] PTR unsigned char 
  8817 ;;		 -> ?_snprintf(2), ?_printf(2), stoa@nuls(7), 
  8818 ;;  w               2   72[BANK0 ] int 
  8819 ;;  i               2   70[BANK0 ] int 
  8820 ;; Return value:  Size  Location     Type
  8821 ;;                  2   58[BANK0 ] int 
  8822 ;; Registers used:
  8823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8824 ;; Tracked objects:
  8825 ;;		On entry : 0/0
  8826 ;;		On exit  : 0/0
  8827 ;;		Unchanged: 0/0
  8828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8829 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8830 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8831 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8832 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8833 ;;Total ram usage:       22 bytes
  8834 ;; Hardware stack levels used:    1
  8835 ;; Hardware stack levels required when called:   16
  8836 ;; This function calls:
  8837 ;;		_fputc
  8838 ;;		_strlen
  8839 ;; This function is called by:
  8840 ;;		_vfpfcnvrt
  8841 ;; This function uses a non-reentrant model
  8842 ;;
  8843                           
  8844                           	psect	text20
  8845  00449E                     __ptext20:
  8846                           	opt callstack 0
  8847  00449E                     _stoa:
  8848                           	opt callstack 10
  8849  00449E                     
  8850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8851  00449E  EE20  F0CA         	lfsr	2,stoa@F1152
  8852  0044A2  EE10  F09F         	lfsr	1,stoa@nuls
  8853  0044A6  0E06               	movlw	6
  8854  0044A8                     u10881:
  8855  0044A8  CFDB FFE3          	movff	plusw2,plusw1
  8856  0044AC  06E8               	decf	wreg,f,c
  8857  0044AE  E2FC               	bc	u10881
  8858  0044B0                     
  8859                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  8860  0044B0  C09C  F0AA         	movff	stoa@s,stoa@cp
  8861  0044B4  C09D  F0AB         	movff	stoa@s+1,stoa@cp+1
  8862  0044B8                     
  8863                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  8864  0044B8  0100               	movlb	0	; () banked
  8865  0044BA  51AA               	movf	stoa@cp& (0+255),w,b
  8866  0044BC  11AB               	iorwf	(stoa@cp+1)& (0+255),w,b
  8867  0044BE  A4D8               	btfss	status,2,c
  8868  0044C0  EF64  F022         	goto	u10891
  8869  0044C4  EF66  F022         	goto	u10890
  8870  0044C8                     u10891:
  8871  0044C8  EF6A  F022         	goto	l8725
  8872  0044CC                     u10890:
  8873  0044CC                     
  8874                           ; BSR set to: 0
  8875                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  8876  0044CC  0E9F               	movlw	low stoa@nuls
  8877  0044CE  6FAA               	movwf	stoa@cp& (0+255),b
  8878  0044D0  0E00               	movlw	high stoa@nuls
  8879  0044D2  6FAB               	movwf	(stoa@cp+1)& (0+255),b
  8880  0044D4                     l8725:
  8881                           
  8882                           ; BSR set to: 0
  8883                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  8884  0044D4  C0AA  F08F         	movff	stoa@cp,strlen@s
  8885  0044D8  C0AB  F090         	movff	stoa@cp+1,strlen@s+1
  8886  0044DC  EC6C  F032         	call	_strlen	;wreg free
  8887  0044E0  C08F  F0AE         	movff	?_strlen,stoa@l
  8888  0044E4  C090  F0AF         	movff	?_strlen+1,stoa@l+1
  8889  0044E8                     
  8890                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8891  0044E8  C0B7  F0AC         	movff	_prec,stoa@p
  8892  0044EC  C0B8  F0AD         	movff	_prec+1,stoa@p+1
  8893  0044F0                     
  8894                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8895  0044F0  0100               	movlb	0	; () banked
  8896  0044F2  BFAD               	btfsc	(stoa@p+1)& (0+255),7,b
  8897  0044F4  EF7E  F022         	goto	u10901
  8898  0044F8  EF80  F022         	goto	u10900
  8899  0044FC                     u10901:
  8900  0044FC  EF95  F022         	goto	l779
  8901  004500                     u10900:
  8902  004500                     
  8903                           ; BSR set to: 0
  8904  004500  51AE               	movf	stoa@l& (0+255),w,b
  8905  004502  5DAC               	subwf	stoa@p& (0+255),w,b
  8906  004504  51AD               	movf	(stoa@p+1)& (0+255),w,b
  8907  004506  0A80               	xorlw	128
  8908  004508  6F9E               	movwf	??_stoa& (0+255),b
  8909  00450A  51AF               	movf	(stoa@l+1)& (0+255),w,b
  8910  00450C  0A80               	xorlw	128
  8911  00450E  599E               	subwfb	??_stoa& (0+255),w,b
  8912  004510  A0D8               	btfss	status,0,c
  8913  004512  EF8D  F022         	goto	u10911
  8914  004516  EF8F  F022         	goto	u10910
  8915  00451A                     u10911:
  8916  00451A  EF91  F022         	goto	l777
  8917  00451E                     u10910:
  8918  00451E  EF95  F022         	goto	l779
  8919  004522                     l777:
  8920                           
  8921                           ; BSR set to: 0
  8922  004522  C0AC  F0AE         	movff	stoa@p,stoa@l
  8923  004526  C0AD  F0AF         	movff	stoa@p+1,stoa@l+1
  8924  00452A                     l779:
  8925                           
  8926                           ; BSR set to: 0
  8927                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8928  00452A  C0AE  F0AC         	movff	stoa@l,stoa@p
  8929  00452E  C0AF  F0AD         	movff	stoa@l+1,stoa@p+1
  8930                           
  8931                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8932  004532  C0B5  F0A8         	movff	_width,stoa@w
  8933  004536  C0B6  F0A9         	movff	_width+1,stoa@w+1
  8934                           
  8935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8936  00453A  B1B9               	btfsc	_flags& (0+255),0,b
  8937  00453C  EFA2  F022         	goto	u10921
  8938  004540  EFA4  F022         	goto	u10920
  8939  004544                     u10921:
  8940  004544  EFC2  F022         	goto	l8741
  8941  004548                     u10920:
  8942  004548  EFB3  F022         	goto	l8739
  8943  00454C                     l8735:
  8944                           
  8945                           ; BSR set to: 0
  8946                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8947  00454C  0E00               	movlw	0
  8948  00454E  6F92               	movwf	(fputc@c+1)& (0+255),b
  8949  004550  0E20               	movlw	32
  8950  004552  6F91               	movwf	fputc@c& (0+255),b
  8951  004554  C09A  F093         	movff	stoa@fp,fputc@fp
  8952  004558  C09B  F094         	movff	stoa@fp+1,fputc@fp+1
  8953  00455C  ECDF  F02B         	call	_fputc	;wreg free
  8954  004560                     
  8955                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8956  004560  0100               	movlb	0	; () banked
  8957  004562  4BAE               	infsnz	stoa@l& (0+255),f,b
  8958  004564  2BAF               	incf	(stoa@l+1)& (0+255),f,b
  8959  004566                     l8739:
  8960                           
  8961                           ; BSR set to: 0
  8962                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8963  004566  51A8               	movf	stoa@w& (0+255),w,b
  8964  004568  5DAE               	subwf	stoa@l& (0+255),w,b
  8965  00456A  51AF               	movf	(stoa@l+1)& (0+255),w,b
  8966  00456C  0A80               	xorlw	128
  8967  00456E  6F9E               	movwf	??_stoa& (0+255),b
  8968  004570  51A9               	movf	(stoa@w+1)& (0+255),w,b
  8969  004572  0A80               	xorlw	128
  8970  004574  599E               	subwfb	??_stoa& (0+255),w,b
  8971  004576  A0D8               	btfss	status,0,c
  8972  004578  EFC0  F022         	goto	u10931
  8973  00457C  EFC2  F022         	goto	u10930
  8974  004580                     u10931:
  8975  004580  EFA6  F022         	goto	l8735
  8976  004584                     u10930:
  8977  004584                     l8741:
  8978                           
  8979                           ; BSR set to: 0
  8980                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  8981  004584  0E00               	movlw	0
  8982  004586  6FA7               	movwf	(stoa@i+1)& (0+255),b
  8983  004588  0E00               	movlw	0
  8984  00458A  6FA6               	movwf	stoa@i& (0+255),b
  8985                           
  8986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8987  00458C  EFDC  F022         	goto	l8749
  8988  004590                     l8743:
  8989                           
  8990                           ; BSR set to: 0
  8991                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  8992  004590  C0AA  FFD9         	movff	stoa@cp,fsr2l
  8993  004594  C0AB  FFDA         	movff	stoa@cp+1,fsr2h
  8994  004598  50DF               	movf	indf2,w,c
  8995  00459A  6F9E               	movwf	??_stoa& (0+255),b
  8996  00459C  519E               	movf	??_stoa& (0+255),w,b
  8997  00459E  6F91               	movwf	fputc@c& (0+255),b
  8998  0045A0  6B92               	clrf	(fputc@c+1)& (0+255),b
  8999  0045A2  C09A  F093         	movff	stoa@fp,fputc@fp
  9000  0045A6  C09B  F094         	movff	stoa@fp+1,fputc@fp+1
  9001  0045AA  ECDF  F02B         	call	_fputc	;wreg free
  9002  0045AE                     
  9003                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  9004  0045AE  0100               	movlb	0	; () banked
  9005  0045B0  4BAA               	infsnz	stoa@cp& (0+255),f,b
  9006  0045B2  2BAB               	incf	(stoa@cp+1)& (0+255),f,b
  9007  0045B4                     
  9008                           ; BSR set to: 0
  9009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  9010  0045B4  4BA6               	infsnz	stoa@i& (0+255),f,b
  9011  0045B6  2BA7               	incf	(stoa@i+1)& (0+255),f,b
  9012  0045B8                     l8749:
  9013                           
  9014                           ; BSR set to: 0
  9015                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  9016  0045B8  51AC               	movf	stoa@p& (0+255),w,b
  9017  0045BA  5DA6               	subwf	stoa@i& (0+255),w,b
  9018  0045BC  51A7               	movf	(stoa@i+1)& (0+255),w,b
  9019  0045BE  0A80               	xorlw	128
  9020  0045C0  6F9E               	movwf	??_stoa& (0+255),b
  9021  0045C2  51AD               	movf	(stoa@p+1)& (0+255),w,b
  9022  0045C4  0A80               	xorlw	128
  9023  0045C6  599E               	subwfb	??_stoa& (0+255),w,b
  9024  0045C8  A0D8               	btfss	status,0,c
  9025  0045CA  EFE9  F022         	goto	u10941
  9026  0045CE  EFEB  F022         	goto	u10940
  9027  0045D2                     u10941:
  9028  0045D2  EFC8  F022         	goto	l8743
  9029  0045D6                     u10940:
  9030  0045D6                     
  9031                           ; BSR set to: 0
  9032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  9033  0045D6  A1B9               	btfss	_flags& (0+255),0,b
  9034  0045D8  EFF0  F022         	goto	u10951
  9035  0045DC  EFF2  F022         	goto	u10950
  9036  0045E0                     u10951:
  9037  0045E0  EF10  F023         	goto	l789
  9038  0045E4                     u10950:
  9039  0045E4  EF01  F023         	goto	l8757
  9040  0045E8                     l8753:
  9041                           
  9042                           ; BSR set to: 0
  9043                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  9044  0045E8  0E00               	movlw	0
  9045  0045EA  6F92               	movwf	(fputc@c+1)& (0+255),b
  9046  0045EC  0E20               	movlw	32
  9047  0045EE  6F91               	movwf	fputc@c& (0+255),b
  9048  0045F0  C09A  F093         	movff	stoa@fp,fputc@fp
  9049  0045F4  C09B  F094         	movff	stoa@fp+1,fputc@fp+1
  9050  0045F8  ECDF  F02B         	call	_fputc	;wreg free
  9051  0045FC                     
  9052                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  9053  0045FC  0100               	movlb	0	; () banked
  9054  0045FE  4BAE               	infsnz	stoa@l& (0+255),f,b
  9055  004600  2BAF               	incf	(stoa@l+1)& (0+255),f,b
  9056  004602                     l8757:
  9057                           
  9058                           ; BSR set to: 0
  9059                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  9060  004602  51A8               	movf	stoa@w& (0+255),w,b
  9061  004604  5DAE               	subwf	stoa@l& (0+255),w,b
  9062  004606  51AF               	movf	(stoa@l+1)& (0+255),w,b
  9063  004608  0A80               	xorlw	128
  9064  00460A  6F9E               	movwf	??_stoa& (0+255),b
  9065  00460C  51A9               	movf	(stoa@w+1)& (0+255),w,b
  9066  00460E  0A80               	xorlw	128
  9067  004610  599E               	subwfb	??_stoa& (0+255),w,b
  9068  004612  A0D8               	btfss	status,0,c
  9069  004614  EF0E  F023         	goto	u10961
  9070  004618  EF10  F023         	goto	u10960
  9071  00461C                     u10961:
  9072  00461C  EFF4  F022         	goto	l8753
  9073  004620                     u10960:
  9074  004620                     l789:
  9075                           
  9076                           ; BSR set to: 0
  9077                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  9078  004620  C0AE  F09A         	movff	stoa@l,?_stoa
  9079  004624  C0AF  F09B         	movff	stoa@l+1,?_stoa+1
  9080  004628                     
  9081                           ; BSR set to: 0
  9082  004628  0012               	return		;funcret
  9083  00462A                     __end_of_stoa:
  9084                           	opt callstack 0
  9085                           
  9086 ;; *************** function _otoa *****************
  9087 ;; Defined at:
  9088 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9089 ;; Parameters:    Size  Location     Type
  9090 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  9091 ;;		 -> vsnprintf@f(6), NULL(0), 
  9092 ;;  d               8    2[BANK1 ] unsigned long long 
  9093 ;; Auto vars:     Size  Location     Type
  9094 ;;  n               8   24[BANK1 ] unsigned long long 
  9095 ;;  i               2   32[BANK1 ] int 
  9096 ;;  w               2   22[BANK1 ] int 
  9097 ;;  t               2   20[BANK1 ] int 
  9098 ;;  p               2   18[BANK1 ] int 
  9099 ;; Return value:  Size  Location     Type
  9100 ;;                  2    0[BANK1 ] int 
  9101 ;; Registers used:
  9102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9103 ;; Tracked objects:
  9104 ;;		On entry : 0/0
  9105 ;;		On exit  : 0/0
  9106 ;;		Unchanged: 0/0
  9107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9108 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9109 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9110 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9111 ;;      Totals:         0       0      34       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9112 ;;Total ram usage:       34 bytes
  9113 ;; Hardware stack levels used:    1
  9114 ;; Hardware stack levels required when called:   18
  9115 ;; This function calls:
  9116 ;;		_pad
  9117 ;; This function is called by:
  9118 ;;		_vfpfcnvrt
  9119 ;; This function uses a non-reentrant model
  9120 ;;
  9121                           
  9122                           	psect	text21
  9123  0040B0                     __ptext21:
  9124                           	opt callstack 0
  9125  0040B0                     _otoa:
  9126                           	opt callstack 8
  9127  0040B0                     
  9128                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  9129  0040B0  0100               	movlb	0	; () banked
  9130  0040B2  BFB8               	btfsc	(_prec+1)& (0+255),7,b
  9131  0040B4  EF5E  F020         	goto	u10781
  9132  0040B8  EF60  F020         	goto	u10780
  9133  0040BC                     u10781:
  9134  0040BC  EF61  F020         	goto	l8673
  9135  0040C0                     u10780:
  9136  0040C0                     
  9137                           ; BSR set to: 0
  9138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  9139  0040C0  93B9               	bcf	_flags& (0+255),1,b
  9140  0040C2                     l8673:
  9141                           
  9142                           ; BSR set to: 0
  9143                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  9144  0040C2  BFB8               	btfsc	(_prec+1)& (0+255),7,b
  9145  0040C4  EF6E  F020         	goto	u10790
  9146  0040C8  51B8               	movf	(_prec+1)& (0+255),w,b
  9147  0040CA  E106               	bnz	u10791
  9148  0040CC  05B7               	decf	_prec& (0+255),w,b
  9149  0040CE  B0D8               	btfsc	status,0,c
  9150  0040D0  EF6C  F020         	goto	u10791
  9151  0040D4  EF6E  F020         	goto	u10790
  9152  0040D8                     u10791:
  9153  0040D8  EF75  F020         	goto	l759
  9154  0040DC                     u10790:
  9155  0040DC                     
  9156                           ; BSR set to: 0
  9157  0040DC  0E00               	movlw	0
  9158  0040DE  0101               	movlb	1	; () banked
  9159  0040E0  6F13               	movwf	(otoa@p+1)& (0+255),b
  9160  0040E2  0E01               	movlw	1
  9161  0040E4  6F12               	movwf	otoa@p& (0+255),b
  9162  0040E6  EF79  F020         	goto	l761
  9163  0040EA                     l759:
  9164                           
  9165                           ; BSR set to: 0
  9166  0040EA  C0B7  F112         	movff	_prec,otoa@p
  9167  0040EE  C0B8  F113         	movff	_prec+1,otoa@p+1
  9168  0040F2                     l761:
  9169                           
  9170                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  9171  0040F2  C0B5  F116         	movff	_width,otoa@w
  9172  0040F6  C0B6  F117         	movff	_width+1,otoa@w+1
  9173                           
  9174                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  9175  0040FA  C102  F118         	movff	otoa@d,otoa@n
  9176  0040FE  C103  F119         	movff	otoa@d+1,otoa@n+1
  9177  004102  C104  F11A         	movff	otoa@d+2,otoa@n+2
  9178  004106  C105  F11B         	movff	otoa@d+3,otoa@n+3
  9179  00410A  C106  F11C         	movff	otoa@d+4,otoa@n+4
  9180  00410E  C107  F11D         	movff	otoa@d+5,otoa@n+5
  9181  004112  C108  F11E         	movff	otoa@d+6,otoa@n+6
  9182  004116  C109  F11F         	movff	otoa@d+7,otoa@n+7
  9183  00411A                     
  9184                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  9185  00411A  0E00               	movlw	0
  9186  00411C  0101               	movlb	1	; () banked
  9187  00411E  6F21               	movwf	(otoa@i+1)& (0+255),b
  9188  004120  0E1F               	movlw	31
  9189  004122  6F20               	movwf	otoa@i& (0+255),b
  9190  004124                     
  9191                           ; BSR set to: 1
  9192                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  9193  004124  0E00               	movlw	0
  9194  004126  6FA8               	movwf	(_dbuf+31)& (0+255),b
  9195  004128                     
  9196                           ; BSR set to: 1
  9197                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  9198  004128  0E00               	movlw	0
  9199  00412A  6F15               	movwf	(otoa@t+1)& (0+255),b
  9200  00412C  0E00               	movlw	0
  9201  00412E  6F14               	movwf	otoa@t& (0+255),b
  9202                           
  9203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9204  004130  EFE0  F020         	goto	l8695
  9205  004134                     l8683:
  9206                           
  9207                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  9208  004134  0101               	movlb	1	; () banked
  9209  004136  0720               	decf	otoa@i& (0+255),f,b
  9210  004138  A0D8               	btfss	status,0,c
  9211  00413A  0721               	decf	(otoa@i+1)& (0+255),f,b
  9212  00413C                     
  9213                           ; BSR set to: 1
  9214                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  9215  00413C  0E07               	movlw	7
  9216  00413E  1518               	andwf	otoa@n& (0+255),w,b
  9217  004140  6F14               	movwf	otoa@t& (0+255),b
  9218  004142  6B15               	clrf	(otoa@t+1)& (0+255),b
  9219  004144                     
  9220                           ; BSR set to: 1
  9221                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  9222  004144  0E89               	movlw	low _dbuf
  9223  004146  2520               	addwf	otoa@i& (0+255),w,b
  9224  004148  6ED9               	movwf	fsr2l,c
  9225  00414A  0E01               	movlw	high _dbuf
  9226  00414C  2121               	addwfc	(otoa@i+1)& (0+255),w,b
  9227  00414E  6EDA               	movwf	fsr2h,c
  9228  004150  5114               	movf	otoa@t& (0+255),w,b
  9229  004152  0F30               	addlw	48
  9230  004154  6EDF               	movwf	indf2,c
  9231  004156                     
  9232                           ; BSR set to: 1
  9233                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  9234  004156  0712               	decf	otoa@p& (0+255),f,b
  9235  004158  A0D8               	btfss	status,0,c
  9236  00415A  0713               	decf	(otoa@p+1)& (0+255),f,b
  9237  00415C                     
  9238                           ; BSR set to: 1
  9239                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  9240  00415C  0716               	decf	otoa@w& (0+255),f,b
  9241  00415E  A0D8               	btfss	status,0,c
  9242  004160  0717               	decf	(otoa@w+1)& (0+255),f,b
  9243  004162                     
  9244                           ; BSR set to: 1
  9245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  9246  004162  C118  F10A         	movff	otoa@n,??_otoa
  9247  004166  C119  F10B         	movff	otoa@n+1,??_otoa+1
  9248  00416A  C11A  F10C         	movff	otoa@n+2,??_otoa+2
  9249  00416E  C11B  F10D         	movff	otoa@n+3,??_otoa+3
  9250  004172  C11C  F10E         	movff	otoa@n+4,??_otoa+4
  9251  004176  C11D  F10F         	movff	otoa@n+5,??_otoa+5
  9252  00417A  C11E  F110         	movff	otoa@n+6,??_otoa+6
  9253  00417E  C11F  F111         	movff	otoa@n+7,??_otoa+7
  9254  004182  0E04               	movlw	4
  9255  004184  EFCD  F020         	goto	u10800
  9256  004188                     u10805:
  9257  004188  90D8               	bcf	status,0,c
  9258  00418A  3311               	rrcf	(??_otoa+7)& (0+255),f,b
  9259  00418C  3310               	rrcf	(??_otoa+6)& (0+255),f,b
  9260  00418E  330F               	rrcf	(??_otoa+5)& (0+255),f,b
  9261  004190  330E               	rrcf	(??_otoa+4)& (0+255),f,b
  9262  004192  330D               	rrcf	(??_otoa+3)& (0+255),f,b
  9263  004194  330C               	rrcf	(??_otoa+2)& (0+255),f,b
  9264  004196  330B               	rrcf	(??_otoa+1)& (0+255),f,b
  9265  004198  330A               	rrcf	??_otoa& (0+255),f,b
  9266  00419A                     u10800:
  9267  00419A  2EE8               	decfsz	wreg,f,c
  9268  00419C  EFC4  F020         	goto	u10805
  9269  0041A0  C10A  F118         	movff	??_otoa,otoa@n
  9270  0041A4  C10B  F119         	movff	??_otoa+1,otoa@n+1
  9271  0041A8  C10C  F11A         	movff	??_otoa+2,otoa@n+2
  9272  0041AC  C10D  F11B         	movff	??_otoa+3,otoa@n+3
  9273  0041B0  C10E  F11C         	movff	??_otoa+4,otoa@n+4
  9274  0041B4  C10F  F11D         	movff	??_otoa+5,otoa@n+5
  9275  0041B8  C110  F11E         	movff	??_otoa+6,otoa@n+6
  9276  0041BC  C111  F11F         	movff	??_otoa+7,otoa@n+7
  9277  0041C0                     l8695:
  9278                           
  9279                           ; BSR set to: 1
  9280                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9281  0041C0  BF21               	btfsc	(otoa@i+1)& (0+255),7,b
  9282  0041C2  EFEB  F020         	goto	u10811
  9283  0041C6  5121               	movf	(otoa@i+1)& (0+255),w,b
  9284  0041C8  E108               	bnz	u10810
  9285  0041CA  0520               	decf	otoa@i& (0+255),w,b
  9286  0041CC  A0D8               	btfss	status,0,c
  9287  0041CE  EFEB  F020         	goto	u10811
  9288  0041D2  EFED  F020         	goto	u10810
  9289  0041D6                     u10811:
  9290  0041D6  EF1E  F021         	goto	l768
  9291  0041DA                     u10810:
  9292  0041DA                     
  9293                           ; BSR set to: 1
  9294  0041DA  5118               	movf	otoa@n& (0+255),w,b
  9295  0041DC  1119               	iorwf	(otoa@n+1)& (0+255),w,b
  9296  0041DE  111A               	iorwf	(otoa@n+2)& (0+255),w,b
  9297  0041E0  111B               	iorwf	(otoa@n+3)& (0+255),w,b
  9298  0041E2  111C               	iorwf	(otoa@n+4)& (0+255),w,b
  9299  0041E4  111D               	iorwf	(otoa@n+5)& (0+255),w,b
  9300  0041E6  111E               	iorwf	(otoa@n+6)& (0+255),w,b
  9301  0041E8  111F               	iorwf	(otoa@n+7)& (0+255),w,b
  9302  0041EA  A4D8               	btfss	status,2,c
  9303  0041EC  EFFA  F020         	goto	u10821
  9304  0041F0  EFFC  F020         	goto	u10820
  9305  0041F4                     u10821:
  9306  0041F4  EF9A  F020         	goto	l8683
  9307  0041F8                     u10820:
  9308  0041F8                     
  9309                           ; BSR set to: 1
  9310  0041F8  BF13               	btfsc	(otoa@p+1)& (0+255),7,b
  9311  0041FA  EF09  F021         	goto	u10830
  9312  0041FE  5113               	movf	(otoa@p+1)& (0+255),w,b
  9313  004200  E106               	bnz	u10831
  9314  004202  0512               	decf	otoa@p& (0+255),w,b
  9315  004204  B0D8               	btfsc	status,0,c
  9316  004206  EF07  F021         	goto	u10831
  9317  00420A  EF09  F021         	goto	u10830
  9318  00420E                     u10831:
  9319  00420E  EF9A  F020         	goto	l8683
  9320  004212                     u10830:
  9321  004212                     
  9322                           ; BSR set to: 1
  9323  004212  BF17               	btfsc	(otoa@w+1)& (0+255),7,b
  9324  004214  EF14  F021         	goto	u10841
  9325  004218  5117               	movf	(otoa@w+1)& (0+255),w,b
  9326  00421A  E108               	bnz	u10840
  9327  00421C  0516               	decf	otoa@w& (0+255),w,b
  9328  00421E  A0D8               	btfss	status,0,c
  9329  004220  EF14  F021         	goto	u10841
  9330  004224  EF16  F021         	goto	u10840
  9331  004228                     u10841:
  9332  004228  EF1E  F021         	goto	l768
  9333  00422C                     u10840:
  9334  00422C                     
  9335                           ; BSR set to: 1
  9336  00422C  0100               	movlb	0	; () banked
  9337  00422E  B3B9               	btfsc	_flags& (0+255),1,b
  9338  004230  EF1C  F021         	goto	u10851
  9339  004234  EF1E  F021         	goto	u10850
  9340  004238                     u10851:
  9341  004238  EF9A  F020         	goto	l8683
  9342  00423C                     u10850:
  9343  00423C                     l768:
  9344                           
  9345                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  9346  00423C  0100               	movlb	0	; () banked
  9347  00423E  A9B9               	btfss	_flags& (0+255),4,b
  9348  004240  EF24  F021         	goto	u10861
  9349  004244  EF26  F021         	goto	u10860
  9350  004248                     u10861:
  9351  004248  EF3E  F021         	goto	l8713
  9352  00424C                     u10860:
  9353  00424C                     
  9354                           ; BSR set to: 0
  9355  00424C  0101               	movlb	1	; () banked
  9356  00424E  5114               	movf	otoa@t& (0+255),w,b
  9357  004250  1115               	iorwf	(otoa@t+1)& (0+255),w,b
  9358  004252  B4D8               	btfsc	status,2,c
  9359  004254  EF2E  F021         	goto	u10871
  9360  004258  EF30  F021         	goto	u10870
  9361  00425C                     u10871:
  9362  00425C  EF3E  F021         	goto	l8713
  9363  004260                     u10870:
  9364  004260                     
  9365                           ; BSR set to: 1
  9366                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  9367  004260  0720               	decf	otoa@i& (0+255),f,b
  9368  004262  A0D8               	btfss	status,0,c
  9369  004264  0721               	decf	(otoa@i+1)& (0+255),f,b
  9370  004266                     
  9371                           ; BSR set to: 1
  9372                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  9373  004266  0E89               	movlw	low _dbuf
  9374  004268  2520               	addwf	otoa@i& (0+255),w,b
  9375  00426A  6ED9               	movwf	fsr2l,c
  9376  00426C  0E01               	movlw	high _dbuf
  9377  00426E  2121               	addwfc	(otoa@i+1)& (0+255),w,b
  9378  004270  6EDA               	movwf	fsr2h,c
  9379  004272  0E30               	movlw	48
  9380  004274  6EDF               	movwf	indf2,c
  9381  004276                     
  9382                           ; BSR set to: 1
  9383                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  9384  004276  0716               	decf	otoa@w& (0+255),f,b
  9385  004278  A0D8               	btfss	status,0,c
  9386  00427A  0717               	decf	(otoa@w+1)& (0+255),f,b
  9387  00427C                     l8713:
  9388                           
  9389                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  9390  00427C  C100  F0A1         	movff	otoa@fp,pad@fp
  9391  004280  C101  F0A2         	movff	otoa@fp+1,pad@fp+1
  9392  004284  0E89               	movlw	low _dbuf
  9393  004286  0101               	movlb	1	; () banked
  9394  004288  2520               	addwf	otoa@i& (0+255),w,b
  9395  00428A  0100               	movlb	0	; () banked
  9396  00428C  6FA3               	movwf	pad@buf& (0+255),b
  9397  00428E  0E01               	movlw	high _dbuf
  9398  004290  0101               	movlb	1	; () banked
  9399  004292  2121               	addwfc	(otoa@i+1)& (0+255),w,b
  9400  004294  0100               	movlb	0	; () banked
  9401  004296  6FA4               	movwf	(pad@buf+1)& (0+255),b
  9402  004298  C116  F0A5         	movff	otoa@w,pad@p
  9403  00429C  C117  F0A6         	movff	otoa@w+1,pad@p+1
  9404  0042A0  EC45  F02C         	call	_pad	;wreg free
  9405  0042A4  C0A1  F100         	movff	?_pad,?_otoa
  9406  0042A8  C0A2  F101         	movff	?_pad+1,?_otoa+1
  9407  0042AC  0012               	return		;funcret
  9408  0042AE                     __end_of_otoa:
  9409                           	opt callstack 0
  9410                           
  9411 ;; *************** function _dtoa *****************
  9412 ;; Defined at:
  9413 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9414 ;; Parameters:    Size  Location     Type
  9415 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  9416 ;;		 -> vsnprintf@f(6), NULL(0), 
  9417 ;;  d               8    2[BANK1 ] long long 
  9418 ;; Auto vars:     Size  Location     Type
  9419 ;;  n               8   26[BANK1 ] long long 
  9420 ;;  i               2   34[BANK1 ] int 
  9421 ;;  s               2   24[BANK1 ] int 
  9422 ;;  w               2   22[BANK1 ] int 
  9423 ;;  p               2   20[BANK1 ] int 
  9424 ;; Return value:  Size  Location     Type
  9425 ;;                  2    0[BANK1 ] int 
  9426 ;; Registers used:
  9427 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9428 ;; Tracked objects:
  9429 ;;		On entry : 0/0
  9430 ;;		On exit  : 0/0
  9431 ;;		Unchanged: 0/0
  9432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9433 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9434 ;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9435 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9436 ;;      Totals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9437 ;;Total ram usage:       36 bytes
  9438 ;; Hardware stack levels used:    1
  9439 ;; Hardware stack levels required when called:   18
  9440 ;; This function calls:
  9441 ;;		___aodiv
  9442 ;;		___aomod
  9443 ;;		_abs
  9444 ;;		_pad
  9445 ;; This function is called by:
  9446 ;;		_vfpfcnvrt
  9447 ;; This function uses a non-reentrant model
  9448 ;;
  9449                           
  9450                           	psect	text22
  9451  002A0E                     __ptext22:
  9452                           	opt callstack 0
  9453  002A0E                     _dtoa:
  9454                           	opt callstack 8
  9455  002A0E                     
  9456                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  9457  002A0E  C102  F11A         	movff	dtoa@d,dtoa@n
  9458  002A12  C103  F11B         	movff	dtoa@d+1,dtoa@n+1
  9459  002A16  C104  F11C         	movff	dtoa@d+2,dtoa@n+2
  9460  002A1A  C105  F11D         	movff	dtoa@d+3,dtoa@n+3
  9461  002A1E  C106  F11E         	movff	dtoa@d+4,dtoa@n+4
  9462  002A22  C107  F11F         	movff	dtoa@d+5,dtoa@n+5
  9463  002A26  C108  F120         	movff	dtoa@d+6,dtoa@n+6
  9464  002A2A  C109  F121         	movff	dtoa@d+7,dtoa@n+7
  9465  002A2E                     
  9466                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  9467  002A2E  0101               	movlb	1	; () banked
  9468  002A30  BF21               	btfsc	(dtoa@n+7)& (0+255),7,b
  9469  002A32  EF1D  F015         	goto	u10631
  9470  002A36  EF20  F015         	goto	u10630
  9471  002A3A                     u10631:
  9472  002A3A  0E01               	movlw	1
  9473  002A3C  EF21  F015         	goto	u10640
  9474  002A40                     u10630:
  9475  002A40  0E00               	movlw	0
  9476  002A42                     u10640:
  9477  002A42  6F18               	movwf	dtoa@s& (0+255),b
  9478  002A44  6B19               	clrf	(dtoa@s+1)& (0+255),b
  9479                           
  9480                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  9481  002A46  5118               	movf	dtoa@s& (0+255),w,b
  9482  002A48  1119               	iorwf	(dtoa@s+1)& (0+255),w,b
  9483  002A4A  B4D8               	btfsc	status,2,c
  9484  002A4C  EF2A  F015         	goto	u10651
  9485  002A50  EF2C  F015         	goto	u10650
  9486  002A54                     u10651:
  9487  002A54  EF3C  F015         	goto	l8613
  9488  002A58                     u10650:
  9489  002A58                     
  9490                           ; BSR set to: 1
  9491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  9492  002A58  1F21               	comf	(dtoa@n+7)& (0+255),f,b
  9493  002A5A  1F20               	comf	(dtoa@n+6)& (0+255),f,b
  9494  002A5C  1F1F               	comf	(dtoa@n+5)& (0+255),f,b
  9495  002A5E  1F1E               	comf	(dtoa@n+4)& (0+255),f,b
  9496  002A60  1F1D               	comf	(dtoa@n+3)& (0+255),f,b
  9497  002A62  1F1C               	comf	(dtoa@n+2)& (0+255),f,b
  9498  002A64  1F1B               	comf	(dtoa@n+1)& (0+255),f,b
  9499  002A66  6D1A               	negf	dtoa@n& (0+255),b
  9500  002A68  0E00               	movlw	0
  9501  002A6A  231B               	addwfc	(dtoa@n+1)& (0+255),f,b
  9502  002A6C  231C               	addwfc	(dtoa@n+2)& (0+255),f,b
  9503  002A6E  231D               	addwfc	(dtoa@n+3)& (0+255),f,b
  9504  002A70  231E               	addwfc	(dtoa@n+4)& (0+255),f,b
  9505  002A72  231F               	addwfc	(dtoa@n+5)& (0+255),f,b
  9506  002A74  2320               	addwfc	(dtoa@n+6)& (0+255),f,b
  9507  002A76  2321               	addwfc	(dtoa@n+7)& (0+255),f,b
  9508  002A78                     l8613:
  9509                           
  9510                           ; BSR set to: 1
  9511                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  9512  002A78  0100               	movlb	0	; () banked
  9513  002A7A  BFB8               	btfsc	(_prec+1)& (0+255),7,b
  9514  002A7C  EF42  F015         	goto	u10661
  9515  002A80  EF44  F015         	goto	u10660
  9516  002A84                     u10661:
  9517  002A84  EF45  F015         	goto	l8617
  9518  002A88                     u10660:
  9519  002A88                     
  9520                           ; BSR set to: 0
  9521                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  9522  002A88  93B9               	bcf	_flags& (0+255),1,b
  9523  002A8A                     l8617:
  9524                           
  9525                           ; BSR set to: 0
  9526                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  9527  002A8A  BFB8               	btfsc	(_prec+1)& (0+255),7,b
  9528  002A8C  EF52  F015         	goto	u10670
  9529  002A90  51B8               	movf	(_prec+1)& (0+255),w,b
  9530  002A92  E106               	bnz	u10671
  9531  002A94  05B7               	decf	_prec& (0+255),w,b
  9532  002A96  B0D8               	btfsc	status,0,c
  9533  002A98  EF50  F015         	goto	u10671
  9534  002A9C  EF52  F015         	goto	u10670
  9535  002AA0                     u10671:
  9536  002AA0  EF59  F015         	goto	l734
  9537  002AA4                     u10670:
  9538  002AA4                     
  9539                           ; BSR set to: 0
  9540  002AA4  0E00               	movlw	0
  9541  002AA6  0101               	movlb	1	; () banked
  9542  002AA8  6F15               	movwf	(dtoa@p+1)& (0+255),b
  9543  002AAA  0E01               	movlw	1
  9544  002AAC  6F14               	movwf	dtoa@p& (0+255),b
  9545  002AAE  EF5D  F015         	goto	l736
  9546  002AB2                     l734:
  9547                           
  9548                           ; BSR set to: 0
  9549  002AB2  C0B7  F114         	movff	_prec,dtoa@p
  9550  002AB6  C0B8  F115         	movff	_prec+1,dtoa@p+1
  9551  002ABA                     l736:
  9552                           
  9553                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  9554  002ABA  C0B5  F116         	movff	_width,dtoa@w
  9555  002ABE  C0B6  F117         	movff	_width+1,dtoa@w+1
  9556  002AC2                     
  9557                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  9558  002AC2  0101               	movlb	1	; () banked
  9559  002AC4  5118               	movf	dtoa@s& (0+255),w,b
  9560  002AC6  1119               	iorwf	(dtoa@s+1)& (0+255),w,b
  9561  002AC8  A4D8               	btfss	status,2,c
  9562  002ACA  EF69  F015         	goto	u10681
  9563  002ACE  EF6B  F015         	goto	u10680
  9564  002AD2                     u10681:
  9565  002AD2  EF73  F015         	goto	l8625
  9566  002AD6                     u10680:
  9567  002AD6                     
  9568                           ; BSR set to: 1
  9569  002AD6  0100               	movlb	0	; () banked
  9570  002AD8  A5B9               	btfss	_flags& (0+255),2,b
  9571  002ADA  EF71  F015         	goto	u10691
  9572  002ADE  EF73  F015         	goto	u10690
  9573  002AE2                     u10691:
  9574  002AE2  EF77  F015         	goto	l8627
  9575  002AE6                     u10690:
  9576  002AE6                     l8625:
  9577                           
  9578                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  9579  002AE6  0101               	movlb	1	; () banked
  9580  002AE8  0716               	decf	dtoa@w& (0+255),f,b
  9581  002AEA  A0D8               	btfss	status,0,c
  9582  002AEC  0717               	decf	(dtoa@w+1)& (0+255),f,b
  9583  002AEE                     l8627:
  9584                           
  9585                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  9586  002AEE  0E00               	movlw	0
  9587  002AF0  0101               	movlb	1	; () banked
  9588  002AF2  6F23               	movwf	(dtoa@i+1)& (0+255),b
  9589  002AF4  0E1F               	movlw	31
  9590  002AF6  6F22               	movwf	dtoa@i& (0+255),b
  9591  002AF8                     
  9592                           ; BSR set to: 1
  9593                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  9594  002AF8  0E00               	movlw	0
  9595  002AFA  6FA8               	movwf	(_dbuf+31)& (0+255),b
  9596                           
  9597                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9598  002AFC  EF01  F016         	goto	l8641
  9599  002B00                     l8631:
  9600                           
  9601                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  9602  002B00  0101               	movlb	1	; () banked
  9603  002B02  0722               	decf	dtoa@i& (0+255),f,b
  9604  002B04  A0D8               	btfss	status,0,c
  9605  002B06  0723               	decf	(dtoa@i+1)& (0+255),f,b
  9606  002B08                     
  9607                           ; BSR set to: 1
  9608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  9609  002B08  0E89               	movlw	low _dbuf
  9610  002B0A  2522               	addwf	dtoa@i& (0+255),w,b
  9611  002B0C  6ED9               	movwf	fsr2l,c
  9612  002B0E  0E01               	movlw	high _dbuf
  9613  002B10  2123               	addwfc	(dtoa@i+1)& (0+255),w,b
  9614  002B12  6EDA               	movwf	fsr2h,c
  9615  002B14  C11A  F08F         	movff	dtoa@n,___aomod@dividend
  9616  002B18  C11B  F090         	movff	dtoa@n+1,___aomod@dividend+1
  9617  002B1C  C11C  F091         	movff	dtoa@n+2,___aomod@dividend+2
  9618  002B20  C11D  F092         	movff	dtoa@n+3,___aomod@dividend+3
  9619  002B24  C11E  F093         	movff	dtoa@n+4,___aomod@dividend+4
  9620  002B28  C11F  F094         	movff	dtoa@n+5,___aomod@dividend+5
  9621  002B2C  C120  F095         	movff	dtoa@n+6,___aomod@dividend+6
  9622  002B30  C121  F096         	movff	dtoa@n+7,___aomod@dividend+7
  9623  002B34  0E0A               	movlw	10
  9624  002B36  0100               	movlb	0	; () banked
  9625  002B38  6F97               	movwf	___aomod@divisor& (0+255),b
  9626  002B3A  0E00               	movlw	0
  9627  002B3C  6F98               	movwf	(___aomod@divisor+1)& (0+255),b
  9628  002B3E  0E00               	movlw	0
  9629  002B40  6F99               	movwf	(___aomod@divisor+2)& (0+255),b
  9630  002B42  0E00               	movlw	0
  9631  002B44  6F9A               	movwf	(___aomod@divisor+3)& (0+255),b
  9632  002B46  0E00               	movlw	0
  9633  002B48  6F9B               	movwf	(___aomod@divisor+4)& (0+255),b
  9634  002B4A  0E00               	movlw	0
  9635  002B4C  6F9C               	movwf	(___aomod@divisor+5)& (0+255),b
  9636  002B4E  0E00               	movlw	0
  9637  002B50  6F9D               	movwf	(___aomod@divisor+6)& (0+255),b
  9638  002B52  0E00               	movlw	0
  9639  002B54  6F9E               	movwf	(___aomod@divisor+7)& (0+255),b
  9640  002B56  EC22  F026         	call	___aomod	;wreg free
  9641  002B5A  C08F  F10A         	movff	?___aomod,??_dtoa
  9642  002B5E  C090  F10B         	movff	?___aomod+1,??_dtoa+1
  9643  002B62  C091  F10C         	movff	?___aomod+2,??_dtoa+2
  9644  002B66  C092  F10D         	movff	?___aomod+3,??_dtoa+3
  9645  002B6A  C093  F10E         	movff	?___aomod+4,??_dtoa+4
  9646  002B6E  C094  F10F         	movff	?___aomod+5,??_dtoa+5
  9647  002B72  C095  F110         	movff	?___aomod+6,??_dtoa+6
  9648  002B76  C096  F111         	movff	?___aomod+7,??_dtoa+7
  9649  002B7A  C10A  F0A1         	movff	??_dtoa,abs@a
  9650  002B7E  C10C  F0A2         	movff	??_dtoa+2,abs@a+1
  9651  002B82  EC73  F031         	call	_abs	;wreg free
  9652  002B86  0100               	movlb	0	; () banked
  9653  002B88  51A1               	movf	?_abs& (0+255),w,b
  9654  002B8A  0F30               	addlw	48
  9655  002B8C  6EDF               	movwf	indf2,c
  9656  002B8E                     
  9657                           ; BSR set to: 0
  9658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  9659  002B8E  0101               	movlb	1	; () banked
  9660  002B90  0714               	decf	dtoa@p& (0+255),f,b
  9661  002B92  A0D8               	btfss	status,0,c
  9662  002B94  0715               	decf	(dtoa@p+1)& (0+255),f,b
  9663  002B96                     
  9664                           ; BSR set to: 1
  9665                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  9666  002B96  0716               	decf	dtoa@w& (0+255),f,b
  9667  002B98  A0D8               	btfss	status,0,c
  9668  002B9A  0717               	decf	(dtoa@w+1)& (0+255),f,b
  9669  002B9C                     
  9670                           ; BSR set to: 1
  9671                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  9672  002B9C  C11A  F08F         	movff	dtoa@n,___aodiv@dividend
  9673  002BA0  C11B  F090         	movff	dtoa@n+1,___aodiv@dividend+1
  9674  002BA4  C11C  F091         	movff	dtoa@n+2,___aodiv@dividend+2
  9675  002BA8  C11D  F092         	movff	dtoa@n+3,___aodiv@dividend+3
  9676  002BAC  C11E  F093         	movff	dtoa@n+4,___aodiv@dividend+4
  9677  002BB0  C11F  F094         	movff	dtoa@n+5,___aodiv@dividend+5
  9678  002BB4  C120  F095         	movff	dtoa@n+6,___aodiv@dividend+6
  9679  002BB8  C121  F096         	movff	dtoa@n+7,___aodiv@dividend+7
  9680  002BBC  0E0A               	movlw	10
  9681  002BBE  0100               	movlb	0	; () banked
  9682  002BC0  6F97               	movwf	___aodiv@divisor& (0+255),b
  9683  002BC2  0E00               	movlw	0
  9684  002BC4  6F98               	movwf	(___aodiv@divisor+1)& (0+255),b
  9685  002BC6  0E00               	movlw	0
  9686  002BC8  6F99               	movwf	(___aodiv@divisor+2)& (0+255),b
  9687  002BCA  0E00               	movlw	0
  9688  002BCC  6F9A               	movwf	(___aodiv@divisor+3)& (0+255),b
  9689  002BCE  0E00               	movlw	0
  9690  002BD0  6F9B               	movwf	(___aodiv@divisor+4)& (0+255),b
  9691  002BD2  0E00               	movlw	0
  9692  002BD4  6F9C               	movwf	(___aodiv@divisor+5)& (0+255),b
  9693  002BD6  0E00               	movlw	0
  9694  002BD8  6F9D               	movwf	(___aodiv@divisor+6)& (0+255),b
  9695  002BDA  0E00               	movlw	0
  9696  002BDC  6F9E               	movwf	(___aodiv@divisor+7)& (0+255),b
  9697  002BDE  EC15  F023         	call	___aodiv	;wreg free
  9698  002BE2  C08F  F11A         	movff	?___aodiv,dtoa@n
  9699  002BE6  C090  F11B         	movff	?___aodiv+1,dtoa@n+1
  9700  002BEA  C091  F11C         	movff	?___aodiv+2,dtoa@n+2
  9701  002BEE  C092  F11D         	movff	?___aodiv+3,dtoa@n+3
  9702  002BF2  C093  F11E         	movff	?___aodiv+4,dtoa@n+4
  9703  002BF6  C094  F11F         	movff	?___aodiv+5,dtoa@n+5
  9704  002BFA  C095  F120         	movff	?___aodiv+6,dtoa@n+6
  9705  002BFE  C096  F121         	movff	?___aodiv+7,dtoa@n+7
  9706  002C02                     l8641:
  9707                           
  9708                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9709  002C02  0101               	movlb	1	; () banked
  9710  002C04  BF23               	btfsc	(dtoa@i+1)& (0+255),7,b
  9711  002C06  EF0D  F016         	goto	u10701
  9712  002C0A  5123               	movf	(dtoa@i+1)& (0+255),w,b
  9713  002C0C  E108               	bnz	u10700
  9714  002C0E  0522               	decf	dtoa@i& (0+255),w,b
  9715  002C10  A0D8               	btfss	status,0,c
  9716  002C12  EF0D  F016         	goto	u10701
  9717  002C16  EF0F  F016         	goto	u10700
  9718  002C1A                     u10701:
  9719  002C1A  EF40  F016         	goto	l8651
  9720  002C1E                     u10700:
  9721  002C1E                     
  9722                           ; BSR set to: 1
  9723  002C1E  511A               	movf	dtoa@n& (0+255),w,b
  9724  002C20  111B               	iorwf	(dtoa@n+1)& (0+255),w,b
  9725  002C22  111C               	iorwf	(dtoa@n+2)& (0+255),w,b
  9726  002C24  111D               	iorwf	(dtoa@n+3)& (0+255),w,b
  9727  002C26  111E               	iorwf	(dtoa@n+4)& (0+255),w,b
  9728  002C28  111F               	iorwf	(dtoa@n+5)& (0+255),w,b
  9729  002C2A  1120               	iorwf	(dtoa@n+6)& (0+255),w,b
  9730  002C2C  1121               	iorwf	(dtoa@n+7)& (0+255),w,b
  9731  002C2E  A4D8               	btfss	status,2,c
  9732  002C30  EF1C  F016         	goto	u10711
  9733  002C34  EF1E  F016         	goto	u10710
  9734  002C38                     u10711:
  9735  002C38  EF80  F015         	goto	l8631
  9736  002C3C                     u10710:
  9737  002C3C                     
  9738                           ; BSR set to: 1
  9739  002C3C  BF15               	btfsc	(dtoa@p+1)& (0+255),7,b
  9740  002C3E  EF2B  F016         	goto	u10720
  9741  002C42  5115               	movf	(dtoa@p+1)& (0+255),w,b
  9742  002C44  E106               	bnz	u10721
  9743  002C46  0514               	decf	dtoa@p& (0+255),w,b
  9744  002C48  B0D8               	btfsc	status,0,c
  9745  002C4A  EF29  F016         	goto	u10721
  9746  002C4E  EF2B  F016         	goto	u10720
  9747  002C52                     u10721:
  9748  002C52  EF80  F015         	goto	l8631
  9749  002C56                     u10720:
  9750  002C56                     
  9751                           ; BSR set to: 1
  9752  002C56  BF17               	btfsc	(dtoa@w+1)& (0+255),7,b
  9753  002C58  EF36  F016         	goto	u10731
  9754  002C5C  5117               	movf	(dtoa@w+1)& (0+255),w,b
  9755  002C5E  E108               	bnz	u10730
  9756  002C60  0516               	decf	dtoa@w& (0+255),w,b
  9757  002C62  A0D8               	btfss	status,0,c
  9758  002C64  EF36  F016         	goto	u10731
  9759  002C68  EF38  F016         	goto	u10730
  9760  002C6C                     u10731:
  9761  002C6C  EF40  F016         	goto	l8651
  9762  002C70                     u10730:
  9763  002C70                     
  9764                           ; BSR set to: 1
  9765  002C70  0100               	movlb	0	; () banked
  9766  002C72  B3B9               	btfsc	_flags& (0+255),1,b
  9767  002C74  EF3E  F016         	goto	u10741
  9768  002C78  EF40  F016         	goto	u10740
  9769  002C7C                     u10741:
  9770  002C7C  EF80  F015         	goto	l8631
  9771  002C80                     u10740:
  9772  002C80                     l8651:
  9773                           
  9774                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  9775  002C80  0101               	movlb	1	; () banked
  9776  002C82  5118               	movf	dtoa@s& (0+255),w,b
  9777  002C84  1119               	iorwf	(dtoa@s+1)& (0+255),w,b
  9778  002C86  A4D8               	btfss	status,2,c
  9779  002C88  EF48  F016         	goto	u10751
  9780  002C8C  EF4A  F016         	goto	u10750
  9781  002C90                     u10751:
  9782  002C90  EF52  F016         	goto	l8655
  9783  002C94                     u10750:
  9784  002C94                     
  9785                           ; BSR set to: 1
  9786  002C94  0100               	movlb	0	; () banked
  9787  002C96  A5B9               	btfss	_flags& (0+255),2,b
  9788  002C98  EF50  F016         	goto	u10761
  9789  002C9C  EF52  F016         	goto	u10760
  9790  002CA0                     u10761:
  9791  002CA0  EF71  F016         	goto	l8665
  9792  002CA4                     u10760:
  9793  002CA4                     l8655:
  9794                           
  9795                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  9796  002CA4  0101               	movlb	1	; () banked
  9797  002CA6  0722               	decf	dtoa@i& (0+255),f,b
  9798  002CA8  A0D8               	btfss	status,0,c
  9799  002CAA  0723               	decf	(dtoa@i+1)& (0+255),f,b
  9800  002CAC                     
  9801                           ; BSR set to: 1
  9802                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  9803  002CAC  5118               	movf	dtoa@s& (0+255),w,b
  9804  002CAE  1119               	iorwf	(dtoa@s+1)& (0+255),w,b
  9805  002CB0  A4D8               	btfss	status,2,c
  9806  002CB2  EF5D  F016         	goto	u10771
  9807  002CB6  EF5F  F016         	goto	u10770
  9808  002CBA                     u10771:
  9809  002CBA  EF65  F016         	goto	l8661
  9810  002CBE                     u10770:
  9811  002CBE                     
  9812                           ; BSR set to: 1
  9813  002CBE  0E00               	movlw	0
  9814  002CC0  6F13               	movwf	(_dtoa$1823+1)& (0+255),b
  9815  002CC2  0E2B               	movlw	43
  9816  002CC4  6F12               	movwf	_dtoa$1823& (0+255),b
  9817  002CC6  EF69  F016         	goto	l8663
  9818  002CCA                     l8661:
  9819                           
  9820                           ; BSR set to: 1
  9821  002CCA  0E00               	movlw	0
  9822  002CCC  6F13               	movwf	(_dtoa$1823+1)& (0+255),b
  9823  002CCE  0E2D               	movlw	45
  9824  002CD0  6F12               	movwf	_dtoa$1823& (0+255),b
  9825  002CD2                     l8663:
  9826                           
  9827                           ; BSR set to: 1
  9828  002CD2  0E89               	movlw	low _dbuf
  9829  002CD4  2522               	addwf	dtoa@i& (0+255),w,b
  9830  002CD6  6ED9               	movwf	fsr2l,c
  9831  002CD8  0E01               	movlw	high _dbuf
  9832  002CDA  2123               	addwfc	(dtoa@i+1)& (0+255),w,b
  9833  002CDC  6EDA               	movwf	fsr2h,c
  9834  002CDE  C112  FFDF         	movff	_dtoa$1823,indf2
  9835  002CE2                     l8665:
  9836                           
  9837                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  9838  002CE2  C100  F0A1         	movff	dtoa@fp,pad@fp
  9839  002CE6  C101  F0A2         	movff	dtoa@fp+1,pad@fp+1
  9840  002CEA  0E89               	movlw	low _dbuf
  9841  002CEC  0101               	movlb	1	; () banked
  9842  002CEE  2522               	addwf	dtoa@i& (0+255),w,b
  9843  002CF0  0100               	movlb	0	; () banked
  9844  002CF2  6FA3               	movwf	pad@buf& (0+255),b
  9845  002CF4  0E01               	movlw	high _dbuf
  9846  002CF6  0101               	movlb	1	; () banked
  9847  002CF8  2123               	addwfc	(dtoa@i+1)& (0+255),w,b
  9848  002CFA  0100               	movlb	0	; () banked
  9849  002CFC  6FA4               	movwf	(pad@buf+1)& (0+255),b
  9850  002CFE  C116  F0A5         	movff	dtoa@w,pad@p
  9851  002D02  C117  F0A6         	movff	dtoa@w+1,pad@p+1
  9852  002D06  EC45  F02C         	call	_pad	;wreg free
  9853  002D0A  C0A1  F100         	movff	?_pad,?_dtoa
  9854  002D0E  C0A2  F101         	movff	?_pad+1,?_dtoa+1
  9855  002D12  0012               	return		;funcret
  9856  002D14                     __end_of_dtoa:
  9857                           	opt callstack 0
  9858                           
  9859 ;; *************** function _abs *****************
  9860 ;; Defined at:
  9861 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  9862 ;; Parameters:    Size  Location     Type
  9863 ;;  a               2   65[BANK0 ] int 
  9864 ;; Auto vars:     Size  Location     Type
  9865 ;;		None
  9866 ;; Return value:  Size  Location     Type
  9867 ;;                  2   65[BANK0 ] int 
  9868 ;; Registers used:
  9869 ;;		wreg, status,2, status,0
  9870 ;; Tracked objects:
  9871 ;;		On entry : 0/0
  9872 ;;		On exit  : 0/0
  9873 ;;		Unchanged: 0/0
  9874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9875 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9877 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9878 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9879 ;;Total ram usage:        4 bytes
  9880 ;; Hardware stack levels used:    1
  9881 ;; Hardware stack levels required when called:   13
  9882 ;; This function calls:
  9883 ;;		Nothing
  9884 ;; This function is called by:
  9885 ;;		_dtoa
  9886 ;; This function uses a non-reentrant model
  9887 ;;
  9888                           
  9889                           	psect	text23
  9890  0062E6                     __ptext23:
  9891                           	opt callstack 0
  9892  0062E6                     _abs:
  9893                           	opt callstack 12
  9894  0062E6  0100               	movlb	0	; () banked
  9895  0062E8  BFA2               	btfsc	(abs@a+1)& (0+255),7,b
  9896  0062EA  EF81  F031         	goto	u9720
  9897  0062EE  51A2               	movf	(abs@a+1)& (0+255),w,b
  9898  0062F0  E106               	bnz	u9721
  9899  0062F2  05A1               	decf	abs@a& (0+255),w,b
  9900  0062F4  B0D8               	btfsc	status,0,c
  9901  0062F6  EF7F  F031         	goto	u9721
  9902  0062FA  EF81  F031         	goto	u9720
  9903  0062FE                     u9721:
  9904  0062FE  EF8F  F031         	goto	l1598
  9905  006302                     u9720:
  9906  006302                     
  9907                           ; BSR set to: 0
  9908  006302  C0A1  F0A3         	movff	abs@a,??_abs
  9909  006306  C0A2  F0A4         	movff	abs@a+1,??_abs+1
  9910  00630A  1FA3               	comf	??_abs& (0+255),f,b
  9911  00630C  1FA4               	comf	(??_abs+1)& (0+255),f,b
  9912  00630E  4BA3               	infsnz	??_abs& (0+255),f,b
  9913  006310  2BA4               	incf	(??_abs+1)& (0+255),f,b
  9914  006312  C0A3  F0A1         	movff	??_abs,?_abs
  9915  006316  C0A4  F0A2         	movff	??_abs+1,?_abs+1
  9916  00631A  EF93  F031         	goto	l1601
  9917  00631E                     l1598:
  9918                           
  9919                           ; BSR set to: 0
  9920  00631E  C0A1  F0A1         	movff	abs@a,?_abs
  9921  006322  C0A2  F0A2         	movff	abs@a+1,?_abs+1
  9922  006326                     l1601:
  9923                           
  9924                           ; BSR set to: 0
  9925  006326  0012               	return		;funcret
  9926  006328                     __end_of_abs:
  9927                           	opt callstack 0
  9928                           
  9929 ;; *************** function ___aomod *****************
  9930 ;; Defined at:
  9931 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  9932 ;; Parameters:    Size  Location     Type
  9933 ;;  dividend        8   47[BANK0 ] long long 
  9934 ;;  divisor         8   55[BANK0 ] long long 
  9935 ;; Auto vars:     Size  Location     Type
  9936 ;;  sign            1   64[BANK0 ] unsigned char 
  9937 ;;  counter         1   63[BANK0 ] unsigned char 
  9938 ;; Return value:  Size  Location     Type
  9939 ;;                  8   47[BANK0 ] long long 
  9940 ;; Registers used:
  9941 ;;		wreg, status,2, status,0
  9942 ;; Tracked objects:
  9943 ;;		On entry : 0/0
  9944 ;;		On exit  : 0/0
  9945 ;;		Unchanged: 0/0
  9946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9947 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9948 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9950 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9951 ;;Total ram usage:       18 bytes
  9952 ;; Hardware stack levels used:    1
  9953 ;; Hardware stack levels required when called:   13
  9954 ;; This function calls:
  9955 ;;		Nothing
  9956 ;; This function is called by:
  9957 ;;		_dtoa
  9958 ;; This function uses a non-reentrant model
  9959 ;;
  9960                           
  9961                           	psect	text24
  9962  004C44                     __ptext24:
  9963                           	opt callstack 0
  9964  004C44                     ___aomod:
  9965                           	opt callstack 12
  9966  004C44  0E00               	movlw	0
  9967  004C46  0100               	movlb	0	; () banked
  9968  004C48  6FA0               	movwf	___aomod@sign& (0+255),b
  9969  004C4A                     
  9970                           ; BSR set to: 0
  9971  004C4A  BF96               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  9972  004C4C  EF2C  F026         	goto	u9890
  9973  004C50  EF2A  F026         	goto	u9891
  9974  004C54                     u9891:
  9975  004C54  EF3E  F026         	goto	l8133
  9976  004C58                     u9890:
  9977  004C58                     
  9978                           ; BSR set to: 0
  9979  004C58  1F96               	comf	(___aomod@dividend+7)& (0+255),f,b
  9980  004C5A  1F95               	comf	(___aomod@dividend+6)& (0+255),f,b
  9981  004C5C  1F94               	comf	(___aomod@dividend+5)& (0+255),f,b
  9982  004C5E  1F93               	comf	(___aomod@dividend+4)& (0+255),f,b
  9983  004C60  1F92               	comf	(___aomod@dividend+3)& (0+255),f,b
  9984  004C62  1F91               	comf	(___aomod@dividend+2)& (0+255),f,b
  9985  004C64  1F90               	comf	(___aomod@dividend+1)& (0+255),f,b
  9986  004C66  6D8F               	negf	___aomod@dividend& (0+255),b
  9987  004C68  0E00               	movlw	0
  9988  004C6A  2390               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  9989  004C6C  2391               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  9990  004C6E  2392               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  9991  004C70  2393               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  9992  004C72  2394               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  9993  004C74  2395               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  9994  004C76  2396               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  9995  004C78                     
  9996                           ; BSR set to: 0
  9997  004C78  0E01               	movlw	1
  9998  004C7A  6FA0               	movwf	___aomod@sign& (0+255),b
  9999  004C7C                     l8133:
 10000                           
 10001                           ; BSR set to: 0
 10002  004C7C  BF9E               	btfsc	(___aomod@divisor+7)& (0+255),7,b
 10003  004C7E  EF45  F026         	goto	u9900
 10004  004C82  EF43  F026         	goto	u9901
 10005  004C86                     u9901:
 10006  004C86  EF55  F026         	goto	l8137
 10007  004C8A                     u9900:
 10008  004C8A                     
 10009                           ; BSR set to: 0
 10010  004C8A  1F9E               	comf	(___aomod@divisor+7)& (0+255),f,b
 10011  004C8C  1F9D               	comf	(___aomod@divisor+6)& (0+255),f,b
 10012  004C8E  1F9C               	comf	(___aomod@divisor+5)& (0+255),f,b
 10013  004C90  1F9B               	comf	(___aomod@divisor+4)& (0+255),f,b
 10014  004C92  1F9A               	comf	(___aomod@divisor+3)& (0+255),f,b
 10015  004C94  1F99               	comf	(___aomod@divisor+2)& (0+255),f,b
 10016  004C96  1F98               	comf	(___aomod@divisor+1)& (0+255),f,b
 10017  004C98  6D97               	negf	___aomod@divisor& (0+255),b
 10018  004C9A  0E00               	movlw	0
 10019  004C9C  2398               	addwfc	(___aomod@divisor+1)& (0+255),f,b
 10020  004C9E  2399               	addwfc	(___aomod@divisor+2)& (0+255),f,b
 10021  004CA0  239A               	addwfc	(___aomod@divisor+3)& (0+255),f,b
 10022  004CA2  239B               	addwfc	(___aomod@divisor+4)& (0+255),f,b
 10023  004CA4  239C               	addwfc	(___aomod@divisor+5)& (0+255),f,b
 10024  004CA6  239D               	addwfc	(___aomod@divisor+6)& (0+255),f,b
 10025  004CA8  239E               	addwfc	(___aomod@divisor+7)& (0+255),f,b
 10026  004CAA                     l8137:
 10027                           
 10028                           ; BSR set to: 0
 10029  004CAA  5197               	movf	___aomod@divisor& (0+255),w,b
 10030  004CAC  1198               	iorwf	(___aomod@divisor+1)& (0+255),w,b
 10031  004CAE  1199               	iorwf	(___aomod@divisor+2)& (0+255),w,b
 10032  004CB0  119A               	iorwf	(___aomod@divisor+3)& (0+255),w,b
 10033  004CB2  119B               	iorwf	(___aomod@divisor+4)& (0+255),w,b
 10034  004CB4  119C               	iorwf	(___aomod@divisor+5)& (0+255),w,b
 10035  004CB6  119D               	iorwf	(___aomod@divisor+6)& (0+255),w,b
 10036  004CB8  119E               	iorwf	(___aomod@divisor+7)& (0+255),w,b
 10037  004CBA  B4D8               	btfsc	status,2,c
 10038  004CBC  EF62  F026         	goto	u9911
 10039  004CC0  EF64  F026         	goto	u9910
 10040  004CC4                     u9911:
 10041  004CC4  EFAC  F026         	goto	l8153
 10042  004CC8                     u9910:
 10043  004CC8                     
 10044                           ; BSR set to: 0
 10045  004CC8  0E01               	movlw	1
 10046  004CCA  6F9F               	movwf	___aomod@counter& (0+255),b
 10047  004CCC  EF72  F026         	goto	l8143
 10048  004CD0                     l8141:
 10049                           
 10050                           ; BSR set to: 0
 10051  004CD0  90D8               	bcf	status,0,c
 10052  004CD2  3797               	rlcf	___aomod@divisor& (0+255),f,b
 10053  004CD4  3798               	rlcf	(___aomod@divisor+1)& (0+255),f,b
 10054  004CD6  3799               	rlcf	(___aomod@divisor+2)& (0+255),f,b
 10055  004CD8  379A               	rlcf	(___aomod@divisor+3)& (0+255),f,b
 10056  004CDA  379B               	rlcf	(___aomod@divisor+4)& (0+255),f,b
 10057  004CDC  379C               	rlcf	(___aomod@divisor+5)& (0+255),f,b
 10058  004CDE  379D               	rlcf	(___aomod@divisor+6)& (0+255),f,b
 10059  004CE0  379E               	rlcf	(___aomod@divisor+7)& (0+255),f,b
 10060  004CE2  2B9F               	incf	___aomod@counter& (0+255),f,b
 10061  004CE4                     l8143:
 10062                           
 10063                           ; BSR set to: 0
 10064  004CE4  AF9E               	btfss	(___aomod@divisor+7)& (0+255),7,b
 10065  004CE6  EF77  F026         	goto	u9921
 10066  004CEA  EF79  F026         	goto	u9920
 10067  004CEE                     u9921:
 10068  004CEE  EF68  F026         	goto	l8141
 10069  004CF2                     u9920:
 10070  004CF2                     l8145:
 10071                           
 10072                           ; BSR set to: 0
 10073  004CF2  5197               	movf	___aomod@divisor& (0+255),w,b
 10074  004CF4  5D8F               	subwf	___aomod@dividend& (0+255),w,b
 10075  004CF6  5198               	movf	(___aomod@divisor+1)& (0+255),w,b
 10076  004CF8  5990               	subwfb	(___aomod@dividend+1)& (0+255),w,b
 10077  004CFA  5199               	movf	(___aomod@divisor+2)& (0+255),w,b
 10078  004CFC  5991               	subwfb	(___aomod@dividend+2)& (0+255),w,b
 10079  004CFE  519A               	movf	(___aomod@divisor+3)& (0+255),w,b
 10080  004D00  5992               	subwfb	(___aomod@dividend+3)& (0+255),w,b
 10081  004D02  519B               	movf	(___aomod@divisor+4)& (0+255),w,b
 10082  004D04  5993               	subwfb	(___aomod@dividend+4)& (0+255),w,b
 10083  004D06  519C               	movf	(___aomod@divisor+5)& (0+255),w,b
 10084  004D08  5994               	subwfb	(___aomod@dividend+5)& (0+255),w,b
 10085  004D0A  519D               	movf	(___aomod@divisor+6)& (0+255),w,b
 10086  004D0C  5995               	subwfb	(___aomod@dividend+6)& (0+255),w,b
 10087  004D0E  519E               	movf	(___aomod@divisor+7)& (0+255),w,b
 10088  004D10  5996               	subwfb	(___aomod@dividend+7)& (0+255),w,b
 10089  004D12  A0D8               	btfss	status,0,c
 10090  004D14  EF8E  F026         	goto	u9931
 10091  004D18  EF90  F026         	goto	u9930
 10092  004D1C                     u9931:
 10093  004D1C  EFA0  F026         	goto	l8149
 10094  004D20                     u9930:
 10095  004D20                     
 10096                           ; BSR set to: 0
 10097  004D20  5197               	movf	___aomod@divisor& (0+255),w,b
 10098  004D22  5F8F               	subwf	___aomod@dividend& (0+255),f,b
 10099  004D24  5198               	movf	(___aomod@divisor+1)& (0+255),w,b
 10100  004D26  5B90               	subwfb	(___aomod@dividend+1)& (0+255),f,b
 10101  004D28  5199               	movf	(___aomod@divisor+2)& (0+255),w,b
 10102  004D2A  5B91               	subwfb	(___aomod@dividend+2)& (0+255),f,b
 10103  004D2C  519A               	movf	(___aomod@divisor+3)& (0+255),w,b
 10104  004D2E  5B92               	subwfb	(___aomod@dividend+3)& (0+255),f,b
 10105  004D30  519B               	movf	(___aomod@divisor+4)& (0+255),w,b
 10106  004D32  5B93               	subwfb	(___aomod@dividend+4)& (0+255),f,b
 10107  004D34  519C               	movf	(___aomod@divisor+5)& (0+255),w,b
 10108  004D36  5B94               	subwfb	(___aomod@dividend+5)& (0+255),f,b
 10109  004D38  519D               	movf	(___aomod@divisor+6)& (0+255),w,b
 10110  004D3A  5B95               	subwfb	(___aomod@dividend+6)& (0+255),f,b
 10111  004D3C  519E               	movf	(___aomod@divisor+7)& (0+255),w,b
 10112  004D3E  5B96               	subwfb	(___aomod@dividend+7)& (0+255),f,b
 10113  004D40                     l8149:
 10114                           
 10115                           ; BSR set to: 0
 10116  004D40  90D8               	bcf	status,0,c
 10117  004D42  339E               	rrcf	(___aomod@divisor+7)& (0+255),f,b
 10118  004D44  339D               	rrcf	(___aomod@divisor+6)& (0+255),f,b
 10119  004D46  339C               	rrcf	(___aomod@divisor+5)& (0+255),f,b
 10120  004D48  339B               	rrcf	(___aomod@divisor+4)& (0+255),f,b
 10121  004D4A  339A               	rrcf	(___aomod@divisor+3)& (0+255),f,b
 10122  004D4C  3399               	rrcf	(___aomod@divisor+2)& (0+255),f,b
 10123  004D4E  3398               	rrcf	(___aomod@divisor+1)& (0+255),f,b
 10124  004D50  3397               	rrcf	___aomod@divisor& (0+255),f,b
 10125  004D52                     
 10126                           ; BSR set to: 0
 10127  004D52  2F9F               	decfsz	___aomod@counter& (0+255),f,b
 10128  004D54  EF79  F026         	goto	l8145
 10129  004D58                     l8153:
 10130                           
 10131                           ; BSR set to: 0
 10132  004D58  51A0               	movf	___aomod@sign& (0+255),w,b
 10133  004D5A  B4D8               	btfsc	status,2,c
 10134  004D5C  EFB2  F026         	goto	u9941
 10135  004D60  EFB4  F026         	goto	u9940
 10136  004D64                     u9941:
 10137  004D64  EFC4  F026         	goto	l8157
 10138  004D68                     u9940:
 10139  004D68                     
 10140                           ; BSR set to: 0
 10141  004D68  1F96               	comf	(___aomod@dividend+7)& (0+255),f,b
 10142  004D6A  1F95               	comf	(___aomod@dividend+6)& (0+255),f,b
 10143  004D6C  1F94               	comf	(___aomod@dividend+5)& (0+255),f,b
 10144  004D6E  1F93               	comf	(___aomod@dividend+4)& (0+255),f,b
 10145  004D70  1F92               	comf	(___aomod@dividend+3)& (0+255),f,b
 10146  004D72  1F91               	comf	(___aomod@dividend+2)& (0+255),f,b
 10147  004D74  1F90               	comf	(___aomod@dividend+1)& (0+255),f,b
 10148  004D76  6D8F               	negf	___aomod@dividend& (0+255),b
 10149  004D78  0E00               	movlw	0
 10150  004D7A  2390               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 10151  004D7C  2391               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 10152  004D7E  2392               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 10153  004D80  2393               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 10154  004D82  2394               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 10155  004D84  2395               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 10156  004D86  2396               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 10157  004D88                     l8157:
 10158                           
 10159                           ; BSR set to: 0
 10160  004D88  C08F  F08F         	movff	___aomod@dividend,?___aomod
 10161  004D8C  C090  F090         	movff	___aomod@dividend+1,?___aomod+1
 10162  004D90  C091  F091         	movff	___aomod@dividend+2,?___aomod+2
 10163  004D94  C092  F092         	movff	___aomod@dividend+3,?___aomod+3
 10164  004D98  C093  F093         	movff	___aomod@dividend+4,?___aomod+4
 10165  004D9C  C094  F094         	movff	___aomod@dividend+5,?___aomod+5
 10166  004DA0  C095  F095         	movff	___aomod@dividend+6,?___aomod+6
 10167  004DA4  C096  F096         	movff	___aomod@dividend+7,?___aomod+7
 10168  004DA8                     
 10169                           ; BSR set to: 0
 10170  004DA8  0012               	return		;funcret
 10171  004DAA                     __end_of___aomod:
 10172                           	opt callstack 0
 10173                           
 10174 ;; *************** function ___aodiv *****************
 10175 ;; Defined at:
 10176 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 10177 ;; Parameters:    Size  Location     Type
 10178 ;;  dividend        8   47[BANK0 ] long long 
 10179 ;;  divisor         8   55[BANK0 ] long long 
 10180 ;; Auto vars:     Size  Location     Type
 10181 ;;  quotient        8   65[BANK0 ] long long 
 10182 ;;  sign            1   64[BANK0 ] unsigned char 
 10183 ;;  counter         1   63[BANK0 ] unsigned char 
 10184 ;; Return value:  Size  Location     Type
 10185 ;;                  8   47[BANK0 ] long long 
 10186 ;; Registers used:
 10187 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10188 ;; Tracked objects:
 10189 ;;		On entry : 0/0
 10190 ;;		On exit  : 0/0
 10191 ;;		Unchanged: 0/0
 10192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10193 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10194 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10196 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10197 ;;Total ram usage:       26 bytes
 10198 ;; Hardware stack levels used:    1
 10199 ;; Hardware stack levels required when called:   13
 10200 ;; This function calls:
 10201 ;;		Nothing
 10202 ;; This function is called by:
 10203 ;;		_dtoa
 10204 ;; This function uses a non-reentrant model
 10205 ;;
 10206                           
 10207                           	psect	text25
 10208  00462A                     __ptext25:
 10209                           	opt callstack 0
 10210  00462A                     ___aodiv:
 10211                           	opt callstack 12
 10212  00462A  0E00               	movlw	0
 10213  00462C  0100               	movlb	0	; () banked
 10214  00462E  6FA0               	movwf	___aodiv@sign& (0+255),b
 10215  004630                     
 10216                           ; BSR set to: 0
 10217  004630  BF9E               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
 10218  004632  EF1F  F023         	goto	u9820
 10219  004636  EF1D  F023         	goto	u9821
 10220  00463A                     u9821:
 10221  00463A  EF31  F023         	goto	l8089
 10222  00463E                     u9820:
 10223  00463E                     
 10224                           ; BSR set to: 0
 10225  00463E  1F9E               	comf	(___aodiv@divisor+7)& (0+255),f,b
 10226  004640  1F9D               	comf	(___aodiv@divisor+6)& (0+255),f,b
 10227  004642  1F9C               	comf	(___aodiv@divisor+5)& (0+255),f,b
 10228  004644  1F9B               	comf	(___aodiv@divisor+4)& (0+255),f,b
 10229  004646  1F9A               	comf	(___aodiv@divisor+3)& (0+255),f,b
 10230  004648  1F99               	comf	(___aodiv@divisor+2)& (0+255),f,b
 10231  00464A  1F98               	comf	(___aodiv@divisor+1)& (0+255),f,b
 10232  00464C  6D97               	negf	___aodiv@divisor& (0+255),b
 10233  00464E  0E00               	movlw	0
 10234  004650  2398               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 10235  004652  2399               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 10236  004654  239A               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 10237  004656  239B               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 10238  004658  239C               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 10239  00465A  239D               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 10240  00465C  239E               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 10241  00465E                     
 10242                           ; BSR set to: 0
 10243  00465E  0E01               	movlw	1
 10244  004660  6FA0               	movwf	___aodiv@sign& (0+255),b
 10245  004662                     l8089:
 10246                           
 10247                           ; BSR set to: 0
 10248  004662  BF96               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
 10249  004664  EF38  F023         	goto	u9830
 10250  004668  EF36  F023         	goto	u9831
 10251  00466C                     u9831:
 10252  00466C  EF4A  F023         	goto	l8095
 10253  004670                     u9830:
 10254  004670                     
 10255                           ; BSR set to: 0
 10256  004670  1F96               	comf	(___aodiv@dividend+7)& (0+255),f,b
 10257  004672  1F95               	comf	(___aodiv@dividend+6)& (0+255),f,b
 10258  004674  1F94               	comf	(___aodiv@dividend+5)& (0+255),f,b
 10259  004676  1F93               	comf	(___aodiv@dividend+4)& (0+255),f,b
 10260  004678  1F92               	comf	(___aodiv@dividend+3)& (0+255),f,b
 10261  00467A  1F91               	comf	(___aodiv@dividend+2)& (0+255),f,b
 10262  00467C  1F90               	comf	(___aodiv@dividend+1)& (0+255),f,b
 10263  00467E  6D8F               	negf	___aodiv@dividend& (0+255),b
 10264  004680  0E00               	movlw	0
 10265  004682  2390               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 10266  004684  2391               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 10267  004686  2392               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 10268  004688  2393               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 10269  00468A  2394               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 10270  00468C  2395               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 10271  00468E  2396               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 10272  004690                     
 10273                           ; BSR set to: 0
 10274  004690  0E01               	movlw	1
 10275  004692  1BA0               	xorwf	___aodiv@sign& (0+255),f,b
 10276  004694                     l8095:
 10277                           
 10278                           ; BSR set to: 0
 10279  004694  EE20  F0A1         	lfsr	2,___aodiv@quotient
 10280  004698  0E07               	movlw	7
 10281  00469A                     u9841:
 10282  00469A  6ADE               	clrf	postinc2,c
 10283  00469C  06E8               	decf	wreg,f,c
 10284  00469E  E2FD               	bc	u9841
 10285  0046A0                     
 10286                           ; BSR set to: 0
 10287  0046A0  5197               	movf	___aodiv@divisor& (0+255),w,b
 10288  0046A2  1198               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 10289  0046A4  1199               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 10290  0046A6  119A               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 10291  0046A8  119B               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 10292  0046AA  119C               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 10293  0046AC  119D               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 10294  0046AE  119E               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 10295  0046B0  B4D8               	btfsc	status,2,c
 10296  0046B2  EF5D  F023         	goto	u9851
 10297  0046B6  EF5F  F023         	goto	u9850
 10298  0046BA                     u9851:
 10299  0046BA  EFB1  F023         	goto	l8117
 10300  0046BE                     u9850:
 10301  0046BE                     
 10302                           ; BSR set to: 0
 10303  0046BE  0E01               	movlw	1
 10304  0046C0  6F9F               	movwf	___aodiv@counter& (0+255),b
 10305  0046C2  EF6D  F023         	goto	l8103
 10306  0046C6                     l8101:
 10307                           
 10308                           ; BSR set to: 0
 10309  0046C6  90D8               	bcf	status,0,c
 10310  0046C8  3797               	rlcf	___aodiv@divisor& (0+255),f,b
 10311  0046CA  3798               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 10312  0046CC  3799               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 10313  0046CE  379A               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 10314  0046D0  379B               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 10315  0046D2  379C               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 10316  0046D4  379D               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 10317  0046D6  379E               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 10318  0046D8  2B9F               	incf	___aodiv@counter& (0+255),f,b
 10319  0046DA                     l8103:
 10320                           
 10321                           ; BSR set to: 0
 10322  0046DA  AF9E               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 10323  0046DC  EF72  F023         	goto	u9861
 10324  0046E0  EF74  F023         	goto	u9860
 10325  0046E4                     u9861:
 10326  0046E4  EF63  F023         	goto	l8101
 10327  0046E8                     u9860:
 10328  0046E8                     l8105:
 10329                           
 10330                           ; BSR set to: 0
 10331  0046E8  90D8               	bcf	status,0,c
 10332  0046EA  37A1               	rlcf	___aodiv@quotient& (0+255),f,b
 10333  0046EC  37A2               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 10334  0046EE  37A3               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 10335  0046F0  37A4               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 10336  0046F2  37A5               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 10337  0046F4  37A6               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 10338  0046F6  37A7               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 10339  0046F8  37A8               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 10340  0046FA                     
 10341                           ; BSR set to: 0
 10342  0046FA  5197               	movf	___aodiv@divisor& (0+255),w,b
 10343  0046FC  5D8F               	subwf	___aodiv@dividend& (0+255),w,b
 10344  0046FE  5198               	movf	(___aodiv@divisor+1)& (0+255),w,b
 10345  004700  5990               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 10346  004702  5199               	movf	(___aodiv@divisor+2)& (0+255),w,b
 10347  004704  5991               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 10348  004706  519A               	movf	(___aodiv@divisor+3)& (0+255),w,b
 10349  004708  5992               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 10350  00470A  519B               	movf	(___aodiv@divisor+4)& (0+255),w,b
 10351  00470C  5993               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 10352  00470E  519C               	movf	(___aodiv@divisor+5)& (0+255),w,b
 10353  004710  5994               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 10354  004712  519D               	movf	(___aodiv@divisor+6)& (0+255),w,b
 10355  004714  5995               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 10356  004716  519E               	movf	(___aodiv@divisor+7)& (0+255),w,b
 10357  004718  5996               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 10358  00471A  A0D8               	btfss	status,0,c
 10359  00471C  EF92  F023         	goto	u9871
 10360  004720  EF94  F023         	goto	u9870
 10361  004724                     u9871:
 10362  004724  EFA5  F023         	goto	l8113
 10363  004728                     u9870:
 10364  004728                     
 10365                           ; BSR set to: 0
 10366  004728  5197               	movf	___aodiv@divisor& (0+255),w,b
 10367  00472A  5F8F               	subwf	___aodiv@dividend& (0+255),f,b
 10368  00472C  5198               	movf	(___aodiv@divisor+1)& (0+255),w,b
 10369  00472E  5B90               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 10370  004730  5199               	movf	(___aodiv@divisor+2)& (0+255),w,b
 10371  004732  5B91               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 10372  004734  519A               	movf	(___aodiv@divisor+3)& (0+255),w,b
 10373  004736  5B92               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 10374  004738  519B               	movf	(___aodiv@divisor+4)& (0+255),w,b
 10375  00473A  5B93               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 10376  00473C  519C               	movf	(___aodiv@divisor+5)& (0+255),w,b
 10377  00473E  5B94               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 10378  004740  519D               	movf	(___aodiv@divisor+6)& (0+255),w,b
 10379  004742  5B95               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 10380  004744  519E               	movf	(___aodiv@divisor+7)& (0+255),w,b
 10381  004746  5B96               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 10382  004748                     
 10383                           ; BSR set to: 0
 10384  004748  81A1               	bsf	___aodiv@quotient& (0+255),0,b
 10385  00474A                     l8113:
 10386                           
 10387                           ; BSR set to: 0
 10388  00474A  90D8               	bcf	status,0,c
 10389  00474C  339E               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 10390  00474E  339D               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 10391  004750  339C               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 10392  004752  339B               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 10393  004754  339A               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 10394  004756  3399               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 10395  004758  3398               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 10396  00475A  3397               	rrcf	___aodiv@divisor& (0+255),f,b
 10397  00475C                     
 10398                           ; BSR set to: 0
 10399  00475C  2F9F               	decfsz	___aodiv@counter& (0+255),f,b
 10400  00475E  EF74  F023         	goto	l8105
 10401  004762                     l8117:
 10402                           
 10403                           ; BSR set to: 0
 10404  004762  51A0               	movf	___aodiv@sign& (0+255),w,b
 10405  004764  B4D8               	btfsc	status,2,c
 10406  004766  EFB7  F023         	goto	u9881
 10407  00476A  EFB9  F023         	goto	u9880
 10408  00476E                     u9881:
 10409  00476E  EFC9  F023         	goto	l8121
 10410  004772                     u9880:
 10411  004772                     
 10412                           ; BSR set to: 0
 10413  004772  1FA8               	comf	(___aodiv@quotient+7)& (0+255),f,b
 10414  004774  1FA7               	comf	(___aodiv@quotient+6)& (0+255),f,b
 10415  004776  1FA6               	comf	(___aodiv@quotient+5)& (0+255),f,b
 10416  004778  1FA5               	comf	(___aodiv@quotient+4)& (0+255),f,b
 10417  00477A  1FA4               	comf	(___aodiv@quotient+3)& (0+255),f,b
 10418  00477C  1FA3               	comf	(___aodiv@quotient+2)& (0+255),f,b
 10419  00477E  1FA2               	comf	(___aodiv@quotient+1)& (0+255),f,b
 10420  004780  6DA1               	negf	___aodiv@quotient& (0+255),b
 10421  004782  0E00               	movlw	0
 10422  004784  23A2               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 10423  004786  23A3               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 10424  004788  23A4               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 10425  00478A  23A5               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 10426  00478C  23A6               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 10427  00478E  23A7               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 10428  004790  23A8               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 10429  004792                     l8121:
 10430                           
 10431                           ; BSR set to: 0
 10432  004792  C0A1  F08F         	movff	___aodiv@quotient,?___aodiv
 10433  004796  C0A2  F090         	movff	___aodiv@quotient+1,?___aodiv+1
 10434  00479A  C0A3  F091         	movff	___aodiv@quotient+2,?___aodiv+2
 10435  00479E  C0A4  F092         	movff	___aodiv@quotient+3,?___aodiv+3
 10436  0047A2  C0A5  F093         	movff	___aodiv@quotient+4,?___aodiv+4
 10437  0047A6  C0A6  F094         	movff	___aodiv@quotient+5,?___aodiv+5
 10438  0047AA  C0A7  F095         	movff	___aodiv@quotient+6,?___aodiv+6
 10439  0047AE  C0A8  F096         	movff	___aodiv@quotient+7,?___aodiv+7
 10440  0047B2                     
 10441                           ; BSR set to: 0
 10442  0047B2  0012               	return		;funcret
 10443  0047B4                     __end_of___aodiv:
 10444                           	opt callstack 0
 10445                           
 10446 ;; *************** function _ctoa *****************
 10447 ;; Defined at:
 10448 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 10449 ;; Parameters:    Size  Location     Type
 10450 ;;  fp              2   76[BANK0 ] PTR struct _IO_FILE
 10451 ;;		 -> vsnprintf@f(6), NULL(0), 
 10452 ;;  c               1   78[BANK0 ] unsigned char 
 10453 ;; Auto vars:     Size  Location     Type
 10454 ;;  w               2   79[BANK0 ] int 
 10455 ;;  l               2    0        int 
 10456 ;; Return value:  Size  Location     Type
 10457 ;;                  2   76[BANK0 ] int 
 10458 ;; Registers used:
 10459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10460 ;; Tracked objects:
 10461 ;;		On entry : 0/0
 10462 ;;		On exit  : 0/0
 10463 ;;		Unchanged: 0/0
 10464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10465 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10466 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10468 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10469 ;;Total ram usage:        5 bytes
 10470 ;; Hardware stack levels used:    1
 10471 ;; Hardware stack levels required when called:   18
 10472 ;; This function calls:
 10473 ;;		_pad
 10474 ;; This function is called by:
 10475 ;;		_vfpfcnvrt
 10476 ;; This function uses a non-reentrant model
 10477 ;;
 10478                           
 10479                           	psect	text26
 10480  005EDC                     __ptext26:
 10481                           	opt callstack 0
 10482  005EDC                     _ctoa:
 10483                           	opt callstack 8
 10484  005EDC                     
 10485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 10486  005EDC  0100               	movlb	0	; () banked
 10487  005EDE  51B5               	movf	_width& (0+255),w,b
 10488  005EE0  11B6               	iorwf	(_width+1)& (0+255),w,b
 10489  005EE2  A4D8               	btfss	status,2,c
 10490  005EE4  EF76  F02F         	goto	u10621
 10491  005EE8  EF78  F02F         	goto	u10620
 10492  005EEC                     u10621:
 10493  005EEC  EF7E  F02F         	goto	l8597
 10494  005EF0                     u10620:
 10495  005EF0                     
 10496                           ; BSR set to: 0
 10497  005EF0  C0B5  F0AF         	movff	_width,ctoa@w
 10498  005EF4  C0B6  F0B0         	movff	_width+1,ctoa@w+1
 10499  005EF8  EF84  F02F         	goto	l8599
 10500  005EFC                     l8597:
 10501                           
 10502                           ; BSR set to: 0
 10503  005EFC  0EFF               	movlw	255
 10504  005EFE  25B5               	addwf	_width& (0+255),w,b
 10505  005F00  6FAF               	movwf	ctoa@w& (0+255),b
 10506  005F02  0EFF               	movlw	255
 10507  005F04  21B6               	addwfc	(_width+1)& (0+255),w,b
 10508  005F06  6FB0               	movwf	(ctoa@w+1)& (0+255),b
 10509  005F08                     l8599:
 10510                           
 10511                           ; BSR set to: 0
 10512                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 10513  005F08  C0AE  F189         	movff	ctoa@c,_dbuf
 10514  005F0C                     
 10515                           ; BSR set to: 0
 10516                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 10517  005F0C  0E00               	movlw	0
 10518  005F0E  0101               	movlb	1	; () banked
 10519  005F10  6F8A               	movwf	(_dbuf+1)& (0+255),b
 10520  005F12                     
 10521                           ; BSR set to: 1
 10522                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 10523  005F12  C0AC  F0A1         	movff	ctoa@fp,pad@fp
 10524  005F16  C0AD  F0A2         	movff	ctoa@fp+1,pad@fp+1
 10525  005F1A  0E89               	movlw	low _dbuf
 10526  005F1C  0100               	movlb	0	; () banked
 10527  005F1E  6FA3               	movwf	pad@buf& (0+255),b
 10528  005F20  0E01               	movlw	high _dbuf
 10529  005F22  6FA4               	movwf	(pad@buf+1)& (0+255),b
 10530  005F24  C0AF  F0A5         	movff	ctoa@w,pad@p
 10531  005F28  C0B0  F0A6         	movff	ctoa@w+1,pad@p+1
 10532  005F2C  EC45  F02C         	call	_pad	;wreg free
 10533  005F30  C0A1  F0AC         	movff	?_pad,?_ctoa
 10534  005F34  C0A2  F0AD         	movff	?_pad+1,?_ctoa+1
 10535  005F38  0012               	return		;funcret
 10536  005F3A                     __end_of_ctoa:
 10537                           	opt callstack 0
 10538                           
 10539 ;; *************** function _pad *****************
 10540 ;; Defined at:
 10541 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 10542 ;; Parameters:    Size  Location     Type
 10543 ;;  fp              2   65[BANK0 ] PTR struct _IO_FILE
 10544 ;;		 -> vsnprintf@f(6), NULL(0), 
 10545 ;;  buf             2   67[BANK0 ] PTR unsigned char 
 10546 ;;		 -> dbuf(32), 
 10547 ;;  p               2   69[BANK0 ] int 
 10548 ;; Auto vars:     Size  Location     Type
 10549 ;;  w               2   74[BANK0 ] int 
 10550 ;;  i               2   72[BANK0 ] int 
 10551 ;; Return value:  Size  Location     Type
 10552 ;;                  2   65[BANK0 ] int 
 10553 ;; Registers used:
 10554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10555 ;; Tracked objects:
 10556 ;;		On entry : 0/0
 10557 ;;		On exit  : 0/0
 10558 ;;		Unchanged: 0/0
 10559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10560 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10561 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10562 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10563 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10564 ;;Total ram usage:       11 bytes
 10565 ;; Hardware stack levels used:    1
 10566 ;; Hardware stack levels required when called:   17
 10567 ;; This function calls:
 10568 ;;		_fputc
 10569 ;;		_fputs
 10570 ;;		_strlen
 10571 ;; This function is called by:
 10572 ;;		_ctoa
 10573 ;;		_dtoa
 10574 ;;		_otoa
 10575 ;;		_utoa
 10576 ;;		_xtoa
 10577 ;; This function uses a non-reentrant model
 10578 ;;
 10579                           
 10580                           	psect	text27
 10581  00588A                     __ptext27:
 10582                           	opt callstack 0
 10583  00588A                     _pad:
 10584                           	opt callstack 8
 10585  00588A                     
 10586                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 10587  00588A  0100               	movlb	0	; () banked
 10588  00588C  A1B9               	btfss	_flags& (0+255),0,b
 10589  00588E  EF4B  F02C         	goto	u9681
 10590  005892  EF4D  F02C         	goto	u9680
 10591  005896                     u9681:
 10592  005896  EF57  F02C         	goto	l8031
 10593  00589A                     u9680:
 10594  00589A                     
 10595                           ; BSR set to: 0
 10596                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 10597  00589A  C0A3  F09A         	movff	pad@buf,fputs@s
 10598  00589E  C0A4  F09B         	movff	pad@buf+1,fputs@s+1
 10599  0058A2  C0A1  F09C         	movff	pad@fp,fputs@fp
 10600  0058A6  C0A2  F09D         	movff	pad@fp+1,fputs@fp+1
 10601  0058AA  ECC3  F030         	call	_fputs	;wreg free
 10602  0058AE                     l8031:
 10603                           
 10604                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 10605  0058AE  0100               	movlb	0	; () banked
 10606  0058B0  BFA6               	btfsc	(pad@p+1)& (0+255),7,b
 10607  0058B2  EF5D  F02C         	goto	u9691
 10608  0058B6  EF5F  F02C         	goto	u9690
 10609  0058BA                     u9691:
 10610  0058BA  EF65  F02C         	goto	l8035
 10611  0058BE                     u9690:
 10612  0058BE                     
 10613                           ; BSR set to: 0
 10614  0058BE  C0A5  F0AA         	movff	pad@p,pad@w
 10615  0058C2  C0A6  F0AB         	movff	pad@p+1,pad@w+1
 10616  0058C6  EF69  F02C         	goto	l716
 10617  0058CA                     l8035:
 10618                           
 10619                           ; BSR set to: 0
 10620  0058CA  0E00               	movlw	0
 10621  0058CC  6FAB               	movwf	(pad@w+1)& (0+255),b
 10622  0058CE  0E00               	movlw	0
 10623  0058D0  6FAA               	movwf	pad@w& (0+255),b
 10624  0058D2                     l716:
 10625                           
 10626                           ; BSR set to: 0
 10627                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 10628  0058D2  0E00               	movlw	0
 10629  0058D4  6FA9               	movwf	(pad@i+1)& (0+255),b
 10630  0058D6  0E00               	movlw	0
 10631  0058D8  6FA8               	movwf	pad@i& (0+255),b
 10632                           
 10633                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10634  0058DA  EF7C  F02C         	goto	l8041
 10635  0058DE                     l8037:
 10636                           
 10637                           ; BSR set to: 0
 10638                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 10639  0058DE  0E00               	movlw	0
 10640  0058E0  6F92               	movwf	(fputc@c+1)& (0+255),b
 10641  0058E2  0E20               	movlw	32
 10642  0058E4  6F91               	movwf	fputc@c& (0+255),b
 10643  0058E6  C0A1  F093         	movff	pad@fp,fputc@fp
 10644  0058EA  C0A2  F094         	movff	pad@fp+1,fputc@fp+1
 10645  0058EE  ECDF  F02B         	call	_fputc	;wreg free
 10646  0058F2                     
 10647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 10648  0058F2  0100               	movlb	0	; () banked
 10649  0058F4  4BA8               	infsnz	pad@i& (0+255),f,b
 10650  0058F6  2BA9               	incf	(pad@i+1)& (0+255),f,b
 10651  0058F8                     l8041:
 10652                           
 10653                           ; BSR set to: 0
 10654                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10655  0058F8  51AA               	movf	pad@w& (0+255),w,b
 10656  0058FA  5DA8               	subwf	pad@i& (0+255),w,b
 10657  0058FC  51A9               	movf	(pad@i+1)& (0+255),w,b
 10658  0058FE  0A80               	xorlw	128
 10659  005900  6FA7               	movwf	??_pad& (0+255),b
 10660  005902  51AB               	movf	(pad@w+1)& (0+255),w,b
 10661  005904  0A80               	xorlw	128
 10662  005906  59A7               	subwfb	??_pad& (0+255),w,b
 10663  005908  A0D8               	btfss	status,0,c
 10664  00590A  EF89  F02C         	goto	u9701
 10665  00590E  EF8B  F02C         	goto	u9700
 10666  005912                     u9701:
 10667  005912  EF6F  F02C         	goto	l8037
 10668  005916                     u9700:
 10669  005916                     
 10670                           ; BSR set to: 0
 10671                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 10672  005916  B1B9               	btfsc	_flags& (0+255),0,b
 10673  005918  EF90  F02C         	goto	u9711
 10674  00591C  EF92  F02C         	goto	u9710
 10675  005920                     u9711:
 10676  005920  EF9C  F02C         	goto	l8045
 10677  005924                     u9710:
 10678  005924                     
 10679                           ; BSR set to: 0
 10680                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 10681  005924  C0A3  F09A         	movff	pad@buf,fputs@s
 10682  005928  C0A4  F09B         	movff	pad@buf+1,fputs@s+1
 10683  00592C  C0A1  F09C         	movff	pad@fp,fputs@fp
 10684  005930  C0A2  F09D         	movff	pad@fp+1,fputs@fp+1
 10685  005934  ECC3  F030         	call	_fputs	;wreg free
 10686  005938                     l8045:
 10687                           
 10688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 10689  005938  C0A3  F08F         	movff	pad@buf,strlen@s
 10690  00593C  C0A4  F090         	movff	pad@buf+1,strlen@s+1
 10691  005940  EC6C  F032         	call	_strlen	;wreg free
 10692  005944  0100               	movlb	0	; () banked
 10693  005946  51AA               	movf	pad@w& (0+255),w,b
 10694  005948  258F               	addwf	?_strlen& (0+255),w,b
 10695  00594A  6FA1               	movwf	?_pad& (0+255),b
 10696  00594C  51AB               	movf	(pad@w+1)& (0+255),w,b
 10697  00594E  2190               	addwfc	(?_strlen+1)& (0+255),w,b
 10698  005950  6FA2               	movwf	(?_pad+1)& (0+255),b
 10699  005952                     
 10700                           ; BSR set to: 0
 10701  005952  0012               	return		;funcret
 10702  005954                     __end_of_pad:
 10703                           	opt callstack 0
 10704                           
 10705 ;; *************** function _strlen *****************
 10706 ;; Defined at:
 10707 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 10708 ;; Parameters:    Size  Location     Type
 10709 ;;  s               2   47[BANK0 ] PTR const unsigned char 
 10710 ;;		 -> ?_snprintf(2), ?_printf(2), stoa@nuls(7), dbuf(32), 
 10711 ;; Auto vars:     Size  Location     Type
 10712 ;;  a               2   49[BANK0 ] PTR const unsigned char 
 10713 ;;		 -> ?_snprintf(2), ?_printf(2), stoa@nuls(7), dbuf(32), 
 10714 ;; Return value:  Size  Location     Type
 10715 ;;                  2   47[BANK0 ] unsigned int 
 10716 ;; Registers used:
 10717 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10718 ;; Tracked objects:
 10719 ;;		On entry : 0/0
 10720 ;;		On exit  : 0/0
 10721 ;;		Unchanged: 0/0
 10722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10723 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10724 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10726 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10727 ;;Total ram usage:        4 bytes
 10728 ;; Hardware stack levels used:    1
 10729 ;; Hardware stack levels required when called:   13
 10730 ;; This function calls:
 10731 ;;		Nothing
 10732 ;; This function is called by:
 10733 ;;		_pad
 10734 ;;		_stoa
 10735 ;; This function uses a non-reentrant model
 10736 ;;
 10737                           
 10738                           	psect	text28
 10739  0064D8                     __ptext28:
 10740                           	opt callstack 0
 10741  0064D8                     _strlen:
 10742                           	opt callstack 11
 10743  0064D8  C08F  F091         	movff	strlen@s,strlen@a
 10744  0064DC  C090  F092         	movff	strlen@s+1,strlen@a+1
 10745  0064E0  EF75  F032         	goto	l7685
 10746  0064E4                     l7683:
 10747  0064E4  0100               	movlb	0	; () banked
 10748  0064E6  4B8F               	infsnz	strlen@s& (0+255),f,b
 10749  0064E8  2B90               	incf	(strlen@s+1)& (0+255),f,b
 10750  0064EA                     l7685:
 10751  0064EA  C08F  FFD9         	movff	strlen@s,fsr2l
 10752  0064EE  C090  FFDA         	movff	strlen@s+1,fsr2h
 10753  0064F2  50DF               	movf	indf2,w,c
 10754  0064F4  A4D8               	btfss	status,2,c
 10755  0064F6  EF7F  F032         	goto	u8881
 10756  0064FA  EF81  F032         	goto	u8880
 10757  0064FE                     u8881:
 10758  0064FE  EF72  F032         	goto	l7683
 10759  006502                     u8880:
 10760  006502  0100               	movlb	0	; () banked
 10761  006504  5191               	movf	strlen@a& (0+255),w,b
 10762  006506  5D8F               	subwf	strlen@s& (0+255),w,b
 10763  006508  6F8F               	movwf	?_strlen& (0+255),b
 10764  00650A  5192               	movf	(strlen@a+1)& (0+255),w,b
 10765  00650C  5990               	subwfb	(strlen@s+1)& (0+255),w,b
 10766  00650E  6F90               	movwf	(?_strlen+1)& (0+255),b
 10767  006510                     
 10768                           ; BSR set to: 0
 10769  006510  0012               	return		;funcret
 10770  006512                     __end_of_strlen:
 10771                           	opt callstack 0
 10772                           
 10773 ;; *************** function _fputs *****************
 10774 ;; Defined at:
 10775 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 10776 ;; Parameters:    Size  Location     Type
 10777 ;;  s               2   58[BANK0 ] PTR const unsigned char 
 10778 ;;		 -> dbuf(32), 
 10779 ;;  fp              2   60[BANK0 ] PTR struct _IO_FILE
 10780 ;;		 -> vsnprintf@f(6), NULL(0), 
 10781 ;; Auto vars:     Size  Location     Type
 10782 ;;  i               2   63[BANK0 ] int 
 10783 ;;  c               1   62[BANK0 ] unsigned char 
 10784 ;; Return value:  Size  Location     Type
 10785 ;;                  2   58[BANK0 ] int 
 10786 ;; Registers used:
 10787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10788 ;; Tracked objects:
 10789 ;;		On entry : 0/0
 10790 ;;		On exit  : 0/0
 10791 ;;		Unchanged: 0/0
 10792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10793 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10794 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10796 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10797 ;;Total ram usage:        7 bytes
 10798 ;; Hardware stack levels used:    1
 10799 ;; Hardware stack levels required when called:   16
 10800 ;; This function calls:
 10801 ;;		_fputc
 10802 ;; This function is called by:
 10803 ;;		_pad
 10804 ;; This function uses a non-reentrant model
 10805 ;;
 10806                           
 10807                           	psect	text29
 10808  006186                     __ptext29:
 10809                           	opt callstack 0
 10810  006186                     _fputs:
 10811                           	opt callstack 8
 10812  006186  0E00               	movlw	0
 10813  006188  0100               	movlb	0	; () banked
 10814  00618A  6FA0               	movwf	(fputs@i+1)& (0+255),b
 10815  00618C  0E00               	movlw	0
 10816  00618E  6F9F               	movwf	fputs@i& (0+255),b
 10817  006190  EFD6  F030         	goto	l7679
 10818  006194                     l7675:
 10819                           
 10820                           ; BSR set to: 0
 10821  006194  C09E  F091         	movff	fputs@c,fputc@c
 10822  006198  6B92               	clrf	(fputc@c+1)& (0+255),b
 10823  00619A  C09C  F093         	movff	fputs@fp,fputc@fp
 10824  00619E  C09D  F094         	movff	fputs@fp+1,fputc@fp+1
 10825  0061A2  ECDF  F02B         	call	_fputc	;wreg free
 10826  0061A6  0100               	movlb	0	; () banked
 10827  0061A8  4B9F               	infsnz	fputs@i& (0+255),f,b
 10828  0061AA  2BA0               	incf	(fputs@i+1)& (0+255),f,b
 10829  0061AC                     l7679:
 10830                           
 10831                           ; BSR set to: 0
 10832  0061AC  519F               	movf	fputs@i& (0+255),w,b
 10833  0061AE  259A               	addwf	fputs@s& (0+255),w,b
 10834  0061B0  6ED9               	movwf	fsr2l,c
 10835  0061B2  51A0               	movf	(fputs@i+1)& (0+255),w,b
 10836  0061B4  219B               	addwfc	(fputs@s+1)& (0+255),w,b
 10837  0061B6  6EDA               	movwf	fsr2h,c
 10838  0061B8  50DF               	movf	indf2,w,c
 10839  0061BA  6F9E               	movwf	fputs@c& (0+255),b
 10840  0061BC  519E               	movf	fputs@c& (0+255),w,b
 10841  0061BE  A4D8               	btfss	status,2,c
 10842  0061C0  EFE4  F030         	goto	u8871
 10843  0061C4  EFE6  F030         	goto	u8870
 10844  0061C8                     u8871:
 10845  0061C8  EFCA  F030         	goto	l7675
 10846  0061CC                     u8870:
 10847  0061CC                     
 10848                           ; BSR set to: 0
 10849  0061CC  0012               	return		;funcret
 10850  0061CE                     __end_of_fputs:
 10851                           	opt callstack 0
 10852                           
 10853 ;; *************** function _fputc *****************
 10854 ;; Defined at:
 10855 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 10856 ;; Parameters:    Size  Location     Type
 10857 ;;  c               2   49[BANK0 ] int 
 10858 ;;  fp              2   51[BANK0 ] PTR struct _IO_FILE
 10859 ;;		 -> vsnprintf@f(6), NULL(0), 
 10860 ;; Auto vars:     Size  Location     Type
 10861 ;;		None
 10862 ;; Return value:  Size  Location     Type
 10863 ;;                  2   49[BANK0 ] int 
 10864 ;; Registers used:
 10865 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10866 ;; Tracked objects:
 10867 ;;		On entry : 0/0
 10868 ;;		On exit  : 0/0
 10869 ;;		Unchanged: 0/0
 10870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10871 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10873 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10874 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10875 ;;Total ram usage:        9 bytes
 10876 ;; Hardware stack levels used:    1
 10877 ;; Hardware stack levels required when called:   15
 10878 ;; This function calls:
 10879 ;;		_putch
 10880 ;; This function is called by:
 10881 ;;		_pad
 10882 ;;		_stoa
 10883 ;;		_vfpfcnvrt
 10884 ;;		_fputs
 10885 ;; This function uses a non-reentrant model
 10886 ;;
 10887                           
 10888                           	psect	text30
 10889  0057BE                     __ptext30:
 10890                           	opt callstack 0
 10891  0057BE                     _fputc:
 10892                           	opt callstack 8
 10893  0057BE  0100               	movlb	0	; () banked
 10894  0057C0  5193               	movf	fputc@fp& (0+255),w,b
 10895  0057C2  1194               	iorwf	(fputc@fp+1)& (0+255),w,b
 10896  0057C4  B4D8               	btfsc	status,2,c
 10897  0057C6  EFE7  F02B         	goto	u8471
 10898  0057CA  EFE9  F02B         	goto	u8470
 10899  0057CE                     u8471:
 10900  0057CE  EFF2  F02B         	goto	l7479
 10901  0057D2                     u8470:
 10902  0057D2                     
 10903                           ; BSR set to: 0
 10904  0057D2  5193               	movf	fputc@fp& (0+255),w,b
 10905  0057D4  1194               	iorwf	(fputc@fp+1)& (0+255),w,b
 10906  0057D6  A4D8               	btfss	status,2,c
 10907  0057D8  EFF0  F02B         	goto	u8481
 10908  0057DC  EFF2  F02B         	goto	u8480
 10909  0057E0                     u8481:
 10910  0057E0  EFF7  F02B         	goto	l7481
 10911  0057E4                     u8480:
 10912  0057E4                     l7479:
 10913                           
 10914                           ; BSR set to: 0
 10915  0057E4  5191               	movf	fputc@c& (0+255),w,b
 10916  0057E6  EC87  F034         	call	_putch
 10917  0057EA  EF44  F02C         	goto	l1670
 10918  0057EE                     l7481:
 10919                           
 10920                           ; BSR set to: 0
 10921  0057EE  EE20 F004          	lfsr	2,4
 10922  0057F2  5193               	movf	fputc@fp& (0+255),w,b
 10923  0057F4  26D9               	addwf	fsr2l,f,c
 10924  0057F6  5194               	movf	(fputc@fp+1)& (0+255),w,b
 10925  0057F8  22DA               	addwfc	fsr2h,f,c
 10926  0057FA  50DE               	movf	postinc2,w,c
 10927  0057FC  10DE               	iorwf	postinc2,w,c
 10928  0057FE  B4D8               	btfsc	status,2,c
 10929  005800  EF04  F02C         	goto	u8491
 10930  005804  EF06  F02C         	goto	u8490
 10931  005808                     u8491:
 10932  005808  EF21  F02C         	goto	l7485
 10933  00580C                     u8490:
 10934  00580C                     
 10935                           ; BSR set to: 0
 10936  00580C  EE20 F004          	lfsr	2,4
 10937  005810  5193               	movf	fputc@fp& (0+255),w,b
 10938  005812  26D9               	addwf	fsr2l,f,c
 10939  005814  5194               	movf	(fputc@fp+1)& (0+255),w,b
 10940  005816  22DA               	addwfc	fsr2h,f,c
 10941  005818  EE10 F002          	lfsr	1,2
 10942  00581C  5193               	movf	fputc@fp& (0+255),w,b
 10943  00581E  26E1               	addwf	fsr1l,f,c
 10944  005820  5194               	movf	(fputc@fp+1)& (0+255),w,b
 10945  005822  22E2               	addwfc	fsr1h,f,c
 10946  005824  50DE               	movf	postinc2,w,c
 10947  005826  5CE6               	subwf	postinc1,w,c
 10948  005828  50E6               	movf	postinc1,w,c
 10949  00582A  0A80               	xorlw	128
 10950  00582C  6F99               	movwf	(??_fputc+4)& (0+255),b
 10951  00582E  50DE               	movf	postinc2,w,c
 10952  005830  0A80               	xorlw	128
 10953  005832  5999               	subwfb	(??_fputc+4)& (0+255),w,b
 10954  005834  B0D8               	btfsc	status,0,c
 10955  005836  EF1F  F02C         	goto	u8501
 10956  00583A  EF21  F02C         	goto	u8500
 10957  00583E                     u8501:
 10958  00583E  EF44  F02C         	goto	l1670
 10959  005842                     u8500:
 10960  005842                     l7485:
 10961                           
 10962                           ; BSR set to: 0
 10963  005842  EE20 F002          	lfsr	2,2
 10964  005846  5193               	movf	fputc@fp& (0+255),w,b
 10965  005848  26D9               	addwf	fsr2l,f,c
 10966  00584A  5194               	movf	(fputc@fp+1)& (0+255),w,b
 10967  00584C  22DA               	addwfc	fsr2h,f,c
 10968  00584E  CFDE F095          	movff	postinc2,??_fputc
 10969  005852  CFDD F096          	movff	postdec2,??_fputc+1
 10970  005856  C093  FFD9         	movff	fputc@fp,fsr2l
 10971  00585A  C094  FFDA         	movff	fputc@fp+1,fsr2h
 10972  00585E  CFDE F097          	movff	postinc2,??_fputc+2
 10973  005862  CFDD F098          	movff	postdec2,??_fputc+3
 10974  005866  5195               	movf	??_fputc& (0+255),w,b
 10975  005868  2597               	addwf	(??_fputc+2)& (0+255),w,b
 10976  00586A  6ED9               	movwf	fsr2l,c
 10977  00586C  5196               	movf	(??_fputc+1)& (0+255),w,b
 10978  00586E  2198               	addwfc	(??_fputc+3)& (0+255),w,b
 10979  005870  6EDA               	movwf	fsr2h,c
 10980  005872  C091  FFDF         	movff	fputc@c,indf2
 10981  005876  EE20 F002          	lfsr	2,2
 10982  00587A  5193               	movf	fputc@fp& (0+255),w,b
 10983  00587C  26D9               	addwf	fsr2l,f,c
 10984  00587E  5194               	movf	(fputc@fp+1)& (0+255),w,b
 10985  005880  22DA               	addwfc	fsr2h,f,c
 10986  005882  2ADE               	incf	postinc2,f,c
 10987  005884  0E00               	movlw	0
 10988  005886  22DD               	addwfc	postdec2,f,c
 10989  005888                     l1670:
 10990  005888  0012               	return		;funcret
 10991  00588A                     __end_of_fputc:
 10992                           	opt callstack 0
 10993                           
 10994 ;; *************** function _putch *****************
 10995 ;; Defined at:
 10996 ;;		line 146 in file "mcc_generated_files/eusart1.c"
 10997 ;; Parameters:    Size  Location     Type
 10998 ;;  txData          1    wreg     unsigned char 
 10999 ;; Auto vars:     Size  Location     Type
 11000 ;;  txData          1   48[BANK0 ] unsigned char 
 11001 ;; Return value:  Size  Location     Type
 11002 ;;                  1    wreg      void 
 11003 ;; Registers used:
 11004 ;;		wreg, status,2, cstack
 11005 ;; Tracked objects:
 11006 ;;		On entry : 0/0
 11007 ;;		On exit  : 0/0
 11008 ;;		Unchanged: 0/0
 11009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11011 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11013 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11014 ;;Total ram usage:        1 bytes
 11015 ;; Hardware stack levels used:    1
 11016 ;; Hardware stack levels required when called:   14
 11017 ;; This function calls:
 11018 ;;		_EUSART1_Write
 11019 ;; This function is called by:
 11020 ;;		_fputc
 11021 ;; This function uses a non-reentrant model
 11022 ;;
 11023                           
 11024                           	psect	text31
 11025  00690E                     __ptext31:
 11026                           	opt callstack 0
 11027  00690E                     _putch:
 11028                           	opt callstack 8
 11029                           
 11030                           ;incstack = 0
 11031                           ;putch@txData stored from wreg
 11032  00690E  0100               	movlb	0	; () banked
 11033  006910  6F90               	movwf	putch@txData& (0+255),b
 11034  006912                     
 11035                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
 11036  006912  0100               	movlb	0	; () banked
 11037  006914  5190               	movf	putch@txData& (0+255),w,b
 11038  006916  EC31  F034         	call	_EUSART1_Write
 11039  00691A  0012               	return		;funcret
 11040  00691C                     __end_of_putch:
 11041                           	opt callstack 0
 11042                           
 11043 ;; *************** function _EUSART1_Write *****************
 11044 ;; Defined at:
 11045 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 11046 ;; Parameters:    Size  Location     Type
 11047 ;;  txData          1    wreg     unsigned char 
 11048 ;; Auto vars:     Size  Location     Type
 11049 ;;  txData          1   47[BANK0 ] unsigned char 
 11050 ;; Return value:  Size  Location     Type
 11051 ;;                  1    wreg      void 
 11052 ;; Registers used:
 11053 ;;		wreg
 11054 ;; Tracked objects:
 11055 ;;		On entry : 0/0
 11056 ;;		On exit  : 0/0
 11057 ;;		Unchanged: 0/0
 11058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11060 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11062 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11063 ;;Total ram usage:        1 bytes
 11064 ;; Hardware stack levels used:    1
 11065 ;; Hardware stack levels required when called:   13
 11066 ;; This function calls:
 11067 ;;		Nothing
 11068 ;; This function is called by:
 11069 ;;		_putch
 11070 ;;		_read_from_usart
 11071 ;; This function uses a non-reentrant model
 11072 ;;
 11073                           
 11074                           	psect	text32
 11075  006862                     __ptext32:
 11076                           	opt callstack 0
 11077  006862                     _EUSART1_Write:
 11078                           	opt callstack 8
 11079                           
 11080                           ;incstack = 0
 11081                           ;EUSART1_Write@txData stored from wreg
 11082  006862  0100               	movlb	0	; () banked
 11083  006864  6F8F               	movwf	EUSART1_Write@txData& (0+255),b
 11084  006866                     l297:
 11085                           
 11086                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
 11087  006866  A89E               	btfss	158,4,c	;volatile
 11088  006868  EF38  F034         	goto	u8381
 11089  00686C  EF3A  F034         	goto	u8380
 11090  006870                     u8381:
 11091  006870  EF33  F034         	goto	l297
 11092  006874                     u8380:
 11093  006874                     
 11094                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
 11095  006874  C08F  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
 11096  006878  0012               	return		;funcret
 11097  00687A                     __end_of_EUSART1_Write:
 11098                           	opt callstack 0
 11099                           
 11100 ;; *************** function _atoi *****************
 11101 ;; Defined at:
 11102 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 11103 ;; Parameters:    Size  Location     Type
 11104 ;;  s               2   54[BANK0 ] PTR const unsigned char 
 11105 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
 11106 ;;		 -> STR_4(22), STR_3(12), read_from_usart@data(10), STR_1(13), 
 11107 ;; Auto vars:     Size  Location     Type
 11108 ;;  n               2   67[BANK0 ] int 
 11109 ;;  neg             2   60[BANK0 ] int 
 11110 ;; Return value:  Size  Location     Type
 11111 ;;                  2   54[BANK0 ] int 
 11112 ;; Registers used:
 11113 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11114 ;; Tracked objects:
 11115 ;;		On entry : 0/0
 11116 ;;		On exit  : 0/0
 11117 ;;		Unchanged: 0/0
 11118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11119 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11120 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11121 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11122 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11123 ;;Total ram usage:       15 bytes
 11124 ;; Hardware stack levels used:    1
 11125 ;; Hardware stack levels required when called:   14
 11126 ;; This function calls:
 11127 ;;		___wmul
 11128 ;;		_isdigit
 11129 ;;		_isspace
 11130 ;; This function is called by:
 11131 ;;		_read_from_usart
 11132 ;;		_vfpfcnvrt
 11133 ;; This function uses a non-reentrant model
 11134 ;;
 11135                           
 11136                           	psect	text33
 11137  003A9A                     __ptext33:
 11138                           	opt callstack 0
 11139  003A9A                     _atoi:
 11140                           	opt callstack 12
 11141  003A9A  0E00               	movlw	0
 11142  003A9C  0100               	movlb	0	; () banked
 11143  003A9E  6FA4               	movwf	(atoi@n+1)& (0+255),b
 11144  003AA0  0E00               	movlw	0
 11145  003AA2  6FA3               	movwf	atoi@n& (0+255),b
 11146  003AA4  0E00               	movlw	0
 11147  003AA6  6F9D               	movwf	(atoi@neg+1)& (0+255),b
 11148  003AA8  0E00               	movlw	0
 11149  003AAA  6F9C               	movwf	atoi@neg& (0+255),b
 11150  003AAC  EF5A  F01D         	goto	l8547
 11151  003AB0                     l8545:
 11152                           
 11153                           ; BSR set to: 0
 11154  003AB0  4B96               	infsnz	atoi@s& (0+255),f,b
 11155  003AB2  2B97               	incf	(atoi@s+1)& (0+255),f,b
 11156  003AB4                     l8547:
 11157                           
 11158                           ; BSR set to: 0
 11159  003AB4  0E01               	movlw	1
 11160  003AB6  6FA2               	movwf	_atoi$2437& (0+255),b
 11161  003AB8                     
 11162                           ; BSR set to: 0
 11163  003AB8  C096  FFF6         	movff	atoi@s,tblptrl
 11164  003ABC  C097  FFF7         	movff	atoi@s+1,tblptrh
 11165  003AC0  0E00               	movlw	low (__mediumconst shr (0+16))
 11166  003AC2  6EF8               	movwf	tblptru,c
 11167  003AC4  0E0E               	movlw	(high __ramtop+-1)
 11168  003AC6  64F7               	cpfsgt	tblptrh,c
 11169  003AC8  D003               	bra	u10497
 11170  003ACA  0008               	tblrd		*
 11171  003ACC  50F5               	movf	tablat,w,c
 11172  003ACE  D005               	bra	u10490
 11173  003AD0                     u10497:
 11174  003AD0  CFF6 FFE9          	movff	tblptrl,fsr0l
 11175  003AD4  CFF7 FFEA          	movff	tblptrh,fsr0h
 11176  003AD8  50EF               	movf	indf0,w,c
 11177  003ADA                     u10490:
 11178  003ADA  0A20               	xorlw	32
 11179  003ADC  B4D8               	btfsc	status,2,c
 11180  003ADE  EF73  F01D         	goto	u10501
 11181  003AE2  EF75  F01D         	goto	u10500
 11182  003AE6                     u10501:
 11183  003AE6  EF9F  F01D         	goto	l8555
 11184  003AEA                     u10500:
 11185  003AEA  0EF7               	movlw	247
 11186  003AEC  0100               	movlb	0	; () banked
 11187  003AEE  6F98               	movwf	??_atoi& (0+255),b
 11188  003AF0  0EFF               	movlw	255
 11189  003AF2  6F99               	movwf	(??_atoi+1)& (0+255),b
 11190  003AF4  C096  FFF6         	movff	atoi@s,tblptrl
 11191  003AF8  C097  FFF7         	movff	atoi@s+1,tblptrh
 11192  003AFC  0E00               	movlw	low (__mediumconst shr (0+16))
 11193  003AFE  6EF8               	movwf	tblptru,c
 11194  003B00  0E0E               	movlw	(high __ramtop+-1)
 11195  003B02  64F7               	cpfsgt	tblptrh,c
 11196  003B04  D003               	bra	u10517
 11197  003B06  0008               	tblrd		*
 11198  003B08  50F5               	movf	tablat,w,c
 11199  003B0A  D005               	bra	u10510
 11200  003B0C                     u10517:
 11201  003B0C  CFF6 FFE9          	movff	tblptrl,fsr0l
 11202  003B10  CFF7 FFEA          	movff	tblptrh,fsr0h
 11203  003B14  50EF               	movf	indf0,w,c
 11204  003B16                     u10510:
 11205  003B16  0100               	movlb	0	; () banked
 11206  003B18  6F9A               	movwf	(??_atoi+2)& (0+255),b
 11207  003B1A  6B9B               	clrf	(??_atoi+3)& (0+255),b
 11208  003B1C  5198               	movf	??_atoi& (0+255),w,b
 11209  003B1E  279A               	addwf	(??_atoi+2)& (0+255),f,b
 11210  003B20  5199               	movf	(??_atoi+1)& (0+255),w,b
 11211  003B22  239B               	addwfc	(??_atoi+3)& (0+255),f,b
 11212  003B24  519B               	movf	(??_atoi+3)& (0+255),w,b
 11213  003B26  E109               	bnz	u10520
 11214  003B28  0E05               	movlw	5
 11215  003B2A  5D9A               	subwf	(??_atoi+2)& (0+255),w,b
 11216  003B2C  A0D8               	btfss	status,0,c
 11217  003B2E  EF9B  F01D         	goto	u10521
 11218  003B32  EF9D  F01D         	goto	u10520
 11219  003B36                     u10521:
 11220  003B36  EF9F  F01D         	goto	l8555
 11221  003B3A                     u10520:
 11222  003B3A                     
 11223                           ; BSR set to: 0
 11224  003B3A  0E00               	movlw	0
 11225  003B3C  6FA2               	movwf	_atoi$2437& (0+255),b
 11226  003B3E                     l8555:
 11227  003B3E  C0A2  F09E         	movff	_atoi$2437,_atoi$2436
 11228  003B42  0100               	movlb	0	; () banked
 11229  003B44  6B9F               	clrf	(_atoi$2436+1)& (0+255),b
 11230  003B46                     
 11231                           ; BSR set to: 0
 11232  003B46  519E               	movf	_atoi$2436& (0+255),w,b
 11233  003B48  119F               	iorwf	(_atoi$2436+1)& (0+255),w,b
 11234  003B4A  A4D8               	btfss	status,2,c
 11235  003B4C  EFAA  F01D         	goto	u10531
 11236  003B50  EFAC  F01D         	goto	u10530
 11237  003B54                     u10531:
 11238  003B54  EF58  F01D         	goto	l8545
 11239  003B58                     u10530:
 11240  003B58  EFB6  F01D         	goto	l8565
 11241  003B5C                     l8561:
 11242                           
 11243                           ; BSR set to: 0
 11244  003B5C  0E00               	movlw	0
 11245  003B5E  6F9D               	movwf	(atoi@neg+1)& (0+255),b
 11246  003B60  0E01               	movlw	1
 11247  003B62  6F9C               	movwf	atoi@neg& (0+255),b
 11248  003B64                     l8563:
 11249                           
 11250                           ; BSR set to: 0
 11251  003B64  4B96               	infsnz	atoi@s& (0+255),f,b
 11252  003B66  2B97               	incf	(atoi@s+1)& (0+255),f,b
 11253  003B68  EF05  F01E         	goto	l8571
 11254  003B6C                     l8565:
 11255                           
 11256                           ; BSR set to: 0
 11257  003B6C  C096  FFF6         	movff	atoi@s,tblptrl
 11258  003B70  C097  FFF7         	movff	atoi@s+1,tblptrh
 11259  003B74  0E00               	movlw	low (__mediumconst shr (0+16))
 11260  003B76  6EF8               	movwf	tblptru,c
 11261  003B78  0E0E               	movlw	(high __ramtop+-1)
 11262  003B7A  64F7               	cpfsgt	tblptrh,c
 11263  003B7C  D003               	bra	u10547
 11264  003B7E  0008               	tblrd		*
 11265  003B80  50F5               	movf	tablat,w,c
 11266  003B82  D005               	bra	u10540
 11267  003B84                     u10547:
 11268  003B84  CFF6 FFE9          	movff	tblptrl,fsr0l
 11269  003B88  CFF7 FFEA          	movff	tblptrh,fsr0h
 11270  003B8C  50EF               	movf	indf0,w,c
 11271  003B8E                     u10540:
 11272  003B8E  0100               	movlb	0	; () banked
 11273  003B90  6F98               	movwf	??_atoi& (0+255),b
 11274  003B92  6B99               	clrf	(??_atoi+1)& (0+255),b
 11275                           
 11276                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11277                           ; Switch size 1, requested type "simple"
 11278                           ; Number of cases is 1, Range of values is 0 to 0
 11279                           ; switch strategies available:
 11280                           ; Name         Instructions Cycles
 11281                           ; simple_byte            4     3 (average)
 11282                           ;	Chosen strategy is simple_byte
 11283  003B94  5199               	movf	(??_atoi+1)& (0+255),w,b
 11284  003B96  0A00               	xorlw	0	; case 0
 11285  003B98  B4D8               	btfsc	status,2,c
 11286  003B9A  EFD1  F01D         	goto	l9963
 11287  003B9E  EF05  F01E         	goto	l8571
 11288  003BA2                     l9963:
 11289                           
 11290                           ; BSR set to: 0
 11291                           ; Switch size 1, requested type "simple"
 11292                           ; Number of cases is 2, Range of values is 43 to 45
 11293                           ; switch strategies available:
 11294                           ; Name         Instructions Cycles
 11295                           ; simple_byte            7     4 (average)
 11296                           ;	Chosen strategy is simple_byte
 11297  003BA2  5198               	movf	??_atoi& (0+255),w,b
 11298  003BA4  0A2B               	xorlw	43	; case 43
 11299  003BA6  B4D8               	btfsc	status,2,c
 11300  003BA8  EFB2  F01D         	goto	l8563
 11301  003BAC  0A06               	xorlw	6	; case 45
 11302  003BAE  B4D8               	btfsc	status,2,c
 11303  003BB0  EFAE  F01D         	goto	l8561
 11304  003BB4  EF05  F01E         	goto	l8571
 11305  003BB8                     l8567:
 11306                           
 11307                           ; BSR set to: 0
 11308  003BB8  C0A3  F08F         	movff	atoi@n,___wmul@multiplier
 11309  003BBC  C0A4  F090         	movff	atoi@n+1,___wmul@multiplier+1
 11310  003BC0  0E00               	movlw	0
 11311  003BC2  6F92               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11312  003BC4  0E0A               	movlw	10
 11313  003BC6  6F91               	movwf	___wmul@multiplicand& (0+255),b
 11314  003BC8  ECC9  F033         	call	___wmul	;wreg free
 11315  003BCC  C096  FFF6         	movff	atoi@s,tblptrl
 11316  003BD0  C097  FFF7         	movff	atoi@s+1,tblptrh
 11317  003BD4  0E00               	movlw	low (__mediumconst shr (0+16))
 11318  003BD6  6EF8               	movwf	tblptru,c
 11319  003BD8  0E0E               	movlw	(high __ramtop+-1)
 11320  003BDA  64F7               	cpfsgt	tblptrh,c
 11321  003BDC  D003               	bra	u10557
 11322  003BDE  0008               	tblrd		*
 11323  003BE0  50F5               	movf	tablat,w,c
 11324  003BE2  D005               	bra	u10550
 11325  003BE4                     u10557:
 11326  003BE4  CFF6 FFE9          	movff	tblptrl,fsr0l
 11327  003BE8  CFF7 FFEA          	movff	tblptrh,fsr0h
 11328  003BEC  50EF               	movf	indf0,w,c
 11329  003BEE                     u10550:
 11330  003BEE  0100               	movlb	0	; () banked
 11331  003BF0  6F98               	movwf	??_atoi& (0+255),b
 11332  003BF2  5198               	movf	??_atoi& (0+255),w,b
 11333  003BF4  5F8F               	subwf	?___wmul& (0+255),f,b
 11334  003BF6  0E00               	movlw	0
 11335  003BF8  5B90               	subwfb	(?___wmul+1)& (0+255),f,b
 11336  003BFA  0E30               	movlw	48
 11337  003BFC  258F               	addwf	?___wmul& (0+255),w,b
 11338  003BFE  6FA3               	movwf	atoi@n& (0+255),b
 11339  003C00  0E00               	movlw	0
 11340  003C02  2190               	addwfc	(?___wmul+1)& (0+255),w,b
 11341  003C04  6FA4               	movwf	(atoi@n+1)& (0+255),b
 11342  003C06  EFB2  F01D         	goto	l8563
 11343  003C0A                     l8571:
 11344                           
 11345                           ; BSR set to: 0
 11346  003C0A  0ED0               	movlw	208
 11347  003C0C  6F98               	movwf	??_atoi& (0+255),b
 11348  003C0E  0EFF               	movlw	255
 11349  003C10  6F99               	movwf	(??_atoi+1)& (0+255),b
 11350  003C12  C096  FFF6         	movff	atoi@s,tblptrl
 11351  003C16  C097  FFF7         	movff	atoi@s+1,tblptrh
 11352  003C1A  0E00               	movlw	low (__mediumconst shr (0+16))
 11353  003C1C  6EF8               	movwf	tblptru,c
 11354  003C1E  0E0E               	movlw	(high __ramtop+-1)
 11355  003C20  64F7               	cpfsgt	tblptrh,c
 11356  003C22  D003               	bra	u10567
 11357  003C24  0008               	tblrd		*
 11358  003C26  50F5               	movf	tablat,w,c
 11359  003C28  D005               	bra	u10560
 11360  003C2A                     u10567:
 11361  003C2A  CFF6 FFE9          	movff	tblptrl,fsr0l
 11362  003C2E  CFF7 FFEA          	movff	tblptrh,fsr0h
 11363  003C32  50EF               	movf	indf0,w,c
 11364  003C34                     u10560:
 11365  003C34  0100               	movlb	0	; () banked
 11366  003C36  6F9A               	movwf	(??_atoi+2)& (0+255),b
 11367  003C38  6B9B               	clrf	(??_atoi+3)& (0+255),b
 11368  003C3A  5198               	movf	??_atoi& (0+255),w,b
 11369  003C3C  279A               	addwf	(??_atoi+2)& (0+255),f,b
 11370  003C3E  5199               	movf	(??_atoi+1)& (0+255),w,b
 11371  003C40  239B               	addwfc	(??_atoi+3)& (0+255),f,b
 11372  003C42  519B               	movf	(??_atoi+3)& (0+255),w,b
 11373  003C44  E10A               	bnz	u10570
 11374  003C46  0E0A               	movlw	10
 11375  003C48  5D9A               	subwf	(??_atoi+2)& (0+255),w,b
 11376  003C4A  A0D8               	btfss	status,0,c
 11377  003C4C  EF2A  F01E         	goto	u10571
 11378  003C50  EF2D  F01E         	goto	u10570
 11379  003C54                     u10571:
 11380  003C54  0E01               	movlw	1
 11381  003C56  EF2E  F01E         	goto	u10580
 11382  003C5A                     u10570:
 11383  003C5A  0E00               	movlw	0
 11384  003C5C                     u10580:
 11385  003C5C  6FA0               	movwf	_atoi$2438& (0+255),b
 11386  003C5E  6BA1               	clrf	(_atoi$2438+1)& (0+255),b
 11387  003C60                     
 11388                           ; BSR set to: 0
 11389  003C60  51A0               	movf	_atoi$2438& (0+255),w,b
 11390  003C62  11A1               	iorwf	(_atoi$2438+1)& (0+255),w,b
 11391  003C64  A4D8               	btfss	status,2,c
 11392  003C66  EF37  F01E         	goto	u10591
 11393  003C6A  EF39  F01E         	goto	u10590
 11394  003C6E                     u10591:
 11395  003C6E  EFDC  F01D         	goto	l8567
 11396  003C72                     u10590:
 11397  003C72                     
 11398                           ; BSR set to: 0
 11399  003C72  519C               	movf	atoi@neg& (0+255),w,b
 11400  003C74  119D               	iorwf	(atoi@neg+1)& (0+255),w,b
 11401  003C76  A4D8               	btfss	status,2,c
 11402  003C78  EF40  F01E         	goto	u10601
 11403  003C7C  EF42  F01E         	goto	u10600
 11404  003C80                     u10601:
 11405  003C80  EF50  F01E         	goto	l1629
 11406  003C84                     u10600:
 11407  003C84                     
 11408                           ; BSR set to: 0
 11409  003C84  C0A3  F098         	movff	atoi@n,??_atoi
 11410  003C88  C0A4  F099         	movff	atoi@n+1,??_atoi+1
 11411  003C8C  1F98               	comf	??_atoi& (0+255),f,b
 11412  003C8E  1F99               	comf	(??_atoi+1)& (0+255),f,b
 11413  003C90  4B98               	infsnz	??_atoi& (0+255),f,b
 11414  003C92  2B99               	incf	(??_atoi+1)& (0+255),f,b
 11415  003C94  C098  F096         	movff	??_atoi,?_atoi
 11416  003C98  C099  F097         	movff	??_atoi+1,?_atoi+1
 11417  003C9C  EF54  F01E         	goto	l1632
 11418  003CA0                     l1629:
 11419                           
 11420                           ; BSR set to: 0
 11421  003CA0  C0A3  F096         	movff	atoi@n,?_atoi
 11422  003CA4  C0A4  F097         	movff	atoi@n+1,?_atoi+1
 11423  003CA8                     l1632:
 11424                           
 11425                           ; BSR set to: 0
 11426  003CA8  0012               	return		;funcret
 11427  003CAA                     __end_of_atoi:
 11428                           	opt callstack 0
 11429                           
 11430 ;; *************** function _isspace *****************
 11431 ;; Defined at:
 11432 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 11433 ;; Parameters:    Size  Location     Type
 11434 ;;  c               2   47[BANK0 ] int 
 11435 ;; Auto vars:     Size  Location     Type
 11436 ;;		None
 11437 ;; Return value:  Size  Location     Type
 11438 ;;                  2   47[BANK0 ] int 
 11439 ;; Registers used:
 11440 ;;		wreg, status,2, status,0
 11441 ;; Tracked objects:
 11442 ;;		On entry : 0/0
 11443 ;;		On exit  : 0/0
 11444 ;;		Unchanged: 0/0
 11445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11446 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11447 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11448 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11449 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11450 ;;Total ram usage:        7 bytes
 11451 ;; Hardware stack levels used:    1
 11452 ;; Hardware stack levels required when called:   13
 11453 ;; This function calls:
 11454 ;;		Nothing
 11455 ;; This function is called by:
 11456 ;;		_atoi
 11457 ;; This function uses a non-reentrant model
 11458 ;;
 11459                           
 11460                           	psect	text34
 11461  005FF4                     __ptext34:
 11462                           	opt callstack 0
 11463  005FF4                     _isspace:
 11464                           	opt callstack 12
 11465  005FF4  0E01               	movlw	1
 11466  005FF6  0100               	movlb	0	; () banked
 11467  005FF8  6F95               	movwf	_isspace$2463& (0+255),b
 11468  005FFA                     
 11469                           ; BSR set to: 0
 11470  005FFA  0E20               	movlw	32
 11471  005FFC  198F               	xorwf	isspace@c& (0+255),w,b
 11472  005FFE  1190               	iorwf	(isspace@c+1)& (0+255),w,b
 11473  006000  B4D8               	btfsc	status,2,c
 11474  006002  EF05  F030         	goto	u10021
 11475  006006  EF07  F030         	goto	u10020
 11476  00600A                     u10021:
 11477  00600A  EF20  F030         	goto	l8207
 11478  00600E                     u10020:
 11479  00600E                     
 11480                           ; BSR set to: 0
 11481  00600E  0EF7               	movlw	247
 11482  006010  6F91               	movwf	??_isspace& (0+255),b
 11483  006012  0EFF               	movlw	255
 11484  006014  6F92               	movwf	(??_isspace+1)& (0+255),b
 11485  006016  C08F  F093         	movff	isspace@c,??_isspace+2
 11486  00601A  C090  F094         	movff	isspace@c+1,??_isspace+3
 11487  00601E  5191               	movf	??_isspace& (0+255),w,b
 11488  006020  2793               	addwf	(??_isspace+2)& (0+255),f,b
 11489  006022  5192               	movf	(??_isspace+1)& (0+255),w,b
 11490  006024  2394               	addwfc	(??_isspace+3)& (0+255),f,b
 11491  006026  5194               	movf	(??_isspace+3)& (0+255),w,b
 11492  006028  E109               	bnz	u10030
 11493  00602A  0E05               	movlw	5
 11494  00602C  5D93               	subwf	(??_isspace+2)& (0+255),w,b
 11495  00602E  A0D8               	btfss	status,0,c
 11496  006030  EF1C  F030         	goto	u10031
 11497  006034  EF1E  F030         	goto	u10030
 11498  006038                     u10031:
 11499  006038  EF20  F030         	goto	l8207
 11500  00603C                     u10030:
 11501  00603C                     
 11502                           ; BSR set to: 0
 11503  00603C  0E00               	movlw	0
 11504  00603E  6F95               	movwf	_isspace$2463& (0+255),b
 11505  006040                     l8207:
 11506                           
 11507                           ; BSR set to: 0
 11508  006040  C095  F08F         	movff	_isspace$2463,?_isspace
 11509  006044  6B90               	clrf	(?_isspace+1)& (0+255),b
 11510  006046                     
 11511                           ; BSR set to: 0
 11512  006046  0012               	return		;funcret
 11513  006048                     __end_of_isspace:
 11514                           	opt callstack 0
 11515                           
 11516 ;; *************** function _isdigit *****************
 11517 ;; Defined at:
 11518 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 11519 ;; Parameters:    Size  Location     Type
 11520 ;;  c               2   47[BANK0 ] int 
 11521 ;; Auto vars:     Size  Location     Type
 11522 ;;		None
 11523 ;; Return value:  Size  Location     Type
 11524 ;;                  2   47[BANK0 ] int 
 11525 ;; Registers used:
 11526 ;;		wreg, status,2, status,0
 11527 ;; Tracked objects:
 11528 ;;		On entry : 0/0
 11529 ;;		On exit  : 0/0
 11530 ;;		Unchanged: 0/0
 11531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11532 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11534 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11535 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11536 ;;Total ram usage:        6 bytes
 11537 ;; Hardware stack levels used:    1
 11538 ;; Hardware stack levels required when called:   13
 11539 ;; This function calls:
 11540 ;;		Nothing
 11541 ;; This function is called by:
 11542 ;;		_vfpfcnvrt
 11543 ;;		_atoi
 11544 ;; This function uses a non-reentrant model
 11545 ;;
 11546                           
 11547                           	psect	text35
 11548  006512                     __ptext35:
 11549                           	opt callstack 0
 11550  006512                     _isdigit:
 11551                           	opt callstack 13
 11552  006512  0ED0               	movlw	208
 11553  006514  0100               	movlb	0	; () banked
 11554  006516  6F91               	movwf	??_isdigit& (0+255),b
 11555  006518  0EFF               	movlw	255
 11556  00651A  6F92               	movwf	(??_isdigit+1)& (0+255),b
 11557  00651C  C08F  F093         	movff	isdigit@c,??_isdigit+2
 11558  006520  C090  F094         	movff	isdigit@c+1,??_isdigit+3
 11559  006524  5191               	movf	??_isdigit& (0+255),w,b
 11560  006526  2793               	addwf	(??_isdigit+2)& (0+255),f,b
 11561  006528  5192               	movf	(??_isdigit+1)& (0+255),w,b
 11562  00652A  2394               	addwfc	(??_isdigit+3)& (0+255),f,b
 11563  00652C  5194               	movf	(??_isdigit+3)& (0+255),w,b
 11564  00652E  E10A               	bnz	u9800
 11565  006530  0E0A               	movlw	10
 11566  006532  5D93               	subwf	(??_isdigit+2)& (0+255),w,b
 11567  006534  A0D8               	btfss	status,0,c
 11568  006536  EF9F  F032         	goto	u9801
 11569  00653A  EFA2  F032         	goto	u9800
 11570  00653E                     u9801:
 11571  00653E  0E01               	movlw	1
 11572  006540  EFA3  F032         	goto	u9810
 11573  006544                     u9800:
 11574  006544  0E00               	movlw	0
 11575  006546                     u9810:
 11576  006546  6F8F               	movwf	?_isdigit& (0+255),b
 11577  006548  6B90               	clrf	(?_isdigit+1)& (0+255),b
 11578  00654A                     
 11579                           ; BSR set to: 0
 11580  00654A  0012               	return		;funcret
 11581  00654C                     __end_of_isdigit:
 11582                           	opt callstack 0
 11583                           
 11584 ;; *************** function ___wmul *****************
 11585 ;; Defined at:
 11586 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 11587 ;; Parameters:    Size  Location     Type
 11588 ;;  multiplier      2   47[BANK0 ] unsigned int 
 11589 ;;  multiplicand    2   49[BANK0 ] unsigned int 
 11590 ;; Auto vars:     Size  Location     Type
 11591 ;;  product         2   51[BANK0 ] unsigned int 
 11592 ;; Return value:  Size  Location     Type
 11593 ;;                  2   47[BANK0 ] unsigned int 
 11594 ;; Registers used:
 11595 ;;		wreg, status,2, status,0, prodl, prodh
 11596 ;; Tracked objects:
 11597 ;;		On entry : 0/0
 11598 ;;		On exit  : 0/0
 11599 ;;		Unchanged: 0/0
 11600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11601 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11602 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11604 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11605 ;;Total ram usage:        6 bytes
 11606 ;; Hardware stack levels used:    1
 11607 ;; Hardware stack levels required when called:   13
 11608 ;; This function calls:
 11609 ;;		Nothing
 11610 ;; This function is called by:
 11611 ;;		_atoi
 11612 ;; This function uses a non-reentrant model
 11613 ;;
 11614                           
 11615                           	psect	text36
 11616  006792                     __ptext36:
 11617                           	opt callstack 0
 11618  006792                     ___wmul:
 11619                           	opt callstack 12
 11620  006792  0100               	movlb	0	; () banked
 11621  006794  518F               	movf	___wmul@multiplier& (0+255),w,b
 11622  006796  0391               	mulwf	___wmul@multiplicand& (0+255),b
 11623  006798  CFF3 F093          	movff	prodl,___wmul@product
 11624  00679C  CFF4 F094          	movff	prodh,___wmul@product+1
 11625  0067A0  518F               	movf	___wmul@multiplier& (0+255),w,b
 11626  0067A2  0392               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11627  0067A4  50F3               	movf	243,w,c
 11628  0067A6  2794               	addwf	(___wmul@product+1)& (0+255),f,b
 11629  0067A8  5190               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11630  0067AA  0391               	mulwf	___wmul@multiplicand& (0+255),b
 11631  0067AC  50F3               	movf	243,w,c
 11632  0067AE  2794               	addwf	(___wmul@product+1)& (0+255),f,b
 11633  0067B0                     
 11634                           ; BSR set to: 0
 11635  0067B0  C093  F08F         	movff	___wmul@product,?___wmul
 11636  0067B4  C094  F090         	movff	___wmul@product+1,?___wmul+1
 11637  0067B8                     
 11638                           ; BSR set to: 0
 11639  0067B8  0012               	return		;funcret
 11640  0067BA                     __end_of___wmul:
 11641                           	opt callstack 0
 11642                           
 11643 ;; *************** function _lcd_init *****************
 11644 ;; Defined at:
 11645 ;;		line 34 in file "lib_ili9341.c"
 11646 ;; Parameters:    Size  Location     Type
 11647 ;;		None
 11648 ;; Auto vars:     Size  Location     Type
 11649 ;;		None
 11650 ;; Return value:  Size  Location     Type
 11651 ;;                  1    wreg      void 
 11652 ;; Registers used:
 11653 ;;		wreg, status,2, status,0, cstack
 11654 ;; Tracked objects:
 11655 ;;		On entry : 0/0
 11656 ;;		On exit  : 0/0
 11657 ;;		Unchanged: 0/0
 11658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11663 ;;Total ram usage:        0 bytes
 11664 ;; Hardware stack levels used:    1
 11665 ;; Hardware stack levels required when called:   18
 11666 ;; This function calls:
 11667 ;;		_lcd_fill
 11668 ;;		_lcd_send
 11669 ;;		_msDelay
 11670 ;; This function is called by:
 11671 ;;		_main
 11672 ;; This function uses a non-reentrant model
 11673 ;;
 11674                           
 11675                           	psect	text37
 11676  0025D8                     __ptext37:
 11677                           	opt callstack 0
 11678  0025D8                     _lcd_init:
 11679                           	opt callstack 12
 11680  0025D8                     
 11681                           ;lib_ili9341.c: 37:     lcd_send(0, 0x01);
 11682  0025D8  0E01               	movlw	1
 11683  0025DA  0100               	movlb	0	; () banked
 11684  0025DC  6F90               	movwf	lcd_send@value& (0+255),b
 11685  0025DE  0E00               	movlw	0
 11686  0025E0  EC14  F034         	call	_lcd_send
 11687  0025E4                     
 11688                           ;lib_ili9341.c: 38:     msDelay(150);
 11689  0025E4  0E96               	movlw	150
 11690  0025E6  ECA6  F032         	call	_msDelay
 11691  0025EA                     
 11692                           ;lib_ili9341.c: 40:     lcd_send(0,0xEF);
 11693  0025EA  0EEF               	movlw	239
 11694  0025EC  0100               	movlb	0	; () banked
 11695  0025EE  6F90               	movwf	lcd_send@value& (0+255),b
 11696  0025F0  0E00               	movlw	0
 11697  0025F2  EC14  F034         	call	_lcd_send
 11698  0025F6                     
 11699                           ;lib_ili9341.c: 41:     lcd_send(1,0x03);
 11700  0025F6  0E03               	movlw	3
 11701  0025F8  0100               	movlb	0	; () banked
 11702  0025FA  6F90               	movwf	lcd_send@value& (0+255),b
 11703  0025FC  0E01               	movlw	1
 11704  0025FE  EC14  F034         	call	_lcd_send
 11705  002602                     
 11706                           ;lib_ili9341.c: 42:     lcd_send(1,0x80);
 11707  002602  0E80               	movlw	128
 11708  002604  0100               	movlb	0	; () banked
 11709  002606  6F90               	movwf	lcd_send@value& (0+255),b
 11710  002608  0E01               	movlw	1
 11711  00260A  EC14  F034         	call	_lcd_send
 11712  00260E                     
 11713                           ;lib_ili9341.c: 43:     lcd_send(1,0x02);
 11714  00260E  0E02               	movlw	2
 11715  002610  0100               	movlb	0	; () banked
 11716  002612  6F90               	movwf	lcd_send@value& (0+255),b
 11717  002614  0E01               	movlw	1
 11718  002616  EC14  F034         	call	_lcd_send
 11719  00261A                     
 11720                           ;lib_ili9341.c: 44:     lcd_send(0,0xCF);
 11721  00261A  0ECF               	movlw	207
 11722  00261C  0100               	movlb	0	; () banked
 11723  00261E  6F90               	movwf	lcd_send@value& (0+255),b
 11724  002620  0E00               	movlw	0
 11725  002622  EC14  F034         	call	_lcd_send
 11726  002626                     
 11727                           ;lib_ili9341.c: 45:     lcd_send(1,0x00);
 11728  002626  0E00               	movlw	0
 11729  002628  0100               	movlb	0	; () banked
 11730  00262A  6F90               	movwf	lcd_send@value& (0+255),b
 11731  00262C  0E01               	movlw	1
 11732  00262E  EC14  F034         	call	_lcd_send
 11733  002632                     
 11734                           ;lib_ili9341.c: 46:     lcd_send(1,0XC1);
 11735  002632  0EC1               	movlw	193
 11736  002634  0100               	movlb	0	; () banked
 11737  002636  6F90               	movwf	lcd_send@value& (0+255),b
 11738  002638  0E01               	movlw	1
 11739  00263A  EC14  F034         	call	_lcd_send
 11740  00263E                     
 11741                           ;lib_ili9341.c: 47:     lcd_send(1,0X30);
 11742  00263E  0E30               	movlw	48
 11743  002640  0100               	movlb	0	; () banked
 11744  002642  6F90               	movwf	lcd_send@value& (0+255),b
 11745  002644  0E01               	movlw	1
 11746  002646  EC14  F034         	call	_lcd_send
 11747  00264A                     
 11748                           ;lib_ili9341.c: 48:     lcd_send(0,0xED);
 11749  00264A  0EED               	movlw	237
 11750  00264C  0100               	movlb	0	; () banked
 11751  00264E  6F90               	movwf	lcd_send@value& (0+255),b
 11752  002650  0E00               	movlw	0
 11753  002652  EC14  F034         	call	_lcd_send
 11754  002656                     
 11755                           ;lib_ili9341.c: 49:     lcd_send(1,0x64);
 11756  002656  0E64               	movlw	100
 11757  002658  0100               	movlb	0	; () banked
 11758  00265A  6F90               	movwf	lcd_send@value& (0+255),b
 11759  00265C  0E01               	movlw	1
 11760  00265E  EC14  F034         	call	_lcd_send
 11761  002662                     
 11762                           ;lib_ili9341.c: 50:     lcd_send(1,0x03);
 11763  002662  0E03               	movlw	3
 11764  002664  0100               	movlb	0	; () banked
 11765  002666  6F90               	movwf	lcd_send@value& (0+255),b
 11766  002668  0E01               	movlw	1
 11767  00266A  EC14  F034         	call	_lcd_send
 11768  00266E                     
 11769                           ;lib_ili9341.c: 51:     lcd_send(1,0X12);
 11770  00266E  0E12               	movlw	18
 11771  002670  0100               	movlb	0	; () banked
 11772  002672  6F90               	movwf	lcd_send@value& (0+255),b
 11773  002674  0E01               	movlw	1
 11774  002676  EC14  F034         	call	_lcd_send
 11775  00267A                     
 11776                           ;lib_ili9341.c: 52:     lcd_send(1,0X81);
 11777  00267A  0E81               	movlw	129
 11778  00267C  0100               	movlb	0	; () banked
 11779  00267E  6F90               	movwf	lcd_send@value& (0+255),b
 11780  002680  0E01               	movlw	1
 11781  002682  EC14  F034         	call	_lcd_send
 11782  002686                     
 11783                           ;lib_ili9341.c: 53:     lcd_send(0,0xE8);
 11784  002686  0EE8               	movlw	232
 11785  002688  0100               	movlb	0	; () banked
 11786  00268A  6F90               	movwf	lcd_send@value& (0+255),b
 11787  00268C  0E00               	movlw	0
 11788  00268E  EC14  F034         	call	_lcd_send
 11789  002692                     
 11790                           ;lib_ili9341.c: 54:     lcd_send(1,0x85);
 11791  002692  0E85               	movlw	133
 11792  002694  0100               	movlb	0	; () banked
 11793  002696  6F90               	movwf	lcd_send@value& (0+255),b
 11794  002698  0E01               	movlw	1
 11795  00269A  EC14  F034         	call	_lcd_send
 11796  00269E                     
 11797                           ;lib_ili9341.c: 55:     lcd_send(1,0x00);
 11798  00269E  0E00               	movlw	0
 11799  0026A0  0100               	movlb	0	; () banked
 11800  0026A2  6F90               	movwf	lcd_send@value& (0+255),b
 11801  0026A4  0E01               	movlw	1
 11802  0026A6  EC14  F034         	call	_lcd_send
 11803  0026AA                     
 11804                           ;lib_ili9341.c: 56:     lcd_send(1,0x78);
 11805  0026AA  0E78               	movlw	120
 11806  0026AC  0100               	movlb	0	; () banked
 11807  0026AE  6F90               	movwf	lcd_send@value& (0+255),b
 11808  0026B0  0E01               	movlw	1
 11809  0026B2  EC14  F034         	call	_lcd_send
 11810  0026B6                     
 11811                           ;lib_ili9341.c: 57:     lcd_send(0,0xCB);
 11812  0026B6  0ECB               	movlw	203
 11813  0026B8  0100               	movlb	0	; () banked
 11814  0026BA  6F90               	movwf	lcd_send@value& (0+255),b
 11815  0026BC  0E00               	movlw	0
 11816  0026BE  EC14  F034         	call	_lcd_send
 11817  0026C2                     
 11818                           ;lib_ili9341.c: 58:     lcd_send(1,0x39);
 11819  0026C2  0E39               	movlw	57
 11820  0026C4  0100               	movlb	0	; () banked
 11821  0026C6  6F90               	movwf	lcd_send@value& (0+255),b
 11822  0026C8  0E01               	movlw	1
 11823  0026CA  EC14  F034         	call	_lcd_send
 11824  0026CE                     
 11825                           ;lib_ili9341.c: 59:     lcd_send(1,0x2C);
 11826  0026CE  0E2C               	movlw	44
 11827  0026D0  0100               	movlb	0	; () banked
 11828  0026D2  6F90               	movwf	lcd_send@value& (0+255),b
 11829  0026D4  0E01               	movlw	1
 11830  0026D6  EC14  F034         	call	_lcd_send
 11831  0026DA                     
 11832                           ;lib_ili9341.c: 60:     lcd_send(1,0x00);
 11833  0026DA  0E00               	movlw	0
 11834  0026DC  0100               	movlb	0	; () banked
 11835  0026DE  6F90               	movwf	lcd_send@value& (0+255),b
 11836  0026E0  0E01               	movlw	1
 11837  0026E2  EC14  F034         	call	_lcd_send
 11838  0026E6                     
 11839                           ;lib_ili9341.c: 61:     lcd_send(1,0x34);
 11840  0026E6  0E34               	movlw	52
 11841  0026E8  0100               	movlb	0	; () banked
 11842  0026EA  6F90               	movwf	lcd_send@value& (0+255),b
 11843  0026EC  0E01               	movlw	1
 11844  0026EE  EC14  F034         	call	_lcd_send
 11845  0026F2                     
 11846                           ;lib_ili9341.c: 62:     lcd_send(1,0x02);
 11847  0026F2  0E02               	movlw	2
 11848  0026F4  0100               	movlb	0	; () banked
 11849  0026F6  6F90               	movwf	lcd_send@value& (0+255),b
 11850  0026F8  0E01               	movlw	1
 11851  0026FA  EC14  F034         	call	_lcd_send
 11852  0026FE                     
 11853                           ;lib_ili9341.c: 63:     lcd_send(0,0xF7);
 11854  0026FE  0EF7               	movlw	247
 11855  002700  0100               	movlb	0	; () banked
 11856  002702  6F90               	movwf	lcd_send@value& (0+255),b
 11857  002704  0E00               	movlw	0
 11858  002706  EC14  F034         	call	_lcd_send
 11859  00270A                     
 11860                           ;lib_ili9341.c: 64:     lcd_send(1,0x20);
 11861  00270A  0E20               	movlw	32
 11862  00270C  0100               	movlb	0	; () banked
 11863  00270E  6F90               	movwf	lcd_send@value& (0+255),b
 11864  002710  0E01               	movlw	1
 11865  002712  EC14  F034         	call	_lcd_send
 11866  002716                     
 11867                           ;lib_ili9341.c: 65:     lcd_send(0,0xEA);
 11868  002716  0EEA               	movlw	234
 11869  002718  0100               	movlb	0	; () banked
 11870  00271A  6F90               	movwf	lcd_send@value& (0+255),b
 11871  00271C  0E00               	movlw	0
 11872  00271E  EC14  F034         	call	_lcd_send
 11873  002722                     
 11874                           ;lib_ili9341.c: 66:     lcd_send(1,0x00);
 11875  002722  0E00               	movlw	0
 11876  002724  0100               	movlb	0	; () banked
 11877  002726  6F90               	movwf	lcd_send@value& (0+255),b
 11878  002728  0E01               	movlw	1
 11879  00272A  EC14  F034         	call	_lcd_send
 11880  00272E                     
 11881                           ;lib_ili9341.c: 67:     lcd_send(1,0x00);
 11882  00272E  0E00               	movlw	0
 11883  002730  0100               	movlb	0	; () banked
 11884  002732  6F90               	movwf	lcd_send@value& (0+255),b
 11885  002734  0E01               	movlw	1
 11886  002736  EC14  F034         	call	_lcd_send
 11887  00273A                     
 11888                           ;lib_ili9341.c: 68:     lcd_send(0,0xC0);
 11889  00273A  0EC0               	movlw	192
 11890  00273C  0100               	movlb	0	; () banked
 11891  00273E  6F90               	movwf	lcd_send@value& (0+255),b
 11892  002740  0E00               	movlw	0
 11893  002742  EC14  F034         	call	_lcd_send
 11894  002746                     
 11895                           ;lib_ili9341.c: 69:     lcd_send(1,0x23);
 11896  002746  0E23               	movlw	35
 11897  002748  0100               	movlb	0	; () banked
 11898  00274A  6F90               	movwf	lcd_send@value& (0+255),b
 11899  00274C  0E01               	movlw	1
 11900  00274E  EC14  F034         	call	_lcd_send
 11901  002752                     
 11902                           ;lib_ili9341.c: 70:     lcd_send(0,0xC1);
 11903  002752  0EC1               	movlw	193
 11904  002754  0100               	movlb	0	; () banked
 11905  002756  6F90               	movwf	lcd_send@value& (0+255),b
 11906  002758  0E00               	movlw	0
 11907  00275A  EC14  F034         	call	_lcd_send
 11908  00275E                     
 11909                           ;lib_ili9341.c: 71:     lcd_send(1,0x10);
 11910  00275E  0E10               	movlw	16
 11911  002760  0100               	movlb	0	; () banked
 11912  002762  6F90               	movwf	lcd_send@value& (0+255),b
 11913  002764  0E01               	movlw	1
 11914  002766  EC14  F034         	call	_lcd_send
 11915  00276A                     
 11916                           ;lib_ili9341.c: 72:     lcd_send(0,0xC5);
 11917  00276A  0EC5               	movlw	197
 11918  00276C  0100               	movlb	0	; () banked
 11919  00276E  6F90               	movwf	lcd_send@value& (0+255),b
 11920  002770  0E00               	movlw	0
 11921  002772  EC14  F034         	call	_lcd_send
 11922  002776                     
 11923                           ;lib_ili9341.c: 73:     lcd_send(1,0x3e);
 11924  002776  0E3E               	movlw	62
 11925  002778  0100               	movlb	0	; () banked
 11926  00277A  6F90               	movwf	lcd_send@value& (0+255),b
 11927  00277C  0E01               	movlw	1
 11928  00277E  EC14  F034         	call	_lcd_send
 11929  002782                     
 11930                           ;lib_ili9341.c: 74:     lcd_send(1,0x28);
 11931  002782  0E28               	movlw	40
 11932  002784  0100               	movlb	0	; () banked
 11933  002786  6F90               	movwf	lcd_send@value& (0+255),b
 11934  002788  0E01               	movlw	1
 11935  00278A  EC14  F034         	call	_lcd_send
 11936  00278E                     
 11937                           ;lib_ili9341.c: 75:     lcd_send(0,0xC7);
 11938  00278E  0EC7               	movlw	199
 11939  002790  0100               	movlb	0	; () banked
 11940  002792  6F90               	movwf	lcd_send@value& (0+255),b
 11941  002794  0E00               	movlw	0
 11942  002796  EC14  F034         	call	_lcd_send
 11943  00279A                     
 11944                           ;lib_ili9341.c: 76:     lcd_send(1,0x86);
 11945  00279A  0E86               	movlw	134
 11946  00279C  0100               	movlb	0	; () banked
 11947  00279E  6F90               	movwf	lcd_send@value& (0+255),b
 11948  0027A0  0E01               	movlw	1
 11949  0027A2  EC14  F034         	call	_lcd_send
 11950  0027A6                     
 11951                           ;lib_ili9341.c: 77:     lcd_send(0,0x36);
 11952  0027A6  0E36               	movlw	54
 11953  0027A8  0100               	movlb	0	; () banked
 11954  0027AA  6F90               	movwf	lcd_send@value& (0+255),b
 11955  0027AC  0E00               	movlw	0
 11956  0027AE  EC14  F034         	call	_lcd_send
 11957  0027B2                     
 11958                           ;lib_ili9341.c: 78:     lcd_send(1,0x48);
 11959  0027B2  0E48               	movlw	72
 11960  0027B4  0100               	movlb	0	; () banked
 11961  0027B6  6F90               	movwf	lcd_send@value& (0+255),b
 11962  0027B8  0E01               	movlw	1
 11963  0027BA  EC14  F034         	call	_lcd_send
 11964  0027BE                     
 11965                           ;lib_ili9341.c: 79:     lcd_send(0,0x3A);
 11966  0027BE  0E3A               	movlw	58
 11967  0027C0  0100               	movlb	0	; () banked
 11968  0027C2  6F90               	movwf	lcd_send@value& (0+255),b
 11969  0027C4  0E00               	movlw	0
 11970  0027C6  EC14  F034         	call	_lcd_send
 11971  0027CA                     
 11972                           ;lib_ili9341.c: 80:     lcd_send(1,0x55);
 11973  0027CA  0E55               	movlw	85
 11974  0027CC  0100               	movlb	0	; () banked
 11975  0027CE  6F90               	movwf	lcd_send@value& (0+255),b
 11976  0027D0  0E01               	movlw	1
 11977  0027D2  EC14  F034         	call	_lcd_send
 11978  0027D6                     
 11979                           ;lib_ili9341.c: 81:     lcd_send(0,0xB1);
 11980  0027D6  0EB1               	movlw	177
 11981  0027D8  0100               	movlb	0	; () banked
 11982  0027DA  6F90               	movwf	lcd_send@value& (0+255),b
 11983  0027DC  0E00               	movlw	0
 11984  0027DE  EC14  F034         	call	_lcd_send
 11985  0027E2                     
 11986                           ;lib_ili9341.c: 82:     lcd_send(1,0x00);
 11987  0027E2  0E00               	movlw	0
 11988  0027E4  0100               	movlb	0	; () banked
 11989  0027E6  6F90               	movwf	lcd_send@value& (0+255),b
 11990  0027E8  0E01               	movlw	1
 11991  0027EA  EC14  F034         	call	_lcd_send
 11992  0027EE                     
 11993                           ;lib_ili9341.c: 83:     lcd_send(1,0x18);
 11994  0027EE  0E18               	movlw	24
 11995  0027F0  0100               	movlb	0	; () banked
 11996  0027F2  6F90               	movwf	lcd_send@value& (0+255),b
 11997  0027F4  0E01               	movlw	1
 11998  0027F6  EC14  F034         	call	_lcd_send
 11999  0027FA                     
 12000                           ;lib_ili9341.c: 84:     lcd_send(0,0xB6);
 12001  0027FA  0EB6               	movlw	182
 12002  0027FC  0100               	movlb	0	; () banked
 12003  0027FE  6F90               	movwf	lcd_send@value& (0+255),b
 12004  002800  0E00               	movlw	0
 12005  002802  EC14  F034         	call	_lcd_send
 12006  002806                     
 12007                           ;lib_ili9341.c: 85:     lcd_send(1,0x08);
 12008  002806  0E08               	movlw	8
 12009  002808  0100               	movlb	0	; () banked
 12010  00280A  6F90               	movwf	lcd_send@value& (0+255),b
 12011  00280C  0E01               	movlw	1
 12012  00280E  EC14  F034         	call	_lcd_send
 12013  002812                     
 12014                           ;lib_ili9341.c: 86:     lcd_send(1,0x82);
 12015  002812  0E82               	movlw	130
 12016  002814  0100               	movlb	0	; () banked
 12017  002816  6F90               	movwf	lcd_send@value& (0+255),b
 12018  002818  0E01               	movlw	1
 12019  00281A  EC14  F034         	call	_lcd_send
 12020  00281E                     
 12021                           ;lib_ili9341.c: 87:     lcd_send(1,0x27);
 12022  00281E  0E27               	movlw	39
 12023  002820  0100               	movlb	0	; () banked
 12024  002822  6F90               	movwf	lcd_send@value& (0+255),b
 12025  002824  0E01               	movlw	1
 12026  002826  EC14  F034         	call	_lcd_send
 12027  00282A                     
 12028                           ;lib_ili9341.c: 88:     lcd_send(0,0xF2);
 12029  00282A  0EF2               	movlw	242
 12030  00282C  0100               	movlb	0	; () banked
 12031  00282E  6F90               	movwf	lcd_send@value& (0+255),b
 12032  002830  0E00               	movlw	0
 12033  002832  EC14  F034         	call	_lcd_send
 12034  002836                     
 12035                           ;lib_ili9341.c: 89:     lcd_send(1,0x00);
 12036  002836  0E00               	movlw	0
 12037  002838  0100               	movlb	0	; () banked
 12038  00283A  6F90               	movwf	lcd_send@value& (0+255),b
 12039  00283C  0E01               	movlw	1
 12040  00283E  EC14  F034         	call	_lcd_send
 12041  002842                     
 12042                           ;lib_ili9341.c: 90:     lcd_send(0,0x26);
 12043  002842  0E26               	movlw	38
 12044  002844  0100               	movlb	0	; () banked
 12045  002846  6F90               	movwf	lcd_send@value& (0+255),b
 12046  002848  0E00               	movlw	0
 12047  00284A  EC14  F034         	call	_lcd_send
 12048  00284E                     
 12049                           ;lib_ili9341.c: 91:     lcd_send(1,0x01);
 12050  00284E  0E01               	movlw	1
 12051  002850  0100               	movlb	0	; () banked
 12052  002852  6F90               	movwf	lcd_send@value& (0+255),b
 12053  002854  0E01               	movlw	1
 12054  002856  EC14  F034         	call	_lcd_send
 12055  00285A                     
 12056                           ;lib_ili9341.c: 92:     lcd_send(0,0xE0);
 12057  00285A  0EE0               	movlw	224
 12058  00285C  0100               	movlb	0	; () banked
 12059  00285E  6F90               	movwf	lcd_send@value& (0+255),b
 12060  002860  0E00               	movlw	0
 12061  002862  EC14  F034         	call	_lcd_send
 12062  002866                     
 12063                           ;lib_ili9341.c: 93:     lcd_send(1,0x0F);
 12064  002866  0E0F               	movlw	15
 12065  002868  0100               	movlb	0	; () banked
 12066  00286A  6F90               	movwf	lcd_send@value& (0+255),b
 12067  00286C  0E01               	movlw	1
 12068  00286E  EC14  F034         	call	_lcd_send
 12069  002872                     
 12070                           ;lib_ili9341.c: 94:     lcd_send(1,0x31);
 12071  002872  0E31               	movlw	49
 12072  002874  0100               	movlb	0	; () banked
 12073  002876  6F90               	movwf	lcd_send@value& (0+255),b
 12074  002878  0E01               	movlw	1
 12075  00287A  EC14  F034         	call	_lcd_send
 12076  00287E                     
 12077                           ;lib_ili9341.c: 95:     lcd_send(1,0x2B);
 12078  00287E  0E2B               	movlw	43
 12079  002880  0100               	movlb	0	; () banked
 12080  002882  6F90               	movwf	lcd_send@value& (0+255),b
 12081  002884  0E01               	movlw	1
 12082  002886  EC14  F034         	call	_lcd_send
 12083  00288A                     
 12084                           ;lib_ili9341.c: 96:     lcd_send(1,0x0C);
 12085  00288A  0E0C               	movlw	12
 12086  00288C  0100               	movlb	0	; () banked
 12087  00288E  6F90               	movwf	lcd_send@value& (0+255),b
 12088  002890  0E01               	movlw	1
 12089  002892  EC14  F034         	call	_lcd_send
 12090  002896                     
 12091                           ;lib_ili9341.c: 97:     lcd_send(1,0x0E);
 12092  002896  0E0E               	movlw	14
 12093  002898  0100               	movlb	0	; () banked
 12094  00289A  6F90               	movwf	lcd_send@value& (0+255),b
 12095  00289C  0E01               	movlw	1
 12096  00289E  EC14  F034         	call	_lcd_send
 12097  0028A2                     
 12098                           ;lib_ili9341.c: 98:     lcd_send(1,0x08);
 12099  0028A2  0E08               	movlw	8
 12100  0028A4  0100               	movlb	0	; () banked
 12101  0028A6  6F90               	movwf	lcd_send@value& (0+255),b
 12102  0028A8  0E01               	movlw	1
 12103  0028AA  EC14  F034         	call	_lcd_send
 12104  0028AE                     
 12105                           ;lib_ili9341.c: 99:     lcd_send(1,0x4E);
 12106  0028AE  0E4E               	movlw	78
 12107  0028B0  0100               	movlb	0	; () banked
 12108  0028B2  6F90               	movwf	lcd_send@value& (0+255),b
 12109  0028B4  0E01               	movlw	1
 12110  0028B6  EC14  F034         	call	_lcd_send
 12111  0028BA                     
 12112                           ;lib_ili9341.c: 100:     lcd_send(1,0xF1);
 12113  0028BA  0EF1               	movlw	241
 12114  0028BC  0100               	movlb	0	; () banked
 12115  0028BE  6F90               	movwf	lcd_send@value& (0+255),b
 12116  0028C0  0E01               	movlw	1
 12117  0028C2  EC14  F034         	call	_lcd_send
 12118  0028C6                     
 12119                           ;lib_ili9341.c: 101:     lcd_send(1,0x37);
 12120  0028C6  0E37               	movlw	55
 12121  0028C8  0100               	movlb	0	; () banked
 12122  0028CA  6F90               	movwf	lcd_send@value& (0+255),b
 12123  0028CC  0E01               	movlw	1
 12124  0028CE  EC14  F034         	call	_lcd_send
 12125  0028D2                     
 12126                           ;lib_ili9341.c: 102:     lcd_send(1,0x07);
 12127  0028D2  0E07               	movlw	7
 12128  0028D4  0100               	movlb	0	; () banked
 12129  0028D6  6F90               	movwf	lcd_send@value& (0+255),b
 12130  0028D8  0E01               	movlw	1
 12131  0028DA  EC14  F034         	call	_lcd_send
 12132  0028DE                     
 12133                           ;lib_ili9341.c: 103:     lcd_send(1,0x10);
 12134  0028DE  0E10               	movlw	16
 12135  0028E0  0100               	movlb	0	; () banked
 12136  0028E2  6F90               	movwf	lcd_send@value& (0+255),b
 12137  0028E4  0E01               	movlw	1
 12138  0028E6  EC14  F034         	call	_lcd_send
 12139  0028EA                     
 12140                           ;lib_ili9341.c: 104:     lcd_send(1,0x03);
 12141  0028EA  0E03               	movlw	3
 12142  0028EC  0100               	movlb	0	; () banked
 12143  0028EE  6F90               	movwf	lcd_send@value& (0+255),b
 12144  0028F0  0E01               	movlw	1
 12145  0028F2  EC14  F034         	call	_lcd_send
 12146  0028F6                     
 12147                           ;lib_ili9341.c: 105:     lcd_send(1,0x0E);
 12148  0028F6  0E0E               	movlw	14
 12149  0028F8  0100               	movlb	0	; () banked
 12150  0028FA  6F90               	movwf	lcd_send@value& (0+255),b
 12151  0028FC  0E01               	movlw	1
 12152  0028FE  EC14  F034         	call	_lcd_send
 12153  002902                     
 12154                           ;lib_ili9341.c: 106:     lcd_send(1,0x09);
 12155  002902  0E09               	movlw	9
 12156  002904  0100               	movlb	0	; () banked
 12157  002906  6F90               	movwf	lcd_send@value& (0+255),b
 12158  002908  0E01               	movlw	1
 12159  00290A  EC14  F034         	call	_lcd_send
 12160  00290E                     
 12161                           ;lib_ili9341.c: 107:     lcd_send(1,0x00);
 12162  00290E  0E00               	movlw	0
 12163  002910  0100               	movlb	0	; () banked
 12164  002912  6F90               	movwf	lcd_send@value& (0+255),b
 12165  002914  0E01               	movlw	1
 12166  002916  EC14  F034         	call	_lcd_send
 12167  00291A                     
 12168                           ;lib_ili9341.c: 108:     lcd_send(0,0xE1);
 12169  00291A  0EE1               	movlw	225
 12170  00291C  0100               	movlb	0	; () banked
 12171  00291E  6F90               	movwf	lcd_send@value& (0+255),b
 12172  002920  0E00               	movlw	0
 12173  002922  EC14  F034         	call	_lcd_send
 12174  002926                     
 12175                           ;lib_ili9341.c: 109:     lcd_send(1,0x00);
 12176  002926  0E00               	movlw	0
 12177  002928  0100               	movlb	0	; () banked
 12178  00292A  6F90               	movwf	lcd_send@value& (0+255),b
 12179  00292C  0E01               	movlw	1
 12180  00292E  EC14  F034         	call	_lcd_send
 12181  002932                     
 12182                           ;lib_ili9341.c: 110:     lcd_send(1,0x0E);
 12183  002932  0E0E               	movlw	14
 12184  002934  0100               	movlb	0	; () banked
 12185  002936  6F90               	movwf	lcd_send@value& (0+255),b
 12186  002938  0E01               	movlw	1
 12187  00293A  EC14  F034         	call	_lcd_send
 12188  00293E                     
 12189                           ;lib_ili9341.c: 111:     lcd_send(1,0x14);
 12190  00293E  0E14               	movlw	20
 12191  002940  0100               	movlb	0	; () banked
 12192  002942  6F90               	movwf	lcd_send@value& (0+255),b
 12193  002944  0E01               	movlw	1
 12194  002946  EC14  F034         	call	_lcd_send
 12195  00294A                     
 12196                           ;lib_ili9341.c: 112:     lcd_send(1,0x03);
 12197  00294A  0E03               	movlw	3
 12198  00294C  0100               	movlb	0	; () banked
 12199  00294E  6F90               	movwf	lcd_send@value& (0+255),b
 12200  002950  0E01               	movlw	1
 12201  002952  EC14  F034         	call	_lcd_send
 12202  002956                     
 12203                           ;lib_ili9341.c: 113:     lcd_send(1,0x11);
 12204  002956  0E11               	movlw	17
 12205  002958  0100               	movlb	0	; () banked
 12206  00295A  6F90               	movwf	lcd_send@value& (0+255),b
 12207  00295C  0E01               	movlw	1
 12208  00295E  EC14  F034         	call	_lcd_send
 12209  002962                     
 12210                           ;lib_ili9341.c: 114:     lcd_send(1,0x07);
 12211  002962  0E07               	movlw	7
 12212  002964  0100               	movlb	0	; () banked
 12213  002966  6F90               	movwf	lcd_send@value& (0+255),b
 12214  002968  0E01               	movlw	1
 12215  00296A  EC14  F034         	call	_lcd_send
 12216  00296E                     
 12217                           ;lib_ili9341.c: 115:     lcd_send(1,0x31);
 12218  00296E  0E31               	movlw	49
 12219  002970  0100               	movlb	0	; () banked
 12220  002972  6F90               	movwf	lcd_send@value& (0+255),b
 12221  002974  0E01               	movlw	1
 12222  002976  EC14  F034         	call	_lcd_send
 12223  00297A                     
 12224                           ;lib_ili9341.c: 116:     lcd_send(1,0xC1);
 12225  00297A  0EC1               	movlw	193
 12226  00297C  0100               	movlb	0	; () banked
 12227  00297E  6F90               	movwf	lcd_send@value& (0+255),b
 12228  002980  0E01               	movlw	1
 12229  002982  EC14  F034         	call	_lcd_send
 12230  002986                     
 12231                           ;lib_ili9341.c: 117:     lcd_send(1,0x48);
 12232  002986  0E48               	movlw	72
 12233  002988  0100               	movlb	0	; () banked
 12234  00298A  6F90               	movwf	lcd_send@value& (0+255),b
 12235  00298C  0E01               	movlw	1
 12236  00298E  EC14  F034         	call	_lcd_send
 12237  002992                     
 12238                           ;lib_ili9341.c: 118:     lcd_send(1,0x08);
 12239  002992  0E08               	movlw	8
 12240  002994  0100               	movlb	0	; () banked
 12241  002996  6F90               	movwf	lcd_send@value& (0+255),b
 12242  002998  0E01               	movlw	1
 12243  00299A  EC14  F034         	call	_lcd_send
 12244  00299E                     
 12245                           ;lib_ili9341.c: 119:     lcd_send(1,0x0F);
 12246  00299E  0E0F               	movlw	15
 12247  0029A0  0100               	movlb	0	; () banked
 12248  0029A2  6F90               	movwf	lcd_send@value& (0+255),b
 12249  0029A4  0E01               	movlw	1
 12250  0029A6  EC14  F034         	call	_lcd_send
 12251  0029AA                     
 12252                           ;lib_ili9341.c: 120:     lcd_send(1,0x0C);
 12253  0029AA  0E0C               	movlw	12
 12254  0029AC  0100               	movlb	0	; () banked
 12255  0029AE  6F90               	movwf	lcd_send@value& (0+255),b
 12256  0029B0  0E01               	movlw	1
 12257  0029B2  EC14  F034         	call	_lcd_send
 12258  0029B6                     
 12259                           ;lib_ili9341.c: 121:     lcd_send(1,0x31);
 12260  0029B6  0E31               	movlw	49
 12261  0029B8  0100               	movlb	0	; () banked
 12262  0029BA  6F90               	movwf	lcd_send@value& (0+255),b
 12263  0029BC  0E01               	movlw	1
 12264  0029BE  EC14  F034         	call	_lcd_send
 12265  0029C2                     
 12266                           ;lib_ili9341.c: 122:     lcd_send(1,0x36);
 12267  0029C2  0E36               	movlw	54
 12268  0029C4  0100               	movlb	0	; () banked
 12269  0029C6  6F90               	movwf	lcd_send@value& (0+255),b
 12270  0029C8  0E01               	movlw	1
 12271  0029CA  EC14  F034         	call	_lcd_send
 12272  0029CE                     
 12273                           ;lib_ili9341.c: 123:     lcd_send(1,0x0F);
 12274  0029CE  0E0F               	movlw	15
 12275  0029D0  0100               	movlb	0	; () banked
 12276  0029D2  6F90               	movwf	lcd_send@value& (0+255),b
 12277  0029D4  0E01               	movlw	1
 12278  0029D6  EC14  F034         	call	_lcd_send
 12279  0029DA                     
 12280                           ;lib_ili9341.c: 124:     lcd_send(0,0x11);
 12281  0029DA  0E11               	movlw	17
 12282  0029DC  0100               	movlb	0	; () banked
 12283  0029DE  6F90               	movwf	lcd_send@value& (0+255),b
 12284  0029E0  0E00               	movlw	0
 12285  0029E2  EC14  F034         	call	_lcd_send
 12286                           
 12287                           ;lib_ili9341.c: 125:     msDelay(120);
 12288  0029E6  0E78               	movlw	120
 12289  0029E8  ECA6  F032         	call	_msDelay
 12290  0029EC                     
 12291                           ;lib_ili9341.c: 126:     lcd_send(0,0x29);
 12292  0029EC  0E29               	movlw	41
 12293  0029EE  0100               	movlb	0	; () banked
 12294  0029F0  6F90               	movwf	lcd_send@value& (0+255),b
 12295  0029F2  0E00               	movlw	0
 12296  0029F4  EC14  F034         	call	_lcd_send
 12297  0029F8                     
 12298                           ;lib_ili9341.c: 127:     msDelay(120);
 12299  0029F8  0E78               	movlw	120
 12300  0029FA  ECA6  F032         	call	_msDelay
 12301  0029FE                     
 12302                           ;lib_ili9341.c: 130:     lcd_fill(global_bg_color);
 12303  0029FE  0E00               	movlw	0
 12304  002A00  0100               	movlb	0	; () banked
 12305  002A02  6F99               	movwf	(lcd_fill@bg_color+1)& (0+255),b
 12306  002A04  0E00               	movlw	0
 12307  002A06  6F98               	movwf	lcd_fill@bg_color& (0+255),b
 12308  002A08  EC2D  F02E         	call	_lcd_fill	;wreg free
 12309  002A0C  0012               	return		;funcret
 12310  002A0E                     __end_of_lcd_init:
 12311                           	opt callstack 0
 12312                           
 12313 ;; *************** function _msDelay *****************
 12314 ;; Defined at:
 12315 ;;		line 16 in file "lib_ili9341.c"
 12316 ;; Parameters:    Size  Location     Type
 12317 ;;  ms              1    wreg     unsigned char 
 12318 ;; Auto vars:     Size  Location     Type
 12319 ;;  ms              1   48[BANK0 ] unsigned char 
 12320 ;;  k               1   49[BANK0 ] unsigned char 
 12321 ;; Return value:  Size  Location     Type
 12322 ;;                  1    wreg      void 
 12323 ;; Registers used:
 12324 ;;		wreg, status,2, status,0
 12325 ;; Tracked objects:
 12326 ;;		On entry : 0/0
 12327 ;;		On exit  : 0/0
 12328 ;;		Unchanged: 0/0
 12329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12331 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12332 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12333 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12334 ;;Total ram usage:        3 bytes
 12335 ;; Hardware stack levels used:    1
 12336 ;; Hardware stack levels required when called:   13
 12337 ;; This function calls:
 12338 ;;		Nothing
 12339 ;; This function is called by:
 12340 ;;		_lcd_init
 12341 ;; This function uses a non-reentrant model
 12342 ;;
 12343                           
 12344                           	psect	text38
 12345  00654C                     __ptext38:
 12346                           	opt callstack 0
 12347  00654C                     _msDelay:
 12348                           	opt callstack 16
 12349                           
 12350                           ;incstack = 0
 12351                           ;msDelay@ms stored from wreg
 12352  00654C  0100               	movlb	0	; () banked
 12353  00654E  6F90               	movwf	msDelay@ms& (0+255),b
 12354  006550                     
 12355                           ;lib_ili9341.c: 16: void msDelay (uint8_t ms);lib_ili9341.c: 17: {;lib_ili9341.c: 18:   
      +                            uint8_t k;;lib_ili9341.c: 20:     for(k=0; k<ms; k++)
 12356  006550  0E00               	movlw	0
 12357  006552  0100               	movlb	0	; () banked
 12358  006554  6F91               	movwf	msDelay@k& (0+255),b
 12359  006556  EFB8  F032         	goto	l6653
 12360  00655A                     l6649:
 12361                           
 12362                           ; BSR set to: 0
 12363                           ;lib_ili9341.c: 21:     {;lib_ili9341.c: 22:         _delay((unsigned long)((1)*(8000000
      +                          /4000.0)));
 12364  00655A  0E03               	movlw	3
 12365  00655C  0100               	movlb	0	; () banked
 12366  00655E  6F8F               	movwf	??_msDelay& (0+255),b
 12367  006560  0E97               	movlw	151
 12368  006562                     u12357:
 12369  006562  2EE8               	decfsz	wreg,f,c
 12370  006564  D7FE               	bra	u12357
 12371  006566  2F8F               	decfsz	??_msDelay& (0+255),f,b
 12372  006568  D7FC               	bra	u12357
 12373  00656A  D000               	nop2	
 12374  00656C                     
 12375                           ;lib_ili9341.c: 23:     }
 12376  00656C  0100               	movlb	0	; () banked
 12377  00656E  2B91               	incf	msDelay@k& (0+255),f,b
 12378  006570                     l6653:
 12379                           
 12380                           ; BSR set to: 0
 12381  006570  5190               	movf	msDelay@ms& (0+255),w,b
 12382  006572  5D91               	subwf	msDelay@k& (0+255),w,b
 12383  006574  A0D8               	btfss	status,0,c
 12384  006576  EFBF  F032         	goto	u7741
 12385  00657A  EFC1  F032         	goto	u7740
 12386  00657E                     u7741:
 12387  00657E  EFAD  F032         	goto	l6649
 12388  006582                     u7740:
 12389  006582                     
 12390                           ; BSR set to: 0
 12391  006582  0012               	return		;funcret
 12392  006584                     __end_of_msDelay:
 12393                           	opt callstack 0
 12394                           
 12395 ;; *************** function _lcd_fill *****************
 12396 ;; Defined at:
 12397 ;;		line 193 in file "lib_ili9341.c"
 12398 ;; Parameters:    Size  Location     Type
 12399 ;;  bg_color        2   56[BANK0 ] unsigned short 
 12400 ;; Auto vars:     Size  Location     Type
 12401 ;;  width           2   60[BANK0 ] unsigned short 
 12402 ;;  height          2   58[BANK0 ] unsigned short 
 12403 ;; Return value:  Size  Location     Type
 12404 ;;                  1    wreg      void 
 12405 ;; Registers used:
 12406 ;;		wreg, status,2, status,0, cstack
 12407 ;; Tracked objects:
 12408 ;;		On entry : 0/0
 12409 ;;		On exit  : 0/0
 12410 ;;		Unchanged: 0/0
 12411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12412 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12413 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12415 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12416 ;;Total ram usage:        6 bytes
 12417 ;; Hardware stack levels used:    1
 12418 ;; Hardware stack levels required when called:   17
 12419 ;; This function calls:
 12420 ;;		_lcd_draw_pixel
 12421 ;;		_lcd_set_cursor
 12422 ;; This function is called by:
 12423 ;;		_lcd_init
 12424 ;; This function uses a non-reentrant model
 12425 ;;
 12426                           
 12427                           	psect	text39
 12428  005C5A                     __ptext39:
 12429                           	opt callstack 0
 12430  005C5A                     _lcd_fill:
 12431                           	opt callstack 12
 12432  005C5A                     
 12433                           ;lib_ili9341.c: 193: void lcd_fill(uint16_t bg_color);lib_ili9341.c: 194: {;lib_ili9341.
      +                          c: 195:     uint16_t width = 320, height = 240;
 12434  005C5A  0E01               	movlw	1
 12435  005C5C  0100               	movlb	0	; () banked
 12436  005C5E  6F9D               	movwf	(lcd_fill@width+1)& (0+255),b
 12437  005C60  0E40               	movlw	64
 12438  005C62  6F9C               	movwf	lcd_fill@width& (0+255),b
 12439  005C64  0E00               	movlw	0
 12440  005C66  6F9B               	movwf	(lcd_fill@height+1)& (0+255),b
 12441  005C68  0EF0               	movlw	240
 12442  005C6A  6F9A               	movwf	lcd_fill@height& (0+255),b
 12443  005C6C                     
 12444                           ; BSR set to: 0
 12445                           ;lib_ili9341.c: 197:     if( lcd_set_cursor(0,0) )
 12446  005C6C  0E00               	movlw	0
 12447  005C6E  6F95               	movwf	(lcd_set_cursor@x+1)& (0+255),b
 12448  005C70  0E00               	movlw	0
 12449  005C72  6F94               	movwf	lcd_set_cursor@x& (0+255),b
 12450  005C74  0E00               	movlw	0
 12451  005C76  6F97               	movwf	(lcd_set_cursor@y+1)& (0+255),b
 12452  005C78  0E00               	movlw	0
 12453  005C7A  6F96               	movwf	lcd_set_cursor@y& (0+255),b
 12454  005C7C  EC94  F031         	call	_lcd_set_cursor	;wreg free
 12455  005C80  0900               	iorlw	0
 12456  005C82  B4D8               	btfsc	status,2,c
 12457  005C84  EF46  F02E         	goto	u11861
 12458  005C88  EF48  F02E         	goto	u11860
 12459  005C8C                     u11861:
 12460  005C8C  EF62  F02E         	goto	l9333
 12461  005C90                     u11860:
 12462  005C90  EF70  F02E         	goto	l599
 12463  005C94                     l9327:
 12464                           
 12465                           ; BSR set to: 0
 12466                           ;lib_ili9341.c: 205:         {;lib_ili9341.c: 206:             lcd_draw_pixel(bg_color);
 12467  005C94  C098  F092         	movff	lcd_fill@bg_color,lcd_draw_pixel@color
 12468  005C98  C099  F093         	movff	lcd_fill@bg_color+1,lcd_draw_pixel@color+1
 12469  005C9C  EC3D  F034         	call	_lcd_draw_pixel	;wreg free
 12470  005CA0                     l9329:
 12471                           
 12472                           ;lib_ili9341.c: 204:         while(width--)
 12473  005CA0  0100               	movlb	0	; () banked
 12474  005CA2  079C               	decf	lcd_fill@width& (0+255),f,b
 12475  005CA4  A0D8               	btfss	status,0,c
 12476  005CA6  079D               	decf	(lcd_fill@width+1)& (0+255),f,b
 12477  005CA8  299C               	incf	lcd_fill@width& (0+255),w,b
 12478  005CAA  E106               	bnz	u11871
 12479  005CAC  299D               	incf	(lcd_fill@width+1)& (0+255),w,b
 12480  005CAE  A4D8               	btfss	status,2,c
 12481  005CB0  EF5C  F02E         	goto	u11871
 12482  005CB4  EF5E  F02E         	goto	u11870
 12483  005CB8                     u11871:
 12484  005CB8  EF4A  F02E         	goto	l9327
 12485  005CBC                     u11870:
 12486  005CBC                     
 12487                           ; BSR set to: 0
 12488                           ;lib_ili9341.c: 208:         width = 320;
 12489  005CBC  0E01               	movlw	1
 12490  005CBE  6F9D               	movwf	(lcd_fill@width+1)& (0+255),b
 12491  005CC0  0E40               	movlw	64
 12492  005CC2  6F9C               	movwf	lcd_fill@width& (0+255),b
 12493  005CC4                     l9333:
 12494                           
 12495                           ;lib_ili9341.c: 202:     while(height--)
 12496  005CC4  0100               	movlb	0	; () banked
 12497  005CC6  079A               	decf	lcd_fill@height& (0+255),f,b
 12498  005CC8  A0D8               	btfss	status,0,c
 12499  005CCA  079B               	decf	(lcd_fill@height+1)& (0+255),f,b
 12500  005CCC  299A               	incf	lcd_fill@height& (0+255),w,b
 12501  005CCE  E106               	bnz	u11881
 12502  005CD0  299B               	incf	(lcd_fill@height+1)& (0+255),w,b
 12503  005CD2  A4D8               	btfss	status,2,c
 12504  005CD4  EF6E  F02E         	goto	u11881
 12505  005CD8  EF70  F02E         	goto	u11880
 12506  005CDC                     u11881:
 12507  005CDC  EF50  F02E         	goto	l9329
 12508  005CE0                     u11880:
 12509  005CE0                     l599:
 12510  005CE0  0012               	return		;funcret
 12511  005CE2                     __end_of_lcd_fill:
 12512                           	opt callstack 0
 12513                           
 12514 ;; *************** function _lcd_draw_string *****************
 12515 ;; Defined at:
 12516 ;;		line 380 in file "lib_ili9341.c"
 12517 ;; Parameters:    Size  Location     Type
 12518 ;;  x               2    0[BANK1 ] unsigned short 
 12519 ;;  y               2    2[BANK1 ] unsigned short 
 12520 ;;  pS              2    4[BANK1 ] PTR const unsigned char 
 12521 ;;		 -> string(30), STR_2(33), 
 12522 ;;  fg_color        2    6[BANK1 ] unsigned short 
 12523 ;;  bg_color        2    8[BANK1 ] unsigned short 
 12524 ;; Auto vars:     Size  Location     Type
 12525 ;;  lIndex          2   16[BANK1 ] unsigned short 
 12526 ;;  k               2   14[BANK1 ] unsigned short 
 12527 ;; Return value:  Size  Location     Type
 12528 ;;                  1    wreg      void 
 12529 ;; Registers used:
 12530 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12531 ;; Tracked objects:
 12532 ;;		On entry : 0/0
 12533 ;;		On exit  : 0/0
 12534 ;;		Unchanged: 0/0
 12535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12536 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12537 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12538 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12539 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12540 ;;Total ram usage:       18 bytes
 12541 ;; Hardware stack levels used:    1
 12542 ;; Hardware stack levels required when called:   18
 12543 ;; This function calls:
 12544 ;;		_lcd_draw_char
 12545 ;; This function is called by:
 12546 ;;		_main
 12547 ;; This function uses a non-reentrant model
 12548 ;;
 12549                           
 12550                           	psect	text40
 12551  004F0E                     __ptext40:
 12552                           	opt callstack 0
 12553  004F0E                     _lcd_draw_string:
 12554                           	opt callstack 12
 12555  004F0E                     
 12556                           ;lib_ili9341.c: 380: void lcd_draw_string (uint16_t x, uint16_t y, const char *pS, uint1
      +                          6_t fg_color, uint16_t bg_color);lib_ili9341.c: 381: {;lib_ili9341.c: 382:     uint16_t 
      +                          lIndex, k;;lib_ili9341.c: 384:     while(*pS)
 12557  004F0E  EF09  F028         	goto	l9635
 12558  004F12                     l9621:
 12559                           
 12560                           ;lib_ili9341.c: 385:     {;lib_ili9341.c: 386:         lIndex = 0;
 12561  004F12  0E00               	movlw	0
 12562  004F14  0101               	movlb	1	; () banked
 12563  004F16  6F11               	movwf	(lcd_draw_string@lIndex+1)& (0+255),b
 12564  004F18  0E00               	movlw	0
 12565  004F1A  6F10               	movwf	lcd_draw_string@lIndex& (0+255),b
 12566                           
 12567                           ;lib_ili9341.c: 387:         for(k=0; k<(*pS - ' '); k++)
 12568  004F1C  0E00               	movlw	0
 12569  004F1E  6F0F               	movwf	(lcd_draw_string@k+1)& (0+255),b
 12570  004F20  0E00               	movlw	0
 12571  004F22  6F0E               	movwf	lcd_draw_string@k& (0+255),b
 12572  004F24  EFB3  F027         	goto	l9627
 12573  004F28                     l9623:
 12574                           
 12575                           ; BSR set to: 1
 12576                           ;lib_ili9341.c: 388:         {;lib_ili9341.c: 389:             lIndex += ((font[lIndex])
      +                           << 1) + 1;
 12577  004F28  90D8               	bcf	status,0,c
 12578  004F2A  3510               	rlcf	lcd_draw_string@lIndex& (0+255),w,b
 12579  004F2C  6EF6               	movwf	tblptrl,c
 12580  004F2E  3511               	rlcf	(lcd_draw_string@lIndex+1)& (0+255),w,b
 12581  004F30  6EF7               	movwf	tblptrh,c
 12582  004F32  0E35               	movlw	low _font
 12583  004F34  26F6               	addwf	tblptrl,f,c
 12584  004F36  0EF1               	movlw	high _font
 12585  004F38  22F7               	addwfc	tblptrh,f,c
 12586  004F3A                     	if	1	;There are 3 active tblptr bytes
 12587  004F3A  6AF8               	clrf	tblptru,c
 12588  004F3C  0E00               	movlw	low (__mediumconst shr (0+16))
 12589  004F3E  22F8               	addwfc	tblptru,f,c
 12590  004F40                     	endif
 12591  004F40  0009               	tblrd		*+
 12592  004F42  CFF5 F10A          	movff	tablat,??_lcd_draw_string
 12593  004F46  0009               	tblrd		*+
 12594  004F48  CFF5 F10B          	movff	tablat,??_lcd_draw_string+1
 12595  004F4C  90D8               	bcf	status,0,c
 12596  004F4E  370A               	rlcf	??_lcd_draw_string& (0+255),f,b
 12597  004F50  370B               	rlcf	(??_lcd_draw_string+1)& (0+255),f,b
 12598  004F52  0E01               	movlw	1
 12599  004F54  270A               	addwf	??_lcd_draw_string& (0+255),f,b
 12600  004F56  0E00               	movlw	0
 12601  004F58  230B               	addwfc	(??_lcd_draw_string+1)& (0+255),f,b
 12602  004F5A  510A               	movf	??_lcd_draw_string& (0+255),w,b
 12603  004F5C  2710               	addwf	lcd_draw_string@lIndex& (0+255),f,b
 12604  004F5E  510B               	movf	(??_lcd_draw_string+1)& (0+255),w,b
 12605  004F60  2311               	addwfc	(lcd_draw_string@lIndex+1)& (0+255),f,b
 12606  004F62                     
 12607                           ; BSR set to: 1
 12608                           ;lib_ili9341.c: 390:         }
 12609  004F62  4B0E               	infsnz	lcd_draw_string@k& (0+255),f,b
 12610  004F64  2B0F               	incf	(lcd_draw_string@k+1)& (0+255),f,b
 12611  004F66                     l9627:
 12612                           
 12613                           ; BSR set to: 1
 12614  004F66  0EE0               	movlw	224
 12615  004F68  6F0A               	movwf	??_lcd_draw_string& (0+255),b
 12616  004F6A  0EFF               	movlw	255
 12617  004F6C  6F0B               	movwf	(??_lcd_draw_string+1)& (0+255),b
 12618  004F6E  C104  FFF6         	movff	lcd_draw_string@pS,tblptrl
 12619  004F72  C105  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 12620  004F76  0E00               	movlw	low (__mediumconst shr (0+16))
 12621  004F78  6EF8               	movwf	tblptru,c
 12622  004F7A  0E0E               	movlw	(high __ramtop+-1)
 12623  004F7C  64F7               	cpfsgt	tblptrh,c
 12624  004F7E  D003               	bra	u12057
 12625  004F80  0008               	tblrd		*
 12626  004F82  50F5               	movf	tablat,w,c
 12627  004F84  D005               	bra	u12050
 12628  004F86                     u12057:
 12629  004F86  CFF6 FFE9          	movff	tblptrl,fsr0l
 12630  004F8A  CFF7 FFEA          	movff	tblptrh,fsr0h
 12631  004F8E  50EF               	movf	indf0,w,c
 12632  004F90                     u12050:
 12633  004F90  0101               	movlb	1	; () banked
 12634  004F92  6F0C               	movwf	(??_lcd_draw_string+2)& (0+255),b
 12635  004F94  6B0D               	clrf	(??_lcd_draw_string+3)& (0+255),b
 12636  004F96  510A               	movf	??_lcd_draw_string& (0+255),w,b
 12637  004F98  270C               	addwf	(??_lcd_draw_string+2)& (0+255),f,b
 12638  004F9A  510B               	movf	(??_lcd_draw_string+1)& (0+255),w,b
 12639  004F9C  230D               	addwfc	(??_lcd_draw_string+3)& (0+255),f,b
 12640  004F9E  510C               	movf	(??_lcd_draw_string+2)& (0+255),w,b
 12641  004FA0  5D0E               	subwf	lcd_draw_string@k& (0+255),w,b
 12642  004FA2  510D               	movf	(??_lcd_draw_string+3)& (0+255),w,b
 12643  004FA4  590F               	subwfb	(lcd_draw_string@k+1)& (0+255),w,b
 12644  004FA6  A0D8               	btfss	status,0,c
 12645  004FA8  EFD8  F027         	goto	u12061
 12646  004FAC  EFDA  F027         	goto	u12060
 12647  004FB0                     u12061:
 12648  004FB0  EF94  F027         	goto	l9623
 12649  004FB4                     u12060:
 12650  004FB4                     
 12651                           ; BSR set to: 1
 12652                           ;lib_ili9341.c: 392:         lcd_draw_char(x, y, lIndex, fg_color, bg_color);
 12653  004FB4  C100  F098         	movff	lcd_draw_string@x,lcd_draw_char@x
 12654  004FB8  C101  F099         	movff	lcd_draw_string@x+1,lcd_draw_char@x+1
 12655  004FBC  C102  F09A         	movff	lcd_draw_string@y,lcd_draw_char@y
 12656  004FC0  C103  F09B         	movff	lcd_draw_string@y+1,lcd_draw_char@y+1
 12657  004FC4  C110  F09C         	movff	lcd_draw_string@lIndex,lcd_draw_char@fIndex
 12658  004FC8  C111  F09D         	movff	lcd_draw_string@lIndex+1,lcd_draw_char@fIndex+1
 12659  004FCC  C106  F09E         	movff	lcd_draw_string@fg_color,lcd_draw_char@fg_color
 12660  004FD0  C107  F09F         	movff	lcd_draw_string@fg_color+1,lcd_draw_char@fg_color+1
 12661  004FD4  C108  F0A0         	movff	lcd_draw_string@bg_color,lcd_draw_char@bg_color
 12662  004FD8  C109  F0A1         	movff	lcd_draw_string@bg_color+1,lcd_draw_char@bg_color+1
 12663  004FDC  EC61  F025         	call	_lcd_draw_char	;wreg free
 12664  004FE0                     
 12665                           ;lib_ili9341.c: 394:         x += font[lIndex];
 12666  004FE0  90D8               	bcf	status,0,c
 12667  004FE2  0101               	movlb	1	; () banked
 12668  004FE4  3510               	rlcf	lcd_draw_string@lIndex& (0+255),w,b
 12669  004FE6  6EF6               	movwf	tblptrl,c
 12670  004FE8  3511               	rlcf	(lcd_draw_string@lIndex+1)& (0+255),w,b
 12671  004FEA  6EF7               	movwf	tblptrh,c
 12672  004FEC  0E35               	movlw	low _font
 12673  004FEE  26F6               	addwf	tblptrl,f,c
 12674  004FF0  0EF1               	movlw	high _font
 12675  004FF2  22F7               	addwfc	tblptrh,f,c
 12676  004FF4                     	if	1	;There are 3 active tblptr bytes
 12677  004FF4  6AF8               	clrf	tblptru,c
 12678  004FF6  0E00               	movlw	low (__mediumconst shr (0+16))
 12679  004FF8  22F8               	addwfc	tblptru,f,c
 12680  004FFA                     	endif
 12681  004FFA  0009               	tblrd		*+
 12682  004FFC  CFF5 F10A          	movff	tablat,??_lcd_draw_string
 12683  005000  0009               	tblrd		*+
 12684  005002  CFF5 F10B          	movff	tablat,??_lcd_draw_string+1
 12685  005006  510A               	movf	??_lcd_draw_string& (0+255),w,b
 12686  005008  2700               	addwf	lcd_draw_string@x& (0+255),f,b
 12687  00500A  510B               	movf	(??_lcd_draw_string+1)& (0+255),w,b
 12688  00500C  2301               	addwfc	(lcd_draw_string@x+1)& (0+255),f,b
 12689  00500E                     
 12690                           ; BSR set to: 1
 12691                           ;lib_ili9341.c: 396:         pS++;
 12692  00500E  4B04               	infsnz	lcd_draw_string@pS& (0+255),f,b
 12693  005010  2B05               	incf	(lcd_draw_string@pS+1)& (0+255),f,b
 12694  005012                     l9635:
 12695                           
 12696                           ;lib_ili9341.c: 384:     while(*pS)
 12697  005012  C104  FFF6         	movff	lcd_draw_string@pS,tblptrl
 12698  005016  C105  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 12699  00501A  0E00               	movlw	low (__mediumconst shr (0+16))
 12700  00501C  6EF8               	movwf	tblptru,c
 12701  00501E  0E0E               	movlw	(high __ramtop+-1)
 12702  005020  64F7               	cpfsgt	tblptrh,c
 12703  005022  D003               	bra	u12077
 12704  005024  0008               	tblrd		*
 12705  005026  50F5               	movf	tablat,w,c
 12706  005028  D005               	bra	u12070
 12707  00502A                     u12077:
 12708  00502A  CFF6 FFE9          	movff	tblptrl,fsr0l
 12709  00502E  CFF7 FFEA          	movff	tblptrh,fsr0h
 12710  005032  50EF               	movf	indf0,w,c
 12711  005034                     u12070:
 12712  005034  0900               	iorlw	0
 12713  005036  A4D8               	btfss	status,2,c
 12714  005038  EF20  F028         	goto	u12081
 12715  00503C  EF22  F028         	goto	u12080
 12716  005040                     u12081:
 12717  005040  EF89  F027         	goto	l9621
 12718  005044                     u12080:
 12719  005044  0012               	return		;funcret
 12720  005046                     __end_of_lcd_draw_string:
 12721                           	opt callstack 0
 12722                           
 12723 ;; *************** function _lcd_draw_char *****************
 12724 ;; Defined at:
 12725 ;;		line 355 in file "lib_ili9341.c"
 12726 ;; Parameters:    Size  Location     Type
 12727 ;;  x               2   56[BANK0 ] unsigned short 
 12728 ;;  y               2   58[BANK0 ] unsigned short 
 12729 ;;  fIndex          2   60[BANK0 ] unsigned short 
 12730 ;;  fg_color        2   62[BANK0 ] unsigned short 
 12731 ;;  bg_color        2   64[BANK0 ] unsigned short 
 12732 ;; Auto vars:     Size  Location     Type
 12733 ;;  i               1   77[BANK0 ] unsigned char 
 12734 ;;  k               1   76[BANK0 ] unsigned char 
 12735 ;;  j               1   75[BANK0 ] unsigned char 
 12736 ;; Return value:  Size  Location     Type
 12737 ;;                  1    wreg      void 
 12738 ;; Registers used:
 12739 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12740 ;; Tracked objects:
 12741 ;;		On entry : 0/0
 12742 ;;		On exit  : 0/0
 12743 ;;		Unchanged: 0/0
 12744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12745 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12746 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12747 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12748 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12749 ;;Total ram usage:       22 bytes
 12750 ;; Hardware stack levels used:    1
 12751 ;; Hardware stack levels required when called:   17
 12752 ;; This function calls:
 12753 ;;		_lcd_draw_pixel
 12754 ;;		_lcd_set_cursor
 12755 ;; This function is called by:
 12756 ;;		_lcd_draw_string
 12757 ;; This function uses a non-reentrant model
 12758 ;;
 12759                           
 12760                           	psect	text41
 12761  004AC2                     __ptext41:
 12762                           	opt callstack 0
 12763  004AC2                     _lcd_draw_char:
 12764                           	opt callstack 12
 12765  004AC2                     
 12766                           ;lib_ili9341.c: 355: void lcd_draw_char (uint16_t x, uint16_t y, uint16_t fIndex, uint16
      +                          _t fg_color, uint16_t bg_color);lib_ili9341.c: 356: {;lib_ili9341.c: 357:     uint8_t j,
      +                           k, i;;lib_ili9341.c: 359:     for(j=0; j < font[fIndex]; j++)
 12767  004AC2  0E00               	movlw	0
 12768  004AC4  0100               	movlb	0	; () banked
 12769  004AC6  6FAB               	movwf	lcd_draw_char@j& (0+255),b
 12770  004AC8  EF05  F026         	goto	l9371
 12771  004ACC                     l9341:
 12772                           
 12773                           ; BSR set to: 0
 12774                           ;lib_ili9341.c: 360:     {;lib_ili9341.c: 361:         lcd_set_cursor(x + font[fIndex] -
      +                           j, y);
 12775  004ACC  90D8               	bcf	status,0,c
 12776  004ACE  359C               	rlcf	lcd_draw_char@fIndex& (0+255),w,b
 12777  004AD0  6EF6               	movwf	tblptrl,c
 12778  004AD2  359D               	rlcf	(lcd_draw_char@fIndex+1)& (0+255),w,b
 12779  004AD4  6EF7               	movwf	tblptrh,c
 12780  004AD6  0E35               	movlw	low _font
 12781  004AD8  26F6               	addwf	tblptrl,f,c
 12782  004ADA  0EF1               	movlw	high _font
 12783  004ADC  22F7               	addwfc	tblptrh,f,c
 12784  004ADE                     	if	1	;There are 3 active tblptr bytes
 12785  004ADE  6AF8               	clrf	tblptru,c
 12786  004AE0  0E00               	movlw	low (__mediumconst shr (0+16))
 12787  004AE2  22F8               	addwfc	tblptru,f,c
 12788  004AE4                     	endif
 12789  004AE4  0009               	tblrd		*+
 12790  004AE6  CFF5 F0A2          	movff	tablat,??_lcd_draw_char
 12791  004AEA  0009               	tblrd		*+
 12792  004AEC  CFF5 F0A3          	movff	tablat,??_lcd_draw_char+1
 12793  004AF0  51AB               	movf	lcd_draw_char@j& (0+255),w,b
 12794  004AF2  5FA2               	subwf	??_lcd_draw_char& (0+255),f,b
 12795  004AF4  0E00               	movlw	0
 12796  004AF6  5BA3               	subwfb	(??_lcd_draw_char+1)& (0+255),f,b
 12797  004AF8  5198               	movf	lcd_draw_char@x& (0+255),w,b
 12798  004AFA  25A2               	addwf	??_lcd_draw_char& (0+255),w,b
 12799  004AFC  6F94               	movwf	lcd_set_cursor@x& (0+255),b
 12800  004AFE  5199               	movf	(lcd_draw_char@x+1)& (0+255),w,b
 12801  004B00  21A3               	addwfc	(??_lcd_draw_char+1)& (0+255),w,b
 12802  004B02  6F95               	movwf	(lcd_set_cursor@x+1)& (0+255),b
 12803  004B04  C09A  F096         	movff	lcd_draw_char@y,lcd_set_cursor@y
 12804  004B08  C09B  F097         	movff	lcd_draw_char@y+1,lcd_set_cursor@y+1
 12805  004B0C  EC94  F031         	call	_lcd_set_cursor	;wreg free
 12806  004B10                     
 12807                           ;lib_ili9341.c: 363:         for(k=0; k<2; k++)
 12808  004B10  0E00               	movlw	0
 12809  004B12  0100               	movlb	0	; () banked
 12810  004B14  6FAC               	movwf	lcd_draw_char@k& (0+255),b
 12811  004B16                     l9349:
 12812                           
 12813                           ; BSR set to: 0
 12814                           ;lib_ili9341.c: 364:         {;lib_ili9341.c: 365:             for(i=0; i<8; i++)
 12815  004B16  0E00               	movlw	0
 12816  004B18  6FAD               	movwf	lcd_draw_char@i& (0+255),b
 12817  004B1A                     l9355:
 12818                           
 12819                           ; BSR set to: 0
 12820                           ;lib_ili9341.c: 366:             {;lib_ili9341.c: 367:                 if( font[ (fIndex
      +                           + ((font[fIndex]) << 1)) - (j<<1) - k ] & (0x80 >> i) )
 12821  004B1A  51AB               	movf	lcd_draw_char@j& (0+255),w,b
 12822  004B1C  6FA2               	movwf	??_lcd_draw_char& (0+255),b
 12823  004B1E  6BA3               	clrf	(??_lcd_draw_char+1)& (0+255),b
 12824  004B20  90D8               	bcf	status,0,c
 12825  004B22  37A2               	rlcf	??_lcd_draw_char& (0+255),f,b
 12826  004B24  37A3               	rlcf	(??_lcd_draw_char+1)& (0+255),f,b
 12827  004B26  90D8               	bcf	status,0,c
 12828  004B28  359C               	rlcf	lcd_draw_char@fIndex& (0+255),w,b
 12829  004B2A  6EF6               	movwf	tblptrl,c
 12830  004B2C  359D               	rlcf	(lcd_draw_char@fIndex+1)& (0+255),w,b
 12831  004B2E  6EF7               	movwf	tblptrh,c
 12832  004B30  0E35               	movlw	low _font
 12833  004B32  26F6               	addwf	tblptrl,f,c
 12834  004B34  0EF1               	movlw	high _font
 12835  004B36  22F7               	addwfc	tblptrh,f,c
 12836  004B38                     	if	1	;There are 3 active tblptr bytes
 12837  004B38  6AF8               	clrf	tblptru,c
 12838  004B3A  0E00               	movlw	low (__mediumconst shr (0+16))
 12839  004B3C  22F8               	addwfc	tblptru,f,c
 12840  004B3E                     	endif
 12841  004B3E  0009               	tblrd		*+
 12842  004B40  CFF5 F0A4          	movff	tablat,??_lcd_draw_char+2
 12843  004B44  0009               	tblrd		*+
 12844  004B46  CFF5 F0A5          	movff	tablat,??_lcd_draw_char+3
 12845  004B4A  90D8               	bcf	status,0,c
 12846  004B4C  37A4               	rlcf	(??_lcd_draw_char+2)& (0+255),f,b
 12847  004B4E  37A5               	rlcf	(??_lcd_draw_char+3)& (0+255),f,b
 12848  004B50  51A2               	movf	??_lcd_draw_char& (0+255),w,b
 12849  004B52  5FA4               	subwf	(??_lcd_draw_char+2)& (0+255),f,b
 12850  004B54  51A3               	movf	(??_lcd_draw_char+1)& (0+255),w,b
 12851  004B56  5BA5               	subwfb	(??_lcd_draw_char+3)& (0+255),f,b
 12852  004B58  51AC               	movf	lcd_draw_char@k& (0+255),w,b
 12853  004B5A  5FA4               	subwf	(??_lcd_draw_char+2)& (0+255),f,b
 12854  004B5C  0E00               	movlw	0
 12855  004B5E  5BA5               	subwfb	(??_lcd_draw_char+3)& (0+255),f,b
 12856  004B60  519C               	movf	lcd_draw_char@fIndex& (0+255),w,b
 12857  004B62  27A4               	addwf	(??_lcd_draw_char+2)& (0+255),f,b
 12858  004B64  519D               	movf	(lcd_draw_char@fIndex+1)& (0+255),w,b
 12859  004B66  23A5               	addwfc	(??_lcd_draw_char+3)& (0+255),f,b
 12860  004B68  90D8               	bcf	status,0,c
 12861  004B6A  37A4               	rlcf	(??_lcd_draw_char+2)& (0+255),f,b
 12862  004B6C  37A5               	rlcf	(??_lcd_draw_char+3)& (0+255),f,b
 12863  004B6E  0E35               	movlw	low _font
 12864  004B70  25A4               	addwf	(??_lcd_draw_char+2)& (0+255),w,b
 12865  004B72  6EF6               	movwf	tblptrl,c
 12866  004B74  0EF1               	movlw	high _font
 12867  004B76  21A5               	addwfc	(??_lcd_draw_char+3)& (0+255),w,b
 12868  004B78  6EF7               	movwf	tblptrh,c
 12869  004B7A                     	if	1	;There are 3 active tblptr bytes
 12870  004B7A  6AF8               	clrf	tblptru,c
 12871  004B7C  0E00               	movlw	low (__mediumconst shr (0+16))
 12872  004B7E  22F8               	addwfc	tblptru,f,c
 12873  004B80                     	endif
 12874  004B80  0009               	tblrd		*+
 12875  004B82  CFF5 F0A6          	movff	tablat,??_lcd_draw_char+4
 12876  004B86  0009               	tblrd		*+
 12877  004B88  CFF5 F0A7          	movff	tablat,??_lcd_draw_char+5
 12878  004B8C  C0AD  F0A8         	movff	lcd_draw_char@i,??_lcd_draw_char+6
 12879  004B90  0E80               	movlw	128
 12880  004B92  6FA9               	movwf	(??_lcd_draw_char+7)& (0+255),b
 12881  004B94  0E00               	movlw	0
 12882  004B96  6FAA               	movwf	(??_lcd_draw_char+8)& (0+255),b
 12883  004B98  2BA8               	incf	(??_lcd_draw_char+6)& (0+255),f,b
 12884  004B9A  EFD2  F025         	goto	u11904
 12885  004B9E                     u11905:
 12886  004B9E  35AA               	rlcf	(??_lcd_draw_char+8)& (0+255),w,b
 12887  004BA0  33AA               	rrcf	(??_lcd_draw_char+8)& (0+255),f,b
 12888  004BA2  33A9               	rrcf	(??_lcd_draw_char+7)& (0+255),f,b
 12889  004BA4                     u11904:
 12890  004BA4  2FA8               	decfsz	(??_lcd_draw_char+6)& (0+255),f,b
 12891  004BA6  EFCF  F025         	goto	u11905
 12892  004BAA  0100               	movlb	0	; () banked
 12893  004BAC  51A6               	movf	(??_lcd_draw_char+4)& (0+255),w,b
 12894  004BAE  17A9               	andwf	(??_lcd_draw_char+7)& (0+255),f,b
 12895  004BB0  51A7               	movf	(??_lcd_draw_char+5)& (0+255),w,b
 12896  004BB2  17AA               	andwf	(??_lcd_draw_char+8)& (0+255),f,b
 12897  004BB4  51A9               	movf	(??_lcd_draw_char+7)& (0+255),w,b
 12898  004BB6  11AA               	iorwf	(??_lcd_draw_char+8)& (0+255),w,b
 12899  004BB8  B4D8               	btfsc	status,2,c
 12900  004BBA  EFE1  F025         	goto	u11911
 12901  004BBE  EFE3  F025         	goto	u11910
 12902  004BC2                     u11911:
 12903  004BC2  EFEB  F025         	goto	l9359
 12904  004BC6                     u11910:
 12905  004BC6                     
 12906                           ; BSR set to: 0
 12907                           ;lib_ili9341.c: 368:                 {;lib_ili9341.c: 369:                     lcd_draw_
      +                          pixel(fg_color);
 12908  004BC6  C09E  F092         	movff	lcd_draw_char@fg_color,lcd_draw_pixel@color
 12909  004BCA  C09F  F093         	movff	lcd_draw_char@fg_color+1,lcd_draw_pixel@color+1
 12910  004BCE  EC3D  F034         	call	_lcd_draw_pixel	;wreg free
 12911                           
 12912                           ;lib_ili9341.c: 370:                 }
 12913  004BD2  EFF1  F025         	goto	l9361
 12914  004BD6                     l9359:
 12915                           
 12916                           ; BSR set to: 0
 12917                           ;lib_ili9341.c: 372:                 {;lib_ili9341.c: 373:                     lcd_draw_
      +                          pixel(bg_color);
 12918  004BD6  C0A0  F092         	movff	lcd_draw_char@bg_color,lcd_draw_pixel@color
 12919  004BDA  C0A1  F093         	movff	lcd_draw_char@bg_color+1,lcd_draw_pixel@color+1
 12920  004BDE  EC3D  F034         	call	_lcd_draw_pixel	;wreg free
 12921  004BE2                     l9361:
 12922                           
 12923                           ;lib_ili9341.c: 375:             }
 12924  004BE2  0100               	movlb	0	; () banked
 12925  004BE4  2BAD               	incf	lcd_draw_char@i& (0+255),f,b
 12926  004BE6                     
 12927                           ; BSR set to: 0
 12928  004BE6  0E07               	movlw	7
 12929  004BE8  65AD               	cpfsgt	lcd_draw_char@i& (0+255),b
 12930  004BEA  EFF9  F025         	goto	u11921
 12931  004BEE  EFFB  F025         	goto	u11920
 12932  004BF2                     u11921:
 12933  004BF2  EF8D  F025         	goto	l9355
 12934  004BF6                     u11920:
 12935  004BF6                     
 12936                           ; BSR set to: 0
 12937                           ;lib_ili9341.c: 376:         }
 12938  004BF6  2BAC               	incf	lcd_draw_char@k& (0+255),f,b
 12939  004BF8                     
 12940                           ; BSR set to: 0
 12941  004BF8  0E01               	movlw	1
 12942  004BFA  65AC               	cpfsgt	lcd_draw_char@k& (0+255),b
 12943  004BFC  EF02  F026         	goto	u11931
 12944  004C00  EF04  F026         	goto	u11930
 12945  004C04                     u11931:
 12946  004C04  EF8B  F025         	goto	l9349
 12947  004C08                     u11930:
 12948  004C08                     
 12949                           ; BSR set to: 0
 12950                           ;lib_ili9341.c: 377:     }
 12951  004C08  2BAB               	incf	lcd_draw_char@j& (0+255),f,b
 12952  004C0A                     l9371:
 12953                           
 12954                           ; BSR set to: 0
 12955  004C0A  90D8               	bcf	status,0,c
 12956  004C0C  359C               	rlcf	lcd_draw_char@fIndex& (0+255),w,b
 12957  004C0E  6EF6               	movwf	tblptrl,c
 12958  004C10  359D               	rlcf	(lcd_draw_char@fIndex+1)& (0+255),w,b
 12959  004C12  6EF7               	movwf	tblptrh,c
 12960  004C14  0E35               	movlw	low _font
 12961  004C16  26F6               	addwf	tblptrl,f,c
 12962  004C18  0EF1               	movlw	high _font
 12963  004C1A  22F7               	addwfc	tblptrh,f,c
 12964  004C1C                     	if	1	;There are 3 active tblptr bytes
 12965  004C1C  6AF8               	clrf	tblptru,c
 12966  004C1E  0E00               	movlw	low (__mediumconst shr (0+16))
 12967  004C20  22F8               	addwfc	tblptru,f,c
 12968  004C22                     	endif
 12969  004C22  51AB               	movf	lcd_draw_char@j& (0+255),w,b
 12970  004C24  6FA2               	movwf	??_lcd_draw_char& (0+255),b
 12971  004C26  6BA3               	clrf	(??_lcd_draw_char+1)& (0+255),b
 12972  004C28  0009               	tblrd		*+
 12973  004C2A  50F5               	movf	tablat,w,c
 12974  004C2C  5DA2               	subwf	??_lcd_draw_char& (0+255),w,b
 12975  004C2E  0009               	tblrd		*+
 12976  004C30  50F5               	movf	tablat,w,c
 12977  004C32  59A3               	subwfb	(??_lcd_draw_char+1)& (0+255),w,b
 12978  004C34  A0D8               	btfss	status,0,c
 12979  004C36  EF1F  F026         	goto	u11941
 12980  004C3A  EF21  F026         	goto	u11940
 12981  004C3E                     u11941:
 12982  004C3E  EF66  F025         	goto	l9341
 12983  004C42                     u11940:
 12984  004C42                     
 12985                           ; BSR set to: 0
 12986  004C42  0012               	return		;funcret
 12987  004C44                     __end_of_lcd_draw_char:
 12988                           	opt callstack 0
 12989                           
 12990 ;; *************** function _lcd_set_cursor *****************
 12991 ;; Defined at:
 12992 ;;		line 144 in file "lib_ili9341.c"
 12993 ;; Parameters:    Size  Location     Type
 12994 ;;  x               2   52[BANK0 ] unsigned short 
 12995 ;;  y               2   54[BANK0 ] unsigned short 
 12996 ;; Auto vars:     Size  Location     Type
 12997 ;;		None
 12998 ;; Return value:  Size  Location     Type
 12999 ;;                  1    wreg      unsigned char 
 13000 ;; Registers used:
 13001 ;;		wreg, status,2, status,0, cstack
 13002 ;; Tracked objects:
 13003 ;;		On entry : 0/0
 13004 ;;		On exit  : 0/0
 13005 ;;		Unchanged: 0/0
 13006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13007 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13010 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13011 ;;Total ram usage:        4 bytes
 13012 ;; Hardware stack levels used:    1
 13013 ;; Hardware stack levels required when called:   16
 13014 ;; This function calls:
 13015 ;;		_lcd_set_cursor_x
 13016 ;;		_lcd_set_cursor_y
 13017 ;; This function is called by:
 13018 ;;		_lcd_fill
 13019 ;;		_lcd_draw_char
 13020 ;;		_lcd_draw_pixel_at
 13021 ;;		_lcd_fill_rect
 13022 ;; This function uses a non-reentrant model
 13023 ;;
 13024                           
 13025                           	psect	text42
 13026  006328                     __ptext42:
 13027                           	opt callstack 0
 13028  006328                     _lcd_set_cursor:
 13029                           	opt callstack 12
 13030  006328                     
 13031                           ;lib_ili9341.c: 144: uint8_t lcd_set_cursor(uint16_t x, uint16_t y);lib_ili9341.c: 145: 
      +                          {;lib_ili9341.c: 146:     if( lcd_set_cursor_x(x) || lcd_set_cursor_y(y) )
 13032  006328  C094  F092         	movff	lcd_set_cursor@x,lcd_set_cursor_x@x
 13033  00632C  C095  F093         	movff	lcd_set_cursor@x+1,lcd_set_cursor_x@x+1
 13034  006330  EC9C  F030         	call	_lcd_set_cursor_x	;wreg free
 13035  006334  0900               	iorlw	0
 13036  006336  A4D8               	btfss	status,2,c
 13037  006338  EFA0  F031         	goto	u11761
 13038  00633C  EFA2  F031         	goto	u11760
 13039  006340                     u11761:
 13040  006340  EFB0  F031         	goto	l9267
 13041  006344                     u11760:
 13042  006344  C096  F092         	movff	lcd_set_cursor@y,lcd_set_cursor_y@y
 13043  006348  C097  F093         	movff	lcd_set_cursor@y+1,lcd_set_cursor_y@y+1
 13044  00634C  EC75  F030         	call	_lcd_set_cursor_y	;wreg free
 13045  006350  0900               	iorlw	0
 13046  006352  B4D8               	btfsc	status,2,c
 13047  006354  EFAE  F031         	goto	u11771
 13048  006358  EFB0  F031         	goto	u11770
 13049  00635C                     u11771:
 13050  00635C  EFB3  F031         	goto	l9271
 13051  006360                     u11770:
 13052  006360                     l9267:
 13053                           
 13054                           ;lib_ili9341.c: 147:     {;lib_ili9341.c: 148:         return 1;
 13055  006360  0E01               	movlw	1
 13056  006362  EFB4  F031         	goto	l584
 13057  006366                     l9271:
 13058                           
 13059                           ;lib_ili9341.c: 151:     return 0;
 13060  006366  0E00               	movlw	0
 13061  006368                     l584:
 13062  006368  0012               	return		;funcret
 13063  00636A                     __end_of_lcd_set_cursor:
 13064                           	opt callstack 0
 13065                           
 13066 ;; *************** function _lcd_set_cursor_y *****************
 13067 ;; Defined at:
 13068 ;;		line 170 in file "lib_ili9341.c"
 13069 ;; Parameters:    Size  Location     Type
 13070 ;;  y               2   50[BANK0 ] unsigned short 
 13071 ;; Auto vars:     Size  Location     Type
 13072 ;;		None
 13073 ;; Return value:  Size  Location     Type
 13074 ;;                  1    wreg      unsigned char 
 13075 ;; Registers used:
 13076 ;;		wreg, status,2, status,0, cstack
 13077 ;; Tracked objects:
 13078 ;;		On entry : 0/0
 13079 ;;		On exit  : 0/0
 13080 ;;		Unchanged: 0/0
 13081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13082 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13085 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13086 ;;Total ram usage:        2 bytes
 13087 ;; Hardware stack levels used:    1
 13088 ;; Hardware stack levels required when called:   15
 13089 ;; This function calls:
 13090 ;;		_lcd_send
 13091 ;; This function is called by:
 13092 ;;		_lcd_set_cursor
 13093 ;; This function uses a non-reentrant model
 13094 ;;
 13095                           
 13096                           	psect	text43
 13097  0060EA                     __ptext43:
 13098                           	opt callstack 0
 13099  0060EA                     _lcd_set_cursor_y:
 13100                           	opt callstack 12
 13101  0060EA                     
 13102                           ;lib_ili9341.c: 170: uint8_t lcd_set_cursor_y(uint16_t y);lib_ili9341.c: 171: {;lib_ili9
      +                          341.c: 172:     if( y >= 240 )
 13103  0060EA  0100               	movlb	0	; () banked
 13104  0060EC  5193               	movf	(lcd_set_cursor_y@y+1)& (0+255),w,b
 13105  0060EE  E109               	bnz	u11280
 13106  0060F0  0EF0               	movlw	240
 13107  0060F2  5D92               	subwf	lcd_set_cursor_y@y& (0+255),w,b
 13108  0060F4  A0D8               	btfss	status,0,c
 13109  0060F6  EF7F  F030         	goto	u11281
 13110  0060FA  EF81  F030         	goto	u11280
 13111  0060FE                     u11281:
 13112  0060FE  EF84  F030         	goto	l8907
 13113  006102                     u11280:
 13114  006102                     
 13115                           ; BSR set to: 0
 13116                           ;lib_ili9341.c: 173:     {;lib_ili9341.c: 174:         return 1;
 13117  006102  0E01               	movlw	1
 13118  006104  EF9B  F030         	goto	l592
 13119  006108                     l8907:
 13120                           
 13121                           ; BSR set to: 0
 13122                           ;lib_ili9341.c: 177:     lcd_send(0, 0x2A);
 13123  006108  0E2A               	movlw	42
 13124  00610A  6F90               	movwf	lcd_send@value& (0+255),b
 13125  00610C  0E00               	movlw	0
 13126  00610E  EC14  F034         	call	_lcd_send
 13127                           
 13128                           ;lib_ili9341.c: 178:     lcd_send(1, y >> 8);
 13129  006112  0100               	movlb	0	; () banked
 13130  006114  5193               	movf	(lcd_set_cursor_y@y+1)& (0+255),w,b
 13131  006116  6F90               	movwf	lcd_send@value& (0+255),b
 13132  006118  0E01               	movlw	1
 13133  00611A  EC14  F034         	call	_lcd_send
 13134                           
 13135                           ;lib_ili9341.c: 179:     lcd_send(1, y & 0xFF);
 13136  00611E  C092  F090         	movff	lcd_set_cursor_y@y,lcd_send@value
 13137  006122  0E01               	movlw	1
 13138  006124  EC14  F034         	call	_lcd_send
 13139                           
 13140                           ;lib_ili9341.c: 180:     lcd_send(0, 0x2c);
 13141  006128  0E2C               	movlw	44
 13142  00612A  0100               	movlb	0	; () banked
 13143  00612C  6F90               	movwf	lcd_send@value& (0+255),b
 13144  00612E  0E00               	movlw	0
 13145  006130  EC14  F034         	call	_lcd_send
 13146  006134                     
 13147                           ;lib_ili9341.c: 182:     return 0;
 13148  006134  0E00               	movlw	0
 13149  006136                     l592:
 13150  006136  0012               	return		;funcret
 13151  006138                     __end_of_lcd_set_cursor_y:
 13152                           	opt callstack 0
 13153                           
 13154 ;; *************** function _lcd_set_cursor_x *****************
 13155 ;; Defined at:
 13156 ;;		line 155 in file "lib_ili9341.c"
 13157 ;; Parameters:    Size  Location     Type
 13158 ;;  x               2   50[BANK0 ] unsigned short 
 13159 ;; Auto vars:     Size  Location     Type
 13160 ;;		None
 13161 ;; Return value:  Size  Location     Type
 13162 ;;                  1    wreg      unsigned char 
 13163 ;; Registers used:
 13164 ;;		wreg, status,2, status,0, cstack
 13165 ;; Tracked objects:
 13166 ;;		On entry : 0/0
 13167 ;;		On exit  : 0/0
 13168 ;;		Unchanged: 0/0
 13169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13170 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13173 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13174 ;;Total ram usage:        2 bytes
 13175 ;; Hardware stack levels used:    1
 13176 ;; Hardware stack levels required when called:   15
 13177 ;; This function calls:
 13178 ;;		_lcd_send
 13179 ;; This function is called by:
 13180 ;;		_lcd_set_cursor
 13181 ;; This function uses a non-reentrant model
 13182 ;;
 13183                           
 13184                           	psect	text44
 13185  006138                     __ptext44:
 13186                           	opt callstack 0
 13187  006138                     _lcd_set_cursor_x:
 13188                           	opt callstack 12
 13189  006138                     
 13190                           ;lib_ili9341.c: 155: uint8_t lcd_set_cursor_x(uint16_t x);lib_ili9341.c: 156: {;lib_ili9
      +                          341.c: 157:     if( x >= 320 )
 13191  006138  0E40               	movlw	64
 13192  00613A  0100               	movlb	0	; () banked
 13193  00613C  5D92               	subwf	lcd_set_cursor_x@x& (0+255),w,b
 13194  00613E  0E01               	movlw	1
 13195  006140  5993               	subwfb	(lcd_set_cursor_x@x+1)& (0+255),w,b
 13196  006142  A0D8               	btfss	status,0,c
 13197  006144  EFA6  F030         	goto	u11271
 13198  006148  EFA8  F030         	goto	u11270
 13199  00614C                     u11271:
 13200  00614C  EFAB  F030         	goto	l8895
 13201  006150                     u11270:
 13202  006150                     
 13203                           ; BSR set to: 0
 13204                           ;lib_ili9341.c: 158:     {;lib_ili9341.c: 159:         return 1;
 13205  006150  0E01               	movlw	1
 13206  006152  EFC2  F030         	goto	l588
 13207  006156                     l8895:
 13208                           
 13209                           ; BSR set to: 0
 13210                           ;lib_ili9341.c: 162:     lcd_send(0, 0x2B);
 13211  006156  0E2B               	movlw	43
 13212  006158  6F90               	movwf	lcd_send@value& (0+255),b
 13213  00615A  0E00               	movlw	0
 13214  00615C  EC14  F034         	call	_lcd_send
 13215                           
 13216                           ;lib_ili9341.c: 163:     lcd_send(1, x >> 8);
 13217  006160  0100               	movlb	0	; () banked
 13218  006162  5193               	movf	(lcd_set_cursor_x@x+1)& (0+255),w,b
 13219  006164  6F90               	movwf	lcd_send@value& (0+255),b
 13220  006166  0E01               	movlw	1
 13221  006168  EC14  F034         	call	_lcd_send
 13222                           
 13223                           ;lib_ili9341.c: 164:     lcd_send(1, x & 0xFF);
 13224  00616C  C092  F090         	movff	lcd_set_cursor_x@x,lcd_send@value
 13225  006170  0E01               	movlw	1
 13226  006172  EC14  F034         	call	_lcd_send
 13227                           
 13228                           ;lib_ili9341.c: 165:     lcd_send(0, 0x2c);
 13229  006176  0E2C               	movlw	44
 13230  006178  0100               	movlb	0	; () banked
 13231  00617A  6F90               	movwf	lcd_send@value& (0+255),b
 13232  00617C  0E00               	movlw	0
 13233  00617E  EC14  F034         	call	_lcd_send
 13234  006182                     
 13235                           ;lib_ili9341.c: 167:     return 0;
 13236  006182  0E00               	movlw	0
 13237  006184                     l588:
 13238  006184  0012               	return		;funcret
 13239  006186                     __end_of_lcd_set_cursor_x:
 13240                           	opt callstack 0
 13241                           
 13242 ;; *************** function _lcd_draw_pixel *****************
 13243 ;; Defined at:
 13244 ;;		line 185 in file "lib_ili9341.c"
 13245 ;; Parameters:    Size  Location     Type
 13246 ;;  color           2   50[BANK0 ] unsigned short 
 13247 ;; Auto vars:     Size  Location     Type
 13248 ;;		None
 13249 ;; Return value:  Size  Location     Type
 13250 ;;                  1    wreg      unsigned char 
 13251 ;; Registers used:
 13252 ;;		wreg, status,2, cstack
 13253 ;; Tracked objects:
 13254 ;;		On entry : 0/0
 13255 ;;		On exit  : 0/0
 13256 ;;		Unchanged: 0/0
 13257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13258 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13261 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13262 ;;Total ram usage:        2 bytes
 13263 ;; Hardware stack levels used:    1
 13264 ;; Hardware stack levels required when called:   15
 13265 ;; This function calls:
 13266 ;;		_lcd_send
 13267 ;; This function is called by:
 13268 ;;		_lcd_fill
 13269 ;;		_lcd_draw_char
 13270 ;;		_lcd_draw_pixel_at
 13271 ;;		_lcd_fill_rect
 13272 ;; This function uses a non-reentrant model
 13273 ;;
 13274                           
 13275                           	psect	text45
 13276  00687A                     __ptext45:
 13277                           	opt callstack 0
 13278  00687A                     _lcd_draw_pixel:
 13279                           	opt callstack 13
 13280  00687A                     
 13281                           ;lib_ili9341.c: 185: uint8_t lcd_draw_pixel(uint16_t color);lib_ili9341.c: 186: {;lib_il
      +                          i9341.c: 187:     lcd_send(1, color >> 8);
 13282  00687A  0100               	movlb	0	; () banked
 13283  00687C  5193               	movf	(lcd_draw_pixel@color+1)& (0+255),w,b
 13284  00687E  6F90               	movwf	lcd_send@value& (0+255),b
 13285  006880  0E01               	movlw	1
 13286  006882  EC14  F034         	call	_lcd_send
 13287                           
 13288                           ;lib_ili9341.c: 188:     lcd_send(1, color & 0xFF);
 13289  006886  C092  F090         	movff	lcd_draw_pixel@color,lcd_send@value
 13290  00688A  0E01               	movlw	1
 13291  00688C  EC14  F034         	call	_lcd_send
 13292  006890  0012               	return		;funcret
 13293  006892                     __end_of_lcd_draw_pixel:
 13294                           	opt callstack 0
 13295                           
 13296 ;; *************** function _lcd_send *****************
 13297 ;; Defined at:
 13298 ;;		line 134 in file "lib_ili9341.c"
 13299 ;; Parameters:    Size  Location     Type
 13300 ;;  dc              1    wreg     _Bool 
 13301 ;;  value           1   48[BANK0 ] unsigned char 
 13302 ;; Auto vars:     Size  Location     Type
 13303 ;;  dc              1   49[BANK0 ] _Bool 
 13304 ;; Return value:  Size  Location     Type
 13305 ;;                  1    wreg      void 
 13306 ;; Registers used:
 13307 ;;		wreg, status,2, cstack
 13308 ;; Tracked objects:
 13309 ;;		On entry : 0/0
 13310 ;;		On exit  : 0/0
 13311 ;;		Unchanged: 0/0
 13312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13313 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13314 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13316 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13317 ;;Total ram usage:        2 bytes
 13318 ;; Hardware stack levels used:    1
 13319 ;; Hardware stack levels required when called:   14
 13320 ;; This function calls:
 13321 ;;		_SPI_ExchangeByte
 13322 ;; This function is called by:
 13323 ;;		_lcd_init
 13324 ;;		_lcd_set_cursor_x
 13325 ;;		_lcd_set_cursor_y
 13326 ;;		_lcd_draw_pixel
 13327 ;; This function uses a non-reentrant model
 13328 ;;
 13329                           
 13330                           	psect	text46
 13331  006828                     __ptext46:
 13332                           	opt callstack 0
 13333  006828                     _lcd_send:
 13334                           	opt callstack 15
 13335                           
 13336                           ;incstack = 0
 13337                           ;lcd_send@dc stored from wreg
 13338  006828  0100               	movlb	0	; () banked
 13339  00682A  6F91               	movwf	lcd_send@dc& (0+255),b
 13340  00682C                     
 13341                           ;lib_ili9341.c: 134: void lcd_send(_Bool dc, uint8_t value);lib_ili9341.c: 135: {;lib_il
      +                          i9341.c: 136:     LATEbits.LE0 = dc;
 13342  00682C  0100               	movlb	0	; () banked
 13343  00682E  B191               	btfsc	lcd_send@dc& (0+255),0,b
 13344  006830  D002               	bra	u10615
 13345  006832  908D               	bcf	141,0,c	;volatile
 13346  006834  D001               	bra	u10616
 13347  006836                     u10615:
 13348  006836  808D               	bsf	141,0,c	;volatile
 13349  006838                     u10616:
 13350  006838                     
 13351                           ;lib_ili9341.c: 138:     LATEbits.LE1 = 0;
 13352  006838  928D               	bcf	141,1,c	;volatile
 13353  00683A                     
 13354                           ;lib_ili9341.c: 140:     SPI_ExchangeByte(value);
 13355  00683A  0100               	movlb	0	; () banked
 13356  00683C  5190               	movf	lcd_send@value& (0+255),w,b
 13357  00683E  EC23  F034         	call	_SPI_ExchangeByte
 13358  006842                     
 13359                           ;lib_ili9341.c: 141:     LATEbits.LE1 = 1;
 13360  006842  828D               	bsf	141,1,c	;volatile
 13361  006844  0012               	return		;funcret
 13362  006846                     __end_of_lcd_send:
 13363                           	opt callstack 0
 13364                           
 13365 ;; *************** function _SPI_ExchangeByte *****************
 13366 ;; Defined at:
 13367 ;;		line 92 in file "mcc_generated_files/spi.c"
 13368 ;; Parameters:    Size  Location     Type
 13369 ;;  data            1    wreg     unsigned char 
 13370 ;; Auto vars:     Size  Location     Type
 13371 ;;  data            1   47[BANK0 ] unsigned char 
 13372 ;; Return value:  Size  Location     Type
 13373 ;;                  1    wreg      unsigned char 
 13374 ;; Registers used:
 13375 ;;		wreg, status,2
 13376 ;; Tracked objects:
 13377 ;;		On entry : 0/0
 13378 ;;		On exit  : 0/0
 13379 ;;		Unchanged: 0/0
 13380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13382 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13384 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13385 ;;Total ram usage:        1 bytes
 13386 ;; Hardware stack levels used:    1
 13387 ;; Hardware stack levels required when called:   13
 13388 ;; This function calls:
 13389 ;;		Nothing
 13390 ;; This function is called by:
 13391 ;;		_lcd_send
 13392 ;;		_SPI_WriteBlock
 13393 ;;		_SPI_ReadBlock
 13394 ;; This function uses a non-reentrant model
 13395 ;;
 13396                           
 13397                           	psect	text47
 13398  006846                     __ptext47:
 13399                           	opt callstack 0
 13400  006846                     _SPI_ExchangeByte:
 13401                           	opt callstack 15
 13402                           
 13403                           ;incstack = 0
 13404                           ;SPI_ExchangeByte@data stored from wreg
 13405  006846  0100               	movlb	0	; () banked
 13406  006848  6F8F               	movwf	SPI_ExchangeByte@data& (0+255),b
 13407  00684A                     
 13408                           ;mcc_generated_files/spi.c: 92: uint8_t SPI_ExchangeByte(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 93: {;mcc_generated_files/spi.c: 94:     SSPBUF = data;
 13409  00684A  C08F  FFC9         	movff	SPI_ExchangeByte@data,4041	;volatile
 13410  00684E                     l61:
 13411  00684E  A69E               	btfss	158,3,c	;volatile
 13412  006850  EF2C  F034         	goto	u9671
 13413  006854  EF2E  F034         	goto	u9670
 13414  006858                     u9671:
 13415  006858  EF27  F034         	goto	l61
 13416  00685C                     u9670:
 13417  00685C                     
 13418                           ;mcc_generated_files/spi.c: 96:     PIR1bits.SSPIF = 0;
 13419  00685C  969E               	bcf	158,3,c	;volatile
 13420                           
 13421                           ;mcc_generated_files/spi.c: 97:     return SSPBUF;
 13422  00685E  50C9               	movf	201,w,c	;volatile
 13423  006860  0012               	return		;funcret
 13424  006862                     __end_of_SPI_ExchangeByte:
 13425                           	opt callstack 0
 13426                           
 13427 ;; *************** function ___lmul *****************
 13428 ;; Defined at:
 13429 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
 13430 ;; Parameters:    Size  Location     Type
 13431 ;;  multiplier      4   47[BANK0 ] unsigned long 
 13432 ;;  multiplicand    4   51[BANK0 ] unsigned long 
 13433 ;; Auto vars:     Size  Location     Type
 13434 ;;  product         4   55[BANK0 ] unsigned long 
 13435 ;; Return value:  Size  Location     Type
 13436 ;;                  4   47[BANK0 ] unsigned long 
 13437 ;; Registers used:
 13438 ;;		wreg, status,2, status,0
 13439 ;; Tracked objects:
 13440 ;;		On entry : 0/0
 13441 ;;		On exit  : 0/0
 13442 ;;		Unchanged: 0/0
 13443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13444 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13445 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13447 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13448 ;;Total ram usage:       12 bytes
 13449 ;; Hardware stack levels used:    1
 13450 ;; Hardware stack levels required when called:   13
 13451 ;; This function calls:
 13452 ;;		Nothing
 13453 ;; This function is called by:
 13454 ;;		_main
 13455 ;; This function uses a non-reentrant model
 13456 ;;
 13457                           
 13458                           	psect	text48
 13459  005CE2                     __ptext48:
 13460                           	opt callstack 0
 13461  005CE2                     ___lmul:
 13462                           	opt callstack 17
 13463  005CE2  0E00               	movlw	0
 13464  005CE4  0100               	movlb	0	; () banked
 13465  005CE6  6F97               	movwf	___lmul@product& (0+255),b
 13466  005CE8  0E00               	movlw	0
 13467  005CEA  6F98               	movwf	(___lmul@product+1)& (0+255),b
 13468  005CEC  0E00               	movlw	0
 13469  005CEE  6F99               	movwf	(___lmul@product+2)& (0+255),b
 13470  005CF0  0E00               	movlw	0
 13471  005CF2  6F9A               	movwf	(___lmul@product+3)& (0+255),b
 13472  005CF4                     l7093:
 13473                           
 13474                           ; BSR set to: 0
 13475  005CF4  A18F               	btfss	___lmul@multiplier& (0+255),0,b
 13476  005CF6  EF7F  F02E         	goto	u8111
 13477  005CFA  EF81  F02E         	goto	u8110
 13478  005CFE                     u8111:
 13479  005CFE  EF89  F02E         	goto	l7097
 13480  005D02                     u8110:
 13481  005D02                     
 13482                           ; BSR set to: 0
 13483  005D02  5193               	movf	___lmul@multiplicand& (0+255),w,b
 13484  005D04  2797               	addwf	___lmul@product& (0+255),f,b
 13485  005D06  5194               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 13486  005D08  2398               	addwfc	(___lmul@product+1)& (0+255),f,b
 13487  005D0A  5195               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 13488  005D0C  2399               	addwfc	(___lmul@product+2)& (0+255),f,b
 13489  005D0E  5196               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 13490  005D10  239A               	addwfc	(___lmul@product+3)& (0+255),f,b
 13491  005D12                     l7097:
 13492                           
 13493                           ; BSR set to: 0
 13494  005D12  90D8               	bcf	status,0,c
 13495  005D14  3793               	rlcf	___lmul@multiplicand& (0+255),f,b
 13496  005D16  3794               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 13497  005D18  3795               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 13498  005D1A  3796               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 13499  005D1C                     
 13500                           ; BSR set to: 0
 13501  005D1C  90D8               	bcf	status,0,c
 13502  005D1E  3392               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 13503  005D20  3391               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 13504  005D22  3390               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 13505  005D24  338F               	rrcf	___lmul@multiplier& (0+255),f,b
 13506  005D26  518F               	movf	___lmul@multiplier& (0+255),w,b
 13507  005D28  1190               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 13508  005D2A  1191               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 13509  005D2C  1192               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 13510  005D2E  A4D8               	btfss	status,2,c
 13511  005D30  EF9C  F02E         	goto	u8121
 13512  005D34  EF9E  F02E         	goto	u8120
 13513  005D38                     u8121:
 13514  005D38  EF7A  F02E         	goto	l7093
 13515  005D3C                     u8120:
 13516  005D3C                     
 13517                           ; BSR set to: 0
 13518  005D3C  C097  F08F         	movff	___lmul@product,?___lmul
 13519  005D40  C098  F090         	movff	___lmul@product+1,?___lmul+1
 13520  005D44  C099  F091         	movff	___lmul@product+2,?___lmul+2
 13521  005D48  C09A  F092         	movff	___lmul@product+3,?___lmul+3
 13522  005D4C                     
 13523                           ; BSR set to: 0
 13524  005D4C  0012               	return		;funcret
 13525  005D4E                     __end_of___lmul:
 13526                           	opt callstack 0
 13527                           
 13528 ;; *************** function ___aldiv *****************
 13529 ;; Defined at:
 13530 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 13531 ;; Parameters:    Size  Location     Type
 13532 ;;  dividend        4   59[BANK0 ] long 
 13533 ;;  divisor         4   63[BANK0 ] long 
 13534 ;; Auto vars:     Size  Location     Type
 13535 ;;  quotient        4   69[BANK0 ] long 
 13536 ;;  sign            1   68[BANK0 ] unsigned char 
 13537 ;;  counter         1   67[BANK0 ] unsigned char 
 13538 ;; Return value:  Size  Location     Type
 13539 ;;                  4   59[BANK0 ] long 
 13540 ;; Registers used:
 13541 ;;		wreg, status,2, status,0
 13542 ;; Tracked objects:
 13543 ;;		On entry : 0/0
 13544 ;;		On exit  : 0/0
 13545 ;;		Unchanged: 0/0
 13546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13547 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13548 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13550 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13551 ;;Total ram usage:       14 bytes
 13552 ;; Hardware stack levels used:    1
 13553 ;; Hardware stack levels required when called:   13
 13554 ;; This function calls:
 13555 ;;		Nothing
 13556 ;; This function is called by:
 13557 ;;		_main
 13558 ;; This function uses a non-reentrant model
 13559 ;;
 13560                           
 13561                           	psect	text49
 13562  005156                     __ptext49:
 13563                           	opt callstack 0
 13564  005156                     ___aldiv:
 13565                           	opt callstack 17
 13566  005156  0E00               	movlw	0
 13567  005158  0100               	movlb	0	; () banked
 13568  00515A  6FA4               	movwf	___aldiv@sign& (0+255),b
 13569  00515C                     
 13570                           ; BSR set to: 0
 13571  00515C  BFA2               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
 13572  00515E  EFB5  F028         	goto	u8130
 13573  005162  EFB3  F028         	goto	u8131
 13574  005166                     u8131:
 13575  005166  EFBF  F028         	goto	l7109
 13576  00516A                     u8130:
 13577  00516A                     
 13578                           ; BSR set to: 0
 13579  00516A  1FA2               	comf	(___aldiv@divisor+3)& (0+255),f,b
 13580  00516C  1FA1               	comf	(___aldiv@divisor+2)& (0+255),f,b
 13581  00516E  1FA0               	comf	(___aldiv@divisor+1)& (0+255),f,b
 13582  005170  6D9F               	negf	___aldiv@divisor& (0+255),b
 13583  005172  0E00               	movlw	0
 13584  005174  23A0               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 13585  005176  23A1               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 13586  005178  23A2               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 13587  00517A                     
 13588                           ; BSR set to: 0
 13589  00517A  0E01               	movlw	1
 13590  00517C  6FA4               	movwf	___aldiv@sign& (0+255),b
 13591  00517E                     l7109:
 13592                           
 13593                           ; BSR set to: 0
 13594  00517E  BF9E               	btfsc	(___aldiv@dividend+3)& (0+255),7,b
 13595  005180  EFC6  F028         	goto	u8140
 13596  005184  EFC4  F028         	goto	u8141
 13597  005188                     u8141:
 13598  005188  EFD0  F028         	goto	l7115
 13599  00518C                     u8140:
 13600  00518C                     
 13601                           ; BSR set to: 0
 13602  00518C  1F9E               	comf	(___aldiv@dividend+3)& (0+255),f,b
 13603  00518E  1F9D               	comf	(___aldiv@dividend+2)& (0+255),f,b
 13604  005190  1F9C               	comf	(___aldiv@dividend+1)& (0+255),f,b
 13605  005192  6D9B               	negf	___aldiv@dividend& (0+255),b
 13606  005194  0E00               	movlw	0
 13607  005196  239C               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 13608  005198  239D               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 13609  00519A  239E               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 13610  00519C                     
 13611                           ; BSR set to: 0
 13612  00519C  0E01               	movlw	1
 13613  00519E  1BA4               	xorwf	___aldiv@sign& (0+255),f,b
 13614  0051A0                     l7115:
 13615                           
 13616                           ; BSR set to: 0
 13617  0051A0  0E00               	movlw	0
 13618  0051A2  6FA5               	movwf	___aldiv@quotient& (0+255),b
 13619  0051A4  0E00               	movlw	0
 13620  0051A6  6FA6               	movwf	(___aldiv@quotient+1)& (0+255),b
 13621  0051A8  0E00               	movlw	0
 13622  0051AA  6FA7               	movwf	(___aldiv@quotient+2)& (0+255),b
 13623  0051AC  0E00               	movlw	0
 13624  0051AE  6FA8               	movwf	(___aldiv@quotient+3)& (0+255),b
 13625  0051B0                     
 13626                           ; BSR set to: 0
 13627  0051B0  519F               	movf	___aldiv@divisor& (0+255),w,b
 13628  0051B2  11A0               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 13629  0051B4  11A1               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 13630  0051B6  11A2               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 13631  0051B8  B4D8               	btfsc	status,2,c
 13632  0051BA  EFE1  F028         	goto	u8151
 13633  0051BE  EFE3  F028         	goto	u8150
 13634  0051C2                     u8151:
 13635  0051C2  EF19  F029         	goto	l7137
 13636  0051C6                     u8150:
 13637  0051C6                     
 13638                           ; BSR set to: 0
 13639  0051C6  0E01               	movlw	1
 13640  0051C8  6FA3               	movwf	___aldiv@counter& (0+255),b
 13641  0051CA  EFED  F028         	goto	l7123
 13642  0051CE                     l7121:
 13643                           
 13644                           ; BSR set to: 0
 13645  0051CE  90D8               	bcf	status,0,c
 13646  0051D0  379F               	rlcf	___aldiv@divisor& (0+255),f,b
 13647  0051D2  37A0               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 13648  0051D4  37A1               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 13649  0051D6  37A2               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 13650  0051D8  2BA3               	incf	___aldiv@counter& (0+255),f,b
 13651  0051DA                     l7123:
 13652                           
 13653                           ; BSR set to: 0
 13654  0051DA  AFA2               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 13655  0051DC  EFF2  F028         	goto	u8161
 13656  0051E0  EFF4  F028         	goto	u8160
 13657  0051E4                     u8161:
 13658  0051E4  EFE7  F028         	goto	l7121
 13659  0051E8                     u8160:
 13660  0051E8                     l7125:
 13661                           
 13662                           ; BSR set to: 0
 13663  0051E8  90D8               	bcf	status,0,c
 13664  0051EA  37A5               	rlcf	___aldiv@quotient& (0+255),f,b
 13665  0051EC  37A6               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 13666  0051EE  37A7               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 13667  0051F0  37A8               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 13668  0051F2                     
 13669                           ; BSR set to: 0
 13670  0051F2  519F               	movf	___aldiv@divisor& (0+255),w,b
 13671  0051F4  5D9B               	subwf	___aldiv@dividend& (0+255),w,b
 13672  0051F6  51A0               	movf	(___aldiv@divisor+1)& (0+255),w,b
 13673  0051F8  599C               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 13674  0051FA  51A1               	movf	(___aldiv@divisor+2)& (0+255),w,b
 13675  0051FC  599D               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 13676  0051FE  51A2               	movf	(___aldiv@divisor+3)& (0+255),w,b
 13677  005200  599E               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 13678  005202  A0D8               	btfss	status,0,c
 13679  005204  EF06  F029         	goto	u8171
 13680  005208  EF08  F029         	goto	u8170
 13681  00520C                     u8171:
 13682  00520C  EF11  F029         	goto	l7133
 13683  005210                     u8170:
 13684  005210                     
 13685                           ; BSR set to: 0
 13686  005210  519F               	movf	___aldiv@divisor& (0+255),w,b
 13687  005212  5F9B               	subwf	___aldiv@dividend& (0+255),f,b
 13688  005214  51A0               	movf	(___aldiv@divisor+1)& (0+255),w,b
 13689  005216  5B9C               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 13690  005218  51A1               	movf	(___aldiv@divisor+2)& (0+255),w,b
 13691  00521A  5B9D               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 13692  00521C  51A2               	movf	(___aldiv@divisor+3)& (0+255),w,b
 13693  00521E  5B9E               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 13694  005220                     
 13695                           ; BSR set to: 0
 13696  005220  81A5               	bsf	___aldiv@quotient& (0+255),0,b
 13697  005222                     l7133:
 13698                           
 13699                           ; BSR set to: 0
 13700  005222  90D8               	bcf	status,0,c
 13701  005224  33A2               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 13702  005226  33A1               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 13703  005228  33A0               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 13704  00522A  339F               	rrcf	___aldiv@divisor& (0+255),f,b
 13705  00522C                     
 13706                           ; BSR set to: 0
 13707  00522C  2FA3               	decfsz	___aldiv@counter& (0+255),f,b
 13708  00522E  EFF4  F028         	goto	l7125
 13709  005232                     l7137:
 13710                           
 13711                           ; BSR set to: 0
 13712  005232  51A4               	movf	___aldiv@sign& (0+255),w,b
 13713  005234  B4D8               	btfsc	status,2,c
 13714  005236  EF1F  F029         	goto	u8181
 13715  00523A  EF21  F029         	goto	u8180
 13716  00523E                     u8181:
 13717  00523E  EF29  F029         	goto	l7141
 13718  005242                     u8180:
 13719  005242                     
 13720                           ; BSR set to: 0
 13721  005242  1FA8               	comf	(___aldiv@quotient+3)& (0+255),f,b
 13722  005244  1FA7               	comf	(___aldiv@quotient+2)& (0+255),f,b
 13723  005246  1FA6               	comf	(___aldiv@quotient+1)& (0+255),f,b
 13724  005248  6DA5               	negf	___aldiv@quotient& (0+255),b
 13725  00524A  0E00               	movlw	0
 13726  00524C  23A6               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 13727  00524E  23A7               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 13728  005250  23A8               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 13729  005252                     l7141:
 13730                           
 13731                           ; BSR set to: 0
 13732  005252  C0A5  F09B         	movff	___aldiv@quotient,?___aldiv
 13733  005256  C0A6  F09C         	movff	___aldiv@quotient+1,?___aldiv+1
 13734  00525A  C0A7  F09D         	movff	___aldiv@quotient+2,?___aldiv+2
 13735  00525E  C0A8  F09E         	movff	___aldiv@quotient+3,?___aldiv+3
 13736  005262                     
 13737                           ; BSR set to: 0
 13738  005262  0012               	return		;funcret
 13739  005264                     __end_of___aldiv:
 13740                           	opt callstack 0
 13741                           
 13742 ;; *************** function _SYSTEM_Initialize *****************
 13743 ;; Defined at:
 13744 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13745 ;; Parameters:    Size  Location     Type
 13746 ;;		None
 13747 ;; Auto vars:     Size  Location     Type
 13748 ;;		None
 13749 ;; Return value:  Size  Location     Type
 13750 ;;                  1    wreg      void 
 13751 ;; Registers used:
 13752 ;;		wreg, status,2, status,0, cstack
 13753 ;; Tracked objects:
 13754 ;;		On entry : 0/0
 13755 ;;		On exit  : 0/0
 13756 ;;		Unchanged: 0/0
 13757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13762 ;;Total ram usage:        0 bytes
 13763 ;; Hardware stack levels used:    1
 13764 ;; Hardware stack levels required when called:   15
 13765 ;; This function calls:
 13766 ;;		_ADC_Initialize
 13767 ;;		_EUSART1_Initialize
 13768 ;;		_INTERRUPT_Initialize
 13769 ;;		_OSCILLATOR_Initialize
 13770 ;;		_PIN_MANAGER_Initialize
 13771 ;;		_SPI_Initialize
 13772 ;;		_TMR0_Initialize
 13773 ;;		_TMR1_Initialize
 13774 ;; This function is called by:
 13775 ;;		_main
 13776 ;; This function uses a non-reentrant model
 13777 ;;
 13778                           
 13779                           	psect	text50
 13780  006806                     __ptext50:
 13781                           	opt callstack 0
 13782  006806                     _SYSTEM_Initialize:
 13783                           	opt callstack 15
 13784  006806                     
 13785                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
 13786  006806  ECB8  F034         	call	_INTERRUPT_Initialize	;wreg free
 13787  00680A                     
 13788                           ;mcc_generated_files/mcc.c: 54:     SPI_Initialize();
 13789  00680A  EC75  F034         	call	_SPI_Initialize	;wreg free
 13790  00680E                     
 13791                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 13792  00680E  EC0B  F031         	call	_PIN_MANAGER_Initialize	;wreg free
 13793  006812                     
 13794                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 13795  006812  EC7E  F034         	call	_OSCILLATOR_Initialize	;wreg free
 13796  006816                     
 13797                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
 13798  006816  EC55  F034         	call	_ADC_Initialize	;wreg free
 13799  00681A                     
 13800                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
 13801  00681A  EC60  F033         	call	_TMR1_Initialize	;wreg free
 13802  00681E                     
 13803                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
 13804  00681E  ECA0  F033         	call	_TMR0_Initialize	;wreg free
 13805  006822                     
 13806                           ;mcc_generated_files/mcc.c: 60:     EUSART1_Initialize();
 13807  006822  EC2E  F031         	call	_EUSART1_Initialize	;wreg free
 13808  006826  0012               	return		;funcret
 13809  006828                     __end_of_SYSTEM_Initialize:
 13810                           	opt callstack 0
 13811                           
 13812 ;; *************** function _TMR1_Initialize *****************
 13813 ;; Defined at:
 13814 ;;		line 63 in file "mcc_generated_files/tmr1.c"
 13815 ;; Parameters:    Size  Location     Type
 13816 ;;		None
 13817 ;; Auto vars:     Size  Location     Type
 13818 ;;		None
 13819 ;; Return value:  Size  Location     Type
 13820 ;;                  1    wreg      void 
 13821 ;; Registers used:
 13822 ;;		wreg, status,2, status,0
 13823 ;; Tracked objects:
 13824 ;;		On entry : 0/0
 13825 ;;		On exit  : 0/0
 13826 ;;		Unchanged: 0/0
 13827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13830 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13831 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13832 ;;Total ram usage:        2 bytes
 13833 ;; Hardware stack levels used:    1
 13834 ;; Hardware stack levels required when called:   13
 13835 ;; This function calls:
 13836 ;;		Nothing
 13837 ;; This function is called by:
 13838 ;;		_SYSTEM_Initialize
 13839 ;; This function uses a non-reentrant model
 13840 ;;
 13841                           
 13842                           	psect	text51
 13843  0066C0                     __ptext51:
 13844                           	opt callstack 0
 13845  0066C0                     _TMR1_Initialize:
 13846                           	opt callstack 16
 13847  0066C0                     
 13848                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
 13849  0066C0  0E00               	movlw	0
 13850  0066C2  6EAA               	movwf	170,c	;volatile
 13851                           
 13852                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x0B;
 13853  0066C4  0E0B               	movlw	11
 13854  0066C6  6ECF               	movwf	207,c	;volatile
 13855                           
 13856                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0xDC;
 13857  0066C8  0EDC               	movlw	220
 13858  0066CA  6ECE               	movwf	206,c	;volatile
 13859  0066CC                     
 13860                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
 13861  0066CC  909E               	bcf	158,0,c	;volatile
 13862  0066CE                     
 13863                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 13864  0066CE  50CE               	movf	206,w,c	;volatile
 13865  0066D0  CFCF F08F          	movff	4047,??_TMR1_Initialize	;volatile
 13866  0066D4  0100               	movlb	0	; () banked
 13867  0066D6  6B90               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 13868  0066D8  C08F  F090         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 13869  0066DC  6B8F               	clrf	??_TMR1_Initialize& (0+255),b
 13870  0066DE  118F               	iorwf	??_TMR1_Initialize& (0+255),w,b
 13871  0066E0  6FC6               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 13872  0066E2  5190               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 13873  0066E4  6FC7               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 13874  0066E6                     
 13875                           ; BSR set to: 0
 13876                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x31;
 13877  0066E6  0E31               	movlw	49
 13878  0066E8  6ECD               	movwf	205,c	;volatile
 13879  0066EA                     
 13880                           ; BSR set to: 0
 13881  0066EA  0012               	return		;funcret
 13882  0066EC                     __end_of_TMR1_Initialize:
 13883                           	opt callstack 0
 13884                           
 13885 ;; *************** function _TMR0_Initialize *****************
 13886 ;; Defined at:
 13887 ;;		line 66 in file "mcc_generated_files/tmr0.c"
 13888 ;; Parameters:    Size  Location     Type
 13889 ;;		None
 13890 ;; Auto vars:     Size  Location     Type
 13891 ;;		None
 13892 ;; Return value:  Size  Location     Type
 13893 ;;                  1    wreg      void 
 13894 ;; Registers used:
 13895 ;;		wreg, status,2, status,0
 13896 ;; Tracked objects:
 13897 ;;		On entry : 0/0
 13898 ;;		On exit  : 0/0
 13899 ;;		Unchanged: 0/0
 13900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13903 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13904 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13905 ;;Total ram usage:        2 bytes
 13906 ;; Hardware stack levels used:    1
 13907 ;; Hardware stack levels required when called:   13
 13908 ;; This function calls:
 13909 ;;		Nothing
 13910 ;; This function is called by:
 13911 ;;		_SYSTEM_Initialize
 13912 ;; This function uses a non-reentrant model
 13913 ;;
 13914                           
 13915                           	psect	text52
 13916  006740                     __ptext52:
 13917                           	opt callstack 0
 13918  006740                     _TMR0_Initialize:
 13919                           	opt callstack 16
 13920  006740                     
 13921                           ;mcc_generated_files/tmr0.c: 71:     T0CONbits.T08BIT = 0;
 13922  006740  9CD5               	bcf	213,6,c	;volatile
 13923  006742                     
 13924                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0x67;
 13925  006742  0E67               	movlw	103
 13926  006744  6ED7               	movwf	215,c	;volatile
 13927                           
 13928                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0x69;
 13929  006746  0E69               	movlw	105
 13930  006748  6ED6               	movwf	214,c	;volatile
 13931  00674A                     
 13932                           ;mcc_generated_files/tmr0.c: 81:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
 13933  00674A  50D6               	movf	214,w,c	;volatile
 13934  00674C  CFD7 F08F          	movff	4055,??_TMR0_Initialize	;volatile
 13935  006750  0100               	movlb	0	; () banked
 13936  006752  6B90               	clrf	(??_TMR0_Initialize+1)& (0+255),b
 13937  006754  C08F  F090         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 13938  006758  6B8F               	clrf	??_TMR0_Initialize& (0+255),b
 13939  00675A  118F               	iorwf	??_TMR0_Initialize& (0+255),w,b
 13940  00675C  6E5B               	movwf	_timer0ReloadVal^0,c	;volatile
 13941  00675E  5190               	movf	(??_TMR0_Initialize+1)& (0+255),w,b
 13942  006760  6E5C               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
 13943  006762                     
 13944                           ; BSR set to: 0
 13945                           ;mcc_generated_files/tmr0.c: 84:     INTCONbits.TMR0IF = 0;
 13946  006762  94F2               	bcf	242,2,c	;volatile
 13947  006764                     
 13948                           ; BSR set to: 0
 13949                           ;mcc_generated_files/tmr0.c: 87:     T0CON = 0x17;
 13950  006764  0E17               	movlw	23
 13951  006766  6ED5               	movwf	213,c	;volatile
 13952  006768                     
 13953                           ; BSR set to: 0
 13954  006768  0012               	return		;funcret
 13955  00676A                     __end_of_TMR0_Initialize:
 13956                           	opt callstack 0
 13957                           
 13958 ;; *************** function _SPI_Initialize *****************
 13959 ;; Defined at:
 13960 ;;		line 62 in file "mcc_generated_files/spi.c"
 13961 ;; Parameters:    Size  Location     Type
 13962 ;;		None
 13963 ;; Auto vars:     Size  Location     Type
 13964 ;;		None
 13965 ;; Return value:  Size  Location     Type
 13966 ;;                  1    wreg      void 
 13967 ;; Registers used:
 13968 ;;		wreg, status,2
 13969 ;; Tracked objects:
 13970 ;;		On entry : 0/0
 13971 ;;		On exit  : 0/0
 13972 ;;		Unchanged: 0/0
 13973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13978 ;;Total ram usage:        0 bytes
 13979 ;; Hardware stack levels used:    1
 13980 ;; Hardware stack levels required when called:   13
 13981 ;; This function calls:
 13982 ;;		Nothing
 13983 ;; This function is called by:
 13984 ;;		_SYSTEM_Initialize
 13985 ;; This function uses a non-reentrant model
 13986 ;;
 13987                           
 13988                           	psect	text53
 13989  0068EA                     __ptext53:
 13990                           	opt callstack 0
 13991  0068EA                     _SPI_Initialize:
 13992                           	opt callstack 16
 13993  0068EA                     
 13994                           ;mcc_generated_files/spi.c: 65:     SSPSTAT = 0x40;
 13995  0068EA  0E40               	movlw	64
 13996  0068EC  6EC7               	movwf	199,c	;volatile
 13997                           
 13998                           ;mcc_generated_files/spi.c: 66:     SSPCON1 = 0x00;
 13999  0068EE  0E00               	movlw	0
 14000  0068F0  6EC6               	movwf	198,c	;volatile
 14001                           
 14002                           ;mcc_generated_files/spi.c: 67:     SSPADD = 0x01;
 14003  0068F2  0E01               	movlw	1
 14004  0068F4  6EC8               	movwf	200,c	;volatile
 14005  0068F6                     
 14006                           ;mcc_generated_files/spi.c: 68:     TRISCbits.TRISC3 = 0;
 14007  0068F6  9694               	bcf	148,3,c	;volatile
 14008  0068F8                     
 14009                           ;mcc_generated_files/spi.c: 69:     SSPCON1bits.SSPEN = 0;
 14010  0068F8  9AC6               	bcf	198,5,c	;volatile
 14011  0068FA  0012               	return		;funcret
 14012  0068FC                     __end_of_SPI_Initialize:
 14013                           	opt callstack 0
 14014                           
 14015 ;; *************** function _PIN_MANAGER_Initialize *****************
 14016 ;; Defined at:
 14017 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 14018 ;; Parameters:    Size  Location     Type
 14019 ;;		None
 14020 ;; Auto vars:     Size  Location     Type
 14021 ;;		None
 14022 ;; Return value:  Size  Location     Type
 14023 ;;                  1    wreg      void 
 14024 ;; Registers used:
 14025 ;;		wreg, status,2, status,0, cstack
 14026 ;; Tracked objects:
 14027 ;;		On entry : 0/0
 14028 ;;		On exit  : 0/0
 14029 ;;		Unchanged: 0/0
 14030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14035 ;;Total ram usage:        0 bytes
 14036 ;; Hardware stack levels used:    1
 14037 ;; Hardware stack levels required when called:   14
 14038 ;; This function calls:
 14039 ;;		_IOCB4_SetInterruptHandler
 14040 ;; This function is called by:
 14041 ;;		_SYSTEM_Initialize
 14042 ;; This function uses a non-reentrant model
 14043 ;;
 14044                           
 14045                           	psect	text54
 14046  006216                     __ptext54:
 14047                           	opt callstack 0
 14048  006216                     _PIN_MANAGER_Initialize:
 14049                           	opt callstack 15
 14050  006216                     
 14051                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
 14052  006216  0E00               	movlw	0
 14053  006218  6E8D               	movwf	141,c	;volatile
 14054                           
 14055                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 14056  00621A  0E00               	movlw	0
 14057  00621C  6E8C               	movwf	140,c	;volatile
 14058                           
 14059                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 14060  00621E  0E00               	movlw	0
 14061  006220  6E89               	movwf	137,c	;volatile
 14062                           
 14063                           ;mcc_generated_files/pin_manager.c: 65:     LATB = 0x00;
 14064  006222  0E00               	movlw	0
 14065  006224  6E8A               	movwf	138,c	;volatile
 14066                           
 14067                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x00;
 14068  006226  0E00               	movlw	0
 14069  006228  6E8B               	movwf	139,c	;volatile
 14070                           
 14071                           ;mcc_generated_files/pin_manager.c: 71:     TRISE = 0x04;
 14072  00622A  0E04               	movlw	4
 14073  00622C  6E96               	movwf	150,c	;volatile
 14074                           
 14075                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0x0F;
 14076  00622E  0E0F               	movlw	15
 14077  006230  6E92               	movwf	146,c	;volatile
 14078  006232                     
 14079                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
 14080  006232  6893               	setf	147,c	;volatile
 14081                           
 14082                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0x97;
 14083  006234  0E97               	movlw	151
 14084  006236  6E94               	movwf	148,c	;volatile
 14085  006238                     
 14086                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xFF;
 14087  006238  6895               	setf	149,c	;volatile
 14088  00623A                     
 14089                           ;mcc_generated_files/pin_manager.c: 80:     ANCON0 = 0xFF;
 14090  00623A  010F               	movlb	15	; () banked
 14091  00623C  695D               	setf	93,b	;volatile
 14092                           
 14093                           ;mcc_generated_files/pin_manager.c: 81:     ANCON1 = 0x7D;
 14094  00623E  0E7D               	movlw	125
 14095  006240  6F5C               	movwf	92,b	;volatile
 14096                           
 14097                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
 14098  006242  0E00               	movlw	0
 14099  006244  6F5B               	movwf	91,b	;volatile
 14100  006246                     
 14101                           ; BSR set to: 15
 14102                           ;mcc_generated_files/pin_manager.c: 87:     INTCON2bits.nRBPU = 1;
 14103  006246  8EF1               	bsf	241,7,c	;volatile
 14104  006248                     
 14105                           ; BSR set to: 15
 14106                           ;mcc_generated_files/pin_manager.c: 95:     IOCBbits.IOCB4 = 1;
 14107  006248  895A               	bsf	90,4,b	;volatile
 14108  00624A                     
 14109                           ; BSR set to: 15
 14110                           ;mcc_generated_files/pin_manager.c: 100:     IOCB4_SetInterruptHandler(IOCB4_DefaultInte
      +                          rruptHandler);
 14111  00624A  0E7C               	movlw	low _IOCB4_DefaultInterruptHandler
 14112  00624C  0100               	movlb	0	; () banked
 14113  00624E  6F8F               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
 14114  006250  0E69               	movlw	high _IOCB4_DefaultInterruptHandler
 14115  006252  6F90               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 14116  006254  EC94  F034         	call	_IOCB4_SetInterruptHandler	;wreg free
 14117  006258                     
 14118                           ;mcc_generated_files/pin_manager.c: 103:     INTCONbits.RBIE = 1;
 14119  006258  86F2               	bsf	242,3,c	;volatile
 14120  00625A  0012               	return		;funcret
 14121  00625C                     __end_of_PIN_MANAGER_Initialize:
 14122                           	opt callstack 0
 14123                           
 14124 ;; *************** function _IOCB4_SetInterruptHandler *****************
 14125 ;; Defined at:
 14126 ;;		line 135 in file "mcc_generated_files/pin_manager.c"
 14127 ;; Parameters:    Size  Location     Type
 14128 ;;  InterruptHan    2   47[BANK0 ] PTR FTN()void 
 14129 ;;		 -> INTERRUPT_S1_CALLBACK(1), IOCB4_DefaultInterruptHandler(1), 
 14130 ;; Auto vars:     Size  Location     Type
 14131 ;;		None
 14132 ;; Return value:  Size  Location     Type
 14133 ;;                  1    wreg      void 
 14134 ;; Registers used:
 14135 ;;		wreg, status,2, status,0
 14136 ;; Tracked objects:
 14137 ;;		On entry : 0/0
 14138 ;;		On exit  : 0/0
 14139 ;;		Unchanged: 0/0
 14140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14141 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14144 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14145 ;;Total ram usage:        2 bytes
 14146 ;; Hardware stack levels used:    1
 14147 ;; Hardware stack levels required when called:   13
 14148 ;; This function calls:
 14149 ;;		Nothing
 14150 ;; This function is called by:
 14151 ;;		_PIN_MANAGER_Initialize
 14152 ;;		_main
 14153 ;; This function uses a non-reentrant model
 14154 ;;
 14155                           
 14156                           	psect	text55
 14157  006928                     __ptext55:
 14158                           	opt callstack 0
 14159  006928                     _IOCB4_SetInterruptHandler:
 14160                           	opt callstack 15
 14161  006928                     
 14162                           ;mcc_generated_files/pin_manager.c: 136:     IOCB4_InterruptHandler = InterruptHandler;
 14163  006928  C08F  F0C8         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
 14164  00692C  C090  F0C9         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
 14165  006930  0012               	return		;funcret
 14166  006932                     __end_of_IOCB4_SetInterruptHandler:
 14167                           	opt callstack 0
 14168                           
 14169 ;; *************** function _OSCILLATOR_Initialize *****************
 14170 ;; Defined at:
 14171 ;;		line 63 in file "mcc_generated_files/mcc.c"
 14172 ;; Parameters:    Size  Location     Type
 14173 ;;		None
 14174 ;; Auto vars:     Size  Location     Type
 14175 ;;		None
 14176 ;; Return value:  Size  Location     Type
 14177 ;;                  1    wreg      void 
 14178 ;; Registers used:
 14179 ;;		wreg, status,2
 14180 ;; Tracked objects:
 14181 ;;		On entry : 0/0
 14182 ;;		On exit  : 0/0
 14183 ;;		Unchanged: 0/0
 14184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14189 ;;Total ram usage:        0 bytes
 14190 ;; Hardware stack levels used:    1
 14191 ;; Hardware stack levels required when called:   13
 14192 ;; This function calls:
 14193 ;;		Nothing
 14194 ;; This function is called by:
 14195 ;;		_SYSTEM_Initialize
 14196 ;; This function uses a non-reentrant model
 14197 ;;
 14198                           
 14199                           	psect	text56
 14200  0068FC                     __ptext56:
 14201                           	opt callstack 0
 14202  0068FC                     _OSCILLATOR_Initialize:
 14203                           	opt callstack 16
 14204  0068FC                     
 14205                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x60;
 14206  0068FC  0E60               	movlw	96
 14207  0068FE  6ED3               	movwf	211,c	;volatile
 14208                           
 14209                           ;mcc_generated_files/mcc.c: 68:     OSCCON2 = 0x00;
 14210  006900  0E00               	movlw	0
 14211  006902  6ED2               	movwf	210,c	;volatile
 14212                           
 14213                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x00;
 14214  006904  0E00               	movlw	0
 14215  006906  6E9B               	movwf	155,c	;volatile
 14216                           
 14217                           ;mcc_generated_files/mcc.c: 72:     REFOCON = 0x00;
 14218  006908  0E00               	movlw	0
 14219  00690A  6E9A               	movwf	154,c	;volatile
 14220  00690C  0012               	return		;funcret
 14221  00690E                     __end_of_OSCILLATOR_Initialize:
 14222                           	opt callstack 0
 14223                           
 14224 ;; *************** function _INTERRUPT_Initialize *****************
 14225 ;; Defined at:
 14226 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14227 ;; Parameters:    Size  Location     Type
 14228 ;;		None
 14229 ;; Auto vars:     Size  Location     Type
 14230 ;;		None
 14231 ;; Return value:  Size  Location     Type
 14232 ;;                  1    wreg      void 
 14233 ;; Registers used:
 14234 ;;		None
 14235 ;; Tracked objects:
 14236 ;;		On entry : 0/0
 14237 ;;		On exit  : 0/0
 14238 ;;		Unchanged: 0/0
 14239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14244 ;;Total ram usage:        0 bytes
 14245 ;; Hardware stack levels used:    1
 14246 ;; Hardware stack levels required when called:   13
 14247 ;; This function calls:
 14248 ;;		Nothing
 14249 ;; This function is called by:
 14250 ;;		_SYSTEM_Initialize
 14251 ;; This function uses a non-reentrant model
 14252 ;;
 14253                           
 14254                           	psect	text57
 14255  006970                     __ptext57:
 14256                           	opt callstack 0
 14257  006970                     _INTERRUPT_Initialize:
 14258                           	opt callstack 16
 14259  006970                     
 14260                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
 14261  006970  9ED0               	bcf	208,7,c	;volatile
 14262  006972  0012               	return		;funcret
 14263  006974                     __end_of_INTERRUPT_Initialize:
 14264                           	opt callstack 0
 14265                           
 14266 ;; *************** function _EUSART1_Initialize *****************
 14267 ;; Defined at:
 14268 ;;		line 66 in file "mcc_generated_files/eusart1.c"
 14269 ;; Parameters:    Size  Location     Type
 14270 ;;		None
 14271 ;; Auto vars:     Size  Location     Type
 14272 ;;		None
 14273 ;; Return value:  Size  Location     Type
 14274 ;;                  1    wreg      void 
 14275 ;; Registers used:
 14276 ;;		wreg, status,2, status,0, cstack
 14277 ;; Tracked objects:
 14278 ;;		On entry : 0/0
 14279 ;;		On exit  : 0/0
 14280 ;;		Unchanged: 0/0
 14281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14286 ;;Total ram usage:        0 bytes
 14287 ;; Hardware stack levels used:    1
 14288 ;; Hardware stack levels required when called:   14
 14289 ;; This function calls:
 14290 ;;		_EUSART1_SetErrorHandler
 14291 ;;		_EUSART1_SetFramingErrorHandler
 14292 ;;		_EUSART1_SetOverrunErrorHandler
 14293 ;; This function is called by:
 14294 ;;		_SYSTEM_Initialize
 14295 ;; This function uses a non-reentrant model
 14296 ;;
 14297                           
 14298                           	psect	text58
 14299  00625C                     __ptext58:
 14300                           	opt callstack 0
 14301  00625C                     _EUSART1_Initialize:
 14302                           	opt callstack 15
 14303  00625C                     
 14304                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
 14305  00625C  0E08               	movlw	8
 14306  00625E  6EA7               	movwf	167,c	;volatile
 14307                           
 14308                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
 14309  006260  0E90               	movlw	144
 14310  006262  6EAB               	movwf	171,c	;volatile
 14311                           
 14312                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
 14313  006264  0E24               	movlw	36
 14314  006266  6EAC               	movwf	172,c	;volatile
 14315                           
 14316                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0xCF;
 14317  006268  0ECF               	movlw	207
 14318  00626A  6EAF               	movwf	175,c	;volatile
 14319                           
 14320                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x00;
 14321  00626C  0E00               	movlw	0
 14322  00626E  6E7D               	movwf	125,c	;volatile
 14323  006270                     
 14324                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
 14325  006270  0E00               	movlw	0
 14326  006272  0100               	movlb	0	; () banked
 14327  006274  6F8F               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
 14328  006276  0E00               	movlw	0
 14329  006278  6F90               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
 14330  00627A  EC9E  F034         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 14331  00627E                     
 14332                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
 14333  00627E  0E00               	movlw	0
 14334  006280  0100               	movlb	0	; () banked
 14335  006282  6F8F               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
 14336  006284  0E00               	movlw	0
 14337  006286  6F90               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
 14338  006288  EC99  F034         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 14339  00628C                     
 14340                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
 14341  00628C  0E00               	movlw	0
 14342  00628E  0100               	movlb	0	; () banked
 14343  006290  6F8F               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
 14344  006292  0E00               	movlw	0
 14345  006294  6F90               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
 14346  006296  ECA3  F034         	call	_EUSART1_SetErrorHandler	;wreg free
 14347  00629A                     
 14348                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
 14349  00629A  0E00               	movlw	0
 14350  00629C  0100               	movlb	0	; () banked
 14351  00629E  6FBF               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 14352  0062A0                     
 14353                           ; BSR set to: 0
 14354  0062A0  0012               	return		;funcret
 14355  0062A2                     __end_of_EUSART1_Initialize:
 14356                           	opt callstack 0
 14357                           
 14358 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 14359 ;; Defined at:
 14360 ;;		line 170 in file "mcc_generated_files/eusart1.c"
 14361 ;; Parameters:    Size  Location     Type
 14362 ;;  interruptHan    2   47[BANK0 ] PTR FTN()void 
 14363 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 14364 ;; Auto vars:     Size  Location     Type
 14365 ;;		None
 14366 ;; Return value:  Size  Location     Type
 14367 ;;                  1    wreg      void 
 14368 ;; Registers used:
 14369 ;;		wreg, status,2, status,0
 14370 ;; Tracked objects:
 14371 ;;		On entry : 0/0
 14372 ;;		On exit  : 0/0
 14373 ;;		Unchanged: 0/0
 14374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14375 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14378 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14379 ;;Total ram usage:        2 bytes
 14380 ;; Hardware stack levels used:    1
 14381 ;; Hardware stack levels required when called:   13
 14382 ;; This function calls:
 14383 ;;		Nothing
 14384 ;; This function is called by:
 14385 ;;		_EUSART1_Initialize
 14386 ;; This function uses a non-reentrant model
 14387 ;;
 14388                           
 14389                           	psect	text59
 14390  006932                     __ptext59:
 14391                           	opt callstack 0
 14392  006932                     _EUSART1_SetOverrunErrorHandler:
 14393                           	opt callstack 15
 14394  006932                     
 14395                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
 14396  006932  C08F  F0C2         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 14397  006936  C090  F0C3         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 14398  00693A  0012               	return		;funcret
 14399  00693C                     __end_of_EUSART1_SetOverrunErrorHandler:
 14400                           	opt callstack 0
 14401                           
 14402 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 14403 ;; Defined at:
 14404 ;;		line 166 in file "mcc_generated_files/eusart1.c"
 14405 ;; Parameters:    Size  Location     Type
 14406 ;;  interruptHan    2   47[BANK0 ] PTR FTN()void 
 14407 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 14408 ;; Auto vars:     Size  Location     Type
 14409 ;;		None
 14410 ;; Return value:  Size  Location     Type
 14411 ;;                  1    wreg      void 
 14412 ;; Registers used:
 14413 ;;		wreg, status,2, status,0
 14414 ;; Tracked objects:
 14415 ;;		On entry : 0/0
 14416 ;;		On exit  : 0/0
 14417 ;;		Unchanged: 0/0
 14418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14419 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14422 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14423 ;;Total ram usage:        2 bytes
 14424 ;; Hardware stack levels used:    1
 14425 ;; Hardware stack levels required when called:   13
 14426 ;; This function calls:
 14427 ;;		Nothing
 14428 ;; This function is called by:
 14429 ;;		_EUSART1_Initialize
 14430 ;; This function uses a non-reentrant model
 14431 ;;
 14432                           
 14433                           	psect	text60
 14434  00693C                     __ptext60:
 14435                           	opt callstack 0
 14436  00693C                     _EUSART1_SetFramingErrorHandler:
 14437                           	opt callstack 15
 14438  00693C                     
 14439                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
 14440  00693C  C08F  F0C4         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 14441  006940  C090  F0C5         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 14442  006944  0012               	return		;funcret
 14443  006946                     __end_of_EUSART1_SetFramingErrorHandler:
 14444                           	opt callstack 0
 14445                           
 14446 ;; *************** function _EUSART1_SetErrorHandler *****************
 14447 ;; Defined at:
 14448 ;;		line 174 in file "mcc_generated_files/eusart1.c"
 14449 ;; Parameters:    Size  Location     Type
 14450 ;;  interruptHan    2   47[BANK0 ] PTR FTN()void 
 14451 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 14452 ;; Auto vars:     Size  Location     Type
 14453 ;;		None
 14454 ;; Return value:  Size  Location     Type
 14455 ;;                  1    wreg      void 
 14456 ;; Registers used:
 14457 ;;		wreg, status,2, status,0
 14458 ;; Tracked objects:
 14459 ;;		On entry : 0/0
 14460 ;;		On exit  : 0/0
 14461 ;;		Unchanged: 0/0
 14462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14463 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14466 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14467 ;;Total ram usage:        2 bytes
 14468 ;; Hardware stack levels used:    1
 14469 ;; Hardware stack levels required when called:   13
 14470 ;; This function calls:
 14471 ;;		Nothing
 14472 ;; This function is called by:
 14473 ;;		_EUSART1_Initialize
 14474 ;; This function uses a non-reentrant model
 14475 ;;
 14476                           
 14477                           	psect	text61
 14478  006946                     __ptext61:
 14479                           	opt callstack 0
 14480  006946                     _EUSART1_SetErrorHandler:
 14481                           	opt callstack 15
 14482  006946                     
 14483                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
 14484  006946  C08F  F0C0         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 14485  00694A  C090  F0C1         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 14486  00694E  0012               	return		;funcret
 14487  006950                     __end_of_EUSART1_SetErrorHandler:
 14488                           	opt callstack 0
 14489                           
 14490 ;; *************** function _ADC_Initialize *****************
 14491 ;; Defined at:
 14492 ;;		line 62 in file "mcc_generated_files/adc.c"
 14493 ;; Parameters:    Size  Location     Type
 14494 ;;		None
 14495 ;; Auto vars:     Size  Location     Type
 14496 ;;		None
 14497 ;; Return value:  Size  Location     Type
 14498 ;;                  1    wreg      void 
 14499 ;; Registers used:
 14500 ;;		wreg, status,2
 14501 ;; Tracked objects:
 14502 ;;		On entry : 0/0
 14503 ;;		On exit  : 0/0
 14504 ;;		Unchanged: 0/0
 14505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14510 ;;Total ram usage:        0 bytes
 14511 ;; Hardware stack levels used:    1
 14512 ;; Hardware stack levels required when called:   13
 14513 ;; This function calls:
 14514 ;;		Nothing
 14515 ;; This function is called by:
 14516 ;;		_SYSTEM_Initialize
 14517 ;; This function uses a non-reentrant model
 14518 ;;
 14519                           
 14520                           	psect	text62
 14521  0068AA                     __ptext62:
 14522                           	opt callstack 0
 14523  0068AA                     _ADC_Initialize:
 14524                           	opt callstack 16
 14525  0068AA                     
 14526                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x01;
 14527  0068AA  0E01               	movlw	1
 14528  0068AC  6EC2               	movwf	194,c	;volatile
 14529                           
 14530                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x80;
 14531  0068AE  0E80               	movlw	128
 14532  0068B0  6EC1               	movwf	193,c	;volatile
 14533                           
 14534                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0xB5;
 14535  0068B2  0EB5               	movlw	181
 14536  0068B4  6EC0               	movwf	192,c	;volatile
 14537                           
 14538                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
 14539  0068B6  0E00               	movlw	0
 14540  0068B8  6EC4               	movwf	196,c	;volatile
 14541                           
 14542                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
 14543  0068BA  0E00               	movlw	0
 14544  0068BC  6EC3               	movwf	195,c	;volatile
 14545  0068BE  0012               	return		;funcret
 14546  0068C0                     __end_of_ADC_Initialize:
 14547                           	opt callstack 0
 14548                           
 14549 ;; *************** function _SPI_Open *****************
 14550 ;; Defined at:
 14551 ;;		line 72 in file "mcc_generated_files/spi.c"
 14552 ;; Parameters:    Size  Location     Type
 14553 ;;  spiUniqueCon    1    wreg     enum E353
 14554 ;; Auto vars:     Size  Location     Type
 14555 ;;  spiUniqueCon    1   48[BANK0 ] enum E353
 14556 ;; Return value:  Size  Location     Type
 14557 ;;                  1    wreg      _Bool 
 14558 ;; Registers used:
 14559 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 14560 ;; Tracked objects:
 14561 ;;		On entry : 0/0
 14562 ;;		On exit  : 0/0
 14563 ;;		Unchanged: 0/0
 14564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14566 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14567 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14568 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14569 ;;Total ram usage:        2 bytes
 14570 ;; Hardware stack levels used:    1
 14571 ;; Hardware stack levels required when called:   13
 14572 ;; This function calls:
 14573 ;;		Nothing
 14574 ;; This function is called by:
 14575 ;;		_main
 14576 ;; This function uses a non-reentrant model
 14577 ;;
 14578                           
 14579                           	psect	text63
 14580  005BA6                     __ptext63:
 14581                           	opt callstack 0
 14582  005BA6                     _SPI_Open:
 14583                           	opt callstack 17
 14584                           
 14585                           ;incstack = 0
 14586                           ;SPI_Open@spiUniqueConfiguration stored from wreg
 14587  005BA6  0100               	movlb	0	; () banked
 14588  005BA8  6F90               	movwf	SPI_Open@spiUniqueConfiguration& (0+255),b
 14589  005BAA                     
 14590                           ;mcc_generated_files/spi.c: 72: _Bool SPI_Open(spi_modes_t spiUniqueConfiguration);mcc_g
      +                          enerated_files/spi.c: 73: {;mcc_generated_files/spi.c: 74:     if(!SSPCON1bits.SSPEN)
 14591  005BAA  BAC6               	btfsc	198,5,c	;volatile
 14592  005BAC  EFDA  F02D         	goto	u7891
 14593  005BB0  EFDC  F02D         	goto	u7890
 14594  005BB4                     u7891:
 14595  005BB4  EF2C  F02E         	goto	l55
 14596  005BB8                     u7890:
 14597  005BB8                     
 14598                           ;mcc_generated_files/spi.c: 75:     {;mcc_generated_files/spi.c: 76:         SSPSTAT = s
      +                          pi_configuration[spiUniqueConfiguration].stat;
 14599  005BB8  0100               	movlb	0	; () banked
 14600  005BBA  5190               	movf	SPI_Open@spiUniqueConfiguration& (0+255),w,b
 14601  005BBC  0D04               	mullw	4
 14602  005BBE  0E01               	movlw	1
 14603  005BC0  26F3               	addwf	243,f,c
 14604  005BC2  0E00               	movlw	0
 14605  005BC4  22F4               	addwfc	244,f,c
 14606  005BC6  0E01               	movlw	low _spi_configuration
 14607  005BC8  24F3               	addwf	243,w,c
 14608  005BCA  6EF6               	movwf	tblptrl,c
 14609  005BCC  0EFF               	movlw	high _spi_configuration
 14610  005BCE  20F4               	addwfc	244,w,c
 14611  005BD0  6EF7               	movwf	tblptrh,c
 14612  005BD2                     	if	1	;There are 3 active tblptr bytes
 14613  005BD2  6AF8               	clrf	tblptru,c
 14614  005BD4  0E00               	movlw	low (__mediumconst shr (0+16))
 14615  005BD6  22F8               	addwfc	tblptru,f,c
 14616  005BD8                     	endif
 14617  005BD8  0008               	tblrd		*
 14618  005BDA  CFF5 FFC7          	movff	tablat,4039	;volatile
 14619                           
 14620                           ;mcc_generated_files/spi.c: 77:         SSPCON1 = spi_configuration[spiUniqueConfigurati
      +                          on].con1;
 14621  005BDE  5190               	movf	SPI_Open@spiUniqueConfiguration& (0+255),w,b
 14622  005BE0  0D04               	mullw	4
 14623  005BE2  0E01               	movlw	low _spi_configuration
 14624  005BE4  24F3               	addwf	243,w,c
 14625  005BE6  6EF6               	movwf	tblptrl,c
 14626  005BE8  0EFF               	movlw	high _spi_configuration
 14627  005BEA  20F4               	addwfc	244,w,c
 14628  005BEC  6EF7               	movwf	tblptrh,c
 14629  005BEE                     	if	1	;There are 3 active tblptr bytes
 14630  005BEE  6AF8               	clrf	tblptru,c
 14631  005BF0  0E00               	movlw	low (__mediumconst shr (0+16))
 14632  005BF2  22F8               	addwfc	tblptru,f,c
 14633  005BF4                     	endif
 14634  005BF4  0008               	tblrd		*
 14635  005BF6  CFF5 FFC6          	movff	tablat,4038	;volatile
 14636  005BFA                     
 14637                           ; BSR set to: 0
 14638                           ;mcc_generated_files/spi.c: 78:         SSPCON2 = 0x00;
 14639  005BFA  0E00               	movlw	0
 14640  005BFC  6EC5               	movwf	197,c	;volatile
 14641  005BFE                     
 14642                           ; BSR set to: 0
 14643                           ;mcc_generated_files/spi.c: 79:         SSPADD = spi_configuration[spiUniqueConfiguratio
      +                          n].add;
 14644  005BFE  5190               	movf	SPI_Open@spiUniqueConfiguration& (0+255),w,b
 14645  005C00  0D04               	mullw	4
 14646  005C02  0E02               	movlw	2
 14647  005C04  26F3               	addwf	243,f,c
 14648  005C06  0E00               	movlw	0
 14649  005C08  22F4               	addwfc	244,f,c
 14650  005C0A  0E01               	movlw	low _spi_configuration
 14651  005C0C  24F3               	addwf	243,w,c
 14652  005C0E  6EF6               	movwf	tblptrl,c
 14653  005C10  0EFF               	movlw	high _spi_configuration
 14654  005C12  20F4               	addwfc	244,w,c
 14655  005C14  6EF7               	movwf	tblptrh,c
 14656  005C16                     	if	1	;There are 3 active tblptr bytes
 14657  005C16  6AF8               	clrf	tblptru,c
 14658  005C18  0E00               	movlw	low (__mediumconst shr (0+16))
 14659  005C1A  22F8               	addwfc	tblptru,f,c
 14660  005C1C                     	endif
 14661  005C1C  0008               	tblrd		*
 14662  005C1E  CFF5 FFC8          	movff	tablat,4040	;volatile
 14663  005C22                     
 14664                           ; BSR set to: 0
 14665                           ;mcc_generated_files/spi.c: 80:         TRISCbits.TRISC3 = spi_configuration[spiUniqueCo
      +                          nfiguration].operation;
 14666  005C22  5190               	movf	SPI_Open@spiUniqueConfiguration& (0+255),w,b
 14667  005C24  0D04               	mullw	4
 14668  005C26  0E03               	movlw	3
 14669  005C28  26F3               	addwf	243,f,c
 14670  005C2A  0E00               	movlw	0
 14671  005C2C  22F4               	addwfc	244,f,c
 14672  005C2E  0E01               	movlw	low _spi_configuration
 14673  005C30  24F3               	addwf	243,w,c
 14674  005C32  6EF6               	movwf	tblptrl,c
 14675  005C34  0EFF               	movlw	high _spi_configuration
 14676  005C36  20F4               	addwfc	244,w,c
 14677  005C38  6EF7               	movwf	tblptrh,c
 14678  005C3A                     	if	1	;There are 3 active tblptr bytes
 14679  005C3A  6AF8               	clrf	tblptru,c
 14680  005C3C  0E00               	movlw	low (__mediumconst shr (0+16))
 14681  005C3E  22F8               	addwfc	tblptru,f,c
 14682  005C40                     	endif
 14683  005C40  0008               	tblrd		*
 14684  005C42  CFF5 F08F          	movff	tablat,??_SPI_Open
 14685  005C46  478F               	rlncf	??_SPI_Open& (0+255),f,b
 14686  005C48  478F               	rlncf	??_SPI_Open& (0+255),f,b
 14687  005C4A  478F               	rlncf	??_SPI_Open& (0+255),f,b
 14688  005C4C  5094               	movf	148,w,c	;volatile
 14689  005C4E  198F               	xorwf	??_SPI_Open& (0+255),w,b
 14690  005C50  0BF7               	andlw	-9
 14691  005C52  198F               	xorwf	??_SPI_Open& (0+255),w,b
 14692  005C54  6E94               	movwf	148,c	;volatile
 14693  005C56                     
 14694                           ; BSR set to: 0
 14695                           ;mcc_generated_files/spi.c: 81:         SSPCON1bits.SSPEN = 1;
 14696  005C56  8AC6               	bsf	198,5,c	;volatile
 14697  005C58                     l55:
 14698  005C58  0012               	return		;funcret
 14699  005C5A                     __end_of_SPI_Open:
 14700                           	opt callstack 0
 14701                           
 14702 ;; *************** function _DATAEE_WriteByte *****************
 14703 ;; Defined at:
 14704 ;;		line 173 in file "mcc_generated_files/memory.c"
 14705 ;; Parameters:    Size  Location     Type
 14706 ;;  bAdd            2   47[BANK0 ] unsigned short 
 14707 ;;  bData           1   49[BANK0 ] unsigned char 
 14708 ;; Auto vars:     Size  Location     Type
 14709 ;;  GIEBitValue     1   50[BANK0 ] unsigned char 
 14710 ;; Return value:  Size  Location     Type
 14711 ;;                  1    wreg      void 
 14712 ;; Registers used:
 14713 ;;		wreg, status,2, status,0
 14714 ;; Tracked objects:
 14715 ;;		On entry : 0/0
 14716 ;;		On exit  : 0/0
 14717 ;;		Unchanged: 0/0
 14718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14719 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14720 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14722 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14723 ;;Total ram usage:        4 bytes
 14724 ;; Hardware stack levels used:    1
 14725 ;; Hardware stack levels required when called:   13
 14726 ;; This function calls:
 14727 ;;		Nothing
 14728 ;; This function is called by:
 14729 ;;		_main
 14730 ;; This function uses a non-reentrant model
 14731 ;;
 14732                           
 14733                           	psect	text64
 14734  0061CE                     __ptext64:
 14735                           	opt callstack 0
 14736  0061CE                     _DATAEE_WriteByte:
 14737                           	opt callstack 17
 14738  0061CE                     
 14739                           ;mcc_generated_files/memory.c: 173: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 174: {;mcc_generated_files/memory.c: 175:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 14740  0061CE  0E00               	movlw	0
 14741  0061D0  BEF2               	btfsc	242,7,c	;volatile
 14742  0061D2  0E01               	movlw	1
 14743  0061D4  0100               	movlb	0	; () banked
 14744  0061D6  6F92               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 14745  0061D8                     
 14746                           ; BSR set to: 0
 14747                           ;mcc_generated_files/memory.c: 177:     EEADRH = ((bAdd >> 8) & 0x03);
 14748  0061D8  5190               	movf	(DATAEE_WriteByte@bAdd+1)& (0+255),w,b
 14749  0061DA  0B03               	andlw	3
 14750  0061DC  6E75               	movwf	117,c	;volatile
 14751  0061DE                     
 14752                           ; BSR set to: 0
 14753                           ;mcc_generated_files/memory.c: 178:     EEADR = (bAdd & 0xFF);
 14754  0061DE  C08F  FF74         	movff	DATAEE_WriteByte@bAdd,3956	;volatile
 14755  0061E2                     
 14756                           ; BSR set to: 0
 14757                           ;mcc_generated_files/memory.c: 179:     EEDATA = bData;
 14758  0061E2  C091  FF73         	movff	DATAEE_WriteByte@bData,3955	;volatile
 14759  0061E6                     
 14760                           ; BSR set to: 0
 14761                           ;mcc_generated_files/memory.c: 180:     EECON1bits.EEPGD = 0;
 14762  0061E6  9E7F               	bcf	127,7,c	;volsfr
 14763  0061E8                     
 14764                           ; BSR set to: 0
 14765                           ;mcc_generated_files/memory.c: 181:     EECON1bits.CFGS = 0;
 14766  0061E8  9C7F               	bcf	127,6,c	;volsfr
 14767  0061EA                     
 14768                           ; BSR set to: 0
 14769                           ;mcc_generated_files/memory.c: 182:     EECON1bits.WREN = 1;
 14770  0061EA  847F               	bsf	127,2,c	;volsfr
 14771  0061EC                     
 14772                           ; BSR set to: 0
 14773                           ;mcc_generated_files/memory.c: 183:     INTCONbits.GIE = 0;
 14774  0061EC  9EF2               	bcf	242,7,c	;volatile
 14775  0061EE                     
 14776                           ; BSR set to: 0
 14777                           ;mcc_generated_files/memory.c: 184:     EECON2 = 0x55;
 14778  0061EE  0E55               	movlw	85
 14779  0061F0  6E7E               	movwf	126,c	;volsfr
 14780  0061F2                     
 14781                           ; BSR set to: 0
 14782                           ;mcc_generated_files/memory.c: 185:     EECON2 = 0xAA;
 14783  0061F2  0EAA               	movlw	170
 14784  0061F4  6E7E               	movwf	126,c	;volsfr
 14785  0061F6                     
 14786                           ; BSR set to: 0
 14787                           ;mcc_generated_files/memory.c: 186:     EECON1bits.WR = 1;
 14788  0061F6  827F               	bsf	127,1,c	;volsfr
 14789  0061F8                     l429:
 14790                           
 14791                           ;mcc_generated_files/memory.c: 188:     while (EECON1bits.WR)
 14792  0061F8  B27F               	btfsc	127,1,c	;volsfr
 14793  0061FA  EF01  F031         	goto	u7931
 14794  0061FE  EF03  F031         	goto	u7930
 14795  006202                     u7931:
 14796  006202  EFFC  F030         	goto	l429
 14797  006206                     u7930:
 14798  006206                     
 14799                           ;mcc_generated_files/memory.c: 192:     EECON1bits.WREN = 0;
 14800  006206  947F               	bcf	127,2,c	;volsfr
 14801                           
 14802                           ;mcc_generated_files/memory.c: 193:     INTCONbits.GIE = GIEBitValue;
 14803  006208  0100               	movlb	0	; () banked
 14804  00620A  B192               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 14805  00620C  D002               	bra	u7945
 14806  00620E  9EF2               	bcf	242,7,c	;volatile
 14807  006210  D001               	bra	u7946
 14808  006212                     u7945:
 14809  006212  8EF2               	bsf	242,7,c	;volatile
 14810  006214                     u7946:
 14811  006214  0012               	return		;funcret
 14812  006216                     __end_of_DATAEE_WriteByte:
 14813                           	opt callstack 0
 14814                           
 14815 ;; *************** function _ADC_GetConversion *****************
 14816 ;; Defined at:
 14817 ;;		line 108 in file "mcc_generated_files/adc.c"
 14818 ;; Parameters:    Size  Location     Type
 14819 ;;  channel         1    wreg     enum E12385
 14820 ;; Auto vars:     Size  Location     Type
 14821 ;;  channel         1   51[BANK0 ] enum E12385
 14822 ;; Return value:  Size  Location     Type
 14823 ;;                  2   47[BANK0 ] unsigned short 
 14824 ;; Registers used:
 14825 ;;		wreg, status,2, status,0
 14826 ;; Tracked objects:
 14827 ;;		On entry : 0/0
 14828 ;;		On exit  : 0/0
 14829 ;;		Unchanged: 0/0
 14830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14831 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14832 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14833 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14834 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14835 ;;Total ram usage:        5 bytes
 14836 ;; Hardware stack levels used:    1
 14837 ;; Hardware stack levels required when called:   13
 14838 ;; This function calls:
 14839 ;;		Nothing
 14840 ;; This function is called by:
 14841 ;;		_main
 14842 ;; This function uses a non-reentrant model
 14843 ;;
 14844                           
 14845                           	psect	text65
 14846  00636A                     __ptext65:
 14847                           	opt callstack 0
 14848  00636A                     _ADC_GetConversion:
 14849                           	opt callstack 17
 14850                           
 14851                           ;incstack = 0
 14852                           ;ADC_GetConversion@channel stored from wreg
 14853  00636A  0100               	movlb	0	; () banked
 14854  00636C  6F93               	movwf	ADC_GetConversion@channel& (0+255),b
 14855  00636E                     
 14856                           ;mcc_generated_files/adc.c: 108: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 109: {;mcc_generated_files/adc.c: 111:     ADCON0bits.CHS = ch
      +                          annel;
 14857  00636E  C093  F091         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 14858  006372  0100               	movlb	0	; () banked
 14859  006374  4791               	rlncf	??_ADC_GetConversion& (0+255),f,b
 14860  006376  4791               	rlncf	??_ADC_GetConversion& (0+255),f,b
 14861  006378  50C2               	movf	194,w,c	;volatile
 14862  00637A  1991               	xorwf	??_ADC_GetConversion& (0+255),w,b
 14863  00637C  0B83               	andlw	-125
 14864  00637E  1991               	xorwf	??_ADC_GetConversion& (0+255),w,b
 14865  006380  6EC2               	movwf	194,c	;volatile
 14866  006382                     
 14867                           ; BSR set to: 0
 14868                           ;mcc_generated_files/adc.c: 114:     ADCON0bits.ADON = 1;
 14869  006382  80C2               	bsf	194,0,c	;volatile
 14870  006384                     
 14871                           ; BSR set to: 0
 14872                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.GO_nDONE = 1;
 14873  006384  82C2               	bsf	194,1,c	;volatile
 14874  006386                     l179:
 14875                           
 14876                           ;mcc_generated_files/adc.c: 121:     while (ADCON0bits.GO_nDONE)
 14877  006386  B2C2               	btfsc	194,1,c	;volatile
 14878  006388  EFC8  F031         	goto	u7911
 14879  00638C  EFCA  F031         	goto	u7910
 14880  006390                     u7911:
 14881  006390  EFC3  F031         	goto	l179
 14882  006394                     u7910:
 14883  006394                     
 14884                           ;mcc_generated_files/adc.c: 126:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 14885  006394  50C4               	movf	196,w,c	;volatile
 14886  006396  0100               	movlb	0	; () banked
 14887  006398  6F92               	movwf	(??_ADC_GetConversion+1)& (0+255),b
 14888  00639A  6B91               	clrf	??_ADC_GetConversion& (0+255),b
 14889  00639C  50C3               	movf	195,w,c	;volatile
 14890  00639E  2591               	addwf	??_ADC_GetConversion& (0+255),w,b
 14891  0063A0  6F8F               	movwf	?_ADC_GetConversion& (0+255),b
 14892  0063A2  0E00               	movlw	0
 14893  0063A4  2192               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
 14894  0063A6  6F90               	movwf	(?_ADC_GetConversion+1)& (0+255),b
 14895  0063A8                     
 14896                           ; BSR set to: 0
 14897  0063A8  0012               	return		;funcret
 14898  0063AA                     __end_of_ADC_GetConversion:
 14899                           	opt callstack 0
 14900                           
 14901 ;; *************** function _INTERRUPT_InterruptManager *****************
 14902 ;; Defined at:
 14903 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 14904 ;; Parameters:    Size  Location     Type
 14905 ;;		None
 14906 ;; Auto vars:     Size  Location     Type
 14907 ;;		None
 14908 ;; Return value:  Size  Location     Type
 14909 ;;                  1    wreg      void 
 14910 ;; Registers used:
 14911 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 14912 ;; Tracked objects:
 14913 ;;		On entry : 0/0
 14914 ;;		On exit  : 0/0
 14915 ;;		Unchanged: 0/0
 14916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14919 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14920 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14921 ;;Total ram usage:       14 bytes
 14922 ;; Hardware stack levels used:    1
 14923 ;; Hardware stack levels required when called:   12
 14924 ;; This function calls:
 14925 ;;		_PIN_MANAGER_IOC
 14926 ;; This function is called by:
 14927 ;;		Interrupt level 2
 14928 ;; This function uses a non-reentrant model
 14929 ;;
 14930                           
 14931                           	psect	intcode
 14932  000008                     __pintcode:
 14933                           	opt callstack 0
 14934  000008                     _INTERRUPT_InterruptManager:
 14935                           	opt callstack 8
 14936                           
 14937                           ; BSR set to: 0
 14938                           ;incstack = 0
 14939  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14940  00000A  CFFA F081          	movff	pclath,??_INTERRUPT_InterruptManager
 14941  00000E  CFFB F082          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 14942  000012  CFE9 F083          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 14943  000016  CFEA F084          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 14944  00001A  CFE1 F085          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 14945  00001E  CFE2 F086          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 14946  000022  CFD9 F087          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 14947  000026  CFDA F088          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 14948  00002A  CFF3 F089          	movff	prodl,??_INTERRUPT_InterruptManager+8
 14949  00002E  CFF4 F08A          	movff	prodh,??_INTERRUPT_InterruptManager+9
 14950  000032  CFF6 F08B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 14951  000036  CFF7 F08C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 14952  00003A  CFF8 F08D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 14953  00003E  CFF5 F08E          	movff	tablat,??_INTERRUPT_InterruptManager+13
 14954  000042                     
 14955                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.RBIE == 1 && INTCONbits.
      +                          RBIF == 1)
 14956  000042  A6F2               	btfss	242,3,c	;volatile
 14957  000044  EF26  F000         	goto	i2u1219_41
 14958  000048  EF28  F000         	goto	i2u1219_40
 14959  00004C                     i2u1219_41:
 14960  00004C  EF31  F000         	goto	i2l340
 14961  000050                     i2u1219_40:
 14962  000050  A0F2               	btfss	242,0,c	;volatile
 14963  000052  EF2D  F000         	goto	i2u1220_41
 14964  000056  EF2F  F000         	goto	i2u1220_40
 14965  00005A                     i2u1220_41:
 14966  00005A  EF31  F000         	goto	i2l340
 14967  00005E                     i2u1220_40:
 14968  00005E                     
 14969                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         PIN_MANAGER_IOC();
 14970  00005E  EC49  F034         	call	_PIN_MANAGER_IOC	;wreg free
 14971  000062                     i2l340:
 14972  000062  C08E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 14973  000066  C08D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 14974  00006A  C08C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 14975  00006E  C08B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 14976  000072  C08A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 14977  000076  C089  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 14978  00007A  C088  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 14979  00007E  C087  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 14980  000082  C086  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 14981  000086  C085  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 14982  00008A  C084  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 14983  00008E  C083  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 14984  000092  C082  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 14985  000096  C081  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 14986  00009A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14987  00009C  0011               	retfie		f
 14988  00009E                     __end_of_INTERRUPT_InterruptManager:
 14989                           	opt callstack 0
 14990                           
 14991 ;; *************** function _PIN_MANAGER_IOC *****************
 14992 ;; Defined at:
 14993 ;;		line 107 in file "mcc_generated_files/pin_manager.c"
 14994 ;; Parameters:    Size  Location     Type
 14995 ;;		None
 14996 ;; Auto vars:     Size  Location     Type
 14997 ;;		None
 14998 ;; Return value:  Size  Location     Type
 14999 ;;                  1    wreg      void 
 15000 ;; Registers used:
 15001 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15002 ;; Tracked objects:
 15003 ;;		On entry : 0/0
 15004 ;;		On exit  : 0/0
 15005 ;;		Unchanged: 0/0
 15006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15011 ;;Total ram usage:        0 bytes
 15012 ;; Hardware stack levels used:    1
 15013 ;; Hardware stack levels required when called:   11
 15014 ;; This function calls:
 15015 ;;		_IOCB4_ISR
 15016 ;; This function is called by:
 15017 ;;		_INTERRUPT_InterruptManager
 15018 ;; This function uses a non-reentrant model
 15019 ;;
 15020                           
 15021                           	psect	text67
 15022  006892                     __ptext67:
 15023                           	opt callstack 0
 15024  006892                     _PIN_MANAGER_IOC:
 15025                           	opt callstack 8
 15026  006892                     
 15027                           ;mcc_generated_files/pin_manager.c: 110:     if(IOCBbits.IOCB4 == 1)
 15028  006892  010F               	movlb	15	; () banked
 15029  006894  A95A               	btfss	90,4,b	;volatile
 15030  006896  EF4F  F034         	goto	i2u1200_41
 15031  00689A  EF51  F034         	goto	i2u1200_40
 15032  00689E                     i2u1200_41:
 15033  00689E  EF53  F034         	goto	i2l9409
 15034  0068A2                     i2u1200_40:
 15035  0068A2                     
 15036                           ; BSR set to: 15
 15037                           ;mcc_generated_files/pin_manager.c: 111:     {;mcc_generated_files/pin_manager.c: 112:  
      +                                 IOCB4_ISR();
 15038  0068A2  EC49  F033         	call	_IOCB4_ISR	;wreg free
 15039  0068A6                     i2l9409:
 15040                           
 15041                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.RBIF = 0;
 15042  0068A6  90F2               	bcf	242,0,c	;volatile
 15043  0068A8  0012               	return		;funcret
 15044  0068AA                     __end_of_PIN_MANAGER_IOC:
 15045                           	opt callstack 0
 15046                           
 15047 ;; *************** function _IOCB4_ISR *****************
 15048 ;; Defined at:
 15049 ;;		line 121 in file "mcc_generated_files/pin_manager.c"
 15050 ;; Parameters:    Size  Location     Type
 15051 ;;		None
 15052 ;; Auto vars:     Size  Location     Type
 15053 ;;		None
 15054 ;; Return value:  Size  Location     Type
 15055 ;;                  1    wreg      void 
 15056 ;; Registers used:
 15057 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15058 ;; Tracked objects:
 15059 ;;		On entry : 0/0
 15060 ;;		On exit  : 0/0
 15061 ;;		Unchanged: 0/0
 15062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15067 ;;Total ram usage:        0 bytes
 15068 ;; Hardware stack levels used:    1
 15069 ;; Hardware stack levels required when called:   10
 15070 ;; This function calls:
 15071 ;;		Absolute function
 15072 ;;		_INTERRUPT_S1_CALLBACK
 15073 ;;		_IOCB4_DefaultInterruptHandler
 15074 ;; This function is called by:
 15075 ;;		_PIN_MANAGER_IOC
 15076 ;; This function uses a non-reentrant model
 15077 ;;
 15078                           
 15079                           	psect	text68
 15080  006692                     __ptext68:
 15081                           	opt callstack 0
 15082  006692                     _IOCB4_ISR:
 15083                           	opt callstack 8
 15084  006692                     
 15085                           ;mcc_generated_files/pin_manager.c: 126:     if(IOCB4_InterruptHandler)
 15086  006692  0100               	movlb	0	; () banked
 15087  006694  51C8               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 15088  006696  11C9               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 15089  006698  B4D8               	btfsc	status,2,c
 15090  00669A  EF51  F033         	goto	i2u1179_41
 15091  00669E  EF53  F033         	goto	i2u1179_40
 15092  0066A2                     i2u1179_41:
 15093  0066A2  EF5F  F033         	goto	i2l142
 15094  0066A6                     i2u1179_40:
 15095  0066A6                     
 15096                           ; BSR set to: 0
 15097                           ;mcc_generated_files/pin_manager.c: 127:     {;mcc_generated_files/pin_manager.c: 128:  
      +                                 IOCB4_InterruptHandler();
 15098  0066A6  D802               	call	i2u1180_48
 15099  0066A8  EF5F  F033         	goto	i2u1180_49
 15100  0066AC                     i2u1180_48:
 15101  0066AC  0005               	push	
 15102  0066AE  6EFA               	movwf	pclath,c
 15103  0066B0  51C8               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 15104  0066B2  6EFD               	movwf	tosl,c
 15105  0066B4  51C9               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 15106  0066B6  6EFE               	movwf	tosh,c
 15107  0066B8  6AFF               	clrf	tosu,c
 15108  0066BA  50FA               	movf	pclath,w,c
 15109  0066BC  0012               	return		;indir
 15110  0066BE                     i2u1180_49:
 15111  0066BE                     i2l142:
 15112  0066BE  0012               	return		;funcret
 15113  0066C0                     __end_of_IOCB4_ISR:
 15114                           	opt callstack 0
 15115                           
 15116 ;; *************** function _INTERRUPT_S1_CALLBACK *****************
 15117 ;; Defined at:
 15118 ;;		line 15 in file "main.c"
 15119 ;; Parameters:    Size  Location     Type
 15120 ;;		None
 15121 ;; Auto vars:     Size  Location     Type
 15122 ;;		None
 15123 ;; Return value:  Size  Location     Type
 15124 ;;                  1    wreg      void 
 15125 ;; Registers used:
 15126 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15127 ;; Tracked objects:
 15128 ;;		On entry : 0/0
 15129 ;;		On exit  : 0/0
 15130 ;;		Unchanged: 0/0
 15131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15136 ;;Total ram usage:        0 bytes
 15137 ;; Hardware stack levels used:    1
 15138 ;; Hardware stack levels required when called:    9
 15139 ;; This function calls:
 15140 ;;		_TMR0_StartTimer
 15141 ;;		_TMR0_StopTimer
 15142 ;;		i2_TMR0_WriteTimer
 15143 ;;		i2_printf
 15144 ;; This function is called by:
 15145 ;;		_main
 15146 ;;		_IOCB4_ISR
 15147 ;; This function uses a non-reentrant model
 15148 ;;
 15149                           
 15150                           	psect	text69
 15151  00609A                     __ptext69:
 15152                           	opt callstack 0
 15153  00609A                     _INTERRUPT_S1_CALLBACK:
 15154                           	opt callstack 8
 15155  00609A                     
 15156                           ;main.c: 16:     if (PORTBbits.RB4 == 0) {
 15157  00609A  B881               	btfsc	129,4,c	;volatile
 15158  00609C  EF52  F030         	goto	i2u1174_41
 15159  0060A0  EF54  F030         	goto	i2u1174_40
 15160  0060A4                     i2u1174_41:
 15161  0060A4  EF6B  F030         	goto	i2l9259
 15162  0060A8                     i2u1174_40:
 15163  0060A8                     
 15164                           ;main.c: 17:         printf("\f\rPOT: %3d \r", adc_perc);
 15165  0060A8  0EB4               	movlw	low STR_1
 15166  0060AA  0100               	movlb	0	; () banked
 15167  0060AC  6F7B               	movwf	i2printf@fmt& (0+255),b
 15168  0060AE  0EFF               	movlw	high STR_1
 15169  0060B0  6F7C               	movwf	(i2printf@fmt+1)& (0+255),b
 15170  0060B2  C0B1  F07D         	movff	_adc_perc,?i2_printf+2
 15171  0060B6  C0B2  F07E         	movff	_adc_perc+1,?i2_printf+3
 15172  0060BA  C0B3  F07F         	movff	_adc_perc+2,?i2_printf+4
 15173  0060BE  C0B4  F080         	movff	_adc_perc+3,?i2_printf+5
 15174  0060C2  ECDD  F033         	call	i2_printf	;wreg free
 15175  0060C6                     
 15176                           ;main.c: 19:         TMR0_WriteTimer(0x00);
 15177  0060C6  0E00               	movlw	0
 15178  0060C8  6E02               	movwf	(i2TMR0_WriteTimer@timerVal+1)^0,c
 15179  0060CA  0E00               	movlw	0
 15180  0060CC  6E01               	movwf	i2TMR0_WriteTimer@timerVal^0,c
 15181  0060CE  ECAD  F034         	call	i2_TMR0_WriteTimer	;wreg free
 15182  0060D2                     
 15183                           ;main.c: 20:         TMR0_StartTimer();
 15184  0060D2  ECBC  F034         	call	_TMR0_StartTimer	;wreg free
 15185  0060D6                     i2l9259:
 15186                           
 15187                           ;main.c: 22:     if (PORTBbits.RB4 == 1) {
 15188  0060D6  A881               	btfss	129,4,c	;volatile
 15189  0060D8  EF70  F030         	goto	i2u1175_41
 15190  0060DC  EF72  F030         	goto	i2u1175_40
 15191  0060E0                     i2u1175_41:
 15192  0060E0  EF74  F030         	goto	i2l507
 15193  0060E4                     i2u1175_40:
 15194  0060E4                     
 15195                           ;main.c: 23:         TMR0_StopTimer();
 15196  0060E4  ECBA  F034         	call	_TMR0_StopTimer	;wreg free
 15197  0060E8                     i2l507:
 15198  0060E8  0012               	return		;funcret
 15199  0060EA                     __end_of_INTERRUPT_S1_CALLBACK:
 15200                           	opt callstack 0
 15201                           
 15202 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 15203 ;; Defined at:
 15204 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 15205 ;; Parameters:    Size  Location     Type
 15206 ;;		None
 15207 ;; Auto vars:     Size  Location     Type
 15208 ;;		None
 15209 ;; Return value:  Size  Location     Type
 15210 ;;                  1    wreg      void 
 15211 ;; Registers used:
 15212 ;;		None
 15213 ;; Tracked objects:
 15214 ;;		On entry : 0/0
 15215 ;;		On exit  : 0/0
 15216 ;;		Unchanged: 0/0
 15217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15222 ;;Total ram usage:        0 bytes
 15223 ;; Hardware stack levels used:    1
 15224 ;; This function calls:
 15225 ;;		Nothing
 15226 ;; This function is called by:
 15227 ;;		_PIN_MANAGER_Initialize
 15228 ;;		_IOCB4_ISR
 15229 ;; This function uses a non-reentrant model
 15230 ;;
 15231                           
 15232                           	psect	text70
 15233  00697C                     __ptext70:
 15234                           	opt callstack 0
 15235  00697C                     _IOCB4_DefaultInterruptHandler:
 15236                           	opt callstack 17
 15237  00697C  0012               	return		;funcret
 15238  00697E                     __end_of_IOCB4_DefaultInterruptHandler:
 15239                           	opt callstack 0
 15240                           
 15241 ;; *************** function i2_printf *****************
 15242 ;; Defined at:
 15243 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
 15244 ;; Parameters:    Size  Location     Type
 15245 ;;  fmt             2   27[BANK0 ] PTR const unsigned char 
 15246 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
 15247 ;;		 -> STR_4(22), STR_1(13), 
 15248 ;; Auto vars:     Size  Location     Type
 15249 ;;  printf          2   88[COMRAM] PTR void [1]
 15250 ;;		 -> ?i2_printf(2), ?_snprintf(2), ?_printf(2), 
 15251 ;;  printf          2    0        int 
 15252 ;; Return value:  Size  Location     Type
 15253 ;;                  2   27[BANK0 ] int 
 15254 ;; Registers used:
 15255 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15256 ;; Tracked objects:
 15257 ;;		On entry : 0/0
 15258 ;;		On exit  : 0/0
 15259 ;;		Unchanged: 0/0
 15260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15261 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15262 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15264 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15265 ;;Total ram usage:       10 bytes
 15266 ;; Hardware stack levels used:    1
 15267 ;; Hardware stack levels required when called:    8
 15268 ;; This function calls:
 15269 ;;		i2_vfprintf
 15270 ;; This function is called by:
 15271 ;;		_INTERRUPT_S1_CALLBACK
 15272 ;; This function uses a non-reentrant model
 15273 ;;
 15274                           
 15275                           	psect	text71
 15276  0067BA                     __ptext71:
 15277                           	opt callstack 0
 15278  0067BA                     i2_printf:
 15279                           	opt callstack 8
 15280  0067BA  0E7D               	movlw	low (?i2_printf+2)
 15281  0067BC  6E59               	movwf	i2printf@ap^0,c
 15282  0067BE  0E00               	movlw	high (?i2_printf+2)
 15283  0067C0  6E5A               	movwf	(i2printf@ap+1)^0,c
 15284  0067C2  0E00               	movlw	0
 15285  0067C4  6E4F               	movwf	i2vfprintf@fp^0,c
 15286  0067C6  0E00               	movlw	0
 15287  0067C8  6E50               	movwf	(i2vfprintf@fp+1)^0,c
 15288  0067CA  C07B  F051         	movff	i2printf@fmt,i2vfprintf@fmt
 15289  0067CE  C07C  F052         	movff	i2printf@fmt+1,i2vfprintf@fmt+1
 15290  0067D2  0E59               	movlw	low i2printf@ap
 15291  0067D4  6E53               	movwf	i2vfprintf@ap^0,c
 15292  0067D6  0E00               	movlw	high i2printf@ap
 15293  0067D8  6E54               	movwf	(i2vfprintf@ap+1)^0,c
 15294  0067DA  EC0C  F02F         	call	i2_vfprintf	;wreg free
 15295  0067DE  0012               	return		;funcret
 15296  0067E0                     __end_ofi2_printf:
 15297                           	opt callstack 0
 15298                           
 15299 ;; *************** function i2_vfprintf *****************
 15300 ;; Defined at:
 15301 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 15302 ;; Parameters:    Size  Location     Type
 15303 ;;  fp              2   78[COMRAM] PTR struct _IO_FILE
 15304 ;;		 -> vsnprintf@f(6), NULL(0), 
 15305 ;;  fmt             2   80[COMRAM] PTR const unsigned char 
 15306 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
 15307 ;;		 -> STR_4(22), STR_3(12), STR_1(13), 
 15308 ;;  ap              2   82[COMRAM] PTR PTR void 
 15309 ;;		 -> i2printf@ap(2), snprintf@ap(2), printf@ap(2), 
 15310 ;; Auto vars:     Size  Location     Type
 15311 ;;  vfprintf        2   84[COMRAM] PTR unsigned char 
 15312 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
 15313 ;;		 -> STR_4(22), STR_3(12), STR_1(13), 
 15314 ;; Return value:  Size  Location     Type
 15315 ;;                  2   78[COMRAM] int 
 15316 ;; Registers used:
 15317 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15318 ;; Tracked objects:
 15319 ;;		On entry : 0/0
 15320 ;;		On exit  : 0/0
 15321 ;;		Unchanged: 0/0
 15322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15323 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15324 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15326 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15327 ;;Total ram usage:        8 bytes
 15328 ;; Hardware stack levels used:    1
 15329 ;; Hardware stack levels required when called:    7
 15330 ;; This function calls:
 15331 ;;		i2_vfpfcnvrt
 15332 ;; This function is called by:
 15333 ;;		i2_printf
 15334 ;; This function uses a non-reentrant model
 15335 ;;
 15336                           
 15337                           	psect	text72
 15338  005E18                     __ptext72:
 15339                           	opt callstack 0
 15340  005E18                     i2_vfprintf:
 15341                           	opt callstack 8
 15342  005E18                     
 15343                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 15344  005E18  C051  F055         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
 15345  005E1C  C052  F056         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
 15346  005E20                     
 15347                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 15348  005E20  0E00               	movlw	0
 15349  005E22  0101               	movlb	1	; () banked
 15350  005E24  6F80               	movwf	(_nout+1)& (0+255),b
 15351  005E26  0E00               	movlw	0
 15352  005E28  6F7F               	movwf	_nout& (0+255),b
 15353                           
 15354                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 15355  005E2A  EF2A  F02F         	goto	i2l8887
 15356  005E2E                     i2l8885:
 15357                           
 15358                           ; BSR set to: 1
 15359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 15360  005E2E  C04F  F045         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
 15361  005E32  C050  F046         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
 15362  005E36  0E55               	movlw	low i2vfprintf@cfmt
 15363  005E38  6E47               	movwf	i2vfpfcnvrt@fmt^0,c
 15364  005E3A  0E00               	movlw	high i2vfprintf@cfmt
 15365  005E3C  6E48               	movwf	(i2vfpfcnvrt@fmt+1)^0,c
 15366  005E3E  C053  F049         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
 15367  005E42  C054  F04A         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
 15368  005E46  ECB0  F009         	call	i2_vfpfcnvrt	;wreg free
 15369  005E4A  5045               	movf	?i2_vfpfcnvrt^0,w,c
 15370  005E4C  0101               	movlb	1	; () banked
 15371  005E4E  277F               	addwf	_nout& (0+255),f,b
 15372  005E50  5046               	movf	(?i2_vfpfcnvrt+1)^0,w,c
 15373  005E52  2380               	addwfc	(_nout+1)& (0+255),f,b
 15374  005E54                     i2l8887:
 15375                           
 15376                           ; BSR set to: 1
 15377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 15378  005E54  C055  FFF6         	movff	i2vfprintf@cfmt,tblptrl
 15379  005E58  C056  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
 15380  005E5C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15381  005E5C  6AF8               	clrf	tblptru,c
 15382  005E5E                     	endif
 15383  005E5E                     	if	0	;tblptru may be non-zero
 15384  005E5E                     	endif
 15385  005E5E  0008               	tblrd		*
 15386  005E60  50F5               	movf	tablat,w,c
 15387  005E62  0900               	iorlw	0
 15388  005E64  A4D8               	btfss	status,2,c
 15389  005E66  EF37  F02F         	goto	i2u1126_41
 15390  005E6A  EF39  F02F         	goto	i2u1126_40
 15391  005E6E                     i2u1126_41:
 15392  005E6E  EF17  F02F         	goto	i2l8885
 15393  005E72                     i2u1126_40:
 15394  005E72                     
 15395                           ; BSR set to: 1
 15396                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 15397  005E72  C17F  F04F         	movff	_nout,?i2_vfprintf
 15398  005E76  C180  F050         	movff	_nout+1,?i2_vfprintf+1
 15399  005E7A                     
 15400                           ; BSR set to: 1
 15401  005E7A  0012               	return		;funcret
 15402  005E7C                     __end_ofi2_vfprintf:
 15403                           	opt callstack 0
 15404                           
 15405 ;; *************** function i2_vfpfcnvrt *****************
 15406 ;; Defined at:
 15407 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 15408 ;; Parameters:    Size  Location     Type
 15409 ;;  fp              2   68[COMRAM] PTR struct _IO_FILE
 15410 ;;		 -> vsnprintf@f(6), NULL(0), 
 15411 ;;  fmt             2   70[COMRAM] PTR PTR unsigned char 
 15412 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
 15413 ;;  ap              2   72[COMRAM] PTR PTR void 
 15414 ;;		 -> i2printf@ap(2), snprintf@ap(2), printf@ap(2), 
 15415 ;; Auto vars:     Size  Location     Type
 15416 ;;  vfpfcnvrt       8   19[BANK0 ] unsigned long long 
 15417 ;;  vfpfcnvrt       8    8[BANK0 ] long long 
 15418 ;;  vfpfcnvrt       4    0        long long 
 15419 ;;  vfpfcnvrt       3    0        unsigned char [3]
 15420 ;;  vfpfcnvrt       2   16[BANK0 ] PTR void 
 15421 ;;		 -> ?_snprintf(2), ?_printf(2), 
 15422 ;;  vfpfcnvrt       2    2[BANK0 ] int 
 15423 ;;  vfpfcnvrt       2    0[BANK0 ] PTR unsigned char 
 15424 ;;		 -> ?_snprintf(2), ?_printf(2), 
 15425 ;;  vfpfcnvrt       2    0        int 
 15426 ;;  vfpfcnvrt       1   18[BANK0 ] unsigned char 
 15427 ;; Return value:  Size  Location     Type
 15428 ;;                  2   68[COMRAM] int 
 15429 ;; Registers used:
 15430 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15431 ;; Tracked objects:
 15432 ;;		On entry : 0/0
 15433 ;;		On exit  : 0/0
 15434 ;;		Unchanged: 0/0
 15435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15436 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15437 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15438 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15439 ;;      Totals:        10      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15440 ;;Total ram usage:       37 bytes
 15441 ;; Hardware stack levels used:    1
 15442 ;; Hardware stack levels required when called:    6
 15443 ;; This function calls:
 15444 ;;		i2_atoi
 15445 ;;		i2_ctoa
 15446 ;;		i2_dtoa
 15447 ;;		i2_fputc
 15448 ;;		i2_isdigit
 15449 ;;		i2_otoa
 15450 ;;		i2_stoa
 15451 ;;		i2_strncmp
 15452 ;;		i2_utoa
 15453 ;;		i2_xtoa
 15454 ;; This function is called by:
 15455 ;;		i2_vfprintf
 15456 ;; This function uses a non-reentrant model
 15457 ;;
 15458                           
 15459                           	psect	text73
 15460  001360                     __ptext73:
 15461                           	opt callstack 0
 15462  001360                     i2_vfpfcnvrt:
 15463                           	opt callstack 8
 15464  001360                     
 15465                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 15466  001360  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15467  001364  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15468  001368  CFDE FFF6          	movff	postinc2,tblptrl
 15469  00136C  CFDD FFF7          	movff	postdec2,tblptrh
 15470  001370                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15471  001370  6AF8               	clrf	tblptru,c
 15472  001372                     	endif
 15473  001372                     	if	0	;tblptru may be non-zero
 15474  001372                     	endif
 15475  001372  0008               	tblrd		*
 15476  001374  50F5               	movf	tablat,w,c
 15477  001376  0A25               	xorlw	37
 15478  001378  A4D8               	btfss	status,2,c
 15479  00137A  EFC1  F009         	goto	i2u1004_41
 15480  00137E  EFC3  F009         	goto	i2u1004_40
 15481  001382                     i2u1004_41:
 15482  001382  EFCF  F012         	goto	i2l8529
 15483  001386                     i2u1004_40:
 15484  001386                     
 15485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 15486  001386  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15487  00138A  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15488  00138E  2ADE               	incf	postinc2,f,c
 15489  001390  0E00               	movlw	0
 15490  001392  22DD               	addwfc	postdec2,f,c
 15491  001394                     
 15492                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 15493  001394  0E00               	movlw	0
 15494  001396  0100               	movlb	0	; () banked
 15495  001398  6FB6               	movwf	(_width+1)& (0+255),b
 15496  00139A  0E00               	movlw	0
 15497  00139C  6FB5               	movwf	_width& (0+255),b
 15498  00139E  C0B5  F0B9         	movff	_width,_flags
 15499  0013A2  C0B6  F0BA         	movff	_width+1,_flags+1
 15500  0013A6                     
 15501                           ; BSR set to: 0
 15502                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 15503  0013A6  69B7               	setf	_prec& (0+255),b
 15504  0013A8  69B8               	setf	(_prec+1)& (0+255),b
 15505  0013AA                     
 15506                           ; BSR set to: 0
 15507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
 15508  0013AA  0E00               	movlw	0
 15509  0013AC  6F63               	movwf	(i2vfpfcnvrt@done+1)& (0+255),b
 15510  0013AE  0E00               	movlw	0
 15511  0013B0  6F62               	movwf	i2vfpfcnvrt@done& (0+255),b
 15512                           
 15513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 15514  0013B2  EF22  F00A         	goto	i2l8247
 15515  0013B6                     i2l8221:
 15516                           
 15517                           ; BSR set to: 0
 15518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
 15519  0013B6  81B9               	bsf	_flags& (0+255),0,b
 15520  0013B8                     i2l8223:
 15521                           
 15522                           ; BSR set to: 0
 15523                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
 15524  0013B8  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15525  0013BC  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15526  0013C0  2ADE               	incf	postinc2,f,c
 15527  0013C2  0E00               	movlw	0
 15528  0013C4  22DD               	addwfc	postdec2,f,c
 15529                           
 15530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
 15531  0013C6  EF22  F00A         	goto	i2l8247
 15532  0013CA                     i2l8225:
 15533                           
 15534                           ; BSR set to: 0
 15535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
 15536  0013CA  83B9               	bsf	_flags& (0+255),1,b
 15537  0013CC  EFDC  F009         	goto	i2l8223
 15538  0013D0                     i2l8229:
 15539                           
 15540                           ; BSR set to: 0
 15541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
 15542  0013D0  85B9               	bsf	_flags& (0+255),2,b
 15543  0013D2  EFDC  F009         	goto	i2l8223
 15544  0013D6                     i2l8233:
 15545                           
 15546                           ; BSR set to: 0
 15547                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
 15548  0013D6  87B9               	bsf	_flags& (0+255),3,b
 15549  0013D8  EFDC  F009         	goto	i2l8223
 15550  0013DC                     i2l8237:
 15551                           
 15552                           ; BSR set to: 0
 15553                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
 15554  0013DC  89B9               	bsf	_flags& (0+255),4,b
 15555  0013DE  EFDC  F009         	goto	i2l8223
 15556  0013E2                     i2l8241:
 15557                           
 15558                           ; BSR set to: 0
 15559                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
 15560  0013E2  0E00               	movlw	0
 15561  0013E4  6F63               	movwf	(i2vfpfcnvrt@done+1)& (0+255),b
 15562  0013E6  0E01               	movlw	1
 15563  0013E8  6F62               	movwf	i2vfpfcnvrt@done& (0+255),b
 15564                           
 15565                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
 15566  0013EA  EF22  F00A         	goto	i2l8247
 15567  0013EE                     i2l8245:
 15568                           
 15569                           ; BSR set to: 0
 15570  0013EE  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15571  0013F2  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15572  0013F6  CFDE FFF6          	movff	postinc2,tblptrl
 15573  0013FA  CFDD FFF7          	movff	postdec2,tblptrh
 15574  0013FE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15575  0013FE  6AF8               	clrf	tblptru,c
 15576  001400                     	endif
 15577  001400                     	if	0	;tblptru may be non-zero
 15578  001400                     	endif
 15579  001400  0008               	tblrd		*
 15580  001402  50F5               	movf	tablat,w,c
 15581  001404  6E4B               	movwf	??i2_vfpfcnvrt^0,c
 15582  001406  6A4C               	clrf	(??i2_vfpfcnvrt+1)^0,c
 15583                           
 15584                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15585                           ; Switch size 1, requested type "simple"
 15586                           ; Number of cases is 1, Range of values is 0 to 0
 15587                           ; switch strategies available:
 15588                           ; Name         Instructions Cycles
 15589                           ; simple_byte            4     3 (average)
 15590                           ;	Chosen strategy is simple_byte
 15591  001408  504C               	movf	(??i2_vfpfcnvrt+1)^0,w,c
 15592  00140A  0A00               	xorlw	0	; case 0
 15593  00140C  B4D8               	btfsc	status,2,c
 15594  00140E  EF0B  F00A         	goto	i2l9965
 15595  001412  EFF1  F009         	goto	i2l8241
 15596  001416                     i2l9965:
 15597                           
 15598                           ; BSR set to: 0
 15599                           ; Switch size 1, requested type "simple"
 15600                           ; Number of cases is 5, Range of values is 32 to 48
 15601                           ; switch strategies available:
 15602                           ; Name         Instructions Cycles
 15603                           ; simple_byte           16     9 (average)
 15604                           ;	Chosen strategy is simple_byte
 15605  001416  504B               	movf	??i2_vfpfcnvrt^0,w,c
 15606  001418  0A20               	xorlw	32	; case 32
 15607  00141A  B4D8               	btfsc	status,2,c
 15608  00141C  EFEB  F009         	goto	i2l8233
 15609  001420  0A03               	xorlw	3	; case 35
 15610  001422  B4D8               	btfsc	status,2,c
 15611  001424  EFEE  F009         	goto	i2l8237
 15612  001428  0A08               	xorlw	8	; case 43
 15613  00142A  B4D8               	btfsc	status,2,c
 15614  00142C  EFE8  F009         	goto	i2l8229
 15615  001430  0A06               	xorlw	6	; case 45
 15616  001432  B4D8               	btfsc	status,2,c
 15617  001434  EFDB  F009         	goto	i2l8221
 15618  001438  0A1D               	xorlw	29	; case 48
 15619  00143A  B4D8               	btfsc	status,2,c
 15620  00143C  EFE5  F009         	goto	i2l8225
 15621  001440  EFF1  F009         	goto	i2l8241
 15622  001444                     i2l8247:
 15623                           
 15624                           ; BSR set to: 0
 15625                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 15626  001444  5162               	movf	i2vfpfcnvrt@done& (0+255),w,b
 15627  001446  1163               	iorwf	(i2vfpfcnvrt@done+1)& (0+255),w,b
 15628  001448  B4D8               	btfsc	status,2,c
 15629  00144A  EF29  F00A         	goto	i2u1005_41
 15630  00144E  EF2B  F00A         	goto	i2u1005_40
 15631  001452                     i2u1005_41:
 15632  001452  EFF7  F009         	goto	i2l8245
 15633  001456                     i2u1005_40:
 15634  001456                     
 15635                           ; BSR set to: 0
 15636                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
 15637  001456  A1B9               	btfss	_flags& (0+255),0,b
 15638  001458  EF30  F00A         	goto	i2u1006_41
 15639  00145C  EF32  F00A         	goto	i2u1006_40
 15640  001460                     i2u1006_41:
 15641  001460  EF33  F00A         	goto	i2l8251
 15642  001464                     i2u1006_40:
 15643  001464                     
 15644                           ; BSR set to: 0
 15645                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
 15646  001464  93B9               	bcf	_flags& (0+255),1,b
 15647  001466                     i2l8251:
 15648                           
 15649                           ; BSR set to: 0
 15650                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
 15651  001466  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15652  00146A  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15653  00146E  CFDE FFF6          	movff	postinc2,tblptrl
 15654  001472  CFDD FFF7          	movff	postdec2,tblptrh
 15655  001476                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15656  001476  6AF8               	clrf	tblptru,c
 15657  001478                     	endif
 15658  001478                     	if	0	;tblptru may be non-zero
 15659  001478                     	endif
 15660  001478  0008               	tblrd		*
 15661  00147A  50F5               	movf	tablat,w,c
 15662  00147C  0A2A               	xorlw	42
 15663  00147E  A4D8               	btfss	status,2,c
 15664  001480  EF44  F00A         	goto	i2u1007_41
 15665  001484  EF46  F00A         	goto	i2u1007_40
 15666  001488                     i2u1007_41:
 15667  001488  EF6F  F00A         	goto	i2l8259
 15668  00148C                     i2u1007_40:
 15669  00148C                     
 15670                           ; BSR set to: 0
 15671                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
 15672  00148C  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15673  001490  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15674  001494  2ADE               	incf	postinc2,f,c
 15675  001496  0E00               	movlw	0
 15676  001498  22DD               	addwfc	postdec2,f,c
 15677                           
 15678                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
 15679  00149A  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 15680  00149E  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 15681  0014A2  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 15682  0014A6  0E02               	movlw	2
 15683  0014A8  26DE               	addwf	postinc2,f,c
 15684  0014AA  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 15685  0014AE  0E00               	movlw	0
 15686  0014B0  22DD               	addwfc	postdec2,f,c
 15687  0014B2  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 15688  0014B6  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 15689  0014BA  CFDE F0B5          	movff	postinc2,_width
 15690  0014BE  CFDD F0B6          	movff	postdec2,_width+1
 15691  0014C2                     
 15692                           ; BSR set to: 0
 15693                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
 15694  0014C2  BFB6               	btfsc	(_width+1)& (0+255),7,b
 15695  0014C4  EF68  F00A         	goto	i2u1008_40
 15696  0014C8  EF66  F00A         	goto	i2u1008_41
 15697  0014CC                     i2u1008_41:
 15698  0014CC  EFB4  F00A         	goto	i2l8269
 15699  0014D0                     i2u1008_40:
 15700  0014D0                     
 15701                           ; BSR set to: 0
 15702                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
 15703  0014D0  81B9               	bsf	_flags& (0+255),0,b
 15704                           
 15705                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
 15706  0014D2  6DB5               	negf	_width& (0+255),b
 15707  0014D4  1FB6               	comf	(_width+1)& (0+255),f,b
 15708  0014D6  B0D8               	btfsc	status,0,c
 15709  0014D8  2BB6               	incf	(_width+1)& (0+255),f,b
 15710  0014DA  EFB4  F00A         	goto	i2l8269
 15711  0014DE                     i2l8259:
 15712                           
 15713                           ; BSR set to: 0
 15714                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
 15715  0014DE  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15716  0014E2  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15717  0014E6  CFDE F008          	movff	postinc2,i2atoi@s
 15718  0014EA  CFDD F009          	movff	postdec2,i2atoi@s+1
 15719  0014EE  EC57  F01F         	call	i2_atoi	;wreg free
 15720  0014F2  C008  F0B5         	movff	?i2_atoi,_width
 15721  0014F6  C009  F0B6         	movff	?i2_atoi+1,_width+1
 15722                           
 15723                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 15724  0014FA  EF86  F00A         	goto	i2l8263
 15725  0014FE                     i2l8261:
 15726                           
 15727                           ; BSR set to: 0
 15728                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
 15729  0014FE  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15730  001502  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15731  001506  2ADE               	incf	postinc2,f,c
 15732  001508  0E00               	movlw	0
 15733  00150A  22DD               	addwfc	postdec2,f,c
 15734  00150C                     i2l8263:
 15735  00150C  0ED0               	movlw	208
 15736  00150E  6E4B               	movwf	??i2_vfpfcnvrt^0,c
 15737  001510  0EFF               	movlw	255
 15738  001512  6E4C               	movwf	(??i2_vfpfcnvrt+1)^0,c
 15739  001514  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15740  001518  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15741  00151C  CFDE FFF6          	movff	postinc2,tblptrl
 15742  001520  CFDD FFF7          	movff	postdec2,tblptrh
 15743  001524                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15744  001524  6AF8               	clrf	tblptru,c
 15745  001526                     	endif
 15746  001526                     	if	0	;tblptru may be non-zero
 15747  001526                     	endif
 15748  001526  0008               	tblrd		*
 15749  001528  50F5               	movf	tablat,w,c
 15750  00152A  6E4D               	movwf	(??i2_vfpfcnvrt+2)^0,c
 15751  00152C  6A4E               	clrf	(??i2_vfpfcnvrt+3)^0,c
 15752  00152E  504B               	movf	??i2_vfpfcnvrt^0,w,c
 15753  001530  264D               	addwf	(??i2_vfpfcnvrt+2)^0,f,c
 15754  001532  504C               	movf	(??i2_vfpfcnvrt+1)^0,w,c
 15755  001534  224E               	addwfc	(??i2_vfpfcnvrt+3)^0,f,c
 15756  001536  504E               	movf	(??i2_vfpfcnvrt+3)^0,w,c
 15757  001538  E10A               	bnz	i2u1009_40
 15758  00153A  0E0A               	movlw	10
 15759  00153C  5C4D               	subwf	(??i2_vfpfcnvrt+2)^0,w,c
 15760  00153E  A0D8               	btfss	status,0,c
 15761  001540  EFA4  F00A         	goto	i2u1009_41
 15762  001544  EFA7  F00A         	goto	i2u1009_40
 15763  001548                     i2u1009_41:
 15764  001548  0E01               	movlw	1
 15765  00154A  EFA8  F00A         	goto	i2u1010_40
 15766  00154E                     i2u1009_40:
 15767  00154E  0E00               	movlw	0
 15768  001550                     i2u1010_40:
 15769  001550  0100               	movlb	0	; () banked
 15770  001552  6F64               	movwf	i2_vfpfcnvrt$1874& (0+255),b
 15771  001554  6B65               	clrf	(i2_vfpfcnvrt$1874+1)& (0+255),b
 15772  001556                     
 15773                           ; BSR set to: 0
 15774  001556  5164               	movf	i2_vfpfcnvrt$1874& (0+255),w,b
 15775  001558  1165               	iorwf	(i2_vfpfcnvrt$1874+1)& (0+255),w,b
 15776  00155A  A4D8               	btfss	status,2,c
 15777  00155C  EFB2  F00A         	goto	i2u1011_41
 15778  001560  EFB4  F00A         	goto	i2u1011_40
 15779  001564                     i2u1011_41:
 15780  001564  EF7F  F00A         	goto	i2l8261
 15781  001568                     i2u1011_40:
 15782  001568                     i2l8269:
 15783                           
 15784                           ; BSR set to: 0
 15785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
 15786  001568  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15787  00156C  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15788  001570  CFDE FFF6          	movff	postinc2,tblptrl
 15789  001574  CFDD FFF7          	movff	postdec2,tblptrh
 15790  001578                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15791  001578  6AF8               	clrf	tblptru,c
 15792  00157A                     	endif
 15793  00157A                     	if	0	;tblptru may be non-zero
 15794  00157A                     	endif
 15795  00157A  0008               	tblrd		*
 15796  00157C  50F5               	movf	tablat,w,c
 15797  00157E  0A2E               	xorlw	46
 15798  001580  A4D8               	btfss	status,2,c
 15799  001582  EFC5  F00A         	goto	i2u1012_41
 15800  001586  EFC7  F00A         	goto	i2u1012_40
 15801  00158A                     i2u1012_41:
 15802  00158A  EF47  F00B         	goto	i2l8289
 15803  00158E                     i2u1012_40:
 15804  00158E                     
 15805                           ; BSR set to: 0
 15806                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
 15807  00158E  0E00               	movlw	0
 15808  001590  6FB8               	movwf	(_prec+1)& (0+255),b
 15809  001592  0E00               	movlw	0
 15810  001594  6FB7               	movwf	_prec& (0+255),b
 15811  001596                     
 15812                           ; BSR set to: 0
 15813                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
 15814  001596  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15815  00159A  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15816  00159E  2ADE               	incf	postinc2,f,c
 15817  0015A0  0E00               	movlw	0
 15818  0015A2  22DD               	addwfc	postdec2,f,c
 15819  0015A4                     
 15820                           ; BSR set to: 0
 15821                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
 15822  0015A4  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15823  0015A8  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15824  0015AC  CFDE FFF6          	movff	postinc2,tblptrl
 15825  0015B0  CFDD FFF7          	movff	postdec2,tblptrh
 15826  0015B4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15827  0015B4  6AF8               	clrf	tblptru,c
 15828  0015B6                     	endif
 15829  0015B6                     	if	0	;tblptru may be non-zero
 15830  0015B6                     	endif
 15831  0015B6  0008               	tblrd		*
 15832  0015B8  50F5               	movf	tablat,w,c
 15833  0015BA  0A2A               	xorlw	42
 15834  0015BC  A4D8               	btfss	status,2,c
 15835  0015BE  EFE3  F00A         	goto	i2u1013_41
 15836  0015C2  EFE5  F00A         	goto	i2u1013_40
 15837  0015C6                     i2u1013_41:
 15838  0015C6  EF02  F00B         	goto	i2l8279
 15839  0015CA                     i2u1013_40:
 15840  0015CA                     
 15841                           ; BSR set to: 0
 15842                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
 15843  0015CA  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15844  0015CE  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15845  0015D2  2ADE               	incf	postinc2,f,c
 15846  0015D4  0E00               	movlw	0
 15847  0015D6  22DD               	addwfc	postdec2,f,c
 15848                           
 15849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
 15850  0015D8  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 15851  0015DC  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 15852  0015E0  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 15853  0015E4  0E02               	movlw	2
 15854  0015E6  26DE               	addwf	postinc2,f,c
 15855  0015E8  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 15856  0015EC  0E00               	movlw	0
 15857  0015EE  22DD               	addwfc	postdec2,f,c
 15858  0015F0  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 15859  0015F4  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 15860  0015F8  CFDE F0B7          	movff	postinc2,_prec
 15861  0015FC  CFDD F0B8          	movff	postdec2,_prec+1
 15862                           
 15863                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
 15864  001600  EF47  F00B         	goto	i2l8289
 15865  001604                     i2l8279:
 15866                           
 15867                           ; BSR set to: 0
 15868                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
 15869  001604  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15870  001608  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15871  00160C  CFDE F008          	movff	postinc2,i2atoi@s
 15872  001610  CFDD F009          	movff	postdec2,i2atoi@s+1
 15873  001614  EC57  F01F         	call	i2_atoi	;wreg free
 15874  001618  C008  F0B7         	movff	?i2_atoi,_prec
 15875  00161C  C009  F0B8         	movff	?i2_atoi+1,_prec+1
 15876                           
 15877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 15878  001620  EF19  F00B         	goto	i2l8283
 15879  001624                     i2l8281:
 15880                           
 15881                           ; BSR set to: 0
 15882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
 15883  001624  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15884  001628  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15885  00162C  2ADE               	incf	postinc2,f,c
 15886  00162E  0E00               	movlw	0
 15887  001630  22DD               	addwfc	postdec2,f,c
 15888  001632                     i2l8283:
 15889  001632  0ED0               	movlw	208
 15890  001634  6E4B               	movwf	??i2_vfpfcnvrt^0,c
 15891  001636  0EFF               	movlw	255
 15892  001638  6E4C               	movwf	(??i2_vfpfcnvrt+1)^0,c
 15893  00163A  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15894  00163E  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15895  001642  CFDE FFF6          	movff	postinc2,tblptrl
 15896  001646  CFDD FFF7          	movff	postdec2,tblptrh
 15897  00164A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15898  00164A  6AF8               	clrf	tblptru,c
 15899  00164C                     	endif
 15900  00164C                     	if	0	;tblptru may be non-zero
 15901  00164C                     	endif
 15902  00164C  0008               	tblrd		*
 15903  00164E  50F5               	movf	tablat,w,c
 15904  001650  6E4D               	movwf	(??i2_vfpfcnvrt+2)^0,c
 15905  001652  6A4E               	clrf	(??i2_vfpfcnvrt+3)^0,c
 15906  001654  504B               	movf	??i2_vfpfcnvrt^0,w,c
 15907  001656  264D               	addwf	(??i2_vfpfcnvrt+2)^0,f,c
 15908  001658  504C               	movf	(??i2_vfpfcnvrt+1)^0,w,c
 15909  00165A  224E               	addwfc	(??i2_vfpfcnvrt+3)^0,f,c
 15910  00165C  504E               	movf	(??i2_vfpfcnvrt+3)^0,w,c
 15911  00165E  E10A               	bnz	i2u1014_40
 15912  001660  0E0A               	movlw	10
 15913  001662  5C4D               	subwf	(??i2_vfpfcnvrt+2)^0,w,c
 15914  001664  A0D8               	btfss	status,0,c
 15915  001666  EF37  F00B         	goto	i2u1014_41
 15916  00166A  EF3A  F00B         	goto	i2u1014_40
 15917  00166E                     i2u1014_41:
 15918  00166E  0E01               	movlw	1
 15919  001670  EF3B  F00B         	goto	i2u1015_40
 15920  001674                     i2u1014_40:
 15921  001674  0E00               	movlw	0
 15922  001676                     i2u1015_40:
 15923  001676  0100               	movlb	0	; () banked
 15924  001678  6F66               	movwf	i2_vfpfcnvrt$1875& (0+255),b
 15925  00167A  6B67               	clrf	(i2_vfpfcnvrt$1875+1)& (0+255),b
 15926  00167C                     
 15927                           ; BSR set to: 0
 15928  00167C  5166               	movf	i2_vfpfcnvrt$1875& (0+255),w,b
 15929  00167E  1167               	iorwf	(i2_vfpfcnvrt$1875+1)& (0+255),w,b
 15930  001680  A4D8               	btfss	status,2,c
 15931  001682  EF45  F00B         	goto	i2u1016_41
 15932  001686  EF47  F00B         	goto	i2u1016_40
 15933  00168A                     i2u1016_41:
 15934  00168A  EF12  F00B         	goto	i2l8281
 15935  00168E                     i2u1016_40:
 15936  00168E                     i2l8289:
 15937                           
 15938                           ; BSR set to: 0
 15939                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
 15940  00168E  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15941  001692  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15942  001696  CFDE FFF6          	movff	postinc2,tblptrl
 15943  00169A  CFDD FFF7          	movff	postdec2,tblptrh
 15944  00169E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15945  00169E  6AF8               	clrf	tblptru,c
 15946  0016A0                     	endif
 15947  0016A0                     	if	0	;tblptru may be non-zero
 15948  0016A0                     	endif
 15949  0016A0  0008               	tblrd		*
 15950  0016A2  50F5               	movf	tablat,w,c
 15951  0016A4  0A63               	xorlw	99
 15952  0016A6  A4D8               	btfss	status,2,c
 15953  0016A8  EF58  F00B         	goto	i2u1017_41
 15954  0016AC  EF5A  F00B         	goto	i2u1017_40
 15955  0016B0                     i2u1017_41:
 15956  0016B0  EF81  F00B         	goto	i2l8297
 15957  0016B4                     i2u1017_40:
 15958  0016B4                     
 15959                           ; BSR set to: 0
 15960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
 15961  0016B4  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15962  0016B8  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15963  0016BC  2ADE               	incf	postinc2,f,c
 15964  0016BE  0E00               	movlw	0
 15965  0016C0  22DD               	addwfc	postdec2,f,c
 15966                           
 15967                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 15968  0016C2  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 15969  0016C6  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 15970  0016CA  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 15971  0016CE  0E02               	movlw	2
 15972  0016D0  26DE               	addwf	postinc2,f,c
 15973  0016D2  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 15974  0016D6  0E00               	movlw	0
 15975  0016D8  22DD               	addwfc	postdec2,f,c
 15976  0016DA  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 15977  0016DE  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 15978  0016E2  50DF               	movf	indf2,w,c
 15979  0016E4  6F72               	movwf	i2vfpfcnvrt@c& (0+255),b
 15980  0016E6                     
 15981                           ; BSR set to: 0
 15982                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
 15983  0016E6  C045  F01E         	movff	i2vfpfcnvrt@fp,i2ctoa@fp
 15984  0016EA  C046  F01F         	movff	i2vfpfcnvrt@fp+1,i2ctoa@fp+1
 15985  0016EE  C072  F020         	movff	i2vfpfcnvrt@c,i2ctoa@c
 15986  0016F2  ECCC  F02F         	call	i2_ctoa	;wreg free
 15987  0016F6  C01E  F045         	movff	?i2_ctoa,?i2_vfpfcnvrt
 15988  0016FA  C01F  F046         	movff	?i2_ctoa+1,?i2_vfpfcnvrt+1
 15989  0016FE  EFEB  F012         	goto	i2l875
 15990  001702                     i2l8297:
 15991                           
 15992                           ; BSR set to: 0
 15993                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
 15994  001702  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15995  001706  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15996  00170A  CFDE F001          	movff	postinc2,i2strncmp@_l
 15997  00170E  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 15998  001712  0ED1               	movlw	low STR_9
 15999  001714  6E03               	movwf	i2strncmp@_r^0,c
 16000  001716  0EFF               	movlw	high STR_9
 16001  001718  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16002  00171A  0E00               	movlw	0
 16003  00171C  6E06               	movwf	(i2strncmp@n+1)^0,c
 16004  00171E  0E03               	movlw	3
 16005  001720  6E05               	movwf	i2strncmp@n^0,c
 16006  001722  EC99  F02A         	call	i2_strncmp	;wreg free
 16007  001726  5001               	movf	?i2_strncmp^0,w,c
 16008  001728  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16009  00172A  B4D8               	btfsc	status,2,c
 16010  00172C  EF9A  F00B         	goto	i2u1018_41
 16011  001730  EF9C  F00B         	goto	i2u1018_40
 16012  001734                     i2u1018_41:
 16013  001734  EFB7  F00B         	goto	i2l8301
 16014  001738                     i2u1018_40:
 16015  001738  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16016  00173C  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16017  001740  CFDE F001          	movff	postinc2,i2strncmp@_l
 16018  001744  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16019  001748  0ED5               	movlw	low STR_13
 16020  00174A  6E03               	movwf	i2strncmp@_r^0,c
 16021  00174C  0EFF               	movlw	high STR_13
 16022  00174E  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16023  001750  0E00               	movlw	0
 16024  001752  6E06               	movwf	(i2strncmp@n+1)^0,c
 16025  001754  0E03               	movlw	3
 16026  001756  6E05               	movwf	i2strncmp@n^0,c
 16027  001758  EC99  F02A         	call	i2_strncmp	;wreg free
 16028  00175C  5001               	movf	?i2_strncmp^0,w,c
 16029  00175E  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16030  001760  A4D8               	btfss	status,2,c
 16031  001762  EFB5  F00B         	goto	i2u1019_41
 16032  001766  EFB7  F00B         	goto	i2u1019_40
 16033  00176A                     i2u1019_41:
 16034  00176A  EFF8  F00B         	goto	i2l8307
 16035  00176E                     i2u1019_40:
 16036  00176E                     i2l8301:
 16037                           
 16038                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
 16039  00176E  0E03               	movlw	3
 16040  001770  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16041  001774  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16042  001778  26DE               	addwf	postinc2,f,c
 16043  00177A  0E00               	movlw	0
 16044  00177C  22DD               	addwfc	postdec2,f,c
 16045                           
 16046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 16047  00177E  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16048  001782  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16049  001786  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16050  00178A  0E02               	movlw	2
 16051  00178C  26DE               	addwf	postinc2,f,c
 16052  00178E  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16053  001792  0E00               	movlw	0
 16054  001794  22DD               	addwfc	postdec2,f,c
 16055  001796  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16056  00179A  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16057  00179E  50DF               	movf	indf2,w,c
 16058  0017A0  0100               	movlb	0	; () banked
 16059  0017A2  6F68               	movwf	i2vfpfcnvrt@ll& (0+255),b
 16060  0017A4  0E00               	movlw	0
 16061  0017A6  BF68               	btfsc	i2vfpfcnvrt@ll& (0+255),7,b
 16062  0017A8  0EFF               	movlw	-1
 16063  0017AA  6F69               	movwf	(i2vfpfcnvrt@ll+1)& (0+255),b
 16064  0017AC  6F6A               	movwf	(i2vfpfcnvrt@ll+2)& (0+255),b
 16065  0017AE  6F6B               	movwf	(i2vfpfcnvrt@ll+3)& (0+255),b
 16066  0017B0  6F6C               	movwf	(i2vfpfcnvrt@ll+4)& (0+255),b
 16067  0017B2  6F6D               	movwf	(i2vfpfcnvrt@ll+5)& (0+255),b
 16068  0017B4  6F6E               	movwf	(i2vfpfcnvrt@ll+6)& (0+255),b
 16069  0017B6  6F6F               	movwf	(i2vfpfcnvrt@ll+7)& (0+255),b
 16070  0017B8                     i2l8303:
 16071                           
 16072                           ; BSR set to: 0
 16073                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
 16074  0017B8  C045  F01E         	movff	i2vfpfcnvrt@fp,i2dtoa@fp
 16075  0017BC  C046  F01F         	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
 16076  0017C0  C068  F020         	movff	i2vfpfcnvrt@ll,i2dtoa@d
 16077  0017C4  C069  F021         	movff	i2vfpfcnvrt@ll+1,i2dtoa@d+1
 16078  0017C8  C06A  F022         	movff	i2vfpfcnvrt@ll+2,i2dtoa@d+2
 16079  0017CC  C06B  F023         	movff	i2vfpfcnvrt@ll+3,i2dtoa@d+3
 16080  0017D0  C06C  F024         	movff	i2vfpfcnvrt@ll+4,i2dtoa@d+4
 16081  0017D4  C06D  F025         	movff	i2vfpfcnvrt@ll+5,i2dtoa@d+5
 16082  0017D8  C06E  F026         	movff	i2vfpfcnvrt@ll+6,i2dtoa@d+6
 16083  0017DC  C06F  F027         	movff	i2vfpfcnvrt@ll+7,i2dtoa@d+7
 16084  0017E0  EC01  F018         	call	i2_dtoa	;wreg free
 16085  0017E4  C01E  F045         	movff	?i2_dtoa,?i2_vfpfcnvrt
 16086  0017E8  C01F  F046         	movff	?i2_dtoa+1,?i2_vfpfcnvrt+1
 16087  0017EC  EFEB  F012         	goto	i2l875
 16088  0017F0                     i2l8307:
 16089                           
 16090                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
 16091  0017F0  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16092  0017F4  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16093  0017F8  CFDE F001          	movff	postinc2,i2strncmp@_l
 16094  0017FC  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16095  001800  0ED2               	movlw	low (STR_9+1)
 16096  001802  6E03               	movwf	i2strncmp@_r^0,c
 16097  001804  0EFF               	movlw	high (STR_9+1)
 16098  001806  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16099  001808  0E00               	movlw	0
 16100  00180A  6E06               	movwf	(i2strncmp@n+1)^0,c
 16101  00180C  0E02               	movlw	2
 16102  00180E  6E05               	movwf	i2strncmp@n^0,c
 16103  001810  EC99  F02A         	call	i2_strncmp	;wreg free
 16104  001814  5001               	movf	?i2_strncmp^0,w,c
 16105  001816  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16106  001818  B4D8               	btfsc	status,2,c
 16107  00181A  EF11  F00C         	goto	i2u1020_41
 16108  00181E  EF13  F00C         	goto	i2u1020_40
 16109  001822                     i2u1020_41:
 16110  001822  EF2E  F00C         	goto	i2l8311
 16111  001826                     i2u1020_40:
 16112  001826  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16113  00182A  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16114  00182E  CFDE F001          	movff	postinc2,i2strncmp@_l
 16115  001832  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16116  001836  0ED6               	movlw	low (STR_13+1)
 16117  001838  6E03               	movwf	i2strncmp@_r^0,c
 16118  00183A  0EFF               	movlw	high (STR_13+1)
 16119  00183C  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16120  00183E  0E00               	movlw	0
 16121  001840  6E06               	movwf	(i2strncmp@n+1)^0,c
 16122  001842  0E02               	movlw	2
 16123  001844  6E05               	movwf	i2strncmp@n^0,c
 16124  001846  EC99  F02A         	call	i2_strncmp	;wreg free
 16125  00184A  5001               	movf	?i2_strncmp^0,w,c
 16126  00184C  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16127  00184E  A4D8               	btfss	status,2,c
 16128  001850  EF2C  F00C         	goto	i2u1021_41
 16129  001854  EF2E  F00C         	goto	i2u1021_40
 16130  001858                     i2u1021_41:
 16131  001858  EF56  F00C         	goto	i2l8317
 16132  00185C                     i2u1021_40:
 16133  00185C                     i2l8311:
 16134                           
 16135                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
 16136  00185C  0E02               	movlw	2
 16137  00185E  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16138  001862  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16139  001866  26DE               	addwf	postinc2,f,c
 16140  001868  0E00               	movlw	0
 16141  00186A  22DD               	addwfc	postdec2,f,c
 16142                           
 16143                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
 16144  00186C  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16145  001870  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16146  001874  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16147  001878  0E02               	movlw	2
 16148  00187A  26DE               	addwf	postinc2,f,c
 16149  00187C  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16150  001880  0E00               	movlw	0
 16151  001882  22DD               	addwfc	postdec2,f,c
 16152  001884  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16153  001888  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16154  00188C  CFDE F068          	movff	postinc2,i2vfpfcnvrt@ll
 16155  001890  CFDD F069          	movff	postdec2,i2vfpfcnvrt@ll+1
 16156  001894  0100               	movlb	0	; () banked
 16157  001896  0E00               	movlw	0
 16158  001898  BF69               	btfsc	(i2vfpfcnvrt@ll+1)& (0+255),7,b
 16159  00189A  0EFF               	movlw	-1
 16160  00189C  6F6A               	movwf	(i2vfpfcnvrt@ll+2)& (0+255),b
 16161  00189E  6F6B               	movwf	(i2vfpfcnvrt@ll+3)& (0+255),b
 16162  0018A0  6F6C               	movwf	(i2vfpfcnvrt@ll+4)& (0+255),b
 16163  0018A2  6F6D               	movwf	(i2vfpfcnvrt@ll+5)& (0+255),b
 16164  0018A4  6F6E               	movwf	(i2vfpfcnvrt@ll+6)& (0+255),b
 16165  0018A6  6F6F               	movwf	(i2vfpfcnvrt@ll+7)& (0+255),b
 16166  0018A8  EFDC  F00B         	goto	i2l8303
 16167  0018AC                     i2l8317:
 16168                           
 16169                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 16170  0018AC  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16171  0018B0  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16172  0018B4  CFDE FFF6          	movff	postinc2,tblptrl
 16173  0018B8  CFDD FFF7          	movff	postdec2,tblptrh
 16174  0018BC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16175  0018BC  6AF8               	clrf	tblptru,c
 16176  0018BE                     	endif
 16177  0018BE                     	if	0	;tblptru may be non-zero
 16178  0018BE                     	endif
 16179  0018BE  0008               	tblrd		*
 16180  0018C0  50F5               	movf	tablat,w,c
 16181  0018C2  0A64               	xorlw	100
 16182  0018C4  B4D8               	btfsc	status,2,c
 16183  0018C6  EF67  F00C         	goto	i2u1022_41
 16184  0018CA  EF69  F00C         	goto	i2u1022_40
 16185  0018CE                     i2u1022_41:
 16186  0018CE  EF7C  F00C         	goto	i2l8321
 16187  0018D2                     i2u1022_40:
 16188  0018D2  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16189  0018D6  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16190  0018DA  CFDE FFF6          	movff	postinc2,tblptrl
 16191  0018DE  CFDD FFF7          	movff	postdec2,tblptrh
 16192  0018E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16193  0018E2  6AF8               	clrf	tblptru,c
 16194  0018E4                     	endif
 16195  0018E4                     	if	0	;tblptru may be non-zero
 16196  0018E4                     	endif
 16197  0018E4  0008               	tblrd		*
 16198  0018E6  50F5               	movf	tablat,w,c
 16199  0018E8  0A69               	xorlw	105
 16200  0018EA  A4D8               	btfss	status,2,c
 16201  0018EC  EF7A  F00C         	goto	i2u1023_41
 16202  0018F0  EF7C  F00C         	goto	i2u1023_40
 16203  0018F4                     i2u1023_41:
 16204  0018F4  EFA3  F00C         	goto	i2l8327
 16205  0018F8                     i2u1023_40:
 16206  0018F8                     i2l8321:
 16207                           
 16208                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 16209  0018F8  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16210  0018FC  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16211  001900  2ADE               	incf	postinc2,f,c
 16212  001902  0E00               	movlw	0
 16213  001904  22DD               	addwfc	postdec2,f,c
 16214                           
 16215                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 16216  001906  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16217  00190A  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16218  00190E  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16219  001912  0E02               	movlw	2
 16220  001914  26DE               	addwf	postinc2,f,c
 16221  001916  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16222  00191A  0E00               	movlw	0
 16223  00191C  22DD               	addwfc	postdec2,f,c
 16224  00191E  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16225  001922  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16226  001926  CFDE F068          	movff	postinc2,i2vfpfcnvrt@ll
 16227  00192A  CFDD F069          	movff	postdec2,i2vfpfcnvrt@ll+1
 16228  00192E  0100               	movlb	0	; () banked
 16229  001930  0E00               	movlw	0
 16230  001932  BF69               	btfsc	(i2vfpfcnvrt@ll+1)& (0+255),7,b
 16231  001934  0EFF               	movlw	-1
 16232  001936  6F6A               	movwf	(i2vfpfcnvrt@ll+2)& (0+255),b
 16233  001938  6F6B               	movwf	(i2vfpfcnvrt@ll+3)& (0+255),b
 16234  00193A  6F6C               	movwf	(i2vfpfcnvrt@ll+4)& (0+255),b
 16235  00193C  6F6D               	movwf	(i2vfpfcnvrt@ll+5)& (0+255),b
 16236  00193E  6F6E               	movwf	(i2vfpfcnvrt@ll+6)& (0+255),b
 16237  001940  6F6F               	movwf	(i2vfpfcnvrt@ll+7)& (0+255),b
 16238  001942  EFDC  F00B         	goto	i2l8303
 16239  001946                     i2l8327:
 16240                           
 16241                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
 16242  001946  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16243  00194A  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16244  00194E  CFDE F001          	movff	postinc2,i2strncmp@_l
 16245  001952  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16246  001956  0EEC               	movlw	low STR_27
 16247  001958  6E03               	movwf	i2strncmp@_r^0,c
 16248  00195A  0EFF               	movlw	high STR_27
 16249  00195C  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16250  00195E  0E00               	movlw	0
 16251  001960  6E06               	movwf	(i2strncmp@n+1)^0,c
 16252  001962  0E02               	movlw	2
 16253  001964  6E05               	movwf	i2strncmp@n^0,c
 16254  001966  EC99  F02A         	call	i2_strncmp	;wreg free
 16255  00196A  5001               	movf	?i2_strncmp^0,w,c
 16256  00196C  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16257  00196E  B4D8               	btfsc	status,2,c
 16258  001970  EFBC  F00C         	goto	i2u1024_41
 16259  001974  EFBE  F00C         	goto	i2u1024_40
 16260  001978                     i2u1024_41:
 16261  001978  EFD9  F00C         	goto	i2l8331
 16262  00197C                     i2u1024_40:
 16263  00197C  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16264  001980  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16265  001984  CFDE F001          	movff	postinc2,i2strncmp@_l
 16266  001988  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16267  00198C  0EEF               	movlw	low STR_31
 16268  00198E  6E03               	movwf	i2strncmp@_r^0,c
 16269  001990  0EFF               	movlw	high STR_31
 16270  001992  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16271  001994  0E00               	movlw	0
 16272  001996  6E06               	movwf	(i2strncmp@n+1)^0,c
 16273  001998  0E02               	movlw	2
 16274  00199A  6E05               	movwf	i2strncmp@n^0,c
 16275  00199C  EC99  F02A         	call	i2_strncmp	;wreg free
 16276  0019A0  5001               	movf	?i2_strncmp^0,w,c
 16277  0019A2  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16278  0019A4  A4D8               	btfss	status,2,c
 16279  0019A6  EFD7  F00C         	goto	i2u1025_41
 16280  0019AA  EFD9  F00C         	goto	i2u1025_40
 16281  0019AE                     i2u1025_41:
 16282  0019AE  EF02  F00D         	goto	i2l8337
 16283  0019B2                     i2u1025_40:
 16284  0019B2                     i2l8331:
 16285                           
 16286                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
 16287  0019B2  0E02               	movlw	2
 16288  0019B4  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16289  0019B8  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16290  0019BC  26DE               	addwf	postinc2,f,c
 16291  0019BE  0E00               	movlw	0
 16292  0019C0  22DD               	addwfc	postdec2,f,c
 16293                           
 16294                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 16295  0019C2  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16296  0019C6  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16297  0019CA  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16298  0019CE  0E02               	movlw	2
 16299  0019D0  26DE               	addwf	postinc2,f,c
 16300  0019D2  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16301  0019D6  0E00               	movlw	0
 16302  0019D8  22DD               	addwfc	postdec2,f,c
 16303  0019DA  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16304  0019DE  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16305  0019E2  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 16306  0019E6  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 16307  0019EA  C04D  F068         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@ll
 16308  0019EE  C04E  F069         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@ll+1
 16309  0019F2  0100               	movlb	0	; () banked
 16310  0019F4  6B6A               	clrf	(i2vfpfcnvrt@ll+2)& (0+255),b
 16311  0019F6  6B6B               	clrf	(i2vfpfcnvrt@ll+3)& (0+255),b
 16312  0019F8  6B6C               	clrf	(i2vfpfcnvrt@ll+4)& (0+255),b
 16313  0019FA  6B6D               	clrf	(i2vfpfcnvrt@ll+5)& (0+255),b
 16314  0019FC  6B6E               	clrf	(i2vfpfcnvrt@ll+6)& (0+255),b
 16315  0019FE  6B6F               	clrf	(i2vfpfcnvrt@ll+7)& (0+255),b
 16316  001A00  EFDC  F00B         	goto	i2l8303
 16317  001A04                     i2l8337:
 16318                           
 16319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
 16320  001A04  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16321  001A08  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16322  001A0C  CFDE F001          	movff	postinc2,i2strncmp@_l
 16323  001A10  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16324  001A14  0EDD               	movlw	low STR_36
 16325  001A16  6E03               	movwf	i2strncmp@_r^0,c
 16326  001A18  0EFF               	movlw	high STR_36
 16327  001A1A  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16328  001A1C  0E00               	movlw	0
 16329  001A1E  6E06               	movwf	(i2strncmp@n+1)^0,c
 16330  001A20  0E03               	movlw	3
 16331  001A22  6E05               	movwf	i2strncmp@n^0,c
 16332  001A24  EC99  F02A         	call	i2_strncmp	;wreg free
 16333  001A28  5001               	movf	?i2_strncmp^0,w,c
 16334  001A2A  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16335  001A2C  A4D8               	btfss	status,2,c
 16336  001A2E  EF1B  F00D         	goto	i2u1026_41
 16337  001A32  EF1D  F00D         	goto	i2u1026_40
 16338  001A36                     i2u1026_41:
 16339  001A36  EF5D  F00D         	goto	i2l8345
 16340  001A3A                     i2u1026_40:
 16341  001A3A                     
 16342                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
 16343  001A3A  0E03               	movlw	3
 16344  001A3C  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16345  001A40  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16346  001A44  26DE               	addwf	postinc2,f,c
 16347  001A46  0E00               	movlw	0
 16348  001A48  22DD               	addwfc	postdec2,f,c
 16349                           
 16350                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 16351  001A4A  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16352  001A4E  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16353  001A52  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16354  001A56  0E02               	movlw	2
 16355  001A58  26DE               	addwf	postinc2,f,c
 16356  001A5A  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16357  001A5E  0E00               	movlw	0
 16358  001A60  22DD               	addwfc	postdec2,f,c
 16359  001A62  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16360  001A66  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16361  001A6A  50DF               	movf	indf2,w,c
 16362  001A6C  6E4D               	movwf	(??i2_vfpfcnvrt+2)^0,c
 16363  001A6E  504D               	movf	(??i2_vfpfcnvrt+2)^0,w,c
 16364  001A70  0100               	movlb	0	; () banked
 16365  001A72  6F73               	movwf	i2vfpfcnvrt@llu& (0+255),b
 16366  001A74  6B74               	clrf	(i2vfpfcnvrt@llu+1)& (0+255),b
 16367  001A76  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 16368  001A78  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 16369  001A7A  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 16370  001A7C  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 16371  001A7E  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 16372  001A80  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 16373  001A82                     i2l8341:
 16374                           
 16375                           ; BSR set to: 0
 16376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
 16377  001A82  C045  F01E         	movff	i2vfpfcnvrt@fp,i2otoa@fp
 16378  001A86  C046  F01F         	movff	i2vfpfcnvrt@fp+1,i2otoa@fp+1
 16379  001A8A  C073  F020         	movff	i2vfpfcnvrt@llu,i2otoa@d
 16380  001A8E  C074  F021         	movff	i2vfpfcnvrt@llu+1,i2otoa@d+1
 16381  001A92  C075  F022         	movff	i2vfpfcnvrt@llu+2,i2otoa@d+2
 16382  001A96  C076  F023         	movff	i2vfpfcnvrt@llu+3,i2otoa@d+3
 16383  001A9A  C077  F024         	movff	i2vfpfcnvrt@llu+4,i2otoa@d+4
 16384  001A9E  C078  F025         	movff	i2vfpfcnvrt@llu+5,i2otoa@d+5
 16385  001AA2  C079  F026         	movff	i2vfpfcnvrt@llu+6,i2otoa@d+6
 16386  001AA6  C07A  F027         	movff	i2vfpfcnvrt@llu+7,i2otoa@d+7
 16387  001AAA  EC57  F021         	call	i2_otoa	;wreg free
 16388  001AAE  C01E  F045         	movff	?i2_otoa,?i2_vfpfcnvrt
 16389  001AB2  C01F  F046         	movff	?i2_otoa+1,?i2_vfpfcnvrt+1
 16390  001AB6  EFEB  F012         	goto	i2l875
 16391  001ABA                     i2l8345:
 16392                           
 16393                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
 16394  001ABA  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16395  001ABE  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16396  001AC2  CFDE F001          	movff	postinc2,i2strncmp@_l
 16397  001AC6  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16398  001ACA  0EDE               	movlw	low (STR_36+1)
 16399  001ACC  6E03               	movwf	i2strncmp@_r^0,c
 16400  001ACE  0EFF               	movlw	high (STR_36+1)
 16401  001AD0  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16402  001AD2  0E00               	movlw	0
 16403  001AD4  6E06               	movwf	(i2strncmp@n+1)^0,c
 16404  001AD6  0E02               	movlw	2
 16405  001AD8  6E05               	movwf	i2strncmp@n^0,c
 16406  001ADA  EC99  F02A         	call	i2_strncmp	;wreg free
 16407  001ADE  5001               	movf	?i2_strncmp^0,w,c
 16408  001AE0  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16409  001AE2  A4D8               	btfss	status,2,c
 16410  001AE4  EF76  F00D         	goto	i2u1027_41
 16411  001AE8  EF78  F00D         	goto	i2u1027_40
 16412  001AEC                     i2u1027_41:
 16413  001AEC  EFA1  F00D         	goto	i2l8353
 16414  001AF0                     i2u1027_40:
 16415  001AF0                     
 16416                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
 16417  001AF0  0E02               	movlw	2
 16418  001AF2  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16419  001AF6  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16420  001AFA  26DE               	addwf	postinc2,f,c
 16421  001AFC  0E00               	movlw	0
 16422  001AFE  22DD               	addwfc	postdec2,f,c
 16423                           
 16424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 16425  001B00  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16426  001B04  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16427  001B08  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16428  001B0C  0E02               	movlw	2
 16429  001B0E  26DE               	addwf	postinc2,f,c
 16430  001B10  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16431  001B14  0E00               	movlw	0
 16432  001B16  22DD               	addwfc	postdec2,f,c
 16433  001B18  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16434  001B1C  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16435  001B20  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 16436  001B24  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 16437  001B28  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 16438  001B2C  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 16439  001B30  0100               	movlb	0	; () banked
 16440  001B32  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 16441  001B34  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 16442  001B36  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 16443  001B38  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 16444  001B3A  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 16445  001B3C  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 16446  001B3E  EF41  F00D         	goto	i2l8341
 16447  001B42                     i2l8353:
 16448                           
 16449                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
 16450  001B42  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16451  001B46  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16452  001B4A  CFDE FFF6          	movff	postinc2,tblptrl
 16453  001B4E  CFDD FFF7          	movff	postdec2,tblptrh
 16454  001B52                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16455  001B52  6AF8               	clrf	tblptru,c
 16456  001B54                     	endif
 16457  001B54                     	if	0	;tblptru may be non-zero
 16458  001B54                     	endif
 16459  001B54  0008               	tblrd		*
 16460  001B56  50F5               	movf	tablat,w,c
 16461  001B58  0A6F               	xorlw	111
 16462  001B5A  A4D8               	btfss	status,2,c
 16463  001B5C  EFB2  F00D         	goto	i2u1028_41
 16464  001B60  EFB4  F00D         	goto	i2u1028_40
 16465  001B64                     i2u1028_41:
 16466  001B64  EFDC  F00D         	goto	i2l8361
 16467  001B68                     i2u1028_40:
 16468  001B68                     
 16469                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
 16470  001B68  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16471  001B6C  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16472  001B70  2ADE               	incf	postinc2,f,c
 16473  001B72  0E00               	movlw	0
 16474  001B74  22DD               	addwfc	postdec2,f,c
 16475                           
 16476                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
 16477  001B76  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16478  001B7A  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16479  001B7E  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16480  001B82  0E02               	movlw	2
 16481  001B84  26DE               	addwf	postinc2,f,c
 16482  001B86  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16483  001B8A  0E00               	movlw	0
 16484  001B8C  22DD               	addwfc	postdec2,f,c
 16485  001B8E  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16486  001B92  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16487  001B96  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 16488  001B9A  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 16489  001B9E  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 16490  001BA2  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 16491  001BA6  0100               	movlb	0	; () banked
 16492  001BA8  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 16493  001BAA  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 16494  001BAC  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 16495  001BAE  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 16496  001BB0  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 16497  001BB2  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 16498  001BB4  EF41  F00D         	goto	i2l8341
 16499  001BB8                     i2l8361:
 16500                           
 16501                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
 16502  001BB8  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16503  001BBC  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16504  001BC0  CFDE F001          	movff	postinc2,i2strncmp@_l
 16505  001BC4  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16506  001BC8  0EF5               	movlw	low STR_46
 16507  001BCA  6E03               	movwf	i2strncmp@_r^0,c
 16508  001BCC  0EFF               	movlw	high STR_46
 16509  001BCE  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16510  001BD0  0E00               	movlw	0
 16511  001BD2  6E06               	movwf	(i2strncmp@n+1)^0,c
 16512  001BD4  0E02               	movlw	2
 16513  001BD6  6E05               	movwf	i2strncmp@n^0,c
 16514  001BD8  EC99  F02A         	call	i2_strncmp	;wreg free
 16515  001BDC  5001               	movf	?i2_strncmp^0,w,c
 16516  001BDE  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16517  001BE0  A4D8               	btfss	status,2,c
 16518  001BE2  EFF5  F00D         	goto	i2u1029_41
 16519  001BE6  EFF7  F00D         	goto	i2u1029_40
 16520  001BEA                     i2u1029_41:
 16521  001BEA  EF20  F00E         	goto	i2l8369
 16522  001BEE                     i2u1029_40:
 16523  001BEE                     
 16524                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
 16525  001BEE  0E02               	movlw	2
 16526  001BF0  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16527  001BF4  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16528  001BF8  26DE               	addwf	postinc2,f,c
 16529  001BFA  0E00               	movlw	0
 16530  001BFC  22DD               	addwfc	postdec2,f,c
 16531                           
 16532                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 16533  001BFE  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16534  001C02  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16535  001C06  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16536  001C0A  0E02               	movlw	2
 16537  001C0C  26DE               	addwf	postinc2,f,c
 16538  001C0E  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16539  001C12  0E00               	movlw	0
 16540  001C14  22DD               	addwfc	postdec2,f,c
 16541  001C16  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16542  001C1A  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16543  001C1E  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 16544  001C22  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 16545  001C26  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 16546  001C2A  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 16547  001C2E  0100               	movlb	0	; () banked
 16548  001C30  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 16549  001C32  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 16550  001C34  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 16551  001C36  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 16552  001C38  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 16553  001C3A  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 16554  001C3C  EF41  F00D         	goto	i2l8341
 16555  001C40                     i2l8369:
 16556                           
 16557                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
 16558  001C40  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16559  001C44  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16560  001C48  CFDE F001          	movff	postinc2,i2strncmp@_l
 16561  001C4C  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16562  001C50  0ED9               	movlw	low STR_51
 16563  001C52  6E03               	movwf	i2strncmp@_r^0,c
 16564  001C54  0EFF               	movlw	high STR_51
 16565  001C56  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16566  001C58  0E00               	movlw	0
 16567  001C5A  6E06               	movwf	(i2strncmp@n+1)^0,c
 16568  001C5C  0E03               	movlw	3
 16569  001C5E  6E05               	movwf	i2strncmp@n^0,c
 16570  001C60  EC99  F02A         	call	i2_strncmp	;wreg free
 16571  001C64  5001               	movf	?i2_strncmp^0,w,c
 16572  001C66  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16573  001C68  A4D8               	btfss	status,2,c
 16574  001C6A  EF39  F00E         	goto	i2u1030_41
 16575  001C6E  EF3B  F00E         	goto	i2u1030_40
 16576  001C72                     i2u1030_41:
 16577  001C72  EF63  F00E         	goto	i2l8379
 16578  001C76                     i2u1030_40:
 16579  001C76                     
 16580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
 16581  001C76  0E03               	movlw	3
 16582  001C78  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16583  001C7C  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16584  001C80  26DE               	addwf	postinc2,f,c
 16585  001C82  0E00               	movlw	0
 16586  001C84  22DD               	addwfc	postdec2,f,c
 16587                           
 16588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
 16589  001C86  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16590  001C8A  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16591  001C8E  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16592  001C92  0E02               	movlw	2
 16593  001C94  26DE               	addwf	postinc2,f,c
 16594  001C96  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16595  001C9A  0E00               	movlw	0
 16596  001C9C  22DD               	addwfc	postdec2,f,c
 16597  001C9E  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16598  001CA2  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16599  001CA6  CFDE F070          	movff	postinc2,i2vfpfcnvrt@vp
 16600  001CAA  CFDD F071          	movff	postdec2,i2vfpfcnvrt@vp+1
 16601  001CAE                     
 16602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
 16603  001CAE  C070  FFD9         	movff	i2vfpfcnvrt@vp,fsr2l
 16604  001CB2  C071  FFDA         	movff	i2vfpfcnvrt@vp+1,fsr2h
 16605  001CB6  C17F  FFDF         	movff	_nout,indf2
 16606  001CBA                     i2l8375:
 16607                           
 16608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
 16609  001CBA  0E00               	movlw	0
 16610  001CBC  6E46               	movwf	(?i2_vfpfcnvrt+1)^0,c
 16611  001CBE  0E00               	movlw	0
 16612  001CC0  6E45               	movwf	?i2_vfpfcnvrt^0,c
 16613  001CC2  EFEB  F012         	goto	i2l875
 16614  001CC6                     i2l8379:
 16615                           
 16616                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
 16617  001CC6  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16618  001CCA  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16619  001CCE  CFDE F001          	movff	postinc2,i2strncmp@_l
 16620  001CD2  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16621  001CD6  0EDA               	movlw	low (STR_51+1)
 16622  001CD8  6E03               	movwf	i2strncmp@_r^0,c
 16623  001CDA  0EFF               	movlw	high (STR_51+1)
 16624  001CDC  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16625  001CDE  0E00               	movlw	0
 16626  001CE0  6E06               	movwf	(i2strncmp@n+1)^0,c
 16627  001CE2  0E02               	movlw	2
 16628  001CE4  6E05               	movwf	i2strncmp@n^0,c
 16629  001CE6  EC99  F02A         	call	i2_strncmp	;wreg free
 16630  001CEA  5001               	movf	?i2_strncmp^0,w,c
 16631  001CEC  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16632  001CEE  A4D8               	btfss	status,2,c
 16633  001CF0  EF7C  F00E         	goto	i2u1031_41
 16634  001CF4  EF7E  F00E         	goto	i2u1031_40
 16635  001CF8                     i2u1031_41:
 16636  001CF8  EFA4  F00E         	goto	i2l8389
 16637  001CFC                     i2u1031_40:
 16638  001CFC                     
 16639                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
 16640  001CFC  0E02               	movlw	2
 16641  001CFE  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16642  001D02  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16643  001D06  26DE               	addwf	postinc2,f,c
 16644  001D08  0E00               	movlw	0
 16645  001D0A  22DD               	addwfc	postdec2,f,c
 16646                           
 16647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
 16648  001D0C  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16649  001D10  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16650  001D14  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16651  001D18  0E02               	movlw	2
 16652  001D1A  26DE               	addwf	postinc2,f,c
 16653  001D1C  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16654  001D20  0E00               	movlw	0
 16655  001D22  22DD               	addwfc	postdec2,f,c
 16656  001D24  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16657  001D28  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16658  001D2C  CFDE F070          	movff	postinc2,i2vfpfcnvrt@vp
 16659  001D30  CFDD F071          	movff	postdec2,i2vfpfcnvrt@vp+1
 16660  001D34                     
 16661                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
 16662  001D34  C070  FFD9         	movff	i2vfpfcnvrt@vp,fsr2l
 16663  001D38  C071  FFDA         	movff	i2vfpfcnvrt@vp+1,fsr2h
 16664  001D3C  C17F  FFDE         	movff	_nout,postinc2
 16665  001D40  C180  FFDD         	movff	_nout+1,postdec2
 16666  001D44  EF5D  F00E         	goto	i2l8375
 16667  001D48                     i2l8389:
 16668                           
 16669                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
 16670  001D48  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16671  001D4C  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16672  001D50  CFDE FFF6          	movff	postinc2,tblptrl
 16673  001D54  CFDD FFF7          	movff	postdec2,tblptrh
 16674  001D58                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16675  001D58  6AF8               	clrf	tblptru,c
 16676  001D5A                     	endif
 16677  001D5A                     	if	0	;tblptru may be non-zero
 16678  001D5A                     	endif
 16679  001D5A  0008               	tblrd		*
 16680  001D5C  50F5               	movf	tablat,w,c
 16681  001D5E  0A6E               	xorlw	110
 16682  001D60  A4D8               	btfss	status,2,c
 16683  001D62  EFB5  F00E         	goto	i2u1032_41
 16684  001D66  EFB7  F00E         	goto	i2u1032_40
 16685  001D6A                     i2u1032_41:
 16686  001D6A  EFDC  F00E         	goto	i2l8399
 16687  001D6E                     i2u1032_40:
 16688  001D6E                     
 16689                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
 16690  001D6E  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16691  001D72  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16692  001D76  2ADE               	incf	postinc2,f,c
 16693  001D78  0E00               	movlw	0
 16694  001D7A  22DD               	addwfc	postdec2,f,c
 16695                           
 16696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 16697  001D7C  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16698  001D80  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16699  001D84  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16700  001D88  0E02               	movlw	2
 16701  001D8A  26DE               	addwf	postinc2,f,c
 16702  001D8C  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16703  001D90  0E00               	movlw	0
 16704  001D92  22DD               	addwfc	postdec2,f,c
 16705  001D94  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16706  001D98  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16707  001D9C  CFDE F070          	movff	postinc2,i2vfpfcnvrt@vp
 16708  001DA0  CFDD F071          	movff	postdec2,i2vfpfcnvrt@vp+1
 16709  001DA4                     
 16710                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
 16711  001DA4  C070  FFD9         	movff	i2vfpfcnvrt@vp,fsr2l
 16712  001DA8  C071  FFDA         	movff	i2vfpfcnvrt@vp+1,fsr2h
 16713  001DAC  C17F  FFDE         	movff	_nout,postinc2
 16714  001DB0  C180  FFDD         	movff	_nout+1,postdec2
 16715  001DB4  EF5D  F00E         	goto	i2l8375
 16716  001DB8                     i2l8399:
 16717                           
 16718                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
 16719  001DB8  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16720  001DBC  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16721  001DC0  CFDE F001          	movff	postinc2,i2strncmp@_l
 16722  001DC4  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16723  001DC8  0EF2               	movlw	low STR_61
 16724  001DCA  6E03               	movwf	i2strncmp@_r^0,c
 16725  001DCC  0EFF               	movlw	high STR_61
 16726  001DCE  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16727  001DD0  0E00               	movlw	0
 16728  001DD2  6E06               	movwf	(i2strncmp@n+1)^0,c
 16729  001DD4  0E02               	movlw	2
 16730  001DD6  6E05               	movwf	i2strncmp@n^0,c
 16731  001DD8  EC99  F02A         	call	i2_strncmp	;wreg free
 16732  001DDC  5001               	movf	?i2_strncmp^0,w,c
 16733  001DDE  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16734  001DE0  A4D8               	btfss	status,2,c
 16735  001DE2  EFF5  F00E         	goto	i2u1033_41
 16736  001DE6  EFF7  F00E         	goto	i2u1033_40
 16737  001DEA                     i2u1033_41:
 16738  001DEA  EF1D  F00F         	goto	i2l8409
 16739  001DEE                     i2u1033_40:
 16740  001DEE                     
 16741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
 16742  001DEE  0E02               	movlw	2
 16743  001DF0  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16744  001DF4  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16745  001DF8  26DE               	addwf	postinc2,f,c
 16746  001DFA  0E00               	movlw	0
 16747  001DFC  22DD               	addwfc	postdec2,f,c
 16748                           
 16749                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
 16750  001DFE  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16751  001E02  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16752  001E06  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16753  001E0A  0E02               	movlw	2
 16754  001E0C  26DE               	addwf	postinc2,f,c
 16755  001E0E  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16756  001E12  0E00               	movlw	0
 16757  001E14  22DD               	addwfc	postdec2,f,c
 16758  001E16  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16759  001E1A  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16760  001E1E  CFDE F070          	movff	postinc2,i2vfpfcnvrt@vp
 16761  001E22  CFDD F071          	movff	postdec2,i2vfpfcnvrt@vp+1
 16762  001E26                     
 16763                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
 16764  001E26  C070  FFD9         	movff	i2vfpfcnvrt@vp,fsr2l
 16765  001E2A  C071  FFDA         	movff	i2vfpfcnvrt@vp+1,fsr2h
 16766  001E2E  C17F  FFDE         	movff	_nout,postinc2
 16767  001E32  C180  FFDD         	movff	_nout+1,postdec2
 16768  001E36  EF5D  F00E         	goto	i2l8375
 16769  001E3A                     i2l8409:
 16770                           
 16771                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
 16772  001E3A  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16773  001E3E  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16774  001E42  CFDE FFF6          	movff	postinc2,tblptrl
 16775  001E46  CFDD FFF7          	movff	postdec2,tblptrh
 16776  001E4A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16777  001E4A  6AF8               	clrf	tblptru,c
 16778  001E4C                     	endif
 16779  001E4C                     	if	0	;tblptru may be non-zero
 16780  001E4C                     	endif
 16781  001E4C  0008               	tblrd		*
 16782  001E4E  50F5               	movf	tablat,w,c
 16783  001E50  0A70               	xorlw	112
 16784  001E52  A4D8               	btfss	status,2,c
 16785  001E54  EF2E  F00F         	goto	i2u1034_41
 16786  001E58  EF30  F00F         	goto	i2u1034_40
 16787  001E5C                     i2u1034_41:
 16788  001E5C  EF74  F00F         	goto	i2l8417
 16789  001E60                     i2u1034_40:
 16790  001E60                     
 16791                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
 16792  001E60  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16793  001E64  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16794  001E68  2ADE               	incf	postinc2,f,c
 16795  001E6A  0E00               	movlw	0
 16796  001E6C  22DD               	addwfc	postdec2,f,c
 16797                           
 16798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
 16799  001E6E  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16800  001E72  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16801  001E76  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16802  001E7A  0E02               	movlw	2
 16803  001E7C  26DE               	addwf	postinc2,f,c
 16804  001E7E  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16805  001E82  0E00               	movlw	0
 16806  001E84  22DD               	addwfc	postdec2,f,c
 16807  001E86  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16808  001E8A  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16809  001E8E  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 16810  001E92  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 16811  001E96  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 16812  001E9A  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 16813  001E9E  0100               	movlb	0	; () banked
 16814  001EA0  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 16815  001EA2  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 16816  001EA4  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 16817  001EA6  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 16818  001EA8  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 16819  001EAA  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 16820  001EAC                     
 16821                           ; BSR set to: 0
 16822                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
 16823  001EAC  C045  F01E         	movff	i2vfpfcnvrt@fp,i2xtoa@fp
 16824  001EB0  C046  F01F         	movff	i2vfpfcnvrt@fp+1,i2xtoa@fp+1
 16825  001EB4  C073  F020         	movff	i2vfpfcnvrt@llu,i2xtoa@d
 16826  001EB8  C074  F021         	movff	i2vfpfcnvrt@llu+1,i2xtoa@d+1
 16827  001EBC  C075  F022         	movff	i2vfpfcnvrt@llu+2,i2xtoa@d+2
 16828  001EC0  C076  F023         	movff	i2vfpfcnvrt@llu+3,i2xtoa@d+3
 16829  001EC4  C077  F024         	movff	i2vfpfcnvrt@llu+4,i2xtoa@d+4
 16830  001EC8  C078  F025         	movff	i2vfpfcnvrt@llu+5,i2xtoa@d+5
 16831  001ECC  C079  F026         	movff	i2vfpfcnvrt@llu+6,i2xtoa@d+6
 16832  001ED0  C07A  F027         	movff	i2vfpfcnvrt@llu+7,i2xtoa@d+7
 16833  001ED4  0E78               	movlw	120
 16834  001ED6  6E28               	movwf	i2xtoa@x^0,c
 16835  001ED8  EC73  F019         	call	i2_xtoa	;wreg free
 16836  001EDC  C01E  F045         	movff	?i2_xtoa,?i2_vfpfcnvrt
 16837  001EE0  C01F  F046         	movff	?i2_xtoa+1,?i2_vfpfcnvrt+1
 16838  001EE4  EFEB  F012         	goto	i2l875
 16839  001EE8                     i2l8417:
 16840                           
 16841                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 16842  001EE8  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16843  001EEC  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16844  001EF0  CFDE FFF6          	movff	postinc2,tblptrl
 16845  001EF4  CFDD FFF7          	movff	postdec2,tblptrh
 16846  001EF8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16847  001EF8  6AF8               	clrf	tblptru,c
 16848  001EFA                     	endif
 16849  001EFA                     	if	0	;tblptru may be non-zero
 16850  001EFA                     	endif
 16851  001EFA  0008               	tblrd		*
 16852  001EFC  50F5               	movf	tablat,w,c
 16853  001EFE  0A73               	xorlw	115
 16854  001F00  A4D8               	btfss	status,2,c
 16855  001F02  EF85  F00F         	goto	i2u1035_41
 16856  001F06  EF87  F00F         	goto	i2u1035_40
 16857  001F0A                     i2u1035_41:
 16858  001F0A  EFB2  F00F         	goto	i2l8425
 16859  001F0E                     i2u1035_40:
 16860  001F0E                     
 16861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 16862  001F0E  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16863  001F12  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16864  001F16  2ADE               	incf	postinc2,f,c
 16865  001F18  0E00               	movlw	0
 16866  001F1A  22DD               	addwfc	postdec2,f,c
 16867                           
 16868                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 16869  001F1C  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16870  001F20  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16871  001F24  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16872  001F28  0E02               	movlw	2
 16873  001F2A  26DE               	addwf	postinc2,f,c
 16874  001F2C  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16875  001F30  0E00               	movlw	0
 16876  001F32  22DD               	addwfc	postdec2,f,c
 16877  001F34  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16878  001F38  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16879  001F3C  CFDE F060          	movff	postinc2,i2vfpfcnvrt@cp
 16880  001F40  CFDD F061          	movff	postdec2,i2vfpfcnvrt@cp+1
 16881  001F44                     
 16882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 16883  001F44  C045  F00C         	movff	i2vfpfcnvrt@fp,i2stoa@fp
 16884  001F48  C046  F00D         	movff	i2vfpfcnvrt@fp+1,i2stoa@fp+1
 16885  001F4C  C060  F00E         	movff	i2vfpfcnvrt@cp,i2stoa@s
 16886  001F50  C061  F00F         	movff	i2vfpfcnvrt@cp+1,i2stoa@s+1
 16887  001F54  EC9E  F024         	call	i2_stoa	;wreg free
 16888  001F58  C00C  F045         	movff	?i2_stoa,?i2_vfpfcnvrt
 16889  001F5C  C00D  F046         	movff	?i2_stoa+1,?i2_vfpfcnvrt+1
 16890  001F60  EFEB  F012         	goto	i2l875
 16891  001F64                     i2l8425:
 16892                           
 16893                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
 16894  001F64  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16895  001F68  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16896  001F6C  CFDE F001          	movff	postinc2,i2strncmp@_l
 16897  001F70  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16898  001F74  0EE1               	movlw	low STR_66
 16899  001F76  6E03               	movwf	i2strncmp@_r^0,c
 16900  001F78  0EFF               	movlw	high STR_66
 16901  001F7A  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16902  001F7C  0E00               	movlw	0
 16903  001F7E  6E06               	movwf	(i2strncmp@n+1)^0,c
 16904  001F80  0E03               	movlw	3
 16905  001F82  6E05               	movwf	i2strncmp@n^0,c
 16906  001F84  EC99  F02A         	call	i2_strncmp	;wreg free
 16907  001F88  5001               	movf	?i2_strncmp^0,w,c
 16908  001F8A  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16909  001F8C  A4D8               	btfss	status,2,c
 16910  001F8E  EFCB  F00F         	goto	i2u1036_41
 16911  001F92  EFCD  F00F         	goto	i2u1036_40
 16912  001F96                     i2u1036_41:
 16913  001F96  EF0D  F010         	goto	i2l8433
 16914  001F9A                     i2u1036_40:
 16915  001F9A                     
 16916                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
 16917  001F9A  0E03               	movlw	3
 16918  001F9C  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16919  001FA0  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16920  001FA4  26DE               	addwf	postinc2,f,c
 16921  001FA6  0E00               	movlw	0
 16922  001FA8  22DD               	addwfc	postdec2,f,c
 16923                           
 16924                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 16925  001FAA  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 16926  001FAE  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 16927  001FB2  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 16928  001FB6  0E02               	movlw	2
 16929  001FB8  26DE               	addwf	postinc2,f,c
 16930  001FBA  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 16931  001FBE  0E00               	movlw	0
 16932  001FC0  22DD               	addwfc	postdec2,f,c
 16933  001FC2  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 16934  001FC6  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 16935  001FCA  50DF               	movf	indf2,w,c
 16936  001FCC  6E4D               	movwf	(??i2_vfpfcnvrt+2)^0,c
 16937  001FCE  504D               	movf	(??i2_vfpfcnvrt+2)^0,w,c
 16938  001FD0  0100               	movlb	0	; () banked
 16939  001FD2  6F73               	movwf	i2vfpfcnvrt@llu& (0+255),b
 16940  001FD4  6B74               	clrf	(i2vfpfcnvrt@llu+1)& (0+255),b
 16941  001FD6  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 16942  001FD8  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 16943  001FDA  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 16944  001FDC  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 16945  001FDE  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 16946  001FE0  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 16947  001FE2                     i2l8429:
 16948                           
 16949                           ; BSR set to: 0
 16950                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
 16951  001FE2  C045  F01E         	movff	i2vfpfcnvrt@fp,i2utoa@fp
 16952  001FE6  C046  F01F         	movff	i2vfpfcnvrt@fp+1,i2utoa@fp+1
 16953  001FEA  C073  F020         	movff	i2vfpfcnvrt@llu,i2utoa@d
 16954  001FEE  C074  F021         	movff	i2vfpfcnvrt@llu+1,i2utoa@d+1
 16955  001FF2  C075  F022         	movff	i2vfpfcnvrt@llu+2,i2utoa@d+2
 16956  001FF6  C076  F023         	movff	i2vfpfcnvrt@llu+3,i2utoa@d+3
 16957  001FFA  C077  F024         	movff	i2vfpfcnvrt@llu+4,i2utoa@d+4
 16958  001FFE  C078  F025         	movff	i2vfpfcnvrt@llu+5,i2utoa@d+5
 16959  002002  C079  F026         	movff	i2vfpfcnvrt@llu+6,i2utoa@d+6
 16960  002006  C07A  F027         	movff	i2vfpfcnvrt@llu+7,i2utoa@d+7
 16961  00200A  EC55  F01E         	call	i2_utoa	;wreg free
 16962  00200E  C01E  F045         	movff	?i2_utoa,?i2_vfpfcnvrt
 16963  002012  C01F  F046         	movff	?i2_utoa+1,?i2_vfpfcnvrt+1
 16964  002016  EFEB  F012         	goto	i2l875
 16965  00201A                     i2l8433:
 16966                           
 16967                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
 16968  00201A  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16969  00201E  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16970  002022  CFDE F001          	movff	postinc2,i2strncmp@_l
 16971  002026  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 16972  00202A  0EE2               	movlw	low (STR_66+1)
 16973  00202C  6E03               	movwf	i2strncmp@_r^0,c
 16974  00202E  0EFF               	movlw	high (STR_66+1)
 16975  002030  6E04               	movwf	(i2strncmp@_r+1)^0,c
 16976  002032  0E00               	movlw	0
 16977  002034  6E06               	movwf	(i2strncmp@n+1)^0,c
 16978  002036  0E02               	movlw	2
 16979  002038  6E05               	movwf	i2strncmp@n^0,c
 16980  00203A  EC99  F02A         	call	i2_strncmp	;wreg free
 16981  00203E  5001               	movf	?i2_strncmp^0,w,c
 16982  002040  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 16983  002042  A4D8               	btfss	status,2,c
 16984  002044  EF26  F010         	goto	i2u1037_41
 16985  002048  EF28  F010         	goto	i2u1037_40
 16986  00204C                     i2u1037_41:
 16987  00204C  EF51  F010         	goto	i2l8441
 16988  002050                     i2u1037_40:
 16989  002050                     
 16990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
 16991  002050  0E02               	movlw	2
 16992  002052  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 16993  002056  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 16994  00205A  26DE               	addwf	postinc2,f,c
 16995  00205C  0E00               	movlw	0
 16996  00205E  22DD               	addwfc	postdec2,f,c
 16997                           
 16998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 16999  002060  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 17000  002064  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 17001  002068  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 17002  00206C  0E02               	movlw	2
 17003  00206E  26DE               	addwf	postinc2,f,c
 17004  002070  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 17005  002074  0E00               	movlw	0
 17006  002076  22DD               	addwfc	postdec2,f,c
 17007  002078  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 17008  00207C  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 17009  002080  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 17010  002084  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 17011  002088  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 17012  00208C  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 17013  002090  0100               	movlb	0	; () banked
 17014  002092  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 17015  002094  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 17016  002096  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 17017  002098  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 17018  00209A  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 17019  00209C  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 17020  00209E  EFF1  F00F         	goto	i2l8429
 17021  0020A2                     i2l8441:
 17022                           
 17023                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 17024  0020A2  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17025  0020A6  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17026  0020AA  CFDE FFF6          	movff	postinc2,tblptrl
 17027  0020AE  CFDD FFF7          	movff	postdec2,tblptrh
 17028  0020B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17029  0020B2  6AF8               	clrf	tblptru,c
 17030  0020B4                     	endif
 17031  0020B4                     	if	0	;tblptru may be non-zero
 17032  0020B4                     	endif
 17033  0020B4  0008               	tblrd		*
 17034  0020B6  50F5               	movf	tablat,w,c
 17035  0020B8  0A75               	xorlw	117
 17036  0020BA  A4D8               	btfss	status,2,c
 17037  0020BC  EF62  F010         	goto	i2u1038_41
 17038  0020C0  EF64  F010         	goto	i2u1038_40
 17039  0020C4                     i2u1038_41:
 17040  0020C4  EF8C  F010         	goto	i2l8449
 17041  0020C8                     i2u1038_40:
 17042  0020C8                     
 17043                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 17044  0020C8  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17045  0020CC  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17046  0020D0  2ADE               	incf	postinc2,f,c
 17047  0020D2  0E00               	movlw	0
 17048  0020D4  22DD               	addwfc	postdec2,f,c
 17049                           
 17050                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 17051  0020D6  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 17052  0020DA  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 17053  0020DE  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 17054  0020E2  0E02               	movlw	2
 17055  0020E4  26DE               	addwf	postinc2,f,c
 17056  0020E6  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 17057  0020EA  0E00               	movlw	0
 17058  0020EC  22DD               	addwfc	postdec2,f,c
 17059  0020EE  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 17060  0020F2  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 17061  0020F6  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 17062  0020FA  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 17063  0020FE  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 17064  002102  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 17065  002106  0100               	movlb	0	; () banked
 17066  002108  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 17067  00210A  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 17068  00210C  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 17069  00210E  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 17070  002110  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 17071  002112  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 17072  002114  EFF1  F00F         	goto	i2l8429
 17073  002118                     i2l8449:
 17074                           
 17075                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
 17076  002118  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17077  00211C  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17078  002120  CFDE F001          	movff	postinc2,i2strncmp@_l
 17079  002124  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 17080  002128  0EF8               	movlw	low STR_76
 17081  00212A  6E03               	movwf	i2strncmp@_r^0,c
 17082  00212C  0EFF               	movlw	high STR_76
 17083  00212E  6E04               	movwf	(i2strncmp@_r+1)^0,c
 17084  002130  0E00               	movlw	0
 17085  002132  6E06               	movwf	(i2strncmp@n+1)^0,c
 17086  002134  0E02               	movlw	2
 17087  002136  6E05               	movwf	i2strncmp@n^0,c
 17088  002138  EC99  F02A         	call	i2_strncmp	;wreg free
 17089  00213C  5001               	movf	?i2_strncmp^0,w,c
 17090  00213E  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 17091  002140  A4D8               	btfss	status,2,c
 17092  002142  EFA5  F010         	goto	i2u1039_41
 17093  002146  EFA7  F010         	goto	i2u1039_40
 17094  00214A                     i2u1039_41:
 17095  00214A  EFD0  F010         	goto	i2l8457
 17096  00214E                     i2u1039_40:
 17097  00214E                     
 17098                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
 17099  00214E  0E02               	movlw	2
 17100  002150  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17101  002154  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17102  002158  26DE               	addwf	postinc2,f,c
 17103  00215A  0E00               	movlw	0
 17104  00215C  22DD               	addwfc	postdec2,f,c
 17105                           
 17106                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 17107  00215E  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 17108  002162  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 17109  002166  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 17110  00216A  0E02               	movlw	2
 17111  00216C  26DE               	addwf	postinc2,f,c
 17112  00216E  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 17113  002172  0E00               	movlw	0
 17114  002174  22DD               	addwfc	postdec2,f,c
 17115  002176  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 17116  00217A  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 17117  00217E  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 17118  002182  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 17119  002186  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 17120  00218A  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 17121  00218E  0100               	movlb	0	; () banked
 17122  002190  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 17123  002192  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 17124  002194  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 17125  002196  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 17126  002198  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 17127  00219A  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 17128  00219C  EFF1  F00F         	goto	i2l8429
 17129  0021A0                     i2l8457:
 17130                           
 17131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
 17132  0021A0  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17133  0021A4  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17134  0021A8  CFDE F001          	movff	postinc2,i2strncmp@_l
 17135  0021AC  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 17136  0021B0  0EE5               	movlw	low STR_81
 17137  0021B2  6E03               	movwf	i2strncmp@_r^0,c
 17138  0021B4  0EFF               	movlw	high STR_81
 17139  0021B6  6E04               	movwf	(i2strncmp@_r+1)^0,c
 17140  0021B8  0E00               	movlw	0
 17141  0021BA  6E06               	movwf	(i2strncmp@n+1)^0,c
 17142  0021BC  0E03               	movlw	3
 17143  0021BE  6E05               	movwf	i2strncmp@n^0,c
 17144  0021C0  EC99  F02A         	call	i2_strncmp	;wreg free
 17145  0021C4  5001               	movf	?i2_strncmp^0,w,c
 17146  0021C6  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 17147  0021C8  B4D8               	btfsc	status,2,c
 17148  0021CA  EFE9  F010         	goto	i2u1040_41
 17149  0021CE  EFEB  F010         	goto	i2u1040_40
 17150  0021D2                     i2u1040_41:
 17151  0021D2  EF06  F011         	goto	i2l8461
 17152  0021D6                     i2u1040_40:
 17153  0021D6  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17154  0021DA  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17155  0021DE  CFDE F001          	movff	postinc2,i2strncmp@_l
 17156  0021E2  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 17157  0021E6  0ECD               	movlw	low STR_85
 17158  0021E8  6E03               	movwf	i2strncmp@_r^0,c
 17159  0021EA  0EFF               	movlw	high STR_85
 17160  0021EC  6E04               	movwf	(i2strncmp@_r+1)^0,c
 17161  0021EE  0E00               	movlw	0
 17162  0021F0  6E06               	movwf	(i2strncmp@n+1)^0,c
 17163  0021F2  0E03               	movlw	3
 17164  0021F4  6E05               	movwf	i2strncmp@n^0,c
 17165  0021F6  EC99  F02A         	call	i2_strncmp	;wreg free
 17166  0021FA  5001               	movf	?i2_strncmp^0,w,c
 17167  0021FC  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 17168  0021FE  A4D8               	btfss	status,2,c
 17169  002200  EF04  F011         	goto	i2u1041_41
 17170  002204  EF06  F011         	goto	i2u1041_40
 17171  002208                     i2u1041_41:
 17172  002208  EF5C  F011         	goto	i2l8471
 17173  00220C                     i2u1041_40:
 17174  00220C                     i2l8461:
 17175                           
 17176                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
 17177  00220C  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17178  002210  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17179  002214  CFDE F04B          	movff	postinc2,??i2_vfpfcnvrt
 17180  002218  CFDD F04C          	movff	postdec2,??i2_vfpfcnvrt+1
 17181  00221C  0E02               	movlw	2
 17182  00221E  264B               	addwf	??i2_vfpfcnvrt^0,f,c
 17183  002220  0E00               	movlw	0
 17184  002222  224C               	addwfc	(??i2_vfpfcnvrt+1)^0,f,c
 17185  002224  C04B  FFF6         	movff	??i2_vfpfcnvrt,tblptrl
 17186  002228  C04C  FFF7         	movff	??i2_vfpfcnvrt+1,tblptrh
 17187  00222C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17188  00222C  6AF8               	clrf	tblptru,c
 17189  00222E                     	endif
 17190  00222E                     	if	0	;tblptru may be non-zero
 17191  00222E                     	endif
 17192  00222E  0008               	tblrd		*
 17193  002230  CFF5 F072          	movff	tablat,i2vfpfcnvrt@c
 17194  002234                     
 17195                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
 17196  002234  0E03               	movlw	3
 17197  002236  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17198  00223A  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17199  00223E  26DE               	addwf	postinc2,f,c
 17200  002240  0E00               	movlw	0
 17201  002242  22DD               	addwfc	postdec2,f,c
 17202  002244                     
 17203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 17204  002244  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 17205  002248  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 17206  00224C  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 17207  002250  0E02               	movlw	2
 17208  002252  26DE               	addwf	postinc2,f,c
 17209  002254  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 17210  002258  0E00               	movlw	0
 17211  00225A  22DD               	addwfc	postdec2,f,c
 17212  00225C  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 17213  002260  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 17214  002264  50DF               	movf	indf2,w,c
 17215  002266  6E4D               	movwf	(??i2_vfpfcnvrt+2)^0,c
 17216  002268  504D               	movf	(??i2_vfpfcnvrt+2)^0,w,c
 17217  00226A  0100               	movlb	0	; () banked
 17218  00226C  6F73               	movwf	i2vfpfcnvrt@llu& (0+255),b
 17219  00226E  6B74               	clrf	(i2vfpfcnvrt@llu+1)& (0+255),b
 17220  002270  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 17221  002272  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 17222  002274  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 17223  002276  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 17224  002278  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 17225  00227A  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 17226  00227C                     i2l8467:
 17227                           
 17228                           ; BSR set to: 0
 17229                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
 17230  00227C  C045  F01E         	movff	i2vfpfcnvrt@fp,i2xtoa@fp
 17231  002280  C046  F01F         	movff	i2vfpfcnvrt@fp+1,i2xtoa@fp+1
 17232  002284  C073  F020         	movff	i2vfpfcnvrt@llu,i2xtoa@d
 17233  002288  C074  F021         	movff	i2vfpfcnvrt@llu+1,i2xtoa@d+1
 17234  00228C  C075  F022         	movff	i2vfpfcnvrt@llu+2,i2xtoa@d+2
 17235  002290  C076  F023         	movff	i2vfpfcnvrt@llu+3,i2xtoa@d+3
 17236  002294  C077  F024         	movff	i2vfpfcnvrt@llu+4,i2xtoa@d+4
 17237  002298  C078  F025         	movff	i2vfpfcnvrt@llu+5,i2xtoa@d+5
 17238  00229C  C079  F026         	movff	i2vfpfcnvrt@llu+6,i2xtoa@d+6
 17239  0022A0  C07A  F027         	movff	i2vfpfcnvrt@llu+7,i2xtoa@d+7
 17240  0022A4  C072  F028         	movff	i2vfpfcnvrt@c,i2xtoa@x
 17241  0022A8  EC73  F019         	call	i2_xtoa	;wreg free
 17242  0022AC  C01E  F045         	movff	?i2_xtoa,?i2_vfpfcnvrt
 17243  0022B0  C01F  F046         	movff	?i2_xtoa+1,?i2_vfpfcnvrt+1
 17244  0022B4  EFEB  F012         	goto	i2l875
 17245  0022B8                     i2l8471:
 17246                           
 17247                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
 17248  0022B8  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17249  0022BC  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17250  0022C0  CFDE F001          	movff	postinc2,i2strncmp@_l
 17251  0022C4  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 17252  0022C8  0EE6               	movlw	low (STR_81+1)
 17253  0022CA  6E03               	movwf	i2strncmp@_r^0,c
 17254  0022CC  0EFF               	movlw	high (STR_81+1)
 17255  0022CE  6E04               	movwf	(i2strncmp@_r+1)^0,c
 17256  0022D0  0E00               	movlw	0
 17257  0022D2  6E06               	movwf	(i2strncmp@n+1)^0,c
 17258  0022D4  0E02               	movlw	2
 17259  0022D6  6E05               	movwf	i2strncmp@n^0,c
 17260  0022D8  EC99  F02A         	call	i2_strncmp	;wreg free
 17261  0022DC  5001               	movf	?i2_strncmp^0,w,c
 17262  0022DE  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 17263  0022E0  B4D8               	btfsc	status,2,c
 17264  0022E2  EF75  F011         	goto	i2u1042_41
 17265  0022E6  EF77  F011         	goto	i2u1042_40
 17266  0022EA                     i2u1042_41:
 17267  0022EA  EF92  F011         	goto	i2l8475
 17268  0022EE                     i2u1042_40:
 17269  0022EE  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17270  0022F2  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17271  0022F6  CFDE F001          	movff	postinc2,i2strncmp@_l
 17272  0022FA  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 17273  0022FE  0ECE               	movlw	low (STR_85+1)
 17274  002300  6E03               	movwf	i2strncmp@_r^0,c
 17275  002302  0EFF               	movlw	high (STR_85+1)
 17276  002304  6E04               	movwf	(i2strncmp@_r+1)^0,c
 17277  002306  0E00               	movlw	0
 17278  002308  6E06               	movwf	(i2strncmp@n+1)^0,c
 17279  00230A  0E02               	movlw	2
 17280  00230C  6E05               	movwf	i2strncmp@n^0,c
 17281  00230E  EC99  F02A         	call	i2_strncmp	;wreg free
 17282  002312  5001               	movf	?i2_strncmp^0,w,c
 17283  002314  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 17284  002316  A4D8               	btfss	status,2,c
 17285  002318  EF90  F011         	goto	i2u1043_41
 17286  00231C  EF92  F011         	goto	i2u1043_40
 17287  002320                     i2u1043_41:
 17288  002320  EFCF  F011         	goto	i2l8485
 17289  002324                     i2u1043_40:
 17290  002324                     i2l8475:
 17291                           
 17292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
 17293  002324  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17294  002328  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17295  00232C  CFDE F04B          	movff	postinc2,??i2_vfpfcnvrt
 17296  002330  CFDD F04C          	movff	postdec2,??i2_vfpfcnvrt+1
 17297  002334  0E01               	movlw	1
 17298  002336  264B               	addwf	??i2_vfpfcnvrt^0,f,c
 17299  002338  0E00               	movlw	0
 17300  00233A  224C               	addwfc	(??i2_vfpfcnvrt+1)^0,f,c
 17301  00233C  C04B  FFF6         	movff	??i2_vfpfcnvrt,tblptrl
 17302  002340  C04C  FFF7         	movff	??i2_vfpfcnvrt+1,tblptrh
 17303  002344                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17304  002344  6AF8               	clrf	tblptru,c
 17305  002346                     	endif
 17306  002346                     	if	0	;tblptru may be non-zero
 17307  002346                     	endif
 17308  002346  0008               	tblrd		*
 17309  002348  CFF5 F072          	movff	tablat,i2vfpfcnvrt@c
 17310  00234C                     
 17311                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
 17312  00234C  0E02               	movlw	2
 17313  00234E  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17314  002352  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17315  002356  26DE               	addwf	postinc2,f,c
 17316  002358  0E00               	movlw	0
 17317  00235A  22DD               	addwfc	postdec2,f,c
 17318  00235C                     
 17319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 17320  00235C  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 17321  002360  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 17322  002364  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 17323  002368  0E02               	movlw	2
 17324  00236A  26DE               	addwf	postinc2,f,c
 17325  00236C  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 17326  002370  0E00               	movlw	0
 17327  002372  22DD               	addwfc	postdec2,f,c
 17328  002374  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 17329  002378  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 17330  00237C  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 17331  002380  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 17332  002384  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 17333  002388  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 17334  00238C  0100               	movlb	0	; () banked
 17335  00238E  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 17336  002390  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 17337  002392  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 17338  002394  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 17339  002396  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 17340  002398  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 17341  00239A  EF3E  F011         	goto	i2l8467
 17342  00239E                     i2l8485:
 17343                           
 17344                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 17345  00239E  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17346  0023A2  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17347  0023A6  CFDE FFF6          	movff	postinc2,tblptrl
 17348  0023AA  CFDD FFF7          	movff	postdec2,tblptrh
 17349  0023AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17350  0023AE  6AF8               	clrf	tblptru,c
 17351  0023B0                     	endif
 17352  0023B0                     	if	0	;tblptru may be non-zero
 17353  0023B0                     	endif
 17354  0023B0  0008               	tblrd		*
 17355  0023B2  50F5               	movf	tablat,w,c
 17356  0023B4  0A78               	xorlw	120
 17357  0023B6  B4D8               	btfsc	status,2,c
 17358  0023B8  EFE0  F011         	goto	i2u1044_41
 17359  0023BC  EFE2  F011         	goto	i2u1044_40
 17360  0023C0                     i2u1044_41:
 17361  0023C0  EFF5  F011         	goto	i2l8489
 17362  0023C4                     i2u1044_40:
 17363  0023C4  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17364  0023C8  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17365  0023CC  CFDE FFF6          	movff	postinc2,tblptrl
 17366  0023D0  CFDD FFF7          	movff	postdec2,tblptrh
 17367  0023D4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17368  0023D4  6AF8               	clrf	tblptru,c
 17369  0023D6                     	endif
 17370  0023D6                     	if	0	;tblptru may be non-zero
 17371  0023D6                     	endif
 17372  0023D6  0008               	tblrd		*
 17373  0023D8  50F5               	movf	tablat,w,c
 17374  0023DA  0A58               	xorlw	88
 17375  0023DC  A4D8               	btfss	status,2,c
 17376  0023DE  EFF3  F011         	goto	i2u1045_41
 17377  0023E2  EFF5  F011         	goto	i2u1045_40
 17378  0023E6                     i2u1045_41:
 17379  0023E6  EF29  F012         	goto	i2l8499
 17380  0023EA                     i2u1045_40:
 17381  0023EA                     i2l8489:
 17382                           
 17383                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 17384  0023EA  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17385  0023EE  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17386  0023F2  CFDE FFF6          	movff	postinc2,tblptrl
 17387  0023F6  CFDD FFF7          	movff	postdec2,tblptrh
 17388  0023FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17389  0023FA  6AF8               	clrf	tblptru,c
 17390  0023FC                     	endif
 17391  0023FC                     	if	0	;tblptru may be non-zero
 17392  0023FC                     	endif
 17393  0023FC  0008               	tblrd		*
 17394  0023FE  CFF5 F072          	movff	tablat,i2vfpfcnvrt@c
 17395  002402                     
 17396                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 17397  002402  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17398  002406  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17399  00240A  2ADE               	incf	postinc2,f,c
 17400  00240C  0E00               	movlw	0
 17401  00240E  22DD               	addwfc	postdec2,f,c
 17402  002410                     
 17403                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 17404  002410  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 17405  002414  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 17406  002418  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 17407  00241C  0E02               	movlw	2
 17408  00241E  26DE               	addwf	postinc2,f,c
 17409  002420  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 17410  002424  0E00               	movlw	0
 17411  002426  22DD               	addwfc	postdec2,f,c
 17412  002428  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 17413  00242C  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 17414  002430  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 17415  002434  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 17416  002438  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 17417  00243C  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 17418  002440  0100               	movlb	0	; () banked
 17419  002442  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 17420  002444  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 17421  002446  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 17422  002448  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 17423  00244A  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 17424  00244C  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 17425  00244E  EF3E  F011         	goto	i2l8467
 17426  002452                     i2l8499:
 17427                           
 17428                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
 17429  002452  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17430  002456  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17431  00245A  CFDE F001          	movff	postinc2,i2strncmp@_l
 17432  00245E  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 17433  002462  0EFB               	movlw	low STR_99
 17434  002464  6E03               	movwf	i2strncmp@_r^0,c
 17435  002466  0EFF               	movlw	high STR_99
 17436  002468  6E04               	movwf	(i2strncmp@_r+1)^0,c
 17437  00246A  0E00               	movlw	0
 17438  00246C  6E06               	movwf	(i2strncmp@n+1)^0,c
 17439  00246E  0E02               	movlw	2
 17440  002470  6E05               	movwf	i2strncmp@n^0,c
 17441  002472  EC99  F02A         	call	i2_strncmp	;wreg free
 17442  002476  5001               	movf	?i2_strncmp^0,w,c
 17443  002478  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 17444  00247A  B4D8               	btfsc	status,2,c
 17445  00247C  EF42  F012         	goto	i2u1046_41
 17446  002480  EF44  F012         	goto	i2u1046_40
 17447  002484                     i2u1046_41:
 17448  002484  EF5F  F012         	goto	i2l8503
 17449  002488                     i2u1046_40:
 17450  002488  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17451  00248C  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17452  002490  CFDE F001          	movff	postinc2,i2strncmp@_l
 17453  002494  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 17454  002498  0EE9               	movlw	low STR_103
 17455  00249A  6E03               	movwf	i2strncmp@_r^0,c
 17456  00249C  0EFF               	movlw	high STR_103
 17457  00249E  6E04               	movwf	(i2strncmp@_r+1)^0,c
 17458  0024A0  0E00               	movlw	0
 17459  0024A2  6E06               	movwf	(i2strncmp@n+1)^0,c
 17460  0024A4  0E02               	movlw	2
 17461  0024A6  6E05               	movwf	i2strncmp@n^0,c
 17462  0024A8  EC99  F02A         	call	i2_strncmp	;wreg free
 17463  0024AC  5001               	movf	?i2_strncmp^0,w,c
 17464  0024AE  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 17465  0024B0  A4D8               	btfss	status,2,c
 17466  0024B2  EF5D  F012         	goto	i2u1047_41
 17467  0024B6  EF5F  F012         	goto	i2u1047_40
 17468  0024BA                     i2u1047_41:
 17469  0024BA  EF9C  F012         	goto	i2l8513
 17470  0024BE                     i2u1047_40:
 17471  0024BE                     i2l8503:
 17472                           
 17473                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
 17474  0024BE  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17475  0024C2  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17476  0024C6  CFDE F04B          	movff	postinc2,??i2_vfpfcnvrt
 17477  0024CA  CFDD F04C          	movff	postdec2,??i2_vfpfcnvrt+1
 17478  0024CE  0E01               	movlw	1
 17479  0024D0  264B               	addwf	??i2_vfpfcnvrt^0,f,c
 17480  0024D2  0E00               	movlw	0
 17481  0024D4  224C               	addwfc	(??i2_vfpfcnvrt+1)^0,f,c
 17482  0024D6  C04B  FFF6         	movff	??i2_vfpfcnvrt,tblptrl
 17483  0024DA  C04C  FFF7         	movff	??i2_vfpfcnvrt+1,tblptrh
 17484  0024DE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17485  0024DE  6AF8               	clrf	tblptru,c
 17486  0024E0                     	endif
 17487  0024E0                     	if	0	;tblptru may be non-zero
 17488  0024E0                     	endif
 17489  0024E0  0008               	tblrd		*
 17490  0024E2  CFF5 F072          	movff	tablat,i2vfpfcnvrt@c
 17491  0024E6                     
 17492                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
 17493  0024E6  0E02               	movlw	2
 17494  0024E8  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17495  0024EC  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17496  0024F0  26DE               	addwf	postinc2,f,c
 17497  0024F2  0E00               	movlw	0
 17498  0024F4  22DD               	addwfc	postdec2,f,c
 17499  0024F6                     
 17500                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 17501  0024F6  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 17502  0024FA  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 17503  0024FE  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 17504  002502  0E02               	movlw	2
 17505  002504  26DE               	addwf	postinc2,f,c
 17506  002506  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 17507  00250A  0E00               	movlw	0
 17508  00250C  22DD               	addwfc	postdec2,f,c
 17509  00250E  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 17510  002512  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 17511  002516  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 17512  00251A  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 17513  00251E  C04D  F073         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 17514  002522  C04E  F074         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 17515  002526  0100               	movlb	0	; () banked
 17516  002528  6B75               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 17517  00252A  6B76               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 17518  00252C  6B77               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 17519  00252E  6B78               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 17520  002530  6B79               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 17521  002532  6B7A               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 17522  002534  EF3E  F011         	goto	i2l8467
 17523  002538                     i2l8513:
 17524                           
 17525                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 17526  002538  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17527  00253C  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17528  002540  CFDE FFF6          	movff	postinc2,tblptrl
 17529  002544  CFDD FFF7          	movff	postdec2,tblptrh
 17530  002548                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17531  002548  6AF8               	clrf	tblptru,c
 17532  00254A                     	endif
 17533  00254A                     	if	0	;tblptru may be non-zero
 17534  00254A                     	endif
 17535  00254A  0008               	tblrd		*
 17536  00254C  50F5               	movf	tablat,w,c
 17537  00254E  0A25               	xorlw	37
 17538  002550  A4D8               	btfss	status,2,c
 17539  002552  EFAD  F012         	goto	i2u1048_41
 17540  002556  EFAF  F012         	goto	i2u1048_40
 17541  00255A                     i2u1048_41:
 17542  00255A  EFC6  F012         	goto	i2l8523
 17543  00255E                     i2u1048_40:
 17544  00255E                     
 17545                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 17546  00255E  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17547  002562  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17548  002566  2ADE               	incf	postinc2,f,c
 17549  002568  0E00               	movlw	0
 17550  00256A  22DD               	addwfc	postdec2,f,c
 17551  00256C                     
 17552                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 17553  00256C  0E00               	movlw	0
 17554  00256E  6E04               	movwf	(i2fputc@c+1)^0,c
 17555  002570  0E25               	movlw	37
 17556  002572  6E03               	movwf	i2fputc@c^0,c
 17557  002574  C045  F005         	movff	i2vfpfcnvrt@fp,i2fputc@fp
 17558  002578  C046  F006         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
 17559  00257C  ECAA  F02C         	call	i2_fputc	;wreg free
 17560  002580                     i2l8519:
 17561                           
 17562                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 17563  002580  0E00               	movlw	0
 17564  002582  6E46               	movwf	(?i2_vfpfcnvrt+1)^0,c
 17565  002584  0E01               	movlw	1
 17566  002586  6E45               	movwf	?i2_vfpfcnvrt^0,c
 17567  002588  EFEB  F012         	goto	i2l875
 17568  00258C                     i2l8523:
 17569                           
 17570                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 17571  00258C  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17572  002590  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17573  002594  2ADE               	incf	postinc2,f,c
 17574  002596  0E00               	movlw	0
 17575  002598  22DD               	addwfc	postdec2,f,c
 17576  00259A  EF5D  F00E         	goto	i2l8375
 17577  00259E                     i2l8529:
 17578                           
 17579                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 17580  00259E  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17581  0025A2  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17582  0025A6  CFDE FFF6          	movff	postinc2,tblptrl
 17583  0025AA  CFDD FFF7          	movff	postdec2,tblptrh
 17584  0025AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17585  0025AE  6AF8               	clrf	tblptru,c
 17586  0025B0                     	endif
 17587  0025B0                     	if	0	;tblptru may be non-zero
 17588  0025B0                     	endif
 17589  0025B0  0008               	tblrd		*
 17590  0025B2  50F5               	movf	tablat,w,c
 17591  0025B4  6E03               	movwf	i2fputc@c^0,c
 17592  0025B6  6A04               	clrf	(i2fputc@c+1)^0,c
 17593  0025B8  C045  F005         	movff	i2vfpfcnvrt@fp,i2fputc@fp
 17594  0025BC  C046  F006         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
 17595  0025C0  ECAA  F02C         	call	i2_fputc	;wreg free
 17596  0025C4                     
 17597                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 17598  0025C4  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 17599  0025C8  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 17600  0025CC  2ADE               	incf	postinc2,f,c
 17601  0025CE  0E00               	movlw	0
 17602  0025D0  22DD               	addwfc	postdec2,f,c
 17603  0025D2  EFC0  F012         	goto	i2l8519
 17604  0025D6                     i2l875:
 17605  0025D6  0012               	return		;funcret
 17606  0025D8                     __end_ofi2_vfpfcnvrt:
 17607                           	opt callstack 0
 17608                           
 17609 ;; *************** function i2_xtoa *****************
 17610 ;; Defined at:
 17611 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 17612 ;; Parameters:    Size  Location     Type
 17613 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 17614 ;;		 -> vsnprintf@f(6), NULL(0), 
 17615 ;;  d               8   31[COMRAM] unsigned long long 
 17616 ;;  x               1   39[COMRAM] unsigned char 
 17617 ;; Auto vars:     Size  Location     Type
 17618 ;;  xtoa            8   56[COMRAM] unsigned long long 
 17619 ;;  xtoa            2   66[COMRAM] int 
 17620 ;;  xtoa            2   64[COMRAM] int 
 17621 ;;  xtoa            2   54[COMRAM] int 
 17622 ;;  xtoa            2   52[COMRAM] int 
 17623 ;; Return value:  Size  Location     Type
 17624 ;;                  2   29[COMRAM] int 
 17625 ;; Registers used:
 17626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17627 ;; Tracked objects:
 17628 ;;		On entry : 0/0
 17629 ;;		On exit  : 0/0
 17630 ;;		Unchanged: 0/0
 17631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17632 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17633 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17634 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17635 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17636 ;;Total ram usage:       39 bytes
 17637 ;; Hardware stack levels used:    1
 17638 ;; Hardware stack levels required when called:    5
 17639 ;; This function calls:
 17640 ;;		i2_isalpha
 17641 ;;		i2_isupper
 17642 ;;		i2_pad
 17643 ;;		i2_toupper
 17644 ;; This function is called by:
 17645 ;;		i2_vfpfcnvrt
 17646 ;; This function uses a non-reentrant model
 17647 ;;
 17648                           
 17649                           	psect	text74
 17650  0032E6                     __ptext74:
 17651                           	opt callstack 0
 17652  0032E6                     i2_xtoa:
 17653                           	opt callstack 8
 17654  0032E6                     
 17655                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 17656  0032E6  0100               	movlb	0	; () banked
 17657  0032E8  BFB8               	btfsc	(_prec+1)& (0+255),7,b
 17658  0032EA  EF79  F019         	goto	i2u933_41
 17659  0032EE  EF7B  F019         	goto	i2u933_40
 17660  0032F2                     i2u933_41:
 17661  0032F2  EF7C  F019         	goto	i2l7901
 17662  0032F6                     i2u933_40:
 17663  0032F6                     
 17664                           ; BSR set to: 0
 17665                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 17666  0032F6  93B9               	bcf	_flags& (0+255),1,b
 17667  0032F8                     i2l7901:
 17668                           
 17669                           ; BSR set to: 0
 17670                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 17671  0032F8  BFB8               	btfsc	(_prec+1)& (0+255),7,b
 17672  0032FA  EF89  F019         	goto	i2u934_40
 17673  0032FE  51B8               	movf	(_prec+1)& (0+255),w,b
 17674  003300  E106               	bnz	i2u934_41
 17675  003302  05B7               	decf	_prec& (0+255),w,b
 17676  003304  B0D8               	btfsc	status,0,c
 17677  003306  EF87  F019         	goto	i2u934_41
 17678  00330A  EF89  F019         	goto	i2u934_40
 17679  00330E                     i2u934_41:
 17680  00330E  EF8F  F019         	goto	i2l813
 17681  003312                     i2u934_40:
 17682  003312                     
 17683                           ; BSR set to: 0
 17684  003312  0E00               	movlw	0
 17685  003314  6E36               	movwf	(i2xtoa@p+1)^0,c
 17686  003316  0E01               	movlw	1
 17687  003318  6E35               	movwf	i2xtoa@p^0,c
 17688  00331A  EF93  F019         	goto	i2l815
 17689  00331E                     i2l813:
 17690                           
 17691                           ; BSR set to: 0
 17692  00331E  C0B7  F035         	movff	_prec,i2xtoa@p
 17693  003322  C0B8  F036         	movff	_prec+1,i2xtoa@p+1
 17694  003326                     i2l815:
 17695                           
 17696                           ; BSR set to: 0
 17697                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 17698  003326  C0B5  F037         	movff	_width,i2xtoa@w
 17699  00332A  C0B6  F038         	movff	_width+1,i2xtoa@w+1
 17700                           
 17701                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 17702  00332E  A9B9               	btfss	_flags& (0+255),4,b
 17703  003330  EF9C  F019         	goto	i2u935_41
 17704  003334  EF9E  F019         	goto	i2u935_40
 17705  003338                     i2u935_41:
 17706  003338  EFA2  F019         	goto	i2l7907
 17707  00333C                     i2u935_40:
 17708  00333C                     
 17709                           ; BSR set to: 0
 17710                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 17711  00333C  0EFE               	movlw	254
 17712  00333E  2637               	addwf	i2xtoa@w^0,f,c
 17713  003340  0EFF               	movlw	255
 17714  003342  2238               	addwfc	(i2xtoa@w+1)^0,f,c
 17715  003344                     i2l7907:
 17716                           
 17717                           ; BSR set to: 0
 17718                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 17719  003344  C020  F039         	movff	i2xtoa@d,i2xtoa@n
 17720  003348  C021  F03A         	movff	i2xtoa@d+1,i2xtoa@n+1
 17721  00334C  C022  F03B         	movff	i2xtoa@d+2,i2xtoa@n+2
 17722  003350  C023  F03C         	movff	i2xtoa@d+3,i2xtoa@n+3
 17723  003354  C024  F03D         	movff	i2xtoa@d+4,i2xtoa@n+4
 17724  003358  C025  F03E         	movff	i2xtoa@d+5,i2xtoa@n+5
 17725  00335C  C026  F03F         	movff	i2xtoa@d+6,i2xtoa@n+6
 17726  003360  C027  F040         	movff	i2xtoa@d+7,i2xtoa@n+7
 17727  003364                     
 17728                           ; BSR set to: 0
 17729                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 17730  003364  0E00               	movlw	0
 17731  003366  6E42               	movwf	(i2xtoa@i+1)^0,c
 17732  003368  0E1F               	movlw	31
 17733  00336A  6E41               	movwf	i2xtoa@i^0,c
 17734  00336C                     
 17735                           ; BSR set to: 0
 17736                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 17737  00336C  0E00               	movlw	0
 17738  00336E  0101               	movlb	1	; () banked
 17739  003370  6FA8               	movwf	(_dbuf+31)& (0+255),b
 17740                           
 17741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17742  003372  EF6E  F01A         	goto	i2l7943
 17743  003376                     i2l7913:
 17744                           
 17745                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 17746  003376  0641               	decf	i2xtoa@i^0,f,c
 17747  003378  A0D8               	btfss	status,0,c
 17748  00337A  0642               	decf	(i2xtoa@i+1)^0,f,c
 17749  00337C                     
 17750                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 17751  00337C  0E0F               	movlw	15
 17752  00337E  1439               	andwf	i2xtoa@n^0,w,c
 17753  003380  6E43               	movwf	i2xtoa@c^0,c
 17754  003382  6A44               	clrf	(i2xtoa@c+1)^0,c
 17755  003384                     
 17756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 17757  003384  BE44               	btfsc	(i2xtoa@c+1)^0,7,c
 17758  003386  EFCE  F019         	goto	i2u936_41
 17759  00338A  5044               	movf	(i2xtoa@c+1)^0,w,c
 17760  00338C  E109               	bnz	i2u936_40
 17761  00338E  0E0A               	movlw	10
 17762  003390  5C43               	subwf	i2xtoa@c^0,w,c
 17763  003392  A0D8               	btfss	status,0,c
 17764  003394  EFCE  F019         	goto	i2u936_41
 17765  003398  EFD0  F019         	goto	i2u936_40
 17766  00339C                     i2u936_41:
 17767  00339C  EFD8  F019         	goto	i2l7921
 17768  0033A0                     i2u936_40:
 17769  0033A0  0E57               	movlw	87
 17770  0033A2  2443               	addwf	i2xtoa@c^0,w,c
 17771  0033A4  6E43               	movwf	i2xtoa@c^0,c
 17772  0033A6  0E00               	movlw	0
 17773  0033A8  2044               	addwfc	(i2xtoa@c+1)^0,w,c
 17774  0033AA  6E44               	movwf	(i2xtoa@c+1)^0,c
 17775  0033AC  EFDE  F019         	goto	i2l822
 17776  0033B0                     i2l7921:
 17777  0033B0  0E30               	movlw	48
 17778  0033B2  2443               	addwf	i2xtoa@c^0,w,c
 17779  0033B4  6E43               	movwf	i2xtoa@c^0,c
 17780  0033B6  0E00               	movlw	0
 17781  0033B8  2044               	addwfc	(i2xtoa@c+1)^0,w,c
 17782  0033BA  6E44               	movwf	(i2xtoa@c+1)^0,c
 17783  0033BC                     i2l822:
 17784  0033BC  0EBF               	movlw	191
 17785  0033BE  6E29               	movwf	??i2_xtoa^0,c
 17786  0033C0  0EFF               	movlw	255
 17787  0033C2  6E2A               	movwf	(??i2_xtoa+1)^0,c
 17788  0033C4  5028               	movf	i2xtoa@x^0,w,c
 17789  0033C6  6E2B               	movwf	(??i2_xtoa+2)^0,c
 17790  0033C8  6A2C               	clrf	(??i2_xtoa+3)^0,c
 17791  0033CA  5029               	movf	??i2_xtoa^0,w,c
 17792  0033CC  262B               	addwf	(??i2_xtoa+2)^0,f,c
 17793  0033CE  502A               	movf	(??i2_xtoa+1)^0,w,c
 17794  0033D0  222C               	addwfc	(??i2_xtoa+3)^0,f,c
 17795  0033D2  502C               	movf	(??i2_xtoa+3)^0,w,c
 17796  0033D4  E10A               	bnz	i2u937_40
 17797  0033D6  0E1A               	movlw	26
 17798  0033D8  5C2B               	subwf	(??i2_xtoa+2)^0,w,c
 17799  0033DA  A0D8               	btfss	status,0,c
 17800  0033DC  EFF2  F019         	goto	i2u937_41
 17801  0033E0  EFF5  F019         	goto	i2u937_40
 17802  0033E4                     i2u937_41:
 17803  0033E4  0E01               	movlw	1
 17804  0033E6  EFF6  F019         	goto	i2u938_40
 17805  0033EA                     i2u937_40:
 17806  0033EA  0E00               	movlw	0
 17807  0033EC                     i2u938_40:
 17808  0033EC  6E31               	movwf	i2_xtoa$1859^0,c
 17809  0033EE  6A32               	clrf	(i2_xtoa$1859+1)^0,c
 17810  0033F0  5031               	movf	i2_xtoa$1859^0,w,c
 17811  0033F2  1032               	iorwf	(i2_xtoa$1859+1)^0,w,c
 17812  0033F4  B4D8               	btfsc	status,2,c
 17813  0033F6  EFFF  F019         	goto	i2u939_41
 17814  0033FA  EF01  F01A         	goto	i2u939_40
 17815  0033FE                     i2u939_41:
 17816  0033FE  EF31  F01A         	goto	i2l7935
 17817  003402                     i2u939_40:
 17818  003402  0E9F               	movlw	159
 17819  003404  6E29               	movwf	??i2_xtoa^0,c
 17820  003406  0EFF               	movlw	255
 17821  003408  6E2A               	movwf	(??i2_xtoa+1)^0,c
 17822  00340A  0E20               	movlw	32
 17823  00340C  1043               	iorwf	i2xtoa@c^0,w,c
 17824  00340E  6E2B               	movwf	(??i2_xtoa+2)^0,c
 17825  003410  0E00               	movlw	0
 17826  003412  1044               	iorwf	(i2xtoa@c+1)^0,w,c
 17827  003414  6E2C               	movwf	(??i2_xtoa+3)^0,c
 17828  003416  5029               	movf	??i2_xtoa^0,w,c
 17829  003418  262B               	addwf	(??i2_xtoa+2)^0,f,c
 17830  00341A  502A               	movf	(??i2_xtoa+1)^0,w,c
 17831  00341C  222C               	addwfc	(??i2_xtoa+3)^0,f,c
 17832  00341E  502C               	movf	(??i2_xtoa+3)^0,w,c
 17833  003420  E10A               	bnz	i2u940_40
 17834  003422  0E1A               	movlw	26
 17835  003424  5C2B               	subwf	(??i2_xtoa+2)^0,w,c
 17836  003426  A0D8               	btfss	status,0,c
 17837  003428  EF18  F01A         	goto	i2u940_41
 17838  00342C  EF1B  F01A         	goto	i2u940_40
 17839  003430                     i2u940_41:
 17840  003430  0E01               	movlw	1
 17841  003432  EF1C  F01A         	goto	i2u941_40
 17842  003436                     i2u940_40:
 17843  003436  0E00               	movlw	0
 17844  003438                     i2u941_40:
 17845  003438  6E33               	movwf	i2_xtoa$1860^0,c
 17846  00343A  6A34               	clrf	(i2_xtoa$1860+1)^0,c
 17847  00343C  5033               	movf	i2_xtoa$1860^0,w,c
 17848  00343E  1034               	iorwf	(i2_xtoa$1860+1)^0,w,c
 17849  003440  B4D8               	btfsc	status,2,c
 17850  003442  EF25  F01A         	goto	i2u942_41
 17851  003446  EF27  F01A         	goto	i2u942_40
 17852  00344A                     i2u942_41:
 17853  00344A  EF31  F01A         	goto	i2l7935
 17854  00344E                     i2u942_40:
 17855  00344E                     
 17856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 17857  00344E  C043  F007         	movff	i2xtoa@c,i2toupper@c
 17858  003452  C044  F008         	movff	i2xtoa@c+1,i2toupper@c+1
 17859  003456  EC9D  F02F         	call	i2_toupper	;wreg free
 17860  00345A  C007  F043         	movff	?i2_toupper,i2xtoa@c
 17861  00345E  C008  F044         	movff	?i2_toupper+1,i2xtoa@c+1
 17862  003462                     i2l7935:
 17863                           
 17864                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 17865  003462  0E89               	movlw	low _dbuf
 17866  003464  2441               	addwf	i2xtoa@i^0,w,c
 17867  003466  6ED9               	movwf	fsr2l,c
 17868  003468  0E01               	movlw	high _dbuf
 17869  00346A  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 17870  00346C  6EDA               	movwf	fsr2h,c
 17871  00346E  C043  FFDF         	movff	i2xtoa@c,indf2
 17872  003472                     
 17873                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 17874  003472  0635               	decf	i2xtoa@p^0,f,c
 17875  003474  A0D8               	btfss	status,0,c
 17876  003476  0636               	decf	(i2xtoa@p+1)^0,f,c
 17877  003478                     
 17878                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 17879  003478  0637               	decf	i2xtoa@w^0,f,c
 17880  00347A  A0D8               	btfss	status,0,c
 17881  00347C  0638               	decf	(i2xtoa@w+1)^0,f,c
 17882  00347E                     
 17883                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 17884  00347E  C039  F029         	movff	i2xtoa@n,??i2_xtoa
 17885  003482  C03A  F02A         	movff	i2xtoa@n+1,??i2_xtoa+1
 17886  003486  C03B  F02B         	movff	i2xtoa@n+2,??i2_xtoa+2
 17887  00348A  C03C  F02C         	movff	i2xtoa@n+3,??i2_xtoa+3
 17888  00348E  C03D  F02D         	movff	i2xtoa@n+4,??i2_xtoa+4
 17889  003492  C03E  F02E         	movff	i2xtoa@n+5,??i2_xtoa+5
 17890  003496  C03F  F02F         	movff	i2xtoa@n+6,??i2_xtoa+6
 17891  00349A  C040  F030         	movff	i2xtoa@n+7,??i2_xtoa+7
 17892  00349E  0E05               	movlw	5
 17893  0034A0  EF5B  F01A         	goto	i2u943_40
 17894  0034A4                     i2u943_45:
 17895  0034A4  90D8               	bcf	status,0,c
 17896  0034A6  3230               	rrcf	(??i2_xtoa+7)^0,f,c
 17897  0034A8  322F               	rrcf	(??i2_xtoa+6)^0,f,c
 17898  0034AA  322E               	rrcf	(??i2_xtoa+5)^0,f,c
 17899  0034AC  322D               	rrcf	(??i2_xtoa+4)^0,f,c
 17900  0034AE  322C               	rrcf	(??i2_xtoa+3)^0,f,c
 17901  0034B0  322B               	rrcf	(??i2_xtoa+2)^0,f,c
 17902  0034B2  322A               	rrcf	(??i2_xtoa+1)^0,f,c
 17903  0034B4  3229               	rrcf	??i2_xtoa^0,f,c
 17904  0034B6                     i2u943_40:
 17905  0034B6  2EE8               	decfsz	wreg,f,c
 17906  0034B8  EF52  F01A         	goto	i2u943_45
 17907  0034BC  C029  F039         	movff	??i2_xtoa,i2xtoa@n
 17908  0034C0  C02A  F03A         	movff	??i2_xtoa+1,i2xtoa@n+1
 17909  0034C4  C02B  F03B         	movff	??i2_xtoa+2,i2xtoa@n+2
 17910  0034C8  C02C  F03C         	movff	??i2_xtoa+3,i2xtoa@n+3
 17911  0034CC  C02D  F03D         	movff	??i2_xtoa+4,i2xtoa@n+4
 17912  0034D0  C02E  F03E         	movff	??i2_xtoa+5,i2xtoa@n+5
 17913  0034D4  C02F  F03F         	movff	??i2_xtoa+6,i2xtoa@n+6
 17914  0034D8  C030  F040         	movff	??i2_xtoa+7,i2xtoa@n+7
 17915  0034DC                     i2l7943:
 17916                           
 17917                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17918  0034DC  BE42               	btfsc	(i2xtoa@i+1)^0,7,c
 17919  0034DE  EF7A  F01A         	goto	i2u944_41
 17920  0034E2  5042               	movf	(i2xtoa@i+1)^0,w,c
 17921  0034E4  E109               	bnz	i2u944_40
 17922  0034E6  0E02               	movlw	2
 17923  0034E8  5C41               	subwf	i2xtoa@i^0,w,c
 17924  0034EA  A0D8               	btfss	status,0,c
 17925  0034EC  EF7A  F01A         	goto	i2u944_41
 17926  0034F0  EF7C  F01A         	goto	i2u944_40
 17927  0034F4                     i2u944_41:
 17928  0034F4  EFAD  F01A         	goto	i2l836
 17929  0034F8                     i2u944_40:
 17930  0034F8  5039               	movf	i2xtoa@n^0,w,c
 17931  0034FA  103A               	iorwf	(i2xtoa@n+1)^0,w,c
 17932  0034FC  103B               	iorwf	(i2xtoa@n+2)^0,w,c
 17933  0034FE  103C               	iorwf	(i2xtoa@n+3)^0,w,c
 17934  003500  103D               	iorwf	(i2xtoa@n+4)^0,w,c
 17935  003502  103E               	iorwf	(i2xtoa@n+5)^0,w,c
 17936  003504  103F               	iorwf	(i2xtoa@n+6)^0,w,c
 17937  003506  1040               	iorwf	(i2xtoa@n+7)^0,w,c
 17938  003508  A4D8               	btfss	status,2,c
 17939  00350A  EF89  F01A         	goto	i2u945_41
 17940  00350E  EF8B  F01A         	goto	i2u945_40
 17941  003512                     i2u945_41:
 17942  003512  EFBB  F019         	goto	i2l7913
 17943  003516                     i2u945_40:
 17944  003516  BE36               	btfsc	(i2xtoa@p+1)^0,7,c
 17945  003518  EF98  F01A         	goto	i2u946_40
 17946  00351C  5036               	movf	(i2xtoa@p+1)^0,w,c
 17947  00351E  E106               	bnz	i2u946_41
 17948  003520  0435               	decf	i2xtoa@p^0,w,c
 17949  003522  B0D8               	btfsc	status,0,c
 17950  003524  EF96  F01A         	goto	i2u946_41
 17951  003528  EF98  F01A         	goto	i2u946_40
 17952  00352C                     i2u946_41:
 17953  00352C  EFBB  F019         	goto	i2l7913
 17954  003530                     i2u946_40:
 17955  003530  BE38               	btfsc	(i2xtoa@w+1)^0,7,c
 17956  003532  EFA3  F01A         	goto	i2u947_41
 17957  003536  5038               	movf	(i2xtoa@w+1)^0,w,c
 17958  003538  E108               	bnz	i2u947_40
 17959  00353A  0437               	decf	i2xtoa@w^0,w,c
 17960  00353C  A0D8               	btfss	status,0,c
 17961  00353E  EFA3  F01A         	goto	i2u947_41
 17962  003542  EFA5  F01A         	goto	i2u947_40
 17963  003546                     i2u947_41:
 17964  003546  EFAD  F01A         	goto	i2l836
 17965  00354A                     i2u947_40:
 17966  00354A  0100               	movlb	0	; () banked
 17967  00354C  B3B9               	btfsc	_flags& (0+255),1,b
 17968  00354E  EFAB  F01A         	goto	i2u948_41
 17969  003552  EFAD  F01A         	goto	i2u948_40
 17970  003556                     i2u948_41:
 17971  003556  EFBB  F019         	goto	i2l7913
 17972  00355A                     i2u948_40:
 17973  00355A                     i2l836:
 17974                           
 17975                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 17976  00355A  0100               	movlb	0	; () banked
 17977  00355C  A9B9               	btfss	_flags& (0+255),4,b
 17978  00355E  EFB3  F01A         	goto	i2u949_41
 17979  003562  EFB5  F01A         	goto	i2u949_40
 17980  003566                     i2u949_41:
 17981  003566  EFCB  F01A         	goto	i2l7959
 17982  00356A                     i2u949_40:
 17983  00356A                     
 17984                           ; BSR set to: 0
 17985                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 17986  00356A  0641               	decf	i2xtoa@i^0,f,c
 17987  00356C  A0D8               	btfss	status,0,c
 17988  00356E  0642               	decf	(i2xtoa@i+1)^0,f,c
 17989  003570                     
 17990                           ; BSR set to: 0
 17991                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 17992  003570  0E89               	movlw	low _dbuf
 17993  003572  2441               	addwf	i2xtoa@i^0,w,c
 17994  003574  6ED9               	movwf	fsr2l,c
 17995  003576  0E01               	movlw	high _dbuf
 17996  003578  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 17997  00357A  6EDA               	movwf	fsr2h,c
 17998  00357C  C028  FFDF         	movff	i2xtoa@x,indf2
 17999  003580                     
 18000                           ; BSR set to: 0
 18001                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 18002  003580  0641               	decf	i2xtoa@i^0,f,c
 18003  003582  A0D8               	btfss	status,0,c
 18004  003584  0642               	decf	(i2xtoa@i+1)^0,f,c
 18005                           
 18006                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 18007  003586  0E89               	movlw	low _dbuf
 18008  003588  2441               	addwf	i2xtoa@i^0,w,c
 18009  00358A  6ED9               	movwf	fsr2l,c
 18010  00358C  0E01               	movlw	high _dbuf
 18011  00358E  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 18012  003590  6EDA               	movwf	fsr2h,c
 18013  003592  0E30               	movlw	48
 18014  003594  6EDF               	movwf	indf2,c
 18015  003596                     i2l7959:
 18016                           
 18017                           ; BSR set to: 0
 18018                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 18019  003596  C01E  F013         	movff	i2xtoa@fp,i2pad@fp
 18020  00359A  C01F  F014         	movff	i2xtoa@fp+1,i2pad@fp+1
 18021  00359E  0E89               	movlw	low _dbuf
 18022  0035A0  2441               	addwf	i2xtoa@i^0,w,c
 18023  0035A2  6E15               	movwf	i2pad@buf^0,c
 18024  0035A4  0E01               	movlw	high _dbuf
 18025  0035A6  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 18026  0035A8  6E16               	movwf	(i2pad@buf+1)^0,c
 18027  0035AA  C037  F017         	movff	i2xtoa@w,i2pad@p
 18028  0035AE  C038  F018         	movff	i2xtoa@w+1,i2pad@p+1
 18029  0035B2  EC0F  F02D         	call	i2_pad	;wreg free
 18030  0035B6  C013  F01E         	movff	?i2_pad,?i2_xtoa
 18031  0035BA  C014  F01F         	movff	?i2_pad+1,?i2_xtoa+1
 18032  0035BE  0012               	return		;funcret
 18033  0035C0                     __end_ofi2_xtoa:
 18034                           	opt callstack 0
 18035                           
 18036 ;; *************** function i2_toupper *****************
 18037 ;; Defined at:
 18038 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
 18039 ;; Parameters:    Size  Location     Type
 18040 ;;  c               2    6[COMRAM] int 
 18041 ;; Auto vars:     Size  Location     Type
 18042 ;;		None
 18043 ;; Return value:  Size  Location     Type
 18044 ;;                  2    6[COMRAM] int 
 18045 ;; Registers used:
 18046 ;;		wreg, status,2, status,0
 18047 ;; Tracked objects:
 18048 ;;		On entry : 0/0
 18049 ;;		On exit  : 0/0
 18050 ;;		Unchanged: 0/0
 18051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18052 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18053 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18054 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18055 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18056 ;;Total ram usage:        8 bytes
 18057 ;; Hardware stack levels used:    1
 18058 ;; Hardware stack levels required when called:    1
 18059 ;; This function calls:
 18060 ;;		i2_islower
 18061 ;; This function is called by:
 18062 ;;		i2_xtoa
 18063 ;; This function uses a non-reentrant model
 18064 ;;
 18065                           
 18066                           	psect	text75
 18067  005F3A                     __ptext75:
 18068                           	opt callstack 0
 18069  005F3A                     i2_toupper:
 18070                           	opt callstack 11
 18071  005F3A  0E9F               	movlw	159
 18072  005F3C  6E09               	movwf	??i2_toupper^0,c
 18073  005F3E  0EFF               	movlw	255
 18074  005F40  6E0A               	movwf	(??i2_toupper+1)^0,c
 18075  005F42  C007  F00B         	movff	i2toupper@c,??i2_toupper+2
 18076  005F46  C008  F00C         	movff	i2toupper@c+1,??i2_toupper+3
 18077  005F4A  5009               	movf	??i2_toupper^0,w,c
 18078  005F4C  260B               	addwf	(??i2_toupper+2)^0,f,c
 18079  005F4E  500A               	movf	(??i2_toupper+1)^0,w,c
 18080  005F50  220C               	addwfc	(??i2_toupper+3)^0,f,c
 18081  005F52  500C               	movf	(??i2_toupper+3)^0,w,c
 18082  005F54  E10A               	bnz	i2u884_40
 18083  005F56  0E1A               	movlw	26
 18084  005F58  5C0B               	subwf	(??i2_toupper+2)^0,w,c
 18085  005F5A  A0D8               	btfss	status,0,c
 18086  005F5C  EFB2  F02F         	goto	i2u884_41
 18087  005F60  EFB5  F02F         	goto	i2u884_40
 18088  005F64                     i2u884_41:
 18089  005F64  0E01               	movlw	1
 18090  005F66  EFB6  F02F         	goto	i2u885_40
 18091  005F6A                     i2u884_40:
 18092  005F6A  0E00               	movlw	0
 18093  005F6C                     i2u885_40:
 18094  005F6C  6E0D               	movwf	i2_toupper$2550^0,c
 18095  005F6E  6A0E               	clrf	(i2_toupper$2550+1)^0,c
 18096  005F70  500D               	movf	i2_toupper$2550^0,w,c
 18097  005F72  100E               	iorwf	(i2_toupper$2550+1)^0,w,c
 18098  005F74  B4D8               	btfsc	status,2,c
 18099  005F76  EFBF  F02F         	goto	i2u886_41
 18100  005F7A  EFC1  F02F         	goto	i2u886_40
 18101  005F7E                     i2u886_41:
 18102  005F7E  EFC7  F02F         	goto	i2l1712
 18103  005F82                     i2u886_40:
 18104  005F82  0E5F               	movlw	95
 18105  005F84  1407               	andwf	i2toupper@c^0,w,c
 18106  005F86  6E07               	movwf	?i2_toupper^0,c
 18107  005F88  6A08               	clrf	(?i2_toupper+1)^0,c
 18108  005F8A  EFCB  F02F         	goto	i2l1717
 18109  005F8E                     i2l1712:
 18110  005F8E  C007  F007         	movff	i2toupper@c,?i2_toupper
 18111  005F92  C008  F008         	movff	i2toupper@c+1,?i2_toupper+1
 18112  005F96                     i2l1717:
 18113  005F96  0012               	return		;funcret
 18114  005F98                     __end_ofi2_toupper:
 18115                           	opt callstack 0
 18116                           
 18117 ;; *************** function i2_islower *****************
 18118 ;; Defined at:
 18119 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
 18120 ;; Parameters:    Size  Location     Type
 18121 ;;  c               2    0[COMRAM] int 
 18122 ;; Auto vars:     Size  Location     Type
 18123 ;;		None
 18124 ;; Return value:  Size  Location     Type
 18125 ;;                  2    0[COMRAM] int 
 18126 ;; Registers used:
 18127 ;;		wreg, status,2, status,0
 18128 ;; Tracked objects:
 18129 ;;		On entry : 0/0
 18130 ;;		On exit  : 0/0
 18131 ;;		Unchanged: 0/0
 18132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18133 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18135 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18136 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18137 ;;Total ram usage:        6 bytes
 18138 ;; Hardware stack levels used:    1
 18139 ;; This function calls:
 18140 ;;		Nothing
 18141 ;; This function is called by:
 18142 ;;		i2_toupper
 18143 ;; This function uses a non-reentrant model
 18144 ;;
 18145                           
 18146                           	psect	text76
 18147  006584                     __ptext76:
 18148                           	opt callstack 0
 18149  006584                     i2_islower:
 18150                           	opt callstack 11
 18151  006584  0E9F               	movlw	159
 18152  006586  6E03               	movwf	??i2_islower^0,c
 18153  006588  0EFF               	movlw	255
 18154  00658A  6E04               	movwf	(??i2_islower+1)^0,c
 18155  00658C  C001  F005         	movff	i2islower@c,??i2_islower+2
 18156  006590  C002  F006         	movff	i2islower@c+1,??i2_islower+3
 18157  006594  5003               	movf	??i2_islower^0,w,c
 18158  006596  2605               	addwf	(??i2_islower+2)^0,f,c
 18159  006598  5004               	movf	(??i2_islower+1)^0,w,c
 18160  00659A  2206               	addwfc	(??i2_islower+3)^0,f,c
 18161  00659C  5006               	movf	(??i2_islower+3)^0,w,c
 18162  00659E  E10A               	bnz	i2u845_40
 18163  0065A0  0E1A               	movlw	26
 18164  0065A2  5C05               	subwf	(??i2_islower+2)^0,w,c
 18165  0065A4  A0D8               	btfss	status,0,c
 18166  0065A6  EFD7  F032         	goto	i2u845_41
 18167  0065AA  EFDA  F032         	goto	i2u845_40
 18168  0065AE                     i2u845_41:
 18169  0065AE  0E01               	movlw	1
 18170  0065B0  EFDB  F032         	goto	i2u846_40
 18171  0065B4                     i2u845_40:
 18172  0065B4  0E00               	movlw	0
 18173  0065B6                     i2u846_40:
 18174  0065B6  6E01               	movwf	?i2_islower^0,c
 18175  0065B8  6A02               	clrf	(?i2_islower+1)^0,c
 18176  0065BA  0012               	return		;funcret
 18177  0065BC                     __end_ofi2_islower:
 18178                           	opt callstack 0
 18179                           
 18180 ;; *************** function i2_isupper *****************
 18181 ;; Defined at:
 18182 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 18183 ;; Parameters:    Size  Location     Type
 18184 ;;  c               2    0[COMRAM] int 
 18185 ;; Auto vars:     Size  Location     Type
 18186 ;;		None
 18187 ;; Return value:  Size  Location     Type
 18188 ;;                  2    0[COMRAM] int 
 18189 ;; Registers used:
 18190 ;;		wreg, status,2, status,0
 18191 ;; Tracked objects:
 18192 ;;		On entry : 0/0
 18193 ;;		On exit  : 0/0
 18194 ;;		Unchanged: 0/0
 18195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18196 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18198 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18199 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18200 ;;Total ram usage:        6 bytes
 18201 ;; Hardware stack levels used:    1
 18202 ;; This function calls:
 18203 ;;		Nothing
 18204 ;; This function is called by:
 18205 ;;		i2_xtoa
 18206 ;; This function uses a non-reentrant model
 18207 ;;
 18208                           
 18209                           	psect	text77
 18210  0065BC                     __ptext77:
 18211                           	opt callstack 0
 18212  0065BC                     i2_isupper:
 18213                           	opt callstack 12
 18214  0065BC  0EBF               	movlw	191
 18215  0065BE  6E03               	movwf	??i2_isupper^0,c
 18216  0065C0  0EFF               	movlw	255
 18217  0065C2  6E04               	movwf	(??i2_isupper+1)^0,c
 18218  0065C4  C001  F005         	movff	i2isupper@c,??i2_isupper+2
 18219  0065C8  C002  F006         	movff	i2isupper@c+1,??i2_isupper+3
 18220  0065CC  5003               	movf	??i2_isupper^0,w,c
 18221  0065CE  2605               	addwf	(??i2_isupper+2)^0,f,c
 18222  0065D0  5004               	movf	(??i2_isupper+1)^0,w,c
 18223  0065D2  2206               	addwfc	(??i2_isupper+3)^0,f,c
 18224  0065D4  5006               	movf	(??i2_isupper+3)^0,w,c
 18225  0065D6  E10A               	bnz	i2u882_40
 18226  0065D8  0E1A               	movlw	26
 18227  0065DA  5C05               	subwf	(??i2_isupper+2)^0,w,c
 18228  0065DC  A0D8               	btfss	status,0,c
 18229  0065DE  EFF3  F032         	goto	i2u882_41
 18230  0065E2  EFF6  F032         	goto	i2u882_40
 18231  0065E6                     i2u882_41:
 18232  0065E6  0E01               	movlw	1
 18233  0065E8  EFF7  F032         	goto	i2u883_40
 18234  0065EC                     i2u882_40:
 18235  0065EC  0E00               	movlw	0
 18236  0065EE                     i2u883_40:
 18237  0065EE  6E01               	movwf	?i2_isupper^0,c
 18238  0065F0  6A02               	clrf	(?i2_isupper+1)^0,c
 18239  0065F2  0012               	return		;funcret
 18240  0065F4                     __end_ofi2_isupper:
 18241                           	opt callstack 0
 18242                           
 18243 ;; *************** function i2_isalpha *****************
 18244 ;; Defined at:
 18245 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
 18246 ;; Parameters:    Size  Location     Type
 18247 ;;  c               2    0[COMRAM] int 
 18248 ;; Auto vars:     Size  Location     Type
 18249 ;;		None
 18250 ;; Return value:  Size  Location     Type
 18251 ;;                  2    0[COMRAM] int 
 18252 ;; Registers used:
 18253 ;;		wreg, status,2, status,0
 18254 ;; Tracked objects:
 18255 ;;		On entry : 0/0
 18256 ;;		On exit  : 0/0
 18257 ;;		Unchanged: 0/0
 18258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18259 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18261 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18262 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18263 ;;Total ram usage:        6 bytes
 18264 ;; Hardware stack levels used:    1
 18265 ;; This function calls:
 18266 ;;		Nothing
 18267 ;; This function is called by:
 18268 ;;		i2_xtoa
 18269 ;; This function uses a non-reentrant model
 18270 ;;
 18271                           
 18272                           	psect	text78
 18273  006428                     __ptext78:
 18274                           	opt callstack 0
 18275  006428                     i2_isalpha:
 18276                           	opt callstack 12
 18277  006428  0E9F               	movlw	159
 18278  00642A  6E03               	movwf	??i2_isalpha^0,c
 18279  00642C  0EFF               	movlw	255
 18280  00642E  6E04               	movwf	(??i2_isalpha+1)^0,c
 18281  006430  0E20               	movlw	32
 18282  006432  1001               	iorwf	i2isalpha@c^0,w,c
 18283  006434  6E05               	movwf	(??i2_isalpha+2)^0,c
 18284  006436  0E00               	movlw	0
 18285  006438  1002               	iorwf	(i2isalpha@c+1)^0,w,c
 18286  00643A  6E06               	movwf	(??i2_isalpha+3)^0,c
 18287  00643C  5003               	movf	??i2_isalpha^0,w,c
 18288  00643E  2605               	addwf	(??i2_isalpha+2)^0,f,c
 18289  006440  5004               	movf	(??i2_isalpha+1)^0,w,c
 18290  006442  2206               	addwfc	(??i2_isalpha+3)^0,f,c
 18291  006444  5006               	movf	(??i2_isalpha+3)^0,w,c
 18292  006446  E10A               	bnz	i2u876_40
 18293  006448  0E1A               	movlw	26
 18294  00644A  5C05               	subwf	(??i2_isalpha+2)^0,w,c
 18295  00644C  A0D8               	btfss	status,0,c
 18296  00644E  EF2B  F032         	goto	i2u876_41
 18297  006452  EF2E  F032         	goto	i2u876_40
 18298  006456                     i2u876_41:
 18299  006456  0E01               	movlw	1
 18300  006458  EF2F  F032         	goto	i2u877_40
 18301  00645C                     i2u876_40:
 18302  00645C  0E00               	movlw	0
 18303  00645E                     i2u877_40:
 18304  00645E  6E01               	movwf	?i2_isalpha^0,c
 18305  006460  6A02               	clrf	(?i2_isalpha+1)^0,c
 18306  006462  0012               	return		;funcret
 18307  006464                     __end_ofi2_isalpha:
 18308                           	opt callstack 0
 18309                           
 18310 ;; *************** function i2_utoa *****************
 18311 ;; Defined at:
 18312 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 18313 ;; Parameters:    Size  Location     Type
 18314 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 18315 ;;		 -> vsnprintf@f(6), NULL(0), 
 18316 ;;  d               8   31[COMRAM] unsigned long long 
 18317 ;; Auto vars:     Size  Location     Type
 18318 ;;  utoa            8   51[COMRAM] unsigned long long 
 18319 ;;  utoa            2   59[COMRAM] int 
 18320 ;;  utoa            2   49[COMRAM] int 
 18321 ;;  utoa            2   47[COMRAM] int 
 18322 ;; Return value:  Size  Location     Type
 18323 ;;                  2   29[COMRAM] int 
 18324 ;; Registers used:
 18325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18326 ;; Tracked objects:
 18327 ;;		On entry : 0/0
 18328 ;;		On exit  : 0/0
 18329 ;;		Unchanged: 0/0
 18330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18331 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18332 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18333 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18334 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18335 ;;Total ram usage:       32 bytes
 18336 ;; Hardware stack levels used:    1
 18337 ;; Hardware stack levels required when called:    5
 18338 ;; This function calls:
 18339 ;;		i2___lodiv
 18340 ;;		i2___lomod
 18341 ;;		i2_pad
 18342 ;; This function is called by:
 18343 ;;		i2_vfpfcnvrt
 18344 ;; This function uses a non-reentrant model
 18345 ;;
 18346                           
 18347                           	psect	text79
 18348  003CAA                     __ptext79:
 18349                           	opt callstack 0
 18350  003CAA                     i2_utoa:
 18351                           	opt callstack 8
 18352  003CAA                     
 18353                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
 18354  003CAA  0100               	movlb	0	; () banked
 18355  003CAC  BFB8               	btfsc	(_prec+1)& (0+255),7,b
 18356  003CAE  EF5B  F01E         	goto	i2u926_41
 18357  003CB2  EF5D  F01E         	goto	i2u926_40
 18358  003CB6                     i2u926_41:
 18359  003CB6  EF5E  F01E         	goto	i2l7865
 18360  003CBA                     i2u926_40:
 18361  003CBA                     
 18362                           ; BSR set to: 0
 18363                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
 18364  003CBA  93B9               	bcf	_flags& (0+255),1,b
 18365  003CBC                     i2l7865:
 18366                           
 18367                           ; BSR set to: 0
 18368                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
 18369  003CBC  BFB8               	btfsc	(_prec+1)& (0+255),7,b
 18370  003CBE  EF6B  F01E         	goto	i2u927_40
 18371  003CC2  51B8               	movf	(_prec+1)& (0+255),w,b
 18372  003CC4  E106               	bnz	i2u927_41
 18373  003CC6  05B7               	decf	_prec& (0+255),w,b
 18374  003CC8  B0D8               	btfsc	status,0,c
 18375  003CCA  EF69  F01E         	goto	i2u927_41
 18376  003CCE  EF6B  F01E         	goto	i2u927_40
 18377  003CD2                     i2u927_41:
 18378  003CD2  EF71  F01E         	goto	i2l798
 18379  003CD6                     i2u927_40:
 18380  003CD6                     
 18381                           ; BSR set to: 0
 18382  003CD6  0E00               	movlw	0
 18383  003CD8  6E31               	movwf	(i2utoa@p+1)^0,c
 18384  003CDA  0E01               	movlw	1
 18385  003CDC  6E30               	movwf	i2utoa@p^0,c
 18386  003CDE  EF75  F01E         	goto	i2l800
 18387  003CE2                     i2l798:
 18388                           
 18389                           ; BSR set to: 0
 18390  003CE2  C0B7  F030         	movff	_prec,i2utoa@p
 18391  003CE6  C0B8  F031         	movff	_prec+1,i2utoa@p+1
 18392  003CEA                     i2l800:
 18393                           
 18394                           ; BSR set to: 0
 18395                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
 18396  003CEA  C0B5  F032         	movff	_width,i2utoa@w
 18397  003CEE  C0B6  F033         	movff	_width+1,i2utoa@w+1
 18398                           
 18399                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
 18400  003CF2  C020  F034         	movff	i2utoa@d,i2utoa@n
 18401  003CF6  C021  F035         	movff	i2utoa@d+1,i2utoa@n+1
 18402  003CFA  C022  F036         	movff	i2utoa@d+2,i2utoa@n+2
 18403  003CFE  C023  F037         	movff	i2utoa@d+3,i2utoa@n+3
 18404  003D02  C024  F038         	movff	i2utoa@d+4,i2utoa@n+4
 18405  003D06  C025  F039         	movff	i2utoa@d+5,i2utoa@n+5
 18406  003D0A  C026  F03A         	movff	i2utoa@d+6,i2utoa@n+6
 18407  003D0E  C027  F03B         	movff	i2utoa@d+7,i2utoa@n+7
 18408  003D12                     
 18409                           ; BSR set to: 0
 18410                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
 18411  003D12  0E00               	movlw	0
 18412  003D14  6E3D               	movwf	(i2utoa@i+1)^0,c
 18413  003D16  0E1F               	movlw	31
 18414  003D18  6E3C               	movwf	i2utoa@i^0,c
 18415  003D1A                     
 18416                           ; BSR set to: 0
 18417                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
 18418  003D1A  0E00               	movlw	0
 18419  003D1C  0101               	movlb	1	; () banked
 18420  003D1E  6FA8               	movwf	(_dbuf+31)& (0+255),b
 18421                           
 18422                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18423  003D20  EF08  F01F         	goto	i2l7883
 18424  003D24                     i2l7873:
 18425                           
 18426                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
 18427  003D24  063C               	decf	i2utoa@i^0,f,c
 18428  003D26  A0D8               	btfss	status,0,c
 18429  003D28  063D               	decf	(i2utoa@i+1)^0,f,c
 18430  003D2A                     
 18431                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
 18432  003D2A  0E89               	movlw	low _dbuf
 18433  003D2C  243C               	addwf	i2utoa@i^0,w,c
 18434  003D2E  6ED9               	movwf	fsr2l,c
 18435  003D30  0E01               	movlw	high _dbuf
 18436  003D32  203D               	addwfc	(i2utoa@i+1)^0,w,c
 18437  003D34  6EDA               	movwf	fsr2h,c
 18438  003D36  C034  F001         	movff	i2utoa@n,i2___lomod@dividend
 18439  003D3A  C035  F002         	movff	i2utoa@n+1,i2___lomod@dividend+1
 18440  003D3E  C036  F003         	movff	i2utoa@n+2,i2___lomod@dividend+2
 18441  003D42  C037  F004         	movff	i2utoa@n+3,i2___lomod@dividend+3
 18442  003D46  C038  F005         	movff	i2utoa@n+4,i2___lomod@dividend+4
 18443  003D4A  C039  F006         	movff	i2utoa@n+5,i2___lomod@dividend+5
 18444  003D4E  C03A  F007         	movff	i2utoa@n+6,i2___lomod@dividend+6
 18445  003D52  C03B  F008         	movff	i2utoa@n+7,i2___lomod@dividend+7
 18446  003D56  0E0A               	movlw	10
 18447  003D58  6E09               	movwf	i2___lomod@divisor^0,c
 18448  003D5A  0E00               	movlw	0
 18449  003D5C  6E0A               	movwf	(i2___lomod@divisor+1)^0,c
 18450  003D5E  0E00               	movlw	0
 18451  003D60  6E0B               	movwf	(i2___lomod@divisor+2)^0,c
 18452  003D62  0E00               	movlw	0
 18453  003D64  6E0C               	movwf	(i2___lomod@divisor+3)^0,c
 18454  003D66  0E00               	movlw	0
 18455  003D68  6E0D               	movwf	(i2___lomod@divisor+4)^0,c
 18456  003D6A  0E00               	movlw	0
 18457  003D6C  6E0E               	movwf	(i2___lomod@divisor+5)^0,c
 18458  003D6E  0E00               	movlw	0
 18459  003D70  6E0F               	movwf	(i2___lomod@divisor+6)^0,c
 18460  003D72  0E00               	movlw	0
 18461  003D74  6E10               	movwf	(i2___lomod@divisor+7)^0,c
 18462  003D76  EC77  F02B         	call	i2___lomod	;wreg free
 18463  003D7A  C001  F028         	movff	?i2___lomod,??i2_utoa
 18464  003D7E  C002  F029         	movff	?i2___lomod+1,??i2_utoa+1
 18465  003D82  C003  F02A         	movff	?i2___lomod+2,??i2_utoa+2
 18466  003D86  C004  F02B         	movff	?i2___lomod+3,??i2_utoa+3
 18467  003D8A  C005  F02C         	movff	?i2___lomod+4,??i2_utoa+4
 18468  003D8E  C006  F02D         	movff	?i2___lomod+5,??i2_utoa+5
 18469  003D92  C007  F02E         	movff	?i2___lomod+6,??i2_utoa+6
 18470  003D96  C008  F02F         	movff	?i2___lomod+7,??i2_utoa+7
 18471  003D9A  5028               	movf	??i2_utoa^0,w,c
 18472  003D9C  0F30               	addlw	48
 18473  003D9E  6EDF               	movwf	indf2,c
 18474  003DA0                     
 18475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
 18476  003DA0  0630               	decf	i2utoa@p^0,f,c
 18477  003DA2  A0D8               	btfss	status,0,c
 18478  003DA4  0631               	decf	(i2utoa@p+1)^0,f,c
 18479  003DA6                     
 18480                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
 18481  003DA6  0632               	decf	i2utoa@w^0,f,c
 18482  003DA8  A0D8               	btfss	status,0,c
 18483  003DAA  0633               	decf	(i2utoa@w+1)^0,f,c
 18484  003DAC                     
 18485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
 18486  003DAC  C034  F001         	movff	i2utoa@n,i2___lodiv@dividend
 18487  003DB0  C035  F002         	movff	i2utoa@n+1,i2___lodiv@dividend+1
 18488  003DB4  C036  F003         	movff	i2utoa@n+2,i2___lodiv@dividend+2
 18489  003DB8  C037  F004         	movff	i2utoa@n+3,i2___lodiv@dividend+3
 18490  003DBC  C038  F005         	movff	i2utoa@n+4,i2___lodiv@dividend+4
 18491  003DC0  C039  F006         	movff	i2utoa@n+5,i2___lodiv@dividend+5
 18492  003DC4  C03A  F007         	movff	i2utoa@n+6,i2___lodiv@dividend+6
 18493  003DC8  C03B  F008         	movff	i2utoa@n+7,i2___lodiv@dividend+7
 18494  003DCC  0E0A               	movlw	10
 18495  003DCE  6E09               	movwf	i2___lodiv@divisor^0,c
 18496  003DD0  0E00               	movlw	0
 18497  003DD2  6E0A               	movwf	(i2___lodiv@divisor+1)^0,c
 18498  003DD4  0E00               	movlw	0
 18499  003DD6  6E0B               	movwf	(i2___lodiv@divisor+2)^0,c
 18500  003DD8  0E00               	movlw	0
 18501  003DDA  6E0C               	movwf	(i2___lodiv@divisor+3)^0,c
 18502  003DDC  0E00               	movlw	0
 18503  003DDE  6E0D               	movwf	(i2___lodiv@divisor+4)^0,c
 18504  003DE0  0E00               	movlw	0
 18505  003DE2  6E0E               	movwf	(i2___lodiv@divisor+5)^0,c
 18506  003DE4  0E00               	movlw	0
 18507  003DE6  6E0F               	movwf	(i2___lodiv@divisor+6)^0,c
 18508  003DE8  0E00               	movlw	0
 18509  003DEA  6E10               	movwf	(i2___lodiv@divisor+7)^0,c
 18510  003DEC  ECAB  F029         	call	i2___lodiv	;wreg free
 18511  003DF0  C001  F034         	movff	?i2___lodiv,i2utoa@n
 18512  003DF4  C002  F035         	movff	?i2___lodiv+1,i2utoa@n+1
 18513  003DF8  C003  F036         	movff	?i2___lodiv+2,i2utoa@n+2
 18514  003DFC  C004  F037         	movff	?i2___lodiv+3,i2utoa@n+3
 18515  003E00  C005  F038         	movff	?i2___lodiv+4,i2utoa@n+4
 18516  003E04  C006  F039         	movff	?i2___lodiv+5,i2utoa@n+5
 18517  003E08  C007  F03A         	movff	?i2___lodiv+6,i2utoa@n+6
 18518  003E0C  C008  F03B         	movff	?i2___lodiv+7,i2utoa@n+7
 18519  003E10                     i2l7883:
 18520                           
 18521                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18522  003E10  503C               	movf	i2utoa@i^0,w,c
 18523  003E12  103D               	iorwf	(i2utoa@i+1)^0,w,c
 18524  003E14  B4D8               	btfsc	status,2,c
 18525  003E16  EF0F  F01F         	goto	i2u928_41
 18526  003E1A  EF11  F01F         	goto	i2u928_40
 18527  003E1E                     i2u928_41:
 18528  003E1E  EF42  F01F         	goto	i2l7893
 18529  003E22                     i2u928_40:
 18530  003E22  5034               	movf	i2utoa@n^0,w,c
 18531  003E24  1035               	iorwf	(i2utoa@n+1)^0,w,c
 18532  003E26  1036               	iorwf	(i2utoa@n+2)^0,w,c
 18533  003E28  1037               	iorwf	(i2utoa@n+3)^0,w,c
 18534  003E2A  1038               	iorwf	(i2utoa@n+4)^0,w,c
 18535  003E2C  1039               	iorwf	(i2utoa@n+5)^0,w,c
 18536  003E2E  103A               	iorwf	(i2utoa@n+6)^0,w,c
 18537  003E30  103B               	iorwf	(i2utoa@n+7)^0,w,c
 18538  003E32  A4D8               	btfss	status,2,c
 18539  003E34  EF1E  F01F         	goto	i2u929_41
 18540  003E38  EF20  F01F         	goto	i2u929_40
 18541  003E3C                     i2u929_41:
 18542  003E3C  EF92  F01E         	goto	i2l7873
 18543  003E40                     i2u929_40:
 18544  003E40  BE31               	btfsc	(i2utoa@p+1)^0,7,c
 18545  003E42  EF2D  F01F         	goto	i2u930_40
 18546  003E46  5031               	movf	(i2utoa@p+1)^0,w,c
 18547  003E48  E106               	bnz	i2u930_41
 18548  003E4A  0430               	decf	i2utoa@p^0,w,c
 18549  003E4C  B0D8               	btfsc	status,0,c
 18550  003E4E  EF2B  F01F         	goto	i2u930_41
 18551  003E52  EF2D  F01F         	goto	i2u930_40
 18552  003E56                     i2u930_41:
 18553  003E56  EF92  F01E         	goto	i2l7873
 18554  003E5A                     i2u930_40:
 18555  003E5A  BE33               	btfsc	(i2utoa@w+1)^0,7,c
 18556  003E5C  EF38  F01F         	goto	i2u931_41
 18557  003E60  5033               	movf	(i2utoa@w+1)^0,w,c
 18558  003E62  E108               	bnz	i2u931_40
 18559  003E64  0432               	decf	i2utoa@w^0,w,c
 18560  003E66  A0D8               	btfss	status,0,c
 18561  003E68  EF38  F01F         	goto	i2u931_41
 18562  003E6C  EF3A  F01F         	goto	i2u931_40
 18563  003E70                     i2u931_41:
 18564  003E70  EF42  F01F         	goto	i2l7893
 18565  003E74                     i2u931_40:
 18566  003E74  0100               	movlb	0	; () banked
 18567  003E76  B3B9               	btfsc	_flags& (0+255),1,b
 18568  003E78  EF40  F01F         	goto	i2u932_41
 18569  003E7C  EF42  F01F         	goto	i2u932_40
 18570  003E80                     i2u932_41:
 18571  003E80  EF92  F01E         	goto	i2l7873
 18572  003E84                     i2u932_40:
 18573  003E84                     i2l7893:
 18574                           
 18575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
 18576  003E84  C01E  F013         	movff	i2utoa@fp,i2pad@fp
 18577  003E88  C01F  F014         	movff	i2utoa@fp+1,i2pad@fp+1
 18578  003E8C  0E89               	movlw	low _dbuf
 18579  003E8E  243C               	addwf	i2utoa@i^0,w,c
 18580  003E90  6E15               	movwf	i2pad@buf^0,c
 18581  003E92  0E01               	movlw	high _dbuf
 18582  003E94  203D               	addwfc	(i2utoa@i+1)^0,w,c
 18583  003E96  6E16               	movwf	(i2pad@buf+1)^0,c
 18584  003E98  C032  F017         	movff	i2utoa@w,i2pad@p
 18585  003E9C  C033  F018         	movff	i2utoa@w+1,i2pad@p+1
 18586  003EA0  EC0F  F02D         	call	i2_pad	;wreg free
 18587  003EA4  C013  F01E         	movff	?i2_pad,?i2_utoa
 18588  003EA8  C014  F01F         	movff	?i2_pad+1,?i2_utoa+1
 18589  003EAC  0012               	return		;funcret
 18590  003EAE                     __end_ofi2_utoa:
 18591                           	opt callstack 0
 18592                           
 18593 ;; *************** function i2___lomod *****************
 18594 ;; Defined at:
 18595 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
 18596 ;; Parameters:    Size  Location     Type
 18597 ;;  dividend        8    0[COMRAM] unsigned long long 
 18598 ;;  divisor         8    8[COMRAM] unsigned long long 
 18599 ;; Auto vars:     Size  Location     Type
 18600 ;;  __lomod         1   16[COMRAM] unsigned char 
 18601 ;; Return value:  Size  Location     Type
 18602 ;;                  8    0[COMRAM] unsigned long long 
 18603 ;; Registers used:
 18604 ;;		wreg, status,2, status,0
 18605 ;; Tracked objects:
 18606 ;;		On entry : 0/0
 18607 ;;		On exit  : 0/0
 18608 ;;		Unchanged: 0/0
 18609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18610 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18611 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18613 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18614 ;;Total ram usage:       17 bytes
 18615 ;; Hardware stack levels used:    1
 18616 ;; This function calls:
 18617 ;;		Nothing
 18618 ;; This function is called by:
 18619 ;;		i2_utoa
 18620 ;; This function uses a non-reentrant model
 18621 ;;
 18622                           
 18623                           	psect	text80
 18624  0056EE                     __ptext80:
 18625                           	opt callstack 0
 18626  0056EE                     i2___lomod:
 18627                           	opt callstack 12
 18628  0056EE  5009               	movf	i2___lomod@divisor^0,w,c
 18629  0056F0  100A               	iorwf	(i2___lomod@divisor+1)^0,w,c
 18630  0056F2  100B               	iorwf	(i2___lomod@divisor+2)^0,w,c
 18631  0056F4  100C               	iorwf	(i2___lomod@divisor+3)^0,w,c
 18632  0056F6  100D               	iorwf	(i2___lomod@divisor+4)^0,w,c
 18633  0056F8  100E               	iorwf	(i2___lomod@divisor+5)^0,w,c
 18634  0056FA  100F               	iorwf	(i2___lomod@divisor+6)^0,w,c
 18635  0056FC  1010               	iorwf	(i2___lomod@divisor+7)^0,w,c
 18636  0056FE  B4D8               	btfsc	status,2,c
 18637  005700  EF84  F02B         	goto	i2u872_41
 18638  005704  EF86  F02B         	goto	i2u872_40
 18639  005708                     i2u872_41:
 18640  005708  EFCE  F02B         	goto	i2l1371
 18641  00570C                     i2u872_40:
 18642  00570C  0E01               	movlw	1
 18643  00570E  6E11               	movwf	i2___lomod@counter^0,c
 18644  005710  EF94  F02B         	goto	i2l7625
 18645  005714                     i2l7623:
 18646  005714  90D8               	bcf	status,0,c
 18647  005716  3609               	rlcf	i2___lomod@divisor^0,f,c
 18648  005718  360A               	rlcf	(i2___lomod@divisor+1)^0,f,c
 18649  00571A  360B               	rlcf	(i2___lomod@divisor+2)^0,f,c
 18650  00571C  360C               	rlcf	(i2___lomod@divisor+3)^0,f,c
 18651  00571E  360D               	rlcf	(i2___lomod@divisor+4)^0,f,c
 18652  005720  360E               	rlcf	(i2___lomod@divisor+5)^0,f,c
 18653  005722  360F               	rlcf	(i2___lomod@divisor+6)^0,f,c
 18654  005724  3610               	rlcf	(i2___lomod@divisor+7)^0,f,c
 18655  005726  2A11               	incf	i2___lomod@counter^0,f,c
 18656  005728                     i2l7625:
 18657  005728  AE10               	btfss	(i2___lomod@divisor+7)^0,7,c
 18658  00572A  EF99  F02B         	goto	i2u873_41
 18659  00572E  EF9B  F02B         	goto	i2u873_40
 18660  005732                     i2u873_41:
 18661  005732  EF8A  F02B         	goto	i2l7623
 18662  005736                     i2u873_40:
 18663  005736                     i2l7627:
 18664  005736  5009               	movf	i2___lomod@divisor^0,w,c
 18665  005738  5C01               	subwf	i2___lomod@dividend^0,w,c
 18666  00573A  500A               	movf	(i2___lomod@divisor+1)^0,w,c
 18667  00573C  5802               	subwfb	(i2___lomod@dividend+1)^0,w,c
 18668  00573E  500B               	movf	(i2___lomod@divisor+2)^0,w,c
 18669  005740  5803               	subwfb	(i2___lomod@dividend+2)^0,w,c
 18670  005742  500C               	movf	(i2___lomod@divisor+3)^0,w,c
 18671  005744  5804               	subwfb	(i2___lomod@dividend+3)^0,w,c
 18672  005746  500D               	movf	(i2___lomod@divisor+4)^0,w,c
 18673  005748  5805               	subwfb	(i2___lomod@dividend+4)^0,w,c
 18674  00574A  500E               	movf	(i2___lomod@divisor+5)^0,w,c
 18675  00574C  5806               	subwfb	(i2___lomod@dividend+5)^0,w,c
 18676  00574E  500F               	movf	(i2___lomod@divisor+6)^0,w,c
 18677  005750  5807               	subwfb	(i2___lomod@dividend+6)^0,w,c
 18678  005752  5010               	movf	(i2___lomod@divisor+7)^0,w,c
 18679  005754  5808               	subwfb	(i2___lomod@dividend+7)^0,w,c
 18680  005756  A0D8               	btfss	status,0,c
 18681  005758  EFB0  F02B         	goto	i2u874_41
 18682  00575C  EFB2  F02B         	goto	i2u874_40
 18683  005760                     i2u874_41:
 18684  005760  EFC2  F02B         	goto	i2l7631
 18685  005764                     i2u874_40:
 18686  005764  5009               	movf	i2___lomod@divisor^0,w,c
 18687  005766  5E01               	subwf	i2___lomod@dividend^0,f,c
 18688  005768  500A               	movf	(i2___lomod@divisor+1)^0,w,c
 18689  00576A  5A02               	subwfb	(i2___lomod@dividend+1)^0,f,c
 18690  00576C  500B               	movf	(i2___lomod@divisor+2)^0,w,c
 18691  00576E  5A03               	subwfb	(i2___lomod@dividend+2)^0,f,c
 18692  005770  500C               	movf	(i2___lomod@divisor+3)^0,w,c
 18693  005772  5A04               	subwfb	(i2___lomod@dividend+3)^0,f,c
 18694  005774  500D               	movf	(i2___lomod@divisor+4)^0,w,c
 18695  005776  5A05               	subwfb	(i2___lomod@dividend+4)^0,f,c
 18696  005778  500E               	movf	(i2___lomod@divisor+5)^0,w,c
 18697  00577A  5A06               	subwfb	(i2___lomod@dividend+5)^0,f,c
 18698  00577C  500F               	movf	(i2___lomod@divisor+6)^0,w,c
 18699  00577E  5A07               	subwfb	(i2___lomod@dividend+6)^0,f,c
 18700  005780  5010               	movf	(i2___lomod@divisor+7)^0,w,c
 18701  005782  5A08               	subwfb	(i2___lomod@dividend+7)^0,f,c
 18702  005784                     i2l7631:
 18703  005784  90D8               	bcf	status,0,c
 18704  005786  3210               	rrcf	(i2___lomod@divisor+7)^0,f,c
 18705  005788  320F               	rrcf	(i2___lomod@divisor+6)^0,f,c
 18706  00578A  320E               	rrcf	(i2___lomod@divisor+5)^0,f,c
 18707  00578C  320D               	rrcf	(i2___lomod@divisor+4)^0,f,c
 18708  00578E  320C               	rrcf	(i2___lomod@divisor+3)^0,f,c
 18709  005790  320B               	rrcf	(i2___lomod@divisor+2)^0,f,c
 18710  005792  320A               	rrcf	(i2___lomod@divisor+1)^0,f,c
 18711  005794  3209               	rrcf	i2___lomod@divisor^0,f,c
 18712  005796  2E11               	decfsz	i2___lomod@counter^0,f,c
 18713  005798  EF9B  F02B         	goto	i2l7627
 18714  00579C                     i2l1371:
 18715  00579C  C001  F001         	movff	i2___lomod@dividend,?i2___lomod
 18716  0057A0  C002  F002         	movff	i2___lomod@dividend+1,?i2___lomod+1
 18717  0057A4  C003  F003         	movff	i2___lomod@dividend+2,?i2___lomod+2
 18718  0057A8  C004  F004         	movff	i2___lomod@dividend+3,?i2___lomod+3
 18719  0057AC  C005  F005         	movff	i2___lomod@dividend+4,?i2___lomod+4
 18720  0057B0  C006  F006         	movff	i2___lomod@dividend+5,?i2___lomod+5
 18721  0057B4  C007  F007         	movff	i2___lomod@dividend+6,?i2___lomod+6
 18722  0057B8  C008  F008         	movff	i2___lomod@dividend+7,?i2___lomod+7
 18723  0057BC  0012               	return		;funcret
 18724  0057BE                     __end_ofi2___lomod:
 18725                           	opt callstack 0
 18726                           
 18727 ;; *************** function i2___lodiv *****************
 18728 ;; Defined at:
 18729 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
 18730 ;; Parameters:    Size  Location     Type
 18731 ;;  dividend        8    0[COMRAM] unsigned long long 
 18732 ;;  divisor         8    8[COMRAM] unsigned long long 
 18733 ;; Auto vars:     Size  Location     Type
 18734 ;;  __lodiv         8   16[COMRAM] unsigned long long 
 18735 ;;  __lodiv         1   24[COMRAM] unsigned char 
 18736 ;; Return value:  Size  Location     Type
 18737 ;;                  8    0[COMRAM] unsigned long long 
 18738 ;; Registers used:
 18739 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18740 ;; Tracked objects:
 18741 ;;		On entry : 0/0
 18742 ;;		On exit  : 0/0
 18743 ;;		Unchanged: 0/0
 18744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18745 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18746 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18748 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18749 ;;Total ram usage:       25 bytes
 18750 ;; Hardware stack levels used:    1
 18751 ;; This function calls:
 18752 ;;		Nothing
 18753 ;; This function is called by:
 18754 ;;		i2_utoa
 18755 ;; This function uses a non-reentrant model
 18756 ;;
 18757                           
 18758                           	psect	text81
 18759  005356                     __ptext81:
 18760                           	opt callstack 0
 18761  005356                     i2___lodiv:
 18762                           	opt callstack 12
 18763  005356  EE20  F011         	lfsr	2,i2___lodiv@quotient
 18764  00535A  0E07               	movlw	7
 18765  00535C                     i2u868_41:
 18766  00535C  6ADE               	clrf	postinc2,c
 18767  00535E  06E8               	decf	wreg,f,c
 18768  005360  E2FD               	bc	i2u868_41
 18769  005362  5009               	movf	i2___lodiv@divisor^0,w,c
 18770  005364  100A               	iorwf	(i2___lodiv@divisor+1)^0,w,c
 18771  005366  100B               	iorwf	(i2___lodiv@divisor+2)^0,w,c
 18772  005368  100C               	iorwf	(i2___lodiv@divisor+3)^0,w,c
 18773  00536A  100D               	iorwf	(i2___lodiv@divisor+4)^0,w,c
 18774  00536C  100E               	iorwf	(i2___lodiv@divisor+5)^0,w,c
 18775  00536E  100F               	iorwf	(i2___lodiv@divisor+6)^0,w,c
 18776  005370  1010               	iorwf	(i2___lodiv@divisor+7)^0,w,c
 18777  005372  B4D8               	btfsc	status,2,c
 18778  005374  EFBE  F029         	goto	i2u869_41
 18779  005378  EFC0  F029         	goto	i2u869_40
 18780  00537C                     i2u869_41:
 18781  00537C  EF12  F02A         	goto	i2l1361
 18782  005380                     i2u869_40:
 18783  005380  0E01               	movlw	1
 18784  005382  6E19               	movwf	i2___lodiv@counter^0,c
 18785  005384  EFCE  F029         	goto	i2l7605
 18786  005388                     i2l7603:
 18787  005388  90D8               	bcf	status,0,c
 18788  00538A  3609               	rlcf	i2___lodiv@divisor^0,f,c
 18789  00538C  360A               	rlcf	(i2___lodiv@divisor+1)^0,f,c
 18790  00538E  360B               	rlcf	(i2___lodiv@divisor+2)^0,f,c
 18791  005390  360C               	rlcf	(i2___lodiv@divisor+3)^0,f,c
 18792  005392  360D               	rlcf	(i2___lodiv@divisor+4)^0,f,c
 18793  005394  360E               	rlcf	(i2___lodiv@divisor+5)^0,f,c
 18794  005396  360F               	rlcf	(i2___lodiv@divisor+6)^0,f,c
 18795  005398  3610               	rlcf	(i2___lodiv@divisor+7)^0,f,c
 18796  00539A  2A19               	incf	i2___lodiv@counter^0,f,c
 18797  00539C                     i2l7605:
 18798  00539C  AE10               	btfss	(i2___lodiv@divisor+7)^0,7,c
 18799  00539E  EFD3  F029         	goto	i2u870_41
 18800  0053A2  EFD5  F029         	goto	i2u870_40
 18801  0053A6                     i2u870_41:
 18802  0053A6  EFC4  F029         	goto	i2l7603
 18803  0053AA                     i2u870_40:
 18804  0053AA                     i2l7607:
 18805  0053AA  90D8               	bcf	status,0,c
 18806  0053AC  3611               	rlcf	i2___lodiv@quotient^0,f,c
 18807  0053AE  3612               	rlcf	(i2___lodiv@quotient+1)^0,f,c
 18808  0053B0  3613               	rlcf	(i2___lodiv@quotient+2)^0,f,c
 18809  0053B2  3614               	rlcf	(i2___lodiv@quotient+3)^0,f,c
 18810  0053B4  3615               	rlcf	(i2___lodiv@quotient+4)^0,f,c
 18811  0053B6  3616               	rlcf	(i2___lodiv@quotient+5)^0,f,c
 18812  0053B8  3617               	rlcf	(i2___lodiv@quotient+6)^0,f,c
 18813  0053BA  3618               	rlcf	(i2___lodiv@quotient+7)^0,f,c
 18814  0053BC  5009               	movf	i2___lodiv@divisor^0,w,c
 18815  0053BE  5C01               	subwf	i2___lodiv@dividend^0,w,c
 18816  0053C0  500A               	movf	(i2___lodiv@divisor+1)^0,w,c
 18817  0053C2  5802               	subwfb	(i2___lodiv@dividend+1)^0,w,c
 18818  0053C4  500B               	movf	(i2___lodiv@divisor+2)^0,w,c
 18819  0053C6  5803               	subwfb	(i2___lodiv@dividend+2)^0,w,c
 18820  0053C8  500C               	movf	(i2___lodiv@divisor+3)^0,w,c
 18821  0053CA  5804               	subwfb	(i2___lodiv@dividend+3)^0,w,c
 18822  0053CC  500D               	movf	(i2___lodiv@divisor+4)^0,w,c
 18823  0053CE  5805               	subwfb	(i2___lodiv@dividend+4)^0,w,c
 18824  0053D0  500E               	movf	(i2___lodiv@divisor+5)^0,w,c
 18825  0053D2  5806               	subwfb	(i2___lodiv@dividend+5)^0,w,c
 18826  0053D4  500F               	movf	(i2___lodiv@divisor+6)^0,w,c
 18827  0053D6  5807               	subwfb	(i2___lodiv@dividend+6)^0,w,c
 18828  0053D8  5010               	movf	(i2___lodiv@divisor+7)^0,w,c
 18829  0053DA  5808               	subwfb	(i2___lodiv@dividend+7)^0,w,c
 18830  0053DC  A0D8               	btfss	status,0,c
 18831  0053DE  EFF3  F029         	goto	i2u871_41
 18832  0053E2  EFF5  F029         	goto	i2u871_40
 18833  0053E6                     i2u871_41:
 18834  0053E6  EF06  F02A         	goto	i2l7615
 18835  0053EA                     i2u871_40:
 18836  0053EA  5009               	movf	i2___lodiv@divisor^0,w,c
 18837  0053EC  5E01               	subwf	i2___lodiv@dividend^0,f,c
 18838  0053EE  500A               	movf	(i2___lodiv@divisor+1)^0,w,c
 18839  0053F0  5A02               	subwfb	(i2___lodiv@dividend+1)^0,f,c
 18840  0053F2  500B               	movf	(i2___lodiv@divisor+2)^0,w,c
 18841  0053F4  5A03               	subwfb	(i2___lodiv@dividend+2)^0,f,c
 18842  0053F6  500C               	movf	(i2___lodiv@divisor+3)^0,w,c
 18843  0053F8  5A04               	subwfb	(i2___lodiv@dividend+3)^0,f,c
 18844  0053FA  500D               	movf	(i2___lodiv@divisor+4)^0,w,c
 18845  0053FC  5A05               	subwfb	(i2___lodiv@dividend+4)^0,f,c
 18846  0053FE  500E               	movf	(i2___lodiv@divisor+5)^0,w,c
 18847  005400  5A06               	subwfb	(i2___lodiv@dividend+5)^0,f,c
 18848  005402  500F               	movf	(i2___lodiv@divisor+6)^0,w,c
 18849  005404  5A07               	subwfb	(i2___lodiv@dividend+6)^0,f,c
 18850  005406  5010               	movf	(i2___lodiv@divisor+7)^0,w,c
 18851  005408  5A08               	subwfb	(i2___lodiv@dividend+7)^0,f,c
 18852  00540A  8011               	bsf	i2___lodiv@quotient^0,0,c
 18853  00540C                     i2l7615:
 18854  00540C  90D8               	bcf	status,0,c
 18855  00540E  3210               	rrcf	(i2___lodiv@divisor+7)^0,f,c
 18856  005410  320F               	rrcf	(i2___lodiv@divisor+6)^0,f,c
 18857  005412  320E               	rrcf	(i2___lodiv@divisor+5)^0,f,c
 18858  005414  320D               	rrcf	(i2___lodiv@divisor+4)^0,f,c
 18859  005416  320C               	rrcf	(i2___lodiv@divisor+3)^0,f,c
 18860  005418  320B               	rrcf	(i2___lodiv@divisor+2)^0,f,c
 18861  00541A  320A               	rrcf	(i2___lodiv@divisor+1)^0,f,c
 18862  00541C  3209               	rrcf	i2___lodiv@divisor^0,f,c
 18863  00541E  2E19               	decfsz	i2___lodiv@counter^0,f,c
 18864  005420  EFD5  F029         	goto	i2l7607
 18865  005424                     i2l1361:
 18866  005424  C011  F001         	movff	i2___lodiv@quotient,?i2___lodiv
 18867  005428  C012  F002         	movff	i2___lodiv@quotient+1,?i2___lodiv+1
 18868  00542C  C013  F003         	movff	i2___lodiv@quotient+2,?i2___lodiv+2
 18869  005430  C014  F004         	movff	i2___lodiv@quotient+3,?i2___lodiv+3
 18870  005434  C015  F005         	movff	i2___lodiv@quotient+4,?i2___lodiv+4
 18871  005438  C016  F006         	movff	i2___lodiv@quotient+5,?i2___lodiv+5
 18872  00543C  C017  F007         	movff	i2___lodiv@quotient+6,?i2___lodiv+6
 18873  005440  C018  F008         	movff	i2___lodiv@quotient+7,?i2___lodiv+7
 18874  005444  0012               	return		;funcret
 18875  005446                     __end_ofi2___lodiv:
 18876                           	opt callstack 0
 18877                           
 18878 ;; *************** function i2_strncmp *****************
 18879 ;; Defined at:
 18880 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
 18881 ;; Parameters:    Size  Location     Type
 18882 ;;  _l              2    0[COMRAM] PTR const unsigned char 
 18883 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
 18884 ;;		 -> STR_4(22), STR_3(12), STR_1(13), 
 18885 ;;  _r              2    2[COMRAM] PTR const unsigned char 
 18886 ;;		 -> STR_105(3), STR_101(3), STR_96(3), STR_92(3), 
 18887 ;;		 -> STR_87(4), STR_83(4), STR_78(3), STR_73(3), 
 18888 ;;		 -> STR_68(4), STR_63(3), STR_58(3), STR_53(4), 
 18889 ;;		 -> STR_48(3), STR_43(3), STR_38(4), STR_33(3), 
 18890 ;;		 -> STR_29(3), STR_24(3), STR_20(3), STR_15(4), 
 18891 ;;		 -> STR_11(4), 
 18892 ;;  n               2    4[COMRAM] unsigned int 
 18893 ;; Auto vars:     Size  Location     Type
 18894 ;;  strncmp         2    9[COMRAM] PTR const unsigned char 
 18895 ;;		 -> STR_105(3), STR_101(3), STR_96(3), STR_92(3), 
 18896 ;;		 -> STR_87(4), STR_83(4), STR_78(3), STR_73(3), 
 18897 ;;		 -> STR_68(4), STR_63(3), STR_58(3), STR_53(4), 
 18898 ;;		 -> STR_48(3), STR_43(3), STR_38(4), STR_33(3), 
 18899 ;;		 -> STR_29(3), STR_24(3), STR_20(3), STR_15(4), 
 18900 ;;		 -> STR_11(4), 
 18901 ;;  strncmp         2    7[COMRAM] PTR const unsigned char 
 18902 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
 18903 ;;		 -> STR_4(22), STR_3(12), STR_1(13), 
 18904 ;; Return value:  Size  Location     Type
 18905 ;;                  2    0[COMRAM] int 
 18906 ;; Registers used:
 18907 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 18908 ;; Tracked objects:
 18909 ;;		On entry : 0/0
 18910 ;;		On exit  : 0/0
 18911 ;;		Unchanged: 0/0
 18912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18913 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18914 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18915 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18916 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18917 ;;Total ram usage:       11 bytes
 18918 ;; Hardware stack levels used:    1
 18919 ;; This function calls:
 18920 ;;		Nothing
 18921 ;; This function is called by:
 18922 ;;		i2_vfpfcnvrt
 18923 ;; This function uses a non-reentrant model
 18924 ;;
 18925                           
 18926                           	psect	text82
 18927  005532                     __ptext82:
 18928                           	opt callstack 0
 18929  005532                     i2_strncmp:
 18930                           	opt callstack 13
 18931  005532  C001  F008         	movff	i2strncmp@_l,i2strncmp@l
 18932  005536  C002  F009         	movff	i2strncmp@_l+1,i2strncmp@l+1
 18933  00553A  C003  F00A         	movff	i2strncmp@_r,i2strncmp@r
 18934  00553E  C004  F00B         	movff	i2strncmp@_r+1,i2strncmp@r+1
 18935  005542  0605               	decf	i2strncmp@n^0,f,c
 18936  005544  A0D8               	btfss	status,0,c
 18937  005546  0606               	decf	(i2strncmp@n+1)^0,f,c
 18938  005548  2805               	incf	i2strncmp@n^0,w,c
 18939  00554A  E106               	bnz	i2u962_41
 18940  00554C  2806               	incf	(i2strncmp@n+1)^0,w,c
 18941  00554E  A4D8               	btfss	status,2,c
 18942  005550  EFAC  F02A         	goto	i2u962_41
 18943  005554  EFAE  F02A         	goto	i2u962_40
 18944  005558                     i2u962_41:
 18945  005558  EFBB  F02A         	goto	i2l8013
 18946  00555C                     i2u962_40:
 18947  00555C  0E00               	movlw	0
 18948  00555E  6E02               	movwf	(?i2_strncmp+1)^0,c
 18949  005560  0E00               	movlw	0
 18950  005562  6E01               	movwf	?i2_strncmp^0,c
 18951  005564  EF0D  F02B         	goto	i2l1702
 18952  005568                     i2l8011:
 18953  005568  4A08               	infsnz	i2strncmp@l^0,f,c
 18954  00556A  2A09               	incf	(i2strncmp@l+1)^0,f,c
 18955  00556C  4A0A               	infsnz	i2strncmp@r^0,f,c
 18956  00556E  2A0B               	incf	(i2strncmp@r+1)^0,f,c
 18957  005570  0605               	decf	i2strncmp@n^0,f,c
 18958  005572  A0D8               	btfss	status,0,c
 18959  005574  0606               	decf	(i2strncmp@n+1)^0,f,c
 18960  005576                     i2l8013:
 18961  005576  C008  FFF6         	movff	i2strncmp@l,tblptrl
 18962  00557A  C009  FFF7         	movff	i2strncmp@l+1,tblptrh
 18963  00557E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18964  00557E  6AF8               	clrf	tblptru,c
 18965  005580                     	endif
 18966  005580                     	if	0	;tblptru may be non-zero
 18967  005580                     	endif
 18968  005580  0008               	tblrd		*
 18969  005582  50F5               	movf	tablat,w,c
 18970  005584  0900               	iorlw	0
 18971  005586  B4D8               	btfsc	status,2,c
 18972  005588  EFC8  F02A         	goto	i2u963_41
 18973  00558C  EFCA  F02A         	goto	i2u963_40
 18974  005590                     i2u963_41:
 18975  005590  EFF9  F02A         	goto	i2l8021
 18976  005594                     i2u963_40:
 18977  005594  C00A  FFF6         	movff	i2strncmp@r,tblptrl
 18978  005598  C00B  FFF7         	movff	i2strncmp@r+1,tblptrh
 18979  00559C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18980  00559C  6AF8               	clrf	tblptru,c
 18981  00559E                     	endif
 18982  00559E                     	if	0	;tblptru may be non-zero
 18983  00559E                     	endif
 18984  00559E  0008               	tblrd		*
 18985  0055A0  50F5               	movf	tablat,w,c
 18986  0055A2  0900               	iorlw	0
 18987  0055A4  B4D8               	btfsc	status,2,c
 18988  0055A6  EFD7  F02A         	goto	i2u964_41
 18989  0055AA  EFD9  F02A         	goto	i2u964_40
 18990  0055AE                     i2u964_41:
 18991  0055AE  EFF9  F02A         	goto	i2l8021
 18992  0055B2                     i2u964_40:
 18993  0055B2  5005               	movf	i2strncmp@n^0,w,c
 18994  0055B4  1006               	iorwf	(i2strncmp@n+1)^0,w,c
 18995  0055B6  B4D8               	btfsc	status,2,c
 18996  0055B8  EFE0  F02A         	goto	i2u965_41
 18997  0055BC  EFE2  F02A         	goto	i2u965_40
 18998  0055C0                     i2u965_41:
 18999  0055C0  EFF9  F02A         	goto	i2l8021
 19000  0055C4                     i2u965_40:
 19001  0055C4  C008  FFF6         	movff	i2strncmp@l,tblptrl
 19002  0055C8  C009  FFF7         	movff	i2strncmp@l+1,tblptrh
 19003  0055CC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19004  0055CC  6AF8               	clrf	tblptru,c
 19005  0055CE                     	endif
 19006  0055CE                     	if	0	;tblptru may be non-zero
 19007  0055CE                     	endif
 19008  0055CE  0008               	tblrd		*
 19009  0055D0  CFF5 F007          	movff	tablat,??i2_strncmp
 19010  0055D4  C00A  FFF6         	movff	i2strncmp@r,tblptrl
 19011  0055D8  C00B  FFF7         	movff	i2strncmp@r+1,tblptrh
 19012  0055DC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19013  0055DC  6AF8               	clrf	tblptru,c
 19014  0055DE                     	endif
 19015  0055DE                     	if	0	;tblptru may be non-zero
 19016  0055DE                     	endif
 19017  0055DE  0008               	tblrd		*
 19018  0055E0  50F5               	movf	tablat,w,c
 19019  0055E2  1807               	xorwf	??i2_strncmp^0,w,c
 19020  0055E4  B4D8               	btfsc	status,2,c
 19021  0055E6  EFF7  F02A         	goto	i2u966_41
 19022  0055EA  EFF9  F02A         	goto	i2u966_40
 19023  0055EE                     i2u966_41:
 19024  0055EE  EFB4  F02A         	goto	i2l8011
 19025  0055F2                     i2u966_40:
 19026  0055F2                     i2l8021:
 19027  0055F2  C008  FFF6         	movff	i2strncmp@l,tblptrl
 19028  0055F6  C009  FFF7         	movff	i2strncmp@l+1,tblptrh
 19029  0055FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19030  0055FA  6AF8               	clrf	tblptru,c
 19031  0055FC                     	endif
 19032  0055FC                     	if	0	;tblptru may be non-zero
 19033  0055FC                     	endif
 19034  0055FC  0008               	tblrd		*
 19035  0055FE  CFF5 F007          	movff	tablat,??i2_strncmp
 19036  005602  C00A  FFF6         	movff	i2strncmp@r,tblptrl
 19037  005606  C00B  FFF7         	movff	i2strncmp@r+1,tblptrh
 19038  00560A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19039  00560A  6AF8               	clrf	tblptru,c
 19040  00560C                     	endif
 19041  00560C                     	if	0	;tblptru may be non-zero
 19042  00560C                     	endif
 19043  00560C  0008               	tblrd		*
 19044  00560E  50F5               	movf	tablat,w,c
 19045  005610  5C07               	subwf	??i2_strncmp^0,w,c
 19046  005612  6E01               	movwf	?i2_strncmp^0,c
 19047  005614  6A02               	clrf	(?i2_strncmp+1)^0,c
 19048  005616  A0D8               	btfss	status,0,c
 19049  005618  0602               	decf	(?i2_strncmp+1)^0,f,c
 19050  00561A                     i2l1702:
 19051  00561A  0012               	return		;funcret
 19052  00561C                     __end_ofi2_strncmp:
 19053                           	opt callstack 0
 19054                           
 19055 ;; *************** function i2_stoa *****************
 19056 ;; Defined at:
 19057 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 19058 ;; Parameters:    Size  Location     Type
 19059 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 19060 ;;		 -> vsnprintf@f(6), NULL(0), 
 19061 ;;  s               2   13[COMRAM] PTR unsigned char 
 19062 ;;		 -> ?_snprintf(2), ?_printf(2), 
 19063 ;; Auto vars:     Size  Location     Type
 19064 ;;  stoa            7   16[COMRAM] unsigned char [7]
 19065 ;;  stoa            2   31[COMRAM] int 
 19066 ;;  stoa            2   29[COMRAM] int 
 19067 ;;  stoa            2   27[COMRAM] PTR unsigned char 
 19068 ;;		 -> i2stoa@nuls(7), ?_snprintf(2), ?_printf(2), stoa@nuls(7), 
 19069 ;;  stoa            2   25[COMRAM] int 
 19070 ;;  stoa            2   23[COMRAM] int 
 19071 ;; Return value:  Size  Location     Type
 19072 ;;                  2   11[COMRAM] int 
 19073 ;; Registers used:
 19074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19075 ;; Tracked objects:
 19076 ;;		On entry : 0/0
 19077 ;;		On exit  : 0/0
 19078 ;;		Unchanged: 0/0
 19079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19080 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19081 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19082 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19083 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19084 ;;Total ram usage:       22 bytes
 19085 ;; Hardware stack levels used:    1
 19086 ;; Hardware stack levels required when called:    3
 19087 ;; This function calls:
 19088 ;;		i2_fputc
 19089 ;;		i2_strlen
 19090 ;; This function is called by:
 19091 ;;		i2_vfpfcnvrt
 19092 ;; This function uses a non-reentrant model
 19093 ;;
 19094                           
 19095                           	psect	text83
 19096  00493C                     __ptext83:
 19097                           	opt callstack 0
 19098  00493C                     i2_stoa:
 19099                           	opt callstack 10
 19100  00493C                     
 19101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
 19102  00493C  EE20  F0CA         	lfsr	2,stoa@F1152
 19103  004940  EE10  F011         	lfsr	1,i2stoa@nuls
 19104  004944  0E06               	movlw	6
 19105  004946                     i2u917_41:
 19106  004946  CFDB FFE3          	movff	plusw2,plusw1
 19107  00494A  06E8               	decf	wreg,f,c
 19108  00494C  E2FC               	bc	i2u917_41
 19109  00494E                     
 19110                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
 19111  00494E  C00E  F01C         	movff	i2stoa@s,i2stoa@cp
 19112  004952  C00F  F01D         	movff	i2stoa@s+1,i2stoa@cp+1
 19113  004956                     
 19114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
 19115  004956  501C               	movf	i2stoa@cp^0,w,c
 19116  004958  101D               	iorwf	(i2stoa@cp+1)^0,w,c
 19117  00495A  A4D8               	btfss	status,2,c
 19118  00495C  EFB2  F024         	goto	i2u918_41
 19119  004960  EFB4  F024         	goto	i2u918_40
 19120  004964                     i2u918_41:
 19121  004964  EFB8  F024         	goto	i2l7827
 19122  004968                     i2u918_40:
 19123  004968                     
 19124                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
 19125  004968  0E11               	movlw	low i2stoa@nuls
 19126  00496A  6E1C               	movwf	i2stoa@cp^0,c
 19127  00496C  0E00               	movlw	high i2stoa@nuls
 19128  00496E  6E1D               	movwf	(i2stoa@cp+1)^0,c
 19129  004970                     i2l7827:
 19130                           
 19131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
 19132  004970  C01C  F001         	movff	i2stoa@cp,i2strlen@s
 19133  004974  C01D  F002         	movff	i2stoa@cp+1,i2strlen@s+1
 19134  004978  EC16  F033         	call	i2_strlen	;wreg free
 19135  00497C  C001  F020         	movff	?i2_strlen,i2stoa@l
 19136  004980  C002  F021         	movff	?i2_strlen+1,i2stoa@l+1
 19137  004984                     
 19138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
 19139  004984  C0B7  F01E         	movff	_prec,i2stoa@p
 19140  004988  C0B8  F01F         	movff	_prec+1,i2stoa@p+1
 19141  00498C                     
 19142                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
 19143  00498C  BE1F               	btfsc	(i2stoa@p+1)^0,7,c
 19144  00498E  EFCB  F024         	goto	i2u919_41
 19145  004992  EFCD  F024         	goto	i2u919_40
 19146  004996                     i2u919_41:
 19147  004996  EFE2  F024         	goto	i2l779
 19148  00499A                     i2u919_40:
 19149  00499A  5020               	movf	i2stoa@l^0,w,c
 19150  00499C  5C1E               	subwf	i2stoa@p^0,w,c
 19151  00499E  501F               	movf	(i2stoa@p+1)^0,w,c
 19152  0049A0  0A80               	xorlw	128
 19153  0049A2  6E10               	movwf	??i2_stoa^0,c
 19154  0049A4  5021               	movf	(i2stoa@l+1)^0,w,c
 19155  0049A6  0A80               	xorlw	128
 19156  0049A8  5810               	subwfb	??i2_stoa^0,w,c
 19157  0049AA  A0D8               	btfss	status,0,c
 19158  0049AC  EFDA  F024         	goto	i2u920_41
 19159  0049B0  EFDC  F024         	goto	i2u920_40
 19160  0049B4                     i2u920_41:
 19161  0049B4  EFDE  F024         	goto	i2l777
 19162  0049B8                     i2u920_40:
 19163  0049B8  EFE2  F024         	goto	i2l779
 19164  0049BC                     i2l777:
 19165  0049BC  C01E  F020         	movff	i2stoa@p,i2stoa@l
 19166  0049C0  C01F  F021         	movff	i2stoa@p+1,i2stoa@l+1
 19167  0049C4                     i2l779:
 19168                           
 19169                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
 19170  0049C4  C020  F01E         	movff	i2stoa@l,i2stoa@p
 19171  0049C8  C021  F01F         	movff	i2stoa@l+1,i2stoa@p+1
 19172                           
 19173                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
 19174  0049CC  C0B5  F01A         	movff	_width,i2stoa@w
 19175  0049D0  C0B6  F01B         	movff	_width+1,i2stoa@w+1
 19176                           
 19177                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
 19178  0049D4  0100               	movlb	0	; () banked
 19179  0049D6  B1B9               	btfsc	_flags& (0+255),0,b
 19180  0049D8  EFF0  F024         	goto	i2u921_41
 19181  0049DC  EFF2  F024         	goto	i2u921_40
 19182  0049E0                     i2u921_41:
 19183  0049E0  EF0F  F025         	goto	i2l7843
 19184  0049E4                     i2u921_40:
 19185  0049E4  EF00  F025         	goto	i2l7841
 19186  0049E8                     i2l7837:
 19187                           
 19188                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
 19189  0049E8  0E00               	movlw	0
 19190  0049EA  6E04               	movwf	(i2fputc@c+1)^0,c
 19191  0049EC  0E20               	movlw	32
 19192  0049EE  6E03               	movwf	i2fputc@c^0,c
 19193  0049F0  C00C  F005         	movff	i2stoa@fp,i2fputc@fp
 19194  0049F4  C00D  F006         	movff	i2stoa@fp+1,i2fputc@fp+1
 19195  0049F8  ECAA  F02C         	call	i2_fputc	;wreg free
 19196  0049FC                     
 19197                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
 19198  0049FC  4A20               	infsnz	i2stoa@l^0,f,c
 19199  0049FE  2A21               	incf	(i2stoa@l+1)^0,f,c
 19200  004A00                     i2l7841:
 19201                           
 19202                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
 19203  004A00  501A               	movf	i2stoa@w^0,w,c
 19204  004A02  5C20               	subwf	i2stoa@l^0,w,c
 19205  004A04  5021               	movf	(i2stoa@l+1)^0,w,c
 19206  004A06  0A80               	xorlw	128
 19207  004A08  6E10               	movwf	??i2_stoa^0,c
 19208  004A0A  501B               	movf	(i2stoa@w+1)^0,w,c
 19209  004A0C  0A80               	xorlw	128
 19210  004A0E  5810               	subwfb	??i2_stoa^0,w,c
 19211  004A10  A0D8               	btfss	status,0,c
 19212  004A12  EF0D  F025         	goto	i2u922_41
 19213  004A16  EF0F  F025         	goto	i2u922_40
 19214  004A1A                     i2u922_41:
 19215  004A1A  EFF4  F024         	goto	i2l7837
 19216  004A1E                     i2u922_40:
 19217  004A1E                     i2l7843:
 19218                           
 19219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
 19220  004A1E  0E00               	movlw	0
 19221  004A20  6E19               	movwf	(i2stoa@i+1)^0,c
 19222  004A22  0E00               	movlw	0
 19223  004A24  6E18               	movwf	i2stoa@i^0,c
 19224                           
 19225                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 19226  004A26  EF28  F025         	goto	i2l7851
 19227  004A2A                     i2l7845:
 19228                           
 19229                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
 19230  004A2A  C01C  FFD9         	movff	i2stoa@cp,fsr2l
 19231  004A2E  C01D  FFDA         	movff	i2stoa@cp+1,fsr2h
 19232  004A32  50DF               	movf	indf2,w,c
 19233  004A34  6E10               	movwf	??i2_stoa^0,c
 19234  004A36  5010               	movf	??i2_stoa^0,w,c
 19235  004A38  6E03               	movwf	i2fputc@c^0,c
 19236  004A3A  6A04               	clrf	(i2fputc@c+1)^0,c
 19237  004A3C  C00C  F005         	movff	i2stoa@fp,i2fputc@fp
 19238  004A40  C00D  F006         	movff	i2stoa@fp+1,i2fputc@fp+1
 19239  004A44  ECAA  F02C         	call	i2_fputc	;wreg free
 19240  004A48                     
 19241                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
 19242  004A48  4A1C               	infsnz	i2stoa@cp^0,f,c
 19243  004A4A  2A1D               	incf	(i2stoa@cp+1)^0,f,c
 19244  004A4C                     
 19245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
 19246  004A4C  4A18               	infsnz	i2stoa@i^0,f,c
 19247  004A4E  2A19               	incf	(i2stoa@i+1)^0,f,c
 19248  004A50                     i2l7851:
 19249                           
 19250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 19251  004A50  501E               	movf	i2stoa@p^0,w,c
 19252  004A52  5C18               	subwf	i2stoa@i^0,w,c
 19253  004A54  5019               	movf	(i2stoa@i+1)^0,w,c
 19254  004A56  0A80               	xorlw	128
 19255  004A58  6E10               	movwf	??i2_stoa^0,c
 19256  004A5A  501F               	movf	(i2stoa@p+1)^0,w,c
 19257  004A5C  0A80               	xorlw	128
 19258  004A5E  5810               	subwfb	??i2_stoa^0,w,c
 19259  004A60  A0D8               	btfss	status,0,c
 19260  004A62  EF35  F025         	goto	i2u923_41
 19261  004A66  EF37  F025         	goto	i2u923_40
 19262  004A6A                     i2u923_41:
 19263  004A6A  EF15  F025         	goto	i2l7845
 19264  004A6E                     i2u923_40:
 19265  004A6E                     
 19266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
 19267  004A6E  0100               	movlb	0	; () banked
 19268  004A70  A1B9               	btfss	_flags& (0+255),0,b
 19269  004A72  EF3D  F025         	goto	i2u924_41
 19270  004A76  EF3F  F025         	goto	i2u924_40
 19271  004A7A                     i2u924_41:
 19272  004A7A  EF5C  F025         	goto	i2l789
 19273  004A7E                     i2u924_40:
 19274  004A7E  EF4D  F025         	goto	i2l7859
 19275  004A82                     i2l7855:
 19276                           
 19277                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
 19278  004A82  0E00               	movlw	0
 19279  004A84  6E04               	movwf	(i2fputc@c+1)^0,c
 19280  004A86  0E20               	movlw	32
 19281  004A88  6E03               	movwf	i2fputc@c^0,c
 19282  004A8A  C00C  F005         	movff	i2stoa@fp,i2fputc@fp
 19283  004A8E  C00D  F006         	movff	i2stoa@fp+1,i2fputc@fp+1
 19284  004A92  ECAA  F02C         	call	i2_fputc	;wreg free
 19285  004A96                     
 19286                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
 19287  004A96  4A20               	infsnz	i2stoa@l^0,f,c
 19288  004A98  2A21               	incf	(i2stoa@l+1)^0,f,c
 19289  004A9A                     i2l7859:
 19290                           
 19291                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
 19292  004A9A  501A               	movf	i2stoa@w^0,w,c
 19293  004A9C  5C20               	subwf	i2stoa@l^0,w,c
 19294  004A9E  5021               	movf	(i2stoa@l+1)^0,w,c
 19295  004AA0  0A80               	xorlw	128
 19296  004AA2  6E10               	movwf	??i2_stoa^0,c
 19297  004AA4  501B               	movf	(i2stoa@w+1)^0,w,c
 19298  004AA6  0A80               	xorlw	128
 19299  004AA8  5810               	subwfb	??i2_stoa^0,w,c
 19300  004AAA  A0D8               	btfss	status,0,c
 19301  004AAC  EF5A  F025         	goto	i2u925_41
 19302  004AB0  EF5C  F025         	goto	i2u925_40
 19303  004AB4                     i2u925_41:
 19304  004AB4  EF41  F025         	goto	i2l7855
 19305  004AB8                     i2u925_40:
 19306  004AB8                     i2l789:
 19307                           
 19308                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
 19309  004AB8  C020  F00C         	movff	i2stoa@l,?i2_stoa
 19310  004ABC  C021  F00D         	movff	i2stoa@l+1,?i2_stoa+1
 19311  004AC0  0012               	return		;funcret
 19312  004AC2                     __end_ofi2_stoa:
 19313                           	opt callstack 0
 19314                           
 19315 ;; *************** function i2_otoa *****************
 19316 ;; Defined at:
 19317 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 19318 ;; Parameters:    Size  Location     Type
 19319 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 19320 ;;		 -> vsnprintf@f(6), NULL(0), 
 19321 ;;  d               8   31[COMRAM] unsigned long long 
 19322 ;; Auto vars:     Size  Location     Type
 19323 ;;  otoa            8   53[COMRAM] unsigned long long 
 19324 ;;  otoa            2   61[COMRAM] int 
 19325 ;;  otoa            2   51[COMRAM] int 
 19326 ;;  otoa            2   49[COMRAM] int 
 19327 ;;  otoa            2   47[COMRAM] int 
 19328 ;; Return value:  Size  Location     Type
 19329 ;;                  2   29[COMRAM] int 
 19330 ;; Registers used:
 19331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19332 ;; Tracked objects:
 19333 ;;		On entry : 0/0
 19334 ;;		On exit  : 0/0
 19335 ;;		Unchanged: 0/0
 19336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19337 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19338 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19339 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19340 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19341 ;;Total ram usage:       34 bytes
 19342 ;; Hardware stack levels used:    1
 19343 ;; Hardware stack levels required when called:    5
 19344 ;; This function calls:
 19345 ;;		i2_pad
 19346 ;; This function is called by:
 19347 ;;		i2_vfpfcnvrt
 19348 ;; This function uses a non-reentrant model
 19349 ;;
 19350                           
 19351                           	psect	text84
 19352  0042AE                     __ptext84:
 19353                           	opt callstack 0
 19354  0042AE                     i2_otoa:
 19355                           	opt callstack 8
 19356  0042AE                     
 19357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
 19358  0042AE  0100               	movlb	0	; () banked
 19359  0042B0  BFB8               	btfsc	(_prec+1)& (0+255),7,b
 19360  0042B2  EF5D  F021         	goto	i2u907_41
 19361  0042B6  EF5F  F021         	goto	i2u907_40
 19362  0042BA                     i2u907_41:
 19363  0042BA  EF60  F021         	goto	i2l7775
 19364  0042BE                     i2u907_40:
 19365  0042BE                     
 19366                           ; BSR set to: 0
 19367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
 19368  0042BE  93B9               	bcf	_flags& (0+255),1,b
 19369  0042C0                     i2l7775:
 19370                           
 19371                           ; BSR set to: 0
 19372                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
 19373  0042C0  BFB8               	btfsc	(_prec+1)& (0+255),7,b
 19374  0042C2  EF6D  F021         	goto	i2u908_40
 19375  0042C6  51B8               	movf	(_prec+1)& (0+255),w,b
 19376  0042C8  E106               	bnz	i2u908_41
 19377  0042CA  05B7               	decf	_prec& (0+255),w,b
 19378  0042CC  B0D8               	btfsc	status,0,c
 19379  0042CE  EF6B  F021         	goto	i2u908_41
 19380  0042D2  EF6D  F021         	goto	i2u908_40
 19381  0042D6                     i2u908_41:
 19382  0042D6  EF73  F021         	goto	i2l759
 19383  0042DA                     i2u908_40:
 19384  0042DA                     
 19385                           ; BSR set to: 0
 19386  0042DA  0E00               	movlw	0
 19387  0042DC  6E31               	movwf	(i2otoa@p+1)^0,c
 19388  0042DE  0E01               	movlw	1
 19389  0042E0  6E30               	movwf	i2otoa@p^0,c
 19390  0042E2  EF77  F021         	goto	i2l761
 19391  0042E6                     i2l759:
 19392                           
 19393                           ; BSR set to: 0
 19394  0042E6  C0B7  F030         	movff	_prec,i2otoa@p
 19395  0042EA  C0B8  F031         	movff	_prec+1,i2otoa@p+1
 19396  0042EE                     i2l761:
 19397                           
 19398                           ; BSR set to: 0
 19399                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
 19400  0042EE  C0B5  F034         	movff	_width,i2otoa@w
 19401  0042F2  C0B6  F035         	movff	_width+1,i2otoa@w+1
 19402                           
 19403                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
 19404  0042F6  C020  F036         	movff	i2otoa@d,i2otoa@n
 19405  0042FA  C021  F037         	movff	i2otoa@d+1,i2otoa@n+1
 19406  0042FE  C022  F038         	movff	i2otoa@d+2,i2otoa@n+2
 19407  004302  C023  F039         	movff	i2otoa@d+3,i2otoa@n+3
 19408  004306  C024  F03A         	movff	i2otoa@d+4,i2otoa@n+4
 19409  00430A  C025  F03B         	movff	i2otoa@d+5,i2otoa@n+5
 19410  00430E  C026  F03C         	movff	i2otoa@d+6,i2otoa@n+6
 19411  004312  C027  F03D         	movff	i2otoa@d+7,i2otoa@n+7
 19412  004316                     
 19413                           ; BSR set to: 0
 19414                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
 19415  004316  0E00               	movlw	0
 19416  004318  6E3F               	movwf	(i2otoa@i+1)^0,c
 19417  00431A  0E1F               	movlw	31
 19418  00431C  6E3E               	movwf	i2otoa@i^0,c
 19419  00431E                     
 19420                           ; BSR set to: 0
 19421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
 19422  00431E  0E00               	movlw	0
 19423  004320  0101               	movlb	1	; () banked
 19424  004322  6FA8               	movwf	(_dbuf+31)& (0+255),b
 19425  004324                     
 19426                           ; BSR set to: 1
 19427                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
 19428  004324  0E00               	movlw	0
 19429  004326  6E33               	movwf	(i2otoa@t+1)^0,c
 19430  004328  0E00               	movlw	0
 19431  00432A  6E32               	movwf	i2otoa@t^0,c
 19432                           
 19433                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19434  00432C  EFDD  F021         	goto	i2l7797
 19435  004330                     i2l7785:
 19436                           
 19437                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
 19438  004330  063E               	decf	i2otoa@i^0,f,c
 19439  004332  A0D8               	btfss	status,0,c
 19440  004334  063F               	decf	(i2otoa@i+1)^0,f,c
 19441  004336                     
 19442                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
 19443  004336  0E07               	movlw	7
 19444  004338  1436               	andwf	i2otoa@n^0,w,c
 19445  00433A  6E32               	movwf	i2otoa@t^0,c
 19446  00433C  6A33               	clrf	(i2otoa@t+1)^0,c
 19447  00433E                     
 19448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
 19449  00433E  0E89               	movlw	low _dbuf
 19450  004340  243E               	addwf	i2otoa@i^0,w,c
 19451  004342  6ED9               	movwf	fsr2l,c
 19452  004344  0E01               	movlw	high _dbuf
 19453  004346  203F               	addwfc	(i2otoa@i+1)^0,w,c
 19454  004348  6EDA               	movwf	fsr2h,c
 19455  00434A  5032               	movf	i2otoa@t^0,w,c
 19456  00434C  0F30               	addlw	48
 19457  00434E  6EDF               	movwf	indf2,c
 19458  004350                     
 19459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
 19460  004350  0630               	decf	i2otoa@p^0,f,c
 19461  004352  A0D8               	btfss	status,0,c
 19462  004354  0631               	decf	(i2otoa@p+1)^0,f,c
 19463  004356                     
 19464                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
 19465  004356  0634               	decf	i2otoa@w^0,f,c
 19466  004358  A0D8               	btfss	status,0,c
 19467  00435A  0635               	decf	(i2otoa@w+1)^0,f,c
 19468  00435C                     
 19469                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
 19470  00435C  C036  F028         	movff	i2otoa@n,??i2_otoa
 19471  004360  C037  F029         	movff	i2otoa@n+1,??i2_otoa+1
 19472  004364  C038  F02A         	movff	i2otoa@n+2,??i2_otoa+2
 19473  004368  C039  F02B         	movff	i2otoa@n+3,??i2_otoa+3
 19474  00436C  C03A  F02C         	movff	i2otoa@n+4,??i2_otoa+4
 19475  004370  C03B  F02D         	movff	i2otoa@n+5,??i2_otoa+5
 19476  004374  C03C  F02E         	movff	i2otoa@n+6,??i2_otoa+6
 19477  004378  C03D  F02F         	movff	i2otoa@n+7,??i2_otoa+7
 19478  00437C  0E04               	movlw	4
 19479  00437E  EFCA  F021         	goto	i2u909_40
 19480  004382                     i2u909_45:
 19481  004382  90D8               	bcf	status,0,c
 19482  004384  322F               	rrcf	(??i2_otoa+7)^0,f,c
 19483  004386  322E               	rrcf	(??i2_otoa+6)^0,f,c
 19484  004388  322D               	rrcf	(??i2_otoa+5)^0,f,c
 19485  00438A  322C               	rrcf	(??i2_otoa+4)^0,f,c
 19486  00438C  322B               	rrcf	(??i2_otoa+3)^0,f,c
 19487  00438E  322A               	rrcf	(??i2_otoa+2)^0,f,c
 19488  004390  3229               	rrcf	(??i2_otoa+1)^0,f,c
 19489  004392  3228               	rrcf	??i2_otoa^0,f,c
 19490  004394                     i2u909_40:
 19491  004394  2EE8               	decfsz	wreg,f,c
 19492  004396  EFC1  F021         	goto	i2u909_45
 19493  00439A  C028  F036         	movff	??i2_otoa,i2otoa@n
 19494  00439E  C029  F037         	movff	??i2_otoa+1,i2otoa@n+1
 19495  0043A2  C02A  F038         	movff	??i2_otoa+2,i2otoa@n+2
 19496  0043A6  C02B  F039         	movff	??i2_otoa+3,i2otoa@n+3
 19497  0043AA  C02C  F03A         	movff	??i2_otoa+4,i2otoa@n+4
 19498  0043AE  C02D  F03B         	movff	??i2_otoa+5,i2otoa@n+5
 19499  0043B2  C02E  F03C         	movff	??i2_otoa+6,i2otoa@n+6
 19500  0043B6  C02F  F03D         	movff	??i2_otoa+7,i2otoa@n+7
 19501  0043BA                     i2l7797:
 19502                           
 19503                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19504  0043BA  BE3F               	btfsc	(i2otoa@i+1)^0,7,c
 19505  0043BC  EFE8  F021         	goto	i2u910_41
 19506  0043C0  503F               	movf	(i2otoa@i+1)^0,w,c
 19507  0043C2  E108               	bnz	i2u910_40
 19508  0043C4  043E               	decf	i2otoa@i^0,w,c
 19509  0043C6  A0D8               	btfss	status,0,c
 19510  0043C8  EFE8  F021         	goto	i2u910_41
 19511  0043CC  EFEA  F021         	goto	i2u910_40
 19512  0043D0                     i2u910_41:
 19513  0043D0  EF1B  F022         	goto	i2l768
 19514  0043D4                     i2u910_40:
 19515  0043D4  5036               	movf	i2otoa@n^0,w,c
 19516  0043D6  1037               	iorwf	(i2otoa@n+1)^0,w,c
 19517  0043D8  1038               	iorwf	(i2otoa@n+2)^0,w,c
 19518  0043DA  1039               	iorwf	(i2otoa@n+3)^0,w,c
 19519  0043DC  103A               	iorwf	(i2otoa@n+4)^0,w,c
 19520  0043DE  103B               	iorwf	(i2otoa@n+5)^0,w,c
 19521  0043E0  103C               	iorwf	(i2otoa@n+6)^0,w,c
 19522  0043E2  103D               	iorwf	(i2otoa@n+7)^0,w,c
 19523  0043E4  A4D8               	btfss	status,2,c
 19524  0043E6  EFF7  F021         	goto	i2u911_41
 19525  0043EA  EFF9  F021         	goto	i2u911_40
 19526  0043EE                     i2u911_41:
 19527  0043EE  EF98  F021         	goto	i2l7785
 19528  0043F2                     i2u911_40:
 19529  0043F2  BE31               	btfsc	(i2otoa@p+1)^0,7,c
 19530  0043F4  EF06  F022         	goto	i2u912_40
 19531  0043F8  5031               	movf	(i2otoa@p+1)^0,w,c
 19532  0043FA  E106               	bnz	i2u912_41
 19533  0043FC  0430               	decf	i2otoa@p^0,w,c
 19534  0043FE  B0D8               	btfsc	status,0,c
 19535  004400  EF04  F022         	goto	i2u912_41
 19536  004404  EF06  F022         	goto	i2u912_40
 19537  004408                     i2u912_41:
 19538  004408  EF98  F021         	goto	i2l7785
 19539  00440C                     i2u912_40:
 19540  00440C  BE35               	btfsc	(i2otoa@w+1)^0,7,c
 19541  00440E  EF11  F022         	goto	i2u913_41
 19542  004412  5035               	movf	(i2otoa@w+1)^0,w,c
 19543  004414  E108               	bnz	i2u913_40
 19544  004416  0434               	decf	i2otoa@w^0,w,c
 19545  004418  A0D8               	btfss	status,0,c
 19546  00441A  EF11  F022         	goto	i2u913_41
 19547  00441E  EF13  F022         	goto	i2u913_40
 19548  004422                     i2u913_41:
 19549  004422  EF1B  F022         	goto	i2l768
 19550  004426                     i2u913_40:
 19551  004426  0100               	movlb	0	; () banked
 19552  004428  B3B9               	btfsc	_flags& (0+255),1,b
 19553  00442A  EF19  F022         	goto	i2u914_41
 19554  00442E  EF1B  F022         	goto	i2u914_40
 19555  004432                     i2u914_41:
 19556  004432  EF98  F021         	goto	i2l7785
 19557  004436                     i2u914_40:
 19558  004436                     i2l768:
 19559                           
 19560                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
 19561  004436  0100               	movlb	0	; () banked
 19562  004438  A9B9               	btfss	_flags& (0+255),4,b
 19563  00443A  EF21  F022         	goto	i2u915_41
 19564  00443E  EF23  F022         	goto	i2u915_40
 19565  004442                     i2u915_41:
 19566  004442  EF3A  F022         	goto	i2l7815
 19567  004446                     i2u915_40:
 19568  004446                     
 19569                           ; BSR set to: 0
 19570  004446  5032               	movf	i2otoa@t^0,w,c
 19571  004448  1033               	iorwf	(i2otoa@t+1)^0,w,c
 19572  00444A  B4D8               	btfsc	status,2,c
 19573  00444C  EF2A  F022         	goto	i2u916_41
 19574  004450  EF2C  F022         	goto	i2u916_40
 19575  004454                     i2u916_41:
 19576  004454  EF3A  F022         	goto	i2l7815
 19577  004458                     i2u916_40:
 19578  004458                     
 19579                           ; BSR set to: 0
 19580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
 19581  004458  063E               	decf	i2otoa@i^0,f,c
 19582  00445A  A0D8               	btfss	status,0,c
 19583  00445C  063F               	decf	(i2otoa@i+1)^0,f,c
 19584  00445E                     
 19585                           ; BSR set to: 0
 19586                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
 19587  00445E  0E89               	movlw	low _dbuf
 19588  004460  243E               	addwf	i2otoa@i^0,w,c
 19589  004462  6ED9               	movwf	fsr2l,c
 19590  004464  0E01               	movlw	high _dbuf
 19591  004466  203F               	addwfc	(i2otoa@i+1)^0,w,c
 19592  004468  6EDA               	movwf	fsr2h,c
 19593  00446A  0E30               	movlw	48
 19594  00446C  6EDF               	movwf	indf2,c
 19595  00446E                     
 19596                           ; BSR set to: 0
 19597                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
 19598  00446E  0634               	decf	i2otoa@w^0,f,c
 19599  004470  A0D8               	btfss	status,0,c
 19600  004472  0635               	decf	(i2otoa@w+1)^0,f,c
 19601  004474                     i2l7815:
 19602                           
 19603                           ; BSR set to: 0
 19604                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
 19605  004474  C01E  F013         	movff	i2otoa@fp,i2pad@fp
 19606  004478  C01F  F014         	movff	i2otoa@fp+1,i2pad@fp+1
 19607  00447C  0E89               	movlw	low _dbuf
 19608  00447E  243E               	addwf	i2otoa@i^0,w,c
 19609  004480  6E15               	movwf	i2pad@buf^0,c
 19610  004482  0E01               	movlw	high _dbuf
 19611  004484  203F               	addwfc	(i2otoa@i+1)^0,w,c
 19612  004486  6E16               	movwf	(i2pad@buf+1)^0,c
 19613  004488  C034  F017         	movff	i2otoa@w,i2pad@p
 19614  00448C  C035  F018         	movff	i2otoa@w+1,i2pad@p+1
 19615  004490  EC0F  F02D         	call	i2_pad	;wreg free
 19616  004494  C013  F01E         	movff	?i2_pad,?i2_otoa
 19617  004498  C014  F01F         	movff	?i2_pad+1,?i2_otoa+1
 19618  00449C  0012               	return		;funcret
 19619  00449E                     __end_ofi2_otoa:
 19620                           	opt callstack 0
 19621                           
 19622 ;; *************** function i2_dtoa *****************
 19623 ;; Defined at:
 19624 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 19625 ;; Parameters:    Size  Location     Type
 19626 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 19627 ;;		 -> vsnprintf@f(6), NULL(0), 
 19628 ;;  d               8   31[COMRAM] long long 
 19629 ;; Auto vars:     Size  Location     Type
 19630 ;;  dtoa            8   55[COMRAM] long long 
 19631 ;;  dtoa            2   63[COMRAM] int 
 19632 ;;  dtoa            2   53[COMRAM] int 
 19633 ;;  dtoa            2   51[COMRAM] int 
 19634 ;;  dtoa            2   49[COMRAM] int 
 19635 ;; Return value:  Size  Location     Type
 19636 ;;                  2   29[COMRAM] int 
 19637 ;; Registers used:
 19638 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19639 ;; Tracked objects:
 19640 ;;		On entry : 0/0
 19641 ;;		On exit  : 0/0
 19642 ;;		Unchanged: 0/0
 19643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19644 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19645 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19646 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19647 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19648 ;;Total ram usage:       36 bytes
 19649 ;; Hardware stack levels used:    1
 19650 ;; Hardware stack levels required when called:    5
 19651 ;; This function calls:
 19652 ;;		i2___aodiv
 19653 ;;		i2___aomod
 19654 ;;		i2_abs
 19655 ;;		i2_pad
 19656 ;; This function is called by:
 19657 ;;		i2_vfpfcnvrt
 19658 ;; This function uses a non-reentrant model
 19659 ;;
 19660                           
 19661                           	psect	text85
 19662  003002                     __ptext85:
 19663                           	opt callstack 0
 19664  003002                     i2_dtoa:
 19665                           	opt callstack 8
 19666  003002                     
 19667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 19668  003002  C020  F038         	movff	i2dtoa@d,i2dtoa@n
 19669  003006  C021  F039         	movff	i2dtoa@d+1,i2dtoa@n+1
 19670  00300A  C022  F03A         	movff	i2dtoa@d+2,i2dtoa@n+2
 19671  00300E  C023  F03B         	movff	i2dtoa@d+3,i2dtoa@n+3
 19672  003012  C024  F03C         	movff	i2dtoa@d+4,i2dtoa@n+4
 19673  003016  C025  F03D         	movff	i2dtoa@d+5,i2dtoa@n+5
 19674  00301A  C026  F03E         	movff	i2dtoa@d+6,i2dtoa@n+6
 19675  00301E  C027  F03F         	movff	i2dtoa@d+7,i2dtoa@n+7
 19676  003022                     
 19677                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 19678  003022  BE3F               	btfsc	(i2dtoa@n+7)^0,7,c
 19679  003024  EF16  F018         	goto	i2u892_41
 19680  003028  EF19  F018         	goto	i2u892_40
 19681  00302C                     i2u892_41:
 19682  00302C  0E01               	movlw	1
 19683  00302E  EF1A  F018         	goto	i2u893_40
 19684  003032                     i2u892_40:
 19685  003032  0E00               	movlw	0
 19686  003034                     i2u893_40:
 19687  003034  6E36               	movwf	i2dtoa@s^0,c
 19688  003036  6A37               	clrf	(i2dtoa@s+1)^0,c
 19689                           
 19690                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 19691  003038  5036               	movf	i2dtoa@s^0,w,c
 19692  00303A  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 19693  00303C  B4D8               	btfsc	status,2,c
 19694  00303E  EF23  F018         	goto	i2u894_41
 19695  003042  EF25  F018         	goto	i2u894_40
 19696  003046                     i2u894_41:
 19697  003046  EF35  F018         	goto	i2l7715
 19698  00304A                     i2u894_40:
 19699  00304A                     
 19700                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 19701  00304A  1E3F               	comf	(i2dtoa@n+7)^0,f,c
 19702  00304C  1E3E               	comf	(i2dtoa@n+6)^0,f,c
 19703  00304E  1E3D               	comf	(i2dtoa@n+5)^0,f,c
 19704  003050  1E3C               	comf	(i2dtoa@n+4)^0,f,c
 19705  003052  1E3B               	comf	(i2dtoa@n+3)^0,f,c
 19706  003054  1E3A               	comf	(i2dtoa@n+2)^0,f,c
 19707  003056  1E39               	comf	(i2dtoa@n+1)^0,f,c
 19708  003058  6C38               	negf	i2dtoa@n^0,c
 19709  00305A  0E00               	movlw	0
 19710  00305C  2239               	addwfc	(i2dtoa@n+1)^0,f,c
 19711  00305E  223A               	addwfc	(i2dtoa@n+2)^0,f,c
 19712  003060  223B               	addwfc	(i2dtoa@n+3)^0,f,c
 19713  003062  223C               	addwfc	(i2dtoa@n+4)^0,f,c
 19714  003064  223D               	addwfc	(i2dtoa@n+5)^0,f,c
 19715  003066  223E               	addwfc	(i2dtoa@n+6)^0,f,c
 19716  003068  223F               	addwfc	(i2dtoa@n+7)^0,f,c
 19717  00306A                     i2l7715:
 19718                           
 19719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 19720  00306A  0100               	movlb	0	; () banked
 19721  00306C  BFB8               	btfsc	(_prec+1)& (0+255),7,b
 19722  00306E  EF3B  F018         	goto	i2u895_41
 19723  003072  EF3D  F018         	goto	i2u895_40
 19724  003076                     i2u895_41:
 19725  003076  EF3E  F018         	goto	i2l7719
 19726  00307A                     i2u895_40:
 19727  00307A                     
 19728                           ; BSR set to: 0
 19729                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 19730  00307A  93B9               	bcf	_flags& (0+255),1,b
 19731  00307C                     i2l7719:
 19732                           
 19733                           ; BSR set to: 0
 19734                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 19735  00307C  BFB8               	btfsc	(_prec+1)& (0+255),7,b
 19736  00307E  EF4B  F018         	goto	i2u896_40
 19737  003082  51B8               	movf	(_prec+1)& (0+255),w,b
 19738  003084  E106               	bnz	i2u896_41
 19739  003086  05B7               	decf	_prec& (0+255),w,b
 19740  003088  B0D8               	btfsc	status,0,c
 19741  00308A  EF49  F018         	goto	i2u896_41
 19742  00308E  EF4B  F018         	goto	i2u896_40
 19743  003092                     i2u896_41:
 19744  003092  EF51  F018         	goto	i2l734
 19745  003096                     i2u896_40:
 19746  003096                     
 19747                           ; BSR set to: 0
 19748  003096  0E00               	movlw	0
 19749  003098  6E33               	movwf	(i2dtoa@p+1)^0,c
 19750  00309A  0E01               	movlw	1
 19751  00309C  6E32               	movwf	i2dtoa@p^0,c
 19752  00309E  EF55  F018         	goto	i2l736
 19753  0030A2                     i2l734:
 19754                           
 19755                           ; BSR set to: 0
 19756  0030A2  C0B7  F032         	movff	_prec,i2dtoa@p
 19757  0030A6  C0B8  F033         	movff	_prec+1,i2dtoa@p+1
 19758  0030AA                     i2l736:
 19759                           
 19760                           ; BSR set to: 0
 19761                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 19762  0030AA  C0B5  F034         	movff	_width,i2dtoa@w
 19763  0030AE  C0B6  F035         	movff	_width+1,i2dtoa@w+1
 19764  0030B2                     
 19765                           ; BSR set to: 0
 19766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 19767  0030B2  5036               	movf	i2dtoa@s^0,w,c
 19768  0030B4  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 19769  0030B6  A4D8               	btfss	status,2,c
 19770  0030B8  EF60  F018         	goto	i2u897_41
 19771  0030BC  EF62  F018         	goto	i2u897_40
 19772  0030C0                     i2u897_41:
 19773  0030C0  EF69  F018         	goto	i2l7727
 19774  0030C4                     i2u897_40:
 19775  0030C4                     
 19776                           ; BSR set to: 0
 19777  0030C4  A5B9               	btfss	_flags& (0+255),2,b
 19778  0030C6  EF67  F018         	goto	i2u898_41
 19779  0030CA  EF69  F018         	goto	i2u898_40
 19780  0030CE                     i2u898_41:
 19781  0030CE  EF6C  F018         	goto	i2l7729
 19782  0030D2                     i2u898_40:
 19783  0030D2                     i2l7727:
 19784                           
 19785                           ; BSR set to: 0
 19786                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 19787  0030D2  0634               	decf	i2dtoa@w^0,f,c
 19788  0030D4  A0D8               	btfss	status,0,c
 19789  0030D6  0635               	decf	(i2dtoa@w+1)^0,f,c
 19790  0030D8                     i2l7729:
 19791                           
 19792                           ; BSR set to: 0
 19793                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 19794  0030D8  0E00               	movlw	0
 19795  0030DA  6E41               	movwf	(i2dtoa@i+1)^0,c
 19796  0030DC  0E1F               	movlw	31
 19797  0030DE  6E40               	movwf	i2dtoa@i^0,c
 19798  0030E0                     
 19799                           ; BSR set to: 0
 19800                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 19801  0030E0  0E00               	movlw	0
 19802  0030E2  0101               	movlb	1	; () banked
 19803  0030E4  6FA8               	movwf	(_dbuf+31)& (0+255),b
 19804                           
 19805                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19806  0030E6  EFF1  F018         	goto	i2l7743
 19807  0030EA                     i2l7733:
 19808                           
 19809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 19810  0030EA  0640               	decf	i2dtoa@i^0,f,c
 19811  0030EC  A0D8               	btfss	status,0,c
 19812  0030EE  0641               	decf	(i2dtoa@i+1)^0,f,c
 19813  0030F0                     
 19814                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 19815  0030F0  0E89               	movlw	low _dbuf
 19816  0030F2  2440               	addwf	i2dtoa@i^0,w,c
 19817  0030F4  6ED9               	movwf	fsr2l,c
 19818  0030F6  0E01               	movlw	high _dbuf
 19819  0030F8  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 19820  0030FA  6EDA               	movwf	fsr2h,c
 19821  0030FC  C038  F001         	movff	i2dtoa@n,i2___aomod@dividend
 19822  003100  C039  F002         	movff	i2dtoa@n+1,i2___aomod@dividend+1
 19823  003104  C03A  F003         	movff	i2dtoa@n+2,i2___aomod@dividend+2
 19824  003108  C03B  F004         	movff	i2dtoa@n+3,i2___aomod@dividend+3
 19825  00310C  C03C  F005         	movff	i2dtoa@n+4,i2___aomod@dividend+4
 19826  003110  C03D  F006         	movff	i2dtoa@n+5,i2___aomod@dividend+5
 19827  003114  C03E  F007         	movff	i2dtoa@n+6,i2___aomod@dividend+6
 19828  003118  C03F  F008         	movff	i2dtoa@n+7,i2___aomod@dividend+7
 19829  00311C  0E0A               	movlw	10
 19830  00311E  6E09               	movwf	i2___aomod@divisor^0,c
 19831  003120  0E00               	movlw	0
 19832  003122  6E0A               	movwf	(i2___aomod@divisor+1)^0,c
 19833  003124  0E00               	movlw	0
 19834  003126  6E0B               	movwf	(i2___aomod@divisor+2)^0,c
 19835  003128  0E00               	movlw	0
 19836  00312A  6E0C               	movwf	(i2___aomod@divisor+3)^0,c
 19837  00312C  0E00               	movlw	0
 19838  00312E  6E0D               	movwf	(i2___aomod@divisor+4)^0,c
 19839  003130  0E00               	movlw	0
 19840  003132  6E0E               	movwf	(i2___aomod@divisor+5)^0,c
 19841  003134  0E00               	movlw	0
 19842  003136  6E0F               	movwf	(i2___aomod@divisor+6)^0,c
 19843  003138  0E00               	movlw	0
 19844  00313A  6E10               	movwf	(i2___aomod@divisor+7)^0,c
 19845  00313C  ECD5  F026         	call	i2___aomod	;wreg free
 19846  003140  C001  F028         	movff	?i2___aomod,??i2_dtoa
 19847  003144  C002  F029         	movff	?i2___aomod+1,??i2_dtoa+1
 19848  003148  C003  F02A         	movff	?i2___aomod+2,??i2_dtoa+2
 19849  00314C  C004  F02B         	movff	?i2___aomod+3,??i2_dtoa+3
 19850  003150  C005  F02C         	movff	?i2___aomod+4,??i2_dtoa+4
 19851  003154  C006  F02D         	movff	?i2___aomod+5,??i2_dtoa+5
 19852  003158  C007  F02E         	movff	?i2___aomod+6,??i2_dtoa+6
 19853  00315C  C008  F02F         	movff	?i2___aomod+7,??i2_dtoa+7
 19854  003160  C028  F013         	movff	??i2_dtoa,i2abs@a
 19855  003164  C02A  F014         	movff	??i2_dtoa+2,i2abs@a+1
 19856  003168  ECD5  F031         	call	i2_abs	;wreg free
 19857  00316C  5013               	movf	?i2_abs^0,w,c
 19858  00316E  0F30               	addlw	48
 19859  003170  6EDF               	movwf	indf2,c
 19860  003172                     
 19861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 19862  003172  0632               	decf	i2dtoa@p^0,f,c
 19863  003174  A0D8               	btfss	status,0,c
 19864  003176  0633               	decf	(i2dtoa@p+1)^0,f,c
 19865  003178                     
 19866                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 19867  003178  0634               	decf	i2dtoa@w^0,f,c
 19868  00317A  A0D8               	btfss	status,0,c
 19869  00317C  0635               	decf	(i2dtoa@w+1)^0,f,c
 19870  00317E                     
 19871                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 19872  00317E  C038  F001         	movff	i2dtoa@n,i2___aodiv@dividend
 19873  003182  C039  F002         	movff	i2dtoa@n+1,i2___aodiv@dividend+1
 19874  003186  C03A  F003         	movff	i2dtoa@n+2,i2___aodiv@dividend+2
 19875  00318A  C03B  F004         	movff	i2dtoa@n+3,i2___aodiv@dividend+3
 19876  00318E  C03C  F005         	movff	i2dtoa@n+4,i2___aodiv@dividend+4
 19877  003192  C03D  F006         	movff	i2dtoa@n+5,i2___aodiv@dividend+5
 19878  003196  C03E  F007         	movff	i2dtoa@n+6,i2___aodiv@dividend+6
 19879  00319A  C03F  F008         	movff	i2dtoa@n+7,i2___aodiv@dividend+7
 19880  00319E  0E0A               	movlw	10
 19881  0031A0  6E09               	movwf	i2___aodiv@divisor^0,c
 19882  0031A2  0E00               	movlw	0
 19883  0031A4  6E0A               	movwf	(i2___aodiv@divisor+1)^0,c
 19884  0031A6  0E00               	movlw	0
 19885  0031A8  6E0B               	movwf	(i2___aodiv@divisor+2)^0,c
 19886  0031AA  0E00               	movlw	0
 19887  0031AC  6E0C               	movwf	(i2___aodiv@divisor+3)^0,c
 19888  0031AE  0E00               	movlw	0
 19889  0031B0  6E0D               	movwf	(i2___aodiv@divisor+4)^0,c
 19890  0031B2  0E00               	movlw	0
 19891  0031B4  6E0E               	movwf	(i2___aodiv@divisor+5)^0,c
 19892  0031B6  0E00               	movlw	0
 19893  0031B8  6E0F               	movwf	(i2___aodiv@divisor+6)^0,c
 19894  0031BA  0E00               	movlw	0
 19895  0031BC  6E10               	movwf	(i2___aodiv@divisor+7)^0,c
 19896  0031BE  ECDA  F023         	call	i2___aodiv	;wreg free
 19897  0031C2  C001  F038         	movff	?i2___aodiv,i2dtoa@n
 19898  0031C6  C002  F039         	movff	?i2___aodiv+1,i2dtoa@n+1
 19899  0031CA  C003  F03A         	movff	?i2___aodiv+2,i2dtoa@n+2
 19900  0031CE  C004  F03B         	movff	?i2___aodiv+3,i2dtoa@n+3
 19901  0031D2  C005  F03C         	movff	?i2___aodiv+4,i2dtoa@n+4
 19902  0031D6  C006  F03D         	movff	?i2___aodiv+5,i2dtoa@n+5
 19903  0031DA  C007  F03E         	movff	?i2___aodiv+6,i2dtoa@n+6
 19904  0031DE  C008  F03F         	movff	?i2___aodiv+7,i2dtoa@n+7
 19905  0031E2                     i2l7743:
 19906                           
 19907                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19908  0031E2  BE41               	btfsc	(i2dtoa@i+1)^0,7,c
 19909  0031E4  EFFC  F018         	goto	i2u899_41
 19910  0031E8  5041               	movf	(i2dtoa@i+1)^0,w,c
 19911  0031EA  E108               	bnz	i2u899_40
 19912  0031EC  0440               	decf	i2dtoa@i^0,w,c
 19913  0031EE  A0D8               	btfss	status,0,c
 19914  0031F0  EFFC  F018         	goto	i2u899_41
 19915  0031F4  EFFE  F018         	goto	i2u899_40
 19916  0031F8                     i2u899_41:
 19917  0031F8  EF2F  F019         	goto	i2l7753
 19918  0031FC                     i2u899_40:
 19919  0031FC  5038               	movf	i2dtoa@n^0,w,c
 19920  0031FE  1039               	iorwf	(i2dtoa@n+1)^0,w,c
 19921  003200  103A               	iorwf	(i2dtoa@n+2)^0,w,c
 19922  003202  103B               	iorwf	(i2dtoa@n+3)^0,w,c
 19923  003204  103C               	iorwf	(i2dtoa@n+4)^0,w,c
 19924  003206  103D               	iorwf	(i2dtoa@n+5)^0,w,c
 19925  003208  103E               	iorwf	(i2dtoa@n+6)^0,w,c
 19926  00320A  103F               	iorwf	(i2dtoa@n+7)^0,w,c
 19927  00320C  A4D8               	btfss	status,2,c
 19928  00320E  EF0B  F019         	goto	i2u900_41
 19929  003212  EF0D  F019         	goto	i2u900_40
 19930  003216                     i2u900_41:
 19931  003216  EF75  F018         	goto	i2l7733
 19932  00321A                     i2u900_40:
 19933  00321A  BE33               	btfsc	(i2dtoa@p+1)^0,7,c
 19934  00321C  EF1A  F019         	goto	i2u901_40
 19935  003220  5033               	movf	(i2dtoa@p+1)^0,w,c
 19936  003222  E106               	bnz	i2u901_41
 19937  003224  0432               	decf	i2dtoa@p^0,w,c
 19938  003226  B0D8               	btfsc	status,0,c
 19939  003228  EF18  F019         	goto	i2u901_41
 19940  00322C  EF1A  F019         	goto	i2u901_40
 19941  003230                     i2u901_41:
 19942  003230  EF75  F018         	goto	i2l7733
 19943  003234                     i2u901_40:
 19944  003234  BE35               	btfsc	(i2dtoa@w+1)^0,7,c
 19945  003236  EF25  F019         	goto	i2u902_41
 19946  00323A  5035               	movf	(i2dtoa@w+1)^0,w,c
 19947  00323C  E108               	bnz	i2u902_40
 19948  00323E  0434               	decf	i2dtoa@w^0,w,c
 19949  003240  A0D8               	btfss	status,0,c
 19950  003242  EF25  F019         	goto	i2u902_41
 19951  003246  EF27  F019         	goto	i2u902_40
 19952  00324A                     i2u902_41:
 19953  00324A  EF2F  F019         	goto	i2l7753
 19954  00324E                     i2u902_40:
 19955  00324E  0100               	movlb	0	; () banked
 19956  003250  B3B9               	btfsc	_flags& (0+255),1,b
 19957  003252  EF2D  F019         	goto	i2u903_41
 19958  003256  EF2F  F019         	goto	i2u903_40
 19959  00325A                     i2u903_41:
 19960  00325A  EF75  F018         	goto	i2l7733
 19961  00325E                     i2u903_40:
 19962  00325E                     i2l7753:
 19963                           
 19964                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 19965  00325E  5036               	movf	i2dtoa@s^0,w,c
 19966  003260  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 19967  003262  A4D8               	btfss	status,2,c
 19968  003264  EF36  F019         	goto	i2u904_41
 19969  003268  EF38  F019         	goto	i2u904_40
 19970  00326C                     i2u904_41:
 19971  00326C  EF40  F019         	goto	i2l7757
 19972  003270                     i2u904_40:
 19973  003270  0100               	movlb	0	; () banked
 19974  003272  A5B9               	btfss	_flags& (0+255),2,b
 19975  003274  EF3E  F019         	goto	i2u905_41
 19976  003278  EF40  F019         	goto	i2u905_40
 19977  00327C                     i2u905_41:
 19978  00327C  EF5E  F019         	goto	i2l7767
 19979  003280                     i2u905_40:
 19980  003280                     i2l7757:
 19981                           
 19982                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 19983  003280  0640               	decf	i2dtoa@i^0,f,c
 19984  003282  A0D8               	btfss	status,0,c
 19985  003284  0641               	decf	(i2dtoa@i+1)^0,f,c
 19986  003286                     
 19987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 19988  003286  5036               	movf	i2dtoa@s^0,w,c
 19989  003288  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 19990  00328A  A4D8               	btfss	status,2,c
 19991  00328C  EF4A  F019         	goto	i2u906_41
 19992  003290  EF4C  F019         	goto	i2u906_40
 19993  003294                     i2u906_41:
 19994  003294  EF52  F019         	goto	i2l7763
 19995  003298                     i2u906_40:
 19996  003298  0E00               	movlw	0
 19997  00329A  6E31               	movwf	(i2_dtoa$1823+1)^0,c
 19998  00329C  0E2B               	movlw	43
 19999  00329E  6E30               	movwf	i2_dtoa$1823^0,c
 20000  0032A0  EF56  F019         	goto	i2l7765
 20001  0032A4                     i2l7763:
 20002  0032A4  0E00               	movlw	0
 20003  0032A6  6E31               	movwf	(i2_dtoa$1823+1)^0,c
 20004  0032A8  0E2D               	movlw	45
 20005  0032AA  6E30               	movwf	i2_dtoa$1823^0,c
 20006  0032AC                     i2l7765:
 20007  0032AC  0E89               	movlw	low _dbuf
 20008  0032AE  2440               	addwf	i2dtoa@i^0,w,c
 20009  0032B0  6ED9               	movwf	fsr2l,c
 20010  0032B2  0E01               	movlw	high _dbuf
 20011  0032B4  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 20012  0032B6  6EDA               	movwf	fsr2h,c
 20013  0032B8  C030  FFDF         	movff	i2_dtoa$1823,indf2
 20014  0032BC                     i2l7767:
 20015                           
 20016                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 20017  0032BC  C01E  F013         	movff	i2dtoa@fp,i2pad@fp
 20018  0032C0  C01F  F014         	movff	i2dtoa@fp+1,i2pad@fp+1
 20019  0032C4  0E89               	movlw	low _dbuf
 20020  0032C6  2440               	addwf	i2dtoa@i^0,w,c
 20021  0032C8  6E15               	movwf	i2pad@buf^0,c
 20022  0032CA  0E01               	movlw	high _dbuf
 20023  0032CC  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 20024  0032CE  6E16               	movwf	(i2pad@buf+1)^0,c
 20025  0032D0  C034  F017         	movff	i2dtoa@w,i2pad@p
 20026  0032D4  C035  F018         	movff	i2dtoa@w+1,i2pad@p+1
 20027  0032D8  EC0F  F02D         	call	i2_pad	;wreg free
 20028  0032DC  C013  F01E         	movff	?i2_pad,?i2_dtoa
 20029  0032E0  C014  F01F         	movff	?i2_pad+1,?i2_dtoa+1
 20030  0032E4  0012               	return		;funcret
 20031  0032E6                     __end_ofi2_dtoa:
 20032                           	opt callstack 0
 20033                           
 20034 ;; *************** function i2_abs *****************
 20035 ;; Defined at:
 20036 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 20037 ;; Parameters:    Size  Location     Type
 20038 ;;  a               2   18[COMRAM] int 
 20039 ;; Auto vars:     Size  Location     Type
 20040 ;;		None
 20041 ;; Return value:  Size  Location     Type
 20042 ;;                  2   18[COMRAM] int 
 20043 ;; Registers used:
 20044 ;;		wreg, status,2, status,0
 20045 ;; Tracked objects:
 20046 ;;		On entry : 0/0
 20047 ;;		On exit  : 0/0
 20048 ;;		Unchanged: 0/0
 20049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20050 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20052 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20053 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20054 ;;Total ram usage:        4 bytes
 20055 ;; Hardware stack levels used:    1
 20056 ;; This function calls:
 20057 ;;		Nothing
 20058 ;; This function is called by:
 20059 ;;		i2_dtoa
 20060 ;; This function uses a non-reentrant model
 20061 ;;
 20062                           
 20063                           	psect	text86
 20064  0063AA                     __ptext86:
 20065                           	opt callstack 0
 20066  0063AA                     i2_abs:
 20067                           	opt callstack 12
 20068  0063AA  BE14               	btfsc	(i2abs@a+1)^0,7,c
 20069  0063AC  EFE2  F031         	goto	i2u875_40
 20070  0063B0  5014               	movf	(i2abs@a+1)^0,w,c
 20071  0063B2  E106               	bnz	i2u875_41
 20072  0063B4  0413               	decf	i2abs@a^0,w,c
 20073  0063B6  B0D8               	btfsc	status,0,c
 20074  0063B8  EFE0  F031         	goto	i2u875_41
 20075  0063BC  EFE2  F031         	goto	i2u875_40
 20076  0063C0                     i2u875_41:
 20077  0063C0  EFF0  F031         	goto	i2l1598
 20078  0063C4                     i2u875_40:
 20079  0063C4  C013  F015         	movff	i2abs@a,??i2_abs
 20080  0063C8  C014  F016         	movff	i2abs@a+1,??i2_abs+1
 20081  0063CC  1E15               	comf	??i2_abs^0,f,c
 20082  0063CE  1E16               	comf	(??i2_abs+1)^0,f,c
 20083  0063D0  4A15               	infsnz	??i2_abs^0,f,c
 20084  0063D2  2A16               	incf	(??i2_abs+1)^0,f,c
 20085  0063D4  C015  F013         	movff	??i2_abs,?i2_abs
 20086  0063D8  C016  F014         	movff	??i2_abs+1,?i2_abs+1
 20087  0063DC  EFF4  F031         	goto	i2l1601
 20088  0063E0                     i2l1598:
 20089  0063E0  C013  F013         	movff	i2abs@a,?i2_abs
 20090  0063E4  C014  F014         	movff	i2abs@a+1,?i2_abs+1
 20091  0063E8                     i2l1601:
 20092  0063E8  0012               	return		;funcret
 20093  0063EA                     __end_ofi2_abs:
 20094                           	opt callstack 0
 20095                           
 20096 ;; *************** function i2___aomod *****************
 20097 ;; Defined at:
 20098 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 20099 ;; Parameters:    Size  Location     Type
 20100 ;;  dividend        8    0[COMRAM] long long 
 20101 ;;  divisor         8    8[COMRAM] long long 
 20102 ;; Auto vars:     Size  Location     Type
 20103 ;;  __aomod         1   17[COMRAM] unsigned char 
 20104 ;;  __aomod         1   16[COMRAM] unsigned char 
 20105 ;; Return value:  Size  Location     Type
 20106 ;;                  8    0[COMRAM] long long 
 20107 ;; Registers used:
 20108 ;;		wreg, status,2, status,0
 20109 ;; Tracked objects:
 20110 ;;		On entry : 0/0
 20111 ;;		On exit  : 0/0
 20112 ;;		Unchanged: 0/0
 20113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20114 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20115 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20117 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20118 ;;Total ram usage:       18 bytes
 20119 ;; Hardware stack levels used:    1
 20120 ;; This function calls:
 20121 ;;		Nothing
 20122 ;; This function is called by:
 20123 ;;		i2_dtoa
 20124 ;; This function uses a non-reentrant model
 20125 ;;
 20126                           
 20127                           	psect	text87
 20128  004DAA                     __ptext87:
 20129                           	opt callstack 0
 20130  004DAA                     i2___aomod:
 20131                           	opt callstack 12
 20132  004DAA  0E00               	movlw	0
 20133  004DAC  6E12               	movwf	i2___aomod@sign^0,c
 20134  004DAE  BE08               	btfsc	(i2___aomod@dividend+7)^0,7,c
 20135  004DB0  EFDE  F026         	goto	i2u862_40
 20136  004DB4  EFDC  F026         	goto	i2u862_41
 20137  004DB8                     i2u862_41:
 20138  004DB8  EFF0  F026         	goto	i2l7569
 20139  004DBC                     i2u862_40:
 20140  004DBC  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
 20141  004DBE  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
 20142  004DC0  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
 20143  004DC2  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
 20144  004DC4  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
 20145  004DC6  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
 20146  004DC8  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
 20147  004DCA  6C01               	negf	i2___aomod@dividend^0,c
 20148  004DCC  0E00               	movlw	0
 20149  004DCE  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
 20150  004DD0  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
 20151  004DD2  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
 20152  004DD4  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
 20153  004DD6  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
 20154  004DD8  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
 20155  004DDA  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
 20156  004DDC  0E01               	movlw	1
 20157  004DDE  6E12               	movwf	i2___aomod@sign^0,c
 20158  004DE0                     i2l7569:
 20159  004DE0  BE10               	btfsc	(i2___aomod@divisor+7)^0,7,c
 20160  004DE2  EFF7  F026         	goto	i2u863_40
 20161  004DE6  EFF5  F026         	goto	i2u863_41
 20162  004DEA                     i2u863_41:
 20163  004DEA  EF07  F027         	goto	i2l7573
 20164  004DEE                     i2u863_40:
 20165  004DEE  1E10               	comf	(i2___aomod@divisor+7)^0,f,c
 20166  004DF0  1E0F               	comf	(i2___aomod@divisor+6)^0,f,c
 20167  004DF2  1E0E               	comf	(i2___aomod@divisor+5)^0,f,c
 20168  004DF4  1E0D               	comf	(i2___aomod@divisor+4)^0,f,c
 20169  004DF6  1E0C               	comf	(i2___aomod@divisor+3)^0,f,c
 20170  004DF8  1E0B               	comf	(i2___aomod@divisor+2)^0,f,c
 20171  004DFA  1E0A               	comf	(i2___aomod@divisor+1)^0,f,c
 20172  004DFC  6C09               	negf	i2___aomod@divisor^0,c
 20173  004DFE  0E00               	movlw	0
 20174  004E00  220A               	addwfc	(i2___aomod@divisor+1)^0,f,c
 20175  004E02  220B               	addwfc	(i2___aomod@divisor+2)^0,f,c
 20176  004E04  220C               	addwfc	(i2___aomod@divisor+3)^0,f,c
 20177  004E06  220D               	addwfc	(i2___aomod@divisor+4)^0,f,c
 20178  004E08  220E               	addwfc	(i2___aomod@divisor+5)^0,f,c
 20179  004E0A  220F               	addwfc	(i2___aomod@divisor+6)^0,f,c
 20180  004E0C  2210               	addwfc	(i2___aomod@divisor+7)^0,f,c
 20181  004E0E                     i2l7573:
 20182  004E0E  5009               	movf	i2___aomod@divisor^0,w,c
 20183  004E10  100A               	iorwf	(i2___aomod@divisor+1)^0,w,c
 20184  004E12  100B               	iorwf	(i2___aomod@divisor+2)^0,w,c
 20185  004E14  100C               	iorwf	(i2___aomod@divisor+3)^0,w,c
 20186  004E16  100D               	iorwf	(i2___aomod@divisor+4)^0,w,c
 20187  004E18  100E               	iorwf	(i2___aomod@divisor+5)^0,w,c
 20188  004E1A  100F               	iorwf	(i2___aomod@divisor+6)^0,w,c
 20189  004E1C  1010               	iorwf	(i2___aomod@divisor+7)^0,w,c
 20190  004E1E  B4D8               	btfsc	status,2,c
 20191  004E20  EF14  F027         	goto	i2u864_41
 20192  004E24  EF16  F027         	goto	i2u864_40
 20193  004E28                     i2u864_41:
 20194  004E28  EF5E  F027         	goto	i2l7589
 20195  004E2C                     i2u864_40:
 20196  004E2C  0E01               	movlw	1
 20197  004E2E  6E11               	movwf	i2___aomod@counter^0,c
 20198  004E30  EF24  F027         	goto	i2l7579
 20199  004E34                     i2l7577:
 20200  004E34  90D8               	bcf	status,0,c
 20201  004E36  3609               	rlcf	i2___aomod@divisor^0,f,c
 20202  004E38  360A               	rlcf	(i2___aomod@divisor+1)^0,f,c
 20203  004E3A  360B               	rlcf	(i2___aomod@divisor+2)^0,f,c
 20204  004E3C  360C               	rlcf	(i2___aomod@divisor+3)^0,f,c
 20205  004E3E  360D               	rlcf	(i2___aomod@divisor+4)^0,f,c
 20206  004E40  360E               	rlcf	(i2___aomod@divisor+5)^0,f,c
 20207  004E42  360F               	rlcf	(i2___aomod@divisor+6)^0,f,c
 20208  004E44  3610               	rlcf	(i2___aomod@divisor+7)^0,f,c
 20209  004E46  2A11               	incf	i2___aomod@counter^0,f,c
 20210  004E48                     i2l7579:
 20211  004E48  AE10               	btfss	(i2___aomod@divisor+7)^0,7,c
 20212  004E4A  EF29  F027         	goto	i2u865_41
 20213  004E4E  EF2B  F027         	goto	i2u865_40
 20214  004E52                     i2u865_41:
 20215  004E52  EF1A  F027         	goto	i2l7577
 20216  004E56                     i2u865_40:
 20217  004E56                     i2l7581:
 20218  004E56  5009               	movf	i2___aomod@divisor^0,w,c
 20219  004E58  5C01               	subwf	i2___aomod@dividend^0,w,c
 20220  004E5A  500A               	movf	(i2___aomod@divisor+1)^0,w,c
 20221  004E5C  5802               	subwfb	(i2___aomod@dividend+1)^0,w,c
 20222  004E5E  500B               	movf	(i2___aomod@divisor+2)^0,w,c
 20223  004E60  5803               	subwfb	(i2___aomod@dividend+2)^0,w,c
 20224  004E62  500C               	movf	(i2___aomod@divisor+3)^0,w,c
 20225  004E64  5804               	subwfb	(i2___aomod@dividend+3)^0,w,c
 20226  004E66  500D               	movf	(i2___aomod@divisor+4)^0,w,c
 20227  004E68  5805               	subwfb	(i2___aomod@dividend+4)^0,w,c
 20228  004E6A  500E               	movf	(i2___aomod@divisor+5)^0,w,c
 20229  004E6C  5806               	subwfb	(i2___aomod@dividend+5)^0,w,c
 20230  004E6E  500F               	movf	(i2___aomod@divisor+6)^0,w,c
 20231  004E70  5807               	subwfb	(i2___aomod@dividend+6)^0,w,c
 20232  004E72  5010               	movf	(i2___aomod@divisor+7)^0,w,c
 20233  004E74  5808               	subwfb	(i2___aomod@dividend+7)^0,w,c
 20234  004E76  A0D8               	btfss	status,0,c
 20235  004E78  EF40  F027         	goto	i2u866_41
 20236  004E7C  EF42  F027         	goto	i2u866_40
 20237  004E80                     i2u866_41:
 20238  004E80  EF52  F027         	goto	i2l7585
 20239  004E84                     i2u866_40:
 20240  004E84  5009               	movf	i2___aomod@divisor^0,w,c
 20241  004E86  5E01               	subwf	i2___aomod@dividend^0,f,c
 20242  004E88  500A               	movf	(i2___aomod@divisor+1)^0,w,c
 20243  004E8A  5A02               	subwfb	(i2___aomod@dividend+1)^0,f,c
 20244  004E8C  500B               	movf	(i2___aomod@divisor+2)^0,w,c
 20245  004E8E  5A03               	subwfb	(i2___aomod@dividend+2)^0,f,c
 20246  004E90  500C               	movf	(i2___aomod@divisor+3)^0,w,c
 20247  004E92  5A04               	subwfb	(i2___aomod@dividend+3)^0,f,c
 20248  004E94  500D               	movf	(i2___aomod@divisor+4)^0,w,c
 20249  004E96  5A05               	subwfb	(i2___aomod@dividend+4)^0,f,c
 20250  004E98  500E               	movf	(i2___aomod@divisor+5)^0,w,c
 20251  004E9A  5A06               	subwfb	(i2___aomod@dividend+5)^0,f,c
 20252  004E9C  500F               	movf	(i2___aomod@divisor+6)^0,w,c
 20253  004E9E  5A07               	subwfb	(i2___aomod@dividend+6)^0,f,c
 20254  004EA0  5010               	movf	(i2___aomod@divisor+7)^0,w,c
 20255  004EA2  5A08               	subwfb	(i2___aomod@dividend+7)^0,f,c
 20256  004EA4                     i2l7585:
 20257  004EA4  90D8               	bcf	status,0,c
 20258  004EA6  3210               	rrcf	(i2___aomod@divisor+7)^0,f,c
 20259  004EA8  320F               	rrcf	(i2___aomod@divisor+6)^0,f,c
 20260  004EAA  320E               	rrcf	(i2___aomod@divisor+5)^0,f,c
 20261  004EAC  320D               	rrcf	(i2___aomod@divisor+4)^0,f,c
 20262  004EAE  320C               	rrcf	(i2___aomod@divisor+3)^0,f,c
 20263  004EB0  320B               	rrcf	(i2___aomod@divisor+2)^0,f,c
 20264  004EB2  320A               	rrcf	(i2___aomod@divisor+1)^0,f,c
 20265  004EB4  3209               	rrcf	i2___aomod@divisor^0,f,c
 20266  004EB6  2E11               	decfsz	i2___aomod@counter^0,f,c
 20267  004EB8  EF2B  F027         	goto	i2l7581
 20268  004EBC                     i2l7589:
 20269  004EBC  5012               	movf	i2___aomod@sign^0,w,c
 20270  004EBE  B4D8               	btfsc	status,2,c
 20271  004EC0  EF64  F027         	goto	i2u867_41
 20272  004EC4  EF66  F027         	goto	i2u867_40
 20273  004EC8                     i2u867_41:
 20274  004EC8  EF76  F027         	goto	i2l7593
 20275  004ECC                     i2u867_40:
 20276  004ECC  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
 20277  004ECE  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
 20278  004ED0  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
 20279  004ED2  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
 20280  004ED4  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
 20281  004ED6  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
 20282  004ED8  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
 20283  004EDA  6C01               	negf	i2___aomod@dividend^0,c
 20284  004EDC  0E00               	movlw	0
 20285  004EDE  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
 20286  004EE0  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
 20287  004EE2  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
 20288  004EE4  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
 20289  004EE6  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
 20290  004EE8  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
 20291  004EEA  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
 20292  004EEC                     i2l7593:
 20293  004EEC  C001  F001         	movff	i2___aomod@dividend,?i2___aomod
 20294  004EF0  C002  F002         	movff	i2___aomod@dividend+1,?i2___aomod+1
 20295  004EF4  C003  F003         	movff	i2___aomod@dividend+2,?i2___aomod+2
 20296  004EF8  C004  F004         	movff	i2___aomod@dividend+3,?i2___aomod+3
 20297  004EFC  C005  F005         	movff	i2___aomod@dividend+4,?i2___aomod+4
 20298  004F00  C006  F006         	movff	i2___aomod@dividend+5,?i2___aomod+5
 20299  004F04  C007  F007         	movff	i2___aomod@dividend+6,?i2___aomod+6
 20300  004F08  C008  F008         	movff	i2___aomod@dividend+7,?i2___aomod+7
 20301  004F0C  0012               	return		;funcret
 20302  004F0E                     __end_ofi2___aomod:
 20303                           	opt callstack 0
 20304                           
 20305 ;; *************** function i2___aodiv *****************
 20306 ;; Defined at:
 20307 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 20308 ;; Parameters:    Size  Location     Type
 20309 ;;  dividend        8    0[COMRAM] long long 
 20310 ;;  divisor         8    8[COMRAM] long long 
 20311 ;; Auto vars:     Size  Location     Type
 20312 ;;  __aodiv         8   18[COMRAM] long long 
 20313 ;;  __aodiv         1   17[COMRAM] unsigned char 
 20314 ;;  __aodiv         1   16[COMRAM] unsigned char 
 20315 ;; Return value:  Size  Location     Type
 20316 ;;                  8    0[COMRAM] long long 
 20317 ;; Registers used:
 20318 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20319 ;; Tracked objects:
 20320 ;;		On entry : 0/0
 20321 ;;		On exit  : 0/0
 20322 ;;		Unchanged: 0/0
 20323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20324 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20325 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20327 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20328 ;;Total ram usage:       26 bytes
 20329 ;; Hardware stack levels used:    1
 20330 ;; This function calls:
 20331 ;;		Nothing
 20332 ;; This function is called by:
 20333 ;;		i2_dtoa
 20334 ;; This function uses a non-reentrant model
 20335 ;;
 20336                           
 20337                           	psect	text88
 20338  0047B4                     __ptext88:
 20339                           	opt callstack 0
 20340  0047B4                     i2___aodiv:
 20341                           	opt callstack 12
 20342  0047B4  0E00               	movlw	0
 20343  0047B6  6E12               	movwf	i2___aodiv@sign^0,c
 20344  0047B8  BE10               	btfsc	(i2___aodiv@divisor+7)^0,7,c
 20345  0047BA  EFE3  F023         	goto	i2u855_40
 20346  0047BE  EFE1  F023         	goto	i2u855_41
 20347  0047C2                     i2u855_41:
 20348  0047C2  EFF5  F023         	goto	i2l7525
 20349  0047C6                     i2u855_40:
 20350  0047C6  1E10               	comf	(i2___aodiv@divisor+7)^0,f,c
 20351  0047C8  1E0F               	comf	(i2___aodiv@divisor+6)^0,f,c
 20352  0047CA  1E0E               	comf	(i2___aodiv@divisor+5)^0,f,c
 20353  0047CC  1E0D               	comf	(i2___aodiv@divisor+4)^0,f,c
 20354  0047CE  1E0C               	comf	(i2___aodiv@divisor+3)^0,f,c
 20355  0047D0  1E0B               	comf	(i2___aodiv@divisor+2)^0,f,c
 20356  0047D2  1E0A               	comf	(i2___aodiv@divisor+1)^0,f,c
 20357  0047D4  6C09               	negf	i2___aodiv@divisor^0,c
 20358  0047D6  0E00               	movlw	0
 20359  0047D8  220A               	addwfc	(i2___aodiv@divisor+1)^0,f,c
 20360  0047DA  220B               	addwfc	(i2___aodiv@divisor+2)^0,f,c
 20361  0047DC  220C               	addwfc	(i2___aodiv@divisor+3)^0,f,c
 20362  0047DE  220D               	addwfc	(i2___aodiv@divisor+4)^0,f,c
 20363  0047E0  220E               	addwfc	(i2___aodiv@divisor+5)^0,f,c
 20364  0047E2  220F               	addwfc	(i2___aodiv@divisor+6)^0,f,c
 20365  0047E4  2210               	addwfc	(i2___aodiv@divisor+7)^0,f,c
 20366  0047E6  0E01               	movlw	1
 20367  0047E8  6E12               	movwf	i2___aodiv@sign^0,c
 20368  0047EA                     i2l7525:
 20369  0047EA  BE08               	btfsc	(i2___aodiv@dividend+7)^0,7,c
 20370  0047EC  EFFC  F023         	goto	i2u856_40
 20371  0047F0  EFFA  F023         	goto	i2u856_41
 20372  0047F4                     i2u856_41:
 20373  0047F4  EF0E  F024         	goto	i2l7531
 20374  0047F8                     i2u856_40:
 20375  0047F8  1E08               	comf	(i2___aodiv@dividend+7)^0,f,c
 20376  0047FA  1E07               	comf	(i2___aodiv@dividend+6)^0,f,c
 20377  0047FC  1E06               	comf	(i2___aodiv@dividend+5)^0,f,c
 20378  0047FE  1E05               	comf	(i2___aodiv@dividend+4)^0,f,c
 20379  004800  1E04               	comf	(i2___aodiv@dividend+3)^0,f,c
 20380  004802  1E03               	comf	(i2___aodiv@dividend+2)^0,f,c
 20381  004804  1E02               	comf	(i2___aodiv@dividend+1)^0,f,c
 20382  004806  6C01               	negf	i2___aodiv@dividend^0,c
 20383  004808  0E00               	movlw	0
 20384  00480A  2202               	addwfc	(i2___aodiv@dividend+1)^0,f,c
 20385  00480C  2203               	addwfc	(i2___aodiv@dividend+2)^0,f,c
 20386  00480E  2204               	addwfc	(i2___aodiv@dividend+3)^0,f,c
 20387  004810  2205               	addwfc	(i2___aodiv@dividend+4)^0,f,c
 20388  004812  2206               	addwfc	(i2___aodiv@dividend+5)^0,f,c
 20389  004814  2207               	addwfc	(i2___aodiv@dividend+6)^0,f,c
 20390  004816  2208               	addwfc	(i2___aodiv@dividend+7)^0,f,c
 20391  004818  0E01               	movlw	1
 20392  00481A  1A12               	xorwf	i2___aodiv@sign^0,f,c
 20393  00481C                     i2l7531:
 20394  00481C  EE20  F013         	lfsr	2,i2___aodiv@quotient
 20395  004820  0E07               	movlw	7
 20396  004822                     i2u857_41:
 20397  004822  6ADE               	clrf	postinc2,c
 20398  004824  06E8               	decf	wreg,f,c
 20399  004826  E2FD               	bc	i2u857_41
 20400  004828  5009               	movf	i2___aodiv@divisor^0,w,c
 20401  00482A  100A               	iorwf	(i2___aodiv@divisor+1)^0,w,c
 20402  00482C  100B               	iorwf	(i2___aodiv@divisor+2)^0,w,c
 20403  00482E  100C               	iorwf	(i2___aodiv@divisor+3)^0,w,c
 20404  004830  100D               	iorwf	(i2___aodiv@divisor+4)^0,w,c
 20405  004832  100E               	iorwf	(i2___aodiv@divisor+5)^0,w,c
 20406  004834  100F               	iorwf	(i2___aodiv@divisor+6)^0,w,c
 20407  004836  1010               	iorwf	(i2___aodiv@divisor+7)^0,w,c
 20408  004838  B4D8               	btfsc	status,2,c
 20409  00483A  EF21  F024         	goto	i2u858_41
 20410  00483E  EF23  F024         	goto	i2u858_40
 20411  004842                     i2u858_41:
 20412  004842  EF75  F024         	goto	i2l7553
 20413  004846                     i2u858_40:
 20414  004846  0E01               	movlw	1
 20415  004848  6E11               	movwf	i2___aodiv@counter^0,c
 20416  00484A  EF31  F024         	goto	i2l7539
 20417  00484E                     i2l7537:
 20418  00484E  90D8               	bcf	status,0,c
 20419  004850  3609               	rlcf	i2___aodiv@divisor^0,f,c
 20420  004852  360A               	rlcf	(i2___aodiv@divisor+1)^0,f,c
 20421  004854  360B               	rlcf	(i2___aodiv@divisor+2)^0,f,c
 20422  004856  360C               	rlcf	(i2___aodiv@divisor+3)^0,f,c
 20423  004858  360D               	rlcf	(i2___aodiv@divisor+4)^0,f,c
 20424  00485A  360E               	rlcf	(i2___aodiv@divisor+5)^0,f,c
 20425  00485C  360F               	rlcf	(i2___aodiv@divisor+6)^0,f,c
 20426  00485E  3610               	rlcf	(i2___aodiv@divisor+7)^0,f,c
 20427  004860  2A11               	incf	i2___aodiv@counter^0,f,c
 20428  004862                     i2l7539:
 20429  004862  AE10               	btfss	(i2___aodiv@divisor+7)^0,7,c
 20430  004864  EF36  F024         	goto	i2u859_41
 20431  004868  EF38  F024         	goto	i2u859_40
 20432  00486C                     i2u859_41:
 20433  00486C  EF27  F024         	goto	i2l7537
 20434  004870                     i2u859_40:
 20435  004870                     i2l7541:
 20436  004870  90D8               	bcf	status,0,c
 20437  004872  3613               	rlcf	i2___aodiv@quotient^0,f,c
 20438  004874  3614               	rlcf	(i2___aodiv@quotient+1)^0,f,c
 20439  004876  3615               	rlcf	(i2___aodiv@quotient+2)^0,f,c
 20440  004878  3616               	rlcf	(i2___aodiv@quotient+3)^0,f,c
 20441  00487A  3617               	rlcf	(i2___aodiv@quotient+4)^0,f,c
 20442  00487C  3618               	rlcf	(i2___aodiv@quotient+5)^0,f,c
 20443  00487E  3619               	rlcf	(i2___aodiv@quotient+6)^0,f,c
 20444  004880  361A               	rlcf	(i2___aodiv@quotient+7)^0,f,c
 20445  004882  5009               	movf	i2___aodiv@divisor^0,w,c
 20446  004884  5C01               	subwf	i2___aodiv@dividend^0,w,c
 20447  004886  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
 20448  004888  5802               	subwfb	(i2___aodiv@dividend+1)^0,w,c
 20449  00488A  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
 20450  00488C  5803               	subwfb	(i2___aodiv@dividend+2)^0,w,c
 20451  00488E  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
 20452  004890  5804               	subwfb	(i2___aodiv@dividend+3)^0,w,c
 20453  004892  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
 20454  004894  5805               	subwfb	(i2___aodiv@dividend+4)^0,w,c
 20455  004896  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
 20456  004898  5806               	subwfb	(i2___aodiv@dividend+5)^0,w,c
 20457  00489A  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
 20458  00489C  5807               	subwfb	(i2___aodiv@dividend+6)^0,w,c
 20459  00489E  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
 20460  0048A0  5808               	subwfb	(i2___aodiv@dividend+7)^0,w,c
 20461  0048A2  A0D8               	btfss	status,0,c
 20462  0048A4  EF56  F024         	goto	i2u860_41
 20463  0048A8  EF58  F024         	goto	i2u860_40
 20464  0048AC                     i2u860_41:
 20465  0048AC  EF69  F024         	goto	i2l7549
 20466  0048B0                     i2u860_40:
 20467  0048B0  5009               	movf	i2___aodiv@divisor^0,w,c
 20468  0048B2  5E01               	subwf	i2___aodiv@dividend^0,f,c
 20469  0048B4  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
 20470  0048B6  5A02               	subwfb	(i2___aodiv@dividend+1)^0,f,c
 20471  0048B8  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
 20472  0048BA  5A03               	subwfb	(i2___aodiv@dividend+2)^0,f,c
 20473  0048BC  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
 20474  0048BE  5A04               	subwfb	(i2___aodiv@dividend+3)^0,f,c
 20475  0048C0  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
 20476  0048C2  5A05               	subwfb	(i2___aodiv@dividend+4)^0,f,c
 20477  0048C4  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
 20478  0048C6  5A06               	subwfb	(i2___aodiv@dividend+5)^0,f,c
 20479  0048C8  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
 20480  0048CA  5A07               	subwfb	(i2___aodiv@dividend+6)^0,f,c
 20481  0048CC  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
 20482  0048CE  5A08               	subwfb	(i2___aodiv@dividend+7)^0,f,c
 20483  0048D0  8013               	bsf	i2___aodiv@quotient^0,0,c
 20484  0048D2                     i2l7549:
 20485  0048D2  90D8               	bcf	status,0,c
 20486  0048D4  3210               	rrcf	(i2___aodiv@divisor+7)^0,f,c
 20487  0048D6  320F               	rrcf	(i2___aodiv@divisor+6)^0,f,c
 20488  0048D8  320E               	rrcf	(i2___aodiv@divisor+5)^0,f,c
 20489  0048DA  320D               	rrcf	(i2___aodiv@divisor+4)^0,f,c
 20490  0048DC  320C               	rrcf	(i2___aodiv@divisor+3)^0,f,c
 20491  0048DE  320B               	rrcf	(i2___aodiv@divisor+2)^0,f,c
 20492  0048E0  320A               	rrcf	(i2___aodiv@divisor+1)^0,f,c
 20493  0048E2  3209               	rrcf	i2___aodiv@divisor^0,f,c
 20494  0048E4  2E11               	decfsz	i2___aodiv@counter^0,f,c
 20495  0048E6  EF38  F024         	goto	i2l7541
 20496  0048EA                     i2l7553:
 20497  0048EA  5012               	movf	i2___aodiv@sign^0,w,c
 20498  0048EC  B4D8               	btfsc	status,2,c
 20499  0048EE  EF7B  F024         	goto	i2u861_41
 20500  0048F2  EF7D  F024         	goto	i2u861_40
 20501  0048F6                     i2u861_41:
 20502  0048F6  EF8D  F024         	goto	i2l7557
 20503  0048FA                     i2u861_40:
 20504  0048FA  1E1A               	comf	(i2___aodiv@quotient+7)^0,f,c
 20505  0048FC  1E19               	comf	(i2___aodiv@quotient+6)^0,f,c
 20506  0048FE  1E18               	comf	(i2___aodiv@quotient+5)^0,f,c
 20507  004900  1E17               	comf	(i2___aodiv@quotient+4)^0,f,c
 20508  004902  1E16               	comf	(i2___aodiv@quotient+3)^0,f,c
 20509  004904  1E15               	comf	(i2___aodiv@quotient+2)^0,f,c
 20510  004906  1E14               	comf	(i2___aodiv@quotient+1)^0,f,c
 20511  004908  6C13               	negf	i2___aodiv@quotient^0,c
 20512  00490A  0E00               	movlw	0
 20513  00490C  2214               	addwfc	(i2___aodiv@quotient+1)^0,f,c
 20514  00490E  2215               	addwfc	(i2___aodiv@quotient+2)^0,f,c
 20515  004910  2216               	addwfc	(i2___aodiv@quotient+3)^0,f,c
 20516  004912  2217               	addwfc	(i2___aodiv@quotient+4)^0,f,c
 20517  004914  2218               	addwfc	(i2___aodiv@quotient+5)^0,f,c
 20518  004916  2219               	addwfc	(i2___aodiv@quotient+6)^0,f,c
 20519  004918  221A               	addwfc	(i2___aodiv@quotient+7)^0,f,c
 20520  00491A                     i2l7557:
 20521  00491A  C013  F001         	movff	i2___aodiv@quotient,?i2___aodiv
 20522  00491E  C014  F002         	movff	i2___aodiv@quotient+1,?i2___aodiv+1
 20523  004922  C015  F003         	movff	i2___aodiv@quotient+2,?i2___aodiv+2
 20524  004926  C016  F004         	movff	i2___aodiv@quotient+3,?i2___aodiv+3
 20525  00492A  C017  F005         	movff	i2___aodiv@quotient+4,?i2___aodiv+4
 20526  00492E  C018  F006         	movff	i2___aodiv@quotient+5,?i2___aodiv+5
 20527  004932  C019  F007         	movff	i2___aodiv@quotient+6,?i2___aodiv+6
 20528  004936  C01A  F008         	movff	i2___aodiv@quotient+7,?i2___aodiv+7
 20529  00493A  0012               	return		;funcret
 20530  00493C                     __end_ofi2___aodiv:
 20531                           	opt callstack 0
 20532                           
 20533 ;; *************** function i2_ctoa *****************
 20534 ;; Defined at:
 20535 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 20536 ;; Parameters:    Size  Location     Type
 20537 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 20538 ;;		 -> vsnprintf@f(6), NULL(0), 
 20539 ;;  c               1   31[COMRAM] unsigned char 
 20540 ;; Auto vars:     Size  Location     Type
 20541 ;;  ctoa            2   32[COMRAM] int 
 20542 ;;  ctoa            2    0        int 
 20543 ;; Return value:  Size  Location     Type
 20544 ;;                  2   29[COMRAM] int 
 20545 ;; Registers used:
 20546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20547 ;; Tracked objects:
 20548 ;;		On entry : 0/0
 20549 ;;		On exit  : 0/0
 20550 ;;		Unchanged: 0/0
 20551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20552 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20553 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20555 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20556 ;;Total ram usage:        5 bytes
 20557 ;; Hardware stack levels used:    1
 20558 ;; Hardware stack levels required when called:    5
 20559 ;; This function calls:
 20560 ;;		i2_pad
 20561 ;; This function is called by:
 20562 ;;		i2_vfpfcnvrt
 20563 ;; This function uses a non-reentrant model
 20564 ;;
 20565                           
 20566                           	psect	text89
 20567  005F98                     __ptext89:
 20568                           	opt callstack 0
 20569  005F98                     i2_ctoa:
 20570                           	opt callstack 8
 20571  005F98                     
 20572                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 20573  005F98  0100               	movlb	0	; () banked
 20574  005F9A  51B5               	movf	_width& (0+255),w,b
 20575  005F9C  11B6               	iorwf	(_width+1)& (0+255),w,b
 20576  005F9E  A4D8               	btfss	status,2,c
 20577  005FA0  EFD4  F02F         	goto	i2u891_41
 20578  005FA4  EFD6  F02F         	goto	i2u891_40
 20579  005FA8                     i2u891_41:
 20580  005FA8  EFDC  F02F         	goto	i2l7699
 20581  005FAC                     i2u891_40:
 20582  005FAC                     
 20583                           ; BSR set to: 0
 20584  005FAC  C0B5  F021         	movff	_width,i2ctoa@w
 20585  005FB0  C0B6  F022         	movff	_width+1,i2ctoa@w+1
 20586  005FB4  EFE2  F02F         	goto	i2l7701
 20587  005FB8                     i2l7699:
 20588                           
 20589                           ; BSR set to: 0
 20590  005FB8  0EFF               	movlw	255
 20591  005FBA  25B5               	addwf	_width& (0+255),w,b
 20592  005FBC  6E21               	movwf	i2ctoa@w^0,c
 20593  005FBE  0EFF               	movlw	255
 20594  005FC0  21B6               	addwfc	(_width+1)& (0+255),w,b
 20595  005FC2  6E22               	movwf	(i2ctoa@w+1)^0,c
 20596  005FC4                     i2l7701:
 20597                           
 20598                           ; BSR set to: 0
 20599                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 20600  005FC4  C020  F189         	movff	i2ctoa@c,_dbuf
 20601  005FC8                     
 20602                           ; BSR set to: 0
 20603                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 20604  005FC8  0E00               	movlw	0
 20605  005FCA  0101               	movlb	1	; () banked
 20606  005FCC  6F8A               	movwf	(_dbuf+1)& (0+255),b
 20607  005FCE                     
 20608                           ; BSR set to: 1
 20609                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 20610  005FCE  C01E  F013         	movff	i2ctoa@fp,i2pad@fp
 20611  005FD2  C01F  F014         	movff	i2ctoa@fp+1,i2pad@fp+1
 20612  005FD6  0E89               	movlw	low _dbuf
 20613  005FD8  6E15               	movwf	i2pad@buf^0,c
 20614  005FDA  0E01               	movlw	high _dbuf
 20615  005FDC  6E16               	movwf	(i2pad@buf+1)^0,c
 20616  005FDE  C021  F017         	movff	i2ctoa@w,i2pad@p
 20617  005FE2  C022  F018         	movff	i2ctoa@w+1,i2pad@p+1
 20618  005FE6  EC0F  F02D         	call	i2_pad	;wreg free
 20619  005FEA  C013  F01E         	movff	?i2_pad,?i2_ctoa
 20620  005FEE  C014  F01F         	movff	?i2_pad+1,?i2_ctoa+1
 20621  005FF2  0012               	return		;funcret
 20622  005FF4                     __end_ofi2_ctoa:
 20623                           	opt callstack 0
 20624                           
 20625 ;; *************** function i2_pad *****************
 20626 ;; Defined at:
 20627 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 20628 ;; Parameters:    Size  Location     Type
 20629 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
 20630 ;;		 -> vsnprintf@f(6), NULL(0), 
 20631 ;;  buf             2   20[COMRAM] PTR unsigned char 
 20632 ;;		 -> dbuf(32), 
 20633 ;;  p               2   22[COMRAM] int 
 20634 ;; Auto vars:     Size  Location     Type
 20635 ;;  pad             2   27[COMRAM] int 
 20636 ;;  pad             2   25[COMRAM] int 
 20637 ;; Return value:  Size  Location     Type
 20638 ;;                  2   18[COMRAM] int 
 20639 ;; Registers used:
 20640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20641 ;; Tracked objects:
 20642 ;;		On entry : 0/0
 20643 ;;		On exit  : 0/0
 20644 ;;		Unchanged: 0/0
 20645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20646 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20647 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20648 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20649 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20650 ;;Total ram usage:       11 bytes
 20651 ;; Hardware stack levels used:    1
 20652 ;; Hardware stack levels required when called:    4
 20653 ;; This function calls:
 20654 ;;		i2_fputc
 20655 ;;		i2_fputs
 20656 ;;		i2_strlen
 20657 ;; This function is called by:
 20658 ;;		i2_ctoa
 20659 ;;		i2_dtoa
 20660 ;;		i2_otoa
 20661 ;;		i2_utoa
 20662 ;;		i2_xtoa
 20663 ;; This function uses a non-reentrant model
 20664 ;;
 20665                           
 20666                           	psect	text90
 20667  005A1E                     __ptext90:
 20668                           	opt callstack 0
 20669  005A1E                     i2_pad:
 20670                           	opt callstack 8
 20671  005A1E                     
 20672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 20673  005A1E  0100               	movlb	0	; () banked
 20674  005A20  A1B9               	btfss	_flags& (0+255),0,b
 20675  005A22  EF15  F02D         	goto	i2u851_41
 20676  005A26  EF17  F02D         	goto	i2u851_40
 20677  005A2A                     i2u851_41:
 20678  005A2A  EF21  F02D         	goto	i2l7493
 20679  005A2E                     i2u851_40:
 20680  005A2E                     
 20681                           ; BSR set to: 0
 20682                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 20683  005A2E  C015  F00C         	movff	i2pad@buf,i2fputs@s
 20684  005A32  C016  F00D         	movff	i2pad@buf+1,i2fputs@s+1
 20685  005A36  C013  F00E         	movff	i2pad@fp,i2fputs@fp
 20686  005A3A  C014  F00F         	movff	i2pad@fp+1,i2fputs@fp+1
 20687  005A3E  EC51  F031         	call	i2_fputs	;wreg free
 20688  005A42                     i2l7493:
 20689                           
 20690                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 20691  005A42  BE18               	btfsc	(i2pad@p+1)^0,7,c
 20692  005A44  EF26  F02D         	goto	i2u852_41
 20693  005A48  EF28  F02D         	goto	i2u852_40
 20694  005A4C                     i2u852_41:
 20695  005A4C  EF2E  F02D         	goto	i2l7497
 20696  005A50                     i2u852_40:
 20697  005A50  C017  F01C         	movff	i2pad@p,i2pad@w
 20698  005A54  C018  F01D         	movff	i2pad@p+1,i2pad@w+1
 20699  005A58  EF32  F02D         	goto	i2l716
 20700  005A5C                     i2l7497:
 20701  005A5C  0E00               	movlw	0
 20702  005A5E  6E1D               	movwf	(i2pad@w+1)^0,c
 20703  005A60  0E00               	movlw	0
 20704  005A62  6E1C               	movwf	i2pad@w^0,c
 20705  005A64                     i2l716:
 20706                           
 20707                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 20708  005A64  0E00               	movlw	0
 20709  005A66  6E1B               	movwf	(i2pad@i+1)^0,c
 20710  005A68  0E00               	movlw	0
 20711  005A6A  6E1A               	movwf	i2pad@i^0,c
 20712                           
 20713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 20714  005A6C  EF44  F02D         	goto	i2l7503
 20715  005A70                     i2l7499:
 20716                           
 20717                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 20718  005A70  0E00               	movlw	0
 20719  005A72  6E04               	movwf	(i2fputc@c+1)^0,c
 20720  005A74  0E20               	movlw	32
 20721  005A76  6E03               	movwf	i2fputc@c^0,c
 20722  005A78  C013  F005         	movff	i2pad@fp,i2fputc@fp
 20723  005A7C  C014  F006         	movff	i2pad@fp+1,i2fputc@fp+1
 20724  005A80  ECAA  F02C         	call	i2_fputc	;wreg free
 20725  005A84                     
 20726                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 20727  005A84  4A1A               	infsnz	i2pad@i^0,f,c
 20728  005A86  2A1B               	incf	(i2pad@i+1)^0,f,c
 20729  005A88                     i2l7503:
 20730                           
 20731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 20732  005A88  501C               	movf	i2pad@w^0,w,c
 20733  005A8A  5C1A               	subwf	i2pad@i^0,w,c
 20734  005A8C  501B               	movf	(i2pad@i+1)^0,w,c
 20735  005A8E  0A80               	xorlw	128
 20736  005A90  6E19               	movwf	??i2_pad^0,c
 20737  005A92  501D               	movf	(i2pad@w+1)^0,w,c
 20738  005A94  0A80               	xorlw	128
 20739  005A96  5819               	subwfb	??i2_pad^0,w,c
 20740  005A98  A0D8               	btfss	status,0,c
 20741  005A9A  EF51  F02D         	goto	i2u853_41
 20742  005A9E  EF53  F02D         	goto	i2u853_40
 20743  005AA2                     i2u853_41:
 20744  005AA2  EF38  F02D         	goto	i2l7499
 20745  005AA6                     i2u853_40:
 20746  005AA6                     
 20747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 20748  005AA6  0100               	movlb	0	; () banked
 20749  005AA8  B1B9               	btfsc	_flags& (0+255),0,b
 20750  005AAA  EF59  F02D         	goto	i2u854_41
 20751  005AAE  EF5B  F02D         	goto	i2u854_40
 20752  005AB2                     i2u854_41:
 20753  005AB2  EF65  F02D         	goto	i2l7507
 20754  005AB6                     i2u854_40:
 20755  005AB6                     
 20756                           ; BSR set to: 0
 20757                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 20758  005AB6  C015  F00C         	movff	i2pad@buf,i2fputs@s
 20759  005ABA  C016  F00D         	movff	i2pad@buf+1,i2fputs@s+1
 20760  005ABE  C013  F00E         	movff	i2pad@fp,i2fputs@fp
 20761  005AC2  C014  F00F         	movff	i2pad@fp+1,i2fputs@fp+1
 20762  005AC6  EC51  F031         	call	i2_fputs	;wreg free
 20763  005ACA                     i2l7507:
 20764                           
 20765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 20766  005ACA  C015  F001         	movff	i2pad@buf,i2strlen@s
 20767  005ACE  C016  F002         	movff	i2pad@buf+1,i2strlen@s+1
 20768  005AD2  EC16  F033         	call	i2_strlen	;wreg free
 20769  005AD6  501C               	movf	i2pad@w^0,w,c
 20770  005AD8  2401               	addwf	?i2_strlen^0,w,c
 20771  005ADA  6E13               	movwf	?i2_pad^0,c
 20772  005ADC  501D               	movf	(i2pad@w+1)^0,w,c
 20773  005ADE  2002               	addwfc	(?i2_strlen+1)^0,w,c
 20774  005AE0  6E14               	movwf	(?i2_pad+1)^0,c
 20775  005AE2  0012               	return		;funcret
 20776  005AE4                     __end_ofi2_pad:
 20777                           	opt callstack 0
 20778                           
 20779 ;; *************** function i2_strlen *****************
 20780 ;; Defined at:
 20781 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 20782 ;; Parameters:    Size  Location     Type
 20783 ;;  s               2    0[COMRAM] PTR const unsigned char 
 20784 ;;		 -> i2stoa@nuls(7), ?_snprintf(2), ?_printf(2), stoa@nuls(7), 
 20785 ;;		 -> dbuf(32), 
 20786 ;; Auto vars:     Size  Location     Type
 20787 ;;  strlen          2    2[COMRAM] PTR const unsigned char 
 20788 ;;		 -> i2stoa@nuls(7), ?_snprintf(2), ?_printf(2), stoa@nuls(7), 
 20789 ;;		 -> dbuf(32), 
 20790 ;; Return value:  Size  Location     Type
 20791 ;;                  2    0[COMRAM] unsigned int 
 20792 ;; Registers used:
 20793 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20794 ;; Tracked objects:
 20795 ;;		On entry : 0/0
 20796 ;;		On exit  : 0/0
 20797 ;;		Unchanged: 0/0
 20798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20799 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20800 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20802 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20803 ;;Total ram usage:        4 bytes
 20804 ;; Hardware stack levels used:    1
 20805 ;; This function calls:
 20806 ;;		Nothing
 20807 ;; This function is called by:
 20808 ;;		i2_pad
 20809 ;;		i2_stoa
 20810 ;; This function uses a non-reentrant model
 20811 ;;
 20812                           
 20813                           	psect	text91
 20814  00662C                     __ptext91:
 20815                           	opt callstack 0
 20816  00662C                     i2_strlen:
 20817                           	opt callstack 11
 20818  00662C  C001  F003         	movff	i2strlen@s,i2strlen@a
 20819  006630  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
 20820  006634  EF1E  F033         	goto	i2l7465
 20821  006638                     i2l7463:
 20822  006638  4A01               	infsnz	i2strlen@s^0,f,c
 20823  00663A  2A02               	incf	(i2strlen@s+1)^0,f,c
 20824  00663C                     i2l7465:
 20825  00663C  C001  FFD9         	movff	i2strlen@s,fsr2l
 20826  006640  C002  FFDA         	movff	i2strlen@s+1,fsr2h
 20827  006644  50DF               	movf	indf2,w,c
 20828  006646  A4D8               	btfss	status,2,c
 20829  006648  EF28  F033         	goto	i2u844_41
 20830  00664C  EF2A  F033         	goto	i2u844_40
 20831  006650                     i2u844_41:
 20832  006650  EF1C  F033         	goto	i2l7463
 20833  006654                     i2u844_40:
 20834  006654  5003               	movf	i2strlen@a^0,w,c
 20835  006656  5C01               	subwf	i2strlen@s^0,w,c
 20836  006658  6E01               	movwf	?i2_strlen^0,c
 20837  00665A  5004               	movf	(i2strlen@a+1)^0,w,c
 20838  00665C  5802               	subwfb	(i2strlen@s+1)^0,w,c
 20839  00665E  6E02               	movwf	(?i2_strlen+1)^0,c
 20840  006660  0012               	return		;funcret
 20841  006662                     __end_ofi2_strlen:
 20842                           	opt callstack 0
 20843                           
 20844 ;; *************** function i2_fputs *****************
 20845 ;; Defined at:
 20846 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 20847 ;; Parameters:    Size  Location     Type
 20848 ;;  s               2   11[COMRAM] PTR const unsigned char 
 20849 ;;		 -> dbuf(32), 
 20850 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
 20851 ;;		 -> vsnprintf@f(6), NULL(0), 
 20852 ;; Auto vars:     Size  Location     Type
 20853 ;;  fputs           2   16[COMRAM] int 
 20854 ;;  fputs           1   15[COMRAM] unsigned char 
 20855 ;; Return value:  Size  Location     Type
 20856 ;;                  2   11[COMRAM] int 
 20857 ;; Registers used:
 20858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20859 ;; Tracked objects:
 20860 ;;		On entry : 0/0
 20861 ;;		On exit  : 0/0
 20862 ;;		Unchanged: 0/0
 20863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20864 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20865 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20867 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20868 ;;Total ram usage:        7 bytes
 20869 ;; Hardware stack levels used:    1
 20870 ;; Hardware stack levels required when called:    3
 20871 ;; This function calls:
 20872 ;;		i2_fputc
 20873 ;; This function is called by:
 20874 ;;		i2_pad
 20875 ;; This function uses a non-reentrant model
 20876 ;;
 20877                           
 20878                           	psect	text92
 20879  0062A2                     __ptext92:
 20880                           	opt callstack 0
 20881  0062A2                     i2_fputs:
 20882                           	opt callstack 8
 20883  0062A2  0E00               	movlw	0
 20884  0062A4  6E12               	movwf	(i2fputs@i+1)^0,c
 20885  0062A6  0E00               	movlw	0
 20886  0062A8  6E11               	movwf	i2fputs@i^0,c
 20887  0062AA  EF62  F031         	goto	i2l7459
 20888  0062AE                     i2l7455:
 20889  0062AE  C010  F003         	movff	i2fputs@c,i2fputc@c
 20890  0062B2  6A04               	clrf	(i2fputc@c+1)^0,c
 20891  0062B4  C00E  F005         	movff	i2fputs@fp,i2fputc@fp
 20892  0062B8  C00F  F006         	movff	i2fputs@fp+1,i2fputc@fp+1
 20893  0062BC  ECAA  F02C         	call	i2_fputc	;wreg free
 20894  0062C0  4A11               	infsnz	i2fputs@i^0,f,c
 20895  0062C2  2A12               	incf	(i2fputs@i+1)^0,f,c
 20896  0062C4                     i2l7459:
 20897  0062C4  5011               	movf	i2fputs@i^0,w,c
 20898  0062C6  240C               	addwf	i2fputs@s^0,w,c
 20899  0062C8  6ED9               	movwf	fsr2l,c
 20900  0062CA  5012               	movf	(i2fputs@i+1)^0,w,c
 20901  0062CC  200D               	addwfc	(i2fputs@s+1)^0,w,c
 20902  0062CE  6EDA               	movwf	fsr2h,c
 20903  0062D0  50DF               	movf	indf2,w,c
 20904  0062D2  6E10               	movwf	i2fputs@c^0,c
 20905  0062D4  5010               	movf	i2fputs@c^0,w,c
 20906  0062D6  A4D8               	btfss	status,2,c
 20907  0062D8  EF70  F031         	goto	i2u843_41
 20908  0062DC  EF72  F031         	goto	i2u843_40
 20909  0062E0                     i2u843_41:
 20910  0062E0  EF57  F031         	goto	i2l7455
 20911  0062E4                     i2u843_40:
 20912  0062E4  0012               	return		;funcret
 20913  0062E6                     __end_ofi2_fputs:
 20914                           	opt callstack 0
 20915                           
 20916 ;; *************** function i2_fputc *****************
 20917 ;; Defined at:
 20918 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 20919 ;; Parameters:    Size  Location     Type
 20920 ;;  c               2    2[COMRAM] int 
 20921 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
 20922 ;;		 -> vsnprintf@f(6), NULL(0), 
 20923 ;; Auto vars:     Size  Location     Type
 20924 ;;		None
 20925 ;; Return value:  Size  Location     Type
 20926 ;;                  2    2[COMRAM] int 
 20927 ;; Registers used:
 20928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20929 ;; Tracked objects:
 20930 ;;		On entry : 0/0
 20931 ;;		On exit  : 0/0
 20932 ;;		Unchanged: 0/0
 20933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20934 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20936 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20937 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20938 ;;Total ram usage:        9 bytes
 20939 ;; Hardware stack levels used:    1
 20940 ;; Hardware stack levels required when called:    2
 20941 ;; This function calls:
 20942 ;;		i2_putch
 20943 ;; This function is called by:
 20944 ;;		i2_pad
 20945 ;;		i2_stoa
 20946 ;;		i2_vfpfcnvrt
 20947 ;;		i2_fputs
 20948 ;; This function uses a non-reentrant model
 20949 ;;
 20950                           
 20951                           	psect	text93
 20952  005954                     __ptext93:
 20953                           	opt callstack 0
 20954  005954                     i2_fputc:
 20955                           	opt callstack 8
 20956  005954  5005               	movf	i2fputc@fp^0,w,c
 20957  005956  1006               	iorwf	(i2fputc@fp+1)^0,w,c
 20958  005958  B4D8               	btfsc	status,2,c
 20959  00595A  EFB1  F02C         	goto	i2u839_41
 20960  00595E  EFB3  F02C         	goto	i2u839_40
 20961  005962                     i2u839_41:
 20962  005962  EFBC  F02C         	goto	i2l7441
 20963  005966                     i2u839_40:
 20964  005966  5005               	movf	i2fputc@fp^0,w,c
 20965  005968  1006               	iorwf	(i2fputc@fp+1)^0,w,c
 20966  00596A  A4D8               	btfss	status,2,c
 20967  00596C  EFBA  F02C         	goto	i2u840_41
 20968  005970  EFBC  F02C         	goto	i2u840_40
 20969  005974                     i2u840_41:
 20970  005974  EFC1  F02C         	goto	i2l7443
 20971  005978                     i2u840_40:
 20972  005978                     i2l7441:
 20973  005978  5003               	movf	i2fputc@c^0,w,c
 20974  00597A  ECA8  F034         	call	i2_putch
 20975  00597E  EF0E  F02D         	goto	i2l1670
 20976  005982                     i2l7443:
 20977  005982  EE20 F004          	lfsr	2,4
 20978  005986  5005               	movf	i2fputc@fp^0,w,c
 20979  005988  26D9               	addwf	fsr2l,f,c
 20980  00598A  5006               	movf	(i2fputc@fp+1)^0,w,c
 20981  00598C  22DA               	addwfc	fsr2h,f,c
 20982  00598E  50DE               	movf	postinc2,w,c
 20983  005990  10DE               	iorwf	postinc2,w,c
 20984  005992  B4D8               	btfsc	status,2,c
 20985  005994  EFCE  F02C         	goto	i2u841_41
 20986  005998  EFD0  F02C         	goto	i2u841_40
 20987  00599C                     i2u841_41:
 20988  00599C  EFEB  F02C         	goto	i2l7447
 20989  0059A0                     i2u841_40:
 20990  0059A0  EE20 F004          	lfsr	2,4
 20991  0059A4  5005               	movf	i2fputc@fp^0,w,c
 20992  0059A6  26D9               	addwf	fsr2l,f,c
 20993  0059A8  5006               	movf	(i2fputc@fp+1)^0,w,c
 20994  0059AA  22DA               	addwfc	fsr2h,f,c
 20995  0059AC  EE10 F002          	lfsr	1,2
 20996  0059B0  5005               	movf	i2fputc@fp^0,w,c
 20997  0059B2  26E1               	addwf	fsr1l,f,c
 20998  0059B4  5006               	movf	(i2fputc@fp+1)^0,w,c
 20999  0059B6  22E2               	addwfc	fsr1h,f,c
 21000  0059B8  50DE               	movf	postinc2,w,c
 21001  0059BA  5CE6               	subwf	postinc1,w,c
 21002  0059BC  50E6               	movf	postinc1,w,c
 21003  0059BE  0A80               	xorlw	128
 21004  0059C0  6E0B               	movwf	(??i2_fputc+4)^0,c
 21005  0059C2  50DE               	movf	postinc2,w,c
 21006  0059C4  0A80               	xorlw	128
 21007  0059C6  580B               	subwfb	(??i2_fputc+4)^0,w,c
 21008  0059C8  B0D8               	btfsc	status,0,c
 21009  0059CA  EFE9  F02C         	goto	i2u842_41
 21010  0059CE  EFEB  F02C         	goto	i2u842_40
 21011  0059D2                     i2u842_41:
 21012  0059D2  EF0E  F02D         	goto	i2l1670
 21013  0059D6                     i2u842_40:
 21014  0059D6                     i2l7447:
 21015  0059D6  EE20 F002          	lfsr	2,2
 21016  0059DA  5005               	movf	i2fputc@fp^0,w,c
 21017  0059DC  26D9               	addwf	fsr2l,f,c
 21018  0059DE  5006               	movf	(i2fputc@fp+1)^0,w,c
 21019  0059E0  22DA               	addwfc	fsr2h,f,c
 21020  0059E2  CFDE F007          	movff	postinc2,??i2_fputc
 21021  0059E6  CFDD F008          	movff	postdec2,??i2_fputc+1
 21022  0059EA  C005  FFD9         	movff	i2fputc@fp,fsr2l
 21023  0059EE  C006  FFDA         	movff	i2fputc@fp+1,fsr2h
 21024  0059F2  CFDE F009          	movff	postinc2,??i2_fputc+2
 21025  0059F6  CFDD F00A          	movff	postdec2,??i2_fputc+3
 21026  0059FA  5007               	movf	??i2_fputc^0,w,c
 21027  0059FC  2409               	addwf	(??i2_fputc+2)^0,w,c
 21028  0059FE  6ED9               	movwf	fsr2l,c
 21029  005A00  5008               	movf	(??i2_fputc+1)^0,w,c
 21030  005A02  200A               	addwfc	(??i2_fputc+3)^0,w,c
 21031  005A04  6EDA               	movwf	fsr2h,c
 21032  005A06  C003  FFDF         	movff	i2fputc@c,indf2
 21033  005A0A  EE20 F002          	lfsr	2,2
 21034  005A0E  5005               	movf	i2fputc@fp^0,w,c
 21035  005A10  26D9               	addwf	fsr2l,f,c
 21036  005A12  5006               	movf	(i2fputc@fp+1)^0,w,c
 21037  005A14  22DA               	addwfc	fsr2h,f,c
 21038  005A16  2ADE               	incf	postinc2,f,c
 21039  005A18  0E00               	movlw	0
 21040  005A1A  22DD               	addwfc	postdec2,f,c
 21041  005A1C                     i2l1670:
 21042  005A1C  0012               	return		;funcret
 21043  005A1E                     __end_ofi2_fputc:
 21044                           	opt callstack 0
 21045                           
 21046 ;; *************** function i2_putch *****************
 21047 ;; Defined at:
 21048 ;;		line 146 in file "mcc_generated_files/eusart1.c"
 21049 ;; Parameters:    Size  Location     Type
 21050 ;;  txData          1    wreg     unsigned char 
 21051 ;; Auto vars:     Size  Location     Type
 21052 ;;  txData          1    1[COMRAM] unsigned char 
 21053 ;; Return value:  Size  Location     Type
 21054 ;;                  1    wreg      void 
 21055 ;; Registers used:
 21056 ;;		wreg, status,2, cstack
 21057 ;; Tracked objects:
 21058 ;;		On entry : 0/0
 21059 ;;		On exit  : 0/0
 21060 ;;		Unchanged: 0/0
 21061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21063 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21065 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21066 ;;Total ram usage:        1 bytes
 21067 ;; Hardware stack levels used:    1
 21068 ;; Hardware stack levels required when called:    1
 21069 ;; This function calls:
 21070 ;;		i2_EUSART1_Write
 21071 ;; This function is called by:
 21072 ;;		i2_fputc
 21073 ;; This function uses a non-reentrant model
 21074 ;;
 21075                           
 21076                           	psect	text94
 21077  006950                     __ptext94:
 21078                           	opt callstack 0
 21079  006950                     i2_putch:
 21080                           	opt callstack 8
 21081                           
 21082                           ;incstack = 0
 21083                           ;i2putch@txData stored from wreg
 21084  006950  6E02               	movwf	i2putch@txData^0,c
 21085  006952                     
 21086                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
 21087  006952  5002               	movf	i2putch@txData^0,w,c
 21088  006954  EC60  F034         	call	i2_EUSART1_Write
 21089  006958  0012               	return		;funcret
 21090  00695A                     __end_ofi2_putch:
 21091                           	opt callstack 0
 21092                           
 21093 ;; *************** function i2_EUSART1_Write *****************
 21094 ;; Defined at:
 21095 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 21096 ;; Parameters:    Size  Location     Type
 21097 ;;  txData          1    wreg     unsigned char 
 21098 ;; Auto vars:     Size  Location     Type
 21099 ;;  txData          1    0[COMRAM] unsigned char 
 21100 ;; Return value:  Size  Location     Type
 21101 ;;                  1    wreg      void 
 21102 ;; Registers used:
 21103 ;;		wreg
 21104 ;; Tracked objects:
 21105 ;;		On entry : 0/0
 21106 ;;		On exit  : 0/0
 21107 ;;		Unchanged: 0/0
 21108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21110 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21112 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21113 ;;Total ram usage:        1 bytes
 21114 ;; Hardware stack levels used:    1
 21115 ;; This function calls:
 21116 ;;		Nothing
 21117 ;; This function is called by:
 21118 ;;		i2_putch
 21119 ;; This function uses a non-reentrant model
 21120 ;;
 21121                           
 21122                           	psect	text95
 21123  0068C0                     __ptext95:
 21124                           	opt callstack 0
 21125  0068C0                     i2_EUSART1_Write:
 21126                           	opt callstack 8
 21127                           
 21128                           ;incstack = 0
 21129                           ;i2EUSART1_Write@txData stored from wreg
 21130  0068C0  6E01               	movwf	i2EUSART1_Write@txData^0,c
 21131  0068C2                     i2l297:
 21132                           
 21133                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
 21134  0068C2  A89E               	btfss	158,4,c	;volatile
 21135  0068C4  EF66  F034         	goto	i2u837_41
 21136  0068C8  EF68  F034         	goto	i2u837_40
 21137  0068CC                     i2u837_41:
 21138  0068CC  EF61  F034         	goto	i2l297
 21139  0068D0                     i2u837_40:
 21140  0068D0                     
 21141                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
 21142  0068D0  C001  FFAD         	movff	i2EUSART1_Write@txData,4013	;volatile
 21143  0068D4  0012               	return		;funcret
 21144  0068D6                     __end_ofi2_EUSART1_Write:
 21145                           	opt callstack 0
 21146                           
 21147 ;; *************** function i2_atoi *****************
 21148 ;; Defined at:
 21149 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 21150 ;; Parameters:    Size  Location     Type
 21151 ;;  s               2    7[COMRAM] PTR const unsigned char 
 21152 ;;		 -> STR_8(40), STR_7(21), STR_6(20), STR_5(39), 
 21153 ;;		 -> STR_4(22), STR_3(12), read_from_usart@data(10), STR_1(13), 
 21154 ;; Auto vars:     Size  Location     Type
 21155 ;;  atoi            2   20[COMRAM] int 
 21156 ;;  atoi            2   13[COMRAM] int 
 21157 ;; Return value:  Size  Location     Type
 21158 ;;                  2    7[COMRAM] int 
 21159 ;; Registers used:
 21160 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21161 ;; Tracked objects:
 21162 ;;		On entry : 0/0
 21163 ;;		On exit  : 0/0
 21164 ;;		Unchanged: 0/0
 21165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21166 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21167 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21168 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21169 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21170 ;;Total ram usage:       15 bytes
 21171 ;; Hardware stack levels used:    1
 21172 ;; Hardware stack levels required when called:    1
 21173 ;; This function calls:
 21174 ;;		i2___wmul
 21175 ;;		i2_isdigit
 21176 ;;		i2_isspace
 21177 ;; This function is called by:
 21178 ;;		i2_vfpfcnvrt
 21179 ;; This function uses a non-reentrant model
 21180 ;;
 21181                           
 21182                           	psect	text96
 21183  003EAE                     __ptext96:
 21184                           	opt callstack 0
 21185  003EAE                     i2_atoi:
 21186                           	opt callstack 12
 21187  003EAE  0E00               	movlw	0
 21188  003EB0  6E16               	movwf	(i2atoi@n+1)^0,c
 21189  003EB2  0E00               	movlw	0
 21190  003EB4  6E15               	movwf	i2atoi@n^0,c
 21191  003EB6  0E00               	movlw	0
 21192  003EB8  6E0F               	movwf	(i2atoi@neg+1)^0,c
 21193  003EBA  0E00               	movlw	0
 21194  003EBC  6E0E               	movwf	i2atoi@neg^0,c
 21195  003EBE  EF63  F01F         	goto	i2l7967
 21196  003EC2                     i2l7965:
 21197  003EC2  4A08               	infsnz	i2atoi@s^0,f,c
 21198  003EC4  2A09               	incf	(i2atoi@s+1)^0,f,c
 21199  003EC6                     i2l7967:
 21200  003EC6  0E01               	movlw	1
 21201  003EC8  6E14               	movwf	i2_atoi$2437^0,c
 21202  003ECA  C008  FFF6         	movff	i2atoi@s,tblptrl
 21203  003ECE  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 21204  003ED2  0E00               	movlw	low (__mediumconst shr (0+16))
 21205  003ED4  6EF8               	movwf	tblptru,c
 21206  003ED6  0E0E               	movlw	(high __ramtop+-1)
 21207  003ED8  64F7               	cpfsgt	tblptrh,c
 21208  003EDA  D003               	bra	i2u950_47
 21209  003EDC  0008               	tblrd		*
 21210  003EDE  50F5               	movf	tablat,w,c
 21211  003EE0  D005               	bra	i2u950_40
 21212  003EE2                     i2u950_47:
 21213  003EE2  CFF6 FFE9          	movff	tblptrl,fsr0l
 21214  003EE6  CFF7 FFEA          	movff	tblptrh,fsr0h
 21215  003EEA  50EF               	movf	indf0,w,c
 21216  003EEC                     i2u950_40:
 21217  003EEC  0A20               	xorlw	32
 21218  003EEE  B4D8               	btfsc	status,2,c
 21219  003EF0  EF7C  F01F         	goto	i2u951_41
 21220  003EF4  EF7E  F01F         	goto	i2u951_40
 21221  003EF8                     i2u951_41:
 21222  003EF8  EFA6  F01F         	goto	i2l7975
 21223  003EFC                     i2u951_40:
 21224  003EFC  0EF7               	movlw	247
 21225  003EFE  6E0A               	movwf	??i2_atoi^0,c
 21226  003F00  0EFF               	movlw	255
 21227  003F02  6E0B               	movwf	(??i2_atoi+1)^0,c
 21228  003F04  C008  FFF6         	movff	i2atoi@s,tblptrl
 21229  003F08  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 21230  003F0C  0E00               	movlw	low (__mediumconst shr (0+16))
 21231  003F0E  6EF8               	movwf	tblptru,c
 21232  003F10  0E0E               	movlw	(high __ramtop+-1)
 21233  003F12  64F7               	cpfsgt	tblptrh,c
 21234  003F14  D003               	bra	i2u952_47
 21235  003F16  0008               	tblrd		*
 21236  003F18  50F5               	movf	tablat,w,c
 21237  003F1A  D005               	bra	i2u952_40
 21238  003F1C                     i2u952_47:
 21239  003F1C  CFF6 FFE9          	movff	tblptrl,fsr0l
 21240  003F20  CFF7 FFEA          	movff	tblptrh,fsr0h
 21241  003F24  50EF               	movf	indf0,w,c
 21242  003F26                     i2u952_40:
 21243  003F26  6E0C               	movwf	(??i2_atoi+2)^0,c
 21244  003F28  6A0D               	clrf	(??i2_atoi+3)^0,c
 21245  003F2A  500A               	movf	??i2_atoi^0,w,c
 21246  003F2C  260C               	addwf	(??i2_atoi+2)^0,f,c
 21247  003F2E  500B               	movf	(??i2_atoi+1)^0,w,c
 21248  003F30  220D               	addwfc	(??i2_atoi+3)^0,f,c
 21249  003F32  500D               	movf	(??i2_atoi+3)^0,w,c
 21250  003F34  E109               	bnz	i2u953_40
 21251  003F36  0E05               	movlw	5
 21252  003F38  5C0C               	subwf	(??i2_atoi+2)^0,w,c
 21253  003F3A  A0D8               	btfss	status,0,c
 21254  003F3C  EFA2  F01F         	goto	i2u953_41
 21255  003F40  EFA4  F01F         	goto	i2u953_40
 21256  003F44                     i2u953_41:
 21257  003F44  EFA6  F01F         	goto	i2l7975
 21258  003F48                     i2u953_40:
 21259  003F48  0E00               	movlw	0
 21260  003F4A  6E14               	movwf	i2_atoi$2437^0,c
 21261  003F4C                     i2l7975:
 21262  003F4C  C014  F010         	movff	i2_atoi$2437,i2_atoi$2436
 21263  003F50  6A11               	clrf	(i2_atoi$2436+1)^0,c
 21264  003F52  5010               	movf	i2_atoi$2436^0,w,c
 21265  003F54  1011               	iorwf	(i2_atoi$2436+1)^0,w,c
 21266  003F56  A4D8               	btfss	status,2,c
 21267  003F58  EFB0  F01F         	goto	i2u954_41
 21268  003F5C  EFB2  F01F         	goto	i2u954_40
 21269  003F60                     i2u954_41:
 21270  003F60  EF61  F01F         	goto	i2l7965
 21271  003F64                     i2u954_40:
 21272  003F64  EFBC  F01F         	goto	i2l7985
 21273  003F68                     i2l7981:
 21274  003F68  0E00               	movlw	0
 21275  003F6A  6E0F               	movwf	(i2atoi@neg+1)^0,c
 21276  003F6C  0E01               	movlw	1
 21277  003F6E  6E0E               	movwf	i2atoi@neg^0,c
 21278  003F70                     i2l7983:
 21279  003F70  4A08               	infsnz	i2atoi@s^0,f,c
 21280  003F72  2A09               	incf	(i2atoi@s+1)^0,f,c
 21281  003F74  EF09  F020         	goto	i2l7991
 21282  003F78                     i2l7985:
 21283  003F78  C008  FFF6         	movff	i2atoi@s,tblptrl
 21284  003F7C  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 21285  003F80  0E00               	movlw	low (__mediumconst shr (0+16))
 21286  003F82  6EF8               	movwf	tblptru,c
 21287  003F84  0E0E               	movlw	(high __ramtop+-1)
 21288  003F86  64F7               	cpfsgt	tblptrh,c
 21289  003F88  D003               	bra	i2u955_47
 21290  003F8A  0008               	tblrd		*
 21291  003F8C  50F5               	movf	tablat,w,c
 21292  003F8E  D005               	bra	i2u955_40
 21293  003F90                     i2u955_47:
 21294  003F90  CFF6 FFE9          	movff	tblptrl,fsr0l
 21295  003F94  CFF7 FFEA          	movff	tblptrh,fsr0h
 21296  003F98  50EF               	movf	indf0,w,c
 21297  003F9A                     i2u955_40:
 21298  003F9A  6E0A               	movwf	??i2_atoi^0,c
 21299  003F9C  6A0B               	clrf	(??i2_atoi+1)^0,c
 21300                           
 21301                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21302                           ; Switch size 1, requested type "simple"
 21303                           ; Number of cases is 1, Range of values is 0 to 0
 21304                           ; switch strategies available:
 21305                           ; Name         Instructions Cycles
 21306                           ; simple_byte            4     3 (average)
 21307                           ;	Chosen strategy is simple_byte
 21308  003F9E  500B               	movf	(??i2_atoi+1)^0,w,c
 21309  003FA0  0A00               	xorlw	0	; case 0
 21310  003FA2  B4D8               	btfsc	status,2,c
 21311  003FA4  EFD6  F01F         	goto	i2l9967
 21312  003FA8  EF09  F020         	goto	i2l7991
 21313  003FAC                     i2l9967:
 21314                           
 21315                           ; Switch size 1, requested type "simple"
 21316                           ; Number of cases is 2, Range of values is 43 to 45
 21317                           ; switch strategies available:
 21318                           ; Name         Instructions Cycles
 21319                           ; simple_byte            7     4 (average)
 21320                           ;	Chosen strategy is simple_byte
 21321  003FAC  500A               	movf	??i2_atoi^0,w,c
 21322  003FAE  0A2B               	xorlw	43	; case 43
 21323  003FB0  B4D8               	btfsc	status,2,c
 21324  003FB2  EFB8  F01F         	goto	i2l7983
 21325  003FB6  0A06               	xorlw	6	; case 45
 21326  003FB8  B4D8               	btfsc	status,2,c
 21327  003FBA  EFB4  F01F         	goto	i2l7981
 21328  003FBE  EF09  F020         	goto	i2l7991
 21329  003FC2                     i2l7987:
 21330  003FC2  C015  F001         	movff	i2atoi@n,i2___wmul@multiplier
 21331  003FC6  C016  F002         	movff	i2atoi@n+1,i2___wmul@multiplier+1
 21332  003FCA  0E00               	movlw	0
 21333  003FCC  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 21334  003FCE  0E0A               	movlw	10
 21335  003FD0  6E03               	movwf	i2___wmul@multiplicand^0,c
 21336  003FD2  ECF0  F033         	call	i2___wmul	;wreg free
 21337  003FD6  C008  FFF6         	movff	i2atoi@s,tblptrl
 21338  003FDA  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 21339  003FDE  0E00               	movlw	low (__mediumconst shr (0+16))
 21340  003FE0  6EF8               	movwf	tblptru,c
 21341  003FE2  0E0E               	movlw	(high __ramtop+-1)
 21342  003FE4  64F7               	cpfsgt	tblptrh,c
 21343  003FE6  D003               	bra	i2u956_47
 21344  003FE8  0008               	tblrd		*
 21345  003FEA  50F5               	movf	tablat,w,c
 21346  003FEC  D005               	bra	i2u956_40
 21347  003FEE                     i2u956_47:
 21348  003FEE  CFF6 FFE9          	movff	tblptrl,fsr0l
 21349  003FF2  CFF7 FFEA          	movff	tblptrh,fsr0h
 21350  003FF6  50EF               	movf	indf0,w,c
 21351  003FF8                     i2u956_40:
 21352  003FF8  6E0A               	movwf	??i2_atoi^0,c
 21353  003FFA  500A               	movf	??i2_atoi^0,w,c
 21354  003FFC  5E01               	subwf	?i2___wmul^0,f,c
 21355  003FFE  0E00               	movlw	0
 21356  004000  5A02               	subwfb	(?i2___wmul+1)^0,f,c
 21357  004002  0E30               	movlw	48
 21358  004004  2401               	addwf	?i2___wmul^0,w,c
 21359  004006  6E15               	movwf	i2atoi@n^0,c
 21360  004008  0E00               	movlw	0
 21361  00400A  2002               	addwfc	(?i2___wmul+1)^0,w,c
 21362  00400C  6E16               	movwf	(i2atoi@n+1)^0,c
 21363  00400E  EFB8  F01F         	goto	i2l7983
 21364  004012                     i2l7991:
 21365  004012  0ED0               	movlw	208
 21366  004014  6E0A               	movwf	??i2_atoi^0,c
 21367  004016  0EFF               	movlw	255
 21368  004018  6E0B               	movwf	(??i2_atoi+1)^0,c
 21369  00401A  C008  FFF6         	movff	i2atoi@s,tblptrl
 21370  00401E  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 21371  004022  0E00               	movlw	low (__mediumconst shr (0+16))
 21372  004024  6EF8               	movwf	tblptru,c
 21373  004026  0E0E               	movlw	(high __ramtop+-1)
 21374  004028  64F7               	cpfsgt	tblptrh,c
 21375  00402A  D003               	bra	i2u957_47
 21376  00402C  0008               	tblrd		*
 21377  00402E  50F5               	movf	tablat,w,c
 21378  004030  D005               	bra	i2u957_40
 21379  004032                     i2u957_47:
 21380  004032  CFF6 FFE9          	movff	tblptrl,fsr0l
 21381  004036  CFF7 FFEA          	movff	tblptrh,fsr0h
 21382  00403A  50EF               	movf	indf0,w,c
 21383  00403C                     i2u957_40:
 21384  00403C  6E0C               	movwf	(??i2_atoi+2)^0,c
 21385  00403E  6A0D               	clrf	(??i2_atoi+3)^0,c
 21386  004040  500A               	movf	??i2_atoi^0,w,c
 21387  004042  260C               	addwf	(??i2_atoi+2)^0,f,c
 21388  004044  500B               	movf	(??i2_atoi+1)^0,w,c
 21389  004046  220D               	addwfc	(??i2_atoi+3)^0,f,c
 21390  004048  500D               	movf	(??i2_atoi+3)^0,w,c
 21391  00404A  E10A               	bnz	i2u958_40
 21392  00404C  0E0A               	movlw	10
 21393  00404E  5C0C               	subwf	(??i2_atoi+2)^0,w,c
 21394  004050  A0D8               	btfss	status,0,c
 21395  004052  EF2D  F020         	goto	i2u958_41
 21396  004056  EF30  F020         	goto	i2u958_40
 21397  00405A                     i2u958_41:
 21398  00405A  0E01               	movlw	1
 21399  00405C  EF31  F020         	goto	i2u959_40
 21400  004060                     i2u958_40:
 21401  004060  0E00               	movlw	0
 21402  004062                     i2u959_40:
 21403  004062  6E12               	movwf	i2_atoi$2438^0,c
 21404  004064  6A13               	clrf	(i2_atoi$2438+1)^0,c
 21405  004066  5012               	movf	i2_atoi$2438^0,w,c
 21406  004068  1013               	iorwf	(i2_atoi$2438+1)^0,w,c
 21407  00406A  A4D8               	btfss	status,2,c
 21408  00406C  EF3A  F020         	goto	i2u960_41
 21409  004070  EF3C  F020         	goto	i2u960_40
 21410  004074                     i2u960_41:
 21411  004074  EFE1  F01F         	goto	i2l7987
 21412  004078                     i2u960_40:
 21413  004078  500E               	movf	i2atoi@neg^0,w,c
 21414  00407A  100F               	iorwf	(i2atoi@neg+1)^0,w,c
 21415  00407C  A4D8               	btfss	status,2,c
 21416  00407E  EF43  F020         	goto	i2u961_41
 21417  004082  EF45  F020         	goto	i2u961_40
 21418  004086                     i2u961_41:
 21419  004086  EF53  F020         	goto	i2l1629
 21420  00408A                     i2u961_40:
 21421  00408A  C015  F00A         	movff	i2atoi@n,??i2_atoi
 21422  00408E  C016  F00B         	movff	i2atoi@n+1,??i2_atoi+1
 21423  004092  1E0A               	comf	??i2_atoi^0,f,c
 21424  004094  1E0B               	comf	(??i2_atoi+1)^0,f,c
 21425  004096  4A0A               	infsnz	??i2_atoi^0,f,c
 21426  004098  2A0B               	incf	(??i2_atoi+1)^0,f,c
 21427  00409A  C00A  F008         	movff	??i2_atoi,?i2_atoi
 21428  00409E  C00B  F009         	movff	??i2_atoi+1,?i2_atoi+1
 21429  0040A2  EF57  F020         	goto	i2l1632
 21430  0040A6                     i2l1629:
 21431  0040A6  C015  F008         	movff	i2atoi@n,?i2_atoi
 21432  0040AA  C016  F009         	movff	i2atoi@n+1,?i2_atoi+1
 21433  0040AE                     i2l1632:
 21434  0040AE  0012               	return		;funcret
 21435  0040B0                     __end_ofi2_atoi:
 21436                           	opt callstack 0
 21437                           
 21438 ;; *************** function i2_isspace *****************
 21439 ;; Defined at:
 21440 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 21441 ;; Parameters:    Size  Location     Type
 21442 ;;  c               2    0[COMRAM] int 
 21443 ;; Auto vars:     Size  Location     Type
 21444 ;;		None
 21445 ;; Return value:  Size  Location     Type
 21446 ;;                  2    0[COMRAM] int 
 21447 ;; Registers used:
 21448 ;;		wreg, status,2, status,0
 21449 ;; Tracked objects:
 21450 ;;		On entry : 0/0
 21451 ;;		On exit  : 0/0
 21452 ;;		Unchanged: 0/0
 21453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21454 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21455 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21456 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21457 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21458 ;;Total ram usage:        7 bytes
 21459 ;; Hardware stack levels used:    1
 21460 ;; This function calls:
 21461 ;;		Nothing
 21462 ;; This function is called by:
 21463 ;;		i2_atoi
 21464 ;; This function uses a non-reentrant model
 21465 ;;
 21466                           
 21467                           	psect	text97
 21468  006048                     __ptext97:
 21469                           	opt callstack 0
 21470  006048                     i2_isspace:
 21471                           	opt callstack 12
 21472  006048  0E01               	movlw	1
 21473  00604A  6E07               	movwf	i2_isspace$2463^0,c
 21474  00604C  0E20               	movlw	32
 21475  00604E  1801               	xorwf	i2isspace@c^0,w,c
 21476  006050  1002               	iorwf	(i2isspace@c+1)^0,w,c
 21477  006052  B4D8               	btfsc	status,2,c
 21478  006054  EF2E  F030         	goto	i2u880_41
 21479  006058  EF30  F030         	goto	i2u880_40
 21480  00605C                     i2u880_41:
 21481  00605C  EF49  F030         	goto	i2l7655
 21482  006060                     i2u880_40:
 21483  006060  0EF7               	movlw	247
 21484  006062  6E03               	movwf	??i2_isspace^0,c
 21485  006064  0EFF               	movlw	255
 21486  006066  6E04               	movwf	(??i2_isspace+1)^0,c
 21487  006068  C001  F005         	movff	i2isspace@c,??i2_isspace+2
 21488  00606C  C002  F006         	movff	i2isspace@c+1,??i2_isspace+3
 21489  006070  5003               	movf	??i2_isspace^0,w,c
 21490  006072  2605               	addwf	(??i2_isspace+2)^0,f,c
 21491  006074  5004               	movf	(??i2_isspace+1)^0,w,c
 21492  006076  2206               	addwfc	(??i2_isspace+3)^0,f,c
 21493  006078  5006               	movf	(??i2_isspace+3)^0,w,c
 21494  00607A  E109               	bnz	i2u881_40
 21495  00607C  0E05               	movlw	5
 21496  00607E  5C05               	subwf	(??i2_isspace+2)^0,w,c
 21497  006080  A0D8               	btfss	status,0,c
 21498  006082  EF45  F030         	goto	i2u881_41
 21499  006086  EF47  F030         	goto	i2u881_40
 21500  00608A                     i2u881_41:
 21501  00608A  EF49  F030         	goto	i2l7655
 21502  00608E                     i2u881_40:
 21503  00608E  0E00               	movlw	0
 21504  006090  6E07               	movwf	i2_isspace$2463^0,c
 21505  006092                     i2l7655:
 21506  006092  C007  F001         	movff	i2_isspace$2463,?i2_isspace
 21507  006096  6A02               	clrf	(?i2_isspace+1)^0,c
 21508  006098  0012               	return		;funcret
 21509  00609A                     __end_ofi2_isspace:
 21510                           	opt callstack 0
 21511                           
 21512 ;; *************** function i2_isdigit *****************
 21513 ;; Defined at:
 21514 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 21515 ;; Parameters:    Size  Location     Type
 21516 ;;  c               2    0[COMRAM] int 
 21517 ;; Auto vars:     Size  Location     Type
 21518 ;;		None
 21519 ;; Return value:  Size  Location     Type
 21520 ;;                  2    0[COMRAM] int 
 21521 ;; Registers used:
 21522 ;;		wreg, status,2, status,0
 21523 ;; Tracked objects:
 21524 ;;		On entry : 0/0
 21525 ;;		On exit  : 0/0
 21526 ;;		Unchanged: 0/0
 21527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21528 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21530 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21531 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21532 ;;Total ram usage:        6 bytes
 21533 ;; Hardware stack levels used:    1
 21534 ;; This function calls:
 21535 ;;		Nothing
 21536 ;; This function is called by:
 21537 ;;		i2_vfpfcnvrt
 21538 ;;		i2_atoi
 21539 ;; This function uses a non-reentrant model
 21540 ;;
 21541                           
 21542                           	psect	text98
 21543  0065F4                     __ptext98:
 21544                           	opt callstack 0
 21545  0065F4                     i2_isdigit:
 21546                           	opt callstack 13
 21547  0065F4  0ED0               	movlw	208
 21548  0065F6  6E03               	movwf	??i2_isdigit^0,c
 21549  0065F8  0EFF               	movlw	255
 21550  0065FA  6E04               	movwf	(??i2_isdigit+1)^0,c
 21551  0065FC  C001  F005         	movff	i2isdigit@c,??i2_isdigit+2
 21552  006600  C002  F006         	movff	i2isdigit@c+1,??i2_isdigit+3
 21553  006604  5003               	movf	??i2_isdigit^0,w,c
 21554  006606  2605               	addwf	(??i2_isdigit+2)^0,f,c
 21555  006608  5004               	movf	(??i2_isdigit+1)^0,w,c
 21556  00660A  2206               	addwfc	(??i2_isdigit+3)^0,f,c
 21557  00660C  5006               	movf	(??i2_isdigit+3)^0,w,c
 21558  00660E  E10A               	bnz	i2u878_40
 21559  006610  0E0A               	movlw	10
 21560  006612  5C05               	subwf	(??i2_isdigit+2)^0,w,c
 21561  006614  A0D8               	btfss	status,0,c
 21562  006616  EF0F  F033         	goto	i2u878_41
 21563  00661A  EF12  F033         	goto	i2u878_40
 21564  00661E                     i2u878_41:
 21565  00661E  0E01               	movlw	1
 21566  006620  EF13  F033         	goto	i2u879_40
 21567  006624                     i2u878_40:
 21568  006624  0E00               	movlw	0
 21569  006626                     i2u879_40:
 21570  006626  6E01               	movwf	?i2_isdigit^0,c
 21571  006628  6A02               	clrf	(?i2_isdigit+1)^0,c
 21572  00662A  0012               	return		;funcret
 21573  00662C                     __end_ofi2_isdigit:
 21574                           	opt callstack 0
 21575                           
 21576 ;; *************** function i2___wmul *****************
 21577 ;; Defined at:
 21578 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 21579 ;; Parameters:    Size  Location     Type
 21580 ;;  multiplier      2    0[COMRAM] unsigned int 
 21581 ;;  multiplicand    2    2[COMRAM] unsigned int 
 21582 ;; Auto vars:     Size  Location     Type
 21583 ;;  __wmul          2    4[COMRAM] unsigned int 
 21584 ;; Return value:  Size  Location     Type
 21585 ;;                  2    0[COMRAM] unsigned int 
 21586 ;; Registers used:
 21587 ;;		wreg, status,2, status,0, prodl, prodh
 21588 ;; Tracked objects:
 21589 ;;		On entry : 0/0
 21590 ;;		On exit  : 0/0
 21591 ;;		Unchanged: 0/0
 21592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21593 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21594 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21596 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21597 ;;Total ram usage:        6 bytes
 21598 ;; Hardware stack levels used:    1
 21599 ;; This function calls:
 21600 ;;		Nothing
 21601 ;; This function is called by:
 21602 ;;		i2_atoi
 21603 ;; This function uses a non-reentrant model
 21604 ;;
 21605                           
 21606                           	psect	text99
 21607  0067E0                     __ptext99:
 21608                           	opt callstack 0
 21609  0067E0                     i2___wmul:
 21610                           	opt callstack 12
 21611  0067E0  5001               	movf	i2___wmul@multiplier^0,w,c
 21612  0067E2  0203               	mulwf	i2___wmul@multiplicand^0,c
 21613  0067E4  CFF3 F005          	movff	prodl,i2___wmul@product
 21614  0067E8  CFF4 F006          	movff	prodh,i2___wmul@product+1
 21615  0067EC  5001               	movf	i2___wmul@multiplier^0,w,c
 21616  0067EE  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 21617  0067F0  50F3               	movf	243,w,c
 21618  0067F2  2606               	addwf	(i2___wmul@product+1)^0,f,c
 21619  0067F4  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 21620  0067F6  0203               	mulwf	i2___wmul@multiplicand^0,c
 21621  0067F8  50F3               	movf	243,w,c
 21622  0067FA  2606               	addwf	(i2___wmul@product+1)^0,f,c
 21623  0067FC  C005  F001         	movff	i2___wmul@product,?i2___wmul
 21624  006800  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 21625  006804  0012               	return		;funcret
 21626  006806                     __end_ofi2___wmul:
 21627                           	opt callstack 0
 21628                           
 21629 ;; *************** function i2_TMR0_WriteTimer *****************
 21630 ;; Defined at:
 21631 ;;		line 115 in file "mcc_generated_files/tmr0.c"
 21632 ;; Parameters:    Size  Location     Type
 21633 ;;  timerVal        2    0[COMRAM] unsigned short 
 21634 ;; Auto vars:     Size  Location     Type
 21635 ;;		None
 21636 ;; Return value:  Size  Location     Type
 21637 ;;                  1    wreg      void 
 21638 ;; Registers used:
 21639 ;;		wreg, status,2
 21640 ;; Tracked objects:
 21641 ;;		On entry : 0/0
 21642 ;;		On exit  : 0/0
 21643 ;;		Unchanged: 0/0
 21644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21645 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21648 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21649 ;;Total ram usage:        2 bytes
 21650 ;; Hardware stack levels used:    1
 21651 ;; This function calls:
 21652 ;;		Nothing
 21653 ;; This function is called by:
 21654 ;;		_INTERRUPT_S1_CALLBACK
 21655 ;; This function uses a non-reentrant model
 21656 ;;
 21657                           
 21658                           	psect	text100
 21659  00695A                     __ptext100:
 21660                           	opt callstack 0
 21661  00695A                     i2_TMR0_WriteTimer:
 21662                           	opt callstack 16
 21663  00695A                     
 21664                           ;mcc_generated_files/tmr0.c: 115: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 116: {;mcc_generated_files/tmr0.c: 118:     TMR0H = timerVal >> 8;
 21665  00695A  5002               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
 21666  00695C  6ED7               	movwf	215,c	;volatile
 21667  00695E                     
 21668                           ;mcc_generated_files/tmr0.c: 119:     TMR0L = (uint8_t) timerVal;
 21669  00695E  C001  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
 21670  006962  0012               	return		;funcret
 21671  006964                     __end_ofi2_TMR0_WriteTimer:
 21672                           	opt callstack 0
 21673                           
 21674 ;; *************** function _TMR0_StopTimer *****************
 21675 ;; Defined at:
 21676 ;;		line 96 in file "mcc_generated_files/tmr0.c"
 21677 ;; Parameters:    Size  Location     Type
 21678 ;;		None
 21679 ;; Auto vars:     Size  Location     Type
 21680 ;;		None
 21681 ;; Return value:  Size  Location     Type
 21682 ;;                  1    wreg      void 
 21683 ;; Registers used:
 21684 ;;		None
 21685 ;; Tracked objects:
 21686 ;;		On entry : 0/0
 21687 ;;		On exit  : 0/0
 21688 ;;		Unchanged: 0/0
 21689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21694 ;;Total ram usage:        0 bytes
 21695 ;; Hardware stack levels used:    1
 21696 ;; This function calls:
 21697 ;;		Nothing
 21698 ;; This function is called by:
 21699 ;;		_INTERRUPT_S1_CALLBACK
 21700 ;; This function uses a non-reentrant model
 21701 ;;
 21702                           
 21703                           	psect	text101
 21704  006974                     __ptext101:
 21705                           	opt callstack 0
 21706  006974                     _TMR0_StopTimer:
 21707                           	opt callstack 16
 21708  006974                     
 21709                           ;mcc_generated_files/tmr0.c: 99:     T0CONbits.TMR0ON = 0;
 21710  006974  9ED5               	bcf	213,7,c	;volatile
 21711  006976  0012               	return		;funcret
 21712  006978                     __end_of_TMR0_StopTimer:
 21713                           	opt callstack 0
 21714                           
 21715 ;; *************** function _TMR0_StartTimer *****************
 21716 ;; Defined at:
 21717 ;;		line 90 in file "mcc_generated_files/tmr0.c"
 21718 ;; Parameters:    Size  Location     Type
 21719 ;;		None
 21720 ;; Auto vars:     Size  Location     Type
 21721 ;;		None
 21722 ;; Return value:  Size  Location     Type
 21723 ;;                  1    wreg      void 
 21724 ;; Registers used:
 21725 ;;		None
 21726 ;; Tracked objects:
 21727 ;;		On entry : 0/0
 21728 ;;		On exit  : 0/0
 21729 ;;		Unchanged: 0/0
 21730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21735 ;;Total ram usage:        0 bytes
 21736 ;; Hardware stack levels used:    1
 21737 ;; This function calls:
 21738 ;;		Nothing
 21739 ;; This function is called by:
 21740 ;;		_INTERRUPT_S1_CALLBACK
 21741 ;; This function uses a non-reentrant model
 21742 ;;
 21743                           
 21744                           	psect	text102
 21745  006978                     __ptext102:
 21746                           	opt callstack 0
 21747  006978                     _TMR0_StartTimer:
 21748                           	opt callstack 16
 21749  006978                     
 21750                           ;mcc_generated_files/tmr0.c: 93:     T0CONbits.TMR0ON = 1;
 21751  006978  8ED5               	bsf	213,7,c	;volatile
 21752  00697A  0012               	return		;funcret
 21753  00697C                     __end_of_TMR0_StartTimer:
 21754                           	opt callstack 0
 21755                           
 21756                           	psect	text103
 21757  000000                     __ptext103:
 21758                           	opt callstack 0
 21759  000000                     
 21760                           	psect	rparam
 21761  0000                     
 21762                           	psect	temp
 21763  00005F                     btemp:
 21764                           	opt callstack 0
 21765  00005F                     	ds	1
 21766  0000                     int$flags	set	btemp
 21767  0000                     wtemp8	set	btemp+1
 21768  0000                     ttemp5	set	btemp+1
 21769  0000                     ttemp6	set	btemp+4
 21770  0000                     ttemp7	set	btemp+8
 21771                           tosu	equ	0xFFF
 21772                           tosh	equ	0xFFE
 21773                           tosl	equ	0xFFD
 21774                           stkptr	equ	0xFFC
 21775                           pclatu	equ	0xFFB
 21776                           pclath	equ	0xFFA
 21777                           pcl	equ	0xFF9
 21778                           tblptru	equ	0xFF8
 21779                           tblptrh	equ	0xFF7
 21780                           tblptrl	equ	0xFF6
 21781                           tablat	equ	0xFF5
 21782                           prodh	equ	0xFF4
 21783                           prodl	equ	0xFF3
 21784                           indf0	equ	0xFEF
 21785                           postinc0	equ	0xFEE
 21786                           postdec0	equ	0xFED
 21787                           preinc0	equ	0xFEC
 21788                           plusw0	equ	0xFEB
 21789                           fsr0h	equ	0xFEA
 21790                           fsr0l	equ	0xFE9
 21791                           wreg	equ	0xFE8
 21792                           indf1	equ	0xFE7
 21793                           postinc1	equ	0xFE6
 21794                           postdec1	equ	0xFE5
 21795                           preinc1	equ	0xFE4
 21796                           plusw1	equ	0xFE3
 21797                           fsr1h	equ	0xFE2
 21798                           fsr1l	equ	0xFE1
 21799                           bsr	equ	0xFE0
 21800                           indf2	equ	0xFDF
 21801                           postinc2	equ	0xFDE
 21802                           postdec2	equ	0xFDD
 21803                           preinc2	equ	0xFDC
 21804                           plusw2	equ	0xFDB
 21805                           fsr2h	equ	0xFDA
 21806                           fsr2l	equ	0xFD9
 21807                           status	equ	0xFD8


Data Sizes:
    Strings     249
    Constant    3536
    Data        11
    BSS         91
    Persistent  12
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      94
    BANK0           160     81     113
    BANK1           256    127     205
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[12]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_105(CODE[3]), STR_101(CODE[3]), STR_96(CODE[3]), STR_92(CODE[3]), 
		 -> STR_87(CODE[4]), STR_83(CODE[4]), STR_78(CODE[3]), STR_73(CODE[3]), 
		 -> STR_68(CODE[4]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[4]), 
		 -> STR_48(CODE[3]), STR_43(CODE[3]), STR_38(CODE[4]), STR_33(CODE[3]), 
		 -> STR_29(CODE[3]), STR_24(CODE[3]), STR_20(CODE[3]), STR_15(CODE[4]), 
		 -> STR_11(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_105(CODE[3]), STR_101(CODE[3]), STR_96(CODE[3]), STR_92(CODE[3]), 
		 -> STR_87(CODE[4]), STR_83(CODE[4]), STR_78(CODE[3]), STR_73(CODE[3]), 
		 -> STR_68(CODE[4]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[4]), 
		 -> STR_48(CODE[3]), STR_43(CODE[3]), STR_38(CODE[4]), STR_33(CODE[3]), 
		 -> STR_29(CODE[3]), STR_24(CODE[3]), STR_20(CODE[3]), STR_15(CODE[4]), 
		 -> STR_11(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_8(CODE[40]), STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[39]), 
		 -> STR_4(CODE[22]), STR_3(CODE[12]), STR_1(CODE[13]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_8(CODE[40]), STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[39]), 
		 -> STR_4(CODE[22]), STR_3(CODE[12]), STR_1(CODE[13]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK1[32]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[12]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_8(CODE[40]), STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[39]), 
		 -> STR_4(CODE[22]), STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    S2476_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_8(CODE[40]), STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[39]), 
		 -> STR_4(CODE[22]), STR_3(CODE[12]), read_from_usart@data(BANK1[10]), STR_1(CODE[13]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_8(CODE[40]), STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[39]), 
		 -> STR_4(CODE[22]), STR_3(CODE[12]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 40
		 -> STR_8(CODE[40]), STR_7(CODE[21]), STR_6(CODE[20]), STR_5(CODE[39]), 
		 -> STR_4(CODE[22]), STR_3(CODE[12]), STR_1(CODE[13]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    lcd_draw_string@pS	PTR const unsigned char  size(2) Largest target is 33
		 -> string(BANK1[30]), STR_2(CODE[33]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INTERRUPT_S1_CALLBACK(), IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INTERRUPT_S1_CALLBACK(), Absolute function(), IOCB4_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_S1_CALLBACK->i2_printf
    i2_printf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_xtoa
    i2_xtoa->i2_pad
    i2_toupper->i2_islower
    i2_utoa->i2_pad
    i2_stoa->i2_fputc
    i2_otoa->i2_pad
    i2_dtoa->i2_pad
    i2_abs->i2___aomod
    i2_ctoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_fputc->i2_putch
    i2_putch->i2_EUSART1_Write
    i2_atoi->i2_isspace

Critical Paths under _main in BANK0

    _read_from_usart->_atoi
    _vfpfcnvrt->_ctoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace
    _lcd_init->_lcd_fill
    _lcd_fill->_lcd_set_cursor
    _lcd_draw_string->_lcd_draw_char
    _lcd_draw_char->_lcd_set_cursor
    _lcd_set_cursor->_lcd_set_cursor_x
    _lcd_set_cursor->_lcd_set_cursor_y
    _lcd_set_cursor_y->_lcd_send
    _lcd_set_cursor_x->_lcd_send
    _lcd_draw_pixel->_lcd_send
    _lcd_send->_SPI_ExchangeByte
    ___aldiv->___lmul
    _SYSTEM_Initialize->_TMR0_Initialize
    _SYSTEM_Initialize->_TMR1_Initialize
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_S1_CALLBACK->i2_printf
    i2_vfprintf->i2_vfpfcnvrt

Critical Paths under _main in BANK1

    _main->_snprintf
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0  192007
                                            120 BANK1      7     7      0
                  _ADC_GetConversion
                   _DATAEE_WriteByte
                       _EUSART1_Read
          _IOCB4_SetInterruptHandler
                           _SPI_Open
                  _SYSTEM_Initialize
                    _TMR0_WriteTimer
                            ___aldiv
                             ___lmul
                    _lcd_draw_string
                           _lcd_init
                             _printf
                    _read_from_usart
                           _snprintf
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            14     4     10   59971
                                            106 BANK1     14     4     10
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   59264
                                             84 BANK1     22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _read_from_usart                                     17    15      2    3141
                                             69 BANK0      3     1      2
                                              0 BANK1     14    14      0
                       _EUSART1_Read
                      _EUSART1_Write
                _EUSART1_is_rx_ready
                _EUSART1_is_tx_ready
                    _TMR0_WriteTimer
                               _atoi
 ---------------------------------------------------------------------------------
 (2) _TMR0_WriteTimer                                      2     0      2     297
                                             47 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_tx_ready                                  1     1      0      37
                                             47 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   59086
                                             84 BANK1     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   58206
                                             76 BANK1      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   56776
                                             39 BANK1     37    31      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    8901
                                              0 BANK1     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                             53 BANK0      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                             47 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                             47 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                             47 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    7743
                                              0 BANK1     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                             47 BANK0     17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                             47 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    5995
                                             47 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2800
                                             58 BANK0     22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    7015
                                              0 BANK1     34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    8597
                                              0 BANK1     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             65 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                             47 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                             47 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    6070
                                             76 BANK0      5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    5791
                                             65 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     310
                                             47 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2139
                                             58 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1639
                                             49 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      62
                                             48 BANK0      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Write                                       1     1      0      31
                                             47 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2285
                                             54 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                             47 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     371
                                             47 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     912
                                             47 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0   37190
                           _lcd_fill
                           _lcd_send
                            _msDelay
 ---------------------------------------------------------------------------------
 (2) _msDelay                                              3     3      0      46
                                             47 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _lcd_fill                                             6     4      2   28321
                                             56 BANK0      6     4      2
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_draw_string                                     18     8     10   30352
                                              0 BANK1     18     8     10
                      _lcd_draw_char
 ---------------------------------------------------------------------------------
 (2) _lcd_draw_char                                       22    12     10   29124
                                             56 BANK0     22    12     10
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       4     0      4   18794
                                             52 BANK0      4     0      4
                   _lcd_set_cursor_x
                   _lcd_set_cursor_y
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_y                                     2     0      2    9006
                                             50 BANK0      2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_x                                     2     0      2    9006
                                             50 BANK0      2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_draw_pixel                                       2     0      2    9335
                                             50 BANK0      2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_send                                             2     1      1    8823
                                             48 BANK0      2     1      1
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI_ExchangeByte                                     1     1      0      31
                                             47 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     370
                                             47 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     452
                                             59 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                             47 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                             47 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     174
                                             47 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             47 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             47 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             47 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Open                                             2     2      0      88
                                             47 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_WriteByte                                     4     1      3     393
                                             47 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      22
                                             47 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                         14    14      0   34209
                                             33 BANK0     14    14      0
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (12) _PIN_MANAGER_IOC                                     0     0      0   34209
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (13) _IOCB4_ISR                                           0     0      0   34209
                   Absolute function *
              _INTERRUPT_S1_CALLBACK *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_S1_CALLBACK                               0     0      0   34209
                    _TMR0_StartTimer
                     _TMR0_StopTimer
                  i2_TMR0_WriteTimer
                           i2_printf
 ---------------------------------------------------------------------------------
 (15) i2_printf                                           10     4      6   34139
                                             86 COMRAM     4     4      0
                                             27 BANK0      6     0      6
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (16) i2_vfprintf                                          8     2      6   33879
                                             78 COMRAM     8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (17) i2_vfpfcnvrt                                        46    40      6   33250
                                             68 COMRAM    10     4      6
                                              0 BANK0     27    27      0
                             i2_atoi
                             i2_ctoa
                             i2_dtoa
                            i2_fputc
                          i2_isdigit
                             i2_otoa
                             i2_stoa
                          i2_strncmp
                             i2_utoa
                             i2_xtoa
 ---------------------------------------------------------------------------------
 (18) i2_xtoa                                             39    28     11    4881
                                             29 COMRAM    39    28     11
                          i2_isalpha
                          i2_isupper
                              i2_pad
                          i2_toupper
 ---------------------------------------------------------------------------------
 (19) i2_toupper                                           8     6      2     262
                                              6 COMRAM     8     6      2
                          i2_islower
 ---------------------------------------------------------------------------------
 (20) i2_islower                                           6     4      2      66
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (19) i2_isupper                                           6     4      2      66
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (19) i2_isalpha                                           6     4      2      66
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (18) i2_utoa                                             32    22     10    4388
                                             29 COMRAM    32    22     10
                          i2___lodiv
                          i2___lomod
                              i2_pad
 ---------------------------------------------------------------------------------
 (19) i2___lomod                                          17     1     16     302
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (19) i2___lodiv                                          25     9     16     311
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (18) i2_strncmp                                          11     5      6    2530
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (18) i2_stoa                                             22    18      4    1804
                                             11 COMRAM    22    18      4
                            i2_fputc
                           i2_strlen
 ---------------------------------------------------------------------------------
 (18) i2_otoa                                             34    24     10    3880
                                             29 COMRAM    34    24     10
                              i2_pad
 ---------------------------------------------------------------------------------
 (18) i2_dtoa                                             36    26     10    5187
                                             29 COMRAM    36    26     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (19) i2_abs                                               4     2      2     128
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (19) i2___aomod                                          18     2     16     503
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (19) i2___aodiv                                          26    10     16     515
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (18) i2_ctoa                                              7     4      3    3265
                                             29 COMRAM     5     2      3
                              i2_pad
 ---------------------------------------------------------------------------------
 (19) i2_pad                                              11     5      6    3096
                                             18 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (20) i2_strlen                                            4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (20) i2_fputs                                             7     3      4    1149
                                             11 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (21) i2_fputc                                             9     5      4     869
                                              2 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (22) i2_putch                                             1     1      0      62
                                              1 COMRAM     1     1      0
                    i2_EUSART1_Write
 ---------------------------------------------------------------------------------
 (23) i2_EUSART1_Write                                     1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (18) i2_atoi                                             15    13      2    1115
                                              7 COMRAM    15    13      2
                           i2___wmul
                          i2_isdigit
                          i2_isspace
 ---------------------------------------------------------------------------------
 (19) i2_isspace                                           7     5      2     134
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (18) i2_isdigit                                           6     4      2     136
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (19) i2___wmul                                            6     2      4     302
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (15) i2_TMR0_WriteTimer                                   2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR0_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _DATAEE_WriteByte
   _EUSART1_Read
   _IOCB4_SetInterruptHandler
   _SPI_Open
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
   _TMR0_WriteTimer
   ___aldiv
     ___lmul (ARG)
   ___lmul
   _lcd_draw_string
     _lcd_draw_char
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
   _lcd_init
     _lcd_fill
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
     _lcd_send
       _SPI_ExchangeByte
     _msDelay
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
         _isdigit
         _otoa
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _stoa
           _fputc
             _putch
               _EUSART1_Write
           _strlen
         _strncmp
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
           _toupper
             _islower
   _read_from_usart
     _EUSART1_Read
     _EUSART1_Write
     _EUSART1_is_rx_ready
     _EUSART1_is_tx_ready
     _TMR0_WriteTimer
     _atoi
       ___wmul
       _isdigit
       _isspace
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _stoa
             _fputc
               _putch
                 _EUSART1_Write
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _INTERRUPT_S1_CALLBACK *
         _TMR0_StartTimer
         _TMR0_StopTimer
         i2_TMR0_WriteTimer
         i2_printf
           i2_vfprintf
             i2_vfpfcnvrt
               i2_atoi
                 i2___wmul
                 i2_isdigit
                 i2_isspace
               i2_ctoa
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_EUSART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                   i2_strlen
               i2_dtoa
                 i2___aodiv
                 i2___aomod
                 i2_abs
                   i2___aomod (ARG)
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_EUSART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                   i2_strlen
               i2_fputc
                 i2_putch
                   i2_EUSART1_Write
               i2_isdigit
               i2_otoa
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_EUSART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                   i2_strlen
               i2_stoa
                 i2_fputc
                   i2_putch
                     i2_EUSART1_Write
                 i2_strlen
               i2_strncmp
               i2_utoa
                 i2___lodiv
                 i2___lomod
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_EUSART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                   i2_strlen
               i2_xtoa
                 i2_isalpha
                 i2_isupper
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_EUSART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                   i2_strlen
                 i2_toupper
                   i2_islower
       _IOCB4_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     7F      CD       8       80.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     51      71       5       70.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5E       1      100.0%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     19C       6        0.0%
DATA                 0      0     19C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Dec 09 13:57:40 2020

                                _SPI_Initialize 68EA                                               _a 0185  
                                             _b 0183                                     _SSPSTATbits 000FC7  
                                            l30 690C                                              l51 68FA  
                                            l27 6826                                              l61 684E  
                                            l55 5C58                                              l63 685C  
                                            l64 6860                             ___wmul@multiplicand 0091  
            __size_of_IOCB4_SetInterruptHandler 000A                                     __CFG_BORV$3 000000  
                               _timer0ReloadVal 005B                      ?_IOCB4_SetInterruptHandler 008F  
                                  __CFG_CP0$OFF 000000                                    __CFG_CP1$OFF 000000  
                                  __CFG_CP2$OFF 000000                                    __CFG_CP3$OFF 000000  
                                           l204 66EA                                             l300 6878  
                                           l134 625A                                             l321 693A  
                                           l145 6930                                             l306 691A  
                                           l324 694E                                             l333 6972  
                                           l182 63A8                                             l318 6944  
                                           l431 6206                                             l167 68BE  
                                           l432 6214                                             l512 5AF2  
                                           l273 62A0                                             l281 68E8  
                                           l290 6716                                             l179 6386  
                                           l355 6768                                             l532 37C0  
                                           l429 61F8                                             l277 6712  
                                           l525 3728                                             l294 673E  
                                           l278 6714                                             l518 5BA4  
                                           l367 6926                                             l800 38C4  
                                           l528 3772                                             l297 6866  
                                           l721 5952                                             l716 58D2  
                                           l813 2D4E                                             l566 6582  
                                           l734 2AB2                                             l822 2DF2  
                                           l575 2A0C                                             l719 5916  
                                           l815 2D56                                             l592 6136  
                                           l584 6368                                             l728 5F38  
                                           l736 2ABA                                             l808 3A98  
                                           l920 5E16                                             l761 40F2  
                                           l578 6844                                             l754 2D12  
                                           l770 42AC                                             l595 6890  
                                           l923 67B8                                             l588 6184  
                                           l668 4C42                                             l836 2F92  
                                           l852 01A6                                             l677 5044  
                                           l934 5D3C                                             l838 3000  
                                           l935 5D4C                                             l599 5CE0  
                                           l759 40EA                                             l919 5E0E  
                                           l768 423C                                             l793 4628  
                                           l777 4522                                             l779 452A  
                                           l875 135E                                             l788 45D6  
                                           l789 4620                                             l798 38BC  
                                  __CFG_CPB$OFF 000000                                    __CFG_CPD$OFF 000000  
                            i2___aodiv@quotient 0013                                 _timer1ReloadVal 00C6  
                                           _abs 62E6                                             _pad 588A  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                             __end_ofi2_vfpfcnvrt 25D8  
                               ?_lcd_set_cursor 0094                              __size_of_IOCB4_ISR 002E  
                                          l1002 5262                                            l1050 4DA8  
                                          ?_abs 00A1                                            l1037 47B2  
                                          l1601 6326                                            l1361 5334  
                                          l1371 56CC                                            l1702 5530  
                                          l1632 3CA8                                            l1368 5354  
                                          l1712 5ED2                                            l1641 654A  
                                          l1378 56EC                                            l1635 6426  
                                          l1723 649C                                            l1629 3CA0  
                                          l1717 5EDA                                            l1670 5888  
                                          l1734 5154                                            l1655 64D6  
                                          l1649 6046                                            l1739 5134  
                                          l1692 6690                                            l1685 6790  
                                          l1678 61CC                                            l1598 631E  
                                          l1698 6510                                            l7101 5156  
                                          ?_pad 00A1                                            l7111 518C  
                                          l7103 515C                                            l7121 51CE  
                                          l7113 519C                                            l7105 516A  
                                          l7131 5220                                            l7123 51DA  
                                          l7115 51A0                                            l7107 517A  
                                          l7141 5252                                            l7133 5222  
                                          l7125 51E8                                            l7117 51B0  
                                          l7109 517E                                            l8101 46C6  
                                          l7135 522C                                            l7127 51F2  
                                          l7119 51C6                                            l8031 58AE  
                                          l8111 4748                                            l8103 46DA  
                                          l6513 6928                                            l6601 6764  
                                          l7129 5210                                            l7137 5232  
                                          l8025 684A                                            l8201 5FFA  
                                          l8041 58F8                                            l8033 58BE  
                                          l8121 4792                                            l8113 474A  
                                          l8105 46E8                                            l9001 0492  
                                          l6515 693C                                            l6611 629A  
                                          l6603 625C                                            l7139 5242  
                                          l7091 5CE2                                            l8203 600E  
                                          l8043 5924                                            l8035 58CA  
                                          l8027 588A                                            l8115 475C  
                                          l8107 46FA                                            l8131 4C78  
                                          l8051 6302                                            l9011 0584  
                                          l9003 04CA                                            l6517 6932  
                                          l6605 6270                                            l7093 5CF4  
                                          l8205 603C                                            l8045 5938  
                                          l8037 58DE                                            l8029 589A  
                                          l8109 4728                                            l8117 4762  
                                          l8141 4CD0                                            l8133 4C7C  
                                          l8125 4C44                                            l8053 649E  
                                          l8061 5E7C                                            l9101 0B28  
                                          l9021 0632                                            l9013 05BC  
                                          l9005 0514                                            l6519 6946  
                                          l6607 627E                                            l7095 5D02  
                                          l8071 6512                                            l8207 6040  
                                          l8039 58F2                                            l8119 4772  
                                          l8151 4D52                                            l8143 4CE4  
                                          l8135 4C8A                                            l8127 4C4A  
                                          l9103 0B60                                            l9111 0BAC  
                                          l9031 06DE                                            l9023 0658  
                                          l6801 61D8                                            l6609 628C  
                                          l6561 68F6                                            l7097 5D12  
                                          l7433 6866                                            l8081 462A  
                                          l8145 4CF2                                            l8153 4D58  
                                          l8137 4CAA                                            l8129 4C58  
                                          l8049 62E6                                            l8161 5264  
                                          l8057 63EA                                            l8065 5EB4  
                                          l9201 11D2                                            l9121 0C80  
                                          l9113 0BD2                                            l9105 0B98  
                                          l9041 07A0                                            l9033 0716  
                                          l9009 054C                                            l6811 61EA  
                                          l6803 61DE                                            l6571 623A  
                                          l6563 68F8                                            l7099 5D1C  
                                          l6651 656C                                            l8075 6792  
                                          l7435 6874                                            l7451 6912  
                                          l8091 4670                                            l8083 4630  
                                          l8155 4D68                                            l8147 4D20  
                                          l8139 4CC8                                            l8171 52BA  
                                          l8163 5270                                            l8067 5EC6  
                                          l9203 120A                                            l9131 0D56  
                                          l9123 0CB6                                            l9115 0C1E  
                                          l9043 07E8                                            l9019 060C  
                                          l6813 61EC                                            l6805 61E2  
                                          l6557 6970                                            l6581 68FC  
                                          l6573 6246                                            l6565 6216  
                                          l6741 680A                                            l6653 6570  
                                          l8077 67B0                                            l8093 4690  
                                          l8085 463E                                            l8157 4D88  
                                          l8149 4D40                                            l8181 532E  
                                          l8173 52CC                                            l8165 5290  
                                          l9221 1304                                            l9205 1242  
                                          l9029 06A6                                            l9301 68D6  
                                          l6815 61EE                                            l6807 61E6  
                                          l6583 68AA                                            l6575 6248  
                                          l6567 6232                                            l6559 68EA  
                                          l6591 66E6                                            l6751 681E  
                                          l6743 680E                                            l6647 6550  
                                          l8095 4694                                            l8087 465E  
                                          l8175 52FA                                            l8167 5298  
                                          l8191 5666                                            l8183 561C  
                                          l9207 126C                                            l9215 12BC  
                                          l9151 0E8E                                            l9143 0E18  
                                          l9135 0D8E                                            l9127 0CD6  
                                          l9119 0C5A                                            l9071 09AA  
                                          l9063 0920                                            l9055 08AA  
                                          l9047 0820                                            l9039 0768  
                                          l9231 1324                                            l9311 6738  
                                          l6817 61F2                                            l6809 61E8  
                                          l6761 5BFE                                            l6577 624A  
                                          l6569 6238                                            l6593 6740  
                                          l6585 66C0                                            l6753 6822  
                                          l6745 6812                                            l9321 5C5A  
                                          l6649 655A                                            l7481 57EE  
                                          l8601 5F0C                                            l8097 46A0  
                                          l8089 4662                                            l8177 531A  
                                          l8169 52AC                                            l8193 5694  
                                          l8185 563C                                            l9233 134C  
                                          l9217 12E2                                            l9225 1312  
                                          l9209 127C                                            l9161 0F50  
                                          l9153 0EC6                                            l9145 0E3E  
                                          l9137 0DC6                                            l9129 0D0E  
                                          l9073 09E2                                            l9081 0A34  
                                          l9065 0958                                            l9057 08D0  
                                          l9049 0858                                            l9313 673C  
                                          l9305 6716                                            l9401 514C  
                                          l6819 61F6                                            l6763 5C22  
                                          l6755 5BAA                                            l6579 6258  
                                          l6595 6742                                            l6587 66CC  
                                          l6747 6816                                            l6739 6806  
                                          l9331 5CBC                                            l9323 5C6C  
                                          l7483 580C                                            l7475 57BE  
                                          l8603 5F12                                            l8099 46BE  
                                          l8611 2A58                                            l8179 531C  
                                          l8195 56B4                                            l8187 5644  
                                          l9219 12F0                                            l9163 0F88  
                                          l9083 0A6C                                            l9091 0AB8  
                                          l9075 0A1A                                            l9411 676A  
                                          l9307 6724                                            l6781 6394  
                                          l6765 5C56                                            l6757 5BB8  
                                          l6597 674A                                            l6589 66CE  
                                          l6749 681A                                            l9341 4ACC  
                                          l9333 5CC4                                            l9501 2746  
                                          l7485 5842                                            l7477 57D2  
                                          l8621 2AC2                                            l8613 2A78  
                                          l8701 4212                                            l8197 56C6  
                                          l8189 5658                                            l9181 10DE  
                                          l9165 0FB2                                            l9173 1034  
                                          l9093 0ADE                                            l9085 0AA4  
                                          l9077 0A26                                            l9413 6774  
                                          l9309 672A                                            l9317 691C  
                                          l9421 5B14                                            l6775 636E  
                                          l6759 5BFA                                            l6599 6762  
                                          l9271 6366                                            l9263 6328  
                                          l9343 4B10                                            l9327 5C94  
                                          l9511 2782                                            l9503 2752  
                                          l8199 5FF4                                            l8551 3AEA  
                                          l8543 3A9A                                            l7479 57E4  
                                          l8631 2B00                                            l8623 2AD6  
                                          l8615 2A88                                            l8607 2A0E  
                                          l8711 4276                                            l8703 422C  
                                          l9191 116A                                            l9175 106C  
                                          l9167 0FC2                                            l9159 0F18  
                                          l9095 0B14                                            l9319 6922  
                                          l9423 5B28                                            l9431 5B64  
                                          l6777 6382                                            l9265 6344  
                                          l9361 4BE2                                            l9329 5CA0  
                                          l9601 299E                                            l9521 27BE  
                                          l9513 278E                                            l9505 275E  
                                          l9441 25E4                                            l8561 3B5C  
                                          l8553 3B3A                                            l8545 3AB0  
                                          l7673 6186                                            l7681 64D8  
                                          l8633 2B08                                            l8641 2C02  
                                          l8625 2AE6                                            l8617 2A8A  
                                          l8609 2A2E                                            l8705 424C  
                                          l8713 427C                                            l8721 44B8  
                                          l8801 2D40                                            l9193 1182  
                                          l9177 10A4                                            l9169 0FF8  
                                          l9281 5DBC                                            l9433 5B88  
                                          l9425 5B3C                                            l9417 5AE4  
                                          l6779 6384                                            l9275 687A  
                                          l9267 6360                                            l9363 4BE6  
                                          l9355 4B1A                                            l9371 4C0A  
                                          l9339 4AC2                                            l9611 29DA  
                                          l9603 29AA                                            l9531 27FA  
                                          l9523 27CA                                            l9515 279A  
                                          l9507 276A                                            l9451 261A  
                                          l9443 25EA                                            l8571 3C0A  
                                          l8563 3B64                                            l8555 3B3E  
                                          l8547 3AB4                                            l7675 6194  
                                          l7683 64E4                                            l8643 2C1E  
                                          l8651 2C80                                            l8635 2B8E  
                                          l8627 2AEE                                            l8619 2AA4  
                                          l8707 4260                                            l8731 4500  
                                          l8723 44CC                                            l7691 6464  
                                          l8811 2DAA                                            l8803 2D6E  
                                          l9195 1190                                            l9179 10CE  
                                          l9187 111E                                            l9283 5DCA  
                                          l9291 66EC                                            l9435 5B9C  
                                          l9427 5B50                                            l9419 5B00  
                                          l8901 60EA                                            l9365 4BF6  
                                          l9357 4BC6                                            l9349 4B16  
                                          l9621 4F12                                            l9613 29EC  
                                          l9605 29B6                                            l9541 2836  
                                          l9533 2806                                            l9525 27D6  
                                          l9517 27A6                                            l9509 2776  
                                          l9461 2656                                            l9453 2626  
                                          l9445 25F6                                            l8565 3B6C  
                                          l8549 3AB8                                            l7677 61A6  
                                          l7685 64EA                                            l8661 2CCA  
                                          l8653 2C94                                            l8645 2C3C  
                                          l8637 2B96                                            l8629 2AF8  
                                          l8709 4266                                            l8741 4584  
                                          l8725 44D4                                            l8717 449E  
                                          l8813 2DB2                                            l8805 2D78  
                                          l9189 1144                                            l9285 5DF0  
                                          l9293 66F2                                            l9429 5B5E  
                                          l9381 506A                                            l9373 5046  
                                          l6799 61CE                                            l8591 6842  
                                          l8903 6102                                            l9367 4BF8  
                                          l9359 4BD6                                            l9631 4FE0  
                                          l9623 4F28                                            l9615 29F8  
                                          l9607 29C2                                            l9551 2872  
                                          l9543 2842                                            l9535 2812  
                                          l9527 27E2                                            l9519 27B2  
                                          l9471 2692                                            l9463 2662  
                                          l9455 2632                                            l9447 2602  
                                          l9439 25D8                                            l8575 3C60  
                                          l8567 3BB8                                            l8559 3B46  
                                          l7679 61AC                                            l7687 6502  
                                          l8663 2CD2                                            l8655 2CA4  
                                          l8647 2C56                                            l8639 2B9C  
                                          l8671 40C0                                            l8743 4590  
                                          l8735 454C                                            l8727 44E8  
                                          l8719 44B0                                            l8831 2E84  
                                          l8823 2E26                                            l8815 2DBA  
                                          l8807 2D98                                            l9279 5DB4  
                                          l9295 6700                                            l9391 50D4  
                                          l9383 5088                                            l9375 505A  
                                          l9711 35CA                                            l8585 682C  
                                          l9369 4C08                                            l9633 500E  
                                          l9625 4F62                                            l9617 29FE  
                                          l9609 29CE                                            l9561 28AE  
                                          l9553 287E                                            l9545 284E  
                                          l9537 281E                                            l9529 27EE  
                                          l9481 26CE                                            l9473 269E  
                                          l9465 266E                                            l9457 263E  
                                          l9449 260E                                            l8577 3C72  
                                          l8593 5EDC                                            l8657 2CAC  
                                          l8665 2CE2                                            l8649 2C70  
                                          l8681 4128                                            l8673 40C2  
                                          l8753 45E8                                            l8745 45AE  
                                          l8737 4560                                            l8729 44F0  
                                          l8761 3892                                            l8825 2E38  
                                          l8833 2E98                                            l8817 2DD6  
                                          l8841 2F14                                            l8809 2DA2  
                                          l8921 00EC                                            l8913 00A2  
                                          l9297 670E                                            l9393 50E8  
                                          l9385 5094                                            l9377 5062  
                                          l9721 35E2                                            l9713 35CE  
                                          l8587 6838                                            l8907 6108  
                                          l9627 4F66                                            l9635 5012  
                                          l9619 4F0E                                            l9571 28EA  
                                          l9563 28BA                                            l9555 288A  
                                          l9547 285A                                            l9539 282A  
                                          l9491 270A                                            l9483 26DA  
                                          l9475 26AA                                            l9467 267A  
                                          l9459 264A                                            l8579 3C84  
                                          l8595 5EF0                                            l8659 2CBE  
                                          l8691 415C                                            l8683 4134  
                                          l8675 40DC                                            l8755 45FC  
                                          l8747 45B4                                            l8739 4566  
                                          l8771 38FE                                            l8763 3894  
                                          l8851 2FA2                                            l8843 2F30  
                                          l8835 2EAA                                            l8819 2DE6  
                                          l8931 0118                                            l8923 00FA  
                                          l8915 00C8                                            l9395 50F6  
                                          l9387 50A0                                            l9731 36B6  
                                          l9723 360E                                            l9715 35D0  
                                          l9707 35C0                                            l8589 683A  
                                          l8909 6134                                            l9629 4FB4  
                                          l9581 2926                                            l9573 28F6  
                                          l9565 28C6                                            l9557 2896  
                                          l9549 2866                                            l9493 2716  
                                          l9485 26E6                                            l9477 26B6  
                                          l9469 2686                                            l8597 5EFC  
                                          l8693 4162                                            l8685 413C  
                                          l8677 411A                                            l8669 40B0  
                                          l8757 4602                                            l8749 45B8  
                                          l8861 5446                                            l8773 3906  
                                          l8781 39F2                                            l8765 38AE  
                                          l8853 2FAA                                            l8845 2F4E  
                                          l8837 2EB0                                            l8829 2E72  
                                          l8925 00FE                                            l8917 00D6  
                                          l9397 5124                                            l9389 50B0  
                                          l9637 6662                                            l9741 3796  
                                          l9733 36E2                                            l9725 361C  
                                          l9717 35D2                                            l9709 35C4  
                                          l9591 2962                                            l9583 2932  
                                          l9575 2902                                            l9567 28D2  
                                          l9559 28A2                                            l9495 2722  
                                          l9487 26F2                                            l9479 26C2  
                                          l8599 5F08                                            l8687 4144  
                                          l8695 41C0                                            l8679 4124  
                                          l8871 54AA                                            l8863 5472  
                                          l8783 3A06                                            l8791 3A68  
                                          l8775 3980                                            l8767 38EC  
                                          l8759 3882                                            l8855 2FBA  
                                          l8847 2F68                                            l8839 2EB6  
                                          l8951 01B6                                            l8943 0130  
                                          l8935 0120                                            l8927 0110  
                                          l8919 00E8                                            l9399 513C  
                                          l9639 666C                                            l9751 3818  
                                          l9743 37CE                                            l9735 372A  
                                          l9727 362A                                            l9719 35E0  
                                          l9593 296E                                            l9585 293E  
                                          l9577 290E                                            l9569 28DE  
                                          l9497 272E                                            l9489 26FE  
                                          l8697 41DA                                            l8689 4156  
                                          l8873 54C8                                            l8785 3A24  
                                          l8777 3986                                            l8769 38F6  
                                          l8857 2FD0                                            l8849 2F82  
                                          l8961 0230                                            l8953 01B8  
                                          l9753 3838                                            l9745 37E4  
                                          l9737 3774                                            l9729 3688  
                                          l8891 6150                                            l9595 297A  
                                          l9587 294A                                            l9579 291A  
                                          l9499 273A                                            l8699 41F8  
                                          l8875 54DA                                            l8867 547E  
                                          l8787 3A3E                                            l8779 398C  
                                          l8795 2D14                                            l8963 0250  
                                          l8971 02BA                                            l8955 01DE  
                                          l8947 013C                                            l8939 0128  
                                          l9755 385C                                            l9747 37EC  
                                          l9739 3782                                            l9597 2986  
                                          l9589 2956                                            l8877 5508  
                                          l8869 548C                                            l8789 3A58  
                                          l8797 2D24                                            l8981 0358  
                                          l8973 02E0                                            l8965 025E  
                                          l8957 0214                                            l8949 0192  
                                          l9749 3810                                            l8895 6156  
                                          l9599 2992                                            l8799 2D26  
                                          l8983 0378                                            l8975 02EA  
                                          l8991 03E2                                            l8959 0222  
                                          STR_1 FFB4                                            STR_2 FF54  
                                          l8897 6182                                            l8889 6138  
                                          l8993 0408                                            l8985 0386  
                                          l8977 02F8                                            l8969 02A8  
                                          l9961 0164                                            STR_3 FFC1  
                                          STR_4 FF75                                            l9963 3BA2  
                                          l8995 043C                                            l8979 031E  
                                          STR_5 FF2D                                            STR_6 FFA0  
                                          l8989 03D0                                            STR_7 FF8B  
                                          STR_8 FF05                                            l8999 0458  
                                          STR_9 FFD1                                            _LATA 000F89  
                                          _LATB 000F8A                                            _LATC 000F8B  
                                          _LATD 000F8C                                            _LATE 000F8D  
                                          u8110 5D02                                            u8111 5CFE  
                                          u8120 5D3C                                            u8121 5D38  
                                          u8130 516A                                            u8131 5166  
                                          u8140 518C                                            u8141 5188  
                                          u8150 51C6                                            u8151 51C2  
                                          u8160 51E8                                            u8161 51E4  
                                          u8170 5210                                            u8171 520C  
                                          u8180 5242                                            u8500 5842  
                                          u8181 523E                                            u8501 583E  
                                          u7740 6582                                            u8380 6874  
                                          u7741 657E                                            u8381 6870  
                                          u7910 6394                                            u8470 57D2  
                                          u7911 6390                                            u8471 57CE  
                                          u8480 57E4                                            u8481 57E0  
                                          u7930 6206                                            u8490 580C  
                                          u7931 6202                                            u8491 5808  
                                          u9700 5916                                            u8900 6498  
                                          u9701 5912                                            u9710 5924  
                                          u9711 5920                                            u9800 6544  
                                          u9720 6302                                            u7945 6212  
                                          u9801 653E                                            u9721 62FE  
                                          u7946 6214                                            u7890 5BB8  
                                          u9810 6546                                            u9730 64D0  
                                          u7891 5BB4                                            u9731 64CA  
                                          u9820 463E                                            u9900 4C8A  
                                          u9740 64D2                                            u9821 463A  
                                          u9901 4C86                                            u9670 685C  
                                          u8870 61CC                                            u9830 4670  
                                          u9910 4CC8                                            u9750 6420  
                                          u9671 6858                                            u8871 61C8  
                                          u9831 466C                                            u9911 4CC4  
                                          u9751 641A                                            u8880 6502  
                                          u9680 589A                                            u9920 4CF2  
                                          u9760 6422                                            u8881 64FE  
                                          u9681 5896                                            u9841 469A  
                                          u9921 4CEE                                            u9690 58BE  
                                          u9850 46BE                                            u9930 4D20  
                                          u8890 6496                                            u9770 5EAE  
                                          u9691 58BA                                            u9851 46BA  
                                          u9931 4D1C                                            u8891 6490  
                                          u9771 5EA8                                            u9860 46E8  
                                          u9940 4D68                                            u9780 5EB0  
                                          u9861 46E4                                            u9941 4D64  
                                          u9870 4728                                            u9790 5EC6  
                                          u9871 4724                                            u9951 526A  
                                          u9791 5EC2                                            u9880 4772  
                                          u9960 5290                                            u9881 476E  
                                          u9961 528C                                            u9890 4C58  
                                          u9970 52BA                                            u9891 4C54  
                                          u9971 52B6                                            u9980 52FA  
                                          u9981 52F6                                            u9990 563C  
                                          u9991 5638                                            _WPUB 000F5B  
                                 _EUSART1_Write 6862                                            abs@a 00A1  
                                          _dbuf 0189                                            _atoi 3A9A  
                                          _ctoa 5EDC                                            _main 35C0  
                                          _dtoa 2A0E                                            _font F135  
                                 ?_EUSART1_Read 0001                                            _prec 00B7  
                               _TMR0_StartTimer 6978                                            _otoa 40B0  
                                          _nout 017F                                            pad@i 00A8  
                                          pad@p 00A5                                            fsr0h 000FEA  
                                          fsr1h 000FE2                                            indf0 000FEF  
                                          fsr2h 000FDA                                            fsr0l 000FE9  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 00AA                                            fsr2l 000FD9  
                                          _stoa 449E                                            btemp 005F  
                                          _utoa 3882                                            _xtoa 2D14  
                                   i2_atoi$2436 0010                                     i2_atoi$2437 0014  
                                   i2_atoi$2438 0012                                            prodh 000FF4  
                                          prodl 000FF3                                            start 009E  
                                 __CFG_IESO$OFF 000000                                 __end_ofi2_fputc 5A1E  
                               __end_ofi2_fputs 62E6                          __end_of_SPI_Initialize 68FC  
                               __end_ofi2_putch 695A                                   lcd_fill@width 009C  
                                 __CFG_MCLRE$ON 000000                                     i2_dtoa$1823 0030  
                                  ___param_bank 000000                        __size_ofi2_EUSART1_Write 0016  
                                         ??_abs 00A3                                           ??_pad 00A7  
                     __size_of_DATAEE_WriteByte 0048                                      i2_vfprintf 5E18  
                       __end_of_TMR0_Initialize 676A                  __size_of_OSCILLATOR_Initialize 0012  
                 __end_of_OSCILLATOR_Initialize 690E                                 __end_of___aldiv 5264  
                               __end_of___aodiv 47B4                                           ?_atoi 0096  
                                         ?_ctoa 00AC                                           ?_main 0001  
                                         ?_dtoa 0100                                 __end_of___aomod 4DAA  
                                         _EEADR 000F74                                           STR_11 FFD1  
                                         STR_20 FFD2                                           STR_13 FFD5  
                                         STR_15 FFD5                                           STR_31 FFEF  
                                         STR_24 FFD6                                           STR_33 FFEF  
                                         STR_43 FFDE                                           STR_27 FFEC  
                                         STR_51 FFD9                                           STR_36 FFDD  
                                         STR_29 FFEC                                           STR_53 FFD9  
                                         STR_61 FFF2                                           STR_38 FFDD  
                                         STR_46 FFF5                                           STR_63 FFF2  
                                         STR_48 FFF5                                           STR_73 FFE2  
                                         STR_81 FFE5                                           STR_58 FFDA  
                                         STR_66 FFE1                                           STR_83 FFE5  
                                         STR_68 FFE1                                           STR_92 FFE6  
                                         STR_76 FFF8                                           STR_85 FFCD  
                                         STR_78 FFF8                                           STR_87 FFCD  
                                         STR_96 FFCE                                           ?_otoa 0100  
                                         STR_99 FFFB               __end_of_IOCB4_SetInterruptHandler 6932  
                                         ?_stoa 009A                                           u10000 5666  
                                         u10001 5662                                           u10010 5694  
                                         u10011 5690                                           u10020 600E  
                                         u10021 600A                                           u10030 603C  
                                         u10031 6038                                           ?_utoa 0100  
                                         u11000 3A24                                           u11001 3A20  
                                         u11010 3A3E                                           u11011 3A3A  
                                         u11020 3A58                                           u11100 2E38  
                                         u11021 3A54                                           u11101 2E34  
                                         u11030 3A68                                           u11110 2E6C  
                                         u11031 3A64                                           u11111 2E66  
                                         u11200 2FA2                                           u11120 2E6E  
                                         u11040 2D24                                           u11201 2F9E  
                                         u11041 2D20                                           u11210 5472  
                                         u11130 2E84                                           u11050 2D40  
                                         u12010 5B00                                           u11211 546E  
                                         u11131 2E80                                           u11051 2D3C  
                                         u12011 5AFC                                           u10500 3AEA  
                                         u11220 54AA                                           u11140 2EEE  
                                         u11060 2D6E                                           u11300 01A6  
                                         u12020 5B14                                           u10501 3AE6  
                                         u11221 54A6                                           u11061 2D6A  
                                         u11301 01A2                                           u12021 5B10  
                                         u10510 3B16                                           u11230 54C8  
                                         u11150 2F30                                           u11070 2DD6  
                                         u11310 01B6                                           u12030 5B3C  
                                         u11231 54C4                                           u11151 2F2C  
                                         u11071 2DD2                                           u11311 01B2  
                                         u12031 5B38                                           u10600 3C84  
                                         u10520 3B3A                                           u11240 54DA  
                                         u11160 2F4E                                           u11080 2E20  
                                         u11400 03CC                                           u11320 01DE  
                                         u12040 5B88                                           _T0CON 000FD5  
                                         u10601 3C80                                           u10521 3B36  
                                         u11241 54D6                                           u11161 2F4A  
                                         u11145 2EDC                                           u11081 2E1A  
                                         u11321 01DA                                           u12041 5B84  
                                         u12050 4F90                                           u10530 3B58  
                                         u11250 5508                                           u11170 2F68  
                                         u11090 2E22                                           u11410 03E2  
                                         u11330 0222                                           u12210 3728  
                                         u10531 3B54                                           u11251 5504  
                               __end_of___lodiv 5356                                           u11171 2F64  
                                         u11411 03DE                                           u11331 021E  
                                         u12211 3724                                           u12060 4FB4  
                                         u10540 3B8E                                           u10620 5EF0  
                                         u10700 2C1E                                           u11180 2F82  
                                         u11500 0716                                           u11420 0408  
                                         u11340 02A2                                           u12220 3772  
                                         u12061 4FB0                                           u10517 3B0C  
                                         u10621 5EEC                                           u10701 2C1A  
                                         u11181 2F7E                                           u11501 0712  
                                         u11421 0404                                           u11341 029C  
                                         u12221 376E                                           u11270 6150  
                                         u12070 5034                                           u10550 3BEE  
                                         u10710 2C3C                                           u10630 2A40  
                                         u11190 2F92                                           u11510 07A0  
                                         u11430 0492                                           u11350 02A4  
                                         u12230 3796                                           u10615 6836  
                                         u11271 614C                                           u10711 2C38  
                                         u10631 2A3A                                           u11191 2F8E  
                                         u11511 079C                                           u11431 048E  
                                         u12231 3792                                           ?_xtoa 0100  
                                         u10616 6838                                           u11280 6102  
                                         u12080 5044                                           u10560 3C34  
                                         u10720 2C56                                           u10640 2A42  
                                         u10800 419A                                           u11600 0C80  
                                         u11520 0858                                           u11440 04CA  
                                         u11360 02BA                                           u12240 3838  
                                         _T1CON 000FCD                                           u11281 60FE  
                                         u12081 5040                                           u12057 4F86  
                                         u10721 2C52                                           u11601 0C7C  
                                         u11521 0854                                           u11441 04C6  
                                         u11361 02B6                                           u12241 3834  
                                         u10570 3C5A                                           u10490 3ADA  
                                         u10730 2C70                                           u10650 2A58  
                                         u10810 41DA                                           u11610 0D0E  
                                         u11530 08D0                                           u11450 0584  
                                         u11370 02E0                                           u11290 00C8  
                                         u10571 3C54                                           u10547 3B84  
                                         u10731 2C6C                                           u10651 2A54  
                                         u10811 41D6                                           u11611 0D0A  
                                         u11531 08CC                                           u11451 0580  
                                         u11371 02DC                                           u11291 00C4  
                                         u10580 3C5C                                           u10740 2C80  
                                         u10660 2A88                                           u10820 41F8  
                                         u10900 4500                                           u11700 116A  
                                         u11620 0DC6                                           u11540 0958  
                                         u11460 05BC                                           u11380 031E  
                                         u12077 502A                                           u10557 3BE4  
                                         u10741 2C7C                                           u10661 2A84  
                                         u10821 41F4                                           u10805 4188  
                                         u10901 44FC                                           u11701 1166  
                                         u11621 0DC2                                           u11541 0954  
                                         u11461 05B8                                           u11381 031A  
                                         u10590 3C72                                           u10750 2C94  
                                         u10670 2AA4                                           u10830 4212  
                                         u10910 451E                                           u11710 120A  
                                         u11630 0E3E                                           u11550 09E2  
                                         u11470 0632                                           u11390 03CA  
                                         u10591 3C6E                                           u10567 3C2A  
                                         u10751 2C90                                           u10671 2AA0  
                                         u10831 420E                                           u10911 451A  
                                         u11711 1206                                           u11631 0E3A  
                                         u11551 09DE                                           u11471 062E  
                                         u11391 03C4                                           u10760 2CA4  
                                         u10680 2AD6                                           u10840 422C  
                                         u10920 4548                                           u11720 1242  
                                         u11640 0EC6                                           u11560 0A6C  
                                         u11480 0658                                           u10497 3AD0  
                                         u10761 2CA0                                           u10681 2AD2  
                                         u10841 4228                                           u10921 4544  
                                         u11721 123E                                           u11641 0EC2  
                                         u11561 0A68                                           u11481 0654  
                                         u10770 2CBE                                           u10690 2AE6  
                                         u10850 423C                                           u10930 4584  
                                         u11730 12E2                                           u11650 0F50  
                                         u11570 0ADE                                           u11490 06DE  
                                         u11810 6700                                           u10771 2CBA  
                                         u10691 2AE2                                           u10851 4238  
                                         u10931 4580                                           u11731 12DE  
                                         u11651 0F4C                                           u11571 0ADA  
                                         u11491 06DA                                           u11811 66FC  
                                         u10860 424C                                           u10780 40C0  
                                         u10940 45D6                                           u11660 0F88  
                                         u11580 0B60                                           u11820 670E  
                                         u12357 6562                                           u10861 4248  
                                         u10781 40BC                                           u10941 45D2  
                                         u11661 0F84                                           u11581 0B5C  
                                         u11821 670A                                           u11910 4BC6  
                                         u10870 4260                                           u10790 40DC  
                                         u10950 45E4                                           u11670 106C  
                                         u11590 0BD2                                           u11830 68E6  
                                         u11911 4BC2                                           u10871 425C  
                                         u10791 40D8                                           u10951 45E0  
                                         u11671 1068                                           u11591 0BCE  
                                         u11831 68E0                                           u11760 6344  
                                         u11920 4BF6                                           u11904 4BA4  
                                         u10960 4620                                           u11680 10A4  
                                         u11840 6724                                           u11761 6340  
                                         u11921 4BF2                                           u11905 4B9E  
                                         u10961 461C                                           u10881 44A8  
                                         u11681 10A0                                           u11841 6720  
                                         u11770 6360                                           u11930 4C08  
                                         u10890 44CC                                           u10970 3892  
                                         u11690 1144                                           u11850 6738  
                                         u11771 635C                                           u11931 4C04  
                                         u10891 44C8                                           u10971 388E  
                                         u11691 1140                                           u11851 6734  
                                         u11940 4C42                                           u11860 5C90  
                                         u10980 38AE                                           u11780 5E0E  
                                         u11836 68E8                                           u11941 4C3E  
                                         u11861 5C8C                                           u10981 38AA  
                                         u11781 5E0A                                           u11870 5CBC  
                                         u10990 3A06                                           u11950 505A  
                                         u11871 5CB8                                           u10991 3A02  
                                         u11951 5056                                           u11880 5CE0  
                                         u11960 5088                                           u11881 5CDC  
                               __end_of___lomod 56EE                                           u11961 5084  
                                         u11970 50E8                                           u11971 50E4  
                                         u11980 50F6                                           u11981 50F2  
                                         u11990 5124                                           u11991 5120  
                                         i2l300 68D4                                           i2l142 66BE  
                                         i2l306 6958                                           i2l138 68A8  
                                         i2l148 697C                                           i2l340 0062  
                               _TMR0_WriteTimer 691C                                           i2l361 6976  
                                         i2l507 60E8                                           i2l358 697A  
                                         i2l367 6962                                           i2l800 3CEA  
                                         i2l297 68C2                                           i2l721 5AE2  
                                         i2l716 5A64                                           i2l813 331E  
                                         i2l734 30A2                                           i2l822 33BC  
                                         i2l719 5AA6                                           i2l815 3326  
                                         i2l728 5FF2                                           i2l736 30AA  
                                         i2l808 3EAC                                           i2l920 5E7A  
                                         i2l761 42EE                                           i2l754 32E4  
                                         i2l770 449C                                           i2l923 6804  
                                         i2l836 355A                                           i2l852 1456  
                                         i2l838 35BE                                           i2l759 42E6  
                                         i2l919 5E72                                           i2l768 4436  
                                         i2l793 4AC0                                           i2l777 49BC  
                                         i2l779 49C4                                           i2l875 25D6  
                                         i2l788 4A6E                                           i2l789 4AB8  
                                         i2l798 3CE2                                    vfpfcnvrt@fmt 0129  
                                         _TMR0H 000FD7                                    vfpfcnvrt@llu 0144  
                                         _TMR1H 000FCF                                           _TMR0L 000FD6  
                                         _TMR1L 000FCE                                           _PORTB 000F81  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           _TRISD 000F95  
                                         _TRISE 000F96                                           i2_abs 63AA  
                                         i2_pad 5A1E                                   __CFG_WRT0$OFF 000000  
                               ??_lcd_draw_char 00A2                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                             ___lmul@multiplicand 0093  
                                 __CFG_WRT3$OFF 000000                                  __CFG_EBTR0$OFF 000000  
                                __CFG_FCMEN$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                                 __CFG_WRTB$OFF 000000                                   __CFG_WRTC$OFF 000000  
                                 __CFG_WRTD$OFF 000000                                 __end_of_msDelay 6584  
                                         _acess 00BD                                      i2isalpha@c 0001  
                                __CFG_EBTRB$OFF 000000                                      i2isdigit@c 0001  
                       __end_of_PIN_MANAGER_IOC 68AA                                           _flags 00B9  
                                         _errno 017D                                           _fputc 57BE  
                               __end_of_isalpha 6428                                           _fputs 6186  
                               __end_of_isdigit 654C                                           atoi@n 00A3  
                                         pad@fp 00A1                                           atoi@s 0096  
                                         _width 00B5                                           ctoa@c 00AE  
                                         _putch 690E                                           ctoa@w 00AF  
                                         dtoa@d 0102                                           dtoa@i 0122  
                                         dtoa@n 011A                                           dtoa@p 0114  
                                         dtoa@s 0118                                           dtoa@w 0116  
                              __end_of_SPI_Open 5C5A                                 __end_of_islower 649E  
                               __end_of_isspace 6048                                  ?_EUSART1_Write 0001  
                       __end_of_TMR1_Initialize 66EC                                 __end_of_isupper 64D8  
                                         pclath 000FFA                                           tablat 000FF5  
                                         otoa@d 0102                                           otoa@i 0120  
                                         otoa@n 0118                                           otoa@p 0112  
                                         otoa@t 0114                                           otoa@w 0116  
                              __end_ofi2___wmul 6806                                  ??_EUSART1_Read 008F  
                                         plusw1 000FE3                                           plusw2 000FDB  
                                         stoa@i 00A6                                           stoa@l 00AE  
                                         stoa@p 00AC                                           stoa@s 009C  
                                         stoa@w 00A8                                           ttemp5 0060  
                                         ttemp6 0063                                           ttemp7 0067  
                                    i2islower@c 0001                                           utoa@d 0102  
                                         utoa@i 011E                                           utoa@n 0116  
                                         utoa@p 0112                                           utoa@w 0114  
                                         status 000FD8                                      i2isspace@c 0001  
                                         wtemp8 0060                                           xtoa@c 0125  
                                         xtoa@d 0102                                           xtoa@i 0123  
                                         xtoa@n 011B                                           xtoa@p 0117  
                                         xtoa@w 0119                                           xtoa@x 010A  
                               __end_of_strncmp 5532                                 __end_of_toupper 5EDC  
                                lcd_fill@height 009A                                ___lodiv@dividend 008F  
            _EUSART1_DefaultFramingErrorHandler 000000                              __size_ofi2___aodiv 0188  
                            __size_ofi2___aomod 0164                                      i2isupper@c 0001  
                            __size_ofi2___lodiv 00F0                              __size_ofi2___lomod 00D0  
                              __end_ofi2_printf 67E0                                 ?_SPI_Initialize 0001  
               ??_IOCB4_DefaultInterruptHandler 0001                                    _toupper$2550 009B  
                              __end_ofi2_strlen 6662                                 __initialization 5D4E  
                             ??_read_from_usart 00A7                                    __end_of_atoi 3CAA  
                                  __end_of_ctoa 5F3A                      __end_of_EUSART1_Initialize 62A2  
                                  __end_of_main 3882                                    __end_of_dtoa 2D14  
                                  __end_of_font FF01                                    __end_of_otoa 42AE  
                                  __end_of_stoa 462A                                      i2printf@ap 0059  
                                  __end_of_utoa 3A9A                                    __end_of_xtoa 3002  
                             __end_of_IOCB4_ISR 66C0                              __size_ofi2_isalpha 003C  
                            __size_ofi2_isdigit 0038                     ?_INTERRUPT_InterruptManager 0001  
                                    i2stoa@nuls 0011                                     i2_vfpfcnvrt 1360  
                            __size_ofi2_islower 0038                              __size_ofi2_isspace 0052  
                                 i2vfpfcnvrt@ap 0049                                   i2vfpfcnvrt@cp 0060  
                                 i2vfpfcnvrt@fp 0045                                   i2vfpfcnvrt@ll 0068  
                                   i2_xtoa$1860 0033                                   i2vfpfcnvrt@vp 0070  
                                   i2_xtoa$1859 0031                              __size_ofi2_isupper 0038  
                                        ??_atoi 0098                                          ??_ctoa 00AF  
                                        ??_main 0178                                          ??_dtoa 010A  
                             ?_lcd_set_cursor_x 0092                               ?_lcd_set_cursor_y 0092  
                                 lcd_send@value 0090                                          ??_otoa 010A  
                                        ??_stoa 009E                                          ??_utoa 010A  
                                        ??_xtoa 010B                                   __activetblptr 000003  
                            ??_lcd_set_cursor_x 0094                              ??_lcd_set_cursor_y 0094  
                                        ?i2_abs 0013                                  __CFG_RETEN$OFF 000000  
                            __size_ofi2_strncmp 00EA                              __size_ofi2_toupper 005E  
                                        ?i2_pad 0013                                ___lodiv@quotient 009F  
                                    i2strncmp@l 0008                                      i2strncmp@n 0005  
                                    i2strncmp@r 000A                                      i2toupper@c 0007  
                                lcd_draw_char@i 00AD                                  lcd_draw_char@j 00AB  
                                lcd_draw_char@k 00AC                        __end_of_SPI_ExchangeByte 6862  
                       __end_of_TMR0_StartTimer 697C                                  lcd_draw_char@x 0098  
                                lcd_draw_char@y 009A                                          _ADCON0 000FC2  
                                        _ADCON1 000FC1                                          _ADCON2 000FC0  
                                        ?_fputc 0091                                          STR_101 FFFB  
                                        ?_fputs 009A                                          STR_103 FFE9  
                                        STR_105 FFE9                                          _ADRESH 000FC4  
                                        _EEADRH 000F75                                          _ADRESL 000FC3  
                                        _EEDATA 000F73                                          _EECON2 000F7E  
                                        _ANCON0 000F5D                                          _ANCON1 000F5C  
                                        ?_putch 0001                                          _T1GCON 000FAA  
                  __size_of_EUSART1_is_rx_ready 0014                                          i2l1050 4F0C  
                                        i2l1037 493A                                 __CFG_BBSIZ$BB2K 000000  
                                        i2l1601 63E8                                          i2l1361 5424  
                                        i2l1371 579C                                          i2l1702 561A  
                                        i2l1632 40AE                                          i2l1368 5444  
                                        i2l1712 5F8E                                          i2l1641 662A  
                                        i2l1378 57BC                                          i2l1635 6462  
                                        i2l1723 65BA                                          i2l1629 40A6  
                                        i2l1717 5F96                                          i2l1670 5A1C  
                                __CFG_WDTEN$OFF 000000                                          i2l1655 65F2  
                                        i2l1649 6098                                          i2l1685 67DE  
                                        i2l1678 62E4                                          i2l1598 63E0  
                                        i2l1698 6660                                          i2l6143 6978  
                                        i2l6145 6974                                          i2l8011 5568  
                                        i2l8021 55F2                                          i2l8013 5576  
                                        i2l8005 5532                                          i2l6503 695A  
                                        i2l8015 5594                                          i2l8007 555C  
                                        i2l6505 695E                                          i2l8017 55B2  
                                        i2l8019 55C4                                          i2l8211 1360  
                                        i2l7501 5A84                                          i2l8301 176E  
                                        i2l8221 13B6                                          i2l8213 1386  
                                        i2l7511 67E0                                          i2l7431 6952  
                                        i2l7503 5A88                                          i2l8311 185C  
                                        i2l8303 17B8                                          i2l8223 13B8  
                                        i2l8215 1394                                          i2l7513 67FC  
                                        i2l7441 5978                                          i2l7505 5AB6  
                                        i2l7521 47C6                                          i2l7601 5380  
                                        i2l8401 1DEE                                          i2l8321 18F8  
                                        i2l8241 13E2                                          i2l8233 13D6  
                                        i2l8225 13CA                                          i2l8217 13A6  
                                        i2l7427 68C2                                          i2l7443 5982  
                                        i2l7507 5ACA                                          i2l7531 481C  
                                        i2l7523 47E6                                          i2l7611 53EA  
                                        i2l7603 5388                                          i2l8411 1E60  
                                        i2l8403 1E26                                          i2l8331 19B2  
                                        i2l8307 17F0                                          i2l8251 1466  
                                        i2l8219 13AA                                          i2l7429 68D0  
                                        i2l7445 59A0                                          i2l7437 5954  
                                        i2l7453 62A2                                          i2l7461 662C  
                                        i2l7701 5FC4                                          i2l7541 4870  
                                        i2l7533 4828                                          i2l7525 47EA  
                                        i2l7517 47B4                                          i2l7613 540A  
                                        i2l7605 539C                                          i2l7621 570C  
                                        i2l8501 2488                                          i2l8421 1F44  
                                        i2l8413 1EAC                                          i2l8341 1A82  
                                        i2l8317 18AC                                          i2l8309 1826  
                                        i2l8261 14FE                                          i2l8253 148C  
                                        i2l8245 13EE                                          i2l8237 13DC  
                                        i2l8229 13D0                                          _TABLAT 000FF5  
                                        i2l7447 59D6                                          i2l7439 5966  
                                        i2l7455 62AE                                          i2l7463 6638  
                                        i2l7703 5FC8                                          i2l7551 48E4  
                                        i2l7543 4882                                          i2l7535 4846  
                                        i2l7527 47F8                                          i2l7519 47B8  
                                        i2l7711 3022                                          i2l7615 540C  
                                        i2l7607 53AA                                          i2l7631 5784  
                                        i2l7623 5714                                          i2l7471 6584  
                                        i2l8503 24BE                                          i2l8327 1946  
                                        i2l8319 18D2                                          i2l8271 158E  
                                        i2l8263 150C                                          i2l8255 14C2  
                                        i2l8247 1444                                   i2putch@txData 0002  
                                        i2l7457 62C0                                          i2l7465 663C  
                                        i2l7705 5FCE                                          i2l7545 48B0  
                                        i2l7537 484E                                          i2l7553 48EA  
                                        i2l7529 4818                                          i2l7561 4DAA  
                                        i2l7721 3096                                          i2l7713 304A  
                                        i2l7801 43F2                                          i2l7617 541E  
                                        i2l7609 53BC                                          i2l7633 5796  
                                        i2l7625 5728                                          i2l8505 24E6  
                                        i2l8513 2538                                          i2l8441 20A2  
                                        i2l8433 201A                                          i2l8425 1F64  
                                        i2l8417 1EE8                                          i2l8409 1E3A  
                                        i2l8361 1BB8                                          i2l8353 1B42  
                                        i2l8345 1ABA                                          i2l8337 1A04  
                                        i2l8329 197C                                          i2l8281 1624  
                                        i2l8273 1596                                          i2l8257 14D0  
                                        i2l8249 1464                                          i2l7643 65F4  
                                        i2l7651 6060                                          i2l7459 62C4  
                                        i2l7467 6654                                          i2l7491 5A2E  
                                        i2l7555 48FA                                          i2l7547 48D0  
                                        i2l7539 4862                                          i2l7571 4DEE  
                                        i2l7563 4DAE                                          i2l7635 63AA  
                                        i2l7731 30E0                                          i2l7723 30B2  
                                        i2l7715 306A                                          i2l7811 445E  
                                        i2l7803 440C                                          i2l7627 5736  
                                        i2l7619 56EE                                          i2l8531 25C4  
                                        i2l8515 255E                                          i2l8523 258C  
                                        i2l8507 24F6                                          i2l8451 214E  
                                        i2l8443 20C8                                          i2l8435 2050  
                                        i2l8427 1F9A                                          i2l8419 1F0E  
                                        i2l8371 1C76                                          i2l8363 1BEE  
                                        i2l8355 1B68                                          i2l8347 1AF0  
                                        i2l8339 1A3A                                          i2l8291 16B4  
                                        i2l8283 1632                                          i2l8275 15A4  
                                        i2l8267 1556                                          i2l8259 14DE  
                                        i2l9251 609A                                          i2l7653 608E  
                                        i2l7493 5A42                                          i2l7557 491A  
                                        i2l7549 48D2                                          i2l7581 4E56  
                                        i2l7573 4E0E                                          i2l7565 4DBC  
                                        i2l7637 63C4                                          i2l7741 317E  
                                        i2l7733 30EA                                          i2l7725 30C4  
                                        i2l7717 307A                                          i2l7709 3002  
                                        i2l7813 446E                                          i2l7805 4426  
                                        i2l7821 494E                                          i2l7629 5764  
                                        i2l7901 32F8                                          i2l8517 256C  
                                        i2l8461 220C                                          i2l8429 1FE2  
                                        i2l8381 1CFC                                          i2l8373 1CAE  
                                        i2l8293 16E6                                          i2l8277 15CA  
                                        i2l8269 1568                                          i2l9245 67BA  
                                        i2l9261 60E4                                          i2l9253 60A8  
                                        i2l9405 6892                                          i2l7655 6092  
                                        i2l7647 6048                                          i2l7495 5A50  
                                        i2l7591 4ECC                                          i2l7583 4E84  
                                        i2l7575 4E2C                                          i2l7567 4DDC  
                                        i2l7751 324E                                          i2l7735 30F0  
                                        i2l7743 31E2                                          i2l7727 30D2  
                                        i2l7719 307C                                          i2l7807 4446  
                                        i2l7815 4474                                          i2l7831 498C  
                                        i2l7823 4956                                          i2l7639 6428  
                                        i2l7663 5F3A                                          i2l7911 336C  
                                        i2l7903 3312                                          i2l8519 2580  
                                        i2l8463 2234                                          i2l8471 22B8  
                                        i2l8391 1D6E                                          i2l8383 1D34  
                                        i2l8375 1CBA                                          i2l8287 167C  
                                        i2l8279 1604                                          i2l9247 67C2  
                                        i2l9255 60C6                                          i2l9407 68A2  
                                        i2l7649 604C                                          i2l7497 5A5C  
                                        i2l7489 5A1E                                          i2l7593 4EEC  
                                        i2l7585 4EA4                                          i2l7577 4E34  
                                        i2l7569 4DE0                                          i2l7761 3298  
                                        i2l7745 31FC                                          i2l7753 325E  
                                        i2l7737 3172                                          i2l7729 30D8  
                                        i2l7809 4458                                          i2l7841 4A00  
                                        i2l7833 499A                                          i2l7825 4968  
                                        i2l7921 33B0                                          i2l7913 3376  
                                        i2l7905 333C                                          i2l8473 22EE  
                                        i2l8465 2244                                          i2l8457 21A0  
                                        i2l8449 2118                                          i2l8393 1DA4  
                                        i2l8369 1C40                                          i2l8297 1702  
                                        i2l8289 168E                                          i2l8529 259E  
                                        i2l9257 60D2                                          i2l9409 68A6  
                                        i2l7499 5A70                                          i2l7587 4EB6  
                                        i2l7579 4E48                                          i2l7763 32A4  
                                        i2l7755 3270                                          i2l7747 321A  
                                        i2l7739 3178                                          i2l7771 42AE  
                                        i2l7851 4A50                                          i2l7843 4A1E  
                                        i2l7827 4970                                          i2l7819 493C  
                                        i2l7659 65BC                                          i2l7667 5F70  
                                        i2l7931 343C                                          i2l7915 337C  
                                        i2l7907 3344                                          i2l8491 2402  
                                        i2l8475 2324                                          i2l8467 227C  
                                        i2l8459 21D6                                          i2l8379 1CC6  
                                        i2l8299 1738                                          i2l9259 60D6  
                                        i2l7589 4EBC                                          i2l7765 32AC  
                                        i2l7757 3280                                          i2l7749 3234  
                                        i2l7781 431E                                          i2l7773 42BE  
                                        i2l7845 4A2A                                          i2l7837 49E8  
                                        i2l7829 4984                                          i2l7597 5356  
                                        i2l7861 3CAA                                          i2l7669 5F82  
                                        i2l7941 347E                                          i2l7933 344E  
                                        i2l7925 33F0                                          i2l7917 3384  
                                        i2l7909 3364                                          i2l8493 2410  
                                        i2l8477 234C                                          i2l8485 239E  
                                        i2l8389 1D48                                          i2l9701 0042  
                                        i2l7695 5F98                                          i2l7759 3286  
                                        i2l7767 32BC                                          i2l7791 4350  
                                        i2l7783 4324                                          i2l7775 42C0  
                                        i2l7855 4A82                                          i2l7847 4A48  
                                        i2l7839 49FC                                          i2l7599 5362  
                                        i2l7871 3D1A                                          i2l7863 3CBA  
                                        i2l7951 354A                                          i2l7927 3402  
                                        i2l7935 3462                                          i2l7919 33A0  
                                        i2l7943 34DC                                          i2l8487 23C4  
                                        i2l8479 235C                                          i2l8399 1DB8  
                                        i2l9287 6692                                          i2l9703 0050  
                                        i2l7697 5FAC                                          i2l7793 4356  
                                        i2l7785 4330                                          i2l7777 42DA  
                                        i2l7857 4A96                                          i2l7849 4A4C  
                                        i2l7881 3DAC                                          i2l7873 3D24  
                                        i2l7865 3CBC                                          i2l7953 356A  
                                        i2l7945 34F8                                          i2l7937 3472  
                                        i2l8489 23EA                                          i2l9289 66A6  
                                        i2l9705 005E                                          i2l7971 3EFC  
                                        i2l7963 3EAE                                          i2l7699 5FB8  
                                        i2l7795 435C                                          i2l7787 4336  
                                        i2l7779 4316                                          i2l7859 4A9A  
                                        i2l7891 3E74                                          i2l7875 3D2A  
                                        i2l7883 3E10                                          i2l7867 3CD6  
                                        i2l7955 3570                                          i2l7947 3516  
                                        i2l7939 3478                                          i2l8499 2452  
                                        i2l7981 3F68                                          i2l7973 3F48  
                                        i2l7965 3EC2                                          i2l7789 433E  
                                        i2l7797 43BA                                          i2l7885 3E22  
                                        i2l7893 3E84                                          i2l7877 3DA0  
                                        i2l7869 3D12                                          i2l7957 3580  
                                        i2l7949 3530                                          i2l7991 4012  
                                        i2l7983 3F70                                          i2l7975 3F4C  
                                        i2l7967 3EC6                                          i2l7799 43D4  
                                        i2l7887 3E40                                          i2l7879 3DA6  
                                        i2l7959 3596                                          i2l7985 3F78  
                                        i2l7969 3ECA                                          i2l7889 3E5A  
                                        i2l7897 32E6                                          i2l8881 5E18  
                                        i2l7995 4066                                          i2l7987 3FC2  
                                        i2l7979 3F52                                          i2l7899 32F6  
                                        i2l8883 5E20                                          i2l7997 4078  
                                        i2l8885 5E2E                                          i2l7999 408A  
                                        i2l8887 5E54                                          i2l9965 1416  
                                        i2l9967 3FAC                                       ??i2_fputc 0007  
                                        _RCREG1 000FAE                                       ??i2_fputs 0010  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                 vfpfcnvrt@done 0133                    __size_of_EUSART1_is_tx_ready 002A  
                                        _SPBRG1 000FAF                                       ??i2_putch 0002  
                                        _SSPADD 000FC8                                          _SSPBUF 000FC9  
                                i2___aodiv@sign 0012                                          _TXREG1 000FAD  
                                        i2abs@a 0013                                          _TXSTA1 000FAC  
                                        i2_atoi 3EAE                                          i2_ctoa 5F98  
                                        i2_dtoa 3002                                          i2_otoa 42AE  
                                        i2pad@i 001A                                          i2pad@p 0017  
                                        i2pad@w 001C                                          i2_stoa 493C  
                                        i2_utoa 3CAA                                          i2_xtoa 32E6  
                               _global_bg_color 00BB                                  __CFG_XINST$OFF 000000  
                              ??_lcd_draw_pixel 0094                                __end_of_lcd_fill 5CE2  
                                  vfprintf@cfmt 0152                                __end_of_lcd_init 2A0E  
                              __end_of_lcd_send 6846                                  i2___aomod@sign 0012  
                                        ___lmul 5CE2                                       ??___aldiv 00A3  
                                     ??___aodiv 009F                                   i2vfprintf@fmt 0051  
                                     ??___aomod 009F                                          ___wmul 6792  
                                __CFG_STVREN$ON 000000                         __end_of_TMR0_WriteTimer 6928  
                                     ??___lodiv 009F                                       ??___lomod 009F  
                                   ?i2_vfprintf 004F                       i2TMR0_WriteTimer@timerVal 0001  
                      ?_EUSART1_SetErrorHandler 008F                                ?_TMR0_Initialize 0001  
                                        clear_0 5D94                                          clear_1 5DA0  
                                        _printf 676A                                          pad@buf 00A3  
              ??_EUSART1_SetOverrunErrorHandler 0091                 ?_EUSART1_SetOverrunErrorHandler 008F  
                                        ctoa@fp 00AC                                          dtoa@fp 0100  
                                        _string 01A9                                          _strlen 64D8  
                                     ??_msDelay 008F                               ??i2_EUSART1_Write 0001  
                                        fputc@c 0091                                          fputs@c 009E  
                                        fputs@i 009F                               __end_ofi2___aodiv 493C  
                                        fputs@s 009A                                       ??_isalpha 0091  
                                     ??_isdigit 0091                               __end_ofi2___aomod 4F0E  
                             __end_ofi2___lodiv 5446                               __end_ofi2___lomod 57BE  
                                     ??_islower 0091                                    __mediumconst F134  
                                     ??_isspace 0091                                          otoa@fp 0100  
                                        tblptrh 000FF7                                       ??_isupper 0091  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                      ADC_GetConversion@channel 0093                                          stoa@cp 00AA  
                                        stoa@fp 009A                              i2___aomod@dividend 0001  
                              __end_of_vfprintf 5E18                               i2___lodiv@divisor 0009  
                               ??_EUSART1_Write 008F                                          utoa@fp 0100  
     IOCB4_SetInterruptHandler@InterruptHandler 008F                                ?_PIN_MANAGER_IOC 0001  
                              __end_of_snprintf 6692                               i2___lodiv@counter 0019  
                                        xtoa@fp 0100                         ??_INTERRUPT_S1_CALLBACK 005B  
                                     ??_strncmp 0095                                       ??_toupper 0097  
                 __size_of_INTERRUPT_Initialize 0004                                ?_TMR1_Initialize 0001  
                             __end_ofi2_isalpha 6464                               __end_ofi2_isdigit 662C  
                             _SYSTEM_Initialize 6806                                      __accesstop 0060  
                      __size_of_lcd_draw_string 0138                         __end_of__initialization 5DAA  
                             __end_ofi2_islower 65BC                               __end_ofi2_isspace 609A  
                             __end_ofi2_isupper 65F4                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                               __end_ofi2_strncmp 561C  
                             __end_ofi2_toupper 5F98                                   __end_ofi2_abs 63EA  
                                 __end_ofi2_pad 5AE4                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 6964                                    __pidataBANK1 696B  
                           ??_SYSTEM_Initialize 0091                                _DATAEE_WriteByte 61CE  
                                 __end_of_fputc 588A                                   __end_of_fputs 61CE  
         __end_of_IOCB4_DefaultInterruptHandler 697E          __size_of_IOCB4_DefaultInterruptHandler 0002  
                 _IOCB4_DefaultInterruptHandler 697C                                   __end_of_putch 691C  
                                   i2printf@fmt 007B                                       ?_SPI_Open 0001  
                   ??_IOCB4_SetInterruptHandler 0091                            __end_of_EUSART1_Read 6740  
                                     ?i2___wmul 0001                                ??_lcd_set_cursor 0098  
                                       ??i2_abs 0015                                         ??i2_pad 0019  
                                i2vfpfcnvrt@fmt 0047                                       ?i2_printf 007B  
                                i2vfpfcnvrt@llu 0073                                       ?i2_strlen 0001  
                         i2EUSART1_Write@txData 0001                                ?_TMR0_StartTimer 0001  
                                       ??_fputc 0095                       __end_of_SYSTEM_Initialize 6828  
                                       ??_fputs 009E                                         ??_putch 0090  
                                    __pbssBANK0 00B1                                      __pbssBANK1 017D  
                           __size_ofi2_vfprintf 0064                                 __CFG_PLLCFG$OFF 000000  
                                    __pnvCOMRAM 005B                                         ?i2_atoi 0008  
                                       ?i2_ctoa 001E                                         ?i2_dtoa 001E  
                                       ?i2_otoa 001E                                         ?i2_stoa 000C  
                                       ?i2_utoa 001E                                         ?i2_xtoa 001E  
                                   i2strncmp@_l 0001                                     i2strncmp@_r 0003  
               __end_of_EUSART1_SetErrorHandler 6950                         __size_of_TMR0_StopTimer 0004  
                                       ?___lmul 008F                                         ?___wmul 008F  
                                i2_toupper$2550 000D                                ?_TMR0_WriteTimer 008F  
                                ___lmul@product 0097                                      ??_SPI_Open 008F  
                                       ?_printf 0154                         __size_of_ADC_Initialize 0016  
                                       ?_strlen 008F          __end_of_EUSART1_SetFramingErrorHandler 6946  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 693C  
                                    ??i2___wmul 0005                                __CFG_CANMX$PORTB 000000  
                                       _REFOCON 000F9A                               i2___lomod@divisor 0009  
                                       _OSCCON2 000FD2                              __size_of_vfpfcnvrt 12BE  
                                       _TBLPTRH 000FF7                                         _TBLPTRL 000FF6  
                                       _TBLPTRU 000FF8                               i2___lomod@counter 0011  
                                    ??i2_printf 0057                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000F7D                                      ??i2_strlen 0003  
                                       _SSPCON1 000FC6                                         _SSPCON2 000FC5  
                                     ?_lcd_fill 0098                                       ?_lcd_init 0001  
                                     ?_lcd_send 0090                                         _SSPSTAT 000FC7  
                              ___lomod@dividend 008F                                 _read_from_usart 5AE4  
                                       i2_fputc 5954                                ??_SPI_Initialize 008F  
                                       i2_fputs 62A2                       _IOCB4_SetInterruptHandler 6928  
                          DATAEE_WriteByte@bAdd 008F                                         i2atoi@n 0015  
                                       i2pad@fp 0013                                         i2atoi@s 0008  
                                       i2ctoa@c 0020                                         i2_putch 6950  
                                       i2ctoa@w 0021                                         i2dtoa@d 0020  
                                       i2dtoa@i 0040                                         i2dtoa@n 0038  
                                       i2dtoa@p 0032                                         i2dtoa@s 0036  
                                       i2dtoa@w 0034                                         i2otoa@d 0020  
                                       i2otoa@i 003E                                         i2otoa@n 0036  
                                       i2otoa@p 0030                                         i2otoa@t 0032  
                                       i2otoa@w 0034                                 __size_ofi2_atoi 0202  
                               __size_ofi2_ctoa 005C                                 __size_ofi2_dtoa 02E4  
                                       i2stoa@i 0018                                         i2stoa@l 0020  
                                       i2stoa@p 001E                                         i2stoa@s 000E  
                                       i2stoa@w 001A                                         i2utoa@d 0020  
                                       i2utoa@i 003C                                 __size_ofi2_otoa 01F0  
                                       i2utoa@n 0034                                         i2utoa@p 0030  
                               __CFG_PWRTEN$OFF 000000                                         i2utoa@w 0032  
                               __size_ofi2_stoa 0186                                 __size_ofi2_utoa 0204  
                               __size_ofi2_xtoa 02DA                                         i2xtoa@c 0043  
                                       i2xtoa@d 0020                                         i2xtoa@i 0041  
                                       i2xtoa@n 0039                                         i2xtoa@p 0035  
                                       i2xtoa@w 0037                                         i2xtoa@x 0028  
                          _ADC_InterruptHandler 005D                                         __Hparam 0000  
                                       __Lparam 0000                              __size_of_vsnprintf 0110  
                             ??_lcd_draw_string 010A                                   _turn_on_value 01C9  
                                       ___aldiv 5156                                         ___aodiv 462A  
                                       ___aomod 4C44                                 __size_of___lmul 006C  
                               __size_of___wmul 0028                                         ___lodiv 5264  
                                       ___lomod 561C                                       ?_vfprintf 014C  
                                i2vfprintf@cfmt 0055                                       ?_snprintf 016A  
                           _EUSART1_is_rx_ready 68D6                                    ?i2_vfpfcnvrt 0045  
                                       __pcinit 5D4E                                         __ramtop 0F00  
                           _EUSART1_is_tx_ready 66EC                                         __ptext0 35C0  
                                       __ptext1 6662                                         __ptext2 5046  
                                       __ptext3 5AE4                                         __ptext4 691C  
                                       __ptext5 66EC                                         __ptext6 68D6  
                                       __ptext7 6716                                         __ptext8 676A  
                                       __ptext9 5DB4                                 __size_of_printf 0028  
                                     _T0CONbits 000FD5                                         _msDelay 654C  
                                     _IOCB4_ISR 6692                                 __size_of_strlen 003A  
                                     _T1CONbits 000FCD                           _OSCILLATOR_Initialize 68FC  
                                  __size_of_abs 0042                                    __size_of_pad 00CA  
                                       _isalpha 63EA                                         _isdigit 6512  
                              ___aldiv@dividend 009B                              _EUSART1_Initialize 625C  
                                       _islower 6464                        ??_PIN_MANAGER_Initialize 0091  
                                       _isspace 5FF4                               __CFG_MSSPMSK$MSK7 000000  
                                       _isupper 649E                                         atoi@neg 009C  
                                       _rx_data 0181                           __end_of_lcd_draw_char 4C44  
                    __size_of_SYSTEM_Initialize 0022                                      ??_lcd_fill 009A  
                             ?_SPI_ExchangeByte 0001                                      ??_lcd_init 009E  
                                    ??_lcd_send 0091                                         _strncmp 5446  
                                       _toupper 5E7C                            end_of_initialization 5DAA  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                            ??_SPI_ExchangeByte 008F                            ?_EUSART1_is_tx_ready 0001  
                     __size_of_lcd_set_cursor_x 004E                       __size_of_lcd_set_cursor_y 004E  
                                       fputc@fp 0093                     _EUSART1_OverrunErrorHandler 00C2  
                                       fputs@fp 009C                             i2___wmul@multiplier 0001  
                                     i2u1010_40 1550                                       i2u1011_40 1568  
                                     i2u1011_41 1564                                       i2u1020_40 1826  
                                     i2u1012_40 158E                                       i2u1004_40 1386  
                                     i2u1020_41 1822                                       i2u1012_41 158A  
                                     i2u1004_41 1382                                       i2u1021_40 185C  
                                     i2u1013_40 15CA                                       i2u1005_40 1456  
                                     i2u1021_41 1858                                       i2u1013_41 15C6  
                                     i2u1005_41 1452                                       i2u1030_40 1C76  
                                     i2u1022_40 18D2                                       i2u1014_40 1674  
                                     i2u1006_40 1464                                       i2u1030_41 1C72  
                                     i2u1022_41 18CE                                       i2u1014_41 166E  
                                     i2u1006_41 1460                                       i2u1031_40 1CFC  
                                     i2u1023_40 18F8                                       i2u1015_40 1676  
                                     i2u1007_40 148C                                       i2u1031_41 1CF8  
                                     i2u1023_41 18F4                                       i2u1007_41 1488  
                                     i2u1040_40 21D6                                       i2u1032_40 1D6E  
                                     i2u1024_40 197C                                       i2u1016_40 168E  
                                     i2u1008_40 14D0                                       i2u1200_40 68A2  
                                     i2u1040_41 21D2                                       i2u1032_41 1D6A  
                                     i2u1024_41 1978                                       i2u1016_41 168A  
                                     i2u1008_41 14CC                                       i2u1200_41 689E  
                                     i2u1041_40 220C                                       i2u1033_40 1DEE  
                                     i2u1025_40 19B2                                       i2u1017_40 16B4  
                                     i2u1009_40 154E                                       i2u1041_41 2208  
                                     i2u1033_41 1DEA                                       i2u1025_41 19AE  
                                     i2u1017_41 16B0                                       i2u1009_41 1548  
                                     i2u1042_40 22EE                                       i2u1034_40 1E60  
                                     i2u1026_40 1A3A                                       i2u1018_40 1738  
                                     i2u1042_41 22EA                                       i2u1034_41 1E5C  
                                     i2u1026_41 1A36                                       i2u1018_41 1734  
                                     i2u1043_40 2324                                       i2u1035_40 1F0E  
                                     i2u1027_40 1AF0                                       i2u1019_40 176E  
                                     i2u1043_41 2320                                       i2u1035_41 1F0A  
                                     i2u1027_41 1AEC                                       i2u1019_41 176A  
                                     i2u1044_40 23C4                                       i2u1036_40 1F9A  
                                     i2u1028_40 1B68                                       i2u1220_40 005E  
                                     i2u1044_41 23C0                                       i2u1036_41 1F96  
                                     i2u1028_41 1B64                                       i2u1220_41 005A  
                                     i2u1045_40 23EA                                       i2u1037_40 2050  
                                     i2u1029_40 1BEE                                       i2u1045_41 23E6  
                                     i2u1037_41 204C                                       i2u1029_41 1BEA  
                                     i2u1046_40 2488                                       i2u1038_40 20C8  
                                     i2u1126_40 5E72                                       i2u1046_41 2484  
                                     i2u1038_41 20C4                                       i2u1126_41 5E6E  
                                     i2u1047_40 24BE                                       i2u1039_40 214E  
                                     i2u1047_41 24BA                                       i2u1039_41 214A  
                                     i2u1048_40 255E                                       i2u1048_41 255A  
                                     i2u1219_40 0050                                       i2u1219_41 004C  
                                     i2u1180_48 66AC                                       i2u1180_49 66BE  
                                     i2u1174_40 60A8                                       i2u1174_41 60A4  
                                     i2u1175_40 60E4                                       i2u1175_41 60E0  
                                     i2u1179_40 66A6                                       i2u1179_41 66A2  
                           lcd_draw_char@fIndex 009C                             read_from_usart@data 0100  
                               i2_EUSART1_Write 68C0                               __end_of_vfpfcnvrt 1360  
                              ___aldiv@quotient 00A5                                         postdec1 000FE5  
                                       postdec2 000FDD                              i2___lodiv@dividend 0001  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 002A  
                              lcd_fill@bg_color 0098                                    ??i2_vfprintf 0055  
                                    ??_vfprintf 00B1                            ??_EUSART1_Initialize 0091  
                                    ??_snprintf 00B1                                         strlen@a 0091  
                                       strlen@s 008F                               lcd_draw_string@pS 0104  
                                     _PORTBbits 000F81                               _spi_configuration FF01  
                                    ?_IOCB4_ISR 0001                               i2___aodiv@divisor 0009  
                              __CFG_FOSC$INTIO2 000000                               i2___aodiv@counter 0011  
                       __end_of_read_from_usart 5BA6                                       _TRISCbits 000F94  
                             __end_of_vsnprintf 5156                                       i2___aodiv 47B4  
              __size_of_EUSART1_SetErrorHandler 000A                                       i2___aomod 4DAA  
                           EUSART1_Write@txData 008F                                       i2___lodiv 5356  
                         ??_EUSART1_is_rx_ready 008F                                       i2___lomod 56EE  
                      __end_of_DATAEE_WriteByte 6216                              i2___lodiv@quotient 0011  
                         ??_EUSART1_is_tx_ready 008F                  __size_of_INTERRUPT_S1_CALLBACK 0050  
                 __end_of_INTERRUPT_S1_CALLBACK 60EA                                      lcd_send@dc 0091  
                            __end_ofi2_vfprintf 5E7C                                    _EUSART1_Read 6716  
                                     i2_isalpha 6428                                       i2_isdigit 65F4  
                                __end_ofi2_atoi 40B0                                  __end_ofi2_ctoa 5FF4  
                                __end_ofi2_dtoa 32E6                                       i2_islower 6584  
                                     i2_isspace 6048                                  __end_ofi2_otoa 449E  
                                __end_ofi2_stoa 4AC2                                  __end_ofi2_utoa 3EAE  
                                __end_ofi2_xtoa 35C0                                       i2_isupper 65BC  
                                _TMR0_StopTimer 6974                                       i2atoi@neg 000E  
                  __end_of_INTERRUPT_Initialize 6974                            SPI_ExchangeByte@data 008F  
                                     i2_strncmp 5532                                       i2_toupper 5F3A  
                     __end_of_spi_configuration FF05                                  __end_of___lmul 5D4E  
                                   vfpfcnvrt@ap 012B                                     vfpfcnvrt@cp 0131  
                                   vfpfcnvrt@fp 0127                                     vfpfcnvrt@ll 0139  
                                __end_of___wmul 67BA                                     vfpfcnvrt@vp 0141  
                                _ADC_Initialize 68AA                                       i2fputc@fp 0005  
                        ?_OSCILLATOR_Initialize 0001                                       i2fputs@fp 000E  
                              i2___wmul@product 0005                                  __end_of_printf 6792  
                             __size_of_SPI_Open 00B4                                  __end_of_strlen 6512  
                           start_initialization 5D4E                                 ___lodiv@divisor 0097  
                               ___lodiv@counter 00A7                               __size_ofi2___wmul 0026  
                      __size_of_TMR0_Initialize 002A                 __size_of_PIN_MANAGER_Initialize 0046  
                                   __end_of_abs 6328                                     __end_of_pad 5954  
                                    ?i2___aodiv 0001                                      ?i2___aomod 0001  
                                  i2vfpfcnvrt@c 0072                                      ?i2___lodiv 0001  
                                    ?i2___lomod 0001                                     putch@txData 0090  
                             __size_ofi2_printf 0026                           __end_of_EUSART1_Write 687A  
                             __size_ofi2_strlen 0036                                       i2strlen@a 0003  
                                     i2strlen@s 0001                         __end_ofi2_EUSART1_Write 68D6  
                                      ??i2_atoi 000A                                        ??i2_ctoa 0021  
                                      ??i2_dtoa 0028                                        ??i2_otoa 0028  
                                      ??i2_stoa 0010                                        ??i2_utoa 0028  
                      __size_of_PIN_MANAGER_IOC 0018                                        ??i2_xtoa 0029  
                                    ?i2_isalpha 0001                          __end_of_TMR0_StopTimer 6978  
                                    ?i2_isdigit 0001                                      ?i2_islower 0001  
                                    ?i2_isspace 0001                  SPI_Open@spiUniqueConfiguration 0090  
                                    ?i2_isupper 0001                        __size_of_TMR1_Initialize 002C  
                                   vfprintf@fmt 014E                                    i2vfprintf@ap 0053  
                               i2vfpfcnvrt@done 0062                                    i2vfprintf@fp 004F  
                                      ??___lmul 0097                                        ??___wmul 0093  
                                    ?i2_strncmp 0001                                      ?i2_toupper 0007  
                        __end_of_ADC_Initialize 68C0                                     __pdataBANK0 00CA  
                                   __pdataBANK1 01C7                                        ??_printf 00B1  
                             i2___aomod@divisor 0009                                        ??_strlen 0091  
                             i2___aomod@counter 0011                                     ??_IOCB4_ISR 005B  
                       __size_of_lcd_draw_pixel 0018                            __size_ofi2_vfpfcnvrt 1278  
                                  vsnprintf@cnt 0162                                    vsnprintf@fmt 0158  
                                   __pbssCOMRAM 005D                                   __pcstackBANK0 0060  
                                 __pcstackBANK1 0100                                ?_read_from_usart 00A5  
                              ___aodiv@dividend 008F                                     snprintf@fmt 016E  
                                     _adc_value 0187                                 _lcd_draw_string 4F0E  
                                      ?i2_fputc 0003                                        ?i2_fputs 000C  
                              _lcd_set_cursor_x 6138                                _lcd_set_cursor_y 60EA  
              ??_EUSART1_SetFramingErrorHandler 0091                 ?_EUSART1_SetFramingErrorHandler 008F  
                             __size_of_lcd_fill 0088                               __size_of_lcd_init 0436  
                                      ?i2_putch 0001                               __size_of_lcd_send 001E  
                                     _atoi$2436 009E                                       _atoi$2437 00A2  
                                     _atoi$2438 00A0                                       __pnvBANK0 00C0  
                      __size_of_TMR0_StartTimer 0004                                 ?_TMR0_StopTimer 0001  
                        _PIN_MANAGER_Initialize 6216                                       _dtoa$1823 0112  
                      fp__INTERRUPT_S1_CALLBACK 0000                         _EUSART1_is_tx_ready$859 008F  
                                     __pintcode 0008                                   __pmediumconst F134  
                                      ?___aldiv 009B                                        ?___aodiv 008F  
                                      ?___aomod 008F                                       __ptext100 695A  
                                     __ptext101 6974                                       __ptext102 6978  
                              ___aodiv@quotient 00A1                                       __ptext103 0000  
                                      ?___lodiv 008F                                        ?___lomod 008F  
                               ?_ADC_Initialize 0001                                read_from_usart@i 010C  
                  ??_INTERRUPT_InterruptManager 0081                               __size_of_vfprintf 0064  
                             __size_of_snprintf 0030                                        ?_msDelay 0001  
                               ___lomod@divisor 0097                                 ___lomod@counter 009F  
                                      _BAUDCON1 000FA7              _EUSART1_DefaultOverrunErrorHandler 000000  
                                      ?_isalpha 008F                                        ?_isdigit 008F  
                                __size_ofi2_abs 0040                        __size_of_TMR0_WriteTimer 000C  
                          _EUSART1_ErrorHandler 00C0                                  __size_ofi2_pad 00C6  
                                      ?_islower 008F                                        ?_isspace 008F  
                                      ?_isupper 008F                         _EUSART1_SetErrorHandler 6946  
                                   ??i2___aodiv 0011                                     ??i2___aomod 0011  
                                __size_of_fputc 00CC                                     ??i2___lodiv 0011  
                                __size_of_fputs 0048                                     ??i2___lomod 0011  
                                      ?_strncmp 008F                                        ?_toupper 0095  
                                __size_of_putch 000E                            _INTERRUPT_Initialize 6970  
                       __size_of_lcd_set_cursor 0042                                 ___aldiv@divisor 009F  
                             ??_TMR0_Initialize 008F                                 ___aldiv@counter 00A3  
                              ?i2_EUSART1_Write 0001                                  ___wmul@product 0093  
                                      _IOCBbits 000F5A                                        _LATAbits 000F89  
       EUSART1_SetErrorHandler@interruptHandler 008F                                        _LATEbits 000F8D  
                                   ??i2_isalpha 0003                              i2___lomod@dividend 0001  
                                   ??i2_isdigit 0003                                 lcd_set_cursor@x 0094  
                               lcd_set_cursor@y 0096                                     ??i2_islower 0003  
                                   ??i2_isspace 0003             __size_of_INTERRUPT_InterruptManager 0096  
                              i2_vfpfcnvrt$1874 0064                                i2_vfpfcnvrt$1875 0066  
                                      _PIR1bits 000F9E                                     ??i2_isupper 0003  
                                      _PIR4bits 000FB7                           lcd_draw_string@lIndex 0110  
                                      i2u900_40 321A                                        i2u900_41 3216  
                                      i2u901_40 3234                                        i2u901_41 3230  
                                      i2u902_40 324E                                        i2u910_40 43D4  
                                      i2u902_41 324A                                        i2u910_41 43D0  
                                      i2u903_40 325E                                        i2u911_40 43F2  
                                      i2u903_41 325A                                        i2u911_41 43EE  
                                      i2u840_40 5978                                        i2u904_40 3270  
                                      i2u912_40 440C                                        i2u920_40 49B8  
                                      i2u840_41 5974                                        i2u904_41 326C  
                                      i2u912_41 4408                                        i2u920_41 49B4  
                                      i2u841_40 59A0                                        i2u905_40 3280  
                                      i2u913_40 4426                                        i2u921_40 49E4  
                                      i2u841_41 599C                                        i2u905_41 327C  
                                      i2u913_41 4422                                        i2u921_41 49E0  
                                      i2u842_40 59D6                                        i2u906_40 3298  
                                      i2u914_40 4436                                        i2u922_40 4A1E  
                                      i2u930_40 3E5A                                        i2u842_41 59D2  
                                      i2u906_41 3294                                        i2u914_41 4432  
                                      i2u922_41 4A1A                                        i2u930_41 3E56  
                                      i2u843_40 62E4                                        i2u851_40 5A2E  
                                      i2u915_40 4446                                        i2u907_40 42BE  
                                      i2u923_40 4A6E                                        i2u931_40 3E74  
                                      i2u843_41 62E0                                        i2u851_41 5A2A  
                                      i2u915_41 4442                                        i2u907_41 42BA  
                                      i2u923_41 4A6A                                        i2u931_41 3E70  
                                      i2u844_40 6654                                        i2u852_40 5A50  
                                      i2u860_40 48B0                                        i2u916_40 4458  
                                      i2u908_40 42DA                                        i2u924_40 4A7E  
                                      i2u932_40 3E84                                        i2u940_40 3436  
                                      i2u844_41 6650                                        i2u852_41 5A4C  
                                      i2u860_41 48AC                                        i2u916_41 4454  
                                      i2u908_41 42D6                                        i2u924_41 4A7A  
                                      i2u932_41 3E80                                        i2u940_41 3430  
                                      i2u837_40 68D0                                        i2u853_40 5AA6  
                                      i2u861_40 48FA                                        i2u909_40 4394  
                                      i2u925_40 4AB8                                        i2u845_40 65B4  
                                      i2u941_40 3438                                        i2u933_40 32F6  
                                      i2u837_41 68CC                                        i2u853_41 5AA2  
                                      i2u861_41 48F6                                        i2u925_41 4AB4  
                                      i2u917_41 4946                                        i2u845_41 65AE  
                                      i2u933_41 32F2                                        i2u909_45 4382  
                                      i2u950_40 3EEC                                        i2u854_40 5AB6  
                                      i2u862_40 4DBC                                        i2u918_40 4968  
                                      i2u870_40 53AA                                        i2u926_40 3CBA  
                                      i2u846_40 65B6                                        i2u942_40 344E  
                                      i2u934_40 3312                                        i2u854_41 5AB2  
                                      i2u862_41 4DB8                                        i2u918_41 4964  
                                      i2u870_41 53A6                                        i2u926_41 3CB6  
                                      i2u942_41 344A                                        i2u934_41 330E  
                                      i2u950_47 3EE2                                        i2u951_40 3EFC  
                                      i2u839_40 5966                                        i2u855_40 47C6  
                                      i2u863_40 4DEE                                        i2u919_40 499A  
                                      i2u871_40 53EA                                        i2u927_40 3CD6  
                                      i2u943_40 34B6                                        i2u935_40 333C  
                                      i2u951_41 3EF8                                        i2u839_41 5962  
                                      i2u855_41 47C2                                        i2u863_41 4DEA  
                                      i2u919_41 4996                                        i2u871_41 53E6  
                                      i2u927_41 3CD2                                        i2u935_41 3338  
                                      i2u943_45 34A4                                        i2u880_40 6060  
                                      i2u960_40 4078                                        i2u952_40 3F26  
                                      i2u856_40 47F8                                        i2u864_40 4E2C  
                                      i2u872_40 570C                                        i2u928_40 3E22  
                                      i2u944_40 34F8                                        i2u936_40 33A0  
                                      i2u880_41 605C                                        i2u960_41 4074  
                                      i2u856_41 47F4                                        i2u864_41 4E28  
                                      i2u872_41 5708                                        i2u928_41 3E1E  
                                      i2u944_41 34F4                                        i2u936_41 339C  
                                      i2u952_47 3F1C                                        i2u881_40 608E  
                                      i2u961_40 408A                                        i2u953_40 3F48  
                                      i2u865_40 4E56                                        i2u873_40 5736  
                                      i2u929_40 3E40                                        i2u945_40 3516  
                                      i2u937_40 33EA                                        i2u881_41 608A  
                                      i2u961_41 4086                                        i2u953_41 3F44  
                                      i2u857_41 4822                                        i2u865_41 4E52  
                                      i2u873_41 5732                                        i2u929_41 3E3C  
                                      i2u945_41 3512                                        i2u937_41 33E4  
                                      i2u954_40 3F64                                        i2u858_40 4846  
                                      i2u866_40 4E84                                        i2u962_40 555C  
                                      i2u874_40 5764                                        i2u882_40 65EC  
                                      i2u946_40 3530                                        i2u938_40 33EC  
                                      i2u954_41 3F60                                        i2u858_41 4842  
                                      i2u866_41 4E80                                        i2u962_41 5558  
                                      i2u874_41 5760                                        i2u882_41 65E6  
                                      i2u946_41 352C                                        i2u955_40 3F9A  
                                      i2u891_40 5FAC                                        i2u859_40 4870  
                                      i2u867_40 4ECC                                        i2u875_40 63C4  
                                      i2u963_40 5594                                        i2u883_40 65EE  
                                      i2u947_40 354A                                        i2u939_40 3402  
                                      i2u891_41 5FA8                                        i2u859_41 486C  
                                      i2u867_41 4EC8                                        i2u875_41 63C0  
                                      i2u963_41 5590                                        i2u947_41 3546  
                                      i2u939_41 33FE                                        i2u955_47 3F90  
                                      i2u956_40 3FF8                                        i2u892_40 3032  
                                      i2u964_40 55B2                                        i2u876_40 645C  
                                      i2u884_40 5F6A                                        i2u948_40 355A  
                                      i2u892_41 302C                                        i2u964_41 55AE  
                                      i2u868_41 535C                                        i2u876_41 6456  
                                      i2u884_41 5F64                                        i2u948_41 3556  
                                      i2u956_47 3FEE                                        i2u957_40 403C  
                                      i2u893_40 3034                                        i2u965_40 55C4  
                                      i2u869_40 5380                                        i2u877_40 645E  
                                      i2u885_40 5F6C                                        i2u949_40 356A  
                                      i2u965_41 55C0                                        i2u869_41 537C  
                                      i2u949_41 3566                                        i2u957_47 4032  
                                      i2u878_40 6624                                        i2u958_40 4060  
                                      i2u894_40 304A                                        i2u966_40 55F2  
                                      i2u886_40 5F82                                        i2u878_41 661E  
                                      i2u958_41 405A                                        i2u894_41 3046  
                                      i2u966_41 55EE                                        i2u886_41 5F7E  
                                      i2u879_40 6626                                        i2u959_40 4062  
                                      i2u895_40 307A                                        i2u895_41 3076  
                                      _RCONbits 000FD0                                        i2u896_40 3096  
                                      i2u896_41 3092                                        i2u897_40 30C4  
                                      i2u897_41 30C0                                        i2u898_40 30D2  
                                      i2u898_41 30CE                                        i2u899_40 31FC  
                                      i2u899_41 31F8                       __size_of_SPI_ExchangeByte 001C  
                              lcd_draw_string@k 010E                                     ??i2_strncmp 0007  
                              lcd_draw_string@x 0100                                lcd_draw_string@y 0102  
                                   ??i2_toupper 0009                               ??_PIN_MANAGER_IOC 005B  
                                     _vfpfcnvrt 00A2                                       _xtoa$1860 0115  
                                     _xtoa$1859 0113                                        _SPI_Open 5BA6  
                             ??_TMR1_Initialize 008F                                      _ADCON0bits 000FC2  
                             ___wmul@multiplier 008F                                __CFG_SOSCSEL$DIG 000000  
                                      i2___wmul 67E0                         __end_of_lcd_draw_string 5046  
                             i2_TMR0_WriteTimer 695A                           DATAEE_WriteByte@bData 0091  
                                      i2_printf 67BA                                    _isspace$2463 0095  
                                      i2pad@buf 0015                                        i2ctoa@fp 001E  
                                     msDelay@ms 0090                                        i2dtoa@fp 001E  
                                      i2_strlen 662C                                      vfpfcnvrt@c 0143  
                            ?i2_TMR0_WriteTimer 0001                               ___lmul@multiplier 008F  
                                   _INTCON2bits 000FF1                                       copy_data0 5D62  
                                     copy_data1 5D82                                        i2fputc@c 0003  
                         ?_INTERRUPT_Initialize 0001                                        i2fputs@c 0010  
                                      i2fputs@i 0011                                        i2fputs@s 000C  
                             ?_DATAEE_WriteByte 008F                                       _vsnprintf 5046  
                                      i2otoa@fp 001E                                        i2stoa@cp 001C  
                                      i2stoa@fp 000C                                __size_ofi2_fputc 00CA  
                              __size_ofi2_fputs 0044                              ??_DATAEE_WriteByte 0092  
                                _turn_off_value 01C7                                        i2utoa@fp 001E  
                              __size_ofi2_putch 000A                             ??i2_TMR0_WriteTimer 0003  
                                    _EECON1bits 000F7F                                        i2xtoa@fp 001E  
                           lcd_draw_pixel@color 0092                                        __Hrparam 0000  
                                    vfprintf@ap 0150                                        __Lrparam 0000  
                                    vfprintf@fp 014C                               _ADC_GetConversion 636A  
                            __CFG_BOREN$SBORDIS 000000                         __size_of_SPI_Initialize 0012  
                       ??_OSCILLATOR_Initialize 008F                          __size_of_lcd_draw_char 0182  
                            ?_ADC_GetConversion 008F                               ??_TMR0_StartTimer 0001  
                              __size_of___aldiv 010E                                __size_of___aodiv 018A  
                              __size_of___aomod 0166                                     vsnprintf@ap 015A  
                         i2___wmul@multiplicand 0003                                __size_of___lodiv 00F2  
                   __size_of_EUSART1_Initialize 0046                                __size_of___lomod 00D2  
                                    ?_vfpfcnvrt 0127                                      snprintf@ap 0176  
                               ___aodiv@divisor 0097                                        _adc_perc 00B1  
                               ___aodiv@counter 009F                          _IOCB4_InterruptHandler 00C8  
                                _lcd_draw_pixel 687A                       __end_ofi2_TMR0_WriteTimer 6964  
                     ??_EUSART1_SetErrorHandler 0091                     _EUSART1_DefaultErrorHandler 000000  
                           ??_ADC_GetConversion 0091                                __size_of_msDelay 0038  
                   __end_of_EUSART1_is_rx_ready 68EA                                __size_of_isalpha 003E  
                              __size_of_isdigit 003A                     __end_of_EUSART1_is_tx_ready 6716  
              fp__IOCB4_DefaultInterruptHandler 0000                  ?_IOCB4_DefaultInterruptHandler 0001  
                              __size_of_islower 003A                                __size_of_isspace 0054  
                                      __ptext10 00A2                                        __ptext11 2D14  
                                      __ptext20 449E                                        __ptext12 5E7C  
                                      __ptext21 40B0                                        __ptext13 6464  
                                    _T1GCONbits 000FAA                                        __ptext30 57BE  
                                      __ptext22 2A0E                                        __ptext14 649E  
                                      __ptext31 690E                                        __ptext23 62E6  
                                      __ptext15 63EA                                        __ptext40 4F0E  
                                      __ptext32 6862                                        __ptext24 4C44  
                                      __ptext16 3882                                        __ptext41 4AC2  
                                      __ptext33 3A9A                                        __ptext25 462A  
                                      __ptext17 561C                                        __ptext50 6806  
                                      __ptext42 6328                                        __ptext34 5FF4  
                                      __ptext26 5EDC                                        __ptext18 5264  
                                      __ptext51 66C0                                        __ptext43 60EA  
                                      __ptext35 6512                                        __ptext27 588A  
                                      __ptext19 5446                                        __ptext60 693C  
                                      __ptext52 6740                                        __ptext44 6138  
                                      __ptext36 6792                                        __ptext28 64D8  
                                      __ptext61 6946                                        __ptext53 68EA  
                                      __ptext45 687A                                        __ptext37 25D8  
                                      __ptext29 6186                                        __ptext70 697C  
                                      __ptext62 68AA                                        __ptext54 6216  
                                      __ptext46 6828                                        __ptext38 654C  
                                      __ptext71 67BA                                        __ptext63 5BA6  
                                      __ptext55 6928                                        __ptext47 6846  
                                      __ptext39 5C5A                                        __ptext80 56EE  
                                      __ptext72 5E18                                        __ptext64 61CE  
                                      __ptext56 68FC                                        __ptext48 5CE2  
                                      __ptext81 5356                                        __ptext73 1360  
                                      __ptext65 636A                                        __ptext57 6970  
                                      __ptext49 5156                                        __ptext90 5A1E  
                                      __ptext82 5532                                        __ptext74 32E6  
                                      __ptext58 625C                                        __ptext91 662C  
                                      __ptext83 493C                                        __ptext75 5F3A  
                                      __ptext67 6892                                        __ptext59 6932  
                                      __ptext92 62A2                                        __ptext84 42AE  
                                      __ptext76 6584                                        __ptext68 6692  
                                      __ptext93 5954                                        __ptext85 3002  
                                      __ptext77 65BC                                        __ptext69 609A  
                                      __ptext94 6950                                        __ptext86 63AA  
                                      __ptext78 6428                                        __ptext95 68C0  
                                      __ptext87 4DAA                                        __ptext79 3CAA  
                                      __ptext96 3EAE                                        __ptext88 47B4  
                                      __ptext97 6048                                        __ptext89 5F98  
                                      __ptext98 65F4                                        __ptext99 67E0  
                              __size_of_isupper 003A                                        _lcd_fill 5C5A  
                                      _lcd_init 25D8                                        _lcd_send 6828  
                       TMR0_WriteTimer@timerVal 008F                     DATAEE_WriteByte@GIEBitValue 0092  
                             ??_TMR0_WriteTimer 0091                                __size_of_strncmp 00EC  
                              __size_of_toupper 0060                                      ?_vsnprintf 0154  
                                 __size_of_atoi 0210                                   __size_of_ctoa 005E  
                                 __size_of_main 02C2                                   __size_of_dtoa 0306  
                                 __size_of_otoa 01FE                                   __size_of_stoa 018C  
                                 __size_of_utoa 0218                                   __size_of_xtoa 02EE  
                         _INTERRUPT_S1_CALLBACK 609A                           read_from_usart@length 00A5  
                     __end_of_ADC_GetConversion 63AA                                       stoa@F1152 00CA  
EUSART1_SetOverrunErrorHandler@interruptHandler 008F                           lcd_draw_char@bg_color 00A0  
                                      int$flags 005F                                        _vfprintf 5DB4  
                         lcd_draw_char@fg_color 009E              __end_of_INTERRUPT_InterruptManager 009E  
                    _INTERRUPT_InterruptManager 0008                          __end_of_lcd_draw_pixel 6892  
                                      _snprintf 6662                                       printf@fmt 0154  
                      __end_of_lcd_set_cursor_x 6186                        __end_of_lcd_set_cursor_y 6138  
                   _EUSART1_FramingErrorHandler 00C4                             __CFG_INTOSCSEL$HIGH 000000  
                                      msDelay@k 0091                                ___aomod@dividend 008F  
                                _vfpfcnvrt$1874 0135                                  _vfpfcnvrt$1875 0137  
                                    _INTCONbits 000FF2                                ?_lcd_draw_string 0100  
                                      isalpha@c 008F                                        isdigit@c 008F  
                        ??_INTERRUPT_Initialize 008F                                      vsnprintf@f 0164  
                                    vsnprintf@n 0156                                      vsnprintf@s 0154  
                                 _lcd_draw_char 4AC2                                       snprintf@n 016C  
                                     snprintf@s 016A                                        intlevel2 0000  
                                _lcd_set_cursor 6328                                ??_TMR0_StopTimer 0001  
                             lcd_set_cursor_x@x 0092                               lcd_set_cursor_y@y 0092  
                                      islower@c 008F                                        isspace@c 008F  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 693C  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 6932  
                                    _RCSTA1bits 000FAB                                        isupper@c 008F  
                                     strncmp@_l 008F                                       strncmp@_r 0091  
                              ??_ADC_Initialize 008F                            read_from_usart@value 010A  
                              _SPI_ExchangeByte 6846                         lcd_draw_string@bg_color 0108  
                                      printf@ap 015C                              __CFG_WDTPS$1048576 000000  
EUSART1_SetFramingErrorHandler@interruptHandler 008F                                 ___aomod@divisor 0097  
                       lcd_draw_string@fg_color 0106                                   ??i2_vfpfcnvrt 004B  
                               ?_lcd_draw_pixel 0092                                     ??_vfpfcnvrt 012D  
                                      stoa@nuls 009F                                 ___aomod@counter 009F  
                        __size_of_EUSART1_Write 0018                              _eusart1RxLastError 00BF  
                    __size_ofi2_TMR0_WriteTimer 000A                                  _vsnprintf$2581 0160  
                               _TMR0_Initialize 6740                                        strncmp@l 0096  
                                      strncmp@n 0093                                        strncmp@r 0098  
                                      toupper@c 0095                                    ___aldiv@sign 00A4  
                                   _SSPCON1bits 000FC6                          __end_of_lcd_set_cursor 636A  
                                ?_lcd_draw_char 0098                                  i2_isspace$2463 0007  
                                  ___aodiv@sign 00A0                  __end_of_PIN_MANAGER_Initialize 625C  
                                   ??_vsnprintf 015C                              i2___aodiv@dividend 0001  
                           __CFG_BORPWR$ZPBORMV 000000                        __size_of_read_from_usart 00C2  
                        ?_INTERRUPT_S1_CALLBACK 0001                                 _PIN_MANAGER_IOC 6892  
                    __size_of_ADC_GetConversion 0040                                    ___aomod@sign 00A0  
                               _TMR1_Initialize 66C0  
